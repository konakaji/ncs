beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.qdrift.QDriftEstimator
  N: 8000
  _ancilla: 3
  _targets:
  - 0
  - 1
  - 2
  ancilla_mes_method: !!python/object:gqe.measurement.AncillaMeasurementMethod
    hamiltonian: !!python/object:qwrapper.obs.Hamiltonian
      _hs: &id001
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      _nqubit: 3
      _paulis:
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XXIX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YYIX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZZIX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IXXX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IYYX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IZZX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XIXX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YIYX
        _sign: 1
        matrix: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZIZX
        _sign: 1
        matrix: null
  hamiltonian: &id002 !!python/object:qwrapper.hamiltonian.HeisenbergModel
    _hs: *id001
    _nqubit: 3
    _paulis:
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XXI
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YYI
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZZI
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IXX
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IYY
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IZZ
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XIX
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YIY
      _sign: 1
      matrix: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZIZ
      _sign: 1
      matrix: null
  initializer: !!python/object:gqe.energy_estimator.initializer.XInitializer {}
  mes_method: !!python/object:qwrapper.measurement.MeasurementMethod
    hamiltonian: *id002
  nqubit: 3
  shot: 0
  tool: qulacs
lr: 0.0001
n_samples: 100
sampler: !!python/object:gqe.energy_model.sampler.NaiveSampler
  N: 8000
  all_paulis:
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: 1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: -1
    matrix: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: -1
    matrix: null
  beta: 10
  evolution_map: {}
  lam: 12
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3NjExMnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDc4NzYxMTJxAWEuhAMAAAAAAADeBnk+plFOvgCXyT2A2vw8WB5BvcgFZL36gVs+gjFg
                      PoONBL6Oggu+cFaAvkp5cT7wI5e9cAI7vtATpj2UsY+9s1iLvh4DQT7I8Z2+8xwzvltbiz6DxxO+
                      2uiSvgAKIT17eAu+SNkmPt8vkr6PiIA+e3GDPp+WpL6AICK7TLb3vT2fnD64zV6+iLxbPfslmL5Y
                      uG+9bKXcvb7ZCb6gJiK9zU2RPgD38r1gmAG8LqJQvjeymz6kgsw9MCeSvVqHi74gISi9iCQivYC1
                      Gb4af5e+QIl4vvBSwLzlCJ4+StMUPuAwub0AJja6wCHavADSLjv4bF69QDTmvD7TBT6ArvQ9LYef
                      Pqx9573g+ja+kDOTPeSUpj2mtxa+u7oWvvsWC764qGa+9l+/vVbfa75iuoK+l0agPhpCBj420lS+
                      etRRPhvCWL5coI6+W0E9vlqPHz6/eIU+B9uCPuLCHD6Xgac+W38NvgC2n71rS6A+9hXjvb6kHr7k
                      U5m+xO2AvQCOvTti61c+pq1qPqSqvj2Ed9c9VJqCvnIkIT4YvGk9XM7cvXNuh74E/YS+I4ZevgcS
                      iD5LeVm+wFb9PZZ3TT4gW2082L5RvrlGjj7H0ou+oIOQPYApcz1gQkM8S5GVPowwzz0wjXm+xsfj
                      vStsVr6mhhC+5jBFPmwZtL0j+0y+TASHvSOLT761TY0+4xSLPivXBb54qQi+jI7OvSZDfj4ALLc9
                      jLuEvpj6Fr11LYc+TaaZPiBNHr5wB4u9khuovtboez7KeqS+AJMqvEBtNL1iy3o+mH4bPcDWpr3O
                      LRM+8hlwPpIMeT7LxIs+2lRyPnDihr70n4m9khdhPkfhgT5CAaO+IhJjPsxVvT00uoK90qddPupn
                      Lz4WG3k+4L9TPD5CFL4RnJA+aTeJPhs9ir6wcMa9y1s5vlxRhz1LvTq+MFnevHO8gD4oAWe+q00N
                      vuJ9TD4g6e+9wIasvFy5jD28B+W98LmSvMh/T76bOXe+AJuBvgCSqrviqY6+EHq4vPh0FL2acks+
                      IupxPkaifb7gEAO+Qhg6PqAdVT2IvJa+wPv/vG86kr46Dk8+8FYaPr5Omr4Aksa9OMMVPuoIBj4/
                      xaU+QDkdvUieGD1MSey9ohUuPnPWRL7AAke+40JvvgDgmLzwnn6+cBdAvsCyt7u2aay9mzGJviqQ
                      bD5A0uu7gGUMPZ6ahL7YMRq9cMwMPsk4nj6YGAQ95ZmKPmBBM7xY1TC9UF1TvhVOoD6gci88MBiX
                      vvU0nz64lRM+rJaXvWAofr1OmXg+J5iGvnheCj4CGmk+IPxpvrOknD74nhy9AAsJPCCDXDwk6Oc9
                      2QqdPoA9X74rioW+7jRnPnjMeT2ODhY+YwoevnD68rygqAW+kyejPs4NYz4YJkm+wF4PPlN9c76M
                      ddi9oPwFPKY5o76mbhg+QwCDPrikJz7EIoU9ktNKPiAbQr3q7HU+TROOPrDAU77edRK+QFW1PLxV
                      lb0sV6a94MNLPZz6hr7nEI4+qGYQPnwEgL0cQre9nlwOvsyk9z1Gw34+IN6aPSKDhL7Ag/y7RBWn
                      vnDGxLyg2kc8XpADvkqEIT6Aghu7yDlBPdSkrD3Gsgy+jncvvgbVGD4mhQ6+jEf7vWDweLzHdYK+
                      tlMpvjAX3r12rCY+vrRBPkn1ij5kF52+F1Ghviy/iL2O3iC+c3KnPjEvqj4AWCq+k/ZvviCsf7wA
                      78s8gSmkPhuHhz5Qics8VmwOvmSjnz0zJZM+fMamvjEzhz7G/NG9MOn8vATKoL0OTnI+t6qHvtqG
                      aD4f/KW+dnJCPmZ7Tb4FqpQ+d9WLvmYUwr0Adly7UOKNvCAvBb5lzKY+O3OFPtpeaD6z8IG+GJ8v
                      Pco8fz6Di2e+Iz4kvpqrWj7wgsi91e+KPizVsL14vTO9wzGCvkAKNz3yKaK+0NLWPBw4rz307uY9
                      iFR8viDiyT34LYu+QgNSPkB0ML2AgCw8dEGjPZDn6z3XA4e+vupuvvhzFL7jTXu+tjNJvgYpkL5G
                      Bky+kCfsPBhDcD2Qnla+G+efvgClgLogKh++zBTUPUR+mD23CKq+YG0DvsiMAz07fg6+qj5UPsXP
                      iT6enHO+vrRsPgCTaDxMONC9/uZjvvCN6zw8fOo9duQDPlv3Tr7asDc+6Ek+PaC4Ur1a7GE+6jt2
                      Ps94pz46xlM+cNmiPdBOlz3ADp49ynV4PpwA7L0wKaO9HlAdvhpbfT5+Wm4+6V2hPsHLnD7OCCK+
                      kr+mvj6CNz5EhOw9IEaQPQgIN73agpu+h7CYPljrXb549AU+wFmxParhMT5Wdis+cOnbvPZ5zb1o
                      V1I9i3+YviY1a77rpRO+AOfau3prfD7QApU9Lg1evhAn8jzA5IG8Kr2bvhqybT5W92k+vltRPvex
                      lb7AY/a7gkNcPt+LnT74DVk9YBRXvWCVFLzae0k+JkmEvjy5pb54Sky9fpGLvqIeDT7YOle9Tqs3
                      PmoVaT5A2KI8AEuNO6QThT0ck7u9xuGuvdYGET7Idi++Ssk/PopkgL6A7VA8aNRPvezRxr1emWA+
                      4y1KvkPMBr7GE/u9Wk1jPsBeSL4QRfe80lJpPtKQVj6TexG+aUGWPvuTiD42YjS+KLlLPQAl3r3u
                      xC8+uMtmvrJnTj7dxZQ+uI0svbo7fj5NK6c+zUWHPlEOqj78QL49GLgkvUP5Xb7QBNw9ClhtPmig
                      IT0of1S+m68pvvkEjj77zqk+XqByPiaqQr6j4ZE+viUIPs4eHD5DZag+mgipvlnvgT6MV4A9aAmq
                      vlAsob3YjwM+piZxvnNkmz7Y32I93kqOvqAS072IVzy+AE5dPKDDGj5AGmy95lROPkAdkLs6bXA+
                      4CU5vDxlxj1gila81VuUPuJXZT70WuM9MBMVPjSmqz1W/Tc+SNwJPfBkgL7SBWs+ttDPvbTPqD0+
                      3Fo+AJeLuj2Jnj56Wyo+gEMzOw4/L74rmYI+4hp6PoCVz71mFbS9wJQyvpo8Wj5Zxo8+Q8WkvnY4
                      Hj6e2Gs+7Kanvbn/nj5ckaO+oqwNPiOejz4WcfC9W/2QPtrSTz6QPZ091sB+Pg4Tej7eQVo+OHdu
                      vTrWXz5IFhe9ohIDPrqNXD4ziny+2+ZpvpCDhzweygQ+8p1qPpjafz0zqgu+yHZsPYAkI76Ab2M7
                      IC8TPQNAHr56iys+2ohoPnfQg77YPkO9igOVvpUQlT7DhWW+AFhovAA/JbwEM6W+EIWyvMLBbD4W
                      kCy+lr4AvlZUkr4k3bg9PCDAvUAa2D0gsxw8KdigPgCwwTsUTJS9QhkmPohnFr7WOca9IL5kPShx
                      ZL6HQY6+GnJGPgPWcb66glM+4QaDPuoyPT5cCM29TQCoPvA4yj0Av7e8rmFgPm6ROD4uAZC++KSQ
                      vs7kgL4I6BA+iLhAvepIED64DCY+PoUKPqG5jT4+Iic+wOuou55DZT7hVZU+lYCXPjIfNz7hHIc+
                      eeKRPog1Ez12snY+4AFfvb4POL5A0nE93ImHvjBWyD1ytUg+Po5OvjuuXb44Ywi9AGjuO/K9lr4p
                      Qps+ytwFPpo3Pj6ML409gLyzPfjdZj2G8N+9IN8dPmwVgL1rtZw+/caUPlQZ9j0RVoo+6E5IvgAY
                      VDn6/qm+9OObvcvEfb544ku+NmX+vRi/lL4IgCY9WmuZvoHqpD48qt+9AB4/OsB0Vz32Bzq+s1Av
                      vlpSVT56qU8+qMQYPu6kWT5AlYi828GKvmDRBz1AO7q8wPa8O/oZj74w+kK+wOaEvbzi3z3E1+49
                      6AZVPZe5lT47LnO+0LCLPfxnor2ZNqQ+IE1evNr+WT6kX6c9XTmlPubU/b1ALty9iEVHveAf9D3N
                      raY+VmcKvlkCoj7cuJQ9ELaUvv3Ukz5qdCQ+QDSfu2FFkD429A2+CtNsPhw0p71JDIs+e187vnZs
                      fb4zD2i+aBF1vkidJD6AC3g9sCSIvM4IRT4OHRS+4lUkPiqPiL4pjJs+y+ODvvMegb7gtkG9E2pS
                      vqDyZb23YaQ+qJFiPUZpWD7WSdC9WMdyPUBeeD0wcyk+wgVvPpgcIz1J7ZE+4D8EPsDbIz3Q5BG+
                      FL+kvhTejb5vBai+QGygvPr9HD6DC6q+UK75PE92jT7KKTw+GLkHPWKfgr7gJ108ZIyZvZOnEL5s
                      FZU9kAugPewynb0Ajjc9rcGKPni7VL6eWRI+uX6SPtCQpr5ALpa+HTeDPjBLgb3w2o6+voY8PjZP
                      CL65GZ4+O812vuj3jb6T+4w+NRyQPlv7YL5ekk6+i54ivlJ/cD6cWt49DhNXPoTduT3wvPY8AG9r
                      vAC2KL7Kmmw+urNAPrGzpT5Lnqg+49Bfvi5XbD4zjDq+XsZKvrasPr76dgc+WlGavmLUZz4IAna9
                      m3govnKHUj7QAZc9nADAPRi+er2emmU+H/2UPszk6b1AEJa8eFkWPnrwND6TEHq+cBYXPoNBoj5M
                      9t49iLUxPRRyuj0WvmO+eGwKvsB1M72ve6O+l8+PPmrdOT7+4xO+n+invgOMYb50i46+iFCBvg5N
                      f75dJKQ+ULPQPFPTW74Yqki+botWviZaK76oYmi+MhChvqJAEj5K0hk+oFsuPRL8OT4g7T880EnU
                      PcKWkb7GDS4+M+KNPtvZnj7zjJQ+asR3PsR7jj0wfLO8LVumPji7bb6puZo+w+NtvoQH6D2gRMY9
                      gK/FPbldmz7233a+sHm1vQJNLT5qIkg+W70RvqYkob4JgYY+4HZzvguwib4T/4c+SHYsvrywxD2X
                      iZm+Zi4/PgZ0or4dZqE+ACAeuCBCFbx2XiY+IJXePajGYL4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3MjkxMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0Nzg3MjkxMnEBYS5kAAAAAAAAAEDo6zwoNG2+QtJePgBCmL3+hEu+sJO6PMAmv7vCepy+
                      GBkAPWhva75ONTY+rI35vYD0tLySsyo+LEOZvnwwg75CcS8+a7gOvjcamD5DD4o+dq6UvmBaUDz6
                      7aS+yyQjvnCz0zwgbLy95nJGPsWAqj4AHDs8PPmnPaNkhT4glEC83voJPut7I77o/kU93HvPvXo0
                      OT7i4Wc+5Gr4PQ5QkL6lOZ0+MF48vujzdr0Wm1w+Hx+fPiDAD76ZOZo+IYqYPo5xfr4snqK+kDP3
                      vH7SJr7YwEO+SvGgvgyF0T1eTEa+dc6FPpt1oj48vJ++Auw7PnMZLb7qim0+ONQnvkYcQD72nmY+
                      EFuQviJYIj7TUUC+QAv9vYVSnD4GY2K+IoQ3Po4JYb6Mbta9qN9mvVL3Tz5byBS+6xOWPvA/p7zu
                      pjO+4I6hPaSbkL4DqZC+pF6SvYDkdTu2FHU+4PgZPYZ6ir5+Xy2+UjCcvq7XYb6wPWS+Jvw6vlZT
                      Y77cD7K9pigIPpiGJz4lF5I+3mOivjr5kb4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3NjUxMnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDc4NzY1MTJxAWEuECcAAAAAAACgLWE7aMWEvFUihL0w7qO7yyG5vUvQhD2+bQM9Kn/M
                      vXMBvz0Dvnm9G621Pe6cJT2AdZS6zeijvfThhTz84oC9VjWqvWVCob3dHIk9ndMfvaPmnz15bJc9
                      1NCMPEAFIzt6wWk9v1iOPQsNxj1OmCU9cwq1PQg3vrzRA5496JjRvFAqV7xgP8Q8jCuyvDIqBT0A
                      BLc78/CSvZ3HZr0gEI87QmJ9PezLkLwAdjW7eBLUvEi9hLxIc/G8tf/DPYKlSj2HeJg9U/BCvWfm
                      mz3YgK+8OMC5PEYxpr0evlk9jcyKvWrBcD1gz8y8WAKLvZS+nLywNLm9mV6PPfhkkDwdrlK9amYW
                      vWhqXbzPV5k91a6/vbhfsTzA5zW7cxd6vcNHRr1G1Yi9WFMVvPdqiD1QRd478Do3vV5ajr2DRpQ9
                      ajBxvRtSij13lMM9ZukNvYmtkD3NPjy9AOghuqBKaLsK12m9jRidvbLBTj0A5uq86UKNPQD7Kr0w
                      4VC9AwRYvaUvgT0Nc0W9gETLOiLmaz3AAKi8miU9vQCM97rQKFS9dEcSvXEMiD2YTR+8bmVhPRbU
                      Br0gq++7xrlGPSi2+7xZkcg9Lrinva+1uj3Q0IC9GjoQPeSl8jyosRa8gfGoPWN9Qr2CsTE9bJ7h
                      vEC8h7yg4n27sjs9PbhC5LwC+C49oClou/TJmTyoTqC9YAXpvIPrPL2SB3g9ouNTPZRO0bzQIIe7
                      APtouldIkD1YzfW8QG2hOvDWE7zIyYW9vc+APQBQejl6+RC9jJWYPP0JVr1w+m29/ckxvXDQGbwN
                      uCa9/TsqvcSP+TzbKIU9eCvHvDnZnz36EgO9/l4dPW5fh73SyoS9sBIqvDwyFL0D7mS9tTuFvSdZ
                      zD1mrZS90u1nPf96u71do449DJ6ePG+ouT085888YPFwux2LgD1QWio8TjNoPUDhT7z7Lso9ULJI
                      PDaIEj3qRzW9s37APSmBnD2Gf3g9cK2pvUGTxT2aV0C9GB/LvKFcjD28qQa9096RvaK/Fz24JoO8
                      gONRvWCTqztnyz69wt+UvdAzwTvyllI9GtYHPeFnqD1RhqA9Oe6/PfVGtb2AK9A6QLXMugrPxr3e
                      jjA9E+yivThJkr11RYc9LSolvdlFjz04vbw8SK21vfT2mbxoeXu8tILpvCgwVTx4hp88MVyYPZ1v
                      hj1oeaW8kAQpPKCMtTxKTKm9VkSqvWj4hrwVgqI97vBkPSKoBz1U94E8D1+7PeCosbu0AdE803Mw
                      vcB0/LrjiZu9mtpovSogD72ISYc8qReFPSAzyDzKZx29CFH3vJfUHb2Cyz899rCBvUCYqb1w5Ky9
                      7a+1vXK0IT0vusq9AVOfPUqRVj2djl+9Dn+mvR0kfL3lboQ9qcOYPbNZr73wLm29oHPoO+YmHD3T
                      22K913YkvTht0bwTfSi9GuUNPdwM/jyYHoa8sMSvvee0ur0FCY09F5DIvRahTz2imjY9ABelvOkv
                      sT0pnJU9V0ufPTb1C722dBY9DGKlPFrOt73S/B49eYCDPSaCCL19q7I9gDYCvefSoT1pFrc9Fh+T
                      vWxNqLzg+bs7kvtfPZ2NG72n9K29eh+uvTMTdb0GCXo9GIWkvKHUyD1pjJ89ENAdvMDMsb1hYa49
                      bwqgPaqTPT2InqC8Ai1QPYPDG73nGao9cp3JvYB3NL3y7aO96vNivZg1tjxAA1u9MH97vXRD0zzy
                      RwA9L/+zPQLtMz0bKLC9wGMKPCOFkT3yqDk9O7LBPcDcZDtHPLi98JGRvSvix73UGKu8xoybvdgg
                      KDyCXGc92CVvPHQV4DxsW588QdOlPd2vYL0xB7c90bWvPU4/BT2+Ljs9llNUPeC5Ur2YQws8tMmU
                      vHAyPrymHZS95q8FPf57qL1oC4+9H4C+PUCYMjytWoI9II/7Oy5YYT3Mt+g8B6S0vVWKob2JKKs9
                      fCgUvdTb+LyVu489F8DCPdHDtT29Tz+9Ep1IPYA0jLuQ0Qm9Ey2WvQPLQL1zlz69HCvRPIDR2DuJ
                      Msg97IuOvIDJ/LzK58a9AO/6O9C3a73IaNK80B3QO8Rm9jwlqbE9o+0xvXrqMb324V89tuSkvVPg
                      s73AThE7hTWzvdCIpzuA8XG9eT6qPUojlL107/U8p2orvbhNrbzAzTS9UKiVvaYVcj1nHrI91LTn
                      PFU6qr0DHpg9QJNGPBrqor0AO1e6egU3vYeSyT1AqSE8k4GPPSeRc72mJXY9nJcPvdhg5bxtzcG9
                      NxJzvWy/u7xdKJ09JWqpvWhIgL0YU/e8WNJtPLf+NL0SmFg9IJBQvSPiKL10RfW8c8zAvWT01Dxt
                      u669kgdbPUlzqz14JrC9IQq7PUD1QLunOqQ9gDk9vQDPhTwAhhE7NX+YPTM7yT0BT6k9z2OcPVhX
                      nr3AzL66KChRvGC2v71DhSS9Y1W6PVpqCT3juZ+9Z+kavaB+X7sIQ8u9yvS/vbVwh70qJEe9qX2A
                      PfpPNz1VKbo9zdJhvc/9tb0IdaS89fS9vR3aJr1AuG08w8duva/dwL2D5Kk9Hd+vPb16ir3aco69
                      FFn5vArwHL3ld8W9jm9sPUUkrb1YdMy9x8zDvcEghj0StCc9oPNhvVCGy7tdD0i9CqVgPV2Seb1o
                      v/+8KAWlvXUXmT17E5E9W6WyvZqxaL00Rqk88O6KvfAvJzyGg6a9mQKWPVX+ib3lssO9EqgfPRd6
                      zD0ADwu9lqp1PTeSWL1b/a49wOerPNB1/bsFosA9lrdePdA8qbs1qa09YqNsPadxtz3UvJA8UNa9
                      uzAOFr386oi9LSnEvV6HLz2g1T+9g3xbvWB4A71H8UK9U6l3vairTrxKv1K94Eq8PC0cqr1sosm8
                      Ko4avUOHrz0txa49DUYbvdqMCT1ee1w9O8qTvTAFmb12awA9UlQPPdcvtL1gkW87DjAAPVKxMD3a
                      zli98O4OvVDd/LsfRYA9CEDQvCsrqb2dHSy9WJYOPHAZBDxmGBk9ChtivdYoJT3Z4YU9FEXSvA2e
                      Vb0nq8a9JNjUPKAKsLv39MY9MnpTPR/LyD1mdIC9AgZzPRCXOb2Un4y8Hc+6vT8qtj1jRbg9QvVw
                      PaMJeb3gU987g/tNvfbZAz3Qty08BqUFvcJsdT0p0Jo9aroAPSOLpz0vQbK9nJ2LvfkYvT1oxky8
                      ZxFnvQgU47wi+h09mHbZvFg6Fjw/Y8M9etQpPRfYkz2CLHA9AAyBOyvRsj3xaYo9cpg+PSrfCD0H
                      v5k9YaqLPURZ2jyq7nG90Lf3u+jWQzzWChc9ontAPfBMVbwobha8KiKEvV8Kyz06jwg98AsBPP33
                      J70U9e28PCXpPIBPlbz8WfY85QO8vaBIjjwmW5+9lJb2vDgugDwAcVu6hAHQPEYqLT2yiFM9zTVv
                      vfbOdT0AIPS35MD/PDcOKb39F2m9IDaxvcgxob3UkJm8JLTRPPD2h70ogCI86Na1vKzQkbwtKcA9
                      yN3KvZb9Nz1nDZM9lb+SPY03J70DEjW9E+Q1vRVNqL3A7Xu7sKsevEBevzwwh8Q749rHPT18mT2P
                      Jsg9dDwNvdL4Iz1UZ9c8SCaUvYALGTxRcIs9znaSvUdMfb37mJy9JR2LvUDeWDxZOqM90N1XvOzC
                      pzw4UIe9E+9tvXZ4Bj2DEqu9s4RbvW1Jxr2etEE99O2GvH6eoL2h/aU91d+JPbOWnj0vHYw9iGCT
                      PLIGuL3dxcW9LuJ3Pafpyb0Ueq08sG8DvFCDrb2evCk94Ca9POD1uTvQsJw7beiOPclWhz1UG468
                      DJiNPFqfzL1fnoY9PQVRvctelL2y0389t5Y3vRr/VT3pHKk9m/6UvXhSlb0R2589Nnw/PbsRuT1d
                      qYC9O+vLvZe7Wr1jmJK9ADQ6PMcMb71sBY48tUu2vWrWlL29zY49qkASPdLpOT2CeHw9GIKSvNC/
                      8bsg0om9mCoBvJSYyrxGD6m9aiRrPWYLID27vZQ9AAlUvA3CwL0gCIq8yCSRvPQJjDyySAg96aCJ
                      PRDzSrx3oZ89rlloPflnsj3Gqlo9ZrYePUDZkLxDL6q9NfWtvdfEM72DBli9CgFpPbDe9bvdfpu9
                      uR6dPXnknj2x65099dKtPWoOfr3sBIq9mh0ZvUCTkDxKOz29fv9wPfD2BbwbXJI9U0exvRvztz0L
                      eaI9SOH0vACWaL3oE068qp0yPTNuUr1pfcQ9oMshO/LKRT2i9AU9hWWYvcFbwD0E0Qm9V8CDPWy5
                      srz0pf683YhPvYCpqzrn7He9mKPmvG+MnT2gsUa9dstiPaz477xZUb898ll8PVpVwL0QUXy8oLlj
                      vaEZtj3AEs26/ZGcvbivjL3ik3E9avJCPeB0y7tGFKu9Po0XPU4UFz3xxps9Cnh9PSeOM72PTqo9
                      oAuau2NClD1MAJK8WhCdvboMGr0iRjg9WemIPa2ZlL23gHy9H/vIvSJwMD0Yo568iiKdvaJdyL19
                      6EK94ZiVPe7VOj1tAUS9QVOePVCSHLxQI2W8p/JGvTQii72gNhK7MvhSPTesTb1Le8Q9ruV3PcBr
                      PTziYE49wsY5PfS35Lz8vP08s8mHPY5jej36SA896wSuvX7LLD23y3S9CfWLPVUknT2SKjg9GP0V
                      PMBDqL2dKJI9ABbcu6x2v7yDlVS9rA2wvBRxEL0Ehvk8kooJPXucrz16CSE9NN6uvPizhzyNQMI9
                      7K6cPMjG4LwUXeg8wM5PvSAfqby4P/68HRiEvczumbxAF8m6Jk58PQPzV71zeZy9wHphu0raHb1L
                      4JY9cKpEPHbsWD0LX5U9rBDKvGCt+juBL8U93uCSvbEstz0TEKC9caKvPdZkdD04M/K82NK/vPQX
                      7zxmOhS9lGKEvAj0m73K6iy9qCy4PEXEjz1p0rY9uUShPTGPuT0W2wA9Q02Uvdnanz3vF6g9mMaW
                      PHuNt70/NbI9qJeFPCj51rzJn6Y9kgiFvZTCnTxi+Gs9FD6mPAYLpL2y1Qw92md8PaAluztQbA68
                      fbbIvX2kL70N5aW9TUNwvYA+zjqZ1rI9APWYvHoNMj2eaqi9zNSLPGIuJz1p/cI9QKQivSBKh7zt
                      +ku94N4DvWqsXj0XXlq9sntWPXrUXD1Rccc9YD2QveyVyDzAvVa8jOrvPECLJbvdgnq9B9A8vQ2e
                      cL2oMGk8eilFvUCecTwsbtk8hjmXvagKdjy40pW8IvGSvUuIrj1iOL29+vJBvS4+jr25sL09KKkC
                      vChjvzzDNUa9HSKNPTatFj1QvgG8wGgUu3m2oz3aS1k9aLyEvEqSU72j6yO9vMEOvdC4jL1Q3AY8
                      FOegvNjqe7yvwrK99neKvRQ8w7zVFMo9k3mDPTdFvT3oxGU8/Q+rvXGUiT0GzUc9wKADO7aVk70j
                      L229KoFhPeL/wL1YQOW8K6nGvaCVoTsALk67EGB6vSyOAL0AIH06BMzhPJHnsz3Och09gBNePAAH
                      XLxd18u9KJb1vM/VuL2wMZ07AGZSPKkPjz0tibW9gX2dPdOOrD3AZIY8v3ygPbjSxTx6iDU9Kj44
                      PYCpQbqT/oE9AomxvTPqNr240bw8656PPZaqHj2wi3i8KsZqvbfjqj0wvN47MgWMvSmJnj3DGMY9
                      N4afPSgofzxQY/A7g+SOvaIiMT2QLHm8MG5nvKOXWr3Q/aW9QO9Qu767fj1H5Zc9yamzPUD6zLzg
                      ZYc8AKrAOijeTTyl+609O9a6vaAUEr2AXa+7APcUOkAmO71KscS9YO3MvKBIiTuwLWE8WDh7vOWA
                      gj3MuoC9xAQOvep2Lj2QFLu9AJaZvPcbrz2cPe88GHQgPIarUD0qdV+9HLGIvQiytbw3mpw9IIOk
                      vZgegr1Uw6y8WciUPe+8uj1wP1K9AMUsPCjY87yXI7o9wiF8PQpHVb2nj8O9G72HPYoKKr2E7s88
                      c2IvvfDGZTxT4Fa9vGfvPCNPwz0tbMm93jYEPVTAkDyALZm7un89vTAMsbvKgmY9Di5hPXJWYz39
                      mr49QEERvBPwqj1gXC67iU+MPWoGEL2oQtK8MEjyu1LTAT2Rrao9N0Blvd2GSL1XXb690umHvcBV
                      Nb0ycIy9IGCau9SYlDxOEqu93LT/POqFeD11X4i9jLXJPPuJrz0kZBi96CfyvKMQgz1gILq9wW+j
                      PZplFD164yk952xNvcA5QTvvwo89VJ6CvQXqib1iRVM9sGh6PI0GMb1Q6UG9g1CqPa1Dmz0H1Sa9
                      2DpvvIjrh7zthR29JBMBvfxsA73QMZM7PSOwvTJNhr2zxL69fSK1vYAMYb0wznS8IEZvvcWrwT0E
                      8xW9lKSuvDrMU70y40Y91ZqEPbndhz3amEi9Z9tsvfjr3LyZu8Q9S5WgvX51gL0PCZ49kPcFPAb6
                      VT2AJRS90aO+PerWcz0oy4u9gBi1uv8Ts71mSio9IgxyPQaPGT0AWqO66BqpPE07rL1gjSy9HpIN
                      PRhSprx9lYG9l/l/vb0Xp71QRiG8DYeovdQVyDzSZmY9NYSXPWPHxT2HJky9oD5MO7LLpL18ct48
                      Lh4rPSs2oT3IurW9fqs3PdFCiT132Ve9AmOPvWSg3jzWZgy9nQazPUnuxD0M9eu8YIAvOwflyj0O
                      jEA9GMVBvACtPTs6bw+9BlNePYAj1bqMYsI8SBOwPIgZ6LxAgxW74COjO8DY6LwLBaI9+ompvW6w
                      mr1jeW+9BjABvd/6ij2RDZo9ikpgvQLNmr0ylLe9Rz5JvUjehL1oPcG8gPdtvVD5vztovqg82EaZ
                      vJOGrT0SPAw9AmhmPZaRhL35c5g9TqoNPbKRp70y6Ss9SCKQPD2GuL0AFlS87S16vZQm7LzRZL09
                      tOQVvbRLBr2qqkq9tGYKvTDml7vAK047SvoRvVn3hT2CJQY9S0zGvTQRubxwED+9rGKTvH3OPb21
                      UrY9o0WuPaBln7uZGL09VbGBvUafdz23IB+9xRewvUV9wb1GpQI9bDXAPPbYVj30IZs88P9FvWl5
                      vj2blru9pG3jPETU8jz5Y7c9zhanvXC/N7yQeha8LTl3vY+Xoz2gWLS7rXaGvRhmDjyMZt+8SmCv
                      vT/Gw72A42o8GtshPUykwryMMOC8zTg4vccwfr0rRIY9hnmBvaBmbjtD84E9Pu9VPVe/yr31Qsy9
                      fqIaPSjJt71wtB29Kg+LvQZ1Az3/La89FECEvYC9lrsJ84I9hz7IvdFfoT0O3Bk9TPOyPE5Bjr3n
                      66k9ONOrvdecXb0DdSW9rpSHvUIwoL03pCK9EJiIvVio47yyj3I9wn20vXlblz1uXis9ARe4PXRk
                      hL3O51s9pzquPQiNyr3Aoyi84oJTPdilzDx4UJ+8gKkAugANDrxfiKY9gCmuvTKLRz2IJcg8/b+L
                      vQDBPTvNlTi9/gSMvUAqGDsB/ag9ZX3HvRsZsz0V3pg9UKrEu0R4GL2AuE485vYKvRjtBbwqkVc9
                      zgakvf2zrb16m0S9MCxavJqPOj0INJW8a+W0vV23nL3i2gQ9ugN7PUDuA71gks282amFPbcghT13
                      8VS90KIzvUCegDwRVcE9QHfvuowWsTwAIz08HSYsvSCFdb3EKNI8MGcRvQPwnD2LlKW9zCqcPEDK
                      TLyz7HG92JnJPCjWoLzF94K9mfOHPRV2ur25FYA9MMt6PEBGfLxag4C9L0C7PZiWqTz00ck87UW1
                      vYjMsbxMUYS9mNowPDlkiT2gi/a8NCHGPMXoiT3omJW9x2TCPVDMDLxnHKQ9BkURvRaiaD00The9
                      auNSPRgU5Lym7x89VvMKvaKEdD3YeJK9dO3JPO1ASr1sJqi8JYKfvcnyqj0qtnS9OjhRvSPUsj2A
                      uZg7V5qkPb7NfT0gmu+8F1NwvQCNezrS+Q09t6KWPdAwx73wnUa8Ft02PbV3gz3wkkI88nknPdD9
                      yTuzdsq9kGAcvbCy2zvEvdk8iBqcvSsDgT0Tf0i9wPKDugY5fT0qhHU9/iIiPbl5mj3/QJk9jM2C
                      vDA2jr0Jsro9enBRPcQZ8zzH36+9Kn7HvYP5mr2OZQg95PjyPIC1U7wKplq9aPaJvbnEhT3KLoK9
                      sMGEvZaiej3pMMU9Bsl5PZdKXb0wnM27jzWzPeEVoD13iq69Y0BnvZV2tL1ytmo9WMiJPIjknr2A
                      Kv278j5HPZZSEb30V+k8+txsPeQt2jxcvgC96QiBPZaLOj3+wH49yATWvPW8pr0Uv5o8ho9oPSc4
                      sz1X5K49I9ZAvQLyUD3Wd6a9sQ+aPWS9+jxAx8u6OuOsva0IS739YMc9sNcbPMZoLD0Mfp488rlH
                      PbahVT0jqrY99YW8vSivczzcRvE8Jc6DPTCEXDwzWa69tCmhvEZiBT3Cmzk9Wt5/Pclsyj0A2IY7
                      oUuUPdAWVrwHEqI9AG5cPMNnrz3nmr09wfvCPYD5L7wEqwS9WLzLvO/MwT3rLco9GEGCvNh5VDwd
                      GG69WPEnPObuDz3EGdM8qo9SvcyFqDwA/oI6KOhuPLqTYb0DjZ898lBePQNkpD1YNx88PUMsvUCT
                      Lr09Gpg9hsVWPbfyyj0YN6a9+rgLvadyP73lUbi9locWPdgNqLwPtce90KqquwAUULuhh5A9WPTJ
                      vUeJbL3P05E9yMzMvRPIq73QACm9lOK+PEhumr2AnPq7g8AuvfNaRb3qcnc9gHFfvJIaub3gPoK9
                      AAKyvZmKnz3oX048oGywvZTeFb2n84s9dhCbvYACNLyk0/M82PYbPHs6yD1iQQw9YMpqve47Gj23
                      ISu9wVKrPd1qvT0GI5q9VGu3vED/M7uLT5O9bGraPAAYrrxyk1M9Yx2gvbEyrT0aipa9IdqBPWrQ
                      L70btq49kHO+vVuegz3Q9JU7oHf4O/hMj7w2WRc9AJElu3BIH70lssY96odAvfLEYz1TII09VIGe
                      vB5WDj3wyS+8Xa++PcCgJr0XCpE9xmYuPXgF0ryaJZ69fvhhPYBLyDsSOl49GMaLvIFKtj0awwU9
                      wKxJvdDiNb3jhq69lY2AvZ6nlr0TAIA9VhOPvdTRCr0QiTW83f7HPboqEz2YpR+8MDW5uwB1dbuD
                      K5s9ql1mvfwH3TxghwW9VsQdPWVwiz3eK6G9IlBBPSUBpj0Z3pQ97KaSvOEGoj3U65S8I9DIPcg8
                      lr2P+7q92OvzvOoKCL2Wcwu9ettLvZJDZD05zp09aHwXPGmmrz1VY6w9Ss6DvSZdIj3iyFY9AIAS
                      uvKDj73ZJ4I9Wul4vZLWr70W4T09AGs/vZAzejy3NYU9AwaxveyB7bxw9hi8zASpvEMlVb2Qbxa9
                      djybvWInaj2AOZq6+I2BvM3jwr2tHnW9IFixuxvRtj3ALK26WE2wvCyZ/LxoEeW8mKwSPLD9dLwM
                      AMs8cK+1vdIgtr2uDQg94AxTvVCXbzxz27o9gBjIvFeylz2uohQ9CqpuvWB4sbx/UpM9AD3hOWol
                      X70692c9vd85vRKrMz1jQ8a95XSqvSEcij2QmkW87D0FvWAXjTsAYgS7APehvfT9tDz47MW8kIo6
                      PE7VdD0spde8mHwIvGdxa71G9lE9tFbZvDjMpbxi+j49ZZOgPUUowb0AKx68NYeCPSMSmL0CPHU9
                      jJGHvNBM/7uRE6E9hMbzPFU7ob12yRe9ii85PY3hsr2aq5u9bkUWPVibDDzFVL89pA6GvaVehz3M
                      Dpy8TjNqPZAiPzxTqHq90PckvSaVqL1MXhK95O8AvdhQJTydBFW9R9bCPWcfYL0iGXE9+JSQvIBV
                      xrvm6gq90NNovFTzgrwOn0w9wISnPBINJz1tzMW9BeWQPTpWHz39rIg92AdPvEWxuT1Il5M8oOYw
                      u73Hbb0uDAY9QJKZPLiwwb1tM3m90OYmvAAViTy2JZ+9KJ5iPCxDE70JbYI9Q6+TvahcGDzQpcy7
                      qqFYPdabFj1SD1Q9ewSfPdDC47tpBY89UPvTu7Cd/DtavDo9polrPfKZGD3phYM9qaC1PbAvOjxR
                      tKM9IajKPQo2Yz1aK3i90/mKPR0ZP73wcZC9U6aTPVGppT3iYBE9IQWPPcAXYTxHwWO9rHTfvIDA
                      Brw/yJU9EH4lvU09N73xcYg9kL57vOYZBj1gON68aBtVPMC67bpRXME98tVtPTRVCr3poKE9btIp
                      PYqHZj3is049+VnEPQdcvr3AELK9EY+IPUIWaz2AHak6FPmivOdySb3fxak9rYtBvYCG4rrWQVQ9
                      pJsQvZrJgb1ay5y9K+aePXtbiz3+Jio92mRpPeVylT10YYq9zDiXPGDDjjsaVC09oF59vRn6vD1m
                      iBs9KN8hvCkCxj217Ja95tZZPdAY/7vsUqQ8cJe1vQC0fTvR6qQ9ca61PZBJb7y5f489JvqAveaY
                      Nz3OSC09lWWIvUA0l7wfWcm9/blsvZ0qhj3Pq4E9NnI5PbCUYLyaGXI9Qu28vR9DvD3sdus8W8PA
                      vYAgBLxXy3e9UTuCPcxktTzcDPo8KgNBvd1JqD103/Q8WKbMPI5VMD2gjYu8elGBvYNWXL0UR5A8
                      QEhdO/VQir0cav08I26APcr+Xj3xF6Q9QBh7vG2EdL3QLf67De2mvdL+Wz34MZu98KtIPG2Enr0c
                      w/88fg6avZLbHT2A7rI8F+NtveGatz2ZSaM9o6c5vVB0yDtMtoK8sCqLvR3wWL1DaG69MH4PvUDr
                      g7z48PO83sRqPULemr0AOiO8mbmfPe7HFT1riKc9IuNGPZ9QxT2qzTw9Z32xPWxgzbygoYi80N34
                      uxPcPL3nnD29o1G9vYKMZj16iEk9luE3Pa3dgL21RZ49rlxbPaBAqzsC72I9MN5FvbgOur0qXzU9
                      9G6avGBbOruwGy69aFp+PJLXNT3SBGQ9PHzuPGIhez2g36u9IF9tvYm0rz3bYpI9wMVQuxgtoTzP
                      Lck9IV++PRCAZDwskwG9ARqiPZiq+bxxLaA9QHm5OkovVD17uYQ9ge2dPctwvD02OIC9LBL8PJjv
                      BzwKe0o9CKbxvO9+tb0Atom7NC20PACSFrwk8ds8zETxPPzO0TwSGoq9SNmLPPRzm7wT6ZQ9DJmM
                      vVL6FD3wZS88gE5POrbFXj1oShu8WgEwvZA5E7x4J9a849advdkZhD1ZMo894WKZPeDmT70QUnq8
                      GiNJvfdoP70yGoq9G/qoveMjXr3WuEQ9mKgCvN0mxT3YMz28ISyuPTGEsz1DkiW9AAUcuq4zdD2o
                      zdq8gNzCPHfTZb0dEG+9/FCLvZZlSj2t0YS9KJ/JPDBaIrxJl8I92rkzPUW7kr3U8QK9mJZFPNEw
                      jD1oKfG8xYuzPULLDD26ygU9xZmgPahX5rwA2sg6ANdTOhc8u72YJIK8UIxdvaryDz2yhRs9DRPK
                      PVAuR70kt9o8AgUVPWJxrr3Q0GG9GFz3vOpReD2d4Eq9nG8UvVgx7rzTBq49Gt7Dva9MpD3A2Mk8
                      aai4PegQG7wA2vY6DkFMPd2tTL1NqqU9wKYXu8r7RT07Kb+9FYSlvV2RHL1jST69qJZlvMd0fr3q
                      tmm9JEnjPOmUhD0C1hY9wIAGOzgAhbzsy8W8EWTLPVpqrb0ACKa97NmOPC1bn70wMIm9W9WVPTSI
                      lLzs45o84dXKPQpQQj3oeBc8MGvYO6C1BjtWWmE9uvV9PdbYgL0qdLe9St2QvcAGyzz6xgw93qts
                      PdLUHz2DdUW9PwSePYOXnb27RL09jAzfPNCePDyqNZS9FaiMPfOEq72g7qk8JNAVvWhVEryjuaM9
                      mPcpvJe7sz3Ywv28X0GwvYpLUr0ydR89+lF9vSW3r71QaSW86PNZPHXLkj0gBdu7fZfBvYhatzz+
                      /wY9Z399vSbenb2TOLO9wpdUPeNyJ71dhCm9AFjsOb2Qqb0UVgi9lqtYPch67LwMDNC8Pd5VvUBE
                      yDxM8No8GPpnPKLJPT1oZhA8wFVxvK/yxb130qo9vBzUPKCywzu0o4C820+tvXLHfz3rF5y9IM+r
                      vEukoj3VHL89qlIcvayUAr0S7yM9DF+8PP13pj1U3BK94aGfPXN5nr27x8o9tDDsPJ6Fir3UIq+8
                      mAUDPOYxq73SqjM9gL8/vTfHK733NFC9jdu9PQA8LrngJo27IHpDvZKzfT15fcI9U/tdvcA2XzvU
                      /9A8NFG1vNgisbxQQv07yp0dvVDetb3TR8G9cMR2PId8nz3iSYy9U6EyvVC9OTznDm69wCv7vKeT
                      Ob2gS7+8q9SvPdrBG70T7V29KmmyvWAvm7vg+je9U7KJPRilor0drzS9seC5Pfm8iz0HVWO93Xk4
                      vYqYD70APBk8ukBgvcDooTodho49FiEGvVaPBL2o+iq8AogvPSvjiT3a7Qi9qK9GvD7YMj3RwI49
                      sh9TPaOzmT1gL+O7sfCKPfgp7ryjkMq9mtGovZX5vD14PIY8oBmPu9MjH72d5rk9pv94PeQj3Dwk
                      /oK9JB2HvRO4yj3ZyKY9cP6yvWOOgj1gdoA7eMObvR3EtD0UoIW8sS7EPUPsLb1zYZ29XpwWPRtZ
                      iD18Pdk8QN3rvJ+4gD2HlEu9CnxIvUU/iL0o4jM8lJa+vIcVgT0JKqY938O/vcHjpz0FJJ89rGWV
                      vDBRnLviD4+9gAuhvWceur0Txme9PZ+TPW5uGz2wmEG8Z7zKPWeccb1n0ce9cB4KPO0YqT0K3HW9
                      AGHlu62EwT1yTTY9z7O8vYopsL0OzR09F44bvUHhxT1TY3m9BXqjPZoqEz3gUZ+84GSOu2bXAr12
                      Boe9LH/3vGVqwD2o4Iy9I7acvcCuEjyAzLC8Q22fvUG0rz1OTAk9Cldivakjqj24lvO8IDiEvYza
                      m7zLlsc9EL5nvCDUxTugDwm9uFmLPNDBbrzwaMq9m5yBPdOlkL3nIqk9u7ulvZmIwD0a3XY9Wjpm
                      vfTK47zqkDo9EGgBvVQ7ijyFDse9JdHDvahJOzz9i8m9BbKRPaLSKj3BQIM9cCwcvXaMcj10mvo8
                      BTOUPTTOnzwCMnk9+4GlvY5leD3Nzy29woxjPbhsgLwAWiM80ZazPeoIHb1bVJC9lQyWPb0RkT3A
                      wIA8bpQRPchdwjzNw6g9BvMEvcz0v7xuBxs9IHeMvMDrATvgb4Q7RPCIvYFrjz1Jsp09q0zBvcgv
                      ir0oYMS8QAZXPJBQWL0Kt0M94GeyPLhJ3LwEFNI8BBT7PLhs7LyXnMC9UDMDvQfjuD0r/cU9PwGZ
                      PXOzc72PAKs9wErEPJIEAz3mPgk9VIqJvW/ywb1iWxw9nQFSvY8jjz3gR8O7SrowvWrJeT2++HU9
                      ULZdvcxR2LyQoaO9cttwPaCjkDsB0JA9W7SwvaBCyjymZk89OlcLPRPjiz1QWYy9ALw1PPAwmr3A
                      cw08R2hQvc0/hT1Zm4Q9UP1MvQo9ZD2s2Mk81yeHPSDbtzxKUm+9FX6cPTcskT2U5a28mJYsvCCh
                      Sr3ixMu9T5nDPUapZD2DsaI9klSuvUoUcr0zP8k9GtAhPYyqqbygnpa87MriPMW5oL1apX69gKhV
                      vQAsVzywU2E8kyVgvXJAcj0A/zi77ODmvN5ZBT2MrpS8IkUUPb/lxj3XLyi9EFFEvS99xL35Yq89
                      WC5RPGOuK70xhcw94sGVvRkotj0ZMcU9BvN7PSDV4ryI7K+9WoFIvXDEt72Zdpo9ieqXPcuQvz2y
                      yGc9pFIXvRUAyD2jWMK9Qq4bPTDViDvUcak8Ul0HPUO+uL0nqXa9IMizvKCGlrsw8TE8yYaJPbKU
                      Ez39QqQ9e0ebPS6zor1h7ZQ9VFemPGjZUDzVG8Y9g1BJvZV6gb1i7nc9x7dnvZEivT0NrTa9Tg1j
                      PWCIvr0mWns97bmXPUjMq7365lO9ij4cvRBiXrxLZca9NK3bPD3Yp73r+oA9VHmOvO2wrz1QfBa9
                      dn1XPfC9QDxA+7M6aJN/vHgrzLxGsGs9MO/Cu1TuEr0AsDw61OG/vNCHnztiOTA9Day5PfYuhr2f
                      1o09NiGbvXpSZb1y9EQ9jIHGPNVqxb0DTbi9UWiAPV+gqD24XoA8yj0jvarDPz2QYlG9YafCPfhf
                      j7yAeC88MROPPTCp3jvJmMM9jMu/PIBNob0mWwC9JOSJvZQdqbzJ98o9xR6dvVomKr2OVQg9kIw4
                      vAInfj1DZmm9qDu7vHJYfj3N1YS9zA7hPIInfD3QxyC915TCPSjkzLw4tYi9KKiZvOezkz2YLkk8
                      2nVvPaa9Mz3pirw9AFDDO6gsAbxYbTI8XMDWPCoQYb27XoQ9BZivPTNvwr3SGEM90IyovUDOAb1Q
                      di29fjNQPXSNjrwFSMk9QMdAu1SyxrwWowo9Dcq8vXW+jL0Mreo88cuLPQLjAD12RS49hJHTPJTt
                      /zx0vvQ8LNLvPHawaD0XBki9SG77vBE/tT0ajAg9gEPuO12Mb70NWVy9ox+0vQitmjxtC7Q9MKEW
                      vTJYfz2Jhbk9vTG3vb1rtj0i30c96g0FPZNrmL2oSr88lvoTvRiHVbxglgu96Hq1PKzMnDyAHw29
                      zIyZPOUtoD0fUY89YilePYb9q71KqgM9oKyWO8ELoj0gqYI7aOIzPKSW9zwWDys98s8wPRK2Xz3Q
                      Xl69zFKIPApWo73UGY280AVDvUprFr1emnQ9gCU1PKv4rj1i0lU98nVzPTR1xTylW4Y9ifiWPTGw
                      gz2px4M95th9PdoORD3UI5681gdLPV3DdL1wsma9kIEWvHbDCj06BLi9cNYEvfAek73uoZa91Nmd
                      vAzzkDwAjwy8skh+PeXKrb0iug89FWqCvUvOoz3quaG92jpGPZ0wd70YZR88sKK/u+4cgr1Utom9
                      /n6jvRIEBT1AtW072l82PQDEdruyKX8997GXPVtHmb3ZDKk9rLeBvE5CLD1A3Rm8KEQxPPhlvbyI
                      rci9JpNaPZc6nT2B4bI91qiQvRZyAr2y9Vc9DnRPPdZDTD1IcaW85DuKvRtnkL2QGDe9NHWFvIzm
                      7jwwyzm8ckROPSFFrT2bt5U9c3N0vVpLFL2SuTo9BxybPfjtib3QOb+9zMLaPICSWTxHP6c9wCB7
                      PADqojm3F5U98DxYvVj4rrxoYkI8SFbyvOpKOj2gmbo7nR+rvZdtSb2ABiC99mwSvRCBFr1iL3s9
                      y2nDPecnGr3l1JS9UKsHvce/sL3JQME9aQm0PUBMCDuAXY07V4CvvcxVx7zJkso9GGwYvLAcWL04
                      hqG8rXYrvdqSUr2uOis9gB0KvYg5nbxLZpU9xWudvUAruTrsoKg8+lF3PRb3UD14SbC8YmcIPU3+
                      lb3A/ou90yNDvaWsur2Kz2U9Zr8VPVTIujyaJkG94FT3vAAOnDsUC5G8obWhPXC4CrygMYy8HeG5
                      vTLNt72XALi9OhF/vdDem7sQJkq8ChY6PWX+yz03Kmq9bEWlPM/jvz1q/gm9QPxYuyJLfT0/e7o9
                      6g0mPVA8y7sAQDW5MJKcO+KVHj24aeW8k3XBPRCYOzwx4LA9QyuavR0BhD2aIEo92hWMvfVSw73f
                      5Li9ryTAPXF2uj145Ls8gNHNOzh5qL2ypsi96eOxPRJCJD2S7Fo9F05tvY/ypj30Qui8Td07vUiI
                      jL3GS2Q98lNTPSfyr73V9ZO9ysV1vWFmuT0DeV29BeygPVJ8ET2NXIk9dhIGPTkMsT2g40a7sG4f
                      vATa8zwqwHK93TKkPYFOlj0pWIo94qQiPaQU4TxSgKa9RgtTPYArAjwVia49WHiBvfqYQT3DbZq9
                      qOFnPLCdijsB5YA92BjNvMSQ5jxv4Ig9+iwQvZ48Mj2QRDI8ir56vcCFg71gJBY7bUAevaa5Ij2M
                      b728YkpCPSjPETwGsoy9sRqGPUMRVr2ATlO8nSUbvYBLhjxwsne8DVOBPZAGRL3Rask9w1UivVDF
                      qTsn6Ic9vSY2vTewr704RI48cJk1vI/dwb1qt8u9kMZYPGMykr3CBUM955yNPVW4rT2yMzI9DMqg
                      vNrARz0Pg7u95u4HPQhYmrwgqoW9YS+BPZiseDxg0707NZu7vTVdhr3GdIq9UNsPPOreEz1QgmC9
                      /6CAPfALMr06aju9yB7BvLq/tL3Tar09PVvEvdJNdT3exH09wPWhvYi81Lz98bU9xqk4PTfxJ73P
                      4Kk9Gw+7vfHIyz3GHRs9J2mAPfEInT105MI815ZIvaB7P72CwXk9LIYMvbRxqzwwE+O7QD8ru2BL
                      NDvsMbs8dy9YvXQu3jzxM4Y9WRu6PXL4HD1ds0y9AGAGO8wt4jxiw3M9UkITPcCJ97y6Vh29UnRd
                      Pe5mTT3diHy908yWPTCPHr0qdjE9nYVevXrfXD1pL5c9o+CGPdcOJb3sVNU8bdy5PZhBPrwArd+7
                      d1KNPf1rQb3rFI69Zr2pvZCzCr1Stmc9QCiRPCHOhj3imyg98jcYPYM9PL2Q0nA85/eOPUmDgj06
                      b8i90mG+vcPFu72XI5A9sLfQu4EryD0A1Zw5sDl/PDEHlz1KZlg95rRnPYSvir1KBz69gEJ4PIxr
                      4LxkYdk8UNI+PAKoRT0MN5+84pw0PQCgqziCCxk9gIPLukZiEj2El4W92FAmvEHqvj2wwT29o0Z5
                      vZANoL0MH9m8LStxvQDaSLmCzRw9hdK7PYq9QL3uDFo9g1Ecvbd1y71o2KK8EIsRPEcrjT2guye9
                      pAT0PGkjpj04gsW8zJuVPID5tzuoj8S9II43vTNNjz1Q8Va93wWwPTaxEL2Ad/87LkNqPfDGsb2y
                      YWE9WTOBPRCEOr0CziQ9gApwvRQD4jxezDs9rJnVvHRC27yV0J69arJdvYPBvL3Z2cc9foqKvQvJ
                      gD3AOsy6FHSHvc3fpr3pVsI9lD+5PN3RmL2jep29IfiQPeqxWT3p8Mg9tHOyPOvjtj1gY7C8GRiN
                      PXoBR72vAZ092bmPPRFDzD1LPYo9jbo1vQBn3LvTn3W93r1PPVzv5zyUmNQ8YPidvPeuML34ULq8
                      2DnGvbrMDL0i4oC9ADpwvQCVTDygtx29gKfdO1q5YD2AKD29XmFBPVgmM7wJUoQ9kFoDPM40NT3a
                      40q9dw2FPfMNyr1z1as9ML5SvWZ4YD3Wy5y9fsaTvUfrJb1Uepi8KFaIvWDg/rxTw6G9egW/vcfE
                      IL05K8c93yW6PYfpr71q3L+9GCqhPNQG37zdoB698FI8PJr4dr24mZm9SHijPKihBTwY/o687U2C
                      Pb0JXL0X9JE9dGQMvYDVjjvYwr88EfCDPVaqDT13VmW9gFb+OzNiwT1SClo9Sc6KPbMbrD2UOJ08
                      YBsgu+Cgxzwa9ru9GJcFvO5FqL0UKaq8Otgvvd0VhT11G7w9Mp55PTQv0TxDYLO9b4WuPaNCHb1g
                      08a8FIqhPIpopL1XuSO9LLDpPO3+hj2iRJ69UD0evI2BOb3i5FQ9oMLJvFBnYL0Ph8O9os0wPYC3
                      6ToRnKo9+AS+vGDnR70AINW5gHDLPEJENj0CbWA93QJDvTtZqT2rOsS9AItUuggatTxSQgQ9wro4
                      PT4QXj2CgJK91ImivFv/jr3wBjW9hQmtPSCbnjvLSLO9QHWPurbxOT2iGF896ZSuPaDdajt6opa9
                      LJvYPPT2grwYlJy9IXmBPZUblL0DB5w9Uz+3PehRODxKbxC9sWqBPSRm1jygMge7MHrEu5dZtT1C
                      jWg9eT61PfQE+zxtcaS9/YM/vS24U71ySDI9JSmsPSd3UL2qKCE9agDAvRhGvrzN6I69A/A6vU5+
                      Iz38jgS9LpSivfOqGr1o87i8mFfovGOEtj2pYb89kGmqvbvntz3uX3Q9PfhevbMDhD2AIHC94umh
                      vbKUBT1IkY48wJ83vYYbCr2Wow+9/fDGPXDhh71aB2Q9qInZvHaqbT1KqxS9AHurvHCrFzw18sm9
                      dspUPRIusr2w1429gZGQPYueub1X4Su97Tu3vbAo0DuvGcg9ZOqLvVcGab2gAqM8CsSKvUBw6LxS
                      EB89IC/3vCWpir19MRy94GPYvLMld71Fe5I9Khs0vb5WST0wojK8BfiwvUD00bwtV4S94iJcPSuc
                      mL1D8qg9swYovTc9tT2Y47I8Xh0jPeFEkj0q9xO93X6jvXD2bTy9s0i9cgV7PZFCxz3Geh09l/I0
                      vaCokr12gWM9RhwNvbSkg7z9RMY9fdtRvR94rD0A4AA6qMo9PMpWFb3Ye4G9ehK0vZmdhD3GlA09
                      anwZPccLV724YZ+8APqDupr0Aj1RqKU92J+fvXhhvDwi2GI92ViXPTDpmzublcc9thIrPQwHAr1H
                      1ma9YFO1vVn3mT1iEHw9Q9KRvaDLnDxd6Ve97kmWvVi9wzwKlmg94znGPeADqzxA0SA7bf80vcMs
                      vD2qSxi9YK6IOzh1l70gZNe8HvdJPTevRL1Ysue8JKrPPAR64DyAOi88lnUePWDPMzvYCnU8Dcgo
                      va9Fiz2Onpq9F656vZiNHbySmig9khFLPV25JL3h77U9zNzOPEDysDxGwz89kG5sPC2mzL2tL629
                      Ho8yPSdUYr3KpTU9kW6nPbPXxz2euAk9rnFcPaDSB7tEp888zhVnPWAcprsiHVg9oAjHO5+ojz0X
                      x8a9mkQ3vRbiJj0Vk689AKTLPBZzAT0Sp8m9KgsHveUKlj1AOrM8cAihvaBUsLyAqj+9WeLFPRSF
                      obw9IKg9wCQIu26DYj0he7E9WXe7PU5Slr2TUmK9YLB0O5hQPDy7h8A99hURvWKUiL0YhgC8Rh0s
                      PfEbtz2aKcG9g4G1Peomur1M8pe8LeIqvagLqLwnJ6o9gKfPvHOFjz0Pa629gWqhPQAMybo+AEY9
                      jOrSvJqojr3YkXe8ihlTvTzMzTymQgO9wCdNO4AgAbwgmp08XfW7PVDUyb0jLDu9DQUjvbZaKT0g
                      Bv87FGr/PD6ogr06qpO9Ax6wPZPEtD0nRI899AKUPPwy7jxMMsk8A8mmPSo+zL265Q69+gAkPRxo
                      hb0wK+879zfGvUOYLb2C8n49EdGhPdetWL3OmTA9rB2lPMDpC72Yvsi8onSJvQD987tU+/48ujha
                      vVUDhz1gxsm8rKPVPLhLk7x5s8k9pfq3Pd/XgT3ACcq9zJjBPKnmkz10QN48fXgjvY09N72ZG509
                      Ii2ZvcgFgLxzP6q97RCbPaU5u723G2y9wRC7PdkRxT1S3Ye9FtUEvRrJZz1AxA69oAm7PFe1mj2K
                      qnw98noWPW3ziT3yy2Q98cXIPVceK73Yr548KEHbvGCpoTs66mW92M4OPDM5R73AefC8ULfHu7Ba
                      sL1mEx09YP8bO6Etgj16Yy49zUNcvXh3i7yMUpA85MjOPP5soL1oqLK9UhFgPQ1OcL37e4w9KtFw
                      PeJAr70ouI48XgBIPZ6RTT0jhGu9uAisvC70XD2Y7He8EkRgPZq+Rz0j61294JL4O7C/NrxLJqW9
                      Ud6ZParEw72A0dQ72jlivXmGrj2ZOck9Na2xvfT/pLwn0We9IFW7O/G8tj1MsaM8hcTLvXiRib1m
                      MWU9PeoavehmeTxSgAg95lBcPRIAqb3t+oE9J21rvVDsGrxr/8a9ItJuPQCYLjz/HLM99+U8vXKF
                      cz2EI+08UIxXPLMDdL32oHI9qGASPLobor0Dg4U9+KO9vUQ0zjx035A8BH3xPBsJxT3ErBG984B0
                      vSltpD1SOzE9NzZMvaYVBL2OnS896iI5PZpHTb3fvJI97BjBPKBs3LyxQpI9is45PWIRJD2QjXq9
                      s6ScPegkgr2bzMs9aMcQPD6oob2Mud88WOdXPJLcQD1nBzu9vfOdPUBsS73WOGw9AAnzvKgMPLwo
                      A8O9Un6PvR+Lyr2ixDw9R0Qcvcdhar1hN5Y99Eu9vNKQEz1c+c882N2EvFCOVb34DKe9cbe4PWg+
                      RzxVg8W9alRpvUl3rj0Z8pU9FzpBvQ5zj71RyZs94CfTu/hHzbyFrYI9WtcbPW79YT1b0oc9iL3L
                      PIjWnrywftu7WG1yPCdhrT2a0CC9K62rvdhSxrwRhpU9aqwLvaijuzzKeIK9nU9avYuLvz3q8HK9
                      zNyoPEDvIDwAerC8DMrkPG1Qmz3pRpE91uQoPaHCrD1bAaK9EYeuPXAhJ73XUCK9dJoNvXDHFb1X
                      hbS9AJ8zO9acOz1dQbi9+06jPWwYhbz0yIm94yC1vUvtk727J569KqnGvT35TL3K7gu9l6ZZveKO
                      Az0x57Y9/KriPHdajz1q420919ctvapbQ72oOKg8o9cnvX0DlT1IRMu86EZuPEPXiT0CEVA9QPoa
                      OxtBtz2Y1Ja9IJNtvQwrgL2k4vU8F0nMPfSq1jzQ0C481P+LvK0zn70Ov249wLgQO2N5Rb0Cv7i9
                      cuV8PahfFjzCJB49AJ4buwLnlr3B9bc9MIO3uwf5Pr3WZjw9+jR9PXu2sD0W+D496JXavAmBwT3p
                      k4Q90jeuvSJrVT3KWX49k7nHPbTSlDwgTPu7B4gvvULXXD0i5Xg93ditPW3/nr0oVVi8CkfEvcp4
                      yb1G9w09OkMnvezdhL090L89mPPAvKCZLrsHMKM991l2veGktT075bS96xuOPRIRw71ANT+8XV5U
                      vef0Or3gN+E7QmgaPe++yL0/nbU9WFcYvASfA71Kjoq98nZBPUkwxD3Q7ZA71AvePMIEcj2Kq0Y9
                      a5+pPcwfir0KVaK9Mu5YPQDASjydP3m9aPnBPI2Bu71oCl88lqkHPUBnqDprIYU9QBR4vfSWi700
                      CMW8rdGtPSIPKD2wzH29GKtrPBOHmD0fXIQ97TWUPUHAkj1wWwK8wAd4PKhdeDzYNAO8Du2XvcCJ
                      Qr2Ikce9KpwmPSo1fb2G8U89vLfpPHBRPr0SyjU9I9B0vU3Vwj1tMKu9jvhxPdDMWjyJiaw9A/CO
                      vSuRs710CYq9qLolvK23uD2ojcs8ono4PbD9XrygVb27DKzSPPc6vj2Feom9Zh0CPeiKYLxoVXw8
                      TQWbPXcPOb2tEzq93eiXPRiiJjylz4q9xei8PdoBcj2dzCC9IB77vBgW+rxyUKG9TmBZPQD8Grsy
                      LRo9FW+RvdYgjb0CdTk9cd6JPb7cmr2Q7Iq9tQyqvbKsFT3gwYc78dKFPSWGg71A9RG78wafPbCS
                      gjt70LU9F0+gPR2Vq72mbR096sl2PbDkuTuqG1W9UB7QOzAarbv92sC9FF31vKCuqrwWu0s9KHtz
                      PCDEBb3ZT8I9gJHYukIfuL2EHeY8MCAKvYI5dj39n7c9dCmBPCfGLb1noyy9QDdQu7Wexj0tpcW9
                      A6I9vSdrXr2AYQy9etl4vaabeD0mBIG9gC3PvFKDvr3WU209k2usPbCkJjxgyJS7pbjAvR8hxT25
                      v409AJsNPOHMkz1e/ZO9he+9vc70Qz3DHF+9wLyzPMV1pT36q8e9MjoVPa4Pob2Xkok9fdnBvU5r
                      VT1EDhi9bArPvFWxs73cyAS92NSQvZpGWr2g72Y7gn4YPT9BqD0AESQ8silwPVfJwr2K20u9sK5P
                      PLFYxj2MNwu90CtPvJihTLzvJI09hNLkPH8Otj0mJAk9KMJLvFPgxr1q7Zq99l4KvZo8Eb3W43E9
                      05C5veQK+zylGom9oXW2PRVfiT1cV+g8gGqVO0ZXo71sQ7w84HdGvcD1rbyn5cK9pvcbPQDHXzqQ
                      UQu92IdlvKhlGLwyKLe9bZm5PUUzn72TKpG9ii+VvVAHJryTh3+9AB0AOxr5cb2BYLA91Nb8PPZi
                      Sz0KLCS92DLrvFAocbygOa67UEpwvbfHvr0u2qm9mF7GPAAr0rsjSlq9ADs/vRi0JbwmwAA9PQai
                      PYSY0TyhtLk9Wum0vT1qy71Us9Y8cGhlPKz1uLy1V6O9l7ZGvYAU0joaDnQ9N797vVkFiT0nzXG9
                      zl6HvSJfCj0Uwbi81pSfveCueL0A5GS9gEzWuwAC8zlyBCk9NFybvDgStzyKeLW98hoiPX3sKr0R
                      N8M9nbGyPRPRfL30A5e8TU5TvViBEzwATL+6wqYuPdDBEb3S5cO9goQDPdJUJz3YHpS8WGwuvJK3
                      jb2hcMA9HajEPT0ZsT13rF29iG6svOdAsb2L87c9KqRBvdksij1AMSC8KJJHPBRZi7zgNIw7et9I
                      PZaTbz1QhBa8IzSXvfq2yL2gd127S4WLPWoOmL2pN7s9AX6kPVZxaz0PVbq9YWmLPUDwaTz9B6a9
                      4jEtPaU/oj1ZoqU9UJXDu2JfKD0AI5e5yKu/vaDJtLxGqy49nS5OvXMefb3jc609HtylvVIrSD2P
                      sMY9oKfGuyX7xb30/rK8mAWOvcCHRTxiAk09MBQ7vU01qz2KTGY9KEqrPLCXRb3Xl1+98k6mvY2x
                      vz3Xv509bJURvRKKfz0NVWm9SidkveDEujxKwnu98vymvRgyqbx6OA29rPGAveS25zxWzzI9IN8N
                      vRCvEb10Jse8vQdivcL/HT2AbYq76G2/vRijAbw9HIk9Ql5UPTjNqTxKoiY9oNawPJI5nL0IXIy9
                      kgB2PQOem72mRFA9bX+cvU0wOb0rr489b9/EvXllmj2MHdi8QFpDO/ZolL2o1/68Eg4MPV2kgL2o
                      /wK80JxRvVkthD0qHIW9wvQcPcx9gjxiDg09edXGPX6Wi70u8DQ9qjdqPRI5zL1Irr28y7bCvQDS
                      2Ln6TbS94Nb4u7DeMLyuAAg9HVSOPejAQ7zYxKy8AGOAu4wkn7x33ku9efG2PaYkUD0Fc6S9v6XA
                      vaosYj3X3sG9YAE0vVYSob1DSLw9h2WcPf2hvz10S7K8vcLEPcqwHr20ZuK8UvEiPfBVsb3CFmk9
                      HXLAPdltsT1P7by9vCf8PApxw70WVUU9hcy3vb2vr72BI4g9Sgp2vTTPm7xfX4w9YBaHvXBDCzxA
                      +6c8+mQ9vavvpD3zCL89+N/IvF59oL0jHZw9Ot9lPRQSxrxwFXa8Lc+EvT8CwL34ArA89OzDPHlN
                      vT3AxzK95lMgPa79fj1A0Fu8SFSdPIrag71zIpc9GWebPUF6oj1pMIo9FgSNvc1LgT09qLa9UwRa
                      vefXyr0S9Dc96aiSPWtGoT2SDpK9SEy2vBYcAb0mUUU9kskePT46qr15DLk9pVOfPSAu6zvKH6y9
                      aC9dvDigyLx6O3W95W+jPcyLnzxRQ689bdi2vYOxOL0t3Ly9eSioPVSrtrwAQQM7oOJwuwAgdzmD
                      vMU95808vYkZsT3AgMa8mHUQvALyaT2jG6q9DQ7FPbvon71eMIK9yDufvcrxNT2oWry940uovarz
                      ED0MzhS9GvMCPbAjMTw5LcA9MrJSPQDuuLxMHYK90WvLPX3OZ71wFqC96Pp+PIA8mL2qBHW9gReF
                      PVCnUzwg9Ju9bao1vbR9zDymLhc95igPvUha8LyYmJ68gFG9vPCsMryMxK+8zAXxPIfUTL3dqXm9
                      KvShvX7KdD2JLrs9/nwMPbgV3bxD9Sm9M/DEvRi0drzdWli9Gw65vdYdcj3g8tY7qY6qPYCkt7ww
                      DNg7cum6vQBoDDqjV3K9g6+0vQA7A7zK+cC9gi2rvWhgnbx+CWU9LQK8vYZim72VbbW92tNAPdoC
                      Gr1gtxw7OmtwvWCShLs/x5Y9gMaSu0S03DwN77a9kxqTPWqSx70zZFe9N2KgPdiavr1qEUg94D+G
                      vQBgUr3wL1m8btgvPegfS7y/gLO9xVWMvQmLxj2CqQw9dVTKvQqVNT0wTvy74FF/vU7zWz3pPow9
                      9KeuvKD/cTsb6rc9ALuyO8KzOT35o8k96YjDPQNXYL2AtSu6jZ+oPdhCS7yYF8O9ctoPPRRlnjw+
                      Apm9UhyLvcA9grzoPMe9+Gf1vN3KIr3alkY9YAoXvaLmdz1FIqa99ELgvHqsMD3M57k8sF2ZO9Oz
                      aL391Ry9Va66vcpVG71FgqK9yikmPYCU17xYr008yNzEvBoiRD2rJYA9OaOFPc1xgj3NCL090k8A
                      PV3ayL2pZrA9k6Afva1CNr3GrH49IDC3vAICaj1Fp6m9EpROPXBvtb2z76g9oRCNPXqWHL1jkIU9
                      YPVCvdSpkLyk3Pk8+hsCvUepM72SP1U9aEmOvXpGDr2EgP486H4YPLDItbt7n6G9SqcYPQAtDjzT
                      c6w9zX7KPc9flT2ls8o9BoQ3PZJQwL39jLE97lwhPfNzlr2Ybrm8y/W7vdFkjT3MlLe8ZC/ePADe
                      zrpDcDu930WiPXR7yTwAm208wloHPcl9wT3UGLS8lFqPPK/GmD2X28I95rifvTiF7by0INK8AA1y
                      u7k0pj2gP6a9415IvXcygD2H4ok9na+APelnsD01WI+98lyAvXjaor3YbDg8P+u1PbtIwj3AzBw7
                      RPDWPEsJoD0B94k9KvG5vV1chj2w7SE8pPP0PFRmkrx407k8vtyhvfEYhj2+RpC9gBLwvEm3wz39
                      xMU92hlUvekmhD0o+BQ8F80rvZh2xTyL5aE99hxPPQCc0zt1boA9qCFlPIHFuj2dnbm9iXq+PWj4
                      gDzoBmA8bKPGPG9usD1t/GG993NJvWc3Mb3j3Wu9TvxxPQc9gz0w2xs8L/KFPb37pL1qK069x1TG
                      vUvClT2NY0G9E596vUXOhb2DGZw9lGS+PA1Neb3gKpo71P3HvKN3wD3KRFc9zJgIvdAJdDzDk0S9
                      psNtPUyarjyA0Ki8AFY+OSCpTb00kIO93F3RPAAPEb2AqB88oIfeOxvhwr2yIF89VbiHPdo4CT0I
                      hoO8GLEnPAentr3D6q499+AsvdOjU73Jz8o9oM/Hu1gmvLyRgbc94KqCvOL7Wj0q2Hm9Njd/PQZ6
                      BL3IjYo8TuyivY6AaT08hBi9z7C1PSh6ETw0xuI8+fmiPTKJsL2cHga9KLN3vIMdxL1oWZ68gGvr
                      O4EQqD2RAKw9YemtPXDxYjzC96m90DdcvE0Tnb1Msby84q+qvR5SRz3U0um8sP1fvaB1bTvgOYA8
                      C4CAPWeDJb0ArY68tvluPdXwxj2LvLq9zEW1vACD/bw6PS89ZlE+PWCVbrsCzr+9SCevvP2gNr3J
                      c4c9cmjGvWJqRD2zE2S9a8SqveoTML0AFiw5eptHvZKCED2kQuA8gCEHOjIMXz1ftMW9RHzjPDp8
                      RD2A6g+95p8HvQzR57z9kH69kHhQvS1HP72x3sc90BVvvC8vnj0NaMI9ald7vaKaEj0dH4496Gnz
                      vFQD2zwdj5C9rYK2PdSW67xKPCa9S6K1PbRE2zwItY88Rm8JvSynBb33F689UBmkvZKFbD0395g9
                      QDYROwCIGb0SOzg98CGZvfm6xj3ErOw8oEPSvJpUmL1iJyc9dm00PZT077woZjS8oJeLvBhA5bx0
                      nMQ8ABxbOgWqhz2pJYY9UJjdu7/hhz1O7UE9Okw7vVBvALwEueA87l5kPVjGErxoRz6838vDvdlT
                      xD0A1NA70nFDPdK/Hz3B95Y9dgiFvZa3Hz0nzpY9rN+4POCB3jtu71Q9YPCEvSOIvL2MabM8QH37
                      uoMEm71UDta8oIO6O9cMij0gob87jYCxvQD3YDoy7FI9wUirPQCAKjvA2Vm8m0q4PSp5cr1qd6W9
                      GNmCvN3HuD1QBtA7yqYOPQDS+jr+bi090pt2PSpQC72QkV681XuMPcASVDyCSzg99nMSvQBmfTmG
                      IYO9UCzqO4qXqr2oM0a8N1SuvTYqbz31IYa9R+a0veza7jybO6g9dK+CPADDrTnDBsm9njhIPQCZ
                      MDwN8rk9eiAGPY3sT704H4G836anPUctQ71C8r29rOKVPKWTjr3vMr29x4E3vejO67zWGgS9UDjk
                      O1dzr70KQAo9sWDGPVhMu7wqWTS9qM2pvai+UTzhyLU9jgMjPWJ5Wz3Z5YI9TUVnvcg1rjw1Ja69
                      nlM4PYDfxzt4LYK8sEEivYc8Zr1g/Rs7nUt/vWjOgDygLdi87S+yvey0tzyXIUW9a3e9vbkelz2w
                      GPS7wDuFvM3vub33CbA9bOyWvOVFyL02a1I9bx2MPb/BkT3V+649XbFxvXjcxryc1P48KGAQPFXp
                      oj3QJea7QHORPCd0vb3Y3B68FxhCvYuvrT1albu9W7jDPdq9CT0b9ZA9JrFdPdg0zDxo0Qi8aLoB
                      vLeLoD06hwk9QsIaPeIWdT3Y6DY8qLI8vFZUob0YcUU8Ojh4PTgjtLz3IrI9anIaPY1EdL0Am5A8
                      uucpPYafKD3+agg9U3iWvSExtD3my3w98UWMPVBJUr1YPZi8CJbdvMm7nz02B4K9EClevMza9TwM
                      R6g8T2SiPQh1h73AQ0U8kbSLPRi9pTwGx0E9ZpOLvcukjT0J8Mg9WGbLvaCNubxAGP685wiWPd8Z
                      wz3lYre9AKdGuvqPor0Jjb095HrfPGDunb20Hp48XITNPNTJFb2YU7g8Cv2KvYiggDzyORE9dtkl
                      PaARJjtGP089IV6pPVANOryK3lw9tvYGPdQeqzxz9Z89QNULvdWVxr1ftps9ot7LvVJhu71Uv+A8
                      UWibPcqUdz2pGYM9NNj/PCqzXD03Fk29Y2A+vT73ej06OEk9sWe6PdC22jtjxsI9KLKMvZinvLzs
                      sPI80/c+vYB3xzpSmF49TK/CvOngrj0j5jO9/5+5vWJ3KT1wPri9ts4Kvanswj1oEZg89qmFvYAQ
                      xrzCyhw9QH3dOvQilDzs4Qu9oE24O1LdaT0QCEw8oO0bO/gQmzyHGC29AEgZOqCHH7u3VcG9IiIX
                      Pc3XJ70D0K+9jMCIvUCLi72sid08/uoAPSieaDw3Nnq9LpwXPWaxIj0ZV7o9UNLku2paGz0XIne9
                      PkF8Pe08T72oc108xKP3PGBbrDyUdfC8E968vX2grz1F1bC9pgAtPbEahj0SSyY9iAqMveMNVL3a
                      Nxk9boaWvXLBNj2y61k9CeytPe7eHT3pa5E9F7xLvdeehT3olbC9xrd8PaGMpD35nLQ9wnNlPVoV
                      q73gq7Y80lsNPZq+wb2Imvq8mnwaPZjXl7xSv5u9jkFbPXQLgzyi00U9QEGsPJqBqr0aETU9ub20
                      PfkQxT21OJK9grQ8PTpEC73Le8w9a424Pe1dir34JIG8IM9vvY48pL16vya9gI/IOrgi1LxAJWy9
                      wFRxPO65Mz2sbMW8PjaXvdZ2XD0+2oS9vduYPSpMML2brr09zWq9PQDiRr0Z1Kg9MRaHPTNVtb3k
                      5/o8UOHgO1Foyj3SRLe9MHo1vIwFsTxYkV28MHcMvC3hHL0LjLo9rdrHvSWjjj1WyKS9FBOcPHyY
                      1jwAExE79kl3PTAGQ72aLge9ktlwPeDOw73QR0w89pJXPXbqoL1STRc9t70zvamHoz0vHqI9auHC
                      vfZ4Db3xepM9sfGoPY1FZL0YbRQ89velvfRwozz74rY9E+dHvRurhz3iS3o9ZXqgvXScrzxdD8c9
                      98E8vSAVibv67he9QK2LPJv9s71okpo8AE6Mu+jnzLwYSmA8mXW3PQC3OjvtNEK91VjJvfkbiz2C
                      KUQ9WFhkPJqFI73wBUC8wC2RPNA0bzxHR8A9ctyGvQDI8Ly9xLG9IwdfvUBgqL0wIHi86o2uvV2u
                      vD20Cvy8oM6hOxrRgb2uWh89eIeRPNK7cT1kXAS90AfWu192tz2Lf8q9OnSNvY1BtD1YrD08oK81
                      O0eUdL05/8E9MDFYvexHkjw2dxm9QJukvJe4xz2gtiG997xovXV5rr1YP5k8wBotPEALnrzHf7Y9
                      Bo4BvRQYsjywxJ29wLszvNA3abwgc4c7Te+ZPeD3yb11Hse9kBx6vfKBFD2AGIe6c3u+vViL8bzk
                      Qe08ElWQvbnpkj1YjHU8qZe7PRjPnjy4TZm8TJy/vJT1ib0wKt27qI4OPOqcDD3of1k8WTiHPbjX
                      ljxqUls9XayePVOpiT062Mu9UKz2O1itib13aac95iCbveBL/bttAlO9JE+KvaA4gTzxG7U9/Qt3
                      vQAy8DkgQZa7AHpJO5FIyD2Xk4o9IG3Ku866Lz1Pw8u9gbSHPdTtkzxpPoE97jMDPZjIRDzfq8s9
                      Wwe0vaQ6AL2t4bq9KE1WPNdzxr2goSg7CCbMvaPIxL03ULA9DEyKvNM6qL3ydFg9NOWkvEUogj2m
                      XTU9CwW3vSDCir1XcMe9YwmHPUqWTj0Yxbs8Vll3PdD7Lb3K8QK97o0APbOWyT2Aji+6giWtvVBD
                      CzwHvh69frpqPWZkIj04Kci9zoVhPT+foz2yBT49wFkxvE6/GT0wdpW7gNGSvZ3xSr1Ykb+8MB+N
                      OzfMtT331Ru9Pf5svczijrwFuce9UKuAvZLzbT0Ibvq8cNMZvfj137x1Z8m9QryEvQDtyLwwKBc8
                      6POlvV5/JD1yRxc9OuSVvWA9W70gJ7e7hGrSPO++wD00Kt+8TipePefGoz1gnlK7GGX0vBculz2M
                      aI08WQqNPWDpxr2EzN08unprvQgDyTy1b6U9WLu1PAq4Zz0Ka0Q9oFe7PID9ozqke8082slGPS3B
                      qb1DizC9vG6LvXr4GD0qh7u9jqJnPYLxgr1ARKM8oHcnvUjbzLzDxWq9w8B6vWjfoDzw0Si95fi/
                      PQBWnTt43am8yPLDvADp+7tA2aa6MV2JPVB7Ijxfw4g9AB+7vXrSdb3y9x49AurCvcAxozywBZW9
                      9SSxPYEigD3cddY8Pf54vXaREj1RBoQ9kIBTvShfVjygXja9RGUSvR1Dgr3apE69zf2sPVlzwj0g
                      v3K96l4KvdHltj1oTj+8UenJPcBBWL0F8Ia9q06nPUDZmToApoA5ORGMPeh377ywC3a9VUWDvdNV
                      KL2anWi9+qClvb3Cmb1qRiu9RIrpPBiwnLzD1Zq9SU+APeDX7LvoEic8b6W0PZ/PtL2Dl5c95o89
                      PWOgyz1yeZm9M1mxPRXkpT2AIzm8ZGHvPKB36zsono+8WilHvQB7ljtDHje9gdaGPcBqob0ieQ89
                      q+ifPdg6fDxa0m69xciOvfeMoz3/LcC95APbPMqSnb0Pbr8904+JPaC7uzx0LMu80ClyvTMLwT2A
                      8P+6rBLGvLIyLT0TSne9XtFUPdDvhLvs4bi86L9sPC49nr2A4Aw8GMIEPAj4/LxMe+w8116tPXNV
                      qj2mrYG99YKMvQpqqL3Xvq29o8zBvcAGFbxfUL09ZMr+PLRH3jwmxAW9UkRaPWBJar1qLiS9KOfB
                      vDUps73oQ+68SsxovXJOjL3QxNw7YyrKvSI6Lj2BLZk9ye+xPejZbTywN3Q8ZhOEvUTw2zxAMF27
                      EZHJPXplvr25BKE9t96nPRdDdL1CU5m96I2iPOHStD1wuVG9qhGcvU4vTT2YBJq8+Li6vezRp7yQ
                      ijw8Lyutvf27Gr1KHS09GAZuPIqwQT2ocpC9MxjFPYBLJzxDhTK9reWsvaBbiTtq2KO9WidTPSDG
                      wTu/WMg9y/+2PVVigD1mwWY9gE53ulAT3jtr+Li99uZpPYGinj3NKKa9sP8qvKrfAj2g6mC7QEmf
                      PK3uuD0XAjO9Fr4BvaDesLw/H6494ABWvdq1d72Y0Y69Leo0vaMIyj2zv2K91wuAPdg8a7xV1JK9
                      FtlqPdwUjL02OC096KgCPDjdqrwQVVA8aFknvHr5fD1daLA9UCrqO6AaU71dV8e9M4KdPcCDZLyg
                      LN+8oB6yvdTTBb1Bzsg9bUeXPTkknT3AQGY712TBvcqom72EF9I80xWAPewhnrzqaa+9NDmevDO9
                      pr1VHZq9AMTpu3qDPT1Ijra8giRPPT7mmr3AFuu8UKxiPKCKwryaEB+9cYOHPRQ5pbyAkdK71lwE
                      vcMBLb1H6iC9OI/0vAohqb0AQCO38V+rPVfsoj0mkX09gPZJvcCiLr2MuYU869y0PT25Sb2ln7u9
                      mhC+vQPncb1oR2A8bF6gvEt3xL2iSUE9+FynPDjipTwAwkm9OgkBPZ0ulD2qh7q9wJotuyKzIz1U
                      yJW8wJqHvdkwkz3zCLC9XkWjvYgNx70o+BA8HXErvdCEQr1EngG9yotDvUDDPL0wvom7WjdXPWKP
                      dT2HZUe92mARvYCr9rpQn6u7toMePf6IIj1A+zi787OSPSwg2rwwXHI8o2wvvRdPtr2nHS29kHIK
                      PIJkHT1XI3q9gqNxPWS77DyFUqA9EM4pvTPiVL3UnMa8YHovveHDiz39PqW9sFpwPCwSCL0Wr2Y9
                      l5eoPUpSML0mmm492jDAvVJWFT1p06Q9xnCmvWAuyrz/oMI9lbSdPZ67XT22AgO9dxE0veoZF73Q
                      hGy8EDEzPH/qrT0AaNe5uo0cvbobLj2Zq789/Rm+PQJxr70IVca8bGykvAAI17pLt8k9/a6KPeJ1
                      o71TaZg9KNKpvCOehT05uKU9N2iaPeKIRj0Yyc+8TXVRvffZSr0ATrA8AELXuuqyw73gYSG9oLKz
                      vFWkyL1YKIa9VuFnPYAQK7wlsqQ9gFpjvRTn9LxZb549pCnUPPcEe71yHRM908+HPQDj17zXlas9
                      0J7fO82Eir1vqre93YSJvdpZDr2QuSa80AmOu76FeD2Aq786sOdDPDCeSryiKoa9QPClPCmmtz2l
                      OYe9SjhavRM0oz30fMQ8gByYO1J1nL0Sdl49doNZPcnpnD16BF49BoIMPbBzUTxdYJw9nv2TvZRw
                      hLzsFdW8brZUPeDPxrx3o229sjSHvRS/E71NnGu9QrofPW18oD2wBZ+9qROQPWbipr2Hbas9rU+Z
                      vdOMqL2Y1Tq80ErjO8IGgL3ASgu9uj8UvZqoIb2SyDg9EsEkPZHGxj2m5UI9QyG7vRpKSr297ii9
                      161kvaBTtzxh8KQ9In0jPYbLHj1sWsY80TjBPQiijr3lB5c9KX/IPYhfor0kgQi9U/O5vWDsmLvl
                      /pa9DSbGvXhimbwdy2+9OI+JvZxxEb2gGNC7jiSrvUsnpj0VzqC9QNUbu0xL47xaFBm9nghQPfjn
                      tzy26mo9GhaPvel9iD0wdKa92mOnvYbNcz0WH0Q9AHvXOfBZtr1B4rk9Q2zHvRSP6Dx1spO9HY+4
                      vZ5JLD0Yi6M8hdyIPXfHsD3g0Jm9XWbIvVBnSb3tomq9SpZzvTroTT23SbK99K7zPDhsqL1cSOM8
                      oGiVuzMAWL0ICo+9WJ2VPNlRoj1Xjyy9Xtx9PSfTIb246v28Hgt3PRsIub0swZK8ukMhvcMFI72w
                      Uay7vh5aPcMwVL1SPca99Q25PZOClj3KK1E9rIOSvAn7jj0tCLQ963WVvd9Sxb052sA9QJ+cPBDb
                      dbz6t1O9OE+SvRJOsb26pDa9NHDTPGAmEb3AQ1e8aIdvPOMSeb0R17A9jA/qPDCXETxkqPc8fmJc
                      PSIvSj1gcos8yJKivFL8NT0gjPQ7oXy/PQrVOr1YMqY8Dgp7PXRSqbwDe1K9gG+Ku5o6Xb1UUuq8
                      b5WuvRq3ir0ATlG7A9qVPULZhr0sXY08J4A7vdmXrT2xUZM9QV/IPdDYPb3C1BA9AKEBOmtWtr0o
                      dIw82np/PVSB5LxyPjI9zfyMvQ7jbj06hJ690tSVvRYJVT1KWJa9iKu7PKCs1bsEWt883Yk4vSA7
                      1bzKIcO9QHGMvICQ1jrtA8Y9A32lPbSoAL2ItLw8zbJrvXSdrryQcp69sGNIPGFYhj3pwZQ9g7JG
                      vZqpIT0CTXE9o1uuPVgwXrzLTck9GAjDvYTq0jwSEBc98EZlPKrmh72g65O8AFBOveLkQz3YwFo8
                      Z6xyvUi//7xg2jy9kRaWPbQOuDxnwLG9qDFaPKx8A71jqMk95GXUPMBjDzzDWrG9ANoSvYAkb7xz
                      Cqs9odCRPdmQvj06Uy69ok9aPYI1BT1Zfsw9KbKbPfTdt7xIxZ08YDwMO1DWwbsEjYC9kw5mvWj4
                      +bwfB8I9zSyPPQD1vLwAC5c8jWK5vd2/pT0dGTS9mdioPRZBWT3pJZk9qG83vAqZD736zUo9jd21
                      PUJqST2LhLy92k9hPSiAbLwSdSU9YPZjOzio+bz3KpE9YBy9Owx+tbwdWrq9Gt2GvSDDRr1lAr29
                      BHfdPEgciLwASIo7EIwUPAHLmT03G2i9TTzIvdohbr2kMQK9QLHYvAQZgb1VX6k9wGo4vcIhDT3B
                      hI09wJuXPIDjRL2wS9e79hRWPdpfv73QorS7DJeQPE6kOj1ybH49jLHhvO0pSr1QO129BuODvbT4
                      Ar2g7b076KBrvOr3Mz3NnMe94rNSPc8GjD3tb7g93xu6PeIhs73gw7A8gM3ovJinyjyA49w6SZ6b
                      PfiYp7xQ8sq90D/7uz2ixL22UIe9PbbIPUc4rD32vnc9RrUJPbNqHL0kLvU8OtEzvWMdy70A6c67
                      i2uavayk/DyQ0Dy8Q52NPRplHj3a8BM9WFg+vCwh3TzacUM9DQaEvT/EoD2HfpY9Da2BvXj4pL06
                      SUs9RH3bPEmGwD1PPKQ9lGO0vLAOXTzTsnG9uaenPXTdgjwE0RO9rZDMvXrKFD3k3+48asRJPcwr
                      kLyhvIY9mGu8vUkwpD3Hvp09AuaevX7sUT1lta6921qpPQfYP70AXk68wU2VPcnAgz1g50m74Ca7
                      u7BMaDzwFba9lLD6PATX3TxiD5S9AGemu1SEgb3z5VW9lDXVvJRmmjzI4LY8fvhqPTD4r7sTG8U9
                      UlwNPa3boL0GyGk90E4HvJxJFr3RYo89MMCDvQBpNrwrKcq9CsTFvTRh6Lz9fL893a28PXDzOTzQ
                      fve7mFIiPIBzMLyVdKq9AMkFO0W/i73nt369OpWYvZPju7094649orC4vULvWD2A1gq6gEpaOofH
                      bb1UPe284AilO0jpqzxeM1c9IOlRvXEezD1TwLo9mNnCvGDO9ztg8/G7KDAbPHxD0jxqL1c9l+Me
                      vczKljwszgG9C2SMPSUOqD0Av6i83f4evdghhLyqjme9mCCkvYZHOz1FZJA9oJuCvbk3kT2uan09
                      qCRrPNAqrr1Zhcg9bHr+vJKjTT0pOIU9sh5gPVQpuTxWhno9oBe8vMB9jzwiSHM94iVFPRluxz1M
                      Ety84NjwOzpLgb2PDca9upleveL4Cj1U36o8rKuTPEkDxj3QRg08ShwXvbj8nr3Q7TA8EmUjPfTt
                      vLywkoo7imAqPUqqVr0whL87ouQ+PWgOmL3XyrM9CLTlvIlCtD3U3Km86KtsvK4EEz0ADQ+7FpcI
                      vbAVC70CUBA9dJL0vGeOab3qV7q9gKGhPJM2I72Fa569Wt4WvdincbyanGg9qHqSvUc7mD2AStq7
                      AEF/vKjeSLxZIbE9wQKXPTp8cL1I9sS8YZiUPaxD8rwsXYS852hZvTN1rz1QrjM8WIklPPgfw7yA
                      /jy8WE4UPIJTMz1iBF09tRG0PRoZLT0k2vI8AH38O4CmrbqIU5w8BrgFPXt6yD2ClBU9ccqLPRrS
                      MT2zPVm9hoQdPbAxFrwtU7s91wVlvfBcOTymJJa9ZIr4PL+Ugj0QSae9TBrBvLIJKD2gRQ+9Pf2b
                      PdUekr1IBuC8A6MuvaXLpT3TdbM9WORkPPRk8LzmO6m97CuTPEXAkT3CvIy96X7FPVceNL0aXIG9
                      Cwe6PbQ94Dxo7jm8wD8oPKULnj3dany9V0CgPcHoqj3Avhy9tQSZvQ+Oyr1y8Bc9QHhlvCvamL2a
                      5I69iFTLvNr1Ej2wRnC899i1Pf+Qsj0aAWq94B2SvBLGRD0QHXU80GOWO8gLyL1EWgu9K2GePTSK
                      qzx4+4E8aJtkPFYhor0XA7s94/1fvdg4ijw597U91VazvWE2pz3yuAc9GqNwvWpkMj1yPgk9nf9I
                      vdZVJz0nW4Y9E8gyvYBBGTwGqRQ97g5pPV/5xL2j7rG9x7myPXBJH7yhFqc91rSivQ0OJ70AdLA8
                      +D6CvVgRWbzXTjO9KORlPEoNjb2Z+LU9T628PRRxsDxRA5c9BaHJPcCjRzuA+w08odiaPWye6Tzq
                      M1A9juNDPbrxIr2AOcy7kEuLvZjmBDw14p09P+XCvbAs2buYay48yg2dvcBhaLvi1As9SMeqPMxZ
                      rjySdmY9IAK6vF9ShT2jezW9TdBdvcyojLzw7qi9Os9ivfNkS70ai0k9jKD+PJ2vNb2qGVA9rMvq
                      PGAi1byj1I29w5JUvfKLCj14LbK8ciScvUBqQjtAAWQ8crspPTrHMD3g/ge9lAiyvKh9lzyY9Yq9
                      I+O9vbb3A73Y7zo80ikjPbrqZr3nVXq9GliyvTKBTz2SP6m9ENVDvPJHXT1OTIq9ounFvatNtL0A
                      tq+8lTqPPaz2xrx9hkO9TVedvV6aMT1McrY8x+JfvUJwp70kzs08V1Ukve2fcL1dgnq98pFsPZhz
                      p7wn78a9MX2LPfORzD0gCYa7YlorPdX9u72eUxc9TAn4vPJFDT04DLu8Tg56PcPKlT0pnYc9hEv9
                      PDL/dT2In7E8n/aEPb3IlD1K3oa9z5qePc0Akj0YzSO8cdKvPX+RwD1yUDk9VGPYPLJmgL3MZei8
                      1h9nPRguQDymZhe9/VpEvejigLyDRLM9p1c8vRCHRzxIYqO9WLBfvHpqUb3Acai9aHF6vIB0TbzE
                      jAO9RAvSPHcGHL1nmVC9vKfrPGBR07swTR08iGv5vCCr8bsiL2I9cL0LvJaUAz3OCWU949pwvdAf
                      kLsznpI9zCH/PAyjgTyTe0q9tNG8PKMIlD2A30k8gnBnPetFiT0AyCy7t7a5PS6iVD2CvG09JBgY
                      vXI2bD2c79M82En9vMx9iTxwZ4K9vsejvUr7db1gUcq7/SqPvRQviTwA1B0616+0vZTvsDwlnsy9
                      wEyBPHDjTbywieo7/lM5PZTvhLw3GjK9Cj1HPQ/kij2ptaY9Uxy1PfYpo71g4LC7ggoLPQNIyD01
                      m8k9HOLkPFJQxL3Z3rI9EuxfPclsjz1I/v684m9sPXQMgLxzEK89g8djvYNMlb0wyjy9cQGHPTLy
                      Jj3EKoO9xT2fvQXJoz1v2ra9Z3Q1vT7sZz1NDrc9Yk8kPSARnzw4use8pZaDPXDcdr3I36g8lP7q
                      vOxS7jzWGn49uk1WPc2wmr3BIcs9NjkUPYrcn73MFOw8sF5XPHjLmTwmMEI9AKowPO3ETL06M3w9
                      KK12vPtoqz2roMA9Ljp6PXiWx71fuLm9AAu0vGZxqL0Aq9G7crQzPXIXOj3KkXU99LenvMyw6bwD
                      iLG9IADcvLgH4ryXxn+9v1eGPbb9Cz3ghYK9ZteKvSIWET2AtKA8Yg4fPVigsrzgqIq9QP/0Oq7e
                      l712+Ak99mlqPWyFwjzw82o8+76+PXCASr0DeMk9cTuQPY0gML1n9bk9TADXvLgljjywdDe9sgsP
                      PbrVKj3dL5c9zE36PESn2Twa9DS9+F+fvGAXvztBBb49s5eEPYA+UjrNIJS9gA45vREJoz37q769
                      zto7PY9ElD1N1Wy958S7veSLgL1aUC09YP45vaJbqb3ihHE92HKavETr4jz+vh49J1Fmvbqmmb0z
                      Bni9+lY2PUy1+Tz6jkE9dOPaPHHttz1ukCg9JKIHvRKgKD0AFBY7ggYbPaGHwD1qWQC9HK4JvZwO
                      8zyPBp89cs08PTs7sb2guU+9P4m2PUhBm7wQwkM85qyBvWP0mL1AnOe8ppZOPYDNFjrx6bg9zMOa
                      PDDuu72W3SY9qFsYvDa+RT2wbU482FxBPDJqTj3Qine9/WeEvREBsD2AIhS6dWyvvd2rpD3AXzA7
                      iFusvBKBUD1KXyS9qamGPRQa0bxLFKq9UBeIOy4sn73TE3+9oPpvu/EiiT2My6C8TLHcPOSOzzyO
                      CQ89x2iMPQCzAbo3OGy9zoBOPWgd37ys4Qu9aMInPJANU7xRNKw9jshYPSrULT3gT/+71h0mPap4
                      vb0Egom9s5dzvfPAnT1CVLK9gOTNO7D3C70SkWY9ggeuvXUtuT3RxsE9oJ0Xuyh+crygDCK7xAX4
                      POtdxD0qIzu9cndzPZLFdj3Rnck9xq5vPfMYbb2z85o9rr2pve3iq72Yhgq8oF7Fu3nfqj3QJZ29
                      +mEQPd8Nrz3GqRY9l6O8PZBJC71qQU09tlxMPUArnLpAb3K7+mMnPSxAj7ww88g7XYJuvYZcND1n
                      tqw9o5yGPRBxIrwof0S8TmsAPSKBo708+xO9VaSqvcTu0DzR8bc9gLvFu6CrvLxkUOo8MLZAvXKc
                      VT2tUr69wLtPPNS6mLwjGz+9k58bvdKmx70Zh7s9mjwJPVarLj0A4CI8gMnmvBgMQrxwOym9sx8x
                      vTRMo7wFuL89Mss4PUccxr1Lt8Y9sIwzvMA8fLsi5Gg90iKYvQELoz3f34s96NVPPJAtLzxR64A9
                      MrE0PcfpwD0rJIc9BM6EvZhjhrwXBMy9OHOYPNdoyb1QnNm7UY6NPba2hb1rxrc9Xt2WvXDzEr0J
                      24c9MusHPTCgbr0+WWg9nn1/PTQMh704d5K9XbGXPY4Tm70rCrq9gFG3OxjrTzzbS7m9HpZgPXNX
                      T73FCLC91ASQvKgCNTz69Xs9R3uEPRA/c73G8Wk9um5ivbW0tz3BFYM94OqVPCB8/bzD/py9LvJE
                      PXUDsj2FoMO9lG2NPABDqL2mngS9UrwxPRG0mD39bo29f9a+vahRcLyqeDU9wNaAOjfZU72AGVM6
                      E5R8vWrmZr0AR6E8eHqvvBpEBr2D6VC98DDLvfJ8Qj3oC708ZgqdvW4BVz0R/MA9wk4pPZ5bBj2Y
                      jH28ynhbPdMmvb2ErgO9bBuJPHaJqr1ocZI8QEKPvcfEX72beba9kgsxPcB+fL0ANuO5+eSvPZjy
                      yb2yMm89YRWpPT1rZr1V27g90yKePdicRbzoZLW9zJOhvKzYyjwAfDG9CVS+PbI7Cz1QFxg8mFzB
                      PPK6bT0QFgy8oEE9O4Rl5DwmtG09+rd+vUDBr70UtYa9zToivaA3djvCvAw9E2PGvQ7sHD0+qSA9
                      0ipoPciVur3MY4m8sFHTuwwhnbyA3ja8C82bPdw6Gb3zMoY9Ixc3vYCgl7wHZ5w9g325vbsxp724
                      v7S8VnVHPUgtir2zj5q9R67GPaDMxjuKsny9YLhzOzCtYr0SomQ9MEY2PM67bj2ozD+8EJoCPIQJ
                      2TxQoAS8eKvrvKCJOrs3oXS9tUTCPTU1u73ImIm9o7VbvYoBir3y60g9IIHQu2hDn73dtKq9wlY0
                      PawuhDyg5nq9SV2fPdp+Yr2gnPq7YCKsu49ywj2ULps851OZPey2E72tXnK9GkVUvZj0KDz65Xy9
                      IlWlvSC8qbxQVDg8DQXEvdMuoL28PhK9wXCsPYtqw70wBQu9GCugvY3dgD2CM0Y9fTxTvRTfyDyI
                      iNS8ZauxPZpYmb3bEI696P2ePFdnQ703v7u99QSrvYCD+DsAqJk7ALVcu6q8Gr0DKmK9aXTMPQ0O
                      e70je0G9ol8DPYYzo71hsIw9oG3KPBPhIb0gB5O92DnZvKUXwj1ZncA9bPvsPJvSkb3PD4E9jcDA
                      vR2Grj3zX8o9+vPFvWhrNDxwRVa98mxrPRj2djzkoPY8ACKAu3vEk70ovlk884uHPb90xD0AZue8
                      eCWGPGwol7xij6y9XrNEPWJeHT2gsay76I6yvNBh2rt43Ky9+NP3vB6Mbj3etyo9CPivvCAejbvq
                      gGE92UWLPRlgtD0Z6YU9ySmGPa3sjj1Oc0E9jN/evBpsNL3Q8n28ulSEvTwu8jytypk9hw9YvdBv
                      gLsftcw92IK0vff4sD28r/A8QfCSPXvtxL3QqqE7l2nIvedcpz1wdmi86L7MvIrwnL1dp6u9MPk6
                      PIK8oL10I6S8Eh0OPZWWkr3Y6Ni8nr4iPYjG/bwpt7g9whMePTJ0cz2tvhy98AJBvbAPtTsAoqY8
                      QILtvDKwlb2QS2+8QRKvPSI7jr0YRB68oHtcvYBnfr1yKGo9GjUUva0Lhb3NQ6u9WqQLPaKZgr32
                      yKO9JLsDvQp/HL0a50M9cDqlvfhzyzywFMi7yCryvLDTm7sAIAU5zSOhvYlWkD2AMMk6XYZqvTgh
                      xb3RdLc9OWWvPSJnl722Z109gstiPZ1pR70ASjC57AKyPKisHLzgPLC7CLq8vd91mD2OiZm9BI/o
                      PLYvcz1oque885uavbZ/ZD1/3L092tNNvbqvC71yaGo9VDqgvOiVqb1kpNs81c2KvfL3m72mpCA9
                      qPFfvDDGpLvrBZm9BOL4PH8dvT0KLlm9QFyfvKB9GTu42va8Vz26vSkirD3AawG7IvSGvRakCj0Q
                      uxU84mZpPR1pSr2Quhc8ekkJPUAzOjtIb4k8YjdqPfCnL7yYK6c8i8C+PQdPhD2vncU9eltIPZnF
                      rj2MEMW81I+aPOGknz36wlU9AoibvfjS+7x+4yY9khIePSCz8ryiNq696O01vGCWQr314429K9uM
                      PVrMKz2gL6i7Au4ePU51BT2rXoc9WBm3PKP/cb20y+C8f6rLvdEyvz1JAZw9YKChO+gxpLyUToe8
                      ANTButiqyLyufYS9sAEcPDBF3zsy6A492QqaPZULzL0U2/q8Kr8GPbQ61rztraa924ypvfMarD2M
                      ceC8QHyZveMUjj36sRS9ZswePbL2Ej227xM9mdK8PaPhGb09tTK9EnrKvR5jTD1YTMq8WK1iPM2p
                      Sr19HY49HW6+ve4DLT2qPwq9OlNuvcD+d7ydrpu9lNS9PGC1EbsZA8k9Rp8CPWBNiDyMPo+8L5Cc
                      PZhfUbxXkHq9zAqMvboZcD2YqLW9YnG0veqpnb2mZGs90iUCPfo6aL3JqIQ9r+ipPfD6R72scRK9
                      VodsPaAo67vqAWw955y+PXpHDj10HIc8L9mtPUz6kjwQOCo8q62+vXoLu72Y1ro8GkO4vdCXaDzp
                      24U9mrg5vRCwKbxRrps991vFvYB1y7pcKdg8pVCqPRp7nL3Ueca8vnRoPbC4GjxAsLe8DvI1PdvC
                      gj2AgZM76sAGvSOSeL3A8E+9QCOYuohNo70XBMY9aPJBPE5+WT0UEOu8wMUYO9pKNT1puMo9XQWQ
                      vTTlFb1AiBo82IQavMBGwzzQBWI8mOutvUqrNz3mEFs9mxq7PYcCsD1kBPg84Ht8ve5zWT1Y80w8
                      fWepPbmDiz1z/qW9s2iNvRhfvb3iXZm9srQQPTqlRT1KSiA9jvo7PS9Ar73u2mU9sB4hvAE2oj1m
                      EZW9ZNbVPMXNrD0WQRg96XmMPXRvzzxnksq9IJ/iO745QD2ng3+9i5zFPSPlUb2i8UQ92E5pvLAH
                      XDybhMQ9hdeVvdDJmDuKSDw98Felveg1nL2zSyi9Oh0TPVTWg73u3Ss9kmUpPQOAQr2Aq3M8TILY
                      PNZchr0QmV280KYevGwzrTzT77Y9lKUFvS3ArD1dPj69aol9PXRhyDxAEwy8gND0u4BVULqAu8C8
                      QmIKPR+NjT0Hdmy9/Dr5PKDPwbzAVH27kZmSPcBiCzzpYZY9jeiOvfc1gj0v2r+9z37APbdbY70H
                      si690DWHu6xGwzxwXDu8o2VevWXPwb3wGQ48vrEtPTJbrr3x6b09OqdtPaaIIT1SujQ94Yu9PRn5
                      kz0oY8q9V9C7PTmmrD0wBY47KPD5vLJFIT0Aizu9qzHKvVM2vT0Yp5s8Ap5tPXYvLj2IBJ69EERB
                      PAyw9zxhR489MH6+u3ZUPT1SmaO9za20PWgGA7y32VC9cG1YPLXGvj0SjGs98r5TPYz15rwp2po9
                      kH+nvckHtT3HrD29IHoZveLlPT0Gj5W98yqOvSAB+LwA2so61XysPdYyBr1OOpe9QJF+vFBmJTy+
                      BZO9w8+7vbfdKL0/nr89srAyPdXwgD0XDx29IAewvMW0lz1pi609IS+zPU7cbz2qW7q9FKXRvP0F
                      V72lfMA932/KPXs5t73+RaG98rhCPQAPc7wSuTY9tCUZvcXHgT2skbW8CijCvaYfbj3WEGo9OoZ+
                      PcdnW717l7i9LcOCvdCVT7zTlYQ99i5EPciGgrxQahu8dBiMPGKpKz1YkjA8d9pavSLweT2xD789
                      jJuDvE0hjz3bT6a9LUrDvf9wvL1K5xU9FlFEPRBLf7yJZaQ9SlOZvQqNcz07/aW96zO9PWBKGTs6
                      8YW97OyjPL+nsb3FCYe9UG8ZvS3fr72ihzM9GLWuPEF5wT3Ws4a94DxbvdJHMT0YJ4k84k10PdVA
                      jz2yziY9XXayPd4JlL1+a2A9/e8uvasgqb2BosA9hod0PaJPlb1EetI89dy7vT17Zb13Qp89PlUy
                      PRNpsL3H9su9exqvvQOpQb2d7cI9dResvZ6NdT15cak9Q4yxvXCXDzygEUi9rMzzvNj+rLzTIsO9
                      w45+vdCBQ71tt4y9KPLSvB8sxD09HKi9ELs5vFpqNL2QB1+9Mz+iPafLs727/qG98c2mPSKCXz3A
                      +Sg7uWG3PYefV71Wlgy9Sa2yPZQambzQyrG9vGn2PBTnB71F68E9zCXBvDfIPr2w22a9QL1Yu/b9
                      Fz1YU4O9AN/OOw0bbb0gttS8jlQxPcDgwb1E9YW9sCZTPFqScD21xau943iQPRGsnz1ubjA9WCkQ
                      vOCwhzxAxDA8QmCFvSyNwTyAfh+6iKeovcBFvTyQzCk8QHs6PC2qWb1oAyS8p2JgvQCCsDxyrL+9
                      xoBBPeDJsjsSj7W9YIORvP6Ocz1kj+o8e9jFPbrEJr2wYSK92th5vbApTr1nzGm9EBpyPABk/zqM
                      keq8lGzrPDC+Fb1gMMm7omhtPZhPNLykN/M89pwqPeqrcj1aNKW9f8bBvTTSkjyiVEo9Sg9vvfAr
                      Z7xNB5w9GLAivBiOWjywC4+7EOsCvQAtjbnpNIU9KvewvTmBqj2Aqxy8IEIivfLYLj3WIwU9AKAn
                      OiJwwb1Cwiw9oOGJPLXxtT3ATrQ6KqyivehNl73X7Ce9AICUO03Fmr06SGM9gLkUuvBia72tvKO9
                      w98rvZpiar19xTu9Y6jKPU5kiL3ACye7ccOVPQyAk7wC8CI9Uz2qPUdpkz1CrkQ9oEkBvVISaz2i
                      l7i9hxS2PWONO71sTb88wNY9vNr+ur0IJ4a9giAaPUIxrr0HM8Y92pZPPUlPyD0TwHW90cWGPVBZ
                      ajwikFo9P2aUPStLqD2Atk68sM8lvDQU1DyStmg9Uk97PTMMc71Sjkw9lWLJPVZrq71svLe8UKen
                      u3MRrL2hx789oDXRvFCcTzz/qbw9PtmnvWd6sj3grsS9oLJ8u3PHpb2Q60I8KYyIPQuctb0hX709
                      KK7IvSVgkD2uJxQ9KLwRPFH9lj2Kcaq9uuK+vZlngz0sLJ08oOjtvM3Zrb3alCO94TuNPXgxyzye
                      XpG9IFaFvFa5fD2IUoa9EHRGPOTVib0Ay8u8YE3Nu5/4yz2x5Ic9pOn9PC3iur3S5xQ9wPYxOxX3
                      gD1qX4W954QxvWA8rzsTwo094O++uyEesT2d5cA9VzQ0vQrhP70wwq+7mCwXPLuour28BQq9V7xA
                      vUZEGD3idl09ELHBvW99rz3FF4I9TZFTvcJkNz2gt3K9sAW9u165n7194ow95jBePUezd73Ts5g9
                      25PMPTkYiT3bwK+9LSe1vV1bXL39koc9gKBrvAffuz2/38A974GePXTJzjzdOXa97423vTmzpz2k
                      ftA8UJZVvMBU3boA4lg7B56jPb0caL0asMi9KmBvvcedoT2dAIG9oNVruzKHaj1Xuhu9+TijPZaG
                      Ez0AIFA6K7aKPWPRSb0aDUa9gO1fPFC3K7wAvKi8dHaQPLAberxDrXa9MJVEPDu6wz11WpG9ahpB
                      PcgHujxpIrg9iqq2vdchb703asG9YAR2O7sQmL0BOJs9XTasve65FD1muQE9xqt1PWIWr72KVxK9
                      AJotOVDdf7x5hpM9ABaaO5j/1LxoCbK8oMzrO8ATdrxSZnU9tSmZvWAljL36UsK9szXMPXIcFj1A
                      5le8uI+6PO2GlT2sjo88Wsu7vaclhT0AXf85wIGSvFKAaD2wE208vX2evb4zbz3azV+93RIfvWTc
                      7jyOiTQ9aXS+PX21Qr3q/UQ9M2ObvRQV4LzgL8C8MCo4vaMiK70GUyM9HW6EPcC1LjvzrkG9LIPU
                      vGO9jT0wKcc7DNntvJAgfjzPF7y9+JjLvBl9qj3I+8i9hhlCPeK9mr16y6W9LDyYvAD+5DubXZi9
                      7M4HvbaqFr0aFiW9PXWQPYhFv7wlroe99QaZvbBGjr14l5c8KsAJPTP3Rb1N+7E9TvIYPdavn71+
                      BiM9U8+OPdDUZL34jIU8VjoPvTR87rygWti8PeKoPbLDCT2Y2Ky8QKSqPFAw5jtfb7i9AtuxvVwO
                      9Tza2WK9NDTsvBjZFDzI14e8jGrfvBD4Czyi/yo9cE+/vVAvnb1gqk87343KvdEdwz00W9I8mdbH
                      PT2tir2V1JU9FMGSvO4LJz098IM9gzHGPbCcRb2C20o9lEiOPDY1j70+SR09vhhlPcQ4+zyk0fs8
                      9LmpPCi8l7xEFhe9coBGPdB2STyOmQA99lgHPd1rZL3OYxI9PwHMPTCVw7uQGFc8TCC0vOCAzryb
                      Pqy9KKKSvJCePDzP2KA9xfaePdX2hT1qOni93iIaPWKLDz34Jpa9nEjTPGAxdzvoUiM8bWCzPSop
                      Eb3wzkW9BWGwvVL+IT1Cdkc9UNq6vXOwML3gIqW8jYtWvRarAb1AHFq7cJ57vVmUjT2gKbm8MEUP
                      PDK2Bj2a/wK93ndbPdISPD2wbrK94BKau5zPFb1mFwk96cfKPaybDb1Y10+8GfOvPfLHRT1UJoO8
                      KAExPCjmPrye2k09aSHLPWBIdLugWeu7N6w2vfqBLr05bsk9mMJGPGCmaDuuwJy97Y2KvUoAbD0E
                      cOM8YdWRPWvWpz1+g1k9uBLLPJ5UJz2RObo9Zd2Yvfx31zyVgJO9AC0rO0CerjyKOWo9ylqSvWBN
                      Krt6Sy692DqOvGh/Cbyl4Y69XKXzPL+fpj2CdDM9SppIPdMjVr0YU4e9GK0OvO73kr0AupS9OFzB
                      vTLaOT3x0qE9GvdPvVoXQD25RsU9/kV4PbhFnjwDvDK96Cl1PPv3lL01r7e9D96VPaKHub1SuF89
                      qp2Zva14pj3SAkY9AzojvVgurTy9qlG9W2aqPeQI7zzS4LC9512kPQbrjr3w9RO84GumPNHajT3N
                      CJw9O+WOvWEpyD3G81A93uahvTSy3rzou0e8qxuMPSLrOj1J3q09/LDxPLdBsz3edjk9gtGVvaNG
                      lD1KxQc9eIW6vVBgVTySS0U9AJgCvWD76rysn7Y85vsCvY1kJ71fxre9wm84PcDjN71+l5G9YlMa
                      Pc/hgD2MbAy9PlFYPWCUhbtxrb89kBNpvFq1NL0jK6m9bMfzvCeBs72AVte6YiYIPQpjIj0Tnrk9
                      PXhTvavNw71M19w8XMsSvTMncb0K5GA98dS0PVZOFj3MQOo8HXJrvXDJYjxCN0k9YGeGO/DNGbw/
                      6bS9MpU2PXoBbD3qOh29iKX1vPiov7wZnMc9KNinvCIIRj03WjO95F6Jvc2RuT2ggAK9wH8KPAQ/
                      4Ty7Day9SPK2PLUhjD1vAr69YywsvWprSD0Aj107SXO8PcTDib1Kuo+9zEQJvWBan71gwZQ8DXYh
                      vfeEYL31QMS9/R9YvZ4DWj1OfzA9ugRePfuogT2toME9jLfVvKb8Gz00QoM8AN63vDGMjz2g6LO9
                      4BqNPOLltL1YZdm8vU5qvWq1Ur3omuG8o1jFPSoIYL10FJU8UKw/vCnCxz0V28k9DVsuvYA66TpT
                      q6O9oHL6vFJ+lb0ylQo9NS/GvQoIDb1VH7+9wJSeugAueDvS4Qg9bjxBPf0sjT3QHKi9aUrMPT48
                      ZT19mUu9TN2yPOrOgL3bWrW9mpJSPSg9pjzodQW8jzaLPXpFSL2tepG95ql6PXIQXT2Krpm9fiVV
                      PfEIvD2M2oU8HcuFPRNJQ7184wO9WdysPaCsab2+9is95M0JvfDdmL0+ukU9rsyXvVo+Pz3x1q09
                      zqmVvdq7aj0UMhe9je+oPSOAvL2o0by8iIa1PE07vz1gp8G7sO4ZPEPre71ky9g8oG6mvKLMZj1S
                      zwU9UrdPPb9/hT17V5U9cmvGvUK5Lj3inTU9wDWMvIr2Qb3ozV48dKcAvUNlWb1KrBy9Ml5wPYCo
                      1rwKl5W9qIVbPDGyuT1gWvi83zWuvbpHMb1KPJS9wAxtPBDNC736Oy89maWVPeCaxLuqiQS9LM7k
                      vDamKD1qYUw9+MybvLP7eL2sqMc8xy4hvVr7UT2YNqi8BqgZPQDTy7toP228XRDJvYcwoT0gieW7
                      UJmduyD0ybsulZy9LlmPvRExwz0WZxS9mOwGPODtyb1oTrS9wOz4OjztBL0wtjy9khJmPbkEvD2o
                      8HA8avlCPSa4fD1JW4o9aJMIPHA+H7zgnI29PhE1PfLcEj0+i0Q9uiRyPZvqyL1QXdm75YnJvRi8
                      dDx9WR69gz2mPfK1m736TrC9snFZPZoKUr0SF3s9KI4pPHB+QL3Qe4o7uEGyvDqfHL2wU1A826a4
                      PSTGCr1gPt+7soVXPSJ9eD3/r6o90Ft8veTeFr2SPwA9qGQlvHTQgb3IWvy8k42mPZSlzjz4JIO8
                      83AnvRSg9rzgLIs7A5U1vYxllzyXUyu9uD6jvVM8P706DYa9FlBRPVjNOjz0SJA8+LedPAB4KDyc
                      HdI8Mu5hPS6vbj0iEh099uYQPboyZD2AmPe7eXqKPWDthTwzTsO9CHC/vZqDPr0b/4E9lGYRveCx
                      nL0jh7Y9Cz+9PaxpmLz0BA+9aPN7PAP8Tb0DxL49kgAlPV0LsL23uz69MDMNvPDYdr1QyIm9IExt
                      vegyDTwOdV49nbOtPfQR47y0loi80MBkvcfgtL0Svxo9526rPRKLxL1V5489YDVgu7NUyz3bB4k9
                      yE+wvUMxJr1cfus8knVoPVj5pL3dK5e9CA6jvSCd27zg09u80uUPPVi4gr1mNmc9ubmdPdKUPj12
                      yY69kiKuvTLDJj1D1x69CPTIvayW2zwAAVO9vF0PvVbxZT16sFg96gBzvVoGJ73mlV89wFrlujDO
                      ibvFUYW9gGiovPN5eL0B/qw9+CKCvX24nL1h17s91EOpvDG0iD0BmIc947GivWpTCr1t+JM9gNn5
                      vLQRnLydC489rCjvPChNvzyThca9meCyPQC5lDtU0ck8VgMTvbDoJzyVLZI9Tu2BvbL0tr3tdL09
                      tL7uPJFRgj2T4Zi9ZyzIPQPTcr0TmoQ9gEy7PHOJsj3j0JC9GFLEvZMWlr1jRaU9LM6ivAAIxTrM
                      ucw8Fm2ivaokcT1SKQM98lVKPWQn3TyU7O28wLbVOs05Jr1Qwt67UPFOPCjvyLwXHiy9m7SPPS8h
                      uL0PQMg9gH/JO6O8yj0gTJQ7FUfEvd3siL29mb69LMXEPNNAUr2bHbe9oFFiOzrXqb2x86A90MQT
                      PJ1nVL3A+QS8pqIcPYe1oz1KBJK9TAmSvIrZbL0YTR+807KNPXQnpzxcAxe9swivvR7tLj3j73y9
                      OMaNvcD+mbow4wu8kDw4PJifWrwwNKO9cmmrvcg0i7073by9OBjJvNderD2WygS9mw2WPdKZAT2q
                      xI69IsUXPcAqCr3AQIu6GsVuveB5wzyAWuC8kNh9vAsdmj3quoO9wDQZPHtisb2QLQS9GPxhvLpt
                      f72AzdW796N5vWpYRj0M8o28YvHAvd5RBD0yNBE9EmxFPdDWcbyAP2c87SEavaSP9zyrc5u9Yb+P
                      PY1vtj1ahDI92P5vvIApMryr2aO9EPkhPNA1YDywHym8UtsYPTqjUD2di2i9piAGPersIz0ChXs9
                      2DU8vJcpyr3qeiO9Qp4bPaOwnT3bW5Y9WEmfvaSf0TzL8JY9/KgEvZLzTz2LRJa94DDVu2ypkLyV
                      Lr89FBbIPACDY7zgLd68ADiqOOlYnD1ywhI9bITlPNA2S7yuZnM9msS2vWBJMLuJbsY9s9aVvfjp
                      +LwD0ZQ9sLmAOy9SlT0wUzK8ahqSvY/Doz3ToGO9lyoavTOUe71HVii9+ksMPbb+ND10Tey8MyhV
                      vYzK3zyHPzW9iL+5vdjANbwFIoW9hTGsPQb4Ar005N88SuaivbJuXj09q3i9lB6NvF0eVL2Sykc9
                      5/e4PUqAOz2mMIK9yrFNvWpTFT3NSU+9nHyDvUAGaLzlXsc9WEmCvJq+o72jLCK94Aj2uyQs9Tz1
                      64q9ZfGHPWadaD3YyTE8kuqyvaye/7xKU0o91gs1PTY+CT0AuE279HXwPBHSkD0A6r26Qu5ZPfTH
                      2Dwx/YU9oFSqvAD0Zroej2Y9nG6LvQDQfjrN57C9IJyqPG6+dj04HJ+9MBifO5UJoz0NNsq9tEe2
                      vJpzXD1hdpo9oBhTvbK/h70xdYY9/oxbPYuBrL1Aqzu7ZDjRPGAZSDsCnLS92h7FvZ47OT0gvck8
                      8oGIveinVrwuLE49xLniPDCUC73GQAa9q/isPcgEvTy7JK89Wn4uvezCwjzID4e9HIn7PO4sAT1R
                      oME9hypkveJFWD0j41m9MkF3PXKzRz1H3HK9cTCrPRlskz2jLka9feLLvS08j73aG669wD17vSy9
                      gL0GcKi9GDppPHdvSb0Al3S9MA+ouxPUNL3ACwY8Uw17vaTAir3uSIq9n4OlPUA5rbxMlMI84EaK
                      u5Vuoj2RiKk9YvJiPdUzoT1syKi8eOe+vH6FAD19lrS9lyLDvX3isL25Z5w9jX6kvWPnML2X8qE9
                      sdiLPYDLmrygoOg77XpmvczKsrw/4sY9jgVYPQqaQj0Tb5A93sl3PdAVmr0lyZq9APj8uSAT3jv3
                      ZrG9LdcavWim57yjNEy92J6vvLQ9/zwA9xG787B1vUAPEr2IXJO8rLUEvWc3w71ggqW99MwBvTZp
                      VT3thUq9gJiZvWUJxj2AtDe8AGh8Ozdigz1ivzM9dCfWPA3wXr0YSVI86iq/vZNgIr2SX5K9XGOG
                      vc6pdz3DsaY9eqIcPdqIUb3QIrc71eCiPYKELD10h6M8oosgPdpNNL0HAsy9YhedveE+mz0lqbw9
                      KE2ovTr6Yr1IVcS8E+QjvWQeFr2FYY89yE6Qvcxhn7yOJjw9LrBNPVgcEbzorhy8OXuKPRBUBDzK
                      ISG9ANqUu6h7trwTNIc9uu8IvYB2d7pzgSS9UI1gvVjarDyrf8u9gMCVvGKKXz2OTKC9Q7/MPSx0
                      Fr1gNae8mGI0PNpnor2TDL09kpjEvf2yVb1cBhG91VaoPV/2tj0+f5+9oHnVO69auD17Taa9tJPw
                      vMs3xz062Ty9ACjaO1ZzQj0Suls9ZTKEvY51aj3MXKG8rkRZPcl9pT3U4ds8y+OZvWEirz2NxEO9
                      tPraPAJbXD2w4KM7iUmgPT1EUL0YWUK8ANKfOYi2gr2Vw7K9YKzNvJCuYbzAUt+60LLGO8wh5TwS
                      ZVA9k/C8vShra7wSNjs95fHAPbIQRz0A31U8ovgNPWINwL06XGg9Ll2GvQSE7DzzRaC9Ko1rvdi9
                      TzxAyp28N36gPRdpTb3Sjaa9E3U4vVItOD1AkI69LNzOvLmVpD1wXFi8RIvSPGoDST2N0Eu94a7L
                      PW08pr3Gajc907IovV2kQb3QGY+7gNUWOmKsAD1KMiq9iiNoPYyHujzQAto7sGqNvZYXh71N65I9
                      JoNIPRGLsj2iMw89ruxgPYCqkrr03MU8ABEeO+m9zD3QYV+9sIpKPHjUnrzFl6O9ddPDvX0Yh70H
                      KXa9UgkbPTehvr2DerK9AEM3O3DpYbzMXu88BVCzvYAUVr3Kshk9YGRovdQT8Lzs8t08uwG5PQ2T
                      c72vUsw9Z1ixvfgm27yAqq0603UavcAsZzxAIlG7uG+DvdBVCTzw8rW9N5WKPfcgu73qf0G9Dfp1
                      vSKRkL0wN1K9KANsvK7waj2AC6w7ABsWvaF2yT1iUzc97SfDvbSH6DwS1mw9m96SvUc3Z70KiEc9
                      uvV+Pd7+ZT3zlyS9rmgoPVMSor0wdGO8zYo5vUvrvT2/Qre9cJOFvd36O71gHUs7huphPTzj+zyY
                      QU68QItJvGB5NDuXPJE9DFalPLZiZz1Okx09GXLGPXITuL07hZ69QOB2u1hDYDzCdE097oeNvZG+
                      hz1oFR+8kNQwvCZrVT0Yd1i8kB9pvZDeSL0ozxw8LLnePMgkqDz6OR+9Z/ZpvRXdqj3YRWK8P+LI
                      PUaphr3auYu9WpYRvamxnj2ZFck9ID+AvQDLhzwgXNm7R1vHPaJBXz1Df4I9rzSBPf+zxD2zAYM9
                      UI45vLhUuDyYknO8NDXivKq+h71yBwE9ZDfOPBLMnb3BC7E9vjJlPV3js70WzVw9kNs6vHoOVT3O
                      y0Q9+bWMPTLUnr3oM9a8Wr4kvei/qLyWoAa9eGTkvE/2oj2a/GC9GeuSPcJrcT1PjJk9gLGauu2i
                      pT2DM689VsKZvUNGm72I6bq8QFhlver7tr3q2yi95Qq9vZCpxb2FJJo9955AvepSP73s6gq9TYCy
                      vQB0FLzgS7I7/4bDvdvylD2AR6A6/2/KvVpLVz1qXyu9LwyzvZ/yjj2rJpM959+ePZOJlj34CoM8
                      6MYRPGA757u3tZc98JWYvVpLOT20C4W9202TvQSViL1AxSm94sUFPdLOWz0k4/A8lp6YvTBPY71B
                      RIU9MPMBvESPCb0kyeM8JNgHvaPRWL1Sqoq9+Pb1vOTMzDwSnBk9WiUrPWKkBj2W7CQ9SsIOvQ9b
                      sL0WHY69YLWbPPoTxr13aXG9E6+YvZrrST3gPaC9GYSZPfsTpz0nWbe947ZRvYD+Q7rm7EE9h/Eg
                      vYB1nrxf5Lu95SGcPaU0tL3noru9YIycu9rOHz1QNTq8UiV2PS63FD3Y5cG9vTypvRC8H72po4w9
                      0GV1PLALxb2+aHA9yj5oPdDYfTwtvMA9t3djvWoMeL0sHYa9yJe7vb3RRL2quQy9vWh/vVQAsjyg
                      KJe9uVWkPSNkoD13QCO9lBHsvOwQvDz1xKE90LDiuw8lnD2yJzE9JG3YPB4XgL23B8y9mNGzPAjJ
                      5rzwjUS9DHTnvJ7qh72HF4s9lGqSvPixhbwkTvo8DeZevfeDG72A0c66cjtxPbCBYDxIbZA8XxrH
                      PUAOuLzN+je9Vks0PbGMoz1jkXy9gMAdvScfnz0l6r+9WYmUPVGKxD15msk9EONDvJArlL0QTH48
                      5cGCPQoMaD1MqxO9+FnVvA9irr30ucK8TXyzPawA2DxFGZE9iE7rvEolIL0K5ry9JyWOPWIGKT26
                      ACY9KeOtPa6lTj2xHMY9is5pPdiVFLzwAWi9eHm0vMgarDxRX8o9kLk3vEAIgDxYdHG8eYOQPb3d
                      IL1gk5M8+gbGvWfgNb3bv8s9mc+BPZVoib1khwG9l5THvZjTp7yQl1m8DLkCvZSmhjzdCZA9jcgh
                      vVZkcj3gPsg8AL5ovQTl9zy9FZ29Sm5bvWjTlLzojKY80wumPaBcdjsCMsm9SnwLPTA5fb0DWWK9
                      QAuKPKMOer0ApQ+6hp8MPTCnwbsg21m9lTK0PYCjfb0Fp7e9Z48hvbO4oT1Sm3s9zGP4vB0chL2g
                      s728kFMRvSC66TvnjMy9YEmuvBqYY70ifn89Xf14vfK0uL1CpDs9cH1JvUfnRr1quIm9ALZpu+LV
                      cz3t67q9AHJyvO+/hz3osak80Ljiu8Y6Qj0Kqly9w5ONPRTRFL0tbog9lsymvZdAs70CMr+91pMH
                      PXSB9zz34He9Fb21PYA7U7zyimM9GkptPR8WpT10qYm9rODhvPIxez3AA8a9c13JPd0pUL1eKA49
                      lwPJPfputL0xO4E97YQ3vfrfFT3Rio09ysgNPXuSwT3RmLU90hgXPZezTL2TVGm9ei5UvYxNxDxQ
                      BHm98s0QPcyw/Lz94Ey9t1NHvaJyFz0iSq+9QFfPOhDFV72Xmnm9WPxdvNCFl70AFC676sxDvTJF
                      Bj3Q3mC8q+KyPbQp5Lygi2O74PlmvS/2wL2AkJO7yySyverXjL2YDoo8gDdcvSgWU7wqmTO93uul
                      vXkamD0BhKM9oaifPVNFob0C9AI9d4KgPQSHgb2gPYM8MJ0vvMDGFju9/8W9iqMvvcB2STygd327
                      wBiAOv9Dsb2IYZC9NkV8PYXgtD0oVVg8a9W5vUrRSr1t4549EOIQPFJMIz272bi9l8SUPbg4uDzV
                      Y4q9thWfvdC0nDtdn5s9nuyCvRCaHL0IJJG9nipQPbOChT2Au9s6wspoPa5PfT1U+bw85wvDvS8I
                      vb2zY6y9MnsIPWKoNT33Gpw9Da+2veo/JD1grwM7bf65PWB8LbvAsV67DemkvbcxhD10EeS8Q7h+
                      vfDOZzyAMd66qA9PPM2eL73puoE9nQw0vWe1dr3fnMo9wO9VPGcqPb1KE6m9AlpMPQ7WEz0wd8S7
                      PV27PewSh73KasK9yGGRvShCuLwYJu682rrBvQbNCT3I3NK8BlpiPQC7Hbrm9To9zh9lPftowD2Y
                      IxQ8ktm1vRgWcTxQAC297JSmPOhFUDzEOe48upEuPYqJPr1lQaS9ab2EPS0Exz1wNwC9MwTMvUCK
                      Oruwp2s8dl0WPYTQ4DyIuqy8/VPAvaY6SD2tqpq9lVO/vSxewbxSCse9sba4PXBKJTw45qm80Jmo
                      vQKdOj2GZXI9lTGxvdRg7TyANTc8qUeaPShXobxOlUk9vmVCPW4hpr0ZZqM9KH0HvKN7lL1QAHe8
                      6mpWPSKKGj0LycK9oES6vEqPKr1A3RM8xoJRPUMhML3YbnU8Dg8vPdDOAb1G1Q49vAwTvQB+CDzE
                      P9E8/R4avTPBgz1UFfk8WF10vPLpyb0yGg49IVGxPawjwLykouw8SuoZPZrYKb0tuiK91LKIvVLX
                      oL3O6TM9tL2uPLJPID0YR7U8LPwJvfAXFTylSZk9hTuxPWMNuT3Yvxo8N1AavbtIpj0O4RQ9kTWh
                      PYooqr2Hkia9AxypvXI7Bj3eAg096riPvR4ejr2ejoW9Lr1sPbSYqjxsNaC88JEpvJqZbT3Adme8
                      lmghPeQfzTzeQpa9qiCzvU+AtD2S/XQ9dM31vMamg72zKbI96yWXPY8KxT2rbrW9M31evXQhvbxo
                      FQA8540mvQBwZLqqKZ+9oXTFPcAyrzrxv6c9DpKAvQeGwD0f1769dDWJPPuCwT2yNnA9sONJvKCU
                      KbsIkMi8EtdWPWjtgDzRkY090jAXPRNAgT3OsJe9qN1aPECEorwidqu9DAuHPN6fj710BJ28d5jB
                      vTwwC71/9qU94Fb9O+F7wj3Aqke7OzfDPXC2JL3Dqci9mvtSPeAOp7zoCK+9oKEtu+M2VL2nPLu9
                      AA1Fu4CFM71X1bU9lj5YPb9YnD0K3S09hOyDvcPMjj1Lw5+9gbquPUD6RL1gky87onNLPSlxjj0Y
                      Wka8k2VOvaClp73AE3+8HGDQPH4EDT3m8VY9OWGEPWClHLuUQ/g8XXc+vXXdlr28ueI8W/2WPejY
                      n73QYGu8OsZmPfjTxL0/2sO923eiPSInOT2nyiW9kEZ5vEVgpz1gxEu9ABxvOdBqYb2X7rG9GJeL
                      vDW/rb29Lii9UALoO0A4fDsADam5tHbzPCm/rT0TDUm9t7lRvejdvrzjdTO9VQTKvb9msb2Xsra9
                      gO1bOqjNbTwQ+DS9uyDHvey4Er2448C9HsuZvQC4XroA8uG7ZjBxPTfHUb21W5g9QlAcPXi5+bwn
                      4Eq9iIyGPPhP/rwUgBi9mFH7vCgqI7yNwao9OnNWPYJuMj1tfq29ev0JPU4wLz2CXse9S7G3PTSj
                      lLyRs749B2x8vQInTT2vm5g9P0fMPcM0d70GxWs95laBvblBnz1wEQy9u6ylvTA7D73cVOk8wKBy
                      vZoCNr1efwU9+iJgPUCXxzq2hKu9+oNDPZE/rD3UtdG8XtohPZIObT2myCk9V1W6PVePTr1wVoK9
                      gCafvcDLP73YTY+9/2iVPSs+lj2nSMG9MLW4vWTf4TwqbWI9sgMAPRdAGr1gABm9EotcPagFaLxj
                      iBu9JMX+PDd6Qr0aYpi9dvh2PdSIsjyQx2y9cNMePCgnbzz6nxU9gOPCPMcoXr1Z8ZA9K+2mvcpu
                      A71YG6y9w+xQvasloz1CBEo9oPuhPJy9ir2AQsY8w8/KPR6AKD1JWrA9ZhprPWBi5rsxx5E9yQfH
                      PUImiL1YZ168S9qwPbQe67zAZmQ8Lw+rPYCFsDyIx6Q8G6jDvSX2yD2HQcS9+v4lPWDEZ72tCKU9
                      dNcKvXBGYDyA5FI8uCXMvWpXWL39uj29bXHDvTXIib3wlh68uHuivGLiFD3XBFG9LKihvEC6TDsA
                      wWc6Y0m8PSI1cj1L4Y89QdrLPRQ4mDw4cKO8s+bHvfpZJb3qh4C9BpdjPXMwwT0rjrY9+jYLPRvD
                      k71n4F+9mLA1vOzarjwQ7WG8bdKEPQrNXz3oZI29oOIHu4D14jvPB4w9b//LPTJTUz3/Kao96lEQ
                      vc7yZT1f5KA9DauzvWCLsr2FX8g9ZEPtPEAqSr2gHLi92kaEvYGKnD1RVZo98EosvZB+h71rYZq9
                      MGhQPLAnUL3yPxA9/uBUPYqVaz0osV48ZA/bPC7ekb1NL7c9ObmfPaxh/zzCqoa9E/asPfSAir3N
                      u5o9FyK3PQKwZj1wH1m9E24pvWM3Vr0AuKy8utcrvUZIBr3MVvu8sJcFve5VQz3PVLs9ckMtPSrk
                      Ib3SC529knE4PSAInzzMuNc8KyGxvbDMU71gvDa9wXidPWhETjzhspU95y22PdFZwD3mnU89YBCX
                      vCE4hz0qtG09lW+EPTSG3bzvIsE9N8LAPXrIAj2g/Ga7Rw7LPXSiFb2AAJk8cNxgPNuIyr0edGQ9
                      qnh/PcFljj3y7Fg9o3jKPf3ugT0eGGs983qPvRIyDT1U89E8V53FvRSXojwrKKE9LxCEPcrqFb2n
                      A2u9IETHvY32ib1zYny97Ab7PNinHry4TPi8Bx+0PW2Heb0W9jI9u2GwPX2QM73VDMq9RJLuPBAz
                      NL03+WS9GB7AvUAhvr3Qqto70qhdPZ2yuL2wCzS9m1y6PZI5aT3rpK09BaPJPQCeSrxlE8E9ZXTB
                      PU1Voj0QDkO8AEbcOvjRj7yJgLs9FErDPAl5mj191sG95k4FvWpfbL0ghLo81jd0PRBmdDyJcps9
                      6FR8PMoTML34D5y9EmR5PdB3tTs7mqQ9dNiUPEArATwII7Y836u4vR2Jcb0QXH88cuQUPfpTkL10
                      V7O86hADPSEIqz2EGAe9sGwQPNMrrL1otVa8iUi0PePRpz1phKA9ANtcvCpByb39MkG91j4QPU4I
                      o71QFhi8l9DFvdZ1BD0Yk7K9DM61vLHzsT0YLFI8TemsPcTy9DzYWhI8DFjxPCoAW72yDyo9teak
                      PYotXT2Invq8mMYTvCDwi7sRK5U9RD3dPKnTvD3Ae+m8ADw8PIYlMz3DCL2990+6veoXMz2UFb28
                      SmqQvQD+mjmACTq6TjOGvSIoMz09vIO9ZUuivZjHSLw6hSo9bPb2PPjXgDzTzRu9x7ZCvWCzsL0e
                      sKm9ifajPRb0ND2gwMY7H2WYPSKDND2TGrm9rYqkvZUFpb2VAck9yxygPQAw1bmUnAy9SslaPdiV
                      QjwKaEg9Gp5ePWPSWb0uLqK9MNVEvJ4BFD1MyKQ8w/yQvWtnkD3GGzg9gRydPYb2ED0EiYm9wFEH
                      PEquPD1MqgO9UgO2vUjQp70atkU9quNhPRokCb0N4qi9QvJtPVN4Vb3WpFc9mC3+vID007zZ8a49
                      Zb2kPQNJjz261Qa9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3NzM5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0Nzg3NzM5MnEBYS5kAAAAAAAAAD6qTD2gIqK7kOShvSAhhb3Y1S+8gPHvOkDfNTwL+cK9
                      0AvPO9jBuTyGxA+9UC1GvCqjRr3uC0U9IF+5vEM9v71jscS9Hs6JvSByM734zoe8ao8evdXVpD2w
                      Hx29OHq9vfLPDT1JrIs9VkoZvWihEzwXEjS9jeaQvYICQj2AxcG8uiZ4PTIGs72s/Mo8ZAbgPL+J
                      gD02MSo9mrqTvWhofDzA5XK9BJf2PDCekL3F2as92ENCPDMivb2K5TS9UPBvvANkpL23/FG9dD3X
                      vBJ9GD0wo8+7y/zCveatBz2FW4Y9sLffu3ATK7wWQwY9ko9WPQr4Br2zOyG9tXOovdJeEj1haaA9
                      xceuvRpTXr1IDIi8grx5PdDJDjx97HC9EIQhPMB65byZb7o9EcHKPSNetD1yEj09OvQ4PWqXID0G
                      1Ek943DIvWfvjj3KTZq9WIS2vLlJoz1JlZ49TDX9PF5Ekb0O53U9iBavvLKHOj1G3BS9wEpBvaz5
                      9Dy66VI99zhUvZ08g73smtm8ZpIAvRFrsT0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3NzQ3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0Nzg3NzQ3MnEBYS5kAAAAAAAAAMK7QD1hacU9gPVlvABLtrsMLMO8UxFpvaUJvT0Ap0K8
                      eJC7PLr5Tz2m2mw9kJ9RvTIprr0AbxG9MYfLPcvsyj096j29csuOvXe2jz1l2JQ963DIPdvvpr14
                      sO+8gqZOPegujrwqbZS9u++3PfDvnb2a77m9vj9HPfq2Sz3clxC9qC6TvIMEsr3/2b29LptuPS4n
                      HD2AIqk8mEDtvLQP0zyrtYY9w6aNPbf3RL3rDZe9C5y7vV96qz2A0H28wGTJvXL6fj0A9ae77Qaz
                      vVwF2DxVRcQ9Uj5TPbeKRr3g55+829+VvQCLuDutDJM9McGwPT7xAT0MOua8QOXAultJoj3VQqa9
                      IHRlvTA/RLwMbcQ8cN68vbSwrrwKh6y9vxiNPfDzXrw3u3K9eTicPdggubxXXp094cqjPU68nb3l
                      I7M9nqAtPXbdEL3lI4S97UJLvYa/Bb2jkim9wM9KvGO7dL3x1bo9keedPWP/dr0AsMW3VSa1PXoS
                      or0mwQY9IudAPVjrmjyonKS9W5KJPTPoqD0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0Nzg3NzU1MnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0Nzg3NzU1MnEBYS4BAAAAAAAAADqGvL0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f8
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        O5yPX3c5gT9mVk61GFt/P9Jcwe1tanc/0lzB7W1qdz8EPIG+H3l5P0GSwJo3z4I/n9lWLXsxdj+f
        2VYtezF2P0T6JvVIRYQ/8XpOGcgSiz+jF1mkvNiEP6MXWaS82IQ/RPom9UhFhD/xek4ZyBKLP6MX
        WaS82IQ/oxdZpLzYhD+z0YOAkDl3P9HL7/yLqHU/oRgiTvIUej+hGCJO8hR6Pxx6DjsqX3I/5wr1
        H9IvdT84QBCPJUZ6PzhAEI8lRno/0drt7Q+hhD/2S0XogK6NP7o10CMpZo8/ujXQIylmjz/R2u3t
        D6GEP/ZLReiAro0/ujXQIylmjz+6NdAjKWaPP9itonwvk3E/iaHqV9IAdT8gBGDjCrZ3PyAEYOMK
        tnc/POL1uskuaD9dUI9WUM51P2hswyX1K3k/aGzDJfUreT+eBSWbrI59P+R+J0bqHYQ/9YtC1ypv
        iz/1i0LXKm+LP54FJZusjn0/5H4nRuodhD/1i0LXKm+LP/WLQtcqb4s/2K2ifC+TcT+JoepX0gB1
        PyAEYOMKtnc/IARg4wq2dz884vW6yS5oP11Qj1ZQznU/aGzDJfUreT9obMMl9St5P54FJZusjn0/
        5H4nRuodhD/1i0LXKm+LP/WLQtcqb4s/ngUlm6yOfT/kfidG6h2EP/WLQtcqb4s/9YtC1ypviz/R
        18zUBJZ4P9tU4xPlAns/M8jvrtcVgj8zyO+u1xWCP4/U4OPmn4A/wPRzZKiDdj9lync+3RSDP2XK
        dz7dFIM/hBPWwC/kdD+iqwddskhvP/QmXxVrUHQ/9CZfFWtQdD+EE9bAL+R0P6KrB12ySG8/9CZf
        FWtQdD/0Jl8Va1B0P+RwE9fkO4I/eLlanYGNgz+FqbeMlDyAP4Wpt4yUPIA/Bpy84vkMhz8MjJjZ
        6/yDP+7GWQQtHoA/7sZZBC0egD8AAMUmPod0P2nhR83tiGw/OXBndGD5aj85cGd0YPlqPwAAxSY+
        h3Q/aeFHze2IbD85cGd0YPlqPzlwZ3Rg+Wo/YL00L4IYiD/TbJAMpimEP1/Y5Wwr3IE/X9jlbCvc
        gT+gHi1o/oKRP5QA0UWka4M/N2p/yN3SgD83an/I3dKAP/rJ/jyop3w/AbMsdxINdT//e8nRWN9u
        P/97ydFY324/+sn+PKinfD8Bsyx3Eg11P/97ydFY324//3vJ0Vjfbj9gvTQvghiIP9NskAymKYQ/
        X9jlbCvcgT9f2OVsK9yBP6AeLWj+gpE/lADRRaRrgz83an/I3dKAPzdqf8jd0oA/+sn+PKinfD8B
        syx3Eg11P/97ydFY324//3vJ0Vjfbj/6yf48qKd8PwGzLHcSDXU//3vJ0Vjfbj//e8nRWN9uPw==
