beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.qdrift.QDriftEstimator
  N: 8000
  _ancilla: 3
  _targets:
  - 0
  - 1
  - 2
  ancilla_mes_method: !!python/object:gqe.measurement.AncillaMeasurementMethod
    hamiltonian: !!python/object:qwrapper.obs.Hamiltonian
      _hs: &id001
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      _matrix: null
      _nqubit: 3
      _paulis:
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XXIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YYIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZZIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IXXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IYYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IZZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XIXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YIYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZIZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      _qulacs_obs: null
  hamiltonian: &id002 !!python/object:qwrapper.hamiltonian.HeisenbergModel
    _hs: *id001
    _matrix: null
    _nqubit: 3
    _paulis:
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XXI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YYI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZZI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IXX
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IYY
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IZZ
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XIX
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YIY
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZIZ
      _sign: 1
      matrix: null
      qulacs_obs: null
    _qulacs_obs: null
  initializer: !!python/object:gqe.energy_estimator.initializer.XInitializer {}
  mes_method: !!python/object:qwrapper.measurement.MeasurementMethod
    hamiltonian: *id002
  nqubit: 3
  shot: 0
  tool: qulacs
lr: 0.0001
n_samples: 100
sampler: !!python/object:gqe.energy_model.sampler.NaiveSampler
  N: 8000
  all_paulis:
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  beta: 10
  evolution_map: {}
  lam: 12
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk2MjU5MnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTg5NjI1OTJxAWEuhAMAAAAAAAD+XmE+RmEtPpjzYT0+6z0+CaOqPhZqTb7bkIy+MOCS
                      PaZbgb6a1Qo+8J2qvYA+MLtSGDU+YP6mvra8jr4U/4S+oc+QPgi7P71YPoO+tIeZPTb3bL4A9XW8
                      mG0oPovBlj6Qkfs8LgFHvup2Gj6wjSY+LCPsvW6PKT667i4+mPkCvuDbWL4Q6YM8Ctw/PgbXrr0a
                      y5a+gMRNO0L9XT6UbKm9yJQMPYbfHr7mIN69cbSEPn6hgr4Yg2A9iGqVvqKENz6KDm8+sPnfPRNX
                      Vr5C6z8+tLjaPQI3Rj7+i5i+heSEPnMFWr5pl4E+8OaDvOb50L1ALSO+v/mIPlwt+72al4S++ceR
                      PjZLp77ILUu9LjZnPgKvXz6AxDS7uoV0PkBeqb7wRaE8Lgp5PtAKBD4AikO+y+iLPsaRej4OdG2+
                      vDuLvpCh/72dhIo+wk9VPmaPr70I8ga+SoapvuCEhj26bys+a86LvhgdL77AGRe+m86evkAw/Ltg
                      vyw9HjRtviggj74AUhy6zklEvqrgVD6uMXO+hktYPu5UD74T54y+UtJgPl6YKT4AVEE7wLsOvsBh
                      JD3kLIK+uxYMvlAkzL0qLUc+COdRPe5afT6ghIC9q1cLvtGFqT7KW4S+BmSDvpRcg757iQe+AOte
                      PFhHpL5c8LI9bQOPPmIFHz77c0W+kIZFvqJpJz4W8p6+gEm5PKX0nD6gVkK+QEyZPA13hT5o4ic9
                      0opNPgE0gT6HoKm+yaWUPlOHoT6b7aK+TpYcvklrqD7hf6I+UBWaPXtLY76is4a+erFjPo7UXL4u
                      R1y+eI8TPdADnj0ce6C+XTqcPtDHaL6gnX89fIXuPSz0+r0kyKO9Nw+evmPhLb50zvw9dAmRvsLR
                      eD6iLUE+loPnveZo773pvY8+sEuzPJw00T24YRI9NtAWvk84mT78z5S+oHkIvbMYF75zUFq+nWmL
                      PusgLL4mgD4+XH2gPUhLVL4eHIq+SMMYPstqoL4AVoa+bES5vRLRZj5QjJ89cxVlvjXkgj6wVIy8
                      fOLxPVM1nr7/6pc+9OuUPWDqHj2EA7Q9YE16vHuaLL5Q66i8CJ0ZPQ4kgb58VpE9NmD9vRiQmb4m
                      wq69lpgYPpBtCz7gQeC97O/5vUBxgTw+Vms+CTKXPnYXHb4vb6C+AGOkPRSoor5a5TE+u0t3vlat
                      Bb6YkkU9nBLjPR+Umb4I7X69a4eFvlA7hTwbMC6+XnVXPgQ0ib3uWh4+mAE0PYD8Bztg212+Bh9O
                      vghYjr42Fju+wKfaPf5lh76IN129gUSBPoAOWLswuJA8ru8/Pq8Kiz5w9bI9a0g4vouGqb6k1ae9
                      mllnPiAaXD2iB04+MjZ/Prr7Kj4AdS+8wB/Vu5V1pT4g1KG9XALEPaZfVL6YZAm92DQpvQCoqj1A
                      zqE84MN2PVWZhz6C9yo+GB8xvvIjVz5gneC9xp69vQyS+r2AzVg8WjhfPkrmjr7AfPq7Lj8tvh5R
                      ZD44YRO98DR6vjN4AL68s6G9wAYkPquOLr6Y3WI9dCKuPYC4WTuUx6m+8NTUPRjAoL4InCc9kPmF
                      vPrCPj4AWl26S9qQvkqDlb7UFIu9sn5XPkbs670pmIk+hl7TvRDkDb6r3p6+EGedvguXLb5gFZS9
                      tNL0PQK0or4WF4i+RuxIvgYAbr4O3Y2+EssaPqDl+b37HZK+oDYvPHpMLj5Ko3g+vOqSvSYg7r18
                      oMk94Kf7PbBIzjw2VjU+PhlpvmQTgb7Ag/g9E5dgvlAixLygjZK9AOfBvdA9AL5qHlQ+5MCTPVbO
                      8L2Wphk+YkoPPixSjL0ykYy+gItlPErvqL7dzqM+AP2+O6TAg71HvYm+1gnPvSCvRzzW6fy9kqBD
                      PssFEr7eXG2+3iwGviytqr0gK389hntqPmqqTT6DXmS+0ymHPsDJaz2Q9Mk9gHpOO7aHur3rjQW+
                      SoszPinOlT72mTq+AKTiPKhxTr2bi0u+b9GZvrzvlb1cFZS9TNTMvRgDAL1CHWM+KNlBvYDsZLug
                      0ii9AKtwvhCGn7wXXJE+KuYuPlSl0T2IvHC+IC16Pc4ADT5gab49OyCHvvuOkL7TCZe+VMedvYAi
                      nTzYwE094Lp+vsDvXT17BqQ+IBEdPEj0N71qSnM+tmHSvdhSE74m3hw+xFriPXYY4714eRG90CSE
                      vaCwi72IbS6+aNk7vnAz873Ab5e+SZ+gPkrbNj4gECC9QL/SvQBSbrpbdJe+fhSDvjUKkT5AGGi+
                      p86NvpC3/zyosWc9PCzavaofnb4AT+88SucEPuDVADyyGnk+2NASPsA9lL7Q14y8ZuZdPjAT6j2A
                      9OQ9q0sUvvgSCj6jqIk+WIILvvZIBz53UaA+IQ+KPkiySL0w+5q9/B+hvfAao7zcnq+98/KAvnCC
                      gzyGg+u9ZlE2viuwDb6WOZ2+02OYPugsUj1cMbO9fHCAPQ4PXj5EtJI9U8OPPmvlWr4Q0ja+8luG
                      vv/gkb6A2W28CCkWPeJxVj5gMDO+Wi5fPl0yqT7sv4y++tE9Pg6kfb7a0B4+iNVUPRIgUD46K3A+
                      4fuoPkDQCj3zg5U+wJWxvSRWn729W4A+UGnyvPZIg77A8ry8GAA3PT6rAj7tD4Q+a0IMvq//kL46
                      ViI+YAcaPAgye73RT5o+7BqvPdLjor4ckIG+iTCaPhGmnj6IPh0+mRGdPulMnD4x0JM+CltDPhOR
                      IL6gyyK+41yFPkDKsLucdIG9q1SNvgOMQb4V/oY+c+B5vjugAb6AN8g9jMqAvqmdpT4Glh8+Krt7
                      PiQe3T03MaC+0+2MPoR1pr6FuJM+Y4ZNvjhNFD5TykK+ayIavmDjmz3AsBE9oP5EPSjrjb5RO40+
                      5PriPWvjE76A2+e9MPWNPECeizzKeaC+YJm3PUA9hDykzsM9QF9QvZB/xryLgW6+ekA8PuZeFL5A
                      ziC9AEmfvPZbGD6TEyW+4lw1PoMim752HGC+uwlUvoZGYr6YtRe+wNazvKjcBL2wZ9u9bEKMPfDb
                      nr4iISs+4E02vUMGDb7k5ek9CB9jPQAbkDsCw3A+GH9evWIuNz5wVJk8NNaTvi9foj4ATii6aCBq
                      PQbrIj7QSS2+YHwyvfxruz0KWRY+VKKcPRAxyT34sSO9mAumvqurcr6z6XW+oPc4PPWbgD5DpAS+
                      iNYtvVJGlL5Qe+s86uJoPhjvOb7AQbs8/ntXvna9yr2Al0W7WJpnvl6nnb4yFZG+AGu0ui10mT4d
                      HKc+YA9mPSCvb75O0pe+1hnNvayaor15Zok+GO2OvvD0Nr4gU4g9pI7pPcsjij7Wvg8+ypdtPstN
                      Lr4q6Ii+FNW+Pdz1hr1AY2e+CDkVva0Xmj6Qkzy+ttQMvn9Lkr6Utai+TIvKPbXZnj4QA6M9gLH/
                      vcCvvT1YgAk9O8eePojgMb3vUpA+CLEkvSD6cbzUD8Q9aQqOPoY/kL4Dmn2+K/kzvgAtkLyiYEc+
                      61FlvvhKP722Wks+lJihvugBBz0YDJC+aEQovuY4gb7+Z0G+S2FSvuh2ST0QLeO9gE8AvEcng767
                      BnK+OqlDPpKAZT4QIvA8+i2EvhKVdD5YEQW+6n+PvvM2C74UcKS9bNmhPaA9Hz3gAlC9axuOvkkI
                      mT4Vh5Y+SMYoPqa0Vb5n26O+KDcFvmCGRrxgAAE9qFqGvngBfb1DgGi+zvtNvjKhNj7hAaY+MNHM
                      vD4LED6ASvQ9gG0XvSQAoT3wYOm9jiZfPi4eYb4zJie+YSqePkp3Lj443ha+zArNvRi/Mb0Rp6M+
                      +ceLPpN0ir4D+ps+lF/9PXs7Qr7S3j8+O3JzvghwEb5Aet29wtePvtB6gTwgGn282qM5Pu4zdT5g
                      v/69VADcPQACfjvQ1cI9QJDUO14bXD467Uo+D4mfviMoeL4kSoG+suyLvreDoL71Vp4+Ug8FPgBi
                      sLz0Ke89UAqavaTqnL58EOK9DnAoPrCcyT0AnBO7SOpfPbLelr56XyQ+IAlIPDzV473CyUs+3MqW
                      vi3njz6c7eA9i8V/vgoHAz7GkfC9+lsKPiAsVjx6iXY+AFpdPSssmz7Qeuq9v/uaPmA0Jz20h4i9
                      PBq/PcAOAr7FzpQ+APiZu0Y8UL7DwZ8+k/1XvkDdGT7Mca29Fmf0vf9uhr5sOt49IBmFPffWkL7I
                      aWC+oNzOPUa1ST4mgG6+rNbjPdC1ijzbPqi+C/JYvtr/ir7Ag5m8IZCNPurzUD6Ukp891nmBvniW
                      eD1eM2E+ltA5vpDuhD2gfh8+xqVEvvw/5z1Bc6I+1dWaPoN+iT4j/W++eKB5PSVNhD4Lc5C+gN2+
                      PJw7gD1uhyI+ehGHvpZHPT7ypzk+0zNXvmv+e76ojCe+4PYmvEC9EL0WnvS9eH8DvnYVMz7wMcE9
                      4JQvvhCPIL4QJZE9pBq6PRh0Bb4gLLU9dsa2vXL9oL5MHMO9n3GBvjzp/b2A51O8cfWYPgCxgTtg
                      4m2+l/yMvojYG750VY69e3MWvlgvEL7+9iE+FBaivjpSWT7Qj+q9RMWLvtgMMj0F35M+6+ujPpD7
                      9D1Rkow+oimVvrCua77TRB2+Hj6QvrdEpb6mc7y9ENaHPLvbJL62aU0+vESFPSGHmD5/AJc+gDp7
                      PDBlR75gR3U9wuxHPkBAYr0A8uA81LmnvnBXF7570FK+6pKNvvhKSj0lwpY+QBJSvV2fqT7XZ4E+
                      YDHbPQlFpj712aA+il48Pr76YT6bFKm+Tvs0PmuNBr4umTG+kxmavmlGjz52QAg+NtVgvoC947wf
                      QZo+yM8WvugdAb0G22W+Dg48vjj6nr7i1KC+ssZHPoKtfT4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk1OTMxMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODk1OTMxMnEBYS5kAAAAAAAAABBayz0+b16+8G3/PaCQY71EWbY9CiZdPthDfr6icEk+
                      6EksPQOoEr5qS4a+QESfPYp/Sj6zepa+ZJePPdh3L729F4Y+y64RvlRohb1XwaQ+QNOEPczXpL1A
                      YQy+lHaavTgYP72wXow8YKNGPVqDDT5upgA+YKnsPT+4pr4Aj1g881VSvoxDn74AK8K9wBlqPTye
                      x7244Tm9YkdIPmJLUj5GHT2+gn1cPiARJD3s/c898jwrPvZmL75Cik0+C7lCvgDU3bti3n0+oGAS
                      PgtohT4WOQa+WIKQvuqOUT4AqfI9w4ukvpgqbb2zhGu+WM4Wvhyj270WGlw+62IOvjyPxz0Ar/g6
                      iFNxPaTskL7wyRo+AycqviWPgz7SN4e+I/9NvpuTEr6Cg46+VH6KvTbcUz4ulSE+OjIpPtNNLb4g
                      wpy9AiFZPnidBT4AM7w8DBa5vaisGr6RsJs+yzCmvij+Kr1UCvQ9YKLOPeb2cb72uza+lEKbvuC6
                      ET5PkIu+uGBPPYiBlr7g5Xq8QJl0PRCD0zw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk2MTc5MnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTg5NjE3OTJxAWEuECcAAAAAAAAAGzu7KEQkPEf6Zb1gM329RHvuPOI6Pj0wUWs8B4hd
                      vb3EoL0BpsE9i36QvdG5vD1sqeU8B90gvQBNTLo/sIs9wPBPvDe3vL3iuL+9XCkUvYLmIj1KrWc9
                      eHGiPNApODwCkAc9VsgkPQNfIb2QfoG97OfHPCVwnr1q6UQ96NZ3vLH0vT2TAqM9UJ4DvMmDpD0i
                      7iA9SeLDPVcJiD0KOCi9YATnO07Faz1K+4G96LIbPHTf7jxg+rQ7qR+zPbJOEj1mthU9MJKjOxMO
                      qT0mrlg9wGBFvetsm70As8g5oJ+5u7ZpNz3AzoK8gLzKvObUjb2YAoO8gl8wPSDpkL2GQjU9R962
                      PQqfxr0topG9j03IPRq1KT1gCws7gaCJPcY8ir2/L6E925TLvcAeRb1qlE49886iveOvyr1ggX69
                      jCDNvNeQoz3ZyJI96k8VvbkZxD2drXe9GGC9vP0Hw71Eowe9sOyYu0Sf1DyHipU900CkPQrRhb2g
                      pUE7YD3zvGXXnT3H73u9NH2cvMGFgj0+L349aPyzvHh96byVEZW9MOEOvIC4l7uaS0y9ngYzPWMX
                      gD0g1qY7hfHAPaCpybumkHA9oMJsuxGskz1q51c9gLpzvHRoA72oevS8Oz+NvTbCPz0F1L29AN7z
                      OgV0q73vK6M9QdCaPXJCcT2Bp5Y9jdKsvarHP73ACsU6QMXsvCRX5jweCkI92PoHvL0/qT0wOcu7
                      ivMdveAhsr3aVws9zURRvdq/JD3927A9WC0TPHatAb3e3B09k2Wmva0AYb19oHK9sqxFPeiIQDxC
                      jiM9O4qsPRqubb0nXxy9RldfPZTQnTzh6pU92JoLPOypvrxrRss9Fo0nPWAJM73sbKA82L06vC2h
                      Mr2Ad+C7rTigPVR00TwhSoM9/sohPcCDlDyAdY67AME8vFv9wb2AU6c6V6syvTDyYjxSwh89PiAv
                      PQC6jb1QEVa9VgYyPVDTQrxjTrq9RhgEPS7VCj2/nMy9hg8MPZ6qVD2TsLY98AN5vDEZqD3Axpi8
                      sEhzPBhnuL1650+9X925vRrSCD1WfBW98ciGPZN1Vr2+Xy498/eZPZwP2jwWwZK9Pl6CvTwvFr2w
                      1Ey8ikgjPVaYeT3Ad9G8RwZJvRYZZj2TioU9pl5TPaDQojugcP+8YGm6O3xV7Tz8Nt88K3edvRJn
                      Tj1nObi903CMPaA22bzH1HO9bArRvDIFNT2o0Mu8c3DKvWsCmD3tEsK9yIKIPMjFgbzfo8a9a+HI
                      vbgeozwAAW691qQiPciEhLwA4H48A7lkvXi9tjz6o4q96bWAPae/wT0LR8O9+3+jPZ3WY72g15W7
                      Si4OPXjktrygMpI8ukIpvQeDtL1OW5W9iIj4vNTo6zyMIom9aog1vSjHATwAFPS4UHBuveZUdD21
                      UIw917tWvWCXLDuAg7I79HGiPH4oZj1f6o49AGGDPDMwNL2S+aG9v0TCvcJDsL1/C8U9kONNPOc7
                      Qb3i1QQ9rK60PLCJpb0oGWC8IH9nvcIJdz17AZA9hzCDPf3Ckj12EYe9aCCfvbk2mz3AEXq9i9mp
                      vd4gFD1Axag8GDpzPFi1RjzYz0o8OPmZPNGjkT1NuYW9vW+tPb5qg71Q08078ySnPVo0Mb1p7cE9
                      Z3MavdtRiz1Cu5y9aR6APThthLzBdbY9Yua7vbDEgL3Amm68kGNmPAmcjD0oT7a9NnV3PQBmAbxi
                      JHc9Ofu7PQqcQ72Q5o+9kKQWPBKvTj3xYaU9E8xJvWP/tD06kDO9mbW0PdMOwj3JeMU98w09vbT7
                      Cb1o3aq9DUKSPWJ+JD1zSYA9YB05vTCx+rupzJk9HASLvVAEJL3t2329lpxIPUALS7urham93pSc
                      vc2LXL2+b6a94ItqvQADVDymzX09LNHCPGp5CT3xFYk92CEHvOLKIT1v8b29CYmWPfOCwz1gLY08
                      cLRTPC0Ueb0GLKa9KBBKvJhOZLywSTE8M8anPd3HZb25i6k9s3VNvWCpCDvoQkG8t3yKPX4DNz0q
                      LEM9gdCiPag/UDyKlRc9QK46O1X7xj1sPck8iioUPVjK9rwDakC9p97HPYDT4bu00aU8/4WaPdad
                      AT0JKrM9tnwSPRhmyLxbaKA9bNmEPDhYg70DZF698y6cPXyHzzzKA8C9jbs2vQAVuL36SAQ9lIfQ
                      PJhDVrxaoV+9cN5rvBCKnr2ULN+8b0S6vZARfbyghLg7APjguTSKhr1YKEs86JRYvCpXi72obeO8
                      RViSvbCzbr02tQ09YGMSvVrpJr1J+8g9oq7DvaYKbT1CHlo9Vj2VvTSBkLy1E5k9WQq9PdLjkr0A
                      SKk8HQ6uPdZWFb1Myvo8VaOXPSp7Jr2Wsx09Iz09vYhmiDyoLSO8UsdePf3QdL0WcYC9cYqFPSo6
                      u72SY8a9tNzvvMxhvryifGo9aHy1PJqtBD1TiLK9PSKfPWWIwz10bp88IOZpvfQ5/7xTsm29eMn2
                      vJctab1FfIM9c2S6PfZepr1A6+G8QLZWvc2+jb1bQcW9jX09vZjlp7zAPw872HnDvezH7zwfIb49
                      m5mPvbjLirxQX8Y7sGtxvSeeOb0oVJe9AOC1OqJKnb2aFUU987aSPW0dPb0wn9Q7kq1uPd/iyj10
                      BOi8apEMveIENz1yH429UtVDPckDnz3hG4E9vFniPEPBhT2qy1s9sDmrOxYFKT3OLay96F9KvLhA
                      xrzdWSq91lE4PXttkz2oNN681lqrveAR7jsiXYe9Sh4TvarEwb3YnbG8jQ7EPSDrZ72QyXu9vRtE
                      vUyjDr1QJAQ8YGjKvfib2LzqhIG9+uiovRE2qj0UE7c8zbc2vYBwrzuF0YM9YFDIvGBd+zsYZoa8
                      LEnjvEBTajwQBca9avSsvYK3PD0VP8g9ZjopPTBaxrtCRAU9DNrVPBNEGr3R28U9IJTdvOxg8Dz+
                      gB090Bp3vFDVbbxdFJk9kR+JPTbHbD2gz0S9kYCvPWDx7zuB2709pJPmPE0EiD2gRcK8PXgovTRZ
                      tTzAI7G9cOMKvFIYhr3Uv7O8GqirvQAgVbqAjrE6RtJHPTdOfL3xwZY9EDFuvW/mpD3wnGC8uHr8
                      vA15b73RjaY94+qivYHftT2NQ8U9kd/KPXc/tr2ms4a9QCc3PCCfXL0MLew8mPh/vILkYD1YssK8
                      dMOWvLgWgTzo75a90QDMPdPEKL36Jwa9AlqSvUAICLtRNqM9QNz+vJanLT3ysa29Us5MPf6mPj38
                      tgO9wJBsO+i9drwMsIy9DcaOvd0Sqr21Jru9giImPXzj2DxICa+9gOZsvfrUGj0NNay9StIPPaKw
                      HD2CUY69oUynPZLPPT2Fz8Q9QBcWO8g1zrybvoE9Y8KiPaGanD3Qg5K7ojNFPXxM0jzDQW69We2+
                      PRnGvz34ooC8li9aPeBek7wUyMK8eIawvED9hzygn1y9R9uCPVAhSb1jnJG9QLqbva1noT2IB6q9
                      EIY+PE39b72AtMS6+sdCPcYXej1Tksi9zAXTvKBwvL3Ac9C8qNpbvJe2rz1k8RC9oHUxOzojdj3a
                      r3s9B1wfvTDAub3ok5e9B6q6PYU1uz0oKfy8ut9TveJVYD2ip1I9xNbQPAUfuz3lVpg9aE7LvInD
                      qT01U8u9fYu8PT1sQr2AS5Q6UCKvO8EBmj1+QgE96ioUvWtVjD3qfxO9MF68vdMclL3YfXi87c9K
                      vd3Pp70qJcO9AC1rvDUQjT1JCpM9QjZJPSmGgT266p29WELGPM8amj3yKKK9ftodPQHDnD2gd6u8
                      VCPvvB6HZD0AYzI7yisVPS2BG70dyzi9IlUIPRNatb3s8os8p2QvvXmQxz2SHzc9rD8VvfQ76TxC
                      Bm09DWiRPZQnsbxwxiA8+jJdvbImDD0T3LW9QdG4PRLfdj0SEGY9oMcjO+3aMr2qzCo9MKGivXIU
                      WT0qF7K9JcexvbZpob2tiFS9bDWZPJhgaDyQU2W9gzJZvUXzqb0qMEC9CJ+svSLXbz20Mes8AXbG
                      PZjSMzwmLTg9gHFhPHD+vL1nNW69QEJbvUBkHDx0MZo8eXzFPTBMwL1AdLS9gNvbOuHahT0eg6a9
                      zQ1GvRYdAb2/W6M9mHjCvMuRnb3nS4s9UNk5vRTXoDy+3Ag9wyScvbK8lr2D25w9IzeqvZgYNrx0
                      JBa9oCUPO291tD0By6s9xH7QPDQV+zxMbrW84KW8PHdhkD2HCIM9wp9dPSz8ibz6VQ49Jwk8vUCv
                      /LqXiaA9whINPdKOQD3+chk9qolQvYhV+rwpZaE9A14/vYnVuD1uHoa92RLLPSH3xz2PipM90pRd
                      PdeOzD3M9o+820/HvbrdD73wnQs8t2+VPbL6dj3gwJe8MAApvWxsi721aq89ei84PTbWVT1gKa47
                      kiGovTBWgDtP/789qtc/vfyvDL17rK09UJJHPIbyID0KJ2u9qqsEPdBWXr0jqYs9B78wvfLdYD1J
                      Wsw90mN6PS9iqT0t4Y49UMzPO3gVuTwIosS9Qn5KPSj4DzyY2Q+8U+eEPWiySbyAari8ACG/PDAg
                      Abx4GN+8yYDKPbLphr3A2Us7hLjePLY8fD0bL6s96ocePSyI4bxmC4O9xb6CvVBNMTzDljy9oKK1
                      vb1kcL0AGgW57s+FvXxn5zwdGLQ9xXeOvQoFTD0H4HG9Rr1dPUwQjrw9JJY9EUe/PVATlbtgO8A8
                      SwiMPYBWqDqa90k900epvakllj1yEhg9YUm5PYZ3Qz1QMhk82S7JPXB1TDwnikS9pSa8vb1DGr0V
                      QrS9g4GnvZMOgj3E9Ns8P6CkPZhjTzzk8us8qJuSPDJ/LD2UCPo8M8kuvVspwr0iIqu9QUKXPejK
                      j7xj1Vm9l3G0Pdqsf73CPms9AIjxOJIYpb0D80e94jU4PcIAfj2YXhc8imaRvURo1Dxhe4k9UGKz
                      u7//wb1qUCS9Y8N2vR7CHz0ALB68WgMMPVgVkjwYygw884FRvc3Yyr0KPlA91EefPFdfLb0AwIg4
                      KrU5vUUCyz0MUKQ8TFahvACRuDyIO4w8tiePvVqHWb3b0ZY9gHlouuDNkryK5l+982/GvcDwyTya
                      GIW9gMLfvGj6jDwx7pA9eitRvRilU7zRuMk9njdOPT02pj0w0Gu9gLrTvL02R701xq69z0GwPZmk
                      qT1ZPr09gH0FPFASGDwaCEw9TEWvPODKMr1ooT+8dx+fPbT89rwMdKq8ulKzvbC/kr0NR6y9LE+L
                      vGUJwr1sRMO8bI2IPGt/wb2Pe5o9Gh0XPaMitL2xm7w94z66vbY0qr2A9Aq88qYrPUx1qLxNwjm9
                      2D8ZPG1RhL1Fd489uqGYvcyPibxm8So9dI7gPKz8rLyVXJO9ygh1PSApFL1o+ZO8wMNdPDBnvjv3
                      eH+95DgKvdg2fbx/2qU9J9+9vQJFsb0j4ay9iX6sPdf8wD1IKYG8smadvcCTJztQ4DG9Qql3PebO
                      Rz2YLca8ucizPQJbuL1k9QW9GKuqvBR23TyguMO7wGDQOoYADr2AxNy8O9+RvTNet71t08s9aO+m
                      vEjgvzwU1e48QEQhPDCxRzzyiwM96MJvPEws6jwhrYw955rDvUDBJr0OPZe9wzqePbqndr058Zc9
                      PUqpPTOQtz2SNAk978eyPUuTpr2wjO27gIwvvezHvTw990G9NpKmvdDBr7uIf5I83NwJvcUrn72h
                      RMc9I94ZvTK9fj2K14291FyNvEBzQrwAV2C80H7WO9B1i7tnl6E9XLoUvTHjmT3r1Io9Gs5XPUqG
                      k72g19C7SPiHPIX0lr3YsBs8g3+wvS5vMz3ZhMo9Wt9SPaOLHb1Zs8c99huRvWoVKL14T6287SZk
                      vVb0YD1VDYA93jgBPVY6QD3tmYm9RuFCPe5PRT3sVqa8tT69vTeES72+RUE9wJ87vAA/Br1D1ac9
                      gOTKPDVHoT1SRV496HrzvIBM6Toj6xu9CVSJPSV/wr0s0ue8bGmWvOYlUT3IHOW8QrJBPQMOor0k
                      4IC9QEtZvZBZe7xf5ay9h358vRRSj7xZZ8k9QxZyvWMMKL0AVGA8+AeLvHVCrL0gJ6+9QaWwPTjR
                      oTxEZYC9cYvEPfdZtj3od7A8YDshuzBbizsgIM87INDmO4/pnD2SuEM9omxBPTIlMz2b9YQ9Ui1R
                      PTOqlT2sIbQ8e+SkPVpQt736W2+97pJwPWWsiL3AUmk70OAPvegygDwUd6m8dwRgvSZMTz24ury9
                      aN13vJJTwr0okZY8ykQTPUoHqb3jJJa9laqsvZ9Asb2b0qA9CtluvcBgZL0KVms9pXeivRvziD3e
                      Y1A9Quu6vaDAtzt5J5k9eDOIPG7vlr1w7j+9Q1K9vWlfvz14ncW9N2e3PR/Dx73NeZC98GZyPDCQ
                      hzvYVSw8kdqIPbfFwj2USQC9Ih6EvXIgl70EKd88eMfJPBMoXL34KcG9oLMwOy17Hr3yf3g9kQSE
                      PRTby7zYm7e8LC/tPEZLq71YQIq9siIDPZokIL0zC8I9LKnvvMACXTvtXFa9wEB4vcLcPj0ArX67
                      cPN9PEuNnb16uwC9LCbovPYBHz0iZpW9tSWDPfjil734SK08oBBcOzOqoT3Thye9BnMIPVm9wz0A
                      Bjq7vFTfPLHUlz2oyOS8mJEbPOHzoj01wcI9IAS7uzC8IbyA+nu6kB9YvdLPKT3hKIo9QoeQvdQq
                      nDxHpFK9OR6dPZBhk71s3aK8QUWBPXvyrD1FI5A9U0avPVMvlr3UOdm82oC+veQz9zxvoKs9cgJ2
                      PXXJm70KyDQ9XciivdVKhL0U7PO8kLZVvNKuID2bf8k9fpKrvVAMc7x2c3M9YHKfPLIHDD0t6FK9
                      GA+8PJV4hL21TKS9k2NGvZC7Y7xHu8M989KiPaqHDr1NKoQ9VjCCvapnOz1AYfy8sowEPcJ+Ij2t
                      qp+9UJL+u1X5s70AgXG63SerPYCmAbqg+iI7Q3e/PVIlSz3A+Jm8lO7APKveqL2gcpW7VPzvPLYx
                      ND2f8cS9RbGWPZglDbwpAbE9sIpzPOJfv735CMU90OvIuwBr1LwNHDu9ALkbO2ZLob00dIa8gQ+e
                      PUBcNDtE7+o8xtydvbA7RbwmPE09LFCkvPdTTr3o4D085q6Kvek6kz2NBiu9ire/vbAP2bvAkT27
                      VJyUvEBqJzuTLqK9gBubvBYRqb2g0mE7Q55DverMNz2wB8O9hu5SPZblEr3+hau9N3y+vX32vb0N
                      e6y9co43PZrFHr0QHjK9tBTnPDN1hz2GokI9R9onvZByQLxYzYG8ALdZO5EVsj3bLL89ADtfOmQu
                      8jzCz8W944aRvR5UlL3KC2s9wPa0OtAEZbyZgqk9+hFdvUdzsD1jxMS9KPe/PIceJb3TjEW9LYRD
                      vaSO6Dw1cbe99ssnPR1zqT1f+qc9uloDvRCxSb0snLY8rG2kvDVnoD0qD1W91t1aPRLVOj2pmMM9
                      +HvsvGflQ70Oenk9E9ggvVREFb0Cnkg9ZgEhPbAParzBFss9UDuNvXv/nj09cZM9pvEkPdD24LuG
                      fiA9cDxCvACyLr2gurm72CB/vKjfur3WKFI98pcRPWyjnbz53ss9gFIVOnDuDjx6flq9wXuJPaDY
                      Jb1z3r89MP+4u1DWOb3QM/e7EwzMvVC1Y71WK3E9KOOfPB0wZ70UVtu8swp5vYKtKD0ymhM9AGqp
                      vbp/PT3ic249YMRNvUONL72qvE49bBHjPM2+LL1QyJI7YFHju2dIUL29U769Q+BavQudn73tfaM9
                      HBfuPJH3kT1NPo69AJo8OyA0pDxIy+i81IGYPMwg7zwIfJq9vadGvU1teL0gtlO92lNMvTSurLwk
                      /QK9ADSavYQa0jzLZqK9276/vQ1UpD2Arq87MJ5SvODj9LyQ1WU8Ks2Mvd1zUb3Pbsi9gLAdvC6Q
                      Zz1A67860FYkPNVgkz1v3bG9/tKRvcD5ETuD0qO9YEbEvLjfhzx1f7c9RZy4vU2qeb3ibFU9bR6x
                      vbQ4oTyzOWW99jV/PQKBBz21ULc9eA3wvEAkKTybfcy9hZayPRTehL2gd4c8bLjGvHq5IT1CcBg9
                      /khRPfQC4ryAa3s8iLmJPLJcAz2Au669ypNFvaCjPL14l6m8lJukvC0htT3lapo98aOyPYD4lb1w
                      ZDK8li5jPcBiRzutVTe96Ti9PUSR/Tz8fd88lFHdvFIXHz2XpLC9qZedPT4nnr3YPLs83SiTvSgv
                      Xzxa+Dw9d2a0vZcXdr3oUza8KisVPR3eM72+rKe9Wz6TPdCgnb0uA2U9urltvWpUMr2gM6G8+PnN
                      vIaYk73MZuc8VNYHvY7Aob0QbGK9HjKVvSDoX73wJQY8BR7GvdiL8rwAkyS8cPRRPPpkLj0YCYW8
                      kPZZvcxM8rwFDoy97J2yvNpUWb2mPzE9IXeHPZRv+7yZwMA9+GWkPLw4Eb1BWp89cQW+PSsRsT2A
                      kRE60kZyPcSz8Dy4oNm8bcLAPSPuXb3jeKS9LSOYPdBIh71aZAI93JbsPHXwlL2rQMQ9bda9PaAq
                      ATuYE4u9YDaCOy00vz3vGr29b9nKvVDtmL3ovNa8KvypvdJQID3Axg68px5LvV24tr1u3J29xQqV
                      vQgGh7wA9ME7ABwDvCxbsbyHOMs90DeQvQPTMb1NP5Y97EoUvc2hyb3QRiK8O4+PPT69Cz24sv28
                      YsWGvaQb2zypIoc9VPXlvD8ggT3gKNy7AFZqvRt9l70goo888oQJPTAqqztOdko9OHKpvIZnPT2g
                      pEE7QC/vOtR0vjy96pS9lR+CPejwJDwKhze9sP45vHkGtj1ompE8oO4SOyU3xL1gkKy7AESIvI5A
                      bT3qGmQ9m7+qPSHQpD3TPsS9Bxa4PdPWk70tx4E98X24PWewxT0cOdE8zYUovWowu72bAJi9+PbH
                      PLo8jb1dlK29/iSMvepMHj2aO8m9MAbyO1ciNL3/Bpw95i96PQRq8Dys3sy8M9eiPY18zD1AmWG9
                      Z3GZPajAjr0ZDcE9NKu4PMB8IbzWT2c99P7JPOWzlj2Az1U8DehHvWPBf73g1nW9OEb3vDRV1Dzw
                      pQU8A28qvaURwz0QD5S90+4avYCFF70A7bI5bdW+PWCP/TsAJAS5/8LHPeK1lL1e81M9zB30vDuA
                      nL0gl6O7wCtNO+vAoz3AJHm7MVehPRN1ob0AnsY8OIWzvRBEHrwLErW9e42+veD22jsd8cK92tUA
                      vTA7MrwgTXS9kIo0vNjtr71aRVM9MTXJPWEcmz3GtHw9RFOFvR3oKb0Nz8o9FPGDvLPyHL0KBJe9
                      guJ9PS9Fvj2yZUI9iPyLPJ76fz3X7i+92jtMPZiGIDy0Qw29cbKpPVAICrygO4w8qo9UPQBOq7p+
                      Tiw9qmtTPUDHmLrrVJi9aJiNvDeZkT3O4Qw9wJIwvAcrfr0Xwii9wLgZO+Nryb0aKmk9l5O0vVjp
                      cDzwsA88J206vXcyiT1C5BI9/b1bve2YH73AOww80zNevdRHgzzMu8Q8sxKTPVALtr2tSsW9Rzcx
                      vd8HjD3MyqQ84qN/PVQbpjzY5+q8RXWwPYwTmTx2Hwc9UqGIvUfLfb1IX9C8NMj1PODc7bygzEO7
                      Ul05PWB1ALs6F6u9WGlXPGpUJL3YbX68+KiRPOb7ob0A0Oi8sEKwO3DSmL1TD7Y9rVCPPUdKMr2B
                      u4A9dmBxPYj7w7ygL/S7ogKgvWwBir2NUUm9TbGFvY7UOT2Yo6299AraPKfDxz1Vo649R+dJvVJI
                      Tj0qbx894OHtu4msiD1aOku9YLIGOxMIJL2IMaY8l51pvejsAjxg0Ia8MvgqPcvehj13sm+9GYO6
                      PahB7LyAxa081NbcPBkQsT1Q2Xq8w7CkPQOVpT203Yi8lA+cPE/tij0g5b884VvDPUjjx73B9cQ9
                      dB75vJrGsb2UYv88CFiRvKDOtDvSZ0M9wATTugiruDxYABm8x1NVvV3no72w/DM82deiPbtvrb06
                      IIa9Zl0AvXDMXDzx9LE9cHFbPGy88LzAxpm6kNQVvH3NQL3fsLs9t0GtvRmvyD1Ao9G6sFGGO7Wt
                      l71AQKg8xMAFvTRVlrxgBii7DPWAPFixF7xolw48iZiePVAIkzu8dge9AAbIOzHIzD06e6a9NLqU
                      PEDPqbxKHj29nsxpPfZhDT3wzmQ8oReiPbLNdD0w9hM8qPecvSNjRr1wwES91YnHPbDTT73ymBE9
                      drh6PfbCeT0R0IU90+5yvWKQkL1yGRc9FUChPVICKj31gYc9x/KkPbBL7rvjqbQ9HxzCvRhRQTw7
                      t5+9l11WvTCGnLuhI7E94l2wvQx8Ab0juX+9vUF7vfnIvT1QsIs7v3LCvS0MNr3ThmC9ojDEvR9x
                      ij37YI+98BF/vMuppr3Bv4w9FMu2vACIlL2osva8yDe3vTsmxj24J9m8OQezPSqEPj1zpHC91n0A
                      PZDBILyA7Ta6TbO6vZL2CT0t9FS9d5mAPQO3jb08TdA8PQ1hvWNoij2Ac/u8t6ikPcy6hbwA15K7
                      jFeBva0zrD2ht50947E5vYA/mzqMz9M8T+a7vcOMhD1Meuy8DN+nvCiWiDy0Vb08Wuc7PffIxb0a
                      yaG9WFJ9PND8lrsddYA9AQWFPcbhMj3Fd5Y9gnVoPaqDnb271rm9A/uZvejAoL0mWFg9+0edvfBB
                      Ir3WS4G9YmaUvefBjD06ahE9EHMVvAIrZT2Aoum6U2i9vctrlz2qm3a9oDCNPBglyTyCWaG9kiEv
                      PXFXnT1yMzs9pSemPUhHtL0Fq5w9OLKkvAYCp72Aem48wTStPW6zdz05CKE9u02TPUEugD2KJxc9
                      NQKpvVyy7DxS32k9MTyEPSqbS73Nkj+98GUcvMadib2Uh/y8DYxgvZ9onD2qpsO9Yp08PWvmqD32
                      bU09z72jPVOovj3ME8s8GDdfvGX4mb2jl329V9fIvXV/k71SuGw9CdPIPRxa8zxgE0I7FKX9PMkz
                      ij2Y74G8QmRPPS6oQD2mRgi9MyZqvUe6qz0SzxU9IBDHvBL4Qj1WaxE9jTd3vUyqorx4zP+8vU1M
                      vRh5Z7xmoGQ9hACJvQ7HVT0rR5O94GNXvbZzaz09k8W9tpupvYGpvz0EJdw82MuKvFZeXD0QJyu9
                      +iNbvT8dtz3Vc8K9p2IrvfrOnL1ZWZw9ANaLO1l8yj1FxaK9EKVTPDKOCz2gS3o78KYnvADA6Lid
                      0709B4Qnvf2UZ71Nb8Y9ADnIvW3/L73mB6S9oz6DPbuPur0ohFG80lZBPR3ko71SncG9016+vZog
                      HL21gKk93LnoPCBBvry7ipi90zpevcr3fD1fEcy94kE5PYvYuD1QN7E714k8vUDNPbyNHbq9SOL0
                      vHvgsL3QgEo8DMm/PBWLhT2Mfsc89GSMvXYoWj0lUog9P+aNPWwZAL3gaLe8ctcMPVthlL1N0Iu9
                      0FpNvbBPmLt65529TOixvFjfXTyIR4q8cfSZPWKdWT277MK9KdCjPSMvqr18bdA8z6KyvYmwyD2Y
                      Km48mROcPRGllD3ASPO6PZzCvTO6rD3AQxM8U8dVvbBMU7xCSXE9K9O/PTduU72was87qfujPUb9
                      bD0Ca1g9IcenPdKVaT1B26g90D25vSvitT1Ueee82U61PdIyRj2OiKu9drcoPYG5iz2AWmW6J9RH
                      vbhQxbztTKi9cAaAvdPiqj3AK0W8LTlrvc5pHD1RZ8o9cWeDPQaKPj3Mfgu9G9eevb5YKD1thES9
                      HsBHPW4ogr1vf7a9fPkKvSPzf71A9Tu7yCXyvIpWUL3NmjC9/dcxvY2nyL1lZYe9EgM/Pf1vm72y
                      ADg92Ka4vd2wjz0JWLU9IkcJPZ33tz152oQ9AFDIui/Swj2FTY49TTorvaOHt72Le6o9sACzO+AT
                      /Du7LKc9S9ObvemlwD0MWYU81yOzvXTDxbxr2629oLVsu5BOPTzX1GC9yku0vQhXiLw6ZJG9AKQ8
                      u8rrOz148KY8CBu2PJ7CUj2Ckzc9BuQWPVYpmr15cJs96CiIvbAyYrzjrZ89iynIveIKZT22KTE9
                      gNqavf1Fm715Nss9KAayPD5dBD2Qiri98mWwvQfaMr2NVLY9uEiovbTf4jxqRXW9kP15vOhBOjys
                      y6081767vUKuJj124Ek9kEEDPIpCXT2NTcc9lByQPJcRv73r68q9wKNlO7PqvD1OUj09DBKuPHCn
                      Rr1AbZW9Fk8iPdjKmzwLE5i9JAYGvVjESby488c84MBxvWqpfz0Apa67sJwXvLIgDj1yk5K9uoWj
                      veFGhj26aFI9XsJ6PVL8MT0zgpK94BFpvWaZdT1xCKE9wBcau9K3fT1w6Qq8AnoxPaA8mrwwBBE8
                      2OuSvMyYjLwAtbQ82qgdvYnKzD3AbbW9Rj0FvWC5xbySt6a9WDWIvOGQhT3Ifvy8WuZ2vRd6v72Q
                      HVS8SobIvWoHKT3XJDa9jogfPfR8obziRh89iY6ePe1frb3IArW8M29YvfsMrj2D7q69xJoLvYw6
                      rzz4aMk8urJrvcYAp71QLpi76rwbPUAlbbvUo9c8Va29PQBV07waB2Q9Oa+aPajMMbzoXfq8KHKs
                      PEE1uj2wuRW9SETDvbCn7Lttzo696OkxvFmsmj2ikh49HvqBvUDV4joSOgA9X1S/PaCmrbwAI6G8
                      FnVmPXPpNb22DE09XVpgvfAccbwYOkg8ehMZPTplcj0dh2W9B7lEvVITGz0Y2Xu8+eO8PUK7QD20
                      kfw8UCqzOyzIybylfMO9cDo2PJHGkz1sq7G82gSWvTAY8ruDo4A9Q45yvRFZqT0g8gS9wNabvHYQ
                      fz2m8i09E+SBPfTO1DxULuo8/eS6vSCyE73GUU49wPyxPMAGszzkffo8XY05vTMhrz2suYc847Ya
                      vWS/7TzApZG8+XihPfODML13vcw97SaqPYrKur2dQny9DHv5vMJGNT2GHgS9ALxDufDtfrxy7go9
                      0JcfPPZCLD0S6mY9BoIGvVK3pL3y/FQ9uMafvJDuyL2nOiq9jVenvaC5/ryq9EI93U0tvVTvrDyW
                      IRQ9OBa/PFQmBL1wDku989UyvYhk87xo3L+8scPLPezOq7zgQ5k7MCq+u6DU+zt3xcK94O6ouxjY
                      brzTqog9QJZkvDcIbL3WLIC9VvoePQDJO7s/Y4o9QId1O/vkuD2mpnQ9UwiBPU6mm70QHTs8fwu/
                      PcBUdDydkpi9KptaPdF7xD3FNcc9zfPIPZCmarwAAmA8tI2NPOggnrwiTzg9w7SOPWDq0DscYoi9
                      BE2FvUW8pL0nAYE9YGHDO5iMqTz2wjo9pcytPSZ4QT3SD2c9YV7KPVCoTryexlA9kBo+vZPvyD3L
                      A7A9AMjmOVI7Dj0tNqy9QKG8vMDr97z3y749l6mQPVAmCrxBj649IKPMO1WviD0D0L49ctgRPSvR
                      uT20aeQ86CKcvZbvmL3R5bQ92B51vDBDNzxpsJ09RmSmvapMUD2/SMG9q/KvPdLlMz3KWpG9tcKx
                      PUJwXj1zCsa9NC4VvVLTSD3TIre974i0PQDlLbtQRz28mFe/vUDUEbtgbbU7ffzIPVYyib02qIS9
                      RY6IvTRtlrwW4Q09TOPavMy3Eb1imwQ9C7S0vZgExr10d5+86NXBPOVnxj1ZjcE99GfmPOE7oj3O
                      IFY9lI+8PH3XO70Pir69f4rKPZqOuL3wNAC9sQSQPT5ecT262xa9B34pvazIgrwKgSs9YG+iO28K
                      pz3FFpG9tFnZPGP3nj1qLL29n4LLPeAKgTyyCgk9xu9XPTj34bygjYw7YP0cvcmZrj3IGa68g1nB
                      vYjxn7zKpXa9hIvcPJAgJ7zFUIi9KfK4PevIgD0z+rO9S7iQPcqAWb1wTUg82oJaPR4+Sj0AzKC8
                      YFFEvU23rD2Qfa+9k+ohvaHHiT36Aka9B5eEPcAhbDvJ2Zw9cSyuPSwHgzySQ009OO6NvJLDgr0N
                      Lky9dEnzvOhJFLz30Gy9qMV1vBo0J70CpR49QK52u2DixTy6nJa9B/1nvZqYLL2QqXG9tqowPQeB
                      Lr2wb3s8aKdUvMRh+jxAA2e7nye+vTAZZDydvUu9rSXHvfv/u70x6b09+rx1PUMEIr0WvQO9QEt1
                      O5OkmT0gM947EGA2vV3fhT1gbmW7bMjNvPUbyL1YyJO8YGXEu+1EaL2AobY7Lz2+PUB5ZLzCdTw9
                      wCbGuggcgLxlXsU9kDkRvLiUmTxMcqY8B5l7vbKeMD2JGZo90iqVvbiG/7wES4W9QBhAvM70Dj2n
                      6lW9enevvQAck7q/nri9yLuIPPfGVr0M+qc8GoooPcCvY7txo6095c+UvbK9cz3dK3+9f8etvcnr
                      oz2YzfG8touevdTamTxa0no9nDT/PMCSiL1NTZm9E/umPSBcsDxtmZI9KNAePPMCHb3Hdy+9WDEk
                      vA51Kz2s5w69iicZvaKdvr1S1Z29Vf67vUC4Q72d6sK9Lxm/PfIlKz3/LYw9enWLvYBD1rpQcKe7
                      60OaPWBlZb2fia89SKrvvHrlQr1KI3y9EMwbvdprWT0DN0q9lFEQvSo1Eb1Bxow91/VCveG7lD3+
                      BA49yvwAPSFsjT3jGp09MLhCvW7jnL0M5Z+8ct9aPbchwT0tMh+94iJKPRd/gj3i50U9mLErPAPU
                      Lb3gHeI7gMBYvDQaB70Os5y9oumvvRDmYzy83s88E4mtvYOwIr0EzdA8ie+cPf7XLz2TRWS9YLbF
                      OzH/jz2gY469AI45u+OdZL2UMqo8fQ52vRN/hj2syJa8CkXMvYnhyz2xlJY9Ju8SPanIjD3gTfg7
                      MJovvPRjoDyAfku6TPj5vPjkvrz38qy9sAYGvEBLfbsu4F49ALQUO4CY1jvgud68AMY4PKNthz14
                      3ry8gHHFvLf3qj2Ie/W8OtswPYy6ubw3Ips9vaPAPUMScb2Qylm98tE+PZ0QP72A/oU6oI6wvMed
                      Zb2aSRA9eMC5vMKqPT1nZE+99k0mPSN8qj0QgEE85MznPPQNpjwDVZ492CWDvaBEjLyATF08MO66
                      u+JfPD0AEE68zg00PWAiKb3KlHw9GPSSPGK6Qz0mcmE9eB/EPKDH0busdQG9XcFsvWcahz1PG7w9
                      QJs8uyrxDD2UaIW9UDC0vWr2Zr14iaq9wtGDvZ1ur72KaxY9U8NlvRilNLy6G6m9bIDyvNQa1Dyg
                      MQU7aEEwvGIMvr2qTRA9GORFvOCKkLz2KKq91MSPPFSbprxoDKa93iEaPSDIhTzzmcQ9/uUlPSD+
                      hjzoAC88Mi9QPTZBD73ww128O4+kPQL/Sj3izgU9e9invahe4bxFuJS9GJwuPCxAh70sG/E8sKeh
                      veaOPT2gfws74UeIPXdAtD3nfak9YMk1Oye4sD1oBcW8Uh4GPazXv7zn37y90EzDu6kNoz2AOsA7
                      g1CivWi6jrww/ym9zHrIPICNwLoAHOY6d71GvQC6c72ebGI9MDGpvbeLvT1L4II94q9OPcJJCT3o
                      WYy8mfuZPQTt6DwsVoo8eimVvQBo/jsiTEo9PZprvdd7nD34MIq8fjtsPTCWJjy+8gQ9LyiyvShO
                      e7wOWCs9DKiqPKH6qT2CeWk9WvNJPVgBrDwK+ou9JvWFvSAzm7xByYs9m3ixvWAPOrsy2GM92gJJ
                      PYKqcD3Adre9Fe2EvVbAOj3O7XI9YLcMOwyG47wgR8o7zRyXPbGAyD2Mpq48giUoPUD3e7xg31o7
                      YLCcvFTr3jy0e+88kF9RvCRy7Txwj2K8isBxvVJZIT3SzlI9ypBVPcDZjL3g/rQ8ricUPeSq4TxQ
                      NYW7tBTGPFLldz1+/aO9lPiwPPlDxT2oUVw84bWmPTUogb3QJwC92OocPMhYv7zRtoY9/9GvPbJn
                      Vj065oa955I/vSmzrj1V05c9iN+nvHBVe7yFr4E9kDV5PHTUFb1qYJe9Y4mSPQ47Pj1HCSm9pmwL
                      PeiWx73gm507H1uBPSBDvzv2Vgi9iJ/LPKd3wb3wACw8hNnkPGyI4byjVzu9EcibPVQs2LzrVL89
                      oqBWPR2bY72tqcC9KBg5PILSSz3Ad7Q8EApRvHNqzD2TYpw9L9rFvdgns70jgnK9Ia6XPXQ+4rwK
                      9jq9SMqXPPMeVr331Ge9Yl8aPSicFLzSQAo98C56vHoGdz1ma1M9IEUjvfWHoz0GjZq9ACBKPLYM
                      ZT3JXrI98sBgPdAlnb0Duyu9m/WavZAmBbyG1he9ohhJPbkUqD2SuHQ9HvkwPdRPvzyfjZg96BoV
                      vPSXrDy0Po486Yu1PUAVpjycGtc8ojcRPbK3Fz3AeR+7GAyZvfiaiTxkVIi9s81qvaD8IDs3Lmq9
                      yX7EPTZrqb2ptJ49J7WlPXRyxrxEL+08+BKDvehvKzwashw9gySHPYYuDL1QThW8sYCPPSofl72q
                      TUg9uGiBvcjAxr3wfse9whfMvcI/n710o4U8MtoxPYSZC734TYE8RFjiPEITyr1ouci9mv44vcAk
                      cr0Y9uC8jGv0vKoaOL1saoy9k7GrPUgirr3wEFe8+WTGPQpEMD0Wy4y94MGnOwtyqj2p/589aH06
                      vKjTZ7wAwNS8ys2avTTriTwrwIQ9iSfFPSY9Sj0SGHs9vFAMvaOuZ72SLnU9cJWIvXBUI72ik7K9
                      iOzYvIpwTT2zNDm93TSqPZkBoD2Iua284w97vTXso70DAUC9MNBvvKdMf7260QY9aDkOPJgQ/7wa
                      9Ia92wWQvbOTxL0Vgok9tIQMvSCfzjvKh129+kSHvQ+9hz1odVU8FTugvXiug7wCtwA9gDXBPCr1
                      yL1Va8m9wZvEPXj1iL2w7d+7MLzyu2cTa70t+cE97omkvaAXZb0U45I8AgTAvSK1Yj2Mzp48UIpv
                      vOSVDr2ZX6g9ythLPQwH0DxI/re8kJk4vW7xND0TK3a9AZmiPVpvRD3RRKE9VByYPDaFEL0WvQQ9
                      wOtXPFuRkT0TWXq9IlWevUODlL2sh8M8aswsvfkMuz2QQwG8ZUGAPS0roT2Jl4s9t5jJveLBWj1h
                      78g9wmWovbY1Oj2srLm8QC0TPDC1ObzW0Hs9zp1mPcLiZD3Uhbc8OlU3vdkSwD0g/6U88qNgPdq1
                      bb0AV6k7ooZePWDXIzusxcO8AFzVugDfXTvQrPo7Z+qtPWMKrr37Vai9DfiRPXhhlbwtfKA9QKdL
                      PK+vjD3KtAY9YD38O+LKrr3wSiO9DcXMPf0PU734u/a8iDyovIKiZT18Adw8sDL8u8Bojzpw3Ee8
                      dJHavMCkO7wy+Fs9HhdnPRK+Pj1KciM9QKdJu7o5aL2OQYC9GRW2Pd6FhL2AkaK6SGzMvYhAmjzS
                      mx09mIfdvBkUoz1ohSG8QMtyPJSSyTyMsdo8+qRNvapHFj0QJ269EghnPbMpdL282hC9oOWKuwCU
                      xToAgAk2cAkavWgOIjyMc4A8xyW0PcBAYbxg5Ji8zweDPWgjvbxo0sO8kV3FPXCKFzwI6b08qN4x
                      PMPmpD3wlxG93wG5PSCD0TvGtyc9wI0ovNMBrD1qYGI93UBlvdOsXr3d6mC9w5W8vdAAd7yAS5q8
                      SJGNvA61Xj3sQok88lE5PY9ZuT1K0qW90oQzPZQch72I5KS9dziMPZZVp71gSCS9DpaAvSXDnT2y
                      RJy9KMCLvQMHrj0DRh296faNPTSlvbx7+769sA4evClXpz0KrBE9N9kevSbzYz0AIJO4smMiPQA0
                      CL2gpo883vmevQ4WQD3/GbM9aMbHvcxj07yE+fI8cApDvRb5Qj0aK1G9xl1APXJXSD1/ucs9PAwS
                      vTDejL274bO9QpA5PSggPjw6GwI9MQi9PYBu3rryFwI9aM+FPANZvL3wZ0U8cAgYvdJvaD2QD7S9
                      XSF4vS9ekz0DSiy9EP9QvWt6lr3x7aU9ZcSAPTqECT2wzvW7FBGnPBf1Kb2ZQYA9LC4NvdAt1jtK
                      cFq90r0vPY4OCD3xi609Io1VPXPdnL3xjbo97KqXvMKsZT2ekhw9zp5bPUDGR7uYWKe9VqqfvYg3
                      tzxezhw9mAG/vBVVhr1A8i27fT5XvTaiq720QqI8WBLJPI4NLT17H6w97LGDvYCHuTrhbsk98Ax6
                      PCDVxr0OmjY931y1PYqLmb3V/q+9gNkrOuyIBr0o2qW8W7GFPRoBVL3K3gM9mwiZvcwChr01/5E9
                      cDsuvatztj3QmLC7eAy2vID3jzpIbYo8qgU6vZ5ALz2BA8s90IQrvLiXnrxiNUU9QF0iO3kOpz2A
                      hzM8J/WXPXelKL2pMbQ9i1mavZksnD2gIYU7+4rLvQyoCr2yio29G8iRPe71qr0ICsu8PBqKvWCG
                      K722KBk9TLTdvCBP4rxx48M9mKpyvADSoL17Spa9UlUWPX5wNj2/Wco9I+RYvb10Z7265cG9NZic
                      PUdRjz2oBZS89isHvQBTlb2UPKQ84ovJvWITOT2c+oK9IDG9O3xkDL1AkYs6cKxsPPgVjr1J3as9
                      mMSovcmPgz1mjBi9YiBRPSxMlbxBHMM9oN4eu9c+db2Ux928o/a8PWpMQj1uvjA90/xwvf4Dgr3m
                      npu94KD/O7KYOD0PEpU9c5GiPebQEj0oYDm8QDQhvAhlgDzEVRi9PfQ0vTLMlb0oSI+9oNinvGhn
                      LLxQ2xM8i5+svd4/Wj3onWE8F0mDPSi54bwo0Tk8JILTPNlZrj2bkJc9uGeUPJaQOD1m9Xs9cY+Z
                      Pc/Khj2Zt6Q9yPqkvd4vNj0sP6g8dSO8PXaTo70z2x29LLy4vN3QGb3y9Rc9HrVGPTiHhTwS5Hs9
                      tQaBPebmFj1DTBy9HoR8PdkMuD0A68W7YENeO/L4j72g/5C8dAW5PDA94zuNrJ89KIZuPECmEDvy
                      uEg9u6CGPfT/8Twqm3k9g5ezPQXhpj22qi09kmFxPSrRG72gU7S9YB2BPDzj7DxJscE9C7m7PSw4
                      vjwiPJS9wF67vEJHVD1QUES9rdygvchehbyyDTo9YJqGvRYcjL2EIvg8AFMUOorLPz11kLM9Mi9l
                      PQUOs73HDrw9oGaRPArIU72tC7k9pDTSPFW6pz2UEte8IFOHvYcXjT38rQu9CNeHPDXgpz1APba8
                      YApKO+zd97xyCBw9qweHPcWTij06GTK9ygiLvf5CGz0AnEC7a7SIPRm6wz1wcCm8wjGEvYHhtj1A
                      kLu8KgaVvaINMj1qh1k9gLWnvTJxob3p18M9+Cq7vKKBIT2Ifbg83zaVPQCR2rwAD8q9MC1NvFuS
                      nL0//LG902WNvQ2tnT1g+4E7Ok65vTRKoLz1d749f5WyvWCOP70wcOQ7DrtWPVVphj2TDVa93N/5
                      PClJpT1UksS8KtBtvSDHirsVKpc9qEe+vKBwLL0jDza9mI2wvWK5Hj2C1Tg94BVuvfdKlj2jCai9
                      qqJbPbIYQj1slBa97QRZvbAVDr0Ye8s82uCJvUDCCbuMv/C88T2hPVaRJz0YvQM8TSFvvRgSRrwB
                      hMc9CQeVPcxmh7xfzbE9fssAPXTr5bxCTB89ze7IvdqBRr34Kvi80KYJvQQDhb2gwnk79Kb8vAIO
                      jL1D+LQ9JW2sPXp2Mz0wb747UUudPeOIob1rB5o9IqwcPeRW0zyqjQC95NoPvXR4zbx17MO9V+qz
                      vdAMUjygDXa9VTytPUzRizwaK1q9yv27vQeiYr1oB188IOQOvecOqj0QvHE8lIWavNBXPzyFGpU9
                      OmBqvSynqrwCopq9KBU6PNjynjxRw6I9+Tm4PRgslr0MkoM8jCgXvViBizwaol89E8g8vZUwyD0T
                      Lyu9LmQ6PfEIxz0Cjcq9MyAlvVqnR70neDG9OW6CPWoDWr0AKT+71iY7PV1CoD3pc8M9MOSivdme
                      tz2XjV29+Ma0ves1qD3AAzw84SLHPTVWm733xMK9qGLGPIpII73s/M08dgKXvfhGsb1Pn609+86m
                      vSgaXry5lIg9wDKQPKbBTD134I89jG6aPISu/jyVXrw9j3nBvSlAkD1oTpy9mESYvVbdcj14xLU8
                      EiIfPQgPkTw4WdC8ACsevGDLrTsU8OW8kA4dPHTDsTxAsao6yuo/veDewzs4Ze28g53Gvd5oeD2J
                      mZ49Zp4Vvacocr1yPSk9sIdvPNkTwz04x468ApoUPdilu71uyjA9etw0vRTAmzzLxpE9LDISvT0k
                      oj2A35m9Y8GGPbIjYD14baE8hCoVvXfJbL2oLN287rekvUoqEb0UQqY88kA1PcdNeb2mnCc9iLO5
                      vSrWCr1s3oC8ASmCPbcfar1g/ua8+KvovL7fZT3gYDu9Kk4KPVesU73Qgh88qi5XPbDqf72QeWM8
                      dfayvZEWmz3MkMy80pqHvXNdLr0QBl48nupSPS42ID3avcu9qC14vKinF7wwUp67N6S5PVBQ6rtm
                      WxE9XtGPvaqmHD3nYXu9O1C6PTHHtz16BH69HB0SvVxj5Tz2WTw9JuR9PbgmwDyvUMg9iUKIPXZj
                      Az3Y3QQ82v42vWMrx72V3cK91SjKvfr+t73tPXe9WKYqPDBzY7ybvbQ9xkgTPeJhXj118po9fHn5
                      PEB0ejwWs529kHgRPMqRib2iRi89sHmWO0UXzD3tPqi9ElivvQBgorkdacS9YMGYvEDXuLxQA727
                      eiKhvQxgrLx0PvG8zsGgvcDFLjvQskI8tFb3PJwq7TxO4zs9rdmCvS+elT3GDWQ9eia3vQLUbj1K
                      M8S99YeuvcEBsT3XK169GF0xvIDkSbzq5xU9eO+VvBRyE73QHKg72uyyvbuAjT0U5v88flasvVkW
                      hT2EPec8cshOPeYdFr3ouIs8WuymvcHgxz12I1s9dGrtPFX7sz0QxAS9tn1gPcyznjzthZu9o6iK
                      PfCtXDwODnA9asdDPaCltryAMaQ8Vj2Dvd32qr0/KJg9qsWSvTfOeL0M9uM8IHQwvQD+qL2t0iK9
                      gF/EO5sOrb1U+rM89MiwvPy5Ar10bam8mROrPWYoQj0UQRm9oO+LPNVkyb15Acw9xX+Bvdv9lz1g
                      ouI7gN8CvXglhTy8W4W90lYaPQIHDD0TBSy9ip4vvZ6+fD2isQk9Q5kmveMWwL0QoGm8lNH4vHTK
                      gbxLTco901u4vSgxoLyRaco97PjrvOmMjT2yI349YFGgPLdjLr3LEri9zfG7PdEwtT2Agck8uoAt
                      PbJfrr2WASE9qG9BvCoofT3BrME9Z7y2vRc+Xb2Lc769L0apPQ2KVb3iNVs9v8myPTChRzxdlK+9
                      zRBXvXnEpj14FcK84MQGvRMJwj2Ampi8b2G7PfeXsT3azrq9mLrCvPLGtb2iuAc9kAM1vO8ntr0g
                      kJa8g3pMvQ/pur3QByg8apk9PUDdGjtRaaI99IzjvNinyTxfXZA9bCLlPCpXnb3WX1U9A+OdPXD0
                      AryyZjs9QgKqvZRInDx1lJW9g4m4PdHLpT0lcaQ9qhxhPUCnfDuuhIO9sDWLvU2Zb73i1cW9I+Gw
                      vdX+mL0mn6e9mD6NvFjLeDw33GG96OalvcC4rzwb6oU9Ejt0PcjetL2AibS9SEaAPFJfeT1tVlu9
                      H/S/Pce9M72BALA9UJVevaJdmL1zLMA9WI/MvNkSyj3etWI9QLpSOxgifDzQhZm7WLBBvMxI/jzY
                      jiy8KDiSPG8ioz1mj5K9YEYSu+R/0DwlbcU9G8mZPe9egz2dG4w9IhvIvZ2RoT3NnoK9VPjOPDuj
                      lD2S+xA9szdEvZKCaj26mWE9Y8snvYrLK72obtG8p03DPclYyz07VLc9IGbLvA3Gsj0Q4Vq8/voI
                      PRoFB73IHaW84yk3vS6BDj2aW3q9Vs1XPX2zc70nGy29gLmpvOBuxzsbcqI93HvOPNOGyT2+cKq9
                      t6rBvSURgz0f/MK9MKbnO5iYnrxSQxQ9g1WZvfZPIT0gskW9IrAwPbINCD1gyGs7217AvXgrxjzH
                      VJM9SHrwvOBk0DtAba48zigkPZpaM70A8mW7gGXQvCBi8buA7DG9gAQMvDmbwD07VpG96HidvQCu
                      8jmY2jG84VqpPVi5v7zos8k84ulQPdD3/7sQLDy9tHaRPP9xoz03W069u0OaPaoFbD3KZEG93VnF
                      vSrhqb36Hn09I6IevTWYrj1iV0c9OES8PIDz7jte55O9gWukPQz+Bb3Qoxw8dMqwPOcwiz0msg89
                      Jw2iPS5BFj0A+KE5v7esPQC2C720keY8TLzzPABtNTzCHkc9/Uh6vUB8FLtIU5a8PTg+vYblNj1Q
                      OJ27INasvC3LO71iy469gJfHOyws7zzUksa894BzvYB9wbrXrEm9716SPUasDD2kmfI8qHRJPJiQ
                      tr0g04e7Zv02PQMRnL1U65o8oIvVuwMkaL1Cc1c9IObtO32mxj2V6KS9iT6VPX3stj1X+5M9GQWK
                      PcdpwD3w5Vu8wLUAvCjhnTwwsCG8KjB2vbBdSzwDgZ+9oLDIPNuGs71g2nC9wiIyPcGalT0Wf4K9
                      YF/MvM0vrj0hBcU9SG7qvPIDQD3D90m9NH7fvEoSZj0yVFI9Wz22PVFFjD3z0FK9ML4/PPAqODyw
                      e1y8QP4yvFAo87tq4I+9eDKgPOCPy7uuGBo9wOy/vGQACL2r26g9+JauvaDgwbuI0Y+8CgDEvVBU
                      8zuAYLm8ZNfSPHwTEr12WWA9rDzlPFCtcDzYQxA8WKrVvEdlbb1SRhA9EzWkPahoQ7zXhMU9ixXD
                      PVCbWr2gHcA7vRJ8vRghvTzwm2U84taGvRnQwz0HJcm9Qxi4PcFZgj2DujC9VPGuvJuVuj3lQb89
                      Zs4BvahWArzuBX09isIlvaBEj7xAFHG7bZ/IPTNQVb26D7C9kGthvPt2qz2QzQM85gkQvVMhb709
                      +7I9tC8NvfwzEb2ghZ67ouVKPaZfET2EoIO9UXuePRiKEDyq9Vq9jMuMvCjQpDwAKR69I3iqvZMH
                      yD1rcJM9QBRdu2jF3bwMK/u8JaaBPeOWVL0zF6I9m2CSPfgoiTyZ2cM9QLN1O1X8vb2eUQE9wD0p
                      O+R07zygQ/27gBGtvRBkb7yYYws8PrWOvYA11Dt97DS9/ZzMvaoTqr0h6co9+32rPfhbrTy79Jo9
                      yAO0vbAPIjzoXp68W1W8PZ3Drb0tNr+9+CfGPPL6h72iz189vDfoPC1PjL2BJ5E9F3vIPUDrsDzS
                      jgU9y8nGvdqWLb1uWiM9PmVuPSWKoT3V5J69NzeHPevmk71D2yi9lDACvUtNqD1LeLo9ZktYPRwe
                      gb0AVWC8AC1Quslgsz2NmZG9dEehPNjAfDxJ2p491QaoPRSkozyMPe88UKxfvfDaOjxqLQA9NmWZ
                      vb0Hy70AX8s8d/VevedVSL2uNG49Qh6YvbgolTxKoAm9NIeXPLPviz0AZq68VzljvVCIqr0Ko0m9
                      6DcTPO8SrT0A6Gy9JRC0vS3Rrr1L6qa9wJ4GvE4ylb0ATl28ruNiPQDvBLw0n/i8sDShvWixMTzJ
                      P6U9IqkgPYwTojzozcu97XGWPWidA7zhecw9+M6bvcyl0TyH31e9DSS9vZD4Ir3w35i99tYnPZBY
                      PDyqnRO9QSmsPSBUujyv76Y9E3JQvVWfrr0vtq69ja6ivaCX8bsA7dy8PiYVPWqEaD3givg7Un8c
                      PYB5vzpzyWO9rtUIPZ7lk73lY6+98ktiPXj4tDzsfNu8VRSxvVr6s71lDpM9Ql9uPcjnpb06mWm9
                      BUzLvWhodjyQG3w8Ur4QPQ71cD0n4bw9INa1PLDQAL3gQNS8ZfWgPZDldL1aIyQ9YL3Mu3p2Tz2n
                      yrm9zX4zvbRIxrw52sY9M6g7vWIXHj3q7jC9OATxvPQLhLzAV6c8P4+GPbQy9rwGfZi9qDfxvKyD
                      qTx3DJc9bN6oPDA2WTzRdMA9yQDDPaiM2bx6mny91go5PfEfwj2n0ka9AFlAPC2LSr2o4aQ8qAq5
                      PHqkgr22SVk9AJQ7vf3GZL26Fw89CglhvcrQH72op8G9dnIMPSkeyz0jR8G9wFoTO40jlT0DxK09
                      rkg9PekPtT3+6Q094J6sO9+chD2Ot4u9J0dhvXbTlL0aGJC9mJ3avEVfkj3K03q9t0GvvQAt2Dne
                      Koq9TkabvXXmkD3svAa9gPfuu4FvuD3M3gu9BDT7PD6CFD0AFxC79QGjvZTBpDy5XJA9iNDsvEXM
                      l71q4gO9aJZJvDDEmjsYFIG8Mai/PcVmu70qibC9GtUePeZphL2c8dc8lBDMPASE7zxoLic8AHqc
                      vBKzVj0A8SE6mCepvYCJdLrpt5M9TFavvCsplT2ij4S9KLa+PBH1vD3xDL49drZiPdBS3bum/xC9
                      sqUrPaSp0DwAhu+7nXe5vdJ0aD3AuCW7EGsUvABASTqwSoK7UrymvbGMvj0ooH+85gaFvXOwZb12
                      nAi9FDTcvOaxBz09Ak29GcCgPYdyuD0g7PC7OYySPWaccD0WEhU9EWy/PZS3ijwIrZ88TTWcPVJD
                      IT0K9m09cwZWvWj6UrzaH1k9gPR+PJ1Kjr1Dlpu9FCb1PBjOhL1Acx088GCWveWwt716LTi9Cn9B
                      PdpKr70fosE9IIu4PCeder2FVZi9dATzvBSOB71Lcoo9oBZ1u1hdSzwgo8+76uZavWHOjT3xi7Y9
                      YK4fuwDovLv3MYc9ZRXMPWggsrzJ1qU92EAFvNodGT3pdZg9T5uIPaBdrLzChHg9sO6avSiStrxY
                      QQk87tUUPXR1g70jl0K9jXClvUBUTDu1Y8E9VB+APP6WkL2gwLq9ADKiOp16tT1Y+wa8pK4VvUCW
                      Tzy02gm94BSHPKPCkD1DCbs9AJlWu7sNyb3A3Io8ubCkPdA5DjzN6409AOcuOwp8Cj3ZwMk90vEP
                      PQwzg70FN6i9+Q6zPfHNoT3M9uS8wFhsO1CAGzy3iGC9mCz6vNVNgz1AXQK9tB/BvGAsZ70orjc8
                      MNa7u52+ob0HE5g9ndayvVqeEz16Ox891/iAPaDVqLxY7AC8eHrvvPD6S72bVL49WEOVvWDtnjsi
                      hB49c1a7PYB8gDxTVZG94bGVPeLKWD2zmnu9qNqUvI2bNb1sZtI8IihSPfVBlL3Xs6s9KousvVBC
                      WrwPIZA9yvUqvVN8oj3u8HE9JkcUvdtXqT1h6qU94znEPTDNKLx1ibU9USWRPbDoQDw9q3O9V+Sn
                      PThQv7wNPrs9KIcBPEO3O72T91i9ImoRPSI7WT1Q6c47gL6eu7OKdb2UOrq8UGFLvYdasT13sLc9
                      TJmtvMAl1bzNZMA9CpCyvS7lVD0YhcW9ijt1PdRTizwiFkk9YKABO3Wjor1gnXu70naYvZGNlz1g
                      Sde84LGEvIGMkj1TYV29Zl08Pdcrt71YOea8VuqjvWt9o72taVa9EbC+PQfjoT0Mta+8ScKgPUcX
                      sj1C2nM94DmwvAC3KTsXLFe9ghwjPbD0lb3oLCe88tIPPdfpcb0+Z109YJu+vKAxz7unvFi9V5WT
                      PW0lpj1U9LQ8gs0RPXvLvT1atBo9mZyTPVJPND2ohT28IlxBPYrLcT0/R629aCZEPIGTuD0N6bo9
                      cPhsvcqusr3N8o89oFV9uyWrtj2TNIo94Du5O3XXpb2gPYu90vSrvYaCir2gJQu79PevvHS6hr0A
                      qGO7/icGPaTzF70ykJi9oEkgvT2jOr2I0vW8Wp2wvbRUjTyVJ4g9NjgWvfGmjT31AMA9vrOOvb+4
                      xT1g+YY8RILPPH26Xb3wmi48AIDluWBNRztq6AE9UpacvXobO71ho7Y9cFAiPK5kmL0TEmS9tgta
                      PSDC7bzCnmU9wFIYvcIxKz2PHpU9sfKxPccXTb2ubUg94KOQO7ZbUT3OS6C9bGurvHawAL0o6Y29
                      WyjBPSwIg71o9qU8EHI2vaU8iT3yMMe9EP1dvUCwMzuMoMi8grkLPfmdhT2Y+1+8HFIUvTa5Dr2x
                      ArU99qNbPSjkQbzBBbM9oGS5vXaDEj1IhLe9Gh0QPaConL2QFCK9EiBGPdBKe7wirQ89EyVzvQDq
                      rjwsGYi9APiRuLcqsz2S4Xo9VBiMvKFexD2H61S90l9TPUYvJD1gXsq7q1WOvUpVwL2+DyU90jdE
                      PdBIir1/iqw9QxYpvfHilT0A4Ek5zhh4PQpcl73nxFC9IBK0vVCSb7xeCX49SLmzvACLoruoyoo8
                      aufBvd1FJr2Uld48uyCAPWbbnr0w70c8eSWUPcpCj72oUIS8UDDsOyh9qb2P5ci9XwfAvYAqmrzs
                      7LI80A78O97VgL2gezi9slMOPUMJw71wYwG9IpGfvXerIL3kif48uMy2veZ8Mz3YQVM8kFxXPDsg
                      sz1g2I27wO87OyhUi70LkLU9GBrivEyK/bymhSo9AC0+u8DbKLxCdRM9cqaVvatVsr3Jd7A9HQ0n
                      vZPitj1A3wg7okoFPeKsTD0PCqI9BXulvXjNpL1Q7IO7QDQRvQhVtTxAFiy9LWObvenmgj1SjSo9
                      GjmSvcctyL1xWb49bUS3vb0hf70wcBk8BdqdPSZ+mr30TKm8TKP4vKALmryyWQ89uK24PLOrN70Q
                      zQM8wPEXu45oCz0Ao6a9TGS8PIXuqD0QLya8PDkBvUcVVr04uK084Mb2u4KKKj1mBUc92vWhvb25
                      JL0u4CY9JtIRvT9jr70Y04q9/XFMva03tz02joa9ER3BPfqkYz1Q42i9FplKPQh5nr2iulQ9j/+e
                      PZeUzD3wCza9HBTUPCJGp72YeIW9GTqnPWJ9XD3A7ku7U7fHvXO7ur3zZUu9GLYWvJMLPL09Ezu9
                      jUybvTICdz2mXxG9poUhPfh2ujxQZu87l4hvvWUJrj0+yoK9pJz8PAelX71jl8E9FtNcPexFiTzW
                      8zc93qplPVjkuDywwic8vtMzPWi1ybygnOu8gHorOsLtIj32LUM9ELJSPG1oYb0wiOA78NYGvABy
                      kr2MfZs8AN37uYAm2rwAa148gFIWOuD2x7yFTbQ91XvDPYc2Or2OCxs9obuTPUwporzQKUg8UDAW
                      vCOYoz1wyKa9NrdrPdGpqj1Fnpu9sJJqvE92hz2zu3+9gKAWvAn7iT1n0kW9VcG0vbo5Iz3tIDu9
                      EgeVvfSY5by5R8U9TAK4vPXzij1KRrC90N/su4Azdzytnau9SQC+PV+Zu72gWAa9Mwq1PSh5Ljwo
                      cRq8IX2/PaLQaD3y1yg9GwutvWBBtrxaNL69sdK+PfE0jD3Y+T48mlzKvbnqhD2y0CA9XVRKvUMQ
                      H72Dgj297ptpPRharb2go9Y7Co0nPWtVt72z1qc9zSccvUvssr0aum09V+dFvdfmvD0GOyc9Vo9V
                      PaowjL0sRco8KiyhvYB6tbxQLV+8Nk5ePVA8grvwDyc8wHEcvf84t70A6h85Z7i2vdGPlz2SomM9
                      +OTZvMKsMT2eVx49jSiiPeCa8jsdYMi9WAnrvD5nXD1iX3g9GKRfvPr9Hr3TM2O9b26NPU2aJL0O
                      J0o9tutfPTXRuj3Y0cq8DY2qPSDOXL0C5Bw9rFidPHBtE7w8ido8WyqmvUAxY7tthE29GlMjvS59
                      Qj3yVxI9YSGoPbP0uL2SIq69HrNJPWJheD1Cris9Ut0xPc5OPD0br7W9ELMzvZ1uT71wASW9UGCE
                      vbMypr1uUSQ97yqnPYJ/Xj1Ax0m8KKQSPC2YsD0btq29sMZhPBiOI7xIkY48sgtgPb64gL1H4m29
                      B8UwvVLmhL1A9+G6gwisPQCqc7x5LII96kiVvaPZt71k3tQ8F9ayvS0YSr09nyC9kLoBvGD8zbys
                      6v28mm1nPSm6rj1nCTq9QJvPvMAbxL3ZI4I9cnTJvao2Jz3YY4W9N5W3PcbaAr2BGZA9GIq6vYyg
                      Cb3ddLg92M8/vH82v72WiH09HgIxPUwfzzya9qy9sMpNvXgoirx+0mA9p45dvcaUGD2mwlw9tEgQ
                      vQ+fkj0mLhs9iYKOPSz52DxYPiK8J5lbvRGwiz2NOcG9xzFovfD5D719Uri96k6zvQCUbbvKO1c9
                      cGVWvCrrpr2AbUm9aAvMPNryZz37mas9mtlcvai1ZDzitzI96G9NvAbXkr04fsA80DtMvO5XMj1E
                      bN88s08lvSPGw72LK7M9YtR8PQBDGDxGKV09wGCevQ4srL0nkHu9eU3DPcAxZzzoe/e8wMEBvQC9
                      uDv5tbI9eGGSPOS/8TwoLYA8Yk5YPUBhZrsoaLC8cmiMvcgXmb1sXrO8ln8BPfXhp71FroW9Ctdt
                      PcBaDrs2IYu9sr8yPaC4s73EtOI84vAFPVIIBT2gveW8qFmEPIJCLz0U1oA8I7yQvaBds7yQzCC8
                      6caTPdGFsz0AC767XCjQPIK9JT20yKQ8AO3POyy6+7zgRku9nWK0vVIqZj0UHJM84g50Pfn+iD0h
                      Dp491q1SPUpMb726ecW9Z1sxvVBmJLxdwII97GjdPNYHcz3dRiW99G20vBA+BTxEIP88Av9LPXwl
                      0DxggMy85P/rPJL3dj3R1rc92NRtPCIUFz0Ep9U8Mvl1PUhX8LztbaW9oHpIO5Ylez16MBU9Crd2
                      PVJ+Kj2gtfK870u/PXs0kD02DE49ISa3PYRs9TyW3BM9asUoPU8Krb3+n5i9FOLevPoqOb18SoG9
                      +H6Mvf2tmr1yGUI92Gb2vLkFjz3sZ9q82Ta8PYSL5zyFV7k9gC/QOtBsSr2gFZA8mJhMvEpOqb2Z
                      zZg90cOsPQDiHbt8CRC9KnpePRRbgL0QpxQ8ZDPYPKwVD71Ozn09MYikPQoFmL3inW09YLfuOzCO
                      Dr1Yxau92mkvvYK+Xz3yunU954ODPYrWCT2bL7u90JNoPCnWgz30VI08cvd5PayP8LzCK7y9OIm6
                      vPnRgD2A7cY60bOaPezvtjwZBKw9YDqCPJK5ET2ndr29ql25vfQn4rygHhm7gAFQukpVdL3iT0o9
                      MDaWvarHur2jCrQ9MXW4PbBuADzVH8W9GD3fvGimj7wzlSe9r2DCvbCRcb1vy8K9ZXGDPdznBr0U
                      ucu8mdPBPdcwIb3y4nM90OAgvQ7dkr1s64O8Jh4HvWKTgr1AyLS84m0qPYr2L71wgEE8O2vFvc1u
                      hr0LSMC9APIfPGnTmz0g8MK7E9S9PTRPEb3wDFK9gIeqOtHgjT3AI3i8tA6+PNoBvb0U3K68j5PF
                      vc79Oj1MI7Y8mBuUveitjzyAFow7JhE/PWe2e72JioU9QwqTvRauYD1mADU9mMOTPFGvjj1nobC9
                      9NSRPIGdiD04rMa9ApNLPWuDtL1gyX07d2MavZBPbbzq2E69SzeNPQiPujxUkYW9LETmPKyn0jwU
                      sLo8yqdzvSGjmj0IB5i8YEmTvN7icT3dTKy9BhQMvZhGxLy6CSQ9Blk1PbSs+jyTDnO9hQCBPYKH
                      YT1yjj89EGlfPADMOzpixqq9Kr8xvYRL1Tztw5S9AOuhufOChz3ylUc9nrurvUh8xLxeDFM9Es/G
                      vS05ur3mURE9MMJ4vHp3ez0wpba7KOMLPJjv1Lzg9L88iv9Xvd08mr1jH7A9EHY3vAT0Fr1y5h49
                      7WPEvXg3orxgdR69gGEcuno8Fj1WrwO9PdesvYvcyL0At0Y8MfK3PQ/rx72owAS8gHgMPFday71b
                      nbI9dsB7PZ5+q73gWKi8MET6uxzK1TzLyIg945MovSz0pDxgKue7RCCEvbkkyz0Nr8S9mu0aPeAO
                      oryJLL49qFG3vezVmjy02eA8+NnFvZuoyL0bH6k9B9LCPUAYwr0qrQ49bHWTPCBVurtK03i9/wOI
                      PX2+uL3HY8O9gJO8vWggWjzAVja9AE8gO/EDgz2q51o9a6+mPRpGDz0AzKq7wNiBvEAVzjqhQbo9
                      C/WOvWNAX71o0h6821KqvXQayTyLEqG9dgZ+PX35vb3yMyc9MB4fvdKziL1yuU89BviUvbRvF70g
                      2t+8oN+XPAA8zTtWaBO9mAeDPKSb/DxU/qW85mCnvUrIfT1TeKi9ulpuPXD0arwA5j45ANBWvCaI
                      Bb2KWBu9vWZuvQCDpbuzAFe9O62pvcV6sT30N/O8lKaQvJKLSj2Ybi882uxLPcfSvb24tIM8QKPV
                      Ou1Zqj3Uedk8vkw/PXDuIL275p69F8E4vWKLST1oLr28hmJLPZ2HN73jwa69MB0avdMcl70A/+i7
                      mI0dvAxTuTx2CVc94NuUvEcCyT3Xu1W9Q203vfDjUTycjPs83REuvYhp27xt0Ve9Ex6cvWABRjtd
                      JVK9N3KCPbpUNL0A2GI7AFkyuuaZCb1oDRI8I6F7vTB2Njx9u169i6aBPQh+qrxK8au92UrBPWGJ
                      mz0QhVM8ZmN6PeipO7yl4689CKSiPGxoBr1QLbC9AMypuw+0vz3AaXq7vE3jPEVonb1D0sm905LH
                      PY/Mqj3yeMK9zk9vPRj3UTx4toK8avYtvblWhj37bpO9wHrTvLgb+bzg4bI754AtvdOXsL3cpoy9
                      UE6yvaVgnz1pnqA989ibvfTK7jxQfN277NGSPMCKMbw6vYC9gN1/uipqZb2c1xK9Z24pvTbZOT0z
                      JJ09x8yhPWzg6zwBba49xlsZvQDEkTu6gA69QFGtumH3nT0njja9ZF2GvSiVQ7ynpFG9wOxsvIy/
                      tzxbysa9jAsPvVi8ir1yawY9YoKwvUBiUjzLO5A9kwUtvaikojy8SfY8xS2aPWr7n72D8Lm9zZax
                      vctwsb2YYrQ8IIuZPJhvhDw9kx+9zNu9PFeUwj1jJyC9o+i/Pdtip73A3hU8+i4rPRuTnT0AcNO7
                      AtZ7PaAEYjvob4y8qgy/vQiOnTyak7C92DbCvXeJbL1Jd4Q9zVOrPZqMH72W3gS9OxmdPcCQeju6
                      Rky9IJLGO9DEcb3nKGm9W3+yPVQzjL0zJbI9u8eRvR2lyD2wlYO7MmwEPaJsx72z91+9Ri4VPUm3
                      iz2obJY8FO2xvPDoBr0dQD69r9a9vY7nXj3SmR89ZYiUvQA+S71np2S9wK/APN4FpL3A7vC6DrFa
                      PUEfhj29f7k9QAaHPCzxojxivi09MNX8O/CpGb06HjU9WA/FvNIlxL2RsYs9nXRDveBHu7whH6E9
                      vdAmvdAKf7xoO6i8E4yvveryLj3Iy5m98h18PQiV57yGSFU9g98lvaLrNj0ouYi9EERkPHwrAb2S
                      rjo9x8h2vVYPfj1bw5u9GMTEvLJOEz1M+7Y8ZHLmPI7kST3iir29iHTbvPN0W71HUci9sJ71O2WT
                      jb3gAf28RoQcPU5kLj1K9nU92gxjvdBrabxASmM7cDlpvCAvHb21mbW9MnJHPfc9L72VG7U9WV+s
                      PRp6Xb0AWqm61skDvcVKsr3oEJi9p5jHvc5jUz14UKG9irooPShSpTxzYyC9zxyAPaKlXz3oftC8
                      w2l4vY8ljT2DFFG9YjhFPYJgRD0QJyy88AeBvdWNp70gn+W813covSpQLD3YZ6i8AOR+u8AvnbxQ
                      rl29Vo4WvdNen721dKW9jXinvTJbKz2+Slw98mk/PeEIsj1Ugp68GDkNvDZmjL3dJKg9/ND3PGgl
                      hzzsNdS86du2PZjWmDzopQ284uKvvarYLr2tWE69AGKaOwI7Mz10LpG8/b+/vVYapr15cbQ9mFto
                      POpcCD0CqL69Pfi7PTFivD1Aeaq8d56wvSs7qL3q0y09SnSsvU2Snr2tCB69zMa2PEZ2pb2kt9Y8
                      gMkCOhoyFr3gL5a8mROTPW0Ulb0u/ai9vpILPWOJeL1yJp292pY4PaIWND0CQ3I9orGgvfOZxz2z
                      XrG9SYamPcDKZrtmkY29F2BMvQF2xD22hpm9BtZ5PVTS0bwef4W9dYC1PeZonL0NO8O9eEmFvFSK
                      mDyAd3g8MFjxux21qD0qqcK9ZdenPfdFUr0gWGq9NZOuPdAay7tjb5S9Yv4lPaSC4TyYLiy8Ovav
                      va3wqD1ATVu8OcaaPSPIpb3gFeK7Is5FPem+wz1q7jU9TlVyPX+Lw72uv2c96FzgvC7FLz0bh5I9
                      HSaTPQ37uD0YaYI8sEObu1QQuTzVGJW9sDpVvBKhNT1D1709tvWivWlMvj2AoKo6dg0qPdUYvT3Q
                      cma8gHi5vNOndL3KGio9Ip59PcYCCL2cEOo8DGihPK6jLz2xSpo9KMQdPCYflL0K7V096gGHvX6p
                      PT0f3rW91qWMvQjW1rzgZZu8pOPwPF7wi73Q6Ha9RaHBvcr3Cj2yhW09ExKNvR8OxT3DxbI9Ga3C
                      PUMWij0AAIW9sJazu7c2Qr3As7G9qbi4PWQfgL1/I4M9beC4vXIiNz0gBKC9vRUyvbcZsj1Ahcu8
                      V2ttvQBaoztZeaE9qGHXvHPiuD3y4gU9ortWPWYzOj1jssg9vfm0PfIFur3Q7Cw8lSSZvR/Ovb2o
                      c6W9kpEHPYDJpb0A7K66xI7UPHBRQb2QVVY8Oj9vPZAzNjw8Y/Q8DH+vvL1ub72wn2a96ajHPcAR
                      srwCW3k9aASQvcDRbL1OjQA9DKOvPJW9nj0gOPe8UAtTvVWdp73g4Em9AO7gvGCmx7wrja89eQnG
                      PY52m73BlKU9uPKHvT9opD138rk9GPgevEsZrL10bZi86loGvYB6Bb0At6+725KfvanNiT3AYLw8
                      sDNGPLA9UDzFMce92h9nPQLAcD1ad2Q9DuAjPbsUqL2t1ia968HGvfjxlb3Km3g9Zn8lPVCWpTuj
                      lL69BKLgPCiWILyvibQ9KEWnvSImdD3jeCq9RUKTvTKIBz3CxlM9YSaLPQwhhryBAsk9AFCvOfph
                      t72SFWY9sHI1vGdMtj0A+X+82OlGPLLSFD3Ceys92rbJvQB2RTzqCAs9UFIOvPdtgz39AIg9QGgO
                      vQ1ptD2Y85Q8zL3kPLgXmL1RlbY9lGW6PACAvLkAxeG7F6AuvR0IRL09k769qKy6PKQqi70T/7C9
                      ykMbPetJtj3g6oc8wOaWvXbZMD2ikxc9OBWtvChogbxQIeu72IvavENaQb1a2AU9rCbRvLImPD2S
                      sR093uRIPcU4kb3SREE9NIKzPE53IT1BB5k9l79MvRgEzDzSPBI991NlvYyb9rwgOrW7NaKCvRJX
                      cj3Qpcm7HVWRvf0Pkb0BOZ09lvGEvT6nBj0MSKY8lqkaPQ50mr1wyT88WB89PNdqhT1gacS8oA3K
                      O/ptGb1imFE9w1hkvUAH5Dq1rKU9ZZecPZj9D7wdh789AJwevarTLT3yOVo9w1iYPfuyuD03YLS9
                      DiqVvUEwkT1ACaK8YE1QO2KAMz1yuSs91a7IPTOOfr3PIbC9oXaDPXBDSDyz7B+98zCDPYgTxbxu
                      nKy9xN4NvWILTT1ggJu7yLSgvQABeL1WPWw9BP+AvaIOwL0Y65q8jj8hPSy5wDxDh6G9LA3RPE9O
                      hz3zO8A9fTu1vaBawLwx4r09YLVqvTJzRD1ga6E8Qlh1PWp5OT3vj749XT1KvdoRjr1K6h09MFGK
                      vUB8NzsB9Iw9oG81OyrWMj0C8DM98cKlPUA9zTpRt7Y9onoKPWa/Xj2+rX09GIp8PJ2ct72gwSq7
                      y2CxvSiVvjz4gJG9LLmyvFlpnD0njB+9rW2PvSuVqz3SHRM9TWbCvR3vs72AN9U7naEsvdo8UD2+
                      o3A9VHSVPGbgdz1+ZoK9bkBYPRepNr1Aqk68I0olvau1mz371KU9QXCoPQDcQbl5lKA9gB7KO3Kf
                      Rj0QnE084Q2ePdEGvz0LQKI94LS/vUXswD0PlJQ9mMbwvMIPKj3PUa49gMbJu3l/yj1xQLU94t8D
                      PWgEGzxoMVo8AulDPVLCor1ADf66QPMFPGBxv7vE5/o8/4SVPSK4TT2nXLo92fO7PXiDrbxp2Yc9
                      9EqbPH3hgr0A9XU62CTfvIK9zL0DOau9wr8xPTiphjyn7zO9+wmTvfT3uTwYt4u8hx3JPeJXEj0w
                      SVK8/ucMPUqURD2waJC7I+HFvbvxtz3KkoC9T0bFvY+Fu72KZEc9BPztPPCJCTyMJom9+oVgPdfm
                      ar3dEmW9IsMUPSitXDySFb+9KuM7vVAF0LvuE4a9MkI1PeP8mb362309gP5ivMJgTj2eWB49bFiJ
                      vUDHf7uAhcE7wBqCvFxd+Dx+kRA9gLpsPJSJszyTNso9FED2PHexcb1QNvs7xo2jvbAr7bsuGIe9
                      GEJyvFgUPDx/0a29UFdGvK0Iyb19x4s9wNfKvZZAfD0bJse9UtkUPSanYT39Qra9GKSSvPJOAT1I
                      5sS9RPwRvYAuxDu5Nb09uSidPQC+kLzTOjG9AAD1uM4DZT220xi9KlcdPRyiFL3q8329AHYOvR7E
                      Dj1dWMy9oBIkvYAPl7wwSuQ7gJaoOv1VHL1gApO8eZCJPR9ZyL0oVWm86O2IvYDqurywUWg82HiF
                      vWE7sD3nYFy9OOfvvBt6x73NGKG9+dSePcpDSr0AGNk6QicYPR5XmL0qq3690x2xvWY6Mj1XELO9
                      HD7RPDgDjLwMxri8Yh1GPXP2qr3Y8WS8ww5GvW3vw73siKY8cLm6vY6vqL1KHx89/WpPvdhEhTwj
                      N0a9mILhvOPOvz04Vbi9aiC3vXAIC70oU4U8zCHpvBu/kj1tgYg9qI+DvS3Tvj3Yf4e9MDnhOx4H
                      kb1wDXy8LFSmPDI8fT1QtmA8sFKMO9AbtDvY+Y886i49PWr9Zb2uigs9qtw1vaDx+zskptM864vG
                      vU+wuL1K4R89gk1QPdECvT2NIUm9XYcwvQbdDD2MurG8N46rPVOwx736MyG9o7CQvRPaM72snLO8
                      09lsvQCsKr1oLTm8MJoqPO1rML1JScc9gJOcOjARGb1YEQu888ezPeAVXr2Njji97AiGPGYGEL04
                      wsw8DbOwPTCKHDxWTYW9YDpAu7w4zTy/nK29QO3vuqv1y71ASDe9HcWyvWxJp7zbmcw9SHvUvDVi
                      yD0gO6g78J1svJnohj1wEGC84+iFPWD8abvFUbY9Kwa8vXu5iT2SmoO9XgJaPYF1gz2GIRI9V/xX
                      vRjT4LwfEYM9LyPCvSdpWr1yb249QCIbPLiAsDxo/Hu8sDLFO5DqRDwuaQc9ENI0vaOjeL3gWpy8
                      mIy8vWAlxLwHSFG9JmqSvQOSMb1Ykqi9+bKcPZiTALwUgsQ8DY68vZbsZj0IweG8C6ahvbAWFLz4
                      TLM80kYbPWc/ar0x+L49FwsbvQAFIr1MpgO9QGbIvCjZqjx04768bYu7PSjBTjzDAo+9N4DMPY3B
                      K70b8rA9TObvPAlcyT10Bsq8UnKfvYDdy7xaFhc9xkVrPUyzDL0gXe27QAoVvIq5mL0gB7Y8Mmxs
                      PaadOT1A1Rs8mhzBvf40Kz0V7cW9J0Bovb2Xt71sjcy8PtYjPXhtgb2Umca8MMXEO6BKgryAIb27
                      lVG7vZHHwj1QLT+8USqqPfdQqz1rNZO9vo5dPbCaCLzrQJk9nhGsvajgX7y37Cu92K31vFjSajzA
                      a047EEACvDNgVL0GmRg97ymqPVPFM72tEX+9MPgUvAdDyD3nHLe9OL/KPG89pD0wgzy8+EaAvWRf
                      3TyGI389ZFvSPNgmi7yd5Ge9QuwtPcOPjD1wOB696BAdvHDolb3x8Ko9TGD4vLq9C71LNLQ9oJzI
                      vQ0Ff72KuY+9PW6UvTBhkL2CqTI9MB0MvXQf/7wzFbQ9QzCvPaWypz0e7jI9oGI6vTTDzrze2Cs9
                      agHCvZ6vgL0EGM08cL1PvWSP3jxQQEK8Jn0HvVc1W73Bqr09AORMuv5tHj3TR5G9VID9vJfuhT1K
                      ZAK9sNjqu0DHuL0A3D28TTK0vTSV8LxzkI69sdCHPT/vuD3oViy8t+ddvaM1Tb2AVp+8SgeHvSvC
                      rz37ULE9ppMgPXD2ezzU4MI8L3KAPYBkmror6sY9xLKFveFPnj0CKHY90ClrvUFghD3gLIm8HgOe
                      vTzm6TxnhcG9jDfsvL3otj0E5dc8to6WvStpqT3N6UK928OxPYTH3jz2NBK9bSeEPfhw9rzoPkM8
                      inFRPQBTBztuwlA94IThO8UfiD01i5S9ypIrvQj/rzxuRZS9DeJivVfQyT1B9IQ9WHcrvI13lj3S
                      d6K9I9q4PaMGrT0ys289RtUTveGsyj11Kri9sEnGvb1CuD3Atl47sDvJOxINq73u9oe9Mx6OvYGn
                      sz3/spc9YwzKvarAXL0vTLI9EL9YvH9goz2tvyO9Oqo4vYwZlDzjbpM9FFmIPGCNMrsp+ao9Ic22
                      PQeLgj3UsrS8GErJvOgvm71qgRG95nVZPeD8C701LrY9/lEzPTAuar1Nla49MPYdPADW3rogwOI7
                      hJz3PH+Eqz15uMc9wCTvvGZ+cT058Z49JsArPZr6pL0AABi0AMbwvGP1Ob3kJc888XbDPTngsD3Y
                      w5a9gw++PasZwD1gOlu7jXSnPZPQgz0/hY09MqEbPdHnyz0Awwq6hkpwPQCIaDpeegw9olvBvaCD
                      /zuKVGq9Z8pdvWJoGT3SDBM92r9SPZ3pXb2AqUA6tPOzvLo6bj3KaCA9jKCXvJBMv71HG8U9Lusw
                      PVlGpj29G2K9INPyO6CbrzupyqM9baQevQCOlbttooA9KGJ0vMLbfj0jp4k9KU+cPY9NuL06Eau9
                      rJu0PNSsvzwUd6y8ANtSu31/PL2Au1I8HX7GPQAAJDv2g389HLPYPItBt726u2i9bLyIPKhzQ7zQ
                      kTu8PYJ6vRhcVrzgFoK7glASPZT5tzyIFJI8e++pvfDoxb2GAUM9dgMYPUDkH724JLu9wENdvBFj
                      qz2APoS8gmkqPbP0HL3AJr69WeCWPYjanzwCyKy9S1y/vSgIF7xRgYw9ANSDPJNUH72ozS08I/DG
                      PUCNq71Vw5+9QvFoPbhJyjx2VCs96KuUPHNVdr1gH/28WAZ4vHniiz0RzMI9LreOvRKogr0wQSA8
                      bIKqvIASNbzdVYe969+nPajdAbwF5Kc9fZWivZIUNT253sA9MYSWPbB0Xrw3hmG9w7NBvYySszz+
                      jnA9gqeTvXGakT1A3ga9jcUvvdL1WT2wXze8Kuovva96tr0Txb49eJOmvGosND3gRNa7xFIKvaVJ
                      wj1J1cQ9xReEPXA8tL0sWvM8UvgKPQCfE7w4osy9oo4iPRLxXj0Wjgi9ZvtUPYCAvb0NTa69YoVz
                      PR0BWL3N84Y9X8KYPRhAWTxFKaU9dR2MPexosTwqIHM9wAlSvfkQlT0AmBY73SY6vUCOer36Ul89
                      qL/zvEB1mr17M8U9HTu0vX5tQD2wDrO9nilzPUx0trxg5ZA7XI/aPEixnzxUurE8roQkPczlvryA
                      38k6rpFDPUD3CL0ixhc9oP/eu8BSKr1tG0O9cHdTPI2CqD1tBW69LqNLPSAoyjxuMXQ9C/+qPcxE
                      ir00IJa8H2y/Pcz507zpJIo9OLuRvBJaBz0K8UW9MGk2vHXAkr0Xqq49YmjHvWxT9LxKwG09WQTA
                      PVbgEj0YXw68H37EPWo/bj3QUTC9ENNjve6Imb1hI4I9XvF2PZsZwT0Qy2Q8dydmveguOTzaJ1Y9
                      A9W+PehrkLyJkck9QHauPJAah70slLq8UHpxvGOoIb1usjM9RkFBPfsmwz1qm8a9vlcjPeaiPj1j
                      SSy9I3J7vV9Ckj3GmEc981DKvd2aor1ttMk9rjYYPaxniTyA5/y6qleyvUFltz04D4I8jPIKvaMv
                      ij3FgKA9mK0VvK79XT1yPcG9ooIwPUGYvT1AFAW8R7lMvW1bqr1emSs9dDiBPKLHCz3SDom9pyF+
                      vfgbqbygNQI7Tg4pPebLSz0X1oA9Gm9QPXJ4m70wLcy7+BW7PB7rkL1KbRU9mqxDPdNojz3RIpE9
                      Wq94vaeTgD3wsHY86EVGvP2lmL104868YKfMvPpZQ73w3V+8GMOOPGKoNz2wWBq96gRpPdL6g70A
                      /pg510uVPciurrzRhI49VxtfvYDhRL34IKQ8ucrMPUiOn7zArXy9zKwYvaBXd70zxV+9iZS4PYBQ
                      ALw6WbC9jS+aPQoHPT0XqCK99OSRPC81oT0QvQC9ubq9Pcyw2Txo9hk8lLvsvND1Kzwtp1C9tKWp
                      PK0+c72ABmG6RfazPWPnmD1gCbG7jPL0PFA6urvlS7+9YmYjPQLYbj0t00C9A7OLPZC+kr3y0nw9
                      pmoWvbbDJD0qQZy9R1cwvf0msD1xlqE9AvcJPZnMmj2GfKm9kDFuvGCFe73z7a89GvJbvSByMb2P
                      Rcw9ZuWCvd1ItD2ogrS8yJeivPAzMry2Z4e9A8dLvYIKeD2DUGS96n6fvaB5Mr0mUAs94i0fPWOM
                      rj1Q7Ie7Qp6WvZqUsr0e8VU9y0CxvVl1gD17Mbo9ABjJOHdDU72uQAQ9EbagPXg5i70TtY29m+G4
                      PfW/gb37OY097BeiPCadOz0Qk2y8cDQxvCuekr0qexK9YL3Eu7hHwDzk2tA84klKPYHawT2wpmO8
                      qkoaPUAlkbqgZJg8sInROw26S70AFhA7I8vAvdh6n73IAJy8YLH2u5eDtj0Cqxo9EghzPTSpvTxA
                      dDK7MLz9O3rvcL0DNMC9IzZfvX4sNz3TYyW9cbq+PXjimbwRlbQ9APqnvCj/97wAD4o70H+nO/BQ
                      FDw2PwY9VhV6PV+rlz24YJ88AhekvUEpuz27UpW9J1suvbCq4Ls3RCq9iFz4vMNbJr1gUqK7BDXu
                      PO1ht71zNqU908GoPQBe+Dp2nkc9+V2lPeLBdj2tLMe9szA4veogSL1jJpu9WceJPeyHljyWFzI9
                      FG2QPBvrrT0i7BM9M67FPYAiub2IQOK8gZDMPTAOjTu90He9uU6yPYZOpr1Q7Bm8yiI0vRIlh71d
                      h2i94B9svRqKLr0AkMw6z4W7vUST1Dxcdvg8ALOhvHJZZj0YbbS8oJ01OzcKrT3kAou9IVWGPSoR
                      p71ALHc8KPgEvJ8htT0she+8HBn3PBhyMzzTKJ+9j9ecPcAhPTvV/4O94p2GvRNaqz1AydC8QAar
                      vVtmjz0QrWy9/CfmPFD9wTs0Q/Q8w54Zve62AT2jvBu9jj14PUsIxj0AjKC8/pBIPfoONj2Y8km8
                      UE4OPACdGL3FaoY9V/UvvTNTs7126H49KAGyvHT497zFf569THP6PCdsSL1nGp89ZnVmPapkJj2j
                      3XS9fzC0veBWmrto0sm9gA/MvHdAwT2BFcU9J2exvdAZoDvQ2RO8Uc+fPQKFLT0Wugc9R4auvSDm
                      bb2j35y9czqaPePqs70rkMa9AN8GPA3WMr0LGZa9ijAmvQwq3Lz42py9LCfhvLMjd71Y6zg8iDyV
                      vYAMWL0G80Y9EhQePfMSNb3gSJc8XQhPvVpBEr2+QWE9Kk5dvTtvrb0K2F89cGqzvbBlOb2QIzC9
                      J3BVvQEqqz2okKC9AcqtPbJMPj1sKwy97I/OPFnioT0Y6gO8sH9DPFJJPT1VKJi9khguPehhgTzp
                      s4M9KX+SPeFJnj2ID4G94CouveDiXL0qaoe9oLunu7CLKjyYkIs8GN9cPDAXJL3gtva8FOCBvJms
                      wj20A4O9QDaOPPI5Wz2JPss9kHIYvWWBrb3QKXK9o5Q5vYBSrb0XBFa9+thRPXPzxT0ZBsI9QGZx
                      vbCsTr3KBFU9ZEcUvRMIf71w/gQ8LiAbPQSmD73YPj68HcSvPeq1cL1oluu8dHCjPCz6wrwYlb+9
                      97LLPSB0mTtvMZE9So6uvQYdCb3xpJY9ON+HvZhIzLyrz569mZWvPa46Az2j/o89AGcOvcoca70A
                      Csm9sUmDPQ24Mr1QanS9amA/vd0gTr3Qaug7aL0nvGqJK73Yzpo8Z/GXPZuLsr1gT4G7+wWSPWsD
                      tL2b1Km9qjllPef6Rb1oyAA8yta5vf4EGz1oA/a8oM7Nu8G+ij2qdVs9U509vaAQfDsA/168luMO
                      vYqrET0sGsm8FM6TvHnTlT1X2cO9VlpfPdwahL3I8KK8h8YlvYNIYb2u/4C9G86vvZbhmb0ycm09
                      EWSJPVCjHzw3xFy9gLb9vFbrTT1AG2k8HUKbPYj/3rwoDQg8QX+NPTc2vj3I36q8SB2iPAwnozxn
                      DFW9IKW4vVR4hLx5jIQ9DD/EvNq+Uz0d3ke9CGyZvfdorr3xrrM956TDvSk5mj27qMK9LFDhvP7K
                      bT0HTV298IJxvDjsnr2Ploo9Wt7FvbcOU73wUXM8MKeqO1bti716jWc9i8jGPUpUXz2AvP87AW2P
                      PU/0qz1M7PO8gku6vel6tT0N4Ka9poifvR+iyr3+IYK9VDiGvRQgrrwjwIs9WA+BvNHNiz1dwiq9
                      4JiOvZ5GCz0hh549VDymvN2nPr3VIK696erIPQcxeb2Wm3w96ymOvdPBtb3I1Zw8OEPPvE2or70y
                      jVc9KL7XvIo2Vj2qblE9zaiMPTibtzwYC548mrVpvVA1oL2WQ0k96QeoPedYer2qaxA9wyHDvVh0
                      jzxg56W8dEWoPEBmXL06dgQ9oJCOvCjEfTx17sC9LMWqPJCBuL0QYWc8lJ+vPMlhhT2gmya9JRqy
                      vXQjwjwA/fK8JzJEvcD8DDuAbUa9VrgxPfT69zymLhi96iFIPQFzsz0AVok84Am1vVCkdLxAbDs7
                      EK/IvUn7wT3Bhq49IKJRvRpaYD2gxpm9xa6WvTipsryALww8vnOdvXRPxTx5Fog92jOrvdg4vzww
                      pX28rC2VPPDwYbw+wAc9x9ZZvZKHWT2k39885DqIvZ3mLb0olOK80uOIvbuGwb3R67A9qqtnvagO
                      YzwAErI6+VuRPXffwT3HGJo91mBRPa+msz2g95W94ITJPC28nj2xWKs9IpguPWp7Tb2sZ5S8oOOm
                      POBkprsMWKK8EPUxvJ8ugT1SGy498v5lPajnmDxJass9JpVyPYAUdr3QdN87JjATPdiOrrw6BHi9
                      YGV8vX/HtT2s4dY8vzu8veBTkDyAKT66QEvrvKu8kD3yWWg9QmQZPUBVx72+CHg9gAYGvMBGJrt0
                      ip28abiBPWDfaL0ozhA8vjosPaz+B71TdWK9oJf2Owz7rbxAnLe8sHaAOxlekT0Iq5e8UkrBvYB+
                      or2Ur4W867WgvWjhSrxAnDa7l+uwvQBVJDw0Ibu8V5B7vZTuhL2SEG89XSKWvVhFrTyCpT49PYyV
                      vZFzxT1edDQ9JGX/PAe7xT3qOJK9VswkPTTSnTzvUsw9/TyCvSEEwT3QQ5G9eEDvvJEEgj2yghs9
                      xaLGPUY3qL3QBmq8fgQcPTAms7s4o8A8Y2ltvXTa6bwYgf68wr6IvaxijLzRmpM9LWKrvZmRtT22
                      6209mjgMvaq2kr0ReZ4920yrPePHtz1Agwk7jB+avOLJDT0gmB691b2qvQC95TnIGLG9A4p2vYx5
                      1rxgcf+7MCVMvZvLpr2gTw27VYWlPXy80DxDE6Y95FjVPJQ3j7wsgba8UNYHPPAhS7xXyEG9k4Rw
                      vQC9ubma7LW9sPQ4PHtVpj1giPY7nW+2vWCVLbvAaAk7TJanPCDFuL32VGY9ethMvUBH0rpedKe9
                      hhN4PQVMnD2gEcS7A5HAveJcGj3bp529gceAPep8Ib0n7JU9sOzyO7hKo72Qj0M8jOfcPBceWr1F
                      rpc9gJ1Bug1QjT2H1ne9nTusvQzThzzVAb+9MApXvZUYyb2AolK8kCp8vJGRoD0mKgW9YFK5O5z2
                      gL19ZKy9dgtDPZtEnj0yryk9YIXCvbCqN70FNbG9HLwYvRpcob1nMJk9aq4cvcf9Mr30YKg8Au0h
                      PYCK0Lwo/748LXeCvRbhmL0GeZW9wsoRPViR9LxhP8E9sO0ZvfLuOT3j8DC9jmN8Pc62fT30b/k8
                      8J1GvLkJxD1rD8k9uOy+vRA9ADyADhe8aLdvvK+flT063I29SIuJPNCXkrvm+Vg9RJoOvcbEFz2a
                      Pi692uuLvb6UIz1TD1q9//KgPdqJGj2EN/E8im4yvcI/dT2SXR89rMvsvIdOIL2cDgS9AMC4uUDr
                      WTvpW4A9taWWvb66qL0Kkbu9q7OTPXQu3DzgfO477xabPWQ27jwwQvq7KYjDPUDBEzuAJBk8DvxP
                      PYZQYD1WoTs9YyWevdDzvjvAMQO7VIfzvILsWj3biss9fz+UPWDlpL1/uMC9sWW0Pd2LRL3Yj5O9
                      euofPdiIbzwS7o69tBaIPNF6hj3t4ES9HmWpvbCuNDy1NZa9m8XGPd7LDz2w+cU7+vDIvSacg71O
                      P1E95EHOPFT+nTzTIr+9PSmbvQx8gjz+3m49bVmhvWa2bD1Ds0K9wIigPJoMID3uMZq9BBXbPNtD
                      pb0QDWO8Oy+bvSblLD3oeUe8MiR3PYwEGL34OZG9ltkMPTvVkT2UL5o8EDLCvR/Ixj2zPsq9AnRG
                      PV/stD3AlBo8dg1GPciqo7wgYpI8BwKxPQN7hD0g54K8muGBvRCZPjwq9VO91SOdPShRZDxbOY+9
                      pq4KvRs4oj3iv2M9k7QmvTl6vD1DSza9F3W7PSrsZr0U7KI8AHaxOegUfbzADwq8IO+pu4Cr+TqY
                      y1e8cxBKvbHYsj01UYE9XYVGvTNpkb3+3lk97MzLvFL/Bj1Qr2k8rSeXPW4IhL3nZLE92nFNPUCR
                      e7sZgaA9kDFBvEiEm7wsNfE8fZlfveh0oTx5qrM90HbUu/Pvcb24fem8IhIpPUoWHj1NTrA9mYeV
                      PSJ2Dz3gwOI70EEvvY3rVr3QYZI7F15/vTqekr3gyXS9beaZvUj0ybxhMog9MVOrPbgdqL1/I7M9
                      R9wcvQYnoL0wnRa9yp6fvWCBx7v0laU8sECnuygvzL2n5LK9ncZGvTjNn7wAPca9RzGaPQD4YLqT
                      VIo9ba6iPZAFU72ihFw90G8TvdpMKr2wDse983WvPfC+QDxIT6s81bGYvUW6yL2Y1Dk8iIvBvJib
                      NTxjtMM9VMy9vNLFXT1ix8O9KfmcPZNlmD1KSW09vMzzPMd3jD2D2DC9Oh5xvcIjyb3yEaS9MGxr
                      PIBCQTxCSBQ9LBr1vCCYyrvo1OG8QsclPUB6bb1KrD89Ay24vR2Ep73PK7y98xujvc4plr2yR6O9
                      FYK5vWLpED098q89wtwEPTe7eb1UMe08sqUMPdMrGr04U4s8uu8HvflKhD0fWpw9WGicvJV0sr15
                      vcU9ynsTPW3Thr0JEZY90E+ZO5jMd7xQG2y80w1+vWoMIz34O/e8lDeTPCrybL0gi+o75zZ3vaDH
                      hLuD2cm9+kZRvWAlF72+W6m9sxeMPeD3Jb2YAbQ83clwvTpaEj1gNa67sDxJvCq6LD2sj4a9ADNq
                      uzSDqLwoODI8DpEvPRlAgz2uNVE9+rJpPVKifD3Q+sE7cPV8PADKcLlhZJ499OOKvVBNGTxA8+u6
                      IiwLPZBTD70XFni9QcCJPeILBT0w4oI7+pgyPTPdoL31d7a9+I3GvKyvl7z6Ljy9/dhMvQ7ldj0D
                      Hxq9Rx++PYoZPb0AC2q6ykFVPdIvfT3uSo29+MKCvLDTUDwA9vW8GCfzvH3+nb12H3o90WHEPbJq
                      n71IuLu9YtygvVwfFL3QJTg88O8FvZHigz3nmDq9x8EqvRMRvb3eapG9cItivHcYrz1d5529s+Y0
                      vcINNj1YSeq8Qr1tPQq1OL3kwuQ8x3+cPVMbtz03LnC9q9yYvZWqm73gPkC9AnI6PVtJmz0iszQ9
                      YoqkvZ2Lo70QgGy9GkI3PbOFcb2tIDK9Bgp5PRjoVrxAdi08X7C8PdOMY73U1uq88IBFPFgerzx2
                      3wQ9QFCdvDQ6q7ziYXI9qL9YPABZITq2npG9gGRMPAT62TxVrYm9Lu0NPdReAL3aDE690Ly9vawT
                      6zyQXXe8KH5evF6DUD0weN27Is+FvaIXFz0WrhI9KINIPDR4iLxYOqk8LcWaPQRfgL2tC6I9bst0
                      PTSvwjzwGiC96mOIvZU5rL2Ts3+9oceUPVFmjz3DaiC9srlmPQOfk72iNSo9042wvXgBoLz0e868
                      MphXPdrbkb3zW7+9hjQxPRojez3Ya8e9aD03vML9RD2hAIs94L3IvYYreD34Gt+8lHrsPOB6xL0e
                      /Wk9UB/uuxTNj7z5D7Q9Ug18PWtryr0EOdw8s+S9PTAeP71ddCa9byOjPQBjCLwgLu27+d6DPbqy
                      ar0qjTa9VSmSvQpxvb0yn0I98h8aPZ4QhL2ULIq9P6fAPaY7Cz3iQ769hSmEvYcNHr1A5zK8Gr6M
                      vfF9rT1g/gM74fjEPYQOAr2U5O88Pa5XvWCqmzszS2K97lR4PZKZcD0xVck9PhKfvfIAPT14U668
                      E1SbvRY1BT3QD3K9fmZzPXyK2jxoDDs8yCHKvMAvFr12FzU9wYCePTqcV70AeS284V+4PRZgND0g
                      lv07wA5EuzjlubwAE2w8Lrc/PZUnmL0ABb85OEHjvNZDEr0i4jo9MbyvPcDpP7wAUNC5ebeBPdZL
                      Dz2K1TC9KTGQPT2Odr2x/ss9He2RvcLGo72Jjpc9jbmgPV5Laz30Ct48HQWkPWC8ub1YJrC9b3Wf
                      PWA8srtGpSs91TXFPYZhUT34kbG8/hJWPTQAzbwo3tG8+fa1PagUkL3yx2w9gPp6Omavnr3Gdwo9
                      Y/o1vRC5cr1n7qw9TQGTvdhGuLw2FS49lzPLPayHkLzyKGk99p6ivStQtj1gH247BJTaPCACx7tA
                      ynG8uFjXvBgLrb0H7mm9DOOMPBpRj70gppk7RtYCPcpKbr1EEe48zfNPvcCpkr3eXWI9kPg/vbq3
                      hL1YXmO8dyw7vYDwZDzXoqs9pzBjvbPZhT1c2988FjiivVakrL3vRa69k0yWPakzqj0YEnE88dLG
                      PbJ8Tz0bYZ894s+zvbB7NLwADRK7MH62O+Jgfz1QZos7YlOjvQbGGL05cqE9pV2vPd8Moj1yuVQ9
                      SOywPEjmkjzDCMA9wGcgO4cWRb0Y5Hk8mhTKvc9FtD2J9ak9IJqmvABLJzsHh3O9qNBLPFtzsT2y
                      EAo9Ey2vPah+frwYDBu80EyauyO3n71fy6Q9kKotPPb+Gz2wtkC92E3fvGidLLwE0eI8Q7yJPUh3
                      3LwhfKQ9xzUlvav6hT191Y897vxMPVyl3TyOokg9ysojvQuEkT0SCKG9BuxmPYdDTb1ghma9MUSD
                      PQcaJ70+h6S9wniivdZ6qb2AhV86M9eZvRAYYjzK0R69eDCMPErpFT27JpK9mmcIPYfucr3bWqC9
                      /biNvbhWvbzRJ8s9RGAPvSfkZb1URr+8Liygvfpulb1udFI9JtuAvSJ6rb3yJWs9xIjoPK+Apz2X
                      AZY9dtKmvYS34Ty6AHS9gD9sPJiLorz2ASo9TNnXvCj/PTx0wIg8qtxivYD4TbyueZa9ru8VPWmP
                      zD2risM9llQXPQCCqjnYoMS8SH27PAcWmj2Z5YY9q97CvfbNVT2nXky9AOOxvIAsgTzC/qK9QVzC
                      PU2Tsr3zNT696sPHvWCeXr0b15E92R6mPV09e7294ZI96MiPPCWZmT2KDMO9VLeHvD2FhD0A+Jq7
                      YKktO2dsOL0I6u+8QPefuvHSjj0AX/G7Mu1MPWqwD72fJ6Q9B+G/PSQN4zyivnA9sGYBPL0uyD3a
                      SSi9gGS0vKevwD1QeZS7AMjVO66vWD21pL295hlBPSjMgzzdTbW9j5KhPfCaEr2CE2E9WtUMvcCo
                      VDuAfQS9sGbhOzA8drwxvqk9bapUvfIVq70Yq1I8ZI/VPA/9wr0DacE9PmFLPQnWkD19rJQ92mB4
                      PSqFQ70YAnm8JtACvWQsAL2i+ZW9sDfHu1gIbbwA2Kc5KCmSvc7pOD1maBw9gGoZvJVosL1SZ3c9
                      vumSvSwR3DwGYRA9QmsyPTE3oD2IN9283QKTPQCeQ7vgJPi7lAO1PBEsyz1jwai9tvpKPXodLD06
                      KpK9C2CXvTDBejxcxxO9B+FXvTg9s73QPWG9O3ClvSaOGD1dLMY9nYSovaprE730uve8YLbLOwCG
                      mrxY1RY8Dr8WPSSk3jzOqhY9YcW1PRJMLj3DY2u9yonIvSCBnDvs/4C8A6xSvfOcVr34qv+88I95
                      PCQTAr0AFQM6wOM/vC7nMj3dQ0i9sTOCPSBTqLz3v7s9ANv3vD8dx72K22k9rYN1vUCK77yDB8K9
                      AHCjO8t9lL3qVSS9krTKvcjQxDwABPW8K0y5vXORS70Ese88QmeHvUkbnj0Mgtu8KJDQvOz/tzxK
                      lMK9RUq/vU0ihr1nx409/xqTPYYMq71rB6w9kOatvUZ0Uj1ClLa9uhkyvWH4gj2enhc97lpePXSI
                      pDw+bHc9rLvYvKPNlr3AzxQ8ZoV8PbIJRz0Ntbq9wOK3vfaSUD1+UY69wZmjPdAEVL0PoLm952G9
                      Pb/LhD01+rk9EKzKvQuLtz2Kv4e9CQjMPZZ3cz3be589+LnuvFjFlLxGTaK9PgV6PTnaiD3woXy9
                      DkmrvXCIl70G/hE9ek5dvbhKsL2NB7g9N/aoPRaxUD3Ubq28CWuqPcZNj7155pU9585mveminT0t
                      ZV+9x3aQPe+ktb3jBiC9zB24PP00hz2p4JU9VabHPSotK73KVbK9+oFDPXf3jD3oM3M8QF6ovWri
                      AL0LRJo9awPMvQeYnD2sSxO9ANXbOx4aTj391xy9XhaZvSwpiTxQ9e87dyRWvYdmtT1YQGI8zNnb
                      vGEEsT2N5Zo9zV+OvTyRhr3g5sW9s2I5vZgTHDxoU0a8ati2vaFhnT1iIEQ9oPb+OzexMb30NAi9
                      mIzLPLjexry+0X89cIYxPEoraz0E0Bi9IowGPUQR9DwKFiM9CIK4POiFjrxwhFi8yHGWvP9VlT0A
                      gLu4lEzOPDNVc73VLcY98L4LvE+Bxz270649jrUhPQB/LDw4O6E8TnMVPWMRNb27N5U9qdjDPcDl
                      eLz6dDM9UDeuu9Kwbz2Yp429wpZxPXCYazxsWuM86fyRPQo+OL3WDom9G/arPdEIuT11tYw9NFIW
                      vR70Bj3AhVu9Uh+uvWcAM70gSgm9+n8pve14xj24D6+9DK22vJdQnz3IE7S89iFCPWgYOzxXlli9
                      hH3RPDJMGz3JYcg9vT1EvYfDjj11PJA9wRC5PWB/zbyUucq8ksshPaJXi73MRr+89VmuvVd7LL2A
                      GRe8iJzGPLTW0jwRz5Q9h4fIPWRg0Tz1vZM9WwytPdtHs70avW+9qOcuvIZACD1+NFM9sCzGO8ke
                      uj3bmcG9V4DIPet3lT0aMEM9yDjFvPGMtz3x6Y89yMCHvbrAc71d3Kk9GIYMPCQD3Dxwzbe9GFNj
                      PLjJ87zYn+q8+IK/vLsMyj1aS8C9qhYvPRDZWryAh/+6XKXPPNXPkj3o7Zc8fz+UPQD0Dbt+0h09
                      PrVGPT14lz1u7om9u5O/vVaQHT2NtK+9cAN8vZTL9rxwysy9bDaJvKbiYT0Y+AA8fCwVvRh3mL0J
                      DcI9ypAMPdDFFDx3Z2u9li6EvSCci7wgarK7eLf8vNBql7v0s7c8Y+l9veCU2ryPE7K9ZF3sPJ3e
                      Xb1oagI8iD2MvMowWz2Txmm96BbIvQ0Fh72tvyq9lMXrvCAQy7sKcUY9c/UhvXnIuD2v46I9DVWH
                      vVhmZryYTPu8Eg0MPUCDcruARQw82p1OvTYKor0t1ai9g56nPR1Str06Ul69kKgbPFcIxT0hWrw9
                      CtcxPVBO7TvA4AM7V850vdJqXD0Ajcc5UB5DvJI2WD2QH0M8lHypvOccrD3q/VG9YqIvPV/4sT1m
                      wYK9wOJJuwC45LpG/R09oLayvKgHwTxomVo8v0vMPVClWjwWvKq9DZB5vWzazLxDZES9wEh3vJcI
                      Wb1AxCi9pZKuPdKnir3hJog9LbGsPZZ8aD00T+I8lOPCvNv7pL3Q6nu8FCPAPJh6xTzgLaa7u+zF
                      PdkUiD1uOi89UcaLPVobUL06qxU9+i90PZDzNDxSi2I9cigqPYCLm7su+IW97isoPcq/dz3wL1m9
                      WMEYPChETjwAJna5dHiUPJ4cTD2vnbe96uFNvbqBZj2b96k9OTmlPZNCuj01jZ09bndSPZjZCDyQ
                      Yjc8ULTwO+Ajmb3IJ6y9+IbJvHhn6bwZ4qU94LB2veCytrzsrcO8FG7tPE5MOT3A6IY88S7EPdjf
                      yLwbEJq90FzOO2BpvDsM3oO88dS0PbBAP7w7OJY9cqE1PdRCqTyaglW9OSDEPTJbOD3AKt68LFwR
                      vcLKr72aQZy9TPuTPFB7brwhYZc9Y9JYvdSkkTwAwD86GNKTvNrzAb1aDkW9I/GavVPctD1kA/88
                      wupuPc0WJr041Yq8KNG8vaLaDT2S/Qg9CGSFvHI7JT1AoBw8QF3aOsu+kz0ww7U7mBL0vN06yr2A
                      cwq9MkCMvZAjG7xT53+95iBWPedDJr29Wrs9SoM9PZL5aT3iSHM9YuprPS5ug72Metc83gN+PQEV
                      sD2gJB69OXKbPWhJGjzAJsU84tTJvX4Umb2g/+K8bNSxPE6gmL14u7E83AbUPKM7KL173Me9z7iy
                      vRkMiD2ekgQ9sE2QO21ltz1gxIM8gBFFOjrZor3mHYG9W76QvQAInDuaY2i92ybGvfEzrj0gE6y8
                      8Ds9PDLcdT19qI69L0q+vccGxb3vdbU9Du8tPWheTzw5DoA9gbKQPSBX8LuEpek8HrJmPQB9Xb1i
                      rAo9MMPLvacRyD2wTQ29ACyqOvYofD2C4VU9sg5xPXPgOr2Gels9B0Qwve9ftD0XSSC9OZGFPSj2
                      Fbw25ww9uolQvUJUQj32+Ye954SCPZBqaLxpTbs9Wu8fPQCyrzsVUqQ9+7eTPWMepT329Fo9AGCl
                      t918lj2Ai4+887WRvYOPML205fO8IMaUvKDslbzdMhu9OjBJPY0qHL2AW6G9oJ5lu3DnQb3zAl69
                      J99EvWHLqz1Kkaa9QJyuvQbMOz1uLY69IvRIPS7PfT0jgcK9CNydPG3iqz1QSQE8Ob3JPbDONTyx
                      NK09QIfhvHg2oDyAeca8Ne6CvdZ6l71gmZo8jB7PPADSebzuewU9BfS0vdNvLr1DW6e9wGjfvLWJ
                      tL3xyqk9UIFPvVmmuD1orqA8sJimO/kdpz2mSxA9gGnGOsTZ9DwT82a9ASjHPU2nvT2+u009WDVl
                      vHPrH70ta4k9Scy8PcCa5jpVSsS9412NvXI/nb0qzQ69/WG8vXm8xz1a0xQ98yUrvam/kT1eMk49
                      ExhcvfACAL3AHRm9hejKvcr+M72u9Xo9kighPY5aKz2Bk8A98kFPPQbVEL2odUW8ecjFPQCxGb1z
                      sn298ei7PU6GPD2rQ4Y9y+nLPS0qV70HaZA916nEvfCbBrzVAMs9PXjDvWr/Sb2KxjK9YA6+O7ID
                      AT3n0Ru9WAu0vAc0fb3iiMO9sGwyvcjo9Lz9XWy9LRnMPUsJyj39Pza9Q/OjvaPBlz1gkEu9uEK+
                      PCh0nbx30bW9UsUNPRp8Q72o9fK8UEc6PFR/6by6kjg9KT6wPZ0/eL1MiQW9ZtYIvTizyr3hraQ9
                      aJ0oPICAfjypqMc9MLhWvUZJZz1BPK09oPbFOwqwYb1OyDY9w//JPYncmD3/da69d8NGvTJkUz0A
                      x868ee+rPXJmcj3XGXC9YWiMPTK8Yj1MfaM8miPDvSYGE72o4t+8GTa9PUCEKLzj+4+9wCZzPADb
                      bzwZyoY9XYc2vcGShD3PgpU9xv9MPSfhQr3/zJo9/GLNPN6Whb1g5CW7aUOMPXOJPr25nqk9ACyP
                      uFMVcL11uIU9UpEzPYnBgT3CbFA96OiZPCxhjbwdKD29duuovaPKs71JirI9AsKMvWogyr1qgz09
                      qORlvNEWsD0hAJw9pb6hvV72QD00D9i8gIWAvWIXRz0AmiK8f0XDvVpTNj09GiO9yMKYPGpAXz1g
                      YGW9hFwIvU2rGb0SEDI9N2tFvXxI5DzO/IW9IGl1vUjnh7yL27Q9bafHvSuImD0R9Lg9YO+CvToX
                      Ib3nREK9ATaOPbuZpT3Nsym99Nu5vCuejj0NNU69AA82vB25xT2c+4W9UbzHPbL6rL06XnM9jPPN
                      vJ3IKL0/6ay9EB1avNPxwj34kPa8IxCPveKLNT1LPK89iDaKvFxr6Dxt8Ta9zVjCvZTuFb1AwJG8
                      AEd9vSEAlj24HvK8Wu0xPS7pFz2o3C88mDkrPLr0SD3wEHi8aKmmvSHmpT3txSi9DU++vQBTArz3
                      Epc9fwS5vSMFvz134sc9FsObvbidor2AKaW90JZPvMbOqr3i0Qo9MNhNvf3QKL01RqA9aYC5PWAz
                      N7vIWKy9kowdPTIuaT2Ardc7DHn+vPQr6TygzZa98j8cPdITXD1gZcm7bX0mvRNrdL1QaBK9ZAjo
                      PE4Qnr3Q7qC7oMvCPF6kCz38gBe9t5C0vWOPmz0WiTM9sZKTPa2xNb2smZo8nELzPHq/yr0yuUg9
                      UEOsu0T8Eb2D6Di9AsWXvXFEwz3lgbc94kFGPYgcrrxSBSk9AABjOlQl8TwDU5k9RhQ+PUc8rj2B
                      J5c9hCQPvfCgILyewlY9puIFPVLyeT0wSmq8zi4hPfg7qrxA33M7Q5lvvXAGYDyhvKA9Rp0HvYyQ
                      Br3QDTa9Hkg5PbqSD715HKc956S8vRmphz2GwYq9GmKzvSCiwLtGGBE9L6uoPRFtoz3AZgo7jW2Z
                      Pb1GgL043pK8l5OWPeJ7u726N7q9wDj0uqLXZz2G3D896uoKvdl4jj1APw88o14zvSD05bxK+B09
                      NuiCvZTbw7xehQs9wLjdOhAVSTxwanq940Y+vbcoOb2w40e8EIB8vACQljuIcYQ8aWHLPeoOIT2u
                      /ng9S0CkPUwLoTz1wJy951d6vYl+nD2SerW9RLOKvZSauTz0yJY8Lu1MPfJDgb1I2YE8LALlPOjg
                      s73mGai96PMjPDmPyT0rqci9ZF4JvVcJd73j+sI9esgEvfyZ6jywf2G9KJxFPJcWrr0t4iG983G8
                      PTCLzjsKySy9HY6zPaApMr1w7Sa9nVuQPaZIcj3gYtC7f8ivPbU5sr3+dx09isl6PT9xqD1rHsk9
                      SGm/vaAEVL2+sGY9OEeJPBDygb2yZL69KkpZveXDkj32STA9ZWeBPfs2lr3qwYS98KM+PFgDyL3T
                      zJK9BGXyPEQdCr2wlZC9tH/aPO8IqT0sHoI8ouZcPWBZRDtANdC8YgEuPZxG9zztO4w9/QNgvds9
                      s70AugW9yPfEvcwtxTzzEo09WBglvHVYqj0AnLU6WOSmvBBKHL0YNXi89DWxvOIWYT3EkQm9WGS9
                      PLdzsT3DmY+9BInaPDrMo71SnSk9gCU0va2FJb0QCgu8kcuyPZ3Esb2YL0K8A7TGPWaqjr1U7IW9
                      gL4tuuqpIr2l9Km9JjwXvXKiNz1AN2W8GmYVveqCsL3Akk69mceLPXoXBz0y8WU9RMABvZIJCT0A
                      ujE5GH9YPOA+Er23xLc98611veolEr35UK49gqsEPXM3Z73po5o9kiHKvYExtj0gl/28ON2qvBuX
                      uL0IRam9ft0VPcdtxL1AgXA7q0KPvZD7aLyxOKI9N6RavSpRAb0bYY+9gWyRPXiVqb0RcLw9MgEJ
                      PQELqD3WKwq9hZvJPeg5DjzgPv+779LHPbCtwr1HBbI9ZlBFPUBjXr107Yo8+7CkPWAIsTuNN649
                      tX+mvX6kFD1Ek4m9GgosPTbOZD3dmpQ9s3KlvZLxVT39EKE91PGbvCWAtz30BNK8QthgPVeTZb1N
                      daO9OpmOvVrqYD1gLV67xZ+1vQqMpL0lWbw90wAnvXAkRjwSwY+9AG9wPBkBgz1mPXE9bKa2vA0Z
                      Tr1gjdC8IK7eu4Du9rpgeqo8vv0yPdYgfz00XK08pei9vbkppT1I78u9oEG5u4qvMj3AOVa9mSWv
                      PVJDcT0JDoI9YROgPVVEkD1VKpe9YiuBvaNXlL1qTli9YDz/OwCWP7nW4pK9PfdOvUL2cz2+ETY9
                      4B2Ou78Buz1DiUS9VY6bPW4mlL3SbH09ZNwEvSz7qTymJQy9yJPNvIhvwLxUoe08JJbkPIzJu7wA
                      bDW94sievVRH/LwZ96Q9qOravPAHWDyC1gs9sEeDu3vspz1KqU29JNXqPDIpvL3ieio99IeoPOI+
                      kL1AYhu9luJAPahpCDxwoGo8gJnVvICn5zqBBas9RlUGPZFZqz3ktv88NHPDvIx90jxyx189Qokj
                      PQAPbjpa1n495+CwPehP6LyAd5o8mG9vPNBeiTsvtok9Go0nPWf0wz1ugVM9geHIPUD2eztKkq29
                      EEkMvYh8vL1gPA+9C+62PQljpj32aQ49pmJxPeAv/btDzIY9IX69PS6fWT2mCyI9gMInvEg6xb33
                      MbO9Cs8yPejG/bxSTqS9oK7KPFS6r7xIa6W9khUaPYbUAT1S9AY9OECMvVbiJD3wsU48KlpvPR0x
                      uj0y7pS9ZhSpvXRi3LyvQrq9UFVSvOAtrbwDWSm9S1SlvVGlxD2N1bK9uk5ZvXDYAjxkJoW90e2v
                      Pbbcez1ezmU91SqmPb3cJL1rcKc9p79Pvc8Unz02zBE9UmHAvRJLLj0ZtcE9eqBKPTAkNjxg6K67
                      QLiGvADIzbi+XHQ9rU/KPTs0kj16/pm9Nwm1PWy2Cb3zC5q9wbyMPd15hj25LMw9GCMJPENSuL34
                      hpS80IrnuxBlHLyzFLc9O1CjPex7p7w92CC9GOspvNoIeb2ta589L+nKvYoVg70AWLk8Cik1vRuQ
                      yD002qy8qwG4PaTfhL2rt5a9PpuHvRCzKLwEutU8VokjPVeKIb3g6Oi80CdLvAPZGb1Ve449Dc4x
                      vQGFuT14mcG9HuYRPbWFs71NoIm9Mkl2PRf4jT31VYO964CYvWtOyj0whS69ApAMPSCgwLsaJQ+9
                      MntPPahug73dY1K9tPCGPNxIF73FII89TMn8PCnlkT1wnCE84hR8PTdzZr10Ppw8+iGyvXrhc73A
                      kIm8mkppvUdkxz1yWhw9xogYPdD+dLzN8Yc9yGHEvBBvI71KgDg9I7atvWjJ37wAYtQ7I+OpPfKf
                      UD3BZZ09mbaRPdzt5jxVs7u9AKyvPFb+nL0S8qa9gKOUu9A1abyej6a9q4mgPWHKnD3KEF891Lbo
                      vAqhnb0ALNK6UptBPZiqQbxsa/28GtpVvWIUHj1QoAg8Qp8sPYi5nr1y5ic95dm+vdaYVj1m0DE9
                      6DD3vGI+NT0AACA6+ZKSPYJxVD3TEZs9uyW4vZL7s73UPQa96oyuve2hor1BopE9Thk1PRQQo7yB
                      mKg9cPsXvSV2rT1dnVq9O2W+PV1bkr1gvz69iuaCvaL7PT3d1qc9dMi/PAJTl71gNIU8T+G7PeDb
                      iL1rc8U9dxCOPV5zXz2oq6S8ZlUKvdhr6byqGT69AKuLuUfwjz21h7I9rho6PSy/g7wd9lK99J/m
                      PM0alr0IYJm9wJJJO2HFhj34+Iy9ULx0vdY0Mj16TMS9WOAbPH6yfz2gR+C749hMvaCdijxwYUk8
                      EWuaPSymqrwgBO67xvwRPYB2zLxoSD08IzlXvTpPL70iXEk94LHuvEDcJbw2GwI9rUaIvXRV1rxK
                      8gA9AM4JO7lyvD3E8Aa9EKs4vQB47rj68gK9RzAxvXl5lj3uyXw9t3HJvWH9ij2pX4M980iNPbCN
                      SbxKvRI9A96kPfpHo7318rm9Np8oPfBCZ7yivLy9ZOjyPJmNiz29x069QGl1O3/Vjz0tlo09aF2y
                      vBA9BL1tW8U9KAD/vJedaL1tJK89TZRpvZEpsj3CHGI9IokLPXSGCb23VGC9HUuqPWCrbTsdgZG9
                      oyFivUAgcbu6KYu9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk2NTE1MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODk2NTE1MnEBYS5kAAAAAAAAAEjpkL03iag9zaacvcquCj0t3KQ9uqtgvRHJyD2MIga9
                      gIiXuspPDz3Aflo8OVSLPZIsLz2kEM08zmmsvWgv4LzQmXE8tPzuPLQ95byA/6o7oIMbvVrCx73T
                      X7M9heaLPZsuwb24Acq8qE2MPBobM70jhye9sqpvPV8lwz35SrQ94MasO0Whvj3TRpU9AIB/ujf4
                      wz1P1Ys9Hb1ovQGtvj1Z0II9BN+IvWwbl7w/TI49oPB5OwD9ajz3Pbm9J/RYvYDCELzclAC98nwL
                      PSCigrsuFGY9DXqlPRQCkzzQHoU74MiNvfjvl70Kpr29SOeYPAI6JT0XR549cHITPIBiy7uxn6I9
                      9wGxvQr7sb0shai8DDOQPF+xjT0Uy6+83FzzPCtjpr2sk6u8QY+ZPZSZrjxFC5+9wPfLPFVbuT14
                      fcE8t8VuvSziwrzvII09ycO9PXdvcb0sv5y8nqhQPUXJvb00xo28RM/XPIUNkb3amce9WJcwPNCm
                      FLw2y6K9vQ2bPURn2jyYFbS9oVmhPbFFvT0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk2MTM5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODk2MTM5MnEBYS5kAAAAAAAAAKspvr1asmE9W4WXPS3NUb1NIog9Q7ZDveqWUz0SQDU9
                      TWwyvSm2oD1dnZq9ZqI7PUDNz7p6HWk9PtNAPeMzaL10EKA8YFA+vQEqnD1YrDy8BlEdPfoXcj1T
                      iku9OopnvZjyLDxzH6S9a5acPZ8Hyb1ZnJ89oHxlvW2qsj2YLZW9ID7xvMJyIz1Si149Iq9APXNd
                      xL1Nva69mFp8PC+2kz0wDGe8IxOoPU9lsz3CFyc9ipM/vaD3uruT+2a9rb4svdrwwr0ZS6g9AOul
                      Ox1mvT2ZhpU98JlBvNEEsD3VWsq9sd6yPWhPRbwoGMC80lVyPaIGGz2Q20q9wIaVugL0Bj3oGiY8
                      aPaWvTQR8DxZ5oA99o1hPXvmhD3Xnca9gCvcO3P1xz3T14M94CSkvYD9sToPjb29ff2wPSSa0Dzi
                      YcG90lqFvdq+Tb1gT647EndKPfDSQ71XVLg9iPSyvMhqh7xHfEm9aPWpvQchlj3RM8M99twFvdrm
                      yb3oEYo88a3GPQA8gDrwpxC8vcaIPf2fWL0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODk2MDY3MnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODk2MDY3MnEBYS4BAAAAAAAAAICYcb0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f8
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        ZGU9gVtQiz8b5KsOPHaKPwLLC9PgwZc/AssL0+DBlz9/kJQtZymKP3pNy/8DhYA/l7IN8fjrhT+X
        sg3x+OuFPxNJvC++nXY/Um/F02Amdz9ySqpwLkN5P3JKqnAuQ3k/E0m8L76ddj9Sb8XTYCZ3P3JK
        qnAuQ3k/ckqqcC5DeT/CEup60GKMP2VMLltBlIk/0kAVN73Ikz/SQBU3vciTPx8UbsQyFYk/FpZD
        OMHigj/BmnPLZM6GP8Gac8tkzoY/R5Ek5M2Sgj+aFpZsuUiCP7EnIw3HIYo/sScjDcchij9HkSTk
        zZKCP5oWlmy5SII/sScjDcchij+xJyMNxyGKP860TCamIZE/lOLoukw2jz+SXL2m2JyUP5JcvabY
        nJQ/h0ZEzuQakT9IXT82NEaDP9HmBSN74Io/0eYFI3vgij+8NH1gRICIP49F9Gx9J4E/PSoQRMoy
        jT89KhBEyjKNP7w0fWBEgIg/j0X0bH0ngT89KhBEyjKNPz0qEETKMo0/zrRMJqYhkT+U4ui6TDaP
        P5JcvabYnJQ/kly9pticlD+HRkTO5BqRP0hdPzY0RoM/0eYFI3vgij/R5gUje+CKP7w0fWBEgIg/
        j0X0bH0ngT89KhBEyjKNPz0qEETKMo0/vDR9YESAiD+PRfRsfSeBPz0qEETKMo0/PSoQRMoyjT9C
        0mjFyc9kP0EONkhWe2U/cCiXm2DtVz9wKJebYO1XP6f/1bBsumU/IAw7IIw0cT9V5oyfRe5pP1Xm
        jJ9F7mk/EL2pqnIieT/lo6lMGY54P+0aJjJwgHY/7RomMnCAdj8QvamqciJ5P+WjqUwZjng/7Rom
        MnCAdj/tGiYycIB2P5r+7b6QBmQ/kuXfSh45Zj+xAY2XhbtcP7EBjZeFu1w//vd5h7CpZj8EjCqh
        ahluP8h9ZYrU7Gg/yH1litTsaD+bH9cJ+5puP2jg+VH7Fm8/sO732MPAZT+w7vfYw8BlP5sf1wn7
        mm4/aOD5UfsWbz+w7vfYw8BlP7Du99jDwGU/FgzuLz2XYD/+xZXRYDZiP1w0QVDck1s/XDRBUNyT
        Wz+Bcn2Jyp1gP4gb7wUdfm0/xncB+WomZT/GdwH5aiZlP5Ito3tyM2c/9HoeB5eRcD+50E0B7Xdj
        P7nQTQHtd2M/ki2je3IzZz/0eh4Hl5FwP7nQTQHtd2M/udBNAe13Yz8WDO4vPZdgP/7FldFgNmI/
        XDRBUNyTWz9cNEFQ3JNbP4FyfYnKnWA/iBvvBR1+bT/GdwH5aiZlP8Z3AflqJmU/ki2je3IzZz/0
        eh4Hl5FwP7nQTQHtd2M/udBNAe13Yz+SLaN7cjNnP/R6HgeXkXA/udBNAe13Yz+50E0B7XdjPw==
