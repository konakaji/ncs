beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.qdrift.QDriftEstimator
  N: 8000
  _ancilla: 3
  _targets:
  - 0
  - 1
  - 2
  ancilla_mes_method: !!python/object:gqe.energy_estimator.qdrift.AncillaMeasurementMethod
    hamiltonian: !!python/object:qwrapper.obs.Hamiltonian
      _hs: &id001
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      _matrix: null
      _nqubit: 3
      _paulis:
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XXIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YYIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZZIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IXXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IYYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IZZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XIXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YIYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZIZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      _qulacs_obs: null
  initializer: !!python/object:gqe.energy_estimator.qdrift.XInitializer {}
  mes_method: !!python/object:qwrapper.measurement.MeasurementMethod
    hamiltonian: !!python/object:qwrapper.hamiltonian.HeisenbergModel
      _hs: *id001
      _matrix: null
      _nqubit: 3
      _paulis:
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: XXI
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: YYI
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: ZZI
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: IXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: IYY
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: IZZ
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: XIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: YIY
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.operator.ControllablePauli
        _p_string: ZIZ
        _sign: 1
        matrix: null
        qulacs_obs: null
      _qulacs_obs: null
  nqubit: 3
  shot: 0
  tool: qulacs
lr: 0.0001
n_samples: 100
sampler: !!python/object:gqe.energy_model.sampler.NaiveSampler
  N: 8000
  all_paulis:
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  beta: 10
  evolution_map: {}
  lam: 12
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1NjEyOHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzQxNTYxMjhxAWEuhAMAAAAAAAA/Api+GFYQPdp+Kz4QKRU+WPU9PQBUgDlo5qO+NYuM
                      PkDrIb6iaRs+EKurvGqrLD7Aq8A9A9OevmCDB72M+5++lJv9PcDWbD10RJc9Xk+ivih7U71gEvK9
                      RxKAPoAZZzzAuX2+IN5sPXDE5z0oVA0+4P4FvNADab4gCnO8sE2FvBxKpb4E7qS9kPQpviR2o73I
                      9E69vYKBPvClAz769iM+qB6kviq9RD7afVI+imBEPuRalT3xWos+W9gnvgCVTLxAVo69gG0KviSm
                      oL7UFKi9FvIyvmeGjr6KUY++dGSHvbAztjyxs6c+Tv8yvoIHET4r1Am+af6NPqRezz3i3Us+3GTq
                      PQDBb7yCQEk+YF4PvexZxz0OdXs+PAzxPV4ZYD6OTqi+4CxiPFN3E7708q49QDrDPYDWeTxAQPc9
                      FVOUPszr171xoJg+YikXPvveXr6cyZU9zLK4PQC2ozuQEqG8kI3tvft6Y740RqS+oDTvPaIyGD7m
                      9io+ST+LPgD8g7kg/TQ9jwyIPnsOhr42yTe+KJhTvq4rbD7iI42+cArOvTh3DL7Paos+YBZlvlDA
                      /73wnhc+njWBvrv4k76neo++5ELTPQV6nj4uUVM+CeeiPgjVBT4A+aU6QJKzvCDJkD2M3Zu+CBR6
                      voD69Lxwrri8xp5gvjPHZr7yMkA+GnQ5PgB+47xivFA+0CBOvhDV9DzQ+H++KDt/vhCDjb60ZY09
                      tq9YviixXT2APRc+aJUhPkhApr5mO26+vkMvvoM3bb4eQJq+jJXUPagfFL0m0Cc+AJD2PYqTLz7e
                      pZy+kH7pvFqQTj7Qtug8EyOOvj2njj52RBA+kIaWPLJ+Cj7Tn4i+cHbLvWgNWr7YLka9/fOjPjj3
                      EL1rb0u+/v0ZPhgtA75YGiS+WtRTPiBwsD14Upe+UMLsvUY5CL6K8z4+8KeCvUXshT7vO4y+RHH2
                      PYDxHz5m6P69EFezvF90h768You9gNFRuy2Rgz5Dnzq+wE8Rvjibqr4z2oo+1vHNvfsCgL5Ac5O7
                      8D3iPHYaob7MgLu9mpiWvlyYwL3eMpW+iD5/PcCn2TzmVc+9WDgZvdAilD2wtPM9UECKvEyM6b32
                      Aw4+FlLTvWZVPT6gpAO+7AykvWTOnr3i9E0+dX6lPlCCBj5zf5U+IBBDvZl9gD6qkTE+TnyVviDw
                      nb5wb7i8yiOIvjHEiD6AB3g8SEVnPZp0Mz52h6a+3kwHvnDfoL7A1ZO7DCHDvfT87D30vbg96QGN
                      PjLNnL6UpZi9dN+dvZ7/ID6uh2s+kSaKPiAaCD02lkq+yVqRPr0Shz6Ar8480KKzvUiPCD7M2Pm9
                      qvRtPn7sJj6024S9L4CPPkOtGr4zz5U+oJAfvAJceT4CblQ+PpFWvk5PE77SB38+Ep5FPmicJb6g
                      Wha9/WKcPhzClD0Dikm+gHsqvJBd1r0Q/HW+YCv7vRj6ZT3rlh++SyGZvvsBjL5Ui/49hRyiPtAV
                      gL4w+Za+uKmMvqJHPz48fYk9l26XvmCYWrzYois9PIeGPR4YWL4QwUu+hG7kPQRs4z2k8Zi9pQ2V
                      PoB46jwimoe+wGPfvDLZdD5bb5e+gs1uPnK+k76vWYY+eEEhPrHhgz68L7U903ShPrB217xwEtM9
                      o/9RvnAoJr4Gfza+enN5PlYP4r3A0hc9BO2nvfu7Z75O31w+tndCPrdokj7A35g8gPUWvuKXTT5D
                      +Aa+4ApEvTRP4D2I5xS+0NCaPGLgfD76Uzk+gHr5vCtDMb6AC8C98QyqPnnOlj6JX6U+c2ANvj5e
                      iL5LOUa+lvsHvha1DD74vg++yottPm9Rpj7YmCg9EObLPL5QQL6UcZW+WXaXPmjlO72A8Ti8APKQ
                      PR9bnD6gLSc+7JX5vdgXlr5mnG0+BLH/PVGEgT7i0kA+N02UPqIKOT7zpw2+0vWMvvHfhD5ePwg+
                      aBcHvelMpD6AXh27hglfPm77gb4bnUS+kqE3PrDTmTygv3w9s3KDvsDwzj0DS6Y+TAPWvceBnL4U
                      S/I9smcxPmB4ab5YYw2+coyhvnLCir5qpUI+t9+CPgaFfT4OKaG+qKEMPuaRtL1O4Gw+sLKkPIAk
                      HjyAauk9cvulvnxDmr3AYJ87JoJXPoBHXzsI0wC+msEjPiJNCD6Ga9q94OqIvlB0Ab5IdF2+an9Y
                      Po5nLj4ogAw+iJM1PRAc+716upW+kOH1vf5jPL4rj6E+lkUjvu+Nor6Qr4+8cmAgPrA5lb46J2s+
                      qqgSPgwdxb0OoIK+AJ5NvvzJwL0m1OK9CIUiPbieoL7/EJU+TndTviQfvT3iiHc+izuZvoC1Ejze
                      zTG+Cl1/PrBstjwsVrs9CqtePvL7Xz7iBnA+tj0fPpbrfD5mjSu+E4xovs6OQj5TXT++mIsIvexD
                      tr1mBym+ECrvPK+Znj4A1hW7HoMtvqBDgL6CAgI+AQanPmj1BT56XUs+IHVVvgg/Kr4DB4++wP2e
                      PRvYoz7QOvu8NjY1PmCu4724tHA91EyhvV53qr7sDOQ95D/4PeZgq73gd1293Gu5vYqpXj5Daiy+
                      VnYYvih/Er2IJGw9Q2lvvpOsFL4ikjU+Tl9Jvviqhb7mvHI+GB+LvvoVgr4jqKA+q1oyvmBwlr1y
                      GGY+Kl5IPmhJeb4sr429Jj4DPtYbQ75mBjq+LFKdPVY0Cz4AW0i9nyCHPhAafb6J4pA+geqIPst2
                      Kr6GsUC+4i41Pu+dkb6MBMW9xkzevZAayr1H0KQ+EKfHvLS70D0A5hm9kyNRvsyxsL1wmA6+h4ak
                      PlyOqz1rCU6+2nIQPuYgYz4yHCM+FwCnvuBKfT34ghI9+zZIvpZhQb6AAKc9YmJvPvZNor64WSc9
                      EKjcPIZ0D7777Km+1J7KPVB05Txum4S+Q+ASvsOof77cIbU9I3OIPoorLD5LACS+GAgWPfTTgL7r
                      tnq+dsBXvv6SFz4bUzm++OAGvgmRoD6MOJW9Ap0jPo6Hhr4+cyM+eJdEvceUlD7GRNe9jTmGPo/w
                      j74aHKe+gGcYPho1Lz6gWBo9SCIqPujUFL2Q/qu8zFrFPey5r702wI2+Y/9JvnpwTz4iH1s+s0s3
                      vrLGgb4o0xk9iNIvvgBZrLtYtWW9EntwPv7rBL6gZY49jNSjvt5QTj7ehlw+xhQoPnJbND64Cy29
                      Qg18PkQfgr7mI4u+hsk7viAker6OZB2+8EUFPt6xnb774Bm+EB7ovTYfIT5g+C++B7uPPq48CL6F
                      Noc+EJ16vl0wjD6M/di9oGnSPZoceT7TnAS+vGmzPYYtNL5oxlG9plD4vY+CgT7gj5Y9Bo4TPmCx
                      RL5lSJI+eAoJvk1tkz4eOqC+RBulvYBjzrwsbM29hTKfPhAC/zx4Dlk9EKWOveq2KT6cTpO+KwJy
                      vjAphrxDa3++ANP3OzhwN74u6FI+O+MzvkCbPL4Ao0E9sh48PnPaYL7cOuW9T1SmPg6fBL5w5XG+
                      Jmy/vUSHkL5wKY6+0qNaPqU2hz48h7+9I7Mavqall74ZzIE+MGWTPRBYKj6oAZ++uK4hPnqtfz7g
                      wpS+wohhPr5+IL66C2E+/HeZPScvhz6eE2s+4GK0vVuDiL5gkB69AGItuiRArT0QYKg9qxx/vkFl
                      mD7AS467XmlQPvBaD74UUb496LQfvjwykL3776O+AIOqO9CD+r0gMWW+2C88vb5ppL6SATg+iO9j
                      PYbz+r0QGZw9KJQmvSCBXL1wC2u+6EAGvormjL4QNNm8wh80Pp8bnz5/Bp2+8CGYvmo5RD4AFOK8
                      mCgRvg60Kr4ozW49YnR+PsO5kb4PhZ++lMqOvkcFhz4s3Ya9w9SOvqbixL3agj8+zshhvqtBIr50
                      PZe9AIHHuoACdz2yfoK+Xm1VvnagPT4geQw+NIL+PUhKTT3mazG+gIm2PSLZor4tlJg+0iBMPuBC
                      Tb2bqQ++sCujPQFGhD4HEKe+oALVve41cD6Aowi+M+mZPqBV+r1UnII9YA2avnIKo76ARym8tf6f
                      PoD1CrzetCw+mpxDPqBmxz2/N6k+wGVkPRDB9b2E8eQ9cFa0PXa5HL6Iv249/Af/vWDTUjxGihm+
                      EoCXvkALjL2X3JQ+LuBVPp7SKD6AyIu8Jk47vvX1iD4Buag+UBIqvtISbj5zT5W+VhKDvno9bD6w
                      zAa+E7+gvpaPJr523wC+oBPZvZwbvr38Npe+QkYrPuOqIr4Dg6O+dqQCPlkFqT7owFQ9BuhOvhYS
                      0L3Aaty7IZ2fPtakOr4u9hw+q1GXPm7mcb4A+528HMX6vaAemj0gx/U9mtZHPkP4pD4QEuG9qJk3
                      vZSIqz2eBF2+kIdTvh60aD6QQsY8gLkIPLBIGr5AEFu9yhGhvvhjbb0liZk+8pNbPlitd71/8qK+
                      eOt/PdiLdr2Abxi8l7CKvgxMtT2mxiu+eCIQvuB1jb0T5XG+ebWLPv4FB77ar4K+ngAVviihMz3s
                      rb49eAZhvcqPYz5yAz0+rPD/vfZ4BL7wAPq8QFH6PHWvmj6zk4A+7nh6vgw9tL3l554+XoZqPjRT
                      7T3khp+9gIE0vZT83T3Tt4m+aDtevc4TUT45Gak+yvtmPqhWRb6S8pC+bLiQPeTP+T3g/h+8wCQ5
                      vp5dhL7hE5A+UihDPtIlXD4Nd4w+QNkcPVJReT6k2qm+alaLvk6Fmb45P5Y+c8SbvuwDlb1IEGk9
                      IFsovAD3Xz2vyIK+3dioPkEplT7SMwY+wNpTPcRWlr7JGpA+6DkMPQCJrTomgYW+utt+PhgcVL3h
                      h6U+pESpvWzloD0mpFI+nQaOPl2/pD6ACOE8FphcvnULiT4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1MzAwOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3NDE1MzAwOHEBYS5kAAAAAAAAAMPHkT7wP/+98o86PsZsQT748GE9AFyQOgAC071DFaQ+
                      wOyIuwClvzvoT089KPxUvatEbb6amzY+6PlSPbIck74vzZE+EkQwPjAvwryLnEm+tk7lvTOllT6b
                      pz2++PGSvr60Cr70Eoy9iKYcvTiwRT0cfbK9laWbPqiRIL4b73C+ITuePvIRQz7AoUM9fMuRvZPc
                      lb746km+CIoHvUD1h752ezA+mDwkPrvLeL5+SUg+Hps2PvMJmL4AY3++YLpHPWrWWD6oMyE+FN2L
                      PSJgVz4H66i+wWyqPjBPar4YZyI95qFsPjowYT4gJic8Wpc9PrQc6D1PDYO+mUWkPhAOe75EW5q+
                      AMxtPLtdEr61vJs+gHxdPIDuM7v4tw295GXUPWCxqb4214C+dmUsPnHsqD6mtcG9mjCKvn8rjj4B
                      Gpc+/jVhPqcQjL6wdZ4902KpPphkAb3KHyo+pnJMvoLBFD4gRa+9wM30u1OmpL4y9k0+cjCOvsx9
                      5721VJg+NssyPrDq3DwAfRQ8Q9SHvsu/ob4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1NDI4OHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzQxNTQyODhxAWEuECcAAAAAAACgely7Nx9avY1Xor3wxWA8qQKxPfm1hT39l1u9UEY+
                      PJs1jb3eNBY9Kns0vbFujz1dGLC9WsiBvXRACr3HO7g9EpKdvfXAkz0Yojy8AJiRueWvkj0OaKe9
                      QH2uumeYVb2qFAu9igFRvTrCq70zV5W9hzvFPc3NfL3EW808dMEGvX7hGj1SdwE90J0mvRBnkL3b
                      Lp69+vsiPYDeyTqyslo9qk5YvTFwvz2g00W9hmWBvQrbBj1gAq27SAeCvRh1w72esyw9u3zMPe3+
                      vL0MC9+8ysBQPZOVaL3pkrA98CQPPDqNMz2Vo8G9ClBiPSSS3zyIlJq9PXOyPSZdET1qyzO97LCj
                      vDn4sz0dKLM9SrouveinsbwRMsg9NM35PHCRSb1ymo69jtuLvbTk9byCpEU96JemvCi1YDwTgL49
                      rC3cvJl9gT2MZry8KYamPdSmtTyLxLi9gfixPUJ7Pj2Qs1i98soePR1xkD2arE09bkGDvcpNBr02
                      9Tc9z9mdPQfHmT3zVsu99nIoPZBBLjwHRJ49ABwIupIrLj0i3n09tRjCPTPDdL0hKbU9RmBvPcK4
                      AD2KHVQ9IO0Hvd/PnD23CTu91JKFvfFaiD3PDIY9tMLNPDYVAb1qlSi9x42uPYdetD2AAJM7M36X
                      PXDECL2w46q99G/YvKwEoDysN4C9oBCaO0Y9pb0zt6Q9uNatvX2ETL3wRiM88slrPUC9Djzwg0Q8
                      fk4rPbOCmj3UkA29wgIEPYC7k7sEu4a94NHIvaCML71y90Y9WFJAvBZzpr02Ige9OlNHPZ2CRL0A
                      EFC8YlY4Pd2YW73sPOm8MHRIPN1sjz1Z2pk9zya2PSLXMD0xsoc9YIMzvY2TIr06BlA9UAr0Ozv9
                      ob2CHIq9IxopvdgsdrzOOjQ9gIPrOxrteb2skKs8asKavfb8EL2jVza9GkMzvcAzJTzxQJ09oKac
                      PMDEPDwMVba8ztNcPRRR1byYAOm8rIW5PPCLLTxYpF28ejRrvS2gUr2YLga8IBT+vGBfc7tjtYY9
                      Jo9rPT5UYz2YrYW876HBPfW5wL1FKsM96nsavUFoyj26UF49M8+3PZBIXjzIS+C8oGr5O0DEqb3N
                      pLS9AcawPVAUGr18P4a9C4GsPTweCr2Nglu9VAyePGaofD0oJIm9LDiQPG4Acj0anMq9nQervdWX
                      sz3A3oK8tGvRvCPqjr34G8m9uSunPbRn+byYLbc8unijvd+xnj0QpV29MAYBPBADh70Z1YQ9cG4b
                      vcgwjDzobhi8ybeqPSj2ODzodMw8+oGJvSpadD3qQLK9oMwrvVu2pz3fCIE9oITQO9jLHLxMht08
                      jCECvUJ6ST0z3ly9mE4TPP5QKj2IpI+8VqlXPSW6ur01ucA9bREvvTdpG72XKp49JFX+PIC63TpH
                      CIE9EbyjPc42UT30ja+85IftPFy6hL0lq4y9X+u/PSIKFD3Ui4c8fQtovcgOu72MZ6q8Xnt6PZR9
                      mzwQoFM8I5ZTvR+BuD2uSXY96iYlPfJxGz1TnUS9AlkHPXmywz06xmw9LVh8vUR5zzw3d1S9tRWV
                      vdanF73NlaC9qmMvPWCU5rwo6Hs8YMDYO7wQ9zzrMp49YCusO6aLaj1ThTS90HO/uxSJxby9SUm9
                      LASgvHpieb2YSzG82L/1vLpLJL2AP7E7dv6cvbeqyz1A6nq8WmcUPQDdg7lCNmk90vekvQAAf7zT
                      dag9BBaFvSDU7bw0C4c8Sth9PdCVvTuiKhY9qGovPAmuij24WOm8cmF2PeZnZD2UDKY8J1o9vVFl
                      pz0aGnO9ZhRvPYBK2Do/EbA9SmPFvbwPB71dY1O91pSTvdmjuD1K7Rs9d3eIPXKMaT3AZUo8vo0C
                      PQ+omD2niEe9JG/iPGW5nj3bXIM9TfewvYyP/Tw69BA96m55PaY9Pj0QfBw8AAtLuxCvFTwkBfU8
                      QPV1vcM9hj0gxNK8YyTLPeBp+LtbBZs9eFnovMAopzqm/1Y91qgZPTBsJTwgbYa9Q9x5vfCpGbye
                      Nio9wpKGvXqmHz36I5e9q4mXvWPNML2OFRU9ADhzuuiYAryonU28AJP/uRaDg737BK49ShCvvd73
                      nL3eNhg9MhNrPSwBBr0KfUe9IJ+svJD0VrwAy4O7mFnHvHisyL2QOyC8AvB/Pex1+zzi4hA9eoZY
                      vW2+cr1tisy9UgYpPTpHvb1w3BK8OH6ZPMt0ub1MpvK8r1nMPUKKNT3C3Do96DDgvAhTn71tP1m9
                      tsIKPWqJvb2i8S49RZCmPV0MHb0wkSA8UgdsPaR5zTxII4o8K4eoPYLWGj1SICs97jtYPUIxdz0Q
                      q1q957GDPV9szL2mdS49QK83u978l72UDBG9muIfvSqodb3ZGrc92sN2PdvDiD2Floy9emBQPWwu
                      3bwGykM98BtnPNqxQL2c8t48cuktPZEgmT0VPq89ABTHOwawXT3qxnA9gOYlPJd1kj1KaJq9G5jA
                      vfB3CDypHZs9sASuO8DsLrztr2m9oAS5vS4SRz2gd8E7daOIPdalRz14O7q919atPRofTr11gcQ9
                      mICtvBDuSryQgKK9F0xHvWGPvD3qBm69wEFbPO7uOj0iAmA9oIS4uyxKyTzASoG9vSpdvQB3QzzV
                      baq96FrbvDDdS72zGI29uxiqvdBXAjzMXrq86h5cvcD9G7tQJKa76LqyvJotPz2e63M9TCGSPGD1
                      bb1lMrE9evOsvVAVa72GNCI9K5e+PT1NKL1Q/4k7gpRXPc8nvD3Dxca9/xqqPVauHj0RVaE91/HB
                      vXAVKb2MEeM8cAaRveT4Cb1Swpq9Lxa1PYjUsrwA6tW7ACpmOU4/m71EIA+9IVjFPUA6WrzIXoI8
                      jIWAPFjSyjxetWU9Q+yrvfa+az0wzZa9XLzUPFY3Dr1A0m27DhtTPSK8Vj1M+fC8R/ZxvWU1ub3U
                      Aha9kLc2PFjMiDzIm5O92GwLPAhDr7wjcjO9dgUTPWcbrT0pgqQ9YBDruyZffj2i0zc9fsIpPSqY
                      M73gKKe7TBX8vOqrfL0yCjY99+WXPZQDyzx8Rwe9EB4mPBlJiD3Yrxu8KJGxvfsspD3edQw96Eqn
                      vLh0gTw9bCq9qSG4PeCKlDy6mT09SBjzvABXsbyzyau9bXnAPUp5cD3+3Ye9xmccPS7cVj1slY08
                      bCqMvFCNDrwAdWu67WMavbIxRj1A25Y6bZZwvWh9ATy2bnQ9K3eVPdXmvD0AHIO9xpmCve0Au71H
                      35896XyHPQCtgjwGNmE9HK70PIwltDz/ecA97MubPE7vHT31/4S9WocwvSBWpLymh1Q9YFCJPPNv
                      lb0AFry6sAMovGcJjj1DH0K9LArGPMF1gj1q4Fg9aOxKPPCzZb2oxIC9FHeCvNdTx70D6MI9Ef60
                      PTLsbj15yJM9cNiSvYjlwL0aShC96iEePag9yL16gRc9qOPFvJgNZ7wpBrw971yTPYFbwj1riLk9
                      bPzMPLsGmb12hmU9JwDKPWiOYzzYu8e8kKjFvQCT+rsRIbo9Z/sxvQA8mzy6Fwu9YKqvPIJuWj1s
                      rJ+8ChmcvZE5uD0g4WO9CY+APZC3PjwzdMg9sP9QPLDKZTyAhia8YvLAvcVQi71/NJg9gGZRPNk4
                      mT1ONnk9YJ0tOwAqrLqAnJQ6PQ3DvQanaj26+ju9+/aHPf6uET1WDm49X1HAvdZaCL29G4g9PXrJ
                      vQ5WHT2Mja28nRqaPQD/VTviaoe9i4zHPWZ1nb0AeG28koUKPSAGQb3SXwE9VICcPACHNTwA5Se8
                      rXMkvWDEQbt4tMG8wMjyvAyIuzzpucY9IGr6u1SJsDzp08g9ykcwPSOOmr3YQb28+3yMPQplZL1A
                      fV69LPCGvYXEuT2AUcG74DWIvHT7tjzleaG9NqITvSuMuL387P88vlk2PdNJRL0YHU+8BkcwPSb9
                      Fj13UEq9jbtRvZLaWT2Qu1m9J/e7vWMFZb1d9UK9nfhfvW2FGr0HwkW9f869vZB4DTwa95e9Eocw
                      PeoRUz3K0kM9d3S1vbqqS70WBWg9nxGHPVZ8Pj1YBGc8ADFVOq6bTD3PX5M9rEGuPJIQZT27kL+9
                      cGQWvdTinbwgKd07IBnOu5fWVL0A+ci9kNtTPAJIzL1gdYw8/jynvdJCub3J7Z49N6thvZ+DzD0w
                      0iQ8fbetPZC+Pr1xDa89WLRJvGcMnT16cgy9wAsAPACdP70q6j09Q/uuPRB6fL1DXS29AJlAvBlt
                      nD2IULE81w5pvWBoF7uoeNK8VAQSvdtlpz1gpBk7aA+iPNhU87zUto08gjkKPbDec7xAdcY8ynQ9
                      vdKcGD3iPQs90JG0uxLsXj1+2kA9oP2fuwZXOD1FC5U9gcSsPaZECj3osSo89VCOPYKxVD1UKJK8
                      HhSpvaBEnr0Bc5E9KJKDvfgApjyI8968vOOCvTOsdr1g8Ki9c30fvYCv47x8sfk8opxAPTkEtj0l
                      A4e9lpo5Pf4uo70uq0w9eIinvZLuUT0S7CM9HbXEPebLGT0AKPY7aPjKPL68Zz1oqfe85diWPSAO
                      6LwqqwM9ooONvchdtbw1QYA9w/DGPbDLRrwQqFS9FF28POJVRj2FiKe9AIGpPGpkWb0hJ5s9C8KT
                      vYCkoLum51M9QOdiO9icy71+UR09LFfsPM0IgL3ycw094Bq3O1I3j733iqM9Am1mPVrpcb1E3uI8
                      MAvdO+CSxrwCE3s95l5ZPYqxcz261k29JBMCvULMWj1UNZa8PaOqvdgBRjw8vOY8DRp3vY2sZL16
                      no29AHGmu4Buf7qHo8s9mcu5PZUBv70nlq69YnQmPVXLqb3QcoI7UNIXvUCrFzysht68aNLfvACY
                      qDv4jsG8HOcVvYAyBL0g97w7IJXOu5vKlr3U87g8UBT7O9jPcryAVvW6tB6hvHMoe716KmI9smh/
                      PYDuoruJccg9zSdMvQDEqb3p+KM9thElPW45ib0o+8K9GgQ7vepNsL2QTV88p3w0vW7hTz0z1ji9
                      PbAkvTDtQr2M09y8yPmAvAAIIb0BXb89k7J0vTSM/LwnhsQ9XUcbvZ6sUT3Aa3275y1xvSNpjz0w
                      YUO8wGR+vHw91Dym11A9E2/GvWUaqb2mRIm972+VPY9gjj2wQ/g7lYbKvT6mXT3UE7M80OCyvUOV
                      ZL3jD4w9sgdrPSPgTL2M5Jy8mGE9vBlakj2IF6q9BXi4PcOUxr23FJ49UhglPX4in72VWsq96FAQ
                      vMBccbsoenU8FaOaPciEnDwTAz29YotHPbDEUDwH1a89BpQjPf0/er2aAq69/cxJvZiOETxgYK29
                      QQaTPWUqjj3a28m9aE2EPBvDrT06BkA95FPWPDavVz15Xa49VkE+PW4ki73Qq8g7mhBWPfOhbr3j
                      xi69gh4HPWyFury3Nbk9UKc9PHmepD2R+8I9YBwbuzh0sL1MObg8WoNyPbmovj1VWow9xVXJvYBF
                      MzzCPlg927zDvZRZ+bx2Twy9yUzCPdAr+TvgP4c87QihvTLRcT29MHm90E9vPNjMRjwDBLC9yGfn
                      vPdVIL3ia6293BCGve09iz0sWvG8SOqCvbHFsD0sZPI8NiqavdSjhDzAaCm9l8ufPXFamz1q8Vo9
                      3BTkPLBZ37vauMi9gGGfOuiHhLxZe5o9TQjGPaR85jwQITq97w28PU3Eyb3hd6k9YEg7vXlatD0p
                      M4M9ALO6Of1LGr2/Ksk9B1NVvd1xMb0Am967q+acPfT1kLwAw369najHPa8Xvr3NgoE9MPDju2CJ
                      2rzcGIq9NNW6PJOgsD3QNc87TRwovUCrXzvyrFc9SY6yPeIAGz2r/649GyuTPbGIsT3HsWy9Mg54
                      PWCOuDzyIV09CazMPdjgY7wTQoI9F5qvPUfmlz2UWYK8W6+YPSDR9rvhuMI9wt5ePR02sL0dYcO9
                      7Jj+PGgCxzx/3L89wMS/vTCDbTzNL409um4zPdt+mr2zo6k9BOLoPP4pUz1FoJA9WOuBvZQgqjxb
                      Ipi9RaGBPTdOhj0GTHg9K36fvVDKerxKNrW9a0quvdJ9yL3Qkko8KTu5PQB95zvA1xa74XKgPYC1
                      9Lzd+qg9V1HMvRhU9bxMSc88jNSNvEw1Br3Ao8y85TaLPQHJwj06Cw09wH9qu9F0mT3txHC9YmBk
                      PSdRsr0Y/kU8tM0NvZlOmT2e9G89NIOJPHLwdj13+Iw9Eh6+vaibkTwA4ji7ADLFPMBbcjx3TH29
                      QyyEPcB2+TrH9og9VDcMvf0gtr0o9vK8cTG0PfDtWr30voW9n66vvUNAxr3Tg7E9FAy3vFCXsjvg
                      /bK7ltsNvSYsdD0YCYy9J9dyvTCU7rtI1+i8uE2AvNhA9bwwRp473Cf4PKxK4TyQIhK9Lf0yvQks
                      nz1QJm08aJ//vIBqFrrrPa49AHrDuWOFSb2t/3K9ks55PZ/FzD3gz8A8rTnIPQ62WT1QUGu87fYZ
                      vQ7QUz0kxf88V5O9vSgwNbz2JoO9CQSRPfqtMT0oTpe9cmWEvQLMaD26YQO9b5KOPQ5bIj1Usve8
                      iP2rvK1ljT1iDH09fA8RvXrIOT3gI+C8hPfkPBjxfjzsfp686YWZPaCiersaBrq9c48evYRADL1M
                      yKO84IzjO4Wbs72FWMW9NMe6PFBErLtS7Cw9Y9g3va98gT1dGz69MslgPbrlnL2YYiC8ykJevYA3
                      w73LKJ89i4rBvaB/XTuLu6o9zVw0vfCEeL2QeRW8rQ26vSCfobto+Ao83hJUPah1lLxA+fs6ne25
                      vaLAFD2NYJM9EjcePQXpp70UPfW8BjgRPeCayb2NIXS9+EKGPADdSrz2GjQ9Y9tbvd3oqr2OyyA9
                      kL45PMGEzD12AWk98hUxPfSkvbw6gDI904ZivZidBDysjKM8gKvhunS1uTzY0oi8TIG9vO7ufz2v
                      WYo91J3OPCk4hj16WW69CvgNvZRt2DxEQeg8DG2OPO4bdD3gQ8m71v93PWhZObx3nqE9UpFVPabb
                      Bj2NhLI9EO8rPHoyTL0a2Va9D4uwPUsjyr2zjMQ9nmE7PZgYSrzQRXy9ACNjPCH/yD0UcBS90ijB
                      vbHeoD3AjV07ZYegvbjak73AKgI7cucTPTaYRz2in1s9bNW9vGfEsT37SYY9Lqc7PStozL0OPpa9
                      FG7GvEgqrLyKCgG9rMavPKrMGj3KCgw9ypCtvThxzL25hsk9EpKAvdBiqDvbcbY9uiK5veA8j7sA
                      dAA6gEOYOp3Rfb313I09QEUsO1K8ub0tBkG9mbi9Pf8Wt734jIa827KsvW26b72cdew8ZTWuvdf4
                      Kr0wR7e7xRaRvXUXgz3bLqQ9Bg1cPVT98jwnx1+9Kuk+Pb7hp71A8YS98zDIvYD6LL150cs9gMEv
                      vCBJy7x0OKG8anBvvXDyL7wlios9c6CnvZTE07zH8KI97Rxfvbnxwz30LoM8V/E+vbaObz2KrFU9
                      ACflvIAKjLp4E+S8YGZzu01wij0G1Xg92W6LPcqqQT0yxMu95ulbPcDuBb1fpbO93berPVvju72A
                      Jla6+6aOvV2uxz3BJL491wuCPYkryj3iX4e98IiSvQt1u72yYYu9JWmUvafhkj2w0cS7AEOzuYrs
                      wb0ysDw9oPUhveqvfz0A1ru5sFVpvF6mTT298Dm9MIETvHYNfD2e63s9YFOxPMIuAj35Zp09Ut+z
                      vU2mOL3sqg29rLGMPDoKE726ixu9gOXaO7Q7BL1wxmw8Pv2fvXa1B71fGIw9n0qNPZl1lz1YTNG8
                      CF3FvduMyz20Sb68QOY+O4LSZj0UmPO848i8PXWrrj0KiA89ZyDAvQCWoLu4XoK9IBeZPDQ/lzyz
                      ULu9+Ne/PPKdIj3joDe9VvaFvX2DYr0i/1o94xyhvbrQlL2uYpW9qLafPL4jVj3iHF09SgeHvd0j
                      hr3x9rM98OdgvEu3nj1d7Ga9gD0vumpjTj1GVjM9ETCDPflpoz2Nj7M9vghVPY6XWT1N5MA9MDNO
                      PBqGG729rLm9fiJ3PfXvqL3gCQe9WjScvbJAlb0UIdE88NE0vJJwOj0XUa69g3ZfvbotXr3D6Y49
                      VXnCvbMoKr1Ql2S9zCr5PCoylr2U2A69ZAn3PDUltj3yO149guxUPVbgWj1QOO679dCAPdlDqT3C
                      FX09xV+MPQBYkDtydnk9QBDxvBHAwj3zBcA9phkUvThxtjzzNFG9BFbiPOq1cj1K55O9h/hkvZDC
                      HL13wcu9c7FnvdjtmL2A0UU6YjYPPUP3Yr1LfsG96QqfPYh5iDwNa6m9WG7IvP76IT1yNKe9VHn7
                      vEr2Q73VdaE99dCLvd+jxD1qAik9E702vb1znD0XXsc9qc2nPZVEhD1wRR68atizvYAdLzy726G9
                      dtGIvfL+Dj3ZaYk9nUI8vdKKND2AHP47vWo7vaQng72Co4q9sP+Wu2Dat7vWmGA98H0OvaMdgT3G
                      hSw9ig8JPYx+9TxQZFE8PO6KvXQu57ynRVm9aCZBPGmvlT2wU9a7jnkePbRh+DyZdaU9ph2LvVx4
                      0DxT6W69UKFJveewT720z6a80DiAu5hGm72qHys9OXSpPRD6NLzNZp49Rx9evegGSrxYdCY8GyeW
                      vbANmL0YYC28wVKTPf1Hqz31na+9Y6BEvQDgvrsolL48K4OHPQCESjyGz1s9sJl1PO19P734gK88
                      p/i+PYp0Oz1A5V08a6rKvZCtc7w1yMm9iP24vcgXx73GSTM9VyioPSxUhbwm+gS9qJ09vG84hj3I
                      +Ja8KA5VPHK2Dj23fx69GGUovIDNkTwwQmq9A5W/vdZkYj2IYcM8yLeoPIJImL0YMps8IIGGvLJc
                      VD0ok4a97zG9vfOirz1nMMm98VatPUkuhT1w4V88cO8cvTBPX72A4wy8mpllvVqtnr3IO7c89Jap
                      PJcwdL29zla9UnUBPZBLdbxyvJG9AtiovWjY0bxAUsM8ONT8vCzQ/jwhuYU9IEeFO1CfkbsiCHw9
                      NvycvRNYyb2o8lY8S1q9PXhTiL36UH29Mr10PUwvvDzMMMS8YMsdvWAbnrwTN4o9IMHmvFB2obt2
                      w569E+dOveMdrb2uOz09ilnJvcANcbsRH6Y9NlWDvYPwpj38sgm9fQihvQqdaT2WFiE9TslFPWi3
                      BDzNCp29HeCqveH1hz1bZpm9LqR+PVp5F71CpU49AJ81PHfPrL3pErA9tjucvWuFnT3T37U9ACgJ
                      ukUMyD1CJQ89YISBvbIgJT0AKIo7fuCoveYRGD2Q9008dGmqvEkjiD2rn749gDq0Og0VSb0s4c28
                      lluIvU48Bj3JlYA9UmgePYC0NryI4u+8hnIAvSa3hL3I1YO9rwXEvXaolb0Xcyq9IILeu7dczL04
                      kbM8HiolPd0VHr2sZ728CX+DPZUwyj32Qau9tE+MvNQu7bz3eqM9RErhPDNOKb3Fksk9sKD5O/J6
                      eD3ws4u9UAbJOwx2ubxXUHa9zq8IPTCKq7vCTwU9rCrNvADVvbzgg8+7+1egvV8Qrj3WFWU9GB0K
                      PH6eeT0LY5s9F6ZtvUFArz29fHa9dN2LvKXWrj25uog9wsRvPb4FSD1EsfU894CoPeovTT3UVYu8
                      rO6FveVXqj1U6cO8PolTPSys27yayTO9uuVQPeJEIz2oBES87W+cvVDGiDu6/GU9MsNrPSWxpT3D
                      l0+9KmdDva7VXj0awcG9j5CIPWD4xjsAIAI5AUW2PQcIyb30YbI8eOXxvIAHyrtB/YU93QZTvaN4
                      KL2jAFa9GpZTveh6bTwAUyY6sSeXPe++qj3YGTq8MHOrO/1URb1vWa29V5N6vRsClj2A7aw8LSma
                      vQifgryuVKe9adqRPQB2G7w967+9XF8RvditeLywvDe8kMpWvNN6iz3j+Yg98ntaPUlsoj0+Ulw9
                      V9rDPaMesT3Ad0K7SFL5vEhEj7ye2wg9QMe7PGC6tLziypG9gNPDPHTQsLyQQ228Ii0qPUgvr7zg
                      YoM7+U2NPSrYbT1IpYy8Ys99PcynFb2YF4y96E3DvUCzYb345Oa8HdaTvXjbrr15pcc9XXe7PdQ8
                      B70tZKm9/uhOPd4YFz0erUg9CqeYvRSnwjxnMWi9hJ/RPMn/gT20LIc8wduvPR/puL0MX8Q8oEtY
                      vZ+9mT24n+m8gEF1ujbGIj123UQ9UAZFvGDHXb2dDZG9RW+HPbKOQj0H3Dq9sQ+LPYBEN7zIrpq8
                      mUaoPV9Jur3PbLE9gpI/PZ0Qrj1XJke9me29PbGVuD02uH09kmbHvTB5ar0lcqy9Y/bKPaKlYz2M
                      gLg85rIfPVPNjb1I6pm9AKAROrOcyL2AfX261HmFvMq+Br1NO4+9hcOIPaPLVL1y9jI9Ulp/PZjR
                      B7y1Oq297PCLvMvnyb0tgZI900QivRNdZb1ZlIE9amnLvRo9Gj1COI69out3PWfZt70ANME6lpZU
                      PSTq+TwABI28kD26va1qq71jfyG9/v6jvQE8yj1AP7E6QMJIu1W3ur2ek6u91tViPVw8Br1F/ok9
                      OBG/vEdksr1QZue7H0uUPYPfp70iczU9AHdNureYoz1Ufdu8qpF9vTCgl70UIs08432jPWIMgr3U
                      ovQ8gLXDO9Attr025QO9UAyHOwbsUj0mB5y9iFqOPPJGDj2a5Ma9AhkcPeCDiDxe2TM9s8levVbH
                      fz2Ahk48i6SUvbD9C70DRXW9aa2jPRHavD042aK80J6mOwjdxzyKhmU9eg4LPZRZpjwSgWw9n2/K
                      vemCiD0gcqG9+kRTvcgekLxalxW9mr+HvUl5jj3pVcY9cPJzvcSM4DyrpLO95JsEvUiGwTxD3K09
                      QgeQvfBmzL26zJe9ysNevTFNyT33nsG97FelPMJLur1QSwW8zbCrva0wU71Kyoi9LcdkvTi9ubxv
                      FJM99D7JvOeWdr0HFsS9S9KXPdTLm7zPrbY9WFe3ve5aDD0MkJu8JMLgPHIhUz3c4eU8sVa1PVjY
                      tTx6F8q9aOEavCJmy70jaLo969COPedTmT0Vloo9TB7ivP7ZcT2qGm89UL0ovCCXurzseo08/kNI
                      PdYcnL0TEm29mIyNvIZSAL2wTrm91CuuPN15Kb048cK9JX++PVh5Ibw4k5s8JSqyPUoeSL3BhY49
                      8a3BPdjkCTwsrJe82gwkvUyJhbzoUTs8tPHqPIjNlbzRhYU9TeervVDMrL2hnJA9oNz8O2B7Tjsh
                      Zo89CkJMPdC8TbzUgKa8Ux2uPcXzuz1AotC8bWG2vUKxWT2Ah7O9KE5+PI1WoT2wkfM7aHquvKAk
                      MLsoAI+8APMUu5z+Cr2E5u08AJNIu0zdgLyQFhY8GFicvQa7Gj12rZu9VKizvHuzuL0o7Zq8DbmB
                      veKgIz2M+Pk8gGiLPCgLlzzQahK8qq28vTmmnD2wvSu9Sohmvfj+vTzMVJw8Bem3vdscgD2cHfU8
                      wKwNvQc0Wr0dPEK93uIPPRT32jxKHkc9xVG1PQZKEr1B5qY9sKEwvQBIcjqAb6u6dAGDvSeLnz2w
                      a607pqlqPYDZtjvHJWW9m0KtvYZEEj2Dg6G9jyGdPbf/xj0KG089INtnvVICZD2iRFI97Pf4vAdy
                      Tr2Izrc8+A6ZPCAsprzao5e9qDhevFEdyz05kpc9wxFXvUBTPDtwzx68eMqMPICKWrpjEcE93pR3
                      PVAaCDwAxuy7XSZ+veprAD1Nqp+9Nn8XPVa6Cr1B2709nUaCPQBsujxgzy+739HEPeB7s7u+jwA9
                      DYeivfNYsj20GJO8p8i5vWAM3jt/koo98mMpPRS5q7zmljs9cFHLvSYgSj16wXe9XG7hPArCGD0q
                      Kmm9MsxHPYLHDz1lZIi9YF7KOwENuz1jwss9hsZrPV4jpL0DRhq9sg0fPcE3wj18YQq9dBbQPLXy
                      s70ZRag9CBSzvVj9fbwQhGi8I5yOvWcduL2MJ+I8msUpvdDfUb3I8em87+WZPUCXUzxL5Lm9FDCm
                      PCsSpj1iSaK9Uis6PbBpyjuws407ai9WPeUukz0AIOk7RmhsPVpkMr3ylQE9R72vPU3Unb3HJrO9
                      gGavuvMWqD2d/qi9wnomPfaMfT0np0a9N+0tvSNptT2AKmy8SfyjPQoUNr1KxsC9kFYEvDkdtz0/
                      ucS9yYyMPd4xST3eoH89lgVdPYA9g7qVBMc9UF/fu1fQMb0QHh08UP3kOyrfXb1nfcA9p3/IvdOq
                      xL3obJS9DOHGvABYjTmAWLg8RudHPXTH2Tz65FK9r+fKvaxfi71onB08tNgTvd7dUz2YUZ68o56m
                      PUIHBT2YzaI8pwHCvbfBuT1guYQ7QNzAvLBs2LugCx+7b9eiPSrjNr34Ncq8+fTLPUPQaL3FqLA9
                      l9yuPcPzTr2QAgq9zIjavJ1ZVL2i0j89KGIhvA6TQD3SHbe92LBPvFCkBr2wK+M7ojhVPSbNo72g
                      d+m7wPksu+tZiT2dnsQ9d2KuvZ2jnD1TZZK9wGARO+zItzw7v5+9UIAOvX0fQb3rGpe910fLvaKp
                      MD2Dn1+9e1jCPUBYSbwKPH89aBcUPBRboTyKZMK9ziEIPaM+TL1Wnl89b4rIPY0LgT3anTm91rAj
                      PTE+nz3IcY88HkyjvUDMhrzApOW6/DGIvQFunj3AJSs7Y7apvcO+jj0ypAA9wWy0PXIGrL1RSaM9
                      gOepvCJrbz3AGjG9bzyUPaDU3ju+4iA90/3GvdPbur3AVxc8vSo6veHmmj0yTVs9IJ0ivdCcy72N
                      Hy29gI2ZOw+4gD10Vem8euGRvX5bND1BHJ09qKKwPGe5xL2vMoA9aANKPMljgz0o+0683TSjPRQS
                      lDza/RU9xyKHPQB7XzqIt729WE3avDC2NbxyEwE9+1O8PWgD3LzhfZw9ysthvcAHML2Obk49UjyZ
                      vbE/qj3K0jU90ZnFPaxCFr0yTqi9jVNPvdRu87xQypE76H3SvIM8nj0SQRo9rNO5PDzDCb2asDw9
                      mJlXPPbCaj3GNou9KBdfPIWSwr0BIoY9l4wxvSpyNz1CL089rPW/PDDHs71ywmw9QMcFPI7fAD3I
                      T/K8b+SIPb3gsb1vhaY9GDIKvKhahL1U0JQ81O/GvG0Qdr26Xy49BFDjPKCzlzwQQCS9DHyGvcC6
                      eDuJwMc9kLIBvAbOJT2M7Ki8RvGZvcnXlT1sc7C8CEHGvQdNyD3Cr4C9mDyJvbErxD1Axn+7MUyS
                      PXABcDwBGsw95YbJvcDa8LpAlIC9YCypvWg7AjyVNrY9F4imPQ6WkL3SsJq9AdehPeW9uj2oVjo8
                      0ig3PQq6rb1QPzi8wOXHvKJtGD2CKGI98nUnPRpSIz0qH3I94GOhu5DdMLwrocI9QGIEvFcmtD32
                      Hxc9+MO6PERG5jzAZsW9oyRsvUUskb2Y1mg8F7idPaSYF71A+aE8OmN/PRTIDr2MA/A8cxlYvafs
                      sL2HpL29KNgFvMOpX72a/m49aG7vvHXSnT2qFzQ9EH8hvcElhj0wARy8NYujPVDkALzz7Ei9zIWp
                      vGCNUzs6jj69SRLKPRmpvj0aplY9xRyqvVbFIj02nlU943VNvVjsFLwgzLk7ip1GvXocaT2g8Vy7
                      vhVvPa6adT3A4Tg8yxyZvXgmsDxx3Yk9gP02PFBnqjt3uLu9WEhpvBKFfT3ukYe9oEzpOwBmgrye
                      jI69xvpVPcdvxD2AcJM7CJzmvKWHxr3yK5+9Y8mGPdbSAL0Pssc9GOmNvCaoEr3iFsm9dQTMvTI+
                      AT3p8sE9OZGaPcBg6bpOt1w9es1ZPWZ7Gb3d7Jk9si8VPZjUlLxQ3vK7krtAPWJ3RD2YSpc8g628
                      PQutuz2XPUe9WLZwvADAIrcR38E9MN08vLBhQTwoZl48Gu1DPa0vUr0m8p69HMbxPIBx0bv1lpm9
                      VvtCPa3Pxb3DGy+9YDikPO8kvb1dY4U9EOgUvIS+2Tx+WFo9cP9nvBc6cr2Jdp89uuAIPeqTCT0Q
                      YD48VE/rvFwq8zzoM5y8e2+RvZfcQL0Aro+6XBHRPJAKN7w1eIM9rSWGvUAtcLvn3iu9StE/PZJr
                      fT1aWFs9IAavvXCYKLzYPzM8DOy6vMC9mDxopw48/RiVvbYFRz0oaaE8OfSOPZyu3TyoXRw88JS6
                      vZB2BDw8WfY8IMqfvVnrqT1ioCE90PMXveiFn7wIAZO8zWpuvRd4tj1bL7I95mkkPZhfXzzjKiu9
                      d3fJvbhE3rytaHO9oP67vQInLz0sRbG8OvxUvZT0sLziKio9raeSPcmCsj1IR+W88KcePImtwD1I
                      laS9QGoUvcCcYjvXbLC90YDEPbFliT0gLY+8A2x0vaIeGz1Ya8c87fS5PbrwYT0jOqm91XrFPZ0V
                      vj2K6MO9M/1uvah+RDzVQsw94J6EPNDJK72A3Qm8mplTvdqINb0iQ1w9tXnEPavTl73Aqx08ouZ0
                      PRmfpT2Y5ik85UufPbx11zx4Pr48WMa2vUBhmbqdNGq9bSp1vbyG7jzKWXS9QTypPfmQtz0AJE27
                      z5m5PTUXpr0TO4+9s6mpvdVKjT23LnW9kZqrPUCbu7wSeSA9pKrwPNDJKb3tpq296OXEvaDfebtO
                      ypC9kj4zPQ1py70UuAy9mNTZvGzD5byJ28k9V559vT+fsL3rV8Y9FoISPR73PT0AFZ65E4IwvQdM
                      iD00GaI8gINFvCC1uDtSNY69I8sxvcgKy71AZLQ8Rj5yPcKDor1yrRw9l2IlvexvGb2A//I74PSP
                      PEp8cT263xO9PSJkvaDw8zsC6rG92wPMPQ+Irz33Aak93OX2PBEAlz3A0kG7Emt7PU4ni7292Cu9
                      aQXDPeIJaD03HLC9hwqEPX1NuT1oEUu8q9fIvXaeF73GQR09AFl/OgALML2qene9gT+0PcgrzL23
                      ta696sN5vaCW0TsWWDw9GVTHPYxz4Dw+TSw96GjBvLAMN7yzNb89wGcFvfhsjzzo2sO9mmAVvdf0
                      RL1WtX89H1q5vbDWRL3NSKU9rRxhveRzhb2N2p29m/2KPYKHKj00ZNs8ZxzLPXB/d72VIoW9oGwW
                      vbQInjywE927KJ0dvCo5kb2UgA696AyrPFqRk720xga9wazEPdyGEL1qTxK9BR6WPdPBhT3MXbq8
                      kkE2PdQCgLzmv1Q9qFgAPCjg3LwsKf08qkdfvROPwr2lv4o9oI6bu2L3Qz2JxrM9GNWrPOLhWD20
                      2eE8CCbtvHU0ib3XeDK9S3vEvWDmzLvzR749/5GCPaP4uz34BYE8gdnDPWho6rxcwgO9pVzMvTAy
                      37uA4Ly65G7sPAPdtL3g4I88gBeCO5G/sj3yG1g9QOxIvaDV3rxgLbi93o8vPf0NgL1A50G8Za2W
                      PYklzD1M5dy8Q8PFvRC4Hzx6jkQ9KnEUPZ01vD1rTr69opO9verpaD22a2o9rdpevSvhs70hR7A9
                      9xyaPb5Xqb0E1u080xJbvan4sj2I37a8X12CPTqgTj0pVaE9oEXdO0f3pz0V67Y9SZmbPZi5szxr
                      r4w9Z0pvve3Bs720+5Q8yH6tPG2Noz2IOIU8fVK6vVIgir0Kzzy9nTwevaBKd7vj2Zm9wOlAvfgu
                      mDwVarw9qKGNPErAeD1lMKM9AKm6vYhfyLy+uwc9MNYnPHQvorydEFq9HXNwvRDwGTzRvZY9aOS2
                      vDMSxL0Ee808ADu0vSVHmb3auU09KqVGPcRt1TxA4lC987MgvRjedbyA+BY8kfWvPR3lT70kONo8
                      lGafPCcWsT3A63m9rnlePcfVnT1dej+9wqoMPTDpIDwGKgQ95L77PIQlgL3aRAk9dkJ3PfcmMr1B
                      zJk9To0nPTdbkT1A6Ka99x4yvUHDyD3Vv7c9U2ewvXm+vz3sBIO87vwFPYA5RL1y5G09bqeSvVD6
                      J7zwAzu9oCp3uwfftT0oHK28fa2gvb0sa73hLr49LMX2vPIJpb3a8mI9oDL8vABvmb0EnwK9LQqO
                      PWRy6zz0kM48yGixvNHPwj2EueY87l0zPYhV2Ly9EMA9ySa4PR+Nrj3HVzW9dGL2vDNjdr35jMI9
                      ozTJvSDOr70ARsi6SEG3PALMJj0OChM9oBqQvS+KlT3yNTs9d4e8vT1KqD2bUMI9WG3RvDAZJjwS
                      Kgo9jFDwvCbEAL3Inpk8xL/1PCi5pbxgZd67Xf81vdTC5DzX0pc9KrswPX2Os70mNCM9Xe4cvdGn
                      lD09vW29QOqDvJK9bD0dM5I9Ol9IvcA4CrwAhik8lJkZvQ+5mD3MTBK9yMCHvBfhQr06DEw9GnwX
                      vdVZnj0KEQw9DmczPYgi0ryYy268kFhVvS2GuT2e6Bw94GfQvKdSiT39EWK90G9LvcP4mL0qAI29
                      yySKPXVcq729dye9WnJZPXlFpT1DlL89Qg6DvfPEnT3gMIy7UDdyvcdNv70QljO8p8R2veh7pr1o
                      dJY8csa1veyLsDy3rDq9tCjcPCq1aT0STQA9Ih62vRoETr0A/K46v4myPb/fuz36NUk9b8OzPX5n
                      NT3JwL49iEuKvIwVh7wr64o94Mffu/gulLzz3pa9IJn6O6+atT1ACXq7IAKHu6iOmLx0bOC8yiMv
                      PQUPob3Ey988uCuqvbD8aLxQTYi7hoSmvSMXhD1nIog9JX24PYUjsj1Ivty89+scvUj4kzxVZJa9
                      GDlivMAs8LywCZe7yNyfPPx6Gb27uJ692PaTvFbVAz0/z6s9AqJoPeNmuz38n4a9sLNiPBA5S71S
                      nz49/xzMvaji17x/sLe9kPEyvav3nT0aUku90wKFPej5QLxCcou9GPQivC2GRb23ncc9bPuJPNZb
                      aD0jqEa9aoeBvS9tkz36O3q90hWNvdriYb0gncK7GkZ8vYBvjTt2Nkc90DWtvRCGDTycBto8Ha22
                      PcpXfz2HJX+9xr2ivY16q71b1J095CzmPPF0mz0ga9u85olMPe+myj3iKaG9gDxMvDg3x7xK/RA9
                      RQOzvUMMn72Cnp+9QDNzvZ5KWT0Xl6U9UPtLPIuTlL0ogyS8gQqjPRaQCj1Szm49Kl8bvYcac71l
                      Fse98AYIvKf6rj0SgmY9oOwPvdRgC73MEdi8EPcjvKMhfL0G7wq9Axp4vaCgxDuBG7g9DAmovMDi
                      kr1ggo67k46RPa1rkT3Z+7M9qCbVvNAhSL3MzNW8MK58vDC3HDwUIgS9sN4iPHnvwj1lcaK9oKNe
                      vcN4kz1w7km8wOIWPDIkDD0KmB49z7DGPTrRt73DjFe9wMtovBeya724L6M8tmJHPbehxD3Ajyq7
                      INaxO7r3dD0A9hC80IXzuwAG1zngbZG9KBiYvPPDVL1x+as99lJlPWzewbwCpnM9OvBhveTH8jzA
                      3Hs79LGPvJjDorxkodM8CTCOPdKMx73QU7a99HqjPDDHezxDXsQ9GMBePM0kkD0b3rY9nT9NvYzh
                      2zwQOT08psR/PQuInD2ja1O9g+s9vZ8mhz06WDg9KAHKvSs4zD1RD4E9jVTGvSonK71YRaE8FLmZ
                      vANxUb0B8JY9Ump+PV9QxD2g4CY7wDwVvWyLgzwoibI8rOf8PGU8tj2ojLm92OCkPIFkhD29OKO9
                      AKsGur7rWj2rSJg9qA14vJTFhrwnlX+9bBQUvSIENz2SN089uB2kvLY8Xz0Cfic9wL/CvCGcwz3B
                      /oI9LtGqvZjFXrzp7ow9IuJyPZIHZT0S0Fg9eL2bvYuCjz1gr5y79kRbPSFnnD2Kqh69IDj2O1hh
                      X7wAKSa6DqNvPSAQVr1KcRs9UI0rvezA6DyqQni9+s4TvcLNGz2Hkce9jTPHPcC0h7q/B8y9mzmL
                      PaA1h7zBzIE9FZOKvWBiVzvZwJk9KA6jPOA547yYLoK8sU+IPWbfDD1g/Pk7SNyUvTJJLj2/XYo9
                      wuRNPbCcNTzJYZg9qHCXPKH8uT0cS848ReuKvaC637xoGYM8MEcGvFiUvbwAYLa4RntgPfAvWbzQ
                      SXu8ciRnPTB20LsFBcw95hAIvRDddb11N8K9FFG+vIp0wr3PnJg9vVtXvajoQbwuhGI98EkRvQVm
                      hT0sp+e8cmJCPdKPVz2AERC8YgkuPcPbyb25CJ49C+m8PYlWqD2IEb29Y73DPVg7Qbz0RPQ8rUFn
                      veGIrT1KrTU91eGjvcYfQD1Oo4S9dcKkvYCiT7qjRji9B9O0PQOPhz2qI729rX9TvVY+dD1Z1Mc9
                      5NWKvbAEMjxb9a+9ML5CPB34Ob2eeT89LN3GvIISSD1UV4e9oDcnu4DLqDriRQE9QYKvPXc8kj3E
                      NAe9pEESvfhegLyTtyG9Uik4PTD48Tvx0Jw9DmIyPV3yTr2b2p+9AOYzOTSw3zySyUo9aGW+vYzg
                      iL2ezE49DYzEPYKps70+m4S9lnGevZ2LkL0KxhS97fN2vdk7tD3Hwxu99dqPPWiMLLxA2Fy9woM6
                      PRgZlTxUMPg8MCUBPBisHDxv6pk9eeqqPSB5/ru+dEA96NKxvIi0pjzymQs9t2W/PR3Bbb3PCbK9
                      IBrvu710Hr0zh5w9hYiHvTC1or0oa4e8EOVBvZrIl72RErI9zMAPvcBmIDywAAU8xeaMvdBzfbxA
                      rFS8IBfLu+NHuD2jQKY9YshFPdWEub0tSn+9wmpvPXIxFT1iPRw9DEPDPPDhPryw+Gu9qjKavQNW
                      vr1hdcs9Q6OPvey6+rxocLm8eVSYPWjVW7z6PEm9/WWZPWgQozxUBeq8aXW0PWHcoz1oFJW9Kxev
                      vfZMNj3R5Kk9ELU1vQCK7Lm6CSW9wpgwPfX4vb391ri9veR9vZK3Mz2wsXS94ysjvTyBEb1iy3w9
                      M6kgvaCxXL2iCl49LSbIPdh7TzzcdAW9BmSAvaBzwzvW04W91uxcPcvyob0zXIM9OuNBPQKlJT1g
                      WLe7Vhs8Pdtvvb0kEBm92KWmPJP9Qb0AkTI72BY+vE4Ldj1PJcc9uMjWvMz6xjyugUc9E29QvQNz
                      qz0a0Jq9eBTHvAB6kLuz76g9oA1Vu01UTr2joFm9e2y4vToxPr3B3K49on9aPcHYoz3S1Ck9/gt+
                      PYo7Mj0oJb080hoSPeZylb1g3Re77GfvvGOGYb1+oIa9AAalOmATYTugSvK7NjaFvfoaCL1wPSy9
                      us1GvTMlj73y7Eo9Ek5aPbyKA71QBna9V0iGPcBRg73fZr09rIrmvLPzWr3Ooxw9wosqPR8Bqz2g
                      Yqa7wE6tuujaKjzAo5a8f+SyvVq6m71uq0E9lGL4PGqvRj01q7E9cLW+vQ9rtT2EXge9phhMPbPZ
                      Wb2ANrM6iF7OvCu8ub11pZw9oNtxu+iekb0AU5i5sLKru/ueoD3RssI9a5OiPaOed7327EA9GtSM
                      vW43Zj1KNk89Bu+fvTSsxLzocio8g7uQvbQz8DwAkDe5AmhaPRZzWj1tEbQ95XeqPdTEujzNHCy9
                      I8+9PSqzXr11WYG95e+KPbFlrD1AFQq89BiJvJhlmL2Apti8cJq1vQk6kj3vDaM92PmHvCgdjjz1
                      v8Y9o3GqvRqHFD0UBr68EW2UPeIXrr1WWH890oMdPSz4vrwNUMW9kxw5vVZCEz2qS0c9lTqdvYaF
                      o70uoIG9V3ZSvWh0pjw6aUa9e4S+vYDILrwqRnQ9AO0uugb+iL0CtmQ9/lkkPZhiXLxd8sO9MA9a
                      vU8zgD2AkXO9AntlPXM2v73620I9gBhhvfmsnz0YTrg8MKMRvChqErxZnbo9sZuJPdtUnz2UXsA8
                      zGKWPEzS3rw8VOo8enhqPZDvLbzy0jA9NJKOvOuHj73tsTK9x5S+PVuGyj2YMhC8guJtPVjeVDyz
                      2ay9QIEyu/Fcwj1a7Kq9KNSsvARugL32VR89tnMFPb4bUj1vdL49BFbVPMpKnb3rZ8S9QLPROi2C
                      pT36Mq69jYqqvQC4OL26pCw9yl5OvfHUqT2AZc68YMO1PCwyuLzAaNa8gD4EPPIoBD3sEvM8sBBO
                      vdAODL3wYC+9OA6NvBitn73WMqG9Wo0EvTjI9ryKz3K9qAK7PHpAbz3hmo89i5S7PXzzE70Aeh05
                      feLIvVm4sj2CzFo9MDCru4OCW72vBLO9rX9XvUjZsTyAzne88lxcPdbYIz0tgFC9F851vb+ev73g
                      cMg8CiRJPbUhgD07RZo9nf5evVddZr1ysbq9O53DvaLaCj1Pe6+9WMl4vKdvtr2a0VG9oB8Vu3DL
                      Fb1gpj+7g793veiVvzxAamC8fTOUvQ+qwb2pKoU9SMTSvKR/1jwWSRS9AE5RvSauEL0IoqK9v5zH
                      vegDXLyf7o09lztivUAYLrtGmxi9e1THvSwerjyI/728ThpoPR46kr2CJL+9FFwCvb0UvT1sTbC8
                      x9YwvYBsqjpNBq29dTOlPTPFpr00irY8CWWkPbREwzwgQb+8hzWNPTYzhb2Qkl+9XUiqPT2Swb1l
                      ucW9XxzEPXSWjjzU+AK9bPSZPHoRIr2Uite8+ptWvd/DzL1w8Si9HTcovaPPtr30rNI8MpQqPfPZ
                      r72tAaU9990svQqgj71I1os8JPPVPHsXmr3uuQw9sPtcvKBEmDvwzXO82hF5PSh4o7xga+C7Hf1G
                      vfSNFb025Rs9n2K7vfeUeb1T1YM91HalPO27HL1gI46846G8vYC1+zoCQhU9IZfIPQnZvj1WYKy9
                      4pliPa7uMD2zfqc9nw6vvYVoyb13p3S9sZGFPbBJ/7tC/xs9P+KDPZhcgjyIhI683aeNveDbb70A
                      2RQ6Q/5Uvd++pT2EkNk8ko15PcUAnb3mXEQ9s6gyvZdmmz06MFQ9o/VMvfrGRz3AcXM8GAEaPMfG
                      gj1Ahl+8elvLvUBT9DoY2uC8SKa9vR0NyD1t/pQ9dLiDPMKzor3fWsq9kLYUvaofX71C/UY9zgQ/
                      PZJAkL1fy609udmePQkIpD1gf6Q7YBVJvfRfzDySRRU9SHDHvWKEaj31CaE9SE6nvIBk8rst53G9
                      L5awvXgxwr2WTTg9wyKZvRkeyj3IYIg8bKr2vBhjwzyA1jg8gNecuoKbRD2AFq46oHipvCnLkT1k
                      h9E8Qa7JPYDs+LvA1mk8WBAgvJc9db2uHXE9d2ZNvVKHDz1SggU9pT6APdgBkLzG2p+9mNIxvFjg
                      DTz9wWK9d3nEvcqwZj29Va09CgM7Pdmcuz1X8Fe9FjY5PSfFoz3P7rA9MwK0vWP0LL1Aegk7yEyl
                      vWAZgDug6ho7y6KZPU2tvT3oI8q8pl9cPZg6Ljx6uCC9gH9uPGdFHL1KnRM9RKHzPPsazD0A2Fs8
                      M0/KvbbUCj2QEne96LuWPGhyn7z92ZS9mRGiPTLHub33QDG91LgCvahFpbxUXtO84FqtvLaifj2d
                      5Xa9GrGhvXieib34GLy9jj1wPYZ7rL0A5ke5wGVQvHvYn71o69e8UH07PKuAjj2m9xS9fvk0PcoN
                      gr1WLpO9z0GgPYgKqb0kC+c8EMVcPOfFM70H/n+9wB+NPICOr7roXsu8yuIevQB0sbwsc4S9oiEJ
                      PUZ/EL2fZ7m91OCPPGzF1rzyXH89iESjPLzYDb1ht4o9je6dPbK4XD3Azsq8bbmQvWd2Tr0AC4G5
                      AEZSuZC0p72RAY49PS2svVlLgD0ffIw9YoF7PTiWxb3ynU891HgFvat1gD2wr3O8Vf/BPVROgzxy
                      oAI9g/a6PWLrdj3hqsI9MphYPVkDuT2QHkK8tRu7PZIPAz3PiKo9qC3tvCbLbz2A/Cc8IjLCvUjL
                      pzyz7Ci94MQmvYC/izs5L6Y9+A+xPP7ZRz3hHMs9VMDYPGp+Ez1hdqc9xDL9PHruOz1phqs9p7rK
                      vSJ8TT0ftLk9GLtuPPTdgb2azGm9qynGPfT/hbzCLI690ghvPfneqj36yTU9TJaqPNWryD0gVpQ7
                      5RrFvfkRrD1COF490BZVvUDYJr1LppA90B1cPADLeLzkEwO9vcqHPViBLbydAJk90gQcPd6mHj0L
                      nq89X2qMPRkluz3N7B69AkgrPY7CmL3a+qa9wybEPcerMb3V/5a9YBtnvSyD9zy6Ok49DSgivRZW
                      Cb0s5Lg88lZrPQBPYjvmnw69198ovS1Imj3wyh68le+VPQD4pbgbto09FIGlPEUEgT2ABDS8eICV
                      PEcNlz2Lm6296NEPvFtspr1zKiS9iHGAvbZWgL2jZp89mmw6vaghy70MMLo8sQGlPYJrNj3jBk+9
                      lESgvJi4ZLxwLzy9/n4pPdBWaL1rDac9AHusvGEEkD0q0bS9yVO9PZsboD3DWba9wk5jPaCFgDvU
                      3v08ImUlPQDqcbsobrI8jgcdPbrRC70qb229JAOKvTiAkbz05QS9DgAqPfL4dT3hyMQ9/NUEvTYw
                      GD0Az2+8wBcvO9DWfTx4Spw8VKW1PCAEyjyknvE8wFB3vT57Qz0A4Vu7bPP6vICWnrogDIE8FDTw
                      PADpC73sXc283BTjPL/Nwr2Zeb49QGIrvR7ll72m5I+9lB7FPABqfbwAOcu8T0eXPTmXjD37XMI9
                      2pRGPSgKrbxvlLm9/eq1vaAVrr2A4kA8UOBcvABhyjxTzZy9PThbvY9Xnz1yRWk9vrYqPf5uMD2e
                      ATM9mwemPZ9iqz33Th29ouusvaxq6bwUBs68rs9gPQ82x72OgYi9VtSovbACNjx6H3q9OS2WPXcS
                      RL1gsaW7gLTGvFCGTL0nrrk9xiMkPXRzgLwDbsi9aBxZvFgI5byo5aS8YOCavHTvwTzDd8Q9HZiM
                      PQQlFr3AwyC90Ar2Oxlymj1SIl895qB3PY7lgL1QqlY80FKtu4WSm71Kbj09YtdBPQiY0bxgVCK9
                      AKiovAAXajxoX8e9Y/GMPfBdcDzrHKc9IIWRvVL9jr3fVMw9gPYvvTl+rD3AAjs8GiqWvWNUdb26
                      XRI94tKsvcSS6DxNyZO9YxIcvUDwPL1gzFO9z9/FPRLgbD0Q/TW9GA1kPFhgMTz5K709XPfMPHLV
                      sb0aWzi92SrGPZrHA70L77s9I5qCPQBfKzs4cpO9l3WSPcjBpL2o3ve8odnCPVZZcj1AXQS72CMy
                      PGQf5jyqGCS9BYGlvWLwDz3mVnw9AJZ5u9yr3jwIKZu8qOONvWp3Xz1AFHq8AP3CO+W5qT2AIuO7
                      ihhGvRJFZj2aPE49tLOjvB/NoD2Ycim86GqqvEz5t7zK22Q9qq5aPVVEqz0CJ4m9fRSrPRz7DL2D
                      6cO9nvRSPUo5HD1QSDw861mgvVCkzbvLZ8a9L5HJPdJbMj3MQve8kCUdvAlhuT2g//C7U58xvVSA
                      rjwjXLe9owqnPehQiL16W3e9nUYgvR5zdD1GFSM9PTGuvSQDiL0jmjC9TPHHPIrbhr2yQEI97PKH
                      PGDKjzxi0k09alSrvTAbdbxGTk49zBryvPX6qz3kexG9NAzhPOgmUDzgetA7beSzPcdQPb0Y2028
                      efXIPXDBRzxiJYC9PGYHvZg5V7wHYim9MN/Zu9cVxb1Ozm894Ea/PGU7nj1aOkI9UG0ZvMLyfT3Y
                      tJA8FL7FPBElzD3tkCu9qhDMvU5zdT1smqu88hsmPbIuND3McsU8QmpTPUzC8zzQzLw7YFksO9V9
                      wz2hV5I9Oi5GvWBArLvYaDi88sYuPQAHZr3Tw609vl2svXeLQb0Q+nO82B4OvODA4btYli+8IeyC
                      PYLBDj0aWHA9gJqVu/oOir0Yh/W8CPKnPBAfITxBfMY9VT2nPQKzSj1BxJQ9AOc1vE7CXz2/woU9
                      wDyBvADdqzzqjDS98J8vPJ8fxj3BN549Gp5pvQASmDzAfaW8or1HPSYsfj0A3j68bWxPvaeNnz2t
                      ApI9VAnkvIAg4TugPvA7mKa4vH2wnb2meVE9jkesvZiXFTzYsp69UK5/PNUOoj06lk49kuFFPcnw
                      uT3ZPME97AL6vNpgqr2ok288HA4AvVDKvLug2wC799hcvdB6+jvYGre9z5u0vcMisL1+kkU9YE8C
                      O+Y5SD3K/2e9gFH4upK1Lj2gXvi7s1WlvSADjL2wojC80NNbvDNClj0KCJK92d2uPQOhkT2d3hu9
                      04S/vb32qD3ytE09cWy9PWvsyL1iaRk9mt4lvZu4vj1oPos8fWJnvbCgbDw9mWW9CEaDPHZUfz3n
                      y0e9QFvJvL2Kk72YWgk8lKf8vEtbrr0gdYm9XM7vPLHjwz3Ajgm9YLDHvMkMxD24jcu9kS7MPYhx
                      o71QVj+8nnibvUz38rydDK494mItPb00rL3VipC9/Y9ivb0YqT2Amrq81NHLvCLyir0KAGk9E5i/
                      Pap5Uj2MfJy8DzmePQo8fD0A2qw7hVWVPSyB2zxGAks9mu06PSKlKj0KQw69oKg/vXy5/jxjBJK9
                      MIXwO7S+BL2vLbQ9MEBQvCowMj2ywUc9LD3fvArnxL1UkqM8kLArvQWAkD0g04i7MG5nvQWCir0o
                      W3S8cMhQPGlehj1sDOs85ZzJPSw0obxw0B68/faVvU0sT71d2so9VACVPCAphb1gpL+9MN0ZvNHL
                      tj0NjF+93fC3PX2kvT1A6469jDaIvZLBDD3io1Y9fxSNPdAzYrwdplS9yqawvcC9v7y0MLI8JRCw
                      PW88iD3s0oy8lN6evJnwuj2zccs9uzCPvUIqSD0wm3k80DXDvXiao7w6vXY9XWhEvbofub2e2zo9
                      ij6ZvS5Hez20buE8MP/cO3BMbbwEKOI8ELtcvCNMyD0A74Q7C36IPVA1NrxwfWI8SyXCvTMMvz0Y
                      ioO9P5bDPSyw3jxKg3Y92BTzvApRDz3e52I9sIJjvKN2xr3q0aK9XgsePSg4CbwtgTy9+maZvfe5
                      J72Ct0k9AMxQup2Vf70okpO9DObIvC+bnD2aeQK9GB2YvIhmuTw6tbm9QLrIPI7yNz1j48a9KDWL
                      PPklxj0AYUq92AE5PKAnBjuKYi+9toR8PYi4kr0O/Vw9AIL/u3tZnb3HNZQ9Co0TPTMJqL3qkY69
                      owXDPaeiQ71Ujr2809HEPf70dj35fbI92pw7Pefduz2jCW+9dR2uvZjXYLyXk2G9ANOZveDl6Ly4
                      Ep+8TdaBvdaah70tvGa9LHGCveoXTT1yfA897pM6PWkKrD0bzJg9YNTrO0BudTvEYto8gAYUuoJp
                      fT1wx1s82kBCvYIZJj2QLBk84EvcvGEozD2zU1O91dPHPSawDT1zAJe96JBRPMQk4TzYccy90Nib
                      u7NHur2mPpG9AIOKO2NVfL04S7M8zOaBPCo4wL3s/cq8SqIbvcUjkj0ApQ69DSjMPbWYlL1oFwg8
                      A9x0vVobcb2YIL+9LW6UPUAFETxl2rk9/TfAPbf9uz1owBA8dAaqvGTdBb1qcbC9sTWgPUBcVTwa
                      lMq9FppoPSX8xb1Ma9Q8Zy99vQCK97zMZrS86Ev0vECbWLzYx0I86VGFPce3nj13UDm9Pd2FveUy
                      kD3GjWw97QJivQpsNr1Tkb69aFi7vNYuET3H94o9NBmTvA0Me71sTYO8QHXKPN60bT0+HIW94EvM
                      vSIINT2gooi747a2Pdy43DxYsAC8nzvJPeDM+bziwQM96Je4vUQC4TzVgbE9rAilvFQ5+TxqI0g9
                      QOmhPGv/jb2jby+9qmpkvWbKjL2iiK29bBeqvJNqsr2iIjA9nEzVPDB3xL1ls6S9SKuUPHwd+zwa
                      ERW9EGl6vSYMfT15y4s9LuBiPZhvXbxawiK9LR1LvagPT7yqWbG9f3e7vaDz1ruzysg99W2avTj5
                      77yq6n09AI+EvMcVvT0vHK29k7+5PayGyryTwYY9UtHJvduAnT3vUsW9N9SwPcDHQzyYei28cJ55
                      vIZ8eD0aB129++qAPVjVT7ygQv+7x0M8vYbKlr2GU4+9qGQrvC37tT2PA5A9nY2DPWgnp73k4+w8
                      cFl5vP0Wsj240ac80lRzPZ9+kD23LmK989eXvahrpzyVHoQ9wwc7vUDGa7sxGq49CpOFva7QGz32
                      DBY9la2qPUpMvr2Mx8K8iZjMPe4/ZD3SGr29ofKFPdXmxT3XQL29OrWSvQUyyD216cu9cKwlPC3L
                      oz2Yofm8LQWUvV2iGb33gnu9xpFWPd6BAj1niak9UbeNPbC0zrslcp29ZwfMPZoGWz3Oxhk9Vxdz
                      vfywEr0y7A89omUMPZhBebyUUIq9m/vHPeKsQT37d7+9KraivdK8WT2EIdM844jJPWYhZT3FY5C9
                      mkYAvdqUDT1zC6U9AH74uepyaL1zpZM9MIwgvf09Kr1Q9Ja9MMUQvHqJCL3hKaE9QE/RvPoxEb2s
                      e+28Q5R6vSPNfr2AfoM8aL5pvDPrsD3CR7u9wLa1PHPeSr3AMTM8QLZsvRCKKDx7SJo9NhNRPXC6
                      azyf6cU9WJOyPOgfqzzQZ0s8+IrKvPWDx72Nko89upZlPcbtQj0kjoC9O+K4vXiEzL2qmDg9g9mn
                      PYCItTqwMvw74Ay0PObVUD3SRWM9betDveFGlj1M4va8WHCevTqiq70N94M96Mc2PENHiz1Wmoi9
                      fqUPPfCNwL3Adoq6Vr6Dvf7Bbz0HIHa9QIMUvejWITxM+fs8WIOtvSN1M714RJA8HOfePJ75fD3V
                      ZoG9YsUGPcc9ZL0Wu6C9YOi9PM1yvb10JIa8oMYKu21KeL3NAZc9GFF3vGB6Ar2whAi8jHexvP0D
                      Yb0g9ou9ix2VPXDfWL1meT49UnEYPQICBj2Iz6m81pkMPXjOsL24w/a8sNaEu+hPBDzoy328pIYW
                      vapwRr2GkxQ9tDzMPDEnhj1KOA49TBGkvI21hr0R66o9mX6uPcuSuz0NnUG9oFRsvWbACT1/qcy9
                      13XKPWNowz0zk6C9jXolvdUQlL28eOs8apB5vZ1fyL3vX6E9mtAsPRx71TzwYUa8LBa9vOCTgbuK
                      TEK96jNpPZs8q70q8wo969iyPREjwT26hgg9GBBiPDD04bsy3Qs9kBM9vGmPlD219sE9pD7ZPJfn
                      YL04zva8bK+5PDC6Vzzh+LE94MTAO6zUhby91ZM9MmUnPV17u730dLI8prmNvTj0grzjm5Q9mhtl
                      vZSJz7wGsQG9i4SVPdkKxD3AZky9t6p7vVhoWTzxuYw9jTmrvcwe2bwARCW9wE1aO+ZTUz3bGsG9
                      MDyVO6U3gj1zCqM9VN6HvbPemT0oDFW8yC2VPChmrLyqoT+9MMGovYB2ubvguYC9jpQaPVHpgj2A
                      zIq64kQiPbKMOT3Tr3+9aoFIvWFItz0hkKM9g1m6vQDFPzsQzHg8aMxBvO5/OT1SjjI9KkU4vVrf
                      lL1qVjG9SC7IvSAHbr1AiQS9AGjmOfKdm71u12U9UIC0vc62dT3ayDI9rOvWvC6El70bOIg9GxeB
                      PT25hT0tbUO96CA2PNPWK72SYDA9ZZ6IvbHhwj1tlke9Yog9PY4GTD0l+Ju9ZVemvRo8fT2aqTW9
                      qhozPdi0ib0qMna9qcHCPbSizzzAvm27mH/pvJAqDL19xVi9SCq/vHuggD1uqpO9PsKevbNGpT0f
                      6pc9J35cvfkGxD3SXm49uuGlvbQU2TxtCMa9DIyKvK72q72vt5g98/WxvdCafr00rYo87OuVvOpq
                      Wb0y8a69Sg96PfOdlz2eWDo9MIIhvK5Qej13slu9AjydvQZAZz1AIQa9g7iAPUh19bzX82294LPi
                      uzHQhT1jQJw9w8M2vSrTx73Bp5s9LGWcvCrwdD1gO7W8nb2evUIsIT2uAKe9YWu4Pc90pD3Uib+8
                      tOTmvIBTqb03yaU9IgmCvbiOvb3jiDa9TqdwPfB9VLz0M4S9wGjIOsmpij3Ab8G8+1y9PQnsqz2Q
                      hxG8AAxDO1nryD1aEki9NOqfvGT50DyQZFu9MndkPYCpOjyAvi29jMcKvdbOHj0HJYA93vMJPTVg
                      lr2l+5W9wBmtPBJuxb1ykFM9gHcBvTJHUz2hbsA9QUidPSZuEL3iOQQ9CkRIvTOuN73rOqg9oPVP
                      u4zG+jzst6+8KVmVPQXogT3ATWG9GBAUPIBMlr3Kd8m9WMwEPGDIirsUf+W8tTe7PYvmgD3A1D+8
                      Wh0fvZrdMb1ztqo94pdfPSwt6jyqD0M9KDFTvBggx702yS89kElovBi8Rjw16YS9DMkIvagyLDyu
                      6009u4mrPbgv4rzUjPm8EgcwPdTOijxxeaE9mvZsPb3xSr0gCsu81KC7vFokQb0SeWE9dh0YvcQC
                      5DzFNMA98aO4PRaBFL3wNnG81B2dvEhWkDydNps9AMKhO4B+jbsiIEY9LcVovQDCJrtdFoO92DmL
                      vBigKzxUa9u8wD3JPGDVvL2mA4a97MyDPErNUj19Xck9QM/LunCJfDxBkJs9BSO5PYRZB71kxeU8
                      vFLtPD1rfr2tTZy94NtyvcHJxj2RG6U9Ch9gvQi7o70a3we9g6lkveECwz32nVA9sPyUu1SAljwo
                      Leu8iK3kvHS7nzwiKz09r7ykPW3rpz2kwNY8EzCbvUd7ur00LLE80GSbO1MtHb1sm5G8LCSOvI4G
                      pL0wLWq8tNm+PES0/DySPhc9GPKovQ/NsD0AI8E7AEDVuCTJ1jwAaBQ46CbdvMPmjz0CnGg9O1Kj
                      Pce1vz3Bzq09sDiIO0ygxrznqcc9AN7eOwBGaLt2YDk9ygU2vXo7Cj3Y/wW81Ky3vAcfYr1Stca9
                      0g29vTOEYr1CpIy9I35ZvWi4ILwKgUU9W7a5PZcyIr3LWKI9cCuDvZDgsb2r/Iw9QPWTvD0HVr3A
                      2Bg8NAXfPKAnYrtUjqq8PughPcuCtb1dh8i9YM9luxr6o71SODw9cPgvvcx9jbyWfxK9Q+J5vRyn
                      B70sWJ68mACJvYBHq7toHlE8cLJWvKpLOD1Q4wK9mTmDPTLOwr21QoE96MwQPKtuyr0BZ7Y9sIYI
                      vGLHfz0CUyo9+iE2vTq7hL2TPLI9hWG+PUayWj2Q+2+9Wl1sPTrOZb0bPLK9d0CaPRvYmb3AkQ28
                      0e2vPdAYXzxMlJO8qGobPAD+k7kgxcs7aqOyveMPxD140cQ8M6kvvfkpwz3WiY29X+2fPbPjwb0w
                      oy08AP9fPJvyjb1m4Je9FmlFPSvsjD0CR5y9+lgIPVEeyj3h0oo92B5FPO3jlz1AMJ68qn8KvZd9
                      tz0MbAO9sObAO0BTzTqM+sG8ToBKPYsgo70YmT48aKiEPCWArb3DV7Y9gAHKOhIESz0QosW9LfQl
                      vXjXjzwAelA5KwKYPQ2ecb2oH8u8zCuqvNCeYjwsqOg8hl8iPeDNvLs4NNC8pACDvStnkz2g7KW8
                      0D9oPFv6xj3Mlt282f6tParbbD0NPIG9yZikPUHWxj0q0zq9zrclPaxCkzzOOHU9qIQxPAjLmL17
                      9cQ9Uhd3PXC/qr2tdbQ9BGD0PKBtFL1w+QK9sjYdPZgpeDzp9Z09du+Svb45PD0+EXc9OqEgPfj1
                      izwwWy+8Tsx3PSjEmbwTUFS9y7LGvc3icL0/sbi9Il2JvSvuoD2wIqc7VBwWvb7YDT1Uhoo8lgB9
                      PVSGpjzbbMa9IsRUPd4Mpr20cIA867G/PX4MiL2tv2G9pQGWPVhFcLxedlY9H1qOPUAjpbo+91E9
                      OI2MvJDEVb0BYJE9ygVWvQCIGzsqoCI9/d8kvT6aKj1HEmS9ioAGPU0BzL3Eh4a9orRMPS5hCj2X
                      pbq9HfpYvWZ4Oz1kZ988gE2cuuqsbz1AMbq9INKlvQP9L72V+r494BLfO3DMNzwgrnO96jmDvezj
                      +rxen0A9mJqnvIBQrDyYGE48xmKivVtEw72NEUa901a4veD+nDzUc688xN/kPL4yMz0wsDw87sNK
                      PQdjmD34Gca8Sb+zPULZwr0TdiC9pHARvVNvGr0s29A84oggPWhfVrwdrV+9IMqHu/04hb3a6RA9
                      LGDIvFB1Gr2FfLi9a8euvU6hez0E1w69qLv1vMp6cD0hKcA9QJIrO4hm2LwYM5+9hcDFvYKTlL3U
                      6IC8Hea7vRHerz1NW2C9PyuKPUPoVL3bDoo9qW/EPSjwubwa8BU9DBWwPOD63zstxbE9/tgfPVf2
                      oj20CvG8UJFLvTbqVT0DI1y9ju9KPdHyyj1Cu0M9gO2euzoSdT3SQMG9+Dq9vABJczuVAZQ9PMIM
                      veBw87yhVLU9aKFVvHrber2g1Uy7qoh8PWBWMzv21xY96FMEPNAJqjsisS89mrRkPVLBBz3zVLu9
                      DWg2vaj3aTwQYzu8ak9hveonHb1ItaO81crEvTsop73ZK4Y99h0SPeNetL2dXUy98ppVPS5VhL3V
                      wKQ9QaSGPYYieT3a31m94tU/PWBskLxCfA89nQNLvZ8DuD3VXMk94BmSvVcwmj2ZYMc9eq2EvTYT
                      ej2Xsrw9b46qPWrJAD1tdbk9EGO9vRShobz+xKu9mk27veiUtTz0/7i8l+SMPdB5/LsDWmS9VjdV
                      PUgSuzwK/ba9g35gvaGBrT1BMso9YMKXu1NtqT1z6ji9kJB/POqNFD36aBA9uIvRvF0+yL2jPIU9
                      ICWzPIJRs70A3Be9OBbGPF8shD21ALu9bKzMvIAGfb0DzsU9tMPqPIJ/JD1GMSg9pVyaPVAcXjw2
                      ipi9A/iFPeplwb0Qfww89lsUPRJXLj1oaWU8xjMJvQAtYzu3X4I9WBY1PDEynT3nUpU96KsGvLEv
                      kj1MQZ88NFyBPENQUr0yoTU9KIeHvUC2F7tttZs9Q//FvZRXn7zTSl+9G/ijvct7mD3UfI88ejUN
                      PSxz/rxWiBw9VdOUPYtroj01vcm9YC0LOyBqAr1eOTU96Jo5vMFzuj1TnU+9TomUvdhIbzyYf5y9
                      oCxKu0NwoT1wemW8r0vMPT7SZT20CxO9WVGrPYCZq7zMWfe8qTqTPeUMnT2Az0e99zW2vSesoj3w
                      SjO9T0CLPV1jZ713Bju9CK6DvQDYqzmEPtQ8MEp9vdrFu71Em/o8bNqCvQrMgr0AjP6829ytPR0O
                      ub3BMoY92Z+XPcYGHD0mARM9FdGpPZ0xrj3+ogY9h3+JPX3EWL1DYle9evIlPYVHjr2IxeS8fuUz
                      Pb0Xer2jNzi9MDBvPHc8rD27K6U9WIcqPM8yuj1zYK09UvmlvXMVkD1OISg95PTuPHrAMD2NgaI9
                      ZXm8vbDx0DugzSI7XvqdveyCqDz/ILw9RyCAPSDVoDzQmBm9XtBCPcx8gDxgkLy7OmAYvSkDhz2u
                      0Zq9WP9vvORVh70OEDk9xcqdPS4yiL1fyME9VMfivJBjV7wU6eI87++bPQhaqLyYAY68qzDBPUAw
                      fzxJ2Jc9JyDEPefxar2w0dW7O46iPaAKMbtsrf+8TpZUPcfTgj37ypm9MNEZPCjgjb3iXmA93xSt
                      PUc0Wr2Cnsi9S5e6vQAvIjrSbi89ZWTLPQ1AHL1Bc7A9RdmbvZjMl72Agq88+sw5vUrmLT3EwRe9
                      AEU7PEAPRrwMrxG9HdWXPQXVo70HFao99rULvdgxcrwnD2K9fu+BvYCdHrrJ/Lg9LFXpPJheArzG
                      Kjk97vaVvQCZkjwG/hU9oXizPSaddj3KtZ29jYqDPfmJsz0zVbA9wXKBPVqNhr3YY7W9WQS6ParY
                      v73uExI934TCvVOwIb3XqCC9N4EsvRhxIrzKa389aP+YvbA2CL0oBmK89js8PYwq0jw9bpi9wabI
                      PZWKvz3JBoY9wAVCuwBJDzysYaW8glANPdJQMD3yZsi9AKlHukDvWL0+5C49rMSDPDaZAT2TlLs9
                      EBlAPMB8ELwA1t267LySvFa1jr2TXTi9Jduvvbp6fr37hI49HildPergZL3KSHY9yrhxPeKyeD1u
                      q5m9yDKkPPw+5jxAAyG9KMIkvMKeAj0w61+9DHjxPEvbxz2rg5E9n3SKPdBpwr1T8D69ylQ7vS8a
                      vT38WvA8YJ3eO22iUr19jn29HiIePWCbBztYwlu86g/IvVBTkjtAfSy98ORqvSKEMz1AioI88B4N
                      vGBtvjz1yLM91GbvvFcrT71EUuI8x71TvdjWbryktvQ88HhFvcBRnb1d5LE99CCvvLgjq71GYZ+9
                      Zx45vVQYvTzOS6G9yoAjPXDiLL3JwYA9VlU7Pfq5r72nrym9ILW7vQ7ijb3Pmp49mwuxPQPLUL2p
                      zq09AFjkufS3yjzo9HY8GD/BvCdhL73gZ/q8oML3uz0Hi73ROpY9x/YhvZHStT2Aj7s6UvlvPTA6
                      CzxqUGw9QFlKO8BCx7px2YQ9yTPDPYF3jj18GoC92Aa0PMlDgT2AIpC7sG7Ju3L7OD3AZv+6TAfN
                      vFhHbbwsjdE8UHiBu7phcb3aR5u90yiaPYWxub0oA2Y8ga+vPcfBwb0Q1Bi9ioQWvc3aTr161qu9
                      o6GqPe3nl70vQrE9F2UvvVhySTzIJ7+94DojvQOxbb2NwLu9zouFvWh2gbwCXTw9AAhxPOUimb03
                      fn698cKgPTKPSj00Tuw8vcikPQcWYb0gJKe7QyU0vSbwWj1a20U9EkZcPQAgP7q0PcW8GLNzvHBv
                      YDx2rl89mJSTvMLwGT0wnoo7yosevbm2xj2AfcA6pmdZPWxdybz4WIs8umRWvdFWwT3MNbw8xZrM
                      vcvmrz1WJJm9I4E3vQyrzzy+D1c9cv83PeqrDb2yr7y9+uVZPQ4bTz02ZTw9n9atvfKlSj3NzqI9
                      GiVLvQSV1jwQ/hS92nkxPTfcyr2uNDU9+aSyPUVzpL0CACM9d5VRvWCwmLzYKD28ACzuOqqnIL2x
                      mZ49OKXjvEo5Dz31ub09YMXTOyAApjstmpq94IGjOzrHcL1TAMQ9xM7iPKI/RD0Jk8g98IcXvEzX
                      pTyQwQQ8ME1/vHbGqb2g8du7CgwkvcGumj1cJw+90hHIvcYQIj1FSMk9REP1PCNvkj3hzYw9tGSX
                      PN1njL3guza9uKmmvJEStz1FR5s9UNsBvekglj2nTHm9yAnBvE7llb0o3LS9W2u9vWlLsj0Yt1+8
                      +OaqPLZJQj0zFcW9skkpPbEplD2gkIe75IfpPKDqGr2FQL+9ii9kPagihbyw+vq7MqNxPWxEg7za
                      xHW9MPSIOxJPOD2yUhc9WvsvPQkhqT147sQ89PLZvMJ0MT0Dk8o9aIBxPJKZZT3An0u8QIUBuzYa
                      Ab2XQ689nEYZvQodqL06x189AsJyPWIncz3NbsK9FaWUvUx9tbzq4wu9aPqPPOZgBD1uuRc9y/25
                      PZfjjj2AQcq8yre1vT7pk71Yww48IOeDvQAmqztGuw29O4uSvc+dyj2trEK9zdGGvV1AxT0Pf7o9
                      DsYEPeQFFr0enYW9DncqPZcNnD29tW69Q11svftvoL3SdQs9Dc6zPQfHzD1R9sA9D0KfPVg3nTyW
                      UVM97LGaPLCRiLtowqM8APbjOr+EjD1+LAI9dO6MPEYuC72VNYA99SWdPbcxPr2jm1G9YyegPeMK
                      uj2XxVS96hZSvawPGb0niF+9mD5CPNDnrzsW1QM9IkxHPRlBrD0ME6S8nTOEPTCO7DtI5Jq95Pn2
                      PL4wTz15l7E9P6+BPeya5TwipMK9+vt3vYAD8jolxYm9OiNHPQMGfr3XSRu9UNunu0DrL7ugGYG8
                      U7m6vTNutD3CmcC9WzioPSIgCT2s//q88GV+PLg85LwAZoO7RZCLPTGtyj2U4om8G9G+PdiuL7wY
                      hom9ujpYPcTZ/jz42LK9k6S+vYAdsrzCIl09MN0wvcDLM7sduE+9D8GWPRBeZLzLXqE9EwhYvRhO
                      ADy63Wk9BUqMvcCUuTrroZ694E9GvWBl87uDR2W9QKlFO4+Csr2dgbO9zowVPcPWpr3VS4G9zL+E
                      vKT5zjxgkaY7LnAZPRsViz34lsK9k+6NPYFZmj0Gdnw9oCrIPNgBKjyA9Ko7St6PvUriIb1scZ+8
                      qM6PPBp3ZT0HZpA9OL+OPJL/Xz0I3bu9Uyq8PZWNtL2DC3u9/VgdvXJJxr0KHqS9csoXPaLxdz3X
                      xIk98MwWPKbzGT1gVea8bDvmvFcnfL2Ai8K6MuTBvQAqS725ar49KEuQvJsJnj1gWpM8dp8aPUQJ
                      /DzBk7c9QF+XvKpNSj3yAT89uaSOPUCSRrwABKU7oPQMu8RW/jwURJ68iF+fPLAPSr20IYY8qx+c
                      vWcQcb0atii9lASDvRSu7bwC9ca9ltkPPbr9j73dG7G9jYZGvWy3nbxMftC8Ag5xPYYWVz29QYW9
                      WmERPdhchTxGN5K9WtYuvaBejDsRlZg96fO8PbAUdjxYNJC8qGCyPOxtoLxTsVC90kgZPeD5pbwa
                      3Ii9hoUWPb88vj0uy6y909B3vX07t72Sz7O9csAUPeAa0zt+qRA9pbeYPR45Sj2wFxg8wNNbuwAr
                      TbuZBKM9mhZ2PRU8hr09v1u9Eu6AvU7AqL1UeYS9oBWtuzaKVT0M+OS88q4ZPebTND11k6q9Bjen
                      vW3jaL1JjcU9pz8evQBYKzs5zsk96s8PPZiVhzzHznS9AP0nusBbgDwioGI9kdvHPSwwir36Ihm9
                      aLYEvA2Aob2b7oQ9TN37vMmLqj3G2oK9OHqsvLIXZj3uAAU9UHAuvakxiT2u5hk96IklPBVkxT0A
                      W4e9h4YgvZBjF7y2BaK9IHmUO4csy73t84g9Xa+9vZrxrr328kg998p3vWo7Nr308tq87Xe5PSqa
                      Er0whva74v9qPQ3TZb0yDns9GOLlvF1cyb1yoRM9I5yXvW0ioz0w6ok7/ILyPOi10Lwj9UO9yZKx
                      PavGuL2tV5u9/wGIPQIjAj1c9BO9aOu+vT0aWL1kjg69IAOZO1a2nL1JW449ahaRvcerLr14Jry8
                      r7a8vdMJZr0gG4M8k02pvawMgjwDK7Q9tAmWvKKHYj2A6Au9qpcmvRQf7jyY4I88XACMve03RL3C
                      rxg9NdylvRJ7ID1tib49sgofPdl+kz1Ko3O9/twsPS7qaz2i65q9sdCkPQDjYDuqbwc9ADozPA7M
                      FT0Ko4K9Rt0IvfVBvT0oTrw8EJV/vLO0zD0Aexg7TUB7vW1Uoz0nv8e96ELovArXSL2AQvO64oAq
                      PUAfcztNCnu9a+WjvTItRD0eXQM9vlgAPekntD3Q2WW9Eq5CPRGuwj1ufYW94UudPc1fq702Qjs9
                      1CfgPIJVAj3sjaM8Cw23vTa/LT0Nfaq9QnSBvV0Jwj3tNMC9cT6zPVOFbL1yx1k9N/VGvZMgyr0q
                      NU29cIQlPEtcmb1zE4U9mefBPSqyRj1gk5U8Oj4vPXMOt72AwpW78DQ3PFQa0jwA4Fi8VefJvWl3
                      vz3HeL29z8vJPbA+6rtE0NU88FJwPFfOmT2j9LM9zL4QvUvBgD04fJ08lDG/PMCXp7yQ1nE8aRCe
                      PalxpD1wT7y9jIP6vMEsjj2Sdbi9Q3WcPUtivj3ATUs7ntdtPWIYkb3dMZw9euoAvRwJ3TytNmm9
                      ABVoupC2Dzw1+4C946+TvXLSgb1tyVS96TOWPViUJTz+CpG9VBUMvdU4vr2zupo9WFUDPBaxPD1K
                      jlW9cushPRKlUT0ZUo09oAbNO4Bp97uk5+I8Ci+gvaCZir33nlK9oEYkOwUWqL3pgbs9hNDMPMw8
                      qbyurY+9BdSjvWxnnTxKmRO9nfHEvTqon71VebG9copePXU5pT0+tl89bIeEvGSS5TyxbJI9zGfr
                      vLYWQj2K9wQ9Bz6vPWcXjj3CrAA9aE9CPAuTwD1UkBa9XReVPQTqCL09j1y9UvHIvTPuuD0EUN08
                      iOyXvFokVj0onne8orBMPaedrT2QeTm8SlVsvQI7Pz3bwce9HyGgPbHJgD234369GziJPcG+rj0Q
                      /kS967yOPY4wg73RtoI9F0suvRF/qD1Ql5a94u9gPfDMKjx+kSo93WzGvazyizz4PcI8s6pZvQnF
                      gD16i1i9QKuOPFAqKLyQ0go8OTWEPQAl6zv313+9dKf3PKBQXb33flC9vLaLvejdBjyMbPq8sI/j
                      Oz0Rsb1ob0+8La01vTMPZL0aNBQ9AgNePd0DRL1Nmry9jqhqPSNdrb2oASM8QFOTvZewx70A8km8
                      GMiYvDkCwz1CrEo9h2moPcI3MD0fRsI97EWIvUwL7zyuTGA9IokePRoVXr3eZzI9Ds6ZvY8LgD3l
                      SYc9l+yEPcyF+jz3Nb69mGuZvUDYKjsoMsU8NZCsvdXCjD3AKpi8wC8KOztwvD2tFpA90N9rvMDY
                      hDrkHYm96hotPTEUvD0u6VM9GEVGvLXrij3++To9EpDCvYTS+DysJ4I8deipPeIkPD0PjqY9tRHC
                      vYApLzrJz4M9dqxEPQIpp73o9pq9cCRWPBYxl72gUTI7reu/PZb6o70YRSE8N2LGvfKvKT2+GmY9
                      aLvuvPM9br0FSpy9qF+ovQCGmLxQSJu9YESYvKCRajvH9Ue90G91PACIwbo9QIc9Ymy4vZ8Fmz3d
                      qDS90L83PH1lY70y508994qgPYNiMb1Y45C8EtaQvZL2cT01DrW9r660PdgXcjwI78u8CrqJvZi8
                      RDys2hi96j45PfQvjL19hTG9QslcPQAUHDxQB208kGBJvaCAd7s6amW9QCY7PGC0r70wsJO7YLVs
                      u4AGjrsmr6G9kHibvcBWOLvKEY29p12HPVAjnbvjUU698Y/CPbdfV730vZa8LGOUPBp0AL0Ci7a9
                      9ASIvcJVJz2thIM9cL62vWcovT02zDw9sGm7vdCElLtq5ws9SVPBPV8pvz0P0ry9PoIUPcDAKTwF
                      v6G9XgZ4PTJdlb0/mba9FqkoPQDRG7sYLFS862SQPa4VfT1wU8C9vvUCPaBoCzuib7i90siKvSco
                      Ir2qgDA9dt6avXY5Rj2wIRe9TVpIvSTGCL1RPbY9NEeePIj6lLx40JI8lYmfvZDcQDzpcIk9aJFL
                      vBh9nbwKeHm97f1yvbEToT2kdQS9YKnCPECVazwAE8O71j6GvWBH1TtLFLU9EIQ/PHpJTL2i/XQ9
                      qO1nPA79Nj2X1Ge9ZwhMveOAvr2oDUQ83TyHPRR7gbzo4Ie9XP3VPFozL72Ab3u82Uq8Pa8WjT1o
                      rsa9tPy3PPNglr1gaFc7CIqDPEDZv71gdKO8FdWuvVpLcr297KG9tptqPSNnNr1F1JA9A8umvYEd
                      oz3sugS9tAXhPGJ9FT0grti7pLkEvZDMJzwAi8E8gBawu11tZL3ogXa8Wd2dPYgNyLxN1rk9sXyx
                      PZEZyT3M3eG8ANQOu8kziz0b08Y9cjBoPSaNZT2a3As98fC9PdiUZrw+5y09GOyGvJDnEbzmHiE9
                      TZEyvaMtsL0wCx08YPTGPNA2oL1xZJ094npJPVDOZry997u9adWzPTwX/DygVsy7VZO/vV1Xs70A
                      yUK6IAKfOw2Jhb0KiHG9jnIxPehXyLwAC3s7uo3IvW3BMr1MLuC833nDPXPhbL2SQlY9oFMyOwI/
                      aT1Z8pY9oI14O1pmhb12Noi9069Avau4ob2lw8C9MvQ8PYs1nD0qcai9gGx9PDZgMz1xwZg9ikEL
                      vQxwxDzw9jO8IE2ZPD4Gcj0bm5G9eCChvGyx7rxrdK09QgwtPX8pr73oHR480qw/PQdzIr1i6QM9
                      gL4QPBnOsD3dIrW9M2vAPetXkL04K5W9SEW+vNOyRL2ay3C9Gi4NvQCQAzgA1Au6QCtDuwC9Wzza
                      9Wo9mKGZvQhBgTxyki89EGdFvVBAy714LqO8yrhbPWFqgT0KZG+9UJNKvEBdcjsmZo299LyIPEjU
                      jjygS3W7oD6tvFcSaL0wDbK9PY6IPQDvHDsA3ci7ACmpvAC1I7wwZxA8WJEWvKClUr2Spsi9jUuq
                      vR4snL3yJcK9gIrpOpAfLLzXzGi9cEFrvKzk7jwo16299eLHPfiem71qNre9fg8cPbCaPLxgue28
                      8tJfPe4xHz0naZk9Mo05PbRVj7yg5mq9PTWZPb65MT27nMy9gPEMvOuhrD36uiY9cusnPbeYw71R
                      o6Q9q724vfdFRL3qGqG9AdnEPW3FpT3A1ns8UGywvRL7Cz1IH7e8h+q3Pfiq3byA7K686kaUvUgW
                      t72DxCq9swo0vbVKnL3Xj2u9AwyRvfZFVD0AxVg8INC5O+IkAj3L0aW9wH+yvJDGcL0AkRm6WF1G
                      vICa0rvz7q69KjsIPWGHwz1eG4q9iiXDvdYxbj295Ik9i2GUvf8Vwj2IHb08Y80tvTBlvztClbq9
                      gHysver2br2H2329jJm9PFRG6TxqOxW94sNjPUk+tz0/V8a9xyRWvYxMyLzd2Kk9UBXgu+A3QL1D
                      zxy9zLumvD42Fz3QlsA7jAzXvEBmO7zgw7U8OKq5PGDoczuo1h68IBWevHCEfrzi+HI9tPWZPPJe
                      OT0k8O480AQGPEKATT1q2QG9TGOFvEoskL1o1og845bEvRdKJL0W0wa9yl+dvZTCGL1yZRQ9MLdY
                      POBvpbvDCbK9tfWCPeO9pT2gEn672mOgvVCsYTwgwU+9Ebq9PYYIFD34NoS9qNeDvM01xb1sqp48
                      x3cevRtbvb0s9Yi94yYfve99iz01eLS9bmdDPdCITr11GJy96ihwvaj0PbxGN429WJ7JvcasDD20
                      j7y8tGCzPI3Xdr0A8GK9kEAwPFQ8zDwUQZu83k4IPfekaL3uvAg9INuBvYCSEzoIsIQ8kW+dPXBP
                      PryA3VM8hTyQvRakh72FSJY9hci4vbLfmr2jr0e9jo6VvTVTob1g/JC80lQ7PQC5QrvAwq+8XVut
                      vYVgm72KfGq9Vt0Ovavqxj1mthK9466lvQqNCb1A6Dy8SPmHvLDj8ruH0lS9wl6LvaAkpTzCylw9
                      AgQzPQo5TD0+Oks9HdFBvaSCzjzn97K9wDu/vABfSL328CM9O7KUPbeifb3eqD098EBWvUNIyj0B
                      ssY9mGUFPIk1hT2DRzG9eYnFPXin7LwQDQg8UO9NvNt+jj0ycQg9S+uZvWl/wT3cjQa9yKmKvWiK
                      3rzlMcq9WoxOPQoocT0lIpG9iSS4PaAuEbu5mr09U36YvWjB77ydR5K9go4IPUWPkD3sEsA8wI6f
                      PLDATjwsjqw8BKftPAqmDr00vKc8CR+dPRji+7xA7Y26TE+avIOIsD1Urro8QBt3O6AZNzvgJrw8
                      lyVavYsGyT0AbHU50udiPVHcpj0o+zK8fzy2vetZij3mZBw9yX+0PeuLtz1R/pM9SLmJvXHIxz1M
                      ReO8qNVJPN9dpT1DE8s9oGIxOwBsBzpN0EO9RBXcPP3qtb1K/Ma93bnHvaiGNrxA3188rtxlPeDh
                      sDwAgTc6sH2uu4BLC7z8wuM80FYsvIe0vr00WNY8c0zEPbfKYr0bbYQ9JKAPvUAsmr2kM9E8oIIF
                      OzPcbb2s15a8xpaBvR3GhD1cA4y9msNJPVBDTLzuswM9oGkVOzhyq70VzIe9tEfUvNALcDzjQ8q9
                      RdybPTCJF73NBCa9IFXLvOPTjj0Vc6U9MOOoO0z9tby6KEI9BjmTvd3DxT2MPqC8rtIZPZFtoT0m
                      tk09A9aQPUF1uD2nSsO9ZpabvWpipr0aF469UMqXu7TF/Ly6s5G9yWjCPaBY0rzJ6Zg9dUyuvXfS
                      rr0ewVs90A8yPGq7a70ywn09zdmDPYwn8zyV+pK9slJAPXoRfz3D2jq98EELPJPgjb2qv5y9iCTD
                      PMqZY72Auo860Fg/PIB+gzyPXMo9YtK1vVCDAb2QUhw8WuS5vXpBob3AZGS9GMsUPIbzBb2MUMY8
                      AA7DuY1VVb0iorK92nexvcYGeD1jVES9oDNYu3Udnb3oV248IRjBPbm5sD10r4A8N9GHPQC+o7qA
                      NLc6ztqpvYJ7Mz3nHmW9ykdpPbghm7zB+Y49U5KNPZkEkD2OLQU9gJSKPOx2o7yUDpq84Ju2O/VK
                      lT3MrtK8LA24PNABQL1Rx7k9xV2IPVqmXz3Kt769PEHPPDA9oLtgrZO8jCPjvCc2sr1Aamk7KHGo
                      vcAW77wDYpO9zF4QvXRGkjyU5cO8Af63PbnImD1wqkC88FAVvOYvQj3+LHk9kOoLvfC+HTxzcpG9
                      7avJPYANTzzCSGc9XP8FveDN+DvGhSw91e3GPV7OST2U6PE8WvJKvemwvz3KB3291xLEPcA4eDzM
                      GLI8QGnwvLEApj3A36G9Mv9APcqVML0C3Cw9+QDMPe4qgb10HoG8isWnvUAH1zrsg5M8bybMPYBS
                      PDq4AoG8NYijPWDfdL1NC6A9VwTCPdU/pT3FlYm9GFaiPMhfnr0QDMu9Zba7PaS94Tx2GF09oBGA
                      O8o5BT1S01k9KGJbPPK4HT2Dl4A9Nn9IPWBqzLxwLFy8ij6dvbYwaD1KShy96lsoPZjtHjxajhg9
                      wxIgvXB+OTx2ZnM9OHDIPNoYHb3Soh49Fj8NPZpdp709N8S9yU+LPQyP/DyAHbC9QGJpvJWsrD2Y
                      Pgm8aFe8PNjPzrzIHe28NturvWD6+LwwtAY8zH+MvXrueT3QdF28YBV3OxKIbT0SMDU9tPWKvNF3
                      vz2bvIw9QpFMPSYtJT2FhsI9I0y5vVe+d700m7E8cWWnPcI5OT3k4fY8igE7vdTav7wW9AW9ilYG
                      PVTGiLxg/eG7ZJj9PKbJLT3+0yQ9PNsSvTi/oTxYhri8QCxavdAzFr10jJQ8E/ixPX23lb2Ad569
                      LFnEvIBGa7wA4lW9IKomvdJBbj2TWLa9cl0sPezu7Twd/2S9tbaYParmfL1ATb667MCiPCBQ9ryN
                      fqi9sF6au20qnr02aaS94BC+vXE7mD3CI4y9mqx+PaJJZD0oXMq8S1bFPfn3rD0409m8btRbPZKo
                      cD2YdBK8jDedvO4TfT3Kzxg9IgAOPZpGaD3WlIG92Ru+PfB8WL0u1Ak9sutiPfeYtb0s4c282COr
                      vA/8nD2+BpG9pg0zPSATwTwNl0K9ANk4vVKIdz0SbE89dtOLvYIlXT0owTS8RplBPa7vLz2gOWi7
                      9CnFPMCkxTrUkMc8jCuMvQglpLz6Xg+90PQ8PPD8WDxQSTg8N61bvRo4a73o9zE8z6y0vaDyk70g
                      z7m7A2KxPfqXU73XboY9ZRydvSzy8bzYdLa9wwmHPVornb27EL+9EkB6PawyprxhvoU9XetBvSLM
                      Rz3rQ6q9Mkl5PVDuxbvqzEW9bcolvUich73kBfY8aNxyvCkbmz3stgK918SQPTUijb1r17m9i/6g
                      PZQD1zzoyWa8KvmVvToDT73UWL28ABQDPIVDlz2dZyy9GGnFvIC9mTwQZkq9wGM0O7AtYTzG2C49
                      aJUBvHN6ob12ARg9cvk8PVH1iD3rB8W9DbkhvcR38TyJmLw9kN4YPOKqOD0iV8a9iH3CvLCOmztK
                      bU495B6LvdgtPTzhJKQ9TmCDvajIOjyCaUI9FIIEvdixObwUz6a8oDlvvXrhHD0YfwK8JkqDvWHp
                      uz092lm99KGSvJIiPz3MtN88009tvdhycbw5kss9ECtMvaigsTwAKwW7eca+PYAHt7sC/Kq9Pmw2
                      Pb7ZLD3x3LY9C3uTPcIGdT0Qf329B55cvXQ+E70wnyO8AO/Fvbh6irz0ONk8abu0PR4/bj1/bK69
                      jOYJvZVYmL1oFk88+ulZPZK/Sz1iHCc9ySaxPVhAtLxAa1A7nd+LPTe0UL0ALKO8NhsBPQJOBz0A
                      ZZW9CqGyvcLiJD1Sisi9xyLCPRR5p7yY1eO8IjlePYq6gr3krfs8AAZ8u0DtorxGMxe9NESFPBVn
                      ib0JvJQ9aG4HvIC//DpzN549oOWDvJR6sjzxN6U9sSHBPWBTzrxQcpG98h4uPeRP5Dwc9xG9F2sm
                      vX16wD2QCwK9KiaivVC1ZDwBYKk9iUufPVbOm70HQ1G9cF4SvOAAZr1Q4pe7dVy/vQCltbvADqQ6
                      E69SvUCMZ71CgjQ9QyuwPRMiv73JUKk9uGqfvJhruTxPBac99WGAPZNPyT3mC5+9pffAPcGvrT1g
                      Lbc73W/Evc2pWr2AkIY8QE5jO+gCWbzaX3S9Q7AsvaDzYr2xgcA9tgODvWlSyT1X4pQ9FK3tvP7S
                      KD0674y90kimvTLthr1AC0q7c0XHPX0NqT0gBPu8qghPvdQF67yaXV69F/zCPcmehD1aSXU92F6F
                      vWjoEjzAS4Q8Uj8iPVipVjydinq9AETLvciCvrxEEfM8UVe4PchWy73MhPi8JgBTPbNrj73NILM9
                      2WK6PS04mb1Ynm+89QKUPdKDMT2jhmK9bmpOPZOlxb0gaB+9E3WsPYC3kjqo58E8NSW3vVWqnD3d
                      Oam9ALwyvE3hOb0oF0M85rdZPfkbsz2cCIK9rVcpvcqDTj1bpp09YBV5vVYubz3dJl+9IzdFvUig
                      hL3c7hO9tHr3vFPMvD2Xgpo9jsx8PW2/Qr2X4bM9Nvw7PezVpbygTYI8U8h4vWBC7bx6EHi9ZTCA
                      vVH8hT3ADcq9rKXHvDI+UT2npsS9BAPXPNLhaD3zGnW9IeyWPW4Ni73ASgq8YRKOPc4nCT3Nh8e9
                      Q8g1vR2JnL2Ia6e8gTOMPan9mD36UYG9A1ZlvZVJtL3S4x09cgpZPZL4UT2YXJe8OLmjvRD6bDwA
                      d/W80BbKO0pBQL0ghoY8qP+NPCC3Pb2ac229gpEbPWrllb3i7La9gW6DPWgTAjyKZCM9gH7FPBRN
                      vDx3PaQ97d83vXRjGL2kE/08ManJPYYlCT3xY4o9gFeKuh28rb2YW5W9STKyPXMaoD1vIZA9muge
                      PXWqtD3CZ3c9Bym4vZFugz3UZem89n1NPRPZiz0xgqc9+CDCvQBtHroR8II9YL+5uz1apz11kYq9
                      /5qZPbkYhT1mpkQ9QMs6PADVgbv+k1M9YEYxO1Hyrj2H4Jc9Js+RvSrdCz3jiTq9PC4VvSC6njuY
                      cRa8Y8xzvbqarr0AUyA6onELPfkJoj25+ZM9p0rAvQzXqrywaA48uhCGvc7VCD3scao8x6i6PTAE
                      Fjx2YQ89gL6qOn6IET2ANYu8x/mNPeZwo72lTYW9Q54cvTrUib2F16e9wyk8vVTfxbw5XY49bbtf
                      vYPWLr3Y+1I8C5WdPXI5ub1Th5y9WCJGvDCVQrzUc4E8MTinPcLzwb3aqyA9+vpgvTDjbrzerD49
                      AULJPVgzu70e42A9qAuKPHGjyj3AopC6ajgFvfoLcD1cEgO9RbW9vahWGjy2ySc9a9KyPYWgkj1Y
                      YYG8UfqIPToFMD2s1oo81Eu7vPDTZL19Cri9+kwuvaLYcj0TGG+9TYcyvaYkh71Kwai9a8HAPZXu
                      xL2aS3q9K62QPd71Zj1qhQg94JrEvRwK/DwyvEU9dtcGvZ22jr1sjdA8Fb+HPVBSjL1a4Ha94kK4
                      vWzTpjzDhi69zkuVveUTjD1e1h09l5m1PXycDb1iuhE9mEvVvFBhS70Aamm7vh0/PUf0oT3SjD49
                      aWGhPcn9iD1QuxG8ELsRPEqYDz0XkTS9slIePSWPtT1CwTU9x1h+veZepb0Qo1w8H6a0PfLNXj1o
                      B5c87Wpavc9Csj3mDFk9s34zvSQJzjxYpXo84NbUuz2Umr2Qq2E8YP84vegiizza2zA9bH7BvMCK
                      uDr8UNs8G3SUvQAtcDpiAVk9kvlbPQ3smL13dcC9I0GmPf2KoD1AtSW8DKWpPHKlWD200tg8akLC
                      vV72nb1SqXA9MDVxvEBspb0w5Vm9s+WHPdSqlbzIXq48ADCvOw3wwz33SUy9DB/NPFS2mTyIAvS8
                      0xuqPVLHlr336bC925GLPTSKgrwtf8a90OhUvaolxb3IpMe8wdO3PZgElLx4ubU8KMeBvfTvvDzg
                      ay29Oj94vZCArr3mSXk9UPqHvfeFI70yDTY9g83DPVNbJ71QSqY7WtLEvcHBtj26W7i9WOruvKjh
                      XTz1l6c9tMOgvFh6dzy3isS9AMH/OxiH0bzRarE9k3qBPeA+lDy1Krm9QkdWPWRc7TzAKxy8IBSe
                      O5udjT3Qhkg8W+O2PeyA6DxKrX+92FakPFE9uj2jjKm9DP39PHcGZL0who27u5uxPSoKQr2J8as9
                      9FvpPNjLkrw0qdm8LCDtPJfvuD1nora9AsENPchTgLwAfVA8p0JrvYAf7rpKi729DJrVvG69ez2h
                      srI9NBGgvGQx8jx+ekA9putcPTK2hr0t2yS92j9GvTiWpr0M2Is8AhyMvc2vW71Q3bc7z3ypPQCY
                      SryZ3aY92EJfPOkTgz0m62Y9nO8NvQZPbT2+LWM97FH9PL6GWD0AsUA64FejvRgmBLyhbaA9rbUs
                      vb00sb2/J5899999vfJafD2oaR28WlaWvQDcpTpYWzo8mMExPFz7F71R8LA997lOvYj9i72K2yw9
                      EVHLPTA1x71GnoS9uLKavAitw70qDju90ceLPcJEpL3Uyec8M09+vVpBfj1cL4u9KPykvFAKULzs
                      udk8XWYcve5ETz0mIgy9RVyWPauDy716fyU9iXWjPaJnWz2IQbA8gplUPbQqir2j4rE9sKAFvQXC
                      hj0AGHO8tv5yPVjRKLzbx7Y96MK6vOEfqT0qzBU9TDmavGeWwD20/Yu8AKtJOxWohb0nFSS9QpeS
                      vXQE7Dww4Bk8s+SWvarNlL0glCq9aEHBvKiwzrxCwHw9cLxrvANArT1gv608yuUaPQAAWjpDG5E9
                      CHLkvIczmj1oDQy8as0UPSjU3rzUIwS9Ml9MPbWTlT2aK3o9wKjgOqzj5TzACv662UKdPWn2jz1M
                      84K9qPVevPAfVLxK3V696X2CPUOnnL1o8sq9akWcvXJFVD0XvMu9k0a7PQd6iD0Nsa498VOGPVDi
                      A71h1qg9sqw1PT3HvD3+3jQ9uSerPXYRUz3T1Ry9MPcDPEMrbr09H749zH+zvOwflTzTcUi94DKN
                      O2Tp8jwjzoQ9spESPR2vXL2dKMU92bqlPdICIz0MeII8QSivPU1Zoz1g+6W983WNPdvelL1lfco9
                      sQmzPXMsXr3gvri9MiijvQjWzrxihMK9UmG5vVE7wz0mswS9Z+iYPTIokb1dx0e91ADavKDyRr10
                      IoK9BvBCPeyWhTw8ZfY8oBf+u205q719tog9AAMzPDrLdj1dB4w9NFytvHf/uj2AU7W7lPGUPIMp
                      qr3EZBK9mDKQvFi2w70TnR+9XeO5vfaPPD00SPM87R0mvfYrYj3VcYW9yReRPezHqTyAhpS9B9SE
                      PdJfNj29hIQ9MicHPTC24DsAsU67AaG0PSmwgj2gzWG90jbLvaCv/DsA1Om7fUUivVRThLxann09
                      KOeMvYIMjL3Upgm9ykI2vT2Eqb1DhMQ9CnZkPfunxz2SvnM9WEdhvLilojxE5es8m2CTvd5MFj3g
                      S/K8BGLQPIAKlzvmi2E9NlEVPS4WPz2Uj+e8xYaCPWyGtrxIU6u8eLW4vYCNn71S2SQ96DeXPAC2
                      LDtoYKg86BMEPOOWPL0yxk89WM0vvNaVOz1BFrQ9tGaJvLAyfDzSz3M9ekcSvTrZIL0g6Y27ymC5
                      vWDc/DuF/IC9EQaWPSBXgrvw+FM8o3UlvelOoj0oyQK8PXyAPSdXNb3a3Gc9DmeSvcBqrrwYMNq8
                      7owzPcHLyT2pjKk9C0KUvWeaRr1gdZi7MmwmPaKWWT2t6KC95B+FvXycDb2DWpM9ruJuPd1eoT3s
                      PtE8kE9YPKB1C73Aqge94r/MvQBuV7xt9169XuILPYBgxzpAb1i7do2OvUgqj7192G69aAKuvSug
                      rD2Aogu9/flZvQAsObkl/rc9RmylvSmfgz2LtMq94vQSPSLCPj3bCK098g8+Pe4vWT02kio9eoEV
                      PWowCD1v/Lc9/rNiPbB/Nb0M7g+9MhtPPQoPSL2ge+e8QSe/PUhJhL0RiIk9JBX0PMjOpzy2/AM9
                      O5GRPZPfer1YHnk8MaauPSR2+DzROpI9YLMOu7Kfhb1W5VQ9iI71vC2sk72gkgw7toYYvVChBrxr
                      zLc9rmqDvZWgub2Qese9k7czvS8PsL2BBbA9wOQ8u3+Cyb13QKo98sCaveFDjT3wzoi9tD6UvCBP
                      wjwBQ8A9ghUVPZdwvb2IxbM8E7ayvcwYp7wHLrQ9J27GPRDcALyrm7m9jF+nvJSFrLxBUa49KgF4
                      vRsWqD1zGUi9Y2yxPTh/pTxsShi9B0ujPSj2wDzYeru8LeWLvce2YL01F7U94IXAvQVUgj0RQsQ9
                      3AnpPHD5dzxE/QS90B/oO+Jxyr1iHK29MvBcPao+ZT3A6l68BA0JvamTxT1Qsou7unwCvVCuObyg
                      G+y8Cz23PbhFjDwoBxS88tF1PdhksL3hgqU9UC2cu5NDNb00BPg8eMOkvO1qnD2NEYg9u02aPTQf
                      zTzTcUq9Z3AevYIuoL1T1rK9SV2SPehbATz3QWK9Gl90vb3FuL2wcDS9kEKlvdPbmz0g/0m9M3kx
                      vQ6FAT1oiFs8LSR7vQ7AQT16jXi9pjgMPXXkiT2jDWK99wFJvYAzPr0Oh1w9qxXGvbAmZTxrZpm9
                      G8aePeKSh71AVrC9JGcCvUKmDT0mdZS9cGFhvLBxcDyWDCE9AlpfPXBXjr0MZpo8MzyPvffLwj2B
                      b5c9oGKNvCb7C73j9Zi9JdCWPZfacb0SU0w97l4qPRCJITyAcOG6gf7FPcBzqTwIcqS8SqCjvbb2
                      Dj0FjLy9bictPXsPrj1kpv08CX2oPbO8fL2Wzi49ft82PZsymD2oGcy8BkxhPVnwuz1Noqk90Hiw
                      vecqwz1AQYi8+IS/vNlVqz3w9Uo8WDDGvRCyerxYiyE8lADQPILDUD0YxgG8QBm3usBa9zrgWOQ7
                      OutdvUZyWD0+m0U98LVBvXT51rzVk8s9jukwPSCG1bv2kAE9lEiLPFdIx73By6Q9AH71uZNSgT1g
                      LYS9fXQ8vQGAxD2gv9m7J/NLvbCm5TtR64A9EbWnPSqqFD2whNq7AMjVOBNanr0ZjZ89LR2OvXpk
                      PL2gnt+8do9SPTzz1jyiMpq9gFmQvCmNkT1AP067/fVmvSxvnDwMPJO8UImqvQcRsb00OQe9uSqg
                      Pcuno73Wi0w9avl6Pa4HpL2qhqC952eOPQC2JzlZzqs9c8ixvTN9Or0qLLC9AwJzvWd6J70DWLm9
                      NxY6va7Xhr110Ig9vWcnvUFnmj1A/yo80IJkvMotbL1HyTm9wHsPvSC8lDvCkzw9klijvReSH70Q
                      Pai9LBuzPLHzoD2QNFm9gJkGPPCmFLyh/5M96yWjPVAVczzS78u9QH1yvYApvjoIw4W8E5t4vfIn
                      Jz3InvC87AOKvPXPkD3z/EW9Vw6CPduawz1F5pW9A5LHveoIbr1DCcu9+sw4vTDe6rte71M9cKBO
                      PDimwLwDZ5i90HSavSpshr0425i8GJyrPJg8LLySoT89ISGdPaTj8DzGZYu9CGT6vHecb711C7e9
                      DeHLvRvry70lZZS9GNT5vKnxlj29Wy29fJXPPJE3nD1KXmE9MBp6vQnqmD3zUyW9ULR4vAzknzwa
                      d5W9m/a/PZVFoD2gVvq8jXZzvQDbGbvquTy9aF2zvVdNij0yFVw9wFJ0vIvTor2A9r88JXm9vWf8
                      pT0+Kho9Gp43vRJ/CD3KBpe9PdNyveAxQL1q0Ci9GGJrvJi6xzwSX8O94lqYvQoBbj0yKww90Ruh
                      PUrNdz2CPUM91+12vYFjlT00has86AxuPNEoij1XLac9AMFIukwulrwsruG82CQtvJmUqT2NwrG9
                      sBjRuyBe+bwA7re6UuRJPcf8KL0oFm28bJPxPHNOr71vCL69CtgpPUAvyryiSwA9F7TDPbW/lz3Y
                      vAQ8qFsjvLr5v71G5wy9nzXDvVwp5jy5OcY9QL9Fu3vLp70piq89kwelvYJuCj2MirM8yhSpvZmX
                      uT2Ae9k6U7gqvY/WvL0Y7768noSivQpYCb18E/I8MRaIPc5Agr00i4Q8QI58uzSuu7wUVpY8CmGA
                      vSrdcD0dAK49FEmrvAhRtTyFAoC9ssg4PSNVkj0MEIc8rp4/PVA4LTzp86g9lpN8PSxI2zxi+hM9
                      cid7PVXovj1PGao9NEiBvFhqs7xE4d08haalPdmKrj13D1i9nbNkvTiAwL3pXIg9JNDpPAA3O7pi
                      eSM9oxUmvcInAj00VqG84LDfvNCHl7228Jm9SUalPZhNLbw0R7E8UAExvCDADb1ke9k8QOQfvY7M
                      JD3KdBq9lBOZvOCA1jtw60q8xOjtPOnFij26dTQ9DaWDPXQ87TyRjMQ9KIZIvH5hdD2NqTy97dd5
                      vQU2nj1AF6Y6mIUQPIs3tL2AD8m6APdeugWOlb0WUI29XAz0PIjpuLy4LZG8HpEWPfVwkT0rH5e9
                      UNmVO25HQj08CeA8ZV2bvQ0UVL2PmZs9UPJWvSobPD2Rd8k9gB/6umDKTLsDXMI9GlyDvYrqJb1d
                      /WO9Vo9OPRIqKj2ok7G9SLCKvYjq6rzBW6o9gP9nvfXUhz0TlpO94DCtvAjrrr3A3Hm7xsgPPXL6
                      YT3UEAS92HTBvNoTqL0M7Ri9zl+dvUAvTjzxroI9GGZ5PP/Tvb1oIa29+GW+vOZLFr1K+Eo9KLIo
                      PGKgEj2Dd0W9IMsHvVAeHL3PhrO9t9FBvZBHrb1GHUQ9L8rDvSAdWL1Qw8y9luOlvWkapz2ImpQ8
                      u72HPSB9w7z0+Km8QMwBvNhAjr2AA0686poIvQuHiT34Au+8el1YPctior39C329ALpNucKbUj13
                      BzG9hO/kPIrnWb07pbK9RICGvfF9qD3QxXe87NGUPGogez1yTQo9Pde7vaJSib0grzG9mf67PUSC
                      Gb3y7F89BgYJvY99oT3+/V4907OTPYvPsT0g+nK9QjUiPYzGkLxw6Ze9ND/lvOmKmD1dp4u9sqyk
                      vZpaGj11k8k9APZMvHWfu70TGXy90TrBPc+vxz32BxM9rouVvcoVLD1z6Y29U+WDPY6EgL1dRJA9
                      dDmYvKDK9Ly5b4k9UFO9u1DxdDwi/jo9rp4bPbqwWj2AqKK8aWe9PRDhEL1gdC290FA+PCZDPj0S
                      ZjU95UefPYBVp7stfHa9EM0XvSRZ1zx3mL+9n8qZPbU2qj20E5S8Pl1bPT3esb3n+TS95o18PcBP
                      l71F0JS93SI5vcCGD7ttTBq9ML+WvYA6v70nTrE9Sh+0vTH/uj3roq29DgpfPYAKLL113ZW97ICe
                      vC3Amj3jTaS9kq44PRVHj733OKU93ZWPPdCV4TvJoYU9RdKnPfNQqz2pJ8k9zaacPXCVfDxaIj89
                      7W+4vQoPET3g79C8oB2yPEP9Z70Afge9HZ/DPU4Fbj02HFE9pGMDvQvMuD08a9c8qMeGvKmorD0I
                      U8E8g2IovRrNC729dIK9bCKmPJMBHr0HHWC9lwBMvZSN6zzQrG48kJJZvAfFXb2opCm8ssIzPecy
                      jT0z2R+9XHrsPJ2DrL1NcH69oLDBO710G72Av907YOlaOxFjkT3u/DE98oJ9PdWXlT34OZq84w08
                      vWq6R73ivG8945gnvY9Es73i4Ma9zTy0vRZPbj2Snpi9lLPFvJBRdzxgM4A7AFUuOsA0v7pgLoG8
                      2mJNPa2ORr3Yasq92hgRvRhGlzwAlcW5uRiqPWDSbb2+o5m9k73CvQzk37wG+yo94z9RvTI0LT2B
                      4YM9NoyYvQzcBr2KN8K9JH7UPFVll71GEBs9OMOaveNLvz2DZnm9tiwCvRr5wr3QzBm9bdI3vfFF
                      oT3js8C9f1K7PZQL8by4GMc8IJFgvfNkLb0oSFY8h1gvvQoOdj098bO9iklfPdRuubxQQrm7NN/0
                      PKaSpr3hKJs9LpovPRkLiD2XZE29m9SVvYZpWj0nXn69CLy4vRC2cDzSMHI9wey4PaZ/CD3xVZc9
                      wOnNvDLIfD3/ibg9mMcIPNJLYj1MILI8nuwGPWsgl73XvYQ9XT7LPfAceTxfPIA9z92IPd9pxb1J
                      d6E950RwvX0wyr11tMO9U02vPTK4cj3An3k8/nIbPb3Ipz3oHVs8biIHPRt/r70oqa68wvNbPTnk
                      sD0o1zy8UeWaPRPuqz00mMU8jd7IPSCck7yU/L48oJpeu+MTqb0YtMg8C27LPZh2uzyq/n+9R6Y7
                      vRikrr3RsLM9RoogPbWJmD3wQWm85NDmPHXcsD00/RC9B29qvZAZLDzh5709s8JkvXz1zjx+UVw9
                      iXKIPXZ5WD1i+zQ9mjU0vf2cY70zvLW99cfMvY2fr72ngW69qts7Peq6j73YdoI8eJOgPMPmwL3z
                      d0m9JlIRPWDvOzsovG88tkyAvXoLKj3Ma6K83Jb7PDo1db2DQya9NmF4PUANuLqmeJi901ygPX60
                      gL1Q8oO9Za2kvcDJGTw6kce9gNVIvCXvxj2KTjO9KXaDPUzKoTwNwb29pkCZvcisnbwg9Mm8QR2P
                      PWKSED1ANUg7wtt5PcguoL0h/ME97lCGvTaKCj1guaA8Ym/BvYFDrj3adKC9EgPJvSAr/7uNiL89
                      mA+hvBraeD0A6LW7aEV7PDzu7TyRt489koe1vZn1yT0I1oO9CH/APAhA+bza0sq9tPXTvDXepL0A
                      J2o7wG5Du4qbDD1a7Ye9ef+9PcpeV71ApPO8Uo9sPUQI/Tw3gr69oBb4vPhMx70roo69AMM/vVq7
                      Bb04kcI8XueovctVvb3SOnw9lPKNPEhX+rwAAAm6q1yevfiusbz1po+9aNa+vfArVb3w9Dy9Buhu
                      PaBhlru7s449ZE+IvUukgD0dvsQ9n2CxPXWxqT2Rfpg9IAeFvADayr1PP8e9izmyvbBALL0Oax89
                      sFkFvWBVg7x9i449V/l8vaijybxoC028mU2TPSOLqD3kg+M8/sYsPdCCeb3gwDG9pEsQvVp1WD27
                      L5W98lFKPU7XWz3Y94m9jqk0PTbjcz2z7Cq9UG4zPHza6zwCJJe9lr9rPS+YlT3oCNy88wLLvT9P
                      nj2X0r09iKCZPMCwVDtlRaO9h8e3PVJjPD0ghk+9ihO2vWf+pz2ROLY9O1WivTpgKL2cq/w8zGOc
                      PEDMvLwS8x09mTSUPajR+bz8Ytg8Yp8QPYrzJ71HEhq9gAwzPIn2pD0vi6o9crAoPQAI5jgAeR66
                      0ulUPZAatL2GOgC9pxKRParJjr0Aaqm9zJ/RvNXnrb3naHO9ePGqPPCjKb3nnsK9nIMMvcqrxb0U
                      cew8eoERPZbqGT1eYUY9x1uyvXoICb0bbas9uu4pveAk5bv/rL89YolqPSDNhzxZ/ZE9G1C4PZnG
                      pz0tM2y9MhpyPSiMfzzfY6U9crRjPfEMiz3UNsg8eJSEPPCngr01mps97tENPQ0dsD1MBca8Yp4y
                      PcMBu736VF097a+0vZrZOL0QGRi9QwGhvWhRM7z88Ra9tmenvUzCxDyAaNm7wE9gvALucT1AHG48
                      q6KwveSw8jzJhKA97WqzvX+Myr1sN5s8Mu20vQCKX7xU7uW8KpZVvQInND22Sg295DT/PA9Mtj0o
                      NaO8W6rGPTdBsr1yLgo96PEKPBNtmT1NDY09ohZWPdBJzbvk1do81KDaPBWCuj2T96m9QzJzvb0H
                      JL1AlYE67SN7vcl+qT0braC98KFCvJo2QD2CgWw94CSauwojCj23PDG9KJUvvNTcuLzgi4i72Frd
                      vFiLirx1Ubo9aKlJPIDMgTriKB89q3W6Pe4VEj2Acbk8c/m7PXAQvL1Y6cu8Fh0cPfjIyTzaHk+9
                      KzCbvZDtlb0wb229gL3GvUDpxTo/TMc9M+HJvcqMYD25xpQ94gMnPebhOT1zMJg9VJLNvHB6A7xz
                      rEi9sI9tPIIlDT2o0X28KMxMvGtXuz11QqU9jF72vIcZyj1YQmo8soqtvbL9ZD2sH848MnFNPS2u
                      mb2Xy3C9zNavvJDgOLyF6ZC9uNbAPBpbCT0AkzY7zQrDPXfPRb1x7MY91hUVvYDFszs6iKy9oA8Q
                      u0FjvT0J+Jg9gEjAPIKVn72ua0Y9TCiBvFQuwTw5T8o9csxcPVhTWLw5epU9HSGOvepqVj3YgzY8
                      ISiSPbzxD713q7I9nYO6PY4dpr01B7U92lYRPbpfab2mbZ29YPXHu2elgD22Fxk9oO2eO+qTK72q
                      VoO9SAeovYxxhrzJap89Gj5+PSAH8bzzNY694jQgPQ+utL1oNhw8FNymPCrkU71w7mK8inMwPYOf
                      Ib1waY29KFtyvOC5jrvQBmE8FE61PJhstLxLhIQ9MdHFPQDC8rsMW6K8gioNPYP2db3IE9m8Ygp3
                      PQLNfD0ShEw9+OX1vMDUzjqQJEq86ZCFPbiTmbwjBcs9f0ePPQ1Har3GFoy9xuJIPZJ3s71UqsO8
                      4nMfPbD29jsA/HG7VN2gPB45Sz0wZg681k99PbMccb3YGbY8+vRWPRbRor1bx509gCPlupISTz3O
                      NW09whclPdByYr0zFXG9x0KQPTDkZjw35Mc9/ZJ+veh3irznUDm9ALWqOfDSAr3GcUU96gR7PWC7
                      Fjtyni49sHg2vGqJbT1AAiy7KV+hPb9Kvr0HgSm9bSqkPaokCT1W2ga90rgBPZndwD3UsgO9jd2f
                      PaMlJL3a7BW96iOHvQC0Qruwana8V4CSPYgZrr2dAj+9GAlFvMZCDb0CHaG9n9e9vaBb8buypbe9
                      YNYnu50fhz1yh3o9B6/Mvdj/RLwUeJk8EVKFPfZiLz3YbKW9g5dGvXqqdD0qGQ89AGqwuxQ14LxP
                      WYY9au6ovdifSzxgC469dKLRvNhbyzwwBNE7eMjQvG4gUj38MxK9HoF6PQC9Z7vS0I69A0RovYhU
                      qr0l3cq9w424vWQjDb0ACfS7gNdGvQAqIruK8Us9oEWbO/smuD1o9zm8QJd3vVLgjb1miCI9qtZI
                      vS6pnL1J4KI9tLwCvSItRD1Vr8U9I/GlvYpPUr0F4ao9ZhNVPaA3wjwTUyy9m3iHPejykr2eeD49
                      o50svb9Mu70P2L09TihlPdTIzDzOdBQ9I2S0PWLQaT3Iy6i8wkUEPUzW3jzgy4M7ADkuuogSmTw/
                      ycQ9G4qrPaJLfz0MjaM8OxuyPfCRSTwCyh498Qy+PYApPjzSa1I9dgRqPXlOpj0s2uu8LQsuvaBx
                      iDvQ+TG9ahp0vQCfFTx6XDg94FdKvbCp0Duo9RK8W+CevVhBhL1jJ3m9aPliPC+rlD0gy/27Pkym
                      vVC2QDyAa0u9HH3jPOIgEj2gvWC7GIemvGhmSjzmCJy9inYOvTR+ljy+VgY9inIUvYfetr04iZq8
                      KIeivQ3YM717AMw9RlmmvZAZH7zpFoo9qiksPdfye71QpsI7XHQXvTRvvLxrJ5+98l49PSk1jD0i
                      7Ak9qELuvBi3VLwVvpg9cpU7PQAjYjzQyIq70B72u6oRDb1O4nY90LAxPNBREr2K28u9IFJMvV1E
                      ur08Bxe9wPGjvFFxyj2wwVM8OoF4va9iwT0tiGW9iS6kPawqzDzrNrQ9igO/vdZ+BL3Q+sy7qHfk
                      vFq1Cb0ZUa09WBg+PICBuroIsb48sK/0O//qxr244sQ8SsuLvfchYr10Ug690BQqvbajqr2Aovg7
                      mGpXvICvYzwz5qI9gG6TO/nDpj03Vxq9CQ6oPTN4UL3+x469YM7tvCLNXT1qyn49+MaKPGhPwrwy
                      wIu9HmCZvfLdPj3TKac9OsltPQwMm7waHH29wA9wvJViiT26L0u9Ex6SvcBmTTzWFAw9CbWOPTC8
                      Ujw8j9I8mIG1PEBuf7wSUmI903C5vaURw70JY6U9Si7BvWQZ8TyX/Fa9NJaRPGDV3LxckwW9w/qM
                      PUC/2rqokoy9cMMtvHJ3LT0WvUw9vUxPvaaBHT0Z+qs9gt5ZPYG6rD1UaqY8YgF7PVRbzrwCXBc9
                      XSV9vZrTUb2sxAu9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1MjY4OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3NDE1MjY4OHEBYS5kAAAAAAAAAANklr2CzTU9ibKBPXpgZb3iKCU9alhxvUmwxT0A9a48
                      KvgBvQAezTl+JwY9gAbcOosowT28iuk8FCKnvNa8Rj3EWew8ya2CPaIkcT3/gow9YFVKu3DuB70k
                      89M8LISOPECJgbqZBsA9kEtHPItCyb3dJFG9Cmx7vSkwpT2G0AC90JO0OytNmb2AUdK66Il6vBdv
                      I70H3cK9wRyXPVWtgL3U9eQ8Wv96vRR3tDxSkDw95haTvfAhXjxoR6g8qPaxvGklpT04n469QHU/
                      vAkmpj1vrMo96GwWvBGfrz0CAcC9Gcq6PVGgrz2CYmM9T8OmPffStb1AO428ImWZvV1QQb0YLYC8
                      2N62vGCMXbuwL4C9h8GOPS0yMr3xXsg91hAIPSS0g70AqXy82kKxvb02gL1UK4S9KK9kvAqUR72s
                      Jxm9+A3DvGoIeT2qjHm9IB+3u0VTlj16HBI9UGKWu6gjlzyw1my8gEVROoLzGj1QQFG8FFWIPIak
                      l73ivEM91tebvTJsSD1xK509eSSGPUJLfj0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1NTcyOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3NDE1NTcyOHEBYS5kAAAAAAAAAGKHUz1Ne5W91FqUPLNpr72+OKu9g00uvf2+gT0aRmQ9
                      AuWBvc3LnL1oIy88TOK1PFghMLy3EiK9sB64O9AVV7z1jJA97EEEvfpyhL1gkBg7y2+Vvap3sb3g
                      4Pu8EUyJPWoLTr3jusQ9wnnKvVhvV7yQxKG9dOnXvBC4Cr3O/0s9RLHiPOhLtrwY4Km8aUmAPQMg
                      ML3D1YM9WvyavaQTEb0oJLK8VHXavBjepr3S2Rc9TuVtPdS29rx6uIe9k4SXvTBpCbzQveE74w+8
                      PWjpULxgR3e9pM0TvZighDyitpq98AhyvG6dSj0gmge9oInLvTnVrz0PGcQ9LroBPYvGx73aQWA9
                      Do1WPUtLyD1n/sa9cGVjvUbLXT0ZSZU9iGCJPOv4hz2h6L49orK8vXFqyj2IdLa9pSaVvbCzdDyk
                      hNI80B23vZ+swr2UWgy9Ej80PclKpz37LYs9xKnWPFAmCryyy4K9nUCfvZfJmT0AKAO4i7fEPcBp
                      sbzPULa9gJFQPJCkhL10E508UeiLPdZtAL0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3NDE1NDY4OHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3NDE1NDY4OHEBYS4BAAAAAAAAAJ3rjr0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f8
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        xawvaVmniT9QSQNk7ayUP3EFmZ8zH4k/cQWZnzMfiT86bz9b5kGTPzHd5ojKUIk/+Q7U2lbBjj/5
        DtTaVsGOP3bz/F59wH0/wMBEPI3shz8xleeD5feEPzGV54Pl94Q/dvP8Xn3AfT/AwEQ8jeyHPzGV
        54Pl94Q/MZXng+X3hD8P970w6MOYP7V9Lvg6g6Q/U88la4cUkD9TzyVrhxSQP25T3v6mhZE/8r4g
        qO/7oD8+vSKSuUCUPz69IpK5QJQ/LvKBXb6thj8XVK9OnriVP+BzSjsD2ok/4HNKOwPaiT8u8oFd
        vq2GPxdUr06euJU/4HNKOwPaiT/gc0o7A9qJP/Dt8I1gaJM/ynDlZUowlD9ewWDRFdeLP17BYNEV
        14s/zbxIKvtphT+SBC8S4ruKP4PY68GZ2oo/g9jrwZnaij9UWZ+wZZCBP71vnZnW64Y/2ibxDx5K
        gT/aJvEPHkqBP1RZn7BlkIE/vW+dmdbrhj/aJvEPHkqBP9om8Q8eSoE/8O3wjWBokz/KcOVlSjCU
        P17BYNEV14s/XsFg0RXXiz/NvEgq+2mFP5IELxLiu4o/g9jrwZnaij+D2OvBmdqKP1RZn7BlkIE/
        vW+dmdbrhj/aJvEPHkqBP9om8Q8eSoE/VFmfsGWQgT+9b52Z1uuGP9om8Q8eSoE/2ibxDx5KgT8h
        w9JJBrleP9ilGDdgD1M/M8ySp4ZfXz8zzJKnhl9fPwULc86udlQ/4glCFRIiXz9ty53raaBZP23L
        netpoFk/9iw2QaZ9aj9PZnv903hgP1gWfbk6y2I/WBZ9uTrLYj/2LDZBpn1qP09me/3TeGA/WBZ9
        uTrLYj9YFn25OstiPz30ZRIu008/4KEawB42Qz/JoZW2xoFYP8mhlbbGgVg/gLpyMIJ9Vj85recT
        3zNHP71RwK40dVM/vVHArjR1Uz+gmRCCYmBhP005/Ol6JFI/obOXmtB8Xj+hs5ea0HxeP6CZEIJi
        YGE/TTn86XokUj+hs5ea0HxeP6Gzl5rQfF4/bB/JtBxOVD9jiMyPC4VTP5uG5V1VT1w/m4blXVVP
        XD+bnIaNGmdiPzhyqwI7e10/arBO64FZXT9qsE7rgVldP7cw5QDAb2Y/wGzIok8xYT+s0Z2l88pm
        P6zRnaXzymY/tzDlAMBvZj/AbMiiTzFhP6zRnaXzymY/rNGdpfPKZj9sH8m0HE5UP2OIzI8LhVM/
        m4blXVVPXD+bhuVdVU9cP5ucho0aZ2I/OHKrAjt7XT9qsE7rgVldP2qwTuuBWV0/tzDlAMBvZj/A
        bMiiTzFhP6zRnaXzymY/rNGdpfPKZj+3MOUAwG9mP8BsyKJPMWE/rNGdpfPKZj+s0Z2l88pmPw==
