N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTU5MTM3NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjE1OTEzNzZxAWEuhAMAAAAAAAAUr6O+m7ADvtD+rz0PdKM+AhpHPjDilrxSBlk+8Czv
                      PXY/F76i1o++2Hg8vvHSqT4A5Iy6uwtZvho/aT4cnqi++ulbPrpZPj6IMi29YIlWvDNlg76TFp++
                      IJBwPEBJw73bUxS+SrdoPuqonb5LAJc+TssqvgvlK76oryq+jJ37PcBUGb4YKXY9wt6Evk6LWb7U
                      dak9/xCdPnoHLz56G30+eOVcvUInUT4sNri90ho8PipiKT4UWdw9QKmTPLBswD0obhQ923GJPkPB
                      Ur7AKt88eZGgPvww/b0bYqK+RmBPPg0qhD6A4VI9nFrvPTAJ1jzQogS+efGTPvufmT4uuBg+GKxs
                      Pej7X777p2a+nidBvgAKGz2qXWY+g8FrvoilXb1SAVI+gnNmPubQPj5qFX0+fNyLvgBrSL5uTi++
                      QBzkPJA4g72Qy/G94MkivNBSqb6EjPs9fA26vYCXl714ARM9NEiaves3iz58ptY9wCqUvvDIoj0o
                      5XW+A1iEPvOVOb7se7a9SVODPpWfmD6sdLi9xV+gPhDN5j1aHHU+0BuoPMTKoz0YZR8+LEqHvSuY
                      X75gyBQ9SGVRvTolXT6Ylxk9XvMKvgtSFL4AQjy8dLmUvcJPBT6AS269Fh8fPki1HL6fvpA+oeGY
                      PiAmdz0zwSe+tsbfvYDyGrvpPIM+ONhQvQACGDrE0Iy+ChBfPjgmfD0Gs7O9siwgPrr8DT4BuYs+
                      5S2YPhimQD1QKKi9NvtMPrroLz7OliE+AMDTO6g5IL1/354+KFGZvqCUEz4w8Yu93lmmvvxkzz1Y
                      H169AohFPix/9L0AehI+eKCfvoatYz6LjHW+9OabvsAeoL1E17g9cEe6PIAI/Dxelgw+AIYePkJD
                      GT7YYGG+Da6VPlYQnb7ONw8+j1iIPkagQT5B25o+QAI8PeDYSz1AkhK+Nhy1vTwTgj2z/ZC+TsoY
                      vrNmmr5/TZ++xJScPaBsfj3+yEa+AAz6PYbjYj6z34c+rpcJvnNcCb783aC9PlgQPhBgg77ykh8+
                      MxEGvgvCXr4Db2O+wBmcOwBL0zpAmdO8ds8GPk+Djr5aRaa+GLodPrtuC74ed2W+0J6vvAyfob1p
                      /aA+KK14Pfb4NT4ML6k9gH4Zu0ZYN74g2hk+NMbvPaHbij6suYY9IH4nvbhoVL2mT0m+9xGFPoPd
                      gj5mVlG+c4wdvmA+vT3g8nc9pk9dvgD1ib2AUeI9kO7mvEFpmj5o/Ak+WO9Rvgu/Wb6yrVk+vTWf
                      PktUK76AXY+9oppxPjjKKr4cuf090H+oPSDqXr0AqaW9/1SKPuMCmD7wa+C9O+efvpjSF76Thos+
                      QLUkPpB7wz34JCG9W+ZNvkhsMr3YKRw+7oAEvsPybL54SFe9OGMKvca5Pb5gFw69lub7vSAkEj6Q
                      TE2+AiI/PoC1nL29uak+qnCUvviCPL0I5kg9B06jPsrLYT5I1Eu9ePZnPQRL9z3cja49BveAvigY
                      TL0AjLQ7VIWYvvyDkL2oXBq+zkRrPggDF730Qoy+wJaVu06vBL5gfZc90LPkvOOPRL4Afli9zOPB
                      PQpYo77WdVU+TklLvv7HAD6upSm+oCFTPYAxDz5MzeK9+0p9vlJvHT5Dv4U+g+h+vmXkjD6Cuo2+
                      9rxTPu5EUD54PmW96FFtvpDAGr5kFJm9QnlFPpgqXz2qz2s+BB2avSD4KD4ABss9HEChvZa+Vz5A
                      VA+92/yoPtza2r0sy5m+QMfWu1sLVr57OkC+bkUIvjBRCr4+gaO+ugWmvkX5hz6o4xq9+BlXPeRU
                      hL4wr5C+EOKtPPR87j23d6o+MuAPPoAiOjsT144+blRPPlASnD0esj0+NO3+PXDmor4wmQE+dwiQ
                      PmfigL4gLDW9+uVnPjRAl77A/L89+0Ijvp8Zlb6AUKQ9QHeFvjUXgT6Iu3K9APOiPOICYj6bCoQ+
                      P8SMvkjPML6r9Cm+84GIPoAK/D0g0VU8KNZLPcUJnz7n1KS+UFquvEB11Dy/i6c+QMm5PPK0DD75
                      IaE+VZ6GPqCWNjwm2KS+DEKCPZ+rhT4jk4u+QJxUvjDdgD1prag+uOxmPXASzL14vic9sDzBPD6C
                      Or7fQoC+8ELiPKCV670wOZW8sKn2PcusMb4LFqe+uNdBvkwenr3iokg+q/6CvlDlrLwmFjO+3qct
                      vsgTnr4Wa9O9ZfeZPkCuDL5LYFW+mcmNPnLeaD4RAJc+gJJ9u4A9ijwcl5S+cLWMve8+nj78j6q+
                      ngZvvlBCib6Y4Ce+1d2OPjDL57whIqQ+wjRZPu5rRj4wWOU9tH6CvvBMSb4OBWu+Vg9fPgYA4718
                      NpS+GI6avrg1LL72X+m9plkmPqQl9z2ILSY+P8OOvvsqYb5Mqp6+Ji+Ovt6JRL4a+kw+vMyRvXZw
                      A77sQKi+WiFaPtpGjL5gCq29khh/PhIbkr4mvxu+Xk0NPoDA2j1s6YK9ZlrYvSD1vL0gc1I8IYWK
                      Poy6uz0y7Ya+U8BjvjAy9r2BIYU+zTSWPpbkOb5TLHq+CGB7vYA+Gr5MJc09GvgrPsCZlL7B75w+
                      sJnIPfye2L0eDUe+Y2ZDvmO0nD7Oiwc+YGA8vLAxmr5YJgW+zBaFvjBTnbxo3h29fZKJPgCP7LrD
                      6h++3wucvlMloL6Expa+LF+9PdAkMb5E3IQ92H4evvxpp77eaTW+FgE+PoeWgL69O4w+1PTBPXos
                      Rj6A+DW9IOAtPCY/pr6GaSA+eGkjPbocGD5Y6BM9c3SbPrAq07z2JTU+jqQLPuJ3QD5AV7c8Fgpi
                      PtqbDj6PLoy+8+uSPkDzLb1mJlS+7kMMPpUXij4TmYs+XlUjvqV/kT68LrE9EJ58vscCgD7KOZq+
                      TKa5PfDq6bw+D5a+MzJ1vn4bCj4YXl2+IDlAPDYjpL6rehm+wK9Hvl9Ghj4AmMm9MiJ2PuC+mb0X
                      TZc+OmIfPkOMbL6Uep092IlzvuC3Jr0TpIm+YGZCPMD0rr0IJhK+96iovmZGHL4e6Je+QIu6OxqN
                      PT5FQ50+Fqihvjwmsb2mnmC+KkCVviym/71gsAk9AKmrOgZX6L3iP0A+/NXPPR6iDz5myRg+dOyi
                      vqD8ar5ArVu+9sT0vd32ij5e4z4+rnxvvqSw5D1FgII+E2JbvkB5l734dha+o/cAvpa72r1rjmq+
                      AeGVPuAeK72OgJ++xNGXPdDv5bzgaxE+gDpKvZ6PGr5mPIO+VgpFPn/ulj5UoJc9BGmYPcDilr2A
                      92Y9VuepvjB37Dx2Et69cHGyPch4FD68Mfc9gPmxPfjabD1dSZU+iOZpPVijDj2kLbg9mCELPh/7
                      ib5hB6U+ELohvhyH1L14+2W+f5aQvqiQSr2Lk2W+KIZ+vQmKnT4jt56+mgZjPhEDhD6otyc9zH7u
                      PQZ5mL5igVQ+uC8vPVqkQj5zOY8+lNyTvcBwSL3O02e+qxGSvphycr5cN9o9Rtl4vhBGmj1KE08+
                      +FY7vfjfDj0C3FU+bqodPiAHT75AjUy+HL34vdgQFD5sA549pBHLPfQG2D1G9cO9g4MBvviDbL0o
                      ika9HiFBvtjTWT2AoKU85qIMPgDeED0gSDe+W+oKvrPSkb6IsAK9dpXMvSNIkD6gEL49wd6VPrAF
                      vj10oac9JCeRvrbPS746EXM+Evl7PrdEjj7A0pK77H/HvQ9dgT5io3E+gKxSvhAdnb7ptJI++A9E
                      PQDkALwAj7S8qnJQPhB31jyw3Wi+KOBGvqAgrT3r+Ym+XfyDPlRI8T20kM09SFQ1vk2PoT52XSs+
                      2H4ivnYAqb6aRzw+DMuIvaX6nT6KqoS+CzQrvqgXY74uwJC+gCQnvSYLxL0a7Sw+whklPvADl76D
                      N5++GWegPmx3j70a+Sk+QJY+vaBuQL4MnLS9w7lSvshKDT2QtAm+5tt+PkggQr2uBgq+YEClPVMl
                      hL6AbmG8BtE7PqXtnT7GYkc+AAdHvRAqirw2qrW9IMUkvGQJxD1XSJM+kCrxvNSH2T3gUWk9wEby
                      u1cblL4iozA+jPjWPVgECT0AM+a9KzeDvtadNT4A2mU6ABDXvcBEOD2AaLk9zgpKPgSdkz20xKg9
                      o80cvgBgAzzKnHE+b56LvoBCFzsAAII9XUCePlsgdb6AZ5+8bNyivTQRyT0Afda6FV+pPj5SCT6I
                      4za+Bjykvji7hr4j0Se+rtkQvie9jj5jm3e+zjUQPnM9oz4oUHm+QuszPlhJQr5ypk4+bFCoPcjO
                      SD0oDTs91jkpPklKgT78eYa+aJpGvqA6O7wo45S+RMumvi/kjr53T6g+ELzfPBqxUj5+AiI+vFD2
                      PUDnyj2WTri9dW6CPsO1Bb4AMow8lcyHPgD72ruA3yY7KuuTvvO1R76TpJC+CIEnPbhrgL74Jnu+
                      VkgEPiY2cb6fmZY+BltVPo4BVL52t8u9FRmIPghNPL0wQYK+APY/O3BlJr7KVm4+5lWJvqARj70g
                      qLY97uo8vtAturySWEI+k8I1vsqVKT6CeoO+4NNjPZ74lr4wU8u90MZPvnUclD54n3o9+ouDvkPm
                      cL5pcIA+huS8vVK6m77kGrc9IJCNvv+rnL5gMlE8xmI2vnMvjr7SDjk+gBEJPOCoPb5G3pK+4HBH
                      PGpIPj6YWxC++qskPitHGb6VkIE+KD11vaizA74gAQa8+DoEvSDcAb1OEzO+QJrOPewW0r2TdF2+
                      uuw9PjYx4L1YYV2+0USRPpbYtb0sZME9ZFKLvgDmYr0AYRY+AXSdPhucdL4UeMY94GFnvNS6oz1w
                      ooU9Rs1IPmppUD6fgYq+YABtvmPSgz5AHAu+kzZgvtChT74=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTYwMTg1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMTYwMTg1NnEBYS5kAAAAAAAAALixZL7ouai+OweFPhpLGD70z/498+lPvjMnib6mh/i9
                      YB10vQAzc76P7oU+84xtvljqZ77La0O+oPtaPBZlW76A7G87EDqZvhKrUj4s1dC9I+9RvpCfpry2
                      LLe9JlQ+PoIgMD4w78y8SOIwPbyBoT2W4au9irxAPjr+oL5Ay+m9fFKqvr5aOD5C11s+aIMRvcr0
                      dz6KUD8+a7eNvj10pj4TrGO+ACi1u8jIJD24qFa+gsKGvmA9Jz7ltpU+GzpFvoWikD6GOxu+IOSR
                      vWYFu70YRzc9mxIyvoAoPD1S7DI+kklaPjKqej7AYNE7irNZPvJlmb4mQrO9StkrPmAGI7zcSvc9
                      xmmAvsdtkj5mKjm+Jo5FPh4PZb7ehig+Ijw9PrMcKL5Ilp++ZunEvQv7Xr7Mg+i9qL8TPrvZBr5A
                      ocQ7sU2mPk8JoT70qqe+ytcjPmirYD1TrIE+TOn9vRjSLr1gdiC98viFvrq3TT6k+Y49GgVZPuuk
                      F77pZKQ+2K5uvUzFwr26BnA+UEWSvjhrGT4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTYwMTkzNnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjE2MDE5MzZxAWEuECcAAAAAAACNkpG9sHlNvRqXcL1whSG8NXedvds9yj225j49SmCO
                      vSDjiLsjocA9So0yvcD0qbrpj709KG0gvG1loD0qVii9c/elvdWLkT3dDpY921TKvWC1RjuuMJC9
                      mOJgPHBvLr2ukZW94NZQvaD6nLwTan69qsAcvbCytLvFJ8c9mde6Pb0RVr0AHEC5HTOKvR2wq71q
                      GBa9JRnJPYZpnr30q4+87mxrPdm/hj0ADgQ7oMCkvPAfLzzXl8c9W5ujPR7Xpr1sa+a8D0ecPfhw
                      pjwW4CE93ceWPcSA5zywYzM8Oq1YPU7Gfj24FMU8iMCAvVR72zyMbge9YAGAu9XQgz2QXxA8J3Jk
                      ve0Lxb3gs5Y8KOqUPAqoGD0g4029iihBPXpUUL3SnDY9qMPqvKJDdz1aflW9togMvVhOxDwPrqo9
                      6eChPQhGxb1KKJi9Bi1HPasFl72au5a9sNIjvFB45LsmzDU9ky69vW8pgz0o1kg8AGl9PCLLyr1n
                      xLu9u2CNPVhYGrzQ/RG9fvN8PdTn/rzHykG9tpt3PTm5qT3QNwa89OTbPP0sYr1jopA94L6ovHDX
                      ILxbyr29j6bMvYZyDD2KsBG9x543vYo2L73Td5M9Kq8UvaLDLT2SzXc9DLuDvHAqa73w61G8Qoiw
                      vaD5GL3eQKC9Rm6gvU3Kjz1wbIi97SV7vYxQt7zjTZO9Ey1LvUyfprxUdp48ukxfPbCGOjwAE2k8
                      A5u/vUDDULsYmbw81oJSPdu9iz1SnzM9onBwPWDMQ7sN1Gi9yqoAvQgVuL3Q3iE81LLQPIxOiL36
                      +Ho9AjkKPVqNDL1tIMM9InIVPbCawb1QcT08IViCPeUxhj2b36e9ABluujMllD3WM1I9J5+APeKW
                      Yz2DUmC9r7y5PYBJhzwweAe8MMW8u0CPF7viHWU9oN8Ru5Wqk70xeKg9ebSkPawXojzkPOQ8Qygs
                      vSK3or1R0MA9Ek5ZPaAVEzuGHiQ9N7axPch+x725d6M9zt5KPegFJbwSBhc9ISuDPXtAtL2idUI9
                      npt6PbDiTzwNb2y9CGiavfcXa71dB7Q9E1OwvWLaFj3xWaw9dy+IPWD/Vjuf7ck9MCwnvDl9sD0D
                      OVe9Mp2BvdJYbz1YMbC9MNrdu7CqCrywlBK8rv2lvefzZ73i5g09cyTGPbDugL1uEQo9/psHPaV3
                      pb38rxi9iLujvW++iD2k0/o8nIHvPO+Iwr2iETY9hVDDPYm+qD1wwCu8fNOIvVWQgz0A0HY5lCuP
                      PEL8Gz2noa09nzGPPRTi+jzAMlm7KrV5PYBNszymjwi9vUnAPTLzyb3ehhw9ZAHsPCCBkzyM/vm8
                      ito2PYBqwrroxI08p72DPVR6jzz6daO92u5pPcAbUL3IbsS9nM3PPDDwBjywo6Q7A1syvfo+az3Z
                      27U9DKCPPIYoWT14X4y9YEAhvTif37xHVVG9aBGjvH3Shr3wbGs8EfidPSvhpD3Zi4o9kPNsPMrE
                      bj2SwKG9NWCVvdc0Wr0AjWY7jDgJvTalJT0NuTu9xmsTvQgpjLzQwlC9yWK3PaPQdr0UkP88saPL
                      PSBwW71g/HK7QYjEPa6wpr3NxYM92NyYPFRumLwQa1e9crYXPYA5vr2T6Ti9aiykvYPkc71wbDi8
                      BmB2PQnvjz1gelW9uu+UvfJSLz0cy4G9GFyBvczYmzyssMi8fQmXPQD/eDxSbRQ9uPSmvZ7kMD1y
                      Wmk9QpsBPcqtC73usH89jS9Dvf3jqr09wr69QBuIPIBRdTrT16S9wO5rvERO6TzgwsU8aIlSPNDf
                      uLvRAZ49B2YlvRapbT1yIEc9ZdOLPQDqV7vq7mS9wPJ9vSanMT3GGU89jMjJvF1iPr3SqUU9lPzd
                      vN91sz2sCt28IllSPaB2EbvTqsg9ACFFu5insLyX/US93tmDvaxL2zx6Ei89mhFNPePjwT2A2QQ6
                      ZeOaPQP9J73HPaw9WISCvGD4lTxlCMs9cCu1vcp3S73qM2C9RsYCvShLubwwTmq9UF+jOwDUWr3h
                      Go89zLGbvEomS72H4XS9hT+fPSCXnjsw4PS7FmqBvctHuT1ObJW9nJLhPAXQgz3zSaG9wF7xvGMu
                      rj1yxbq9mKNtPKLbYz1nwLA9Rr9+PdBnHTxT2749VHXBvAclyj3lnYw9AxjHPV6Eo73sGaK8anUy
                      vdCGYTzq8Xu92+qZvbptEb3KEIS9lrFRPZsmjD0iZDs9uAjKPC+dw70m1Xw9tLukPCKyqL2Q2YG9
                      ykFJvaLJJT2msCg9Cq81PddPLr3AT/28q1qUPQBldTzrXcW9sLVdvGxCB70Qq0q9v221veo/fL0u
                      Fpe9LD3pvBBzBTxTeMA9s61rvfnsoT2/Dq295ayNPWhqUbw64H294MqdPI4BRz3z05c9AAy0O6Ir
                      Fj3M7YW9AGuCPKL7cT2vXpQ92uWgvSMhsj0aSMS9CdaXPUBtwbwz+SK9ZvYIPctZvj2ITrM8HI/c
                      PJBDeL2tCYY97Di9PIeLeL1Ycbw80MqavWRH6DyeH4a92N2KvcDJDTsMkoQ8NMblPOi707zBFL09
                      W4/BPXqDjb0QIDk8QJAUPCclmT0ApGS9sNysvfnKsD2L16Y9nW66venbgT0jcTa900VAvaOxmb3e
                      +G89vQOLvZKRmL1Hji298rNmPZ23ij0EVdA8oSaAPeiGt7yS/x49CWC9PWL6UT3HnDm9FM+rPIKh
                      Aj3SwX49KLEiPJiw+bxmnTk9vmNNPSTGgL0Tqyy9mMNAvGBkbLuzsJi9+7OvPXIwLz3IOae8hRDI
                      PQB8cDtzsHW9bq2rvdOfl72gkoW8MCFLPPjR9byOQ4a92Jq6PNc5wz1CGUM994V6vbalZz1Ne8U9
                      ApRlPTw83Dz1Fo+98+LCPVMbk736NiO9GlYXvZpKEz0Q2I+9jze4Pe4uHD1CV8e95O8LvYhcoTwA
                      1h07GF2gvYrQv70NDcc9al4fPcLPLj3+AlU92O/DPBLgdz2lqIS9qmEUPZTQ87xeopm9tHjePAdV
                      dL1w5QE83zjGvcB6LTzA5ze7aGo+vK8sxL168n490h1IPR2yob0jO02995dpvSAOWb2YwYK89Quy
                      vX17rz3VRMU9wNZUvZCRQL2s6KA8V5czvdhDo73IiK68mFpVPKdhur3giVO9QPsjuw34u70/Hsi9
                      OlNzvQp9hb0IN5w83TBgvQAW3LmYTSS8ABp/Ox9itT0NdCK9gNzNuwiboLxgYkk7oDp7uzDka7y3
                      krE9vzOIPWL1Sj3gPeg7oqNIPXpvib0LbKO9t65eveO7gD2AM1y99ImpvCA8Q71SqTE9jcaWPb+A
                      gz265ca9rEoBvWD6b7veEBE9zcVvvS/Jr71RLIs9fUNBvQAyx7wWoIW9ocKfPWb+nb0QMX48AC51
                      u7CYEDwgdNs7/4KvvYBX3jswt4A7Ro9wPSCJqrvvh4M9B9u8va5nJz3ZkLs9SWjLPZrJUj1Rjps9
                      gfCbPQZIWT0OgqS9ADYbPGUuor1i7x49SKWkvHZqnr0VqKg9DgmQvcCYzjroMQC8jy6VPeoTPT2b
                      WbG9sQ6RPZQ9vryaHBq9VDjUPCUIyj31VZy9dI60vJJbRD3A9+S8ED4SvLirybzoB5W8QAo1OwdV
                      Qr0GF0E9NHEMveNgpj1wExE81h2YvbCrBTz4Jfq81mQvPZiaazws3e+8SK+ovHvtnb2gwM47jNC+
                      vHgctLwAfwq8xok0PfTt0jwdybq9WFeRvNHKoT0ASUa6OayTPRehXr2OFYK9mmM1PZiZmb1Cmhs9
                      A5V5vZL4FT1AnBK7uWG/Pdqqnr3aoke9WNScPEDARjtBsr098+vCvRR2ozwRl7Y9mJRAPD2uX71y
                      9l89gDSAOwBEk73w63C8kJ6yvUUJyr0sVf+8+JKavYo9Hr2yHHQ9EJe0vaSuAL0MdKS8L8/LPVWQ
                      xT0AQTW7qEbIPACAlTfqiF+9+Pm2va0oqj3neaY9SOe0vEkzpz0QhXG9fhxqPboNWb26xsq9w66X
                      vZzG8jwy+nI9YPwqu2za0zxTu0e9qnhTPZYLir2AsPY6tlcFPSmiiT2dNmS91p5CPRoMIb1vjIo9
                      91G1PdFJkz0suec8oGq7O283uD3iElo9fQCsvcZ4Kz1jcb69NH7wvP+exz0Aar287E6gPHtZyr1g
                      de67MGJCvAx0+zx+ZHY9MEd1vbWdsb1KSSi9K861PbSVjL1d6TC9ZIYJvdSDyTxUhdW8Ft9OPXj+
                      lTxB6rU9JHYVvQBuCr3MY5O8GAcgvN6uGD34fb29h3LKPUmhmj3wT308rPuJPJZhAz1Y3Za9pNT+
                      PABRpbxAJSi9AGx/OVWJxT19hh29wpVPPeCwjL0M3/683InbPLjgnrxhU6o96FOvPOIpOD33abW9
                      OYW1PYQihb2AKbK9oGCOOxB6LTz671u9AKnFvVDXRTzgbQK9YOhquyiTSTzsXIE8ZuhIPUyZibxC
                      JiE9SF37vHWAxj1DMW29bUSRvRpGXD3A4JQ8Qp1sPWCj47s0Z9o8P+nGvX4EAj3Kmzi9Om2evVjR
                      H7y0Paw8aALAvZrPZT1qIha9AMKyOUYgGj1J6J09UEsdPDA8HLw4DNC8oo1iPcq4hr2tXW+9EiU+
                      Pb6Qpr1/V7m9Mx5pvRzM/zz4fao8Aqh5PSSBzTwA2fA7yfycPUwFGL035n292GRdvLIcGz3mrpq9
                      Q/J1vWwRzbxC45y9k2Y+vVFVpD2AcLY6MKsMPG4Qn709rWm9SXuTPYfzwT203gi9zleovcA8Rb1A
                      swe9+qZ8Pck5lj3Y6bU8quVkPXrsn70HMze96PugPMA63Tq9NoM9qiyKvVAzZzzl0Zg9ZGvuPMHh
                      iT1pC8U91oCBvca8Nj1jgEi9kh69vU/2xT2MWvE8DUbCvdEhoT1AT2M8/oo9PUBRmDp/TJA96kU7
                      PQLUDj0LZ7e9WoGBvVgbfjye7Y69PRyQvWpBGD3xCcs9vh5fPfGPzD1gIom7k6Suvdbfp72o+qK9
                      LUmUvY25xz1CUjk9AOPzOwrCWz1MPKa8MbSmPUjCsLyYQpc8La9EvWe+Xr20xYs80rSovVgrfjxn
                      fVK9K6WlPR88iD2oOmE8AMBKN8ppmb0qdkG9oJTJvGIlRz2U4cO8cIMuvSPwhz2Ou189GjPIvSbX
                      iL2WTz09w0B6vbJkr70V8pi9cMFKPGimJrww1me9up43PecByL0To5q9DolIPefIgz18dOM8s2HL
                      veE9rj1RB4c9dztXvV8Miz3AXLq9qCSjPLAmIzwNDKc9NE/GPDDsIrwAQQE8+uBoPR/wpT0hOMU9
                      YcC8PZIFYz0C1D49/W82vdB0Vrz0p4i8nY2MPYAQ6zvAdFM8fcFevZsRgT2C0AI9s4lfvRRW3Tz7
                      JKE9yiE1PfOOsr1yCxc9gMqKOtKMBD2Asck7nDXkPNTtozzC9nQ9Jj5NPQpyvr2ihrS9Un++veN4
                      Q73qKnq990pLvVM1tb1qBcy9ulJ1vR60n7267ks9EnTCvZe8oT082eo8yeuUPalPxT0wY/o7b+m7
                      vSDRprwKxUY9+ppMPUCVbr2YGre8zwTBPRlBxT11Rae90HRZPL3nwj0AABo8imqxvbjqiLxITYO9
                      j0SnPQ24Ur3Bsp49hK4UvS6kMT0tO6C9WBotvLA5x73YT7Q80+++PaDF7rtMhBm998kcvUcxW70z
                      mj29wym+PX5ZNT3Mlcm8qEXFPMtqiD206Ps8v5qCPULxDD36LHI9vbaQPb6gOj3sY/a8nuGmvZSa
                      0jygkrm7oAQeOxhuMbzIsq68dMgYvVptsr1qzrS9ZWLEPQusyj1M/5U8bHixvDAQIr2zzMy9phgE
                      vSBytrzMvOE82HiMvM2WLb0awQk9Y2enPbq7oL0q9W29lqEDPSxFn7zZtaM9M1J1vYo4qr2oa4m9
                      CYqxPaBsGLtAGwA7mOcWPBgDE7waO269q1i0Pc3St71HSH69me28PUByJryyAxI99DrEvOgNx7yx
                      LIY9Bs0EvQ5kWT2gi5w7IIiIPNBAlbtIDI68wNTHOgCbZzpRvKA99mwYPRsMmj3smue8SAiVvUqk
                      I71Q5Dw8K7+rvR2FIL1Ube4869SOPcAOYDwojpA8MPaMOzCZar2pv7o9EIhsvH17kD39jUy9NJ/r
                      PEeZWb0Q6z48rIzCvDAXFTwHm4U9n8uHPQA3FrpNq3O9MFtMvODgLb3PN6I9OqY+vfrdZT2CjzY9
                      c6uDPdW4lb2mA4S9MI7Xu7TTmzyO0429fUaePUnonj0AxFS5QEpAPLXby70XXoY9gp0RPVBVhDue
                      VY+9H1i9vQLGlb1Aps280CGlu0wwozxwtgq9SeCpPewfkTxQTLu9DJ+EvW5tYD1YUE08Cb7FPVt0
                      rT3yLxM9a42OPTxhCb3NSsC9bK/wvP2jOr2K3lo9UO4LPNDzPb22WXU9R4BrvW6ULD2B4bg9Ir8o
                      PRJtr71rsrm99AGrPCopEj3eN2M9WJdDvGzL2rztjC29gFDEO3/lu73kue484LjyvEPqmD3fvJw9
                      sHXEu0N9nr1XcMU9tzEovQDrAzrGU0I9X6WqPQ/Sgz36CA89jfGgvYB7jLyFLrS9meOuPQe9Xr0M
                      ccO899RLvSBQPb27h6m9YIJjvUWBxz2pCrs9gNiwvPFkrT3oqfO8kPwYPO4pqr15zqw9KOgHPDZl
                      LT1pk409rIahvH51Bj0CUT493qMNPeounb1UjAi9DLisPIA1eLxAJ8C6ABTLONrlBj18O/w8ivys
                      vTbZUD1Jp7c9cNQ6vSfAwL1tJFy9YdTKPaC+pDwZa4c9gPolOirHfL1s+Qy9aSCbPdRk3zySi1U9
                      mr1LvTvFhT3m1GQ9OgGavV5OMj0rdZ295AvTPHBRAbwM/ci8cFcfvYwXrTwCsoa9IvCKvcAsIzsT
                      PsG90AYyvMjmv7zPxcU9p5CvPZJHJj3i8bK9oCzVuwxyiL0wYMW77FC4vFKQFj1aILS94gcMPRow
                      Jb0LKaU9gIjjO/7yJj0FOok9I6M8vSeWHL1Q1++76rpuPam0pj19iVe9TVOfPZ1rt72YkZi92ncA
                      vfBUUDyA6IC6k9WnPbffNL0kMOQ8KAKKvC0iqb2IVLQ87ITSvDr3eL3gKsm7gFGeOiAvmr0wYfy7
                      er4+PaJlJD2h57I9xOHvPGA36Lypdak9gJ2EuoN0tb0UZeC8w6ZtvUDmhL3N2LG9sP5avACK7jkg
                      tLI8T8CSPeiZJbx7CbQ9tayAvfGEgz3upS89qLSOvWWNkr0sLPA8IOqYu2Hkqz3ohmG8Q8sevSTZ
                      iL3g4OG8CWGmPVgPOjxRDr09QWOiPSV7wD3X2Kg9YgZJPVLjbj1mwIm9MDOMO90JLL0rzbi9R8SB
                      PWHBnT0+qaO9qHqVvYo9PT3Y7S+89N+6vBvev72WBxw9GDEMPHKGLD1+IGc9ei1XvVjuMjwVDIY9
                      6E8AvDA81jtAaqq9o8OXvcw7rzx/OMS9Nk07PdJzUD1crv88eJ+AvHogOz1KRKq9ZDH4POBS3btg
                      PK08lwmJPUcbzL39viu9qYrFPV3xsT2a6RG9ppcLPUqlyL3QX3w8fXlJvQCxyrxJ4sc9d+CwPZfv
                      wz0wg/47xV+9PbQ1zrwquE49EuohPcqxWT1mpZq9SAKqPDFohj0mHg09aIMPPOhpUzzCe8G9Lo2d
                      vctxtT0ZM6M9R5sdvdgqbrz9/ZY9eFfAveiFAbzTAGC9gM/4uqBJoTybobY9ANjyuboBdT2RQ6M9
                      YC3MvZBqGb15o5c9SaukPY6WbT1DS8s9FRPIvVp9UD0mJCI9WCAAPE2nrz38pNA8QPERPJBztb1A
                      9v+8INzIPN4PQD1AciE8FnqavUB98zoK0gy9GMjFPPHCuz0wq/a7cDXDvXGWyj0KzR69wTS2PUKL
                      Kj0EudA8yzvGvaHNnT3AvN66kjqvvXXepz1mgyw96Tm4PRgmtjyQAGC8sIGIvdScAb1Ys8i9Viof
                      PeBrjzvTXym90K3xu7RgtrzH1YE9TpGlvUhwojzQ+au9JbO+vXbiKD2OmUs9VISDPMynzrxXdme9
                      EhVvPewx1Tzaok+9xey9vXI6Oz0tm7s9O1OXPW9Giz0yTR09qh82PbWJm71KNlw9q7jMPeD5wbtA
                      5mk7zGb9PFBbxzvvLK892rtivQpJq71HXIY9WixovfrLYL1ohgi84LSevIcomj0kcdo82sI9PSfW
                      J70gvou7XlaRvQCKO7vYbc+8QC9/uyNiuL1af069xgcXvRFxnT0oC2a8ussVPdADjrvNKsC9ANAH
                      OvJ6aT3HI729YOIZuypeSL3J4p09IKXovJi2wLyh3aM9WDHhvJYtdj0thp69urEWPYCEp7t0wMq8
                      DgoJPQBsxbhUatu8wDCGvPccUL0AHce958IqvessoL2mXYu9EIN8PC/ajT1UvIe8gnuKvegIQryK
                      tkG91YmUvSL9Az2i1l09TJfIPIDk9DpjsMg9TfmPvWAqpLwH8Bu9AnY/PeYMp73y6gA9luofPahq
                      CDwlX8Q9nXzLvWMClT377se9YQOBPUgBo700dJg8TLvIPPBDrb2kaOs8k5dCvXMKr72gAFC7QDMq
                      vCxKjrxjFkm9Vw+cPWjT/7xxLZI9mDGKPKChDDv0wbW81KePPAq4Er1gVEq7gMdrPN4DaT32RH09
                      mcCsPW5NBT1TVqq9Z+VqvXJUPj2Q8zq852W9vWpuk720r/M8Zw53vYnXqz2gvd68+/u4PewO37zt
                      jki96ZKePUyLAr2u0JC9tD2IvNCJ3LvJUb49mkeevRxD3Dy++5+9OiYdvUD1yjydB1e9R7y1va5G
                      aj19hsO9cpkMPSp7bb0SOR49WGvavJz/D71XpGu9yNygPNJSMT3QPgM8Aw47vWnWpD3Y+Ja8BrVU
                      PXGOnD11D8k9RaSgPViUszx5o4E9krQ9PfY2mr1tDFi9pt8+PeOsO72o0iO8nUROvQxl/jzKSBe9
                      dAGyvH7jCj1XWZc9YBx/veZ2gr2OMn49bNHIvHjDgL1Y/B08qEbevJ4DPD0wslk8zulWPUBFz7xh
                      t4c9OuovPQAA07coyUw8nnJEPaLGLz1KDR+9ih2/vSaEZz2CP5a9sY6dPTWkrD0UWwi9cBRsvBhl
                      DDyPa7m9XTSjPbOepT0j7sA94ESNPKB/SbvC5A09WC/HvMJeeT3bQLO9qqKxvWKfcD2Yn2g8ujVE
                      vZmUpz0VNba9YDqmO9jdKjwhXJI9N91VvXozkb2C/i09ACz6vKitpjyY37Y8Ja/JvahHdbw/U5Q9
                      yc6TPSgKxDwc44a9LapHvQI3DD0C2hs9c7GhvYiovTz1DK09K/K/vctmhT0yLcS9gNlMOihf+rzQ
                      Uwm86TOtPd48HD2IgIO87gesvYgA57xaaVq9p+SjPfTTyrz+SJa9r5y8vTnKsz0zZbi9oUyaPfJx
                      Qz0X2aQ9VGKSvJfayz0S1Hs903W4vbYzmr1UX/q8fQ5RveeKGr2SIXE9l4ukPajUSTxVbZW9YMkc
                      u4GOkj05HoY9sOprvNoVH70Y1tO8yi1oPVrWGz2aoBQ9jPzCvHJnxL3ewXU9Ao69vV2gfb1wFxK9
                      ToRNPbQnxzxORm89xIjaPBrpVr0XZaw9mA8LvAB/LDxNLcu9pDWEvT1utT3qSHE9wsUkPayRnby+
                      AYa9R4ZTvasVgT2A2oI7jgZvPVhFW7zK3je9zCyfvIrDSr0JfLw9gC65OgzIqbzwRjC8CP7DvSwt
                      xrzeYoO9KZKfPWhWxL2gZ4u9sf2LPag1mr3PlZo9KNAwPOozP72YRBS8n6jMvRKjCj2ghLy99GWZ
                      vJB3fDywXMe7OLm2vJ7KdT0OQ3c9ZSCXPVj9vDwqZSS9W8XLvaPFpz2zJE69I9cbvXMkVr1MOpa8
                      IyZevYIbWD3YnGW8GmcqvTb6j71pVMQ9UiJnPeB8RL2Ai9M7qY+5PTCiIDxzg5a9gJdgvdAoY71j
                      UZw9zJeyPO6ufz2hKaY90hDAvTxnjL0Ao2m6nFoLvXBZNrw+Ajk9TPn8vLYeEr0An3k8sn0OPR40
                      Gz3b7qG9DaxQvVk9mT1whzQ8oB2Auy6KSD2qPVa9uNeIPLJcJj0QB6K9WpYfPVrqSr3tC6A9uBK+
                      vBbqWD3dXTe9Dh0MPXJLND00nN+8AANku1jd9bxgptq8zwq5vfnwij3D3J+9oUyWPYA4QTzqX3m9
                      tO+ivEyglzzlvLE9LrF0PSoAJj3q9Z29ollfPQrkLj0gro688PRavGLMMj2A4jy8TbuBPWBJZLul
                      yaC9OjMavazMh7zWeQu9g8K2Pc0kpz3AGRu7kDINvSDhlrtQlyo8Yp2yvXGBkj1dz7o9yPqkvQhM
                      sL2R6Kw9mu0JPXCofDzQbbw7fxmwPWtjkj16DYK90L76u6LKvL2rrru9mTfDPchzrb30nP28Zkem
                      vfNHpL30Ssk8oBRYOy1qjj2gT1o7GLJqvFWDl71umA89JoYHvWfMtr2gX0K7mm5yPY1akz3o1r68
                      qCCpvJ1Hgr3b8ZE9sC4APLA3dbxAoBm7wFynvCgqLLyDJMi9PFoUvRIkMT09zMy9y0WmvTzv6jwt
                      R7s9Wnd0vQrZVT3rrLI992ImvZY7GD2v55g906S6PUJGFD3AL7K9sXuaPdiVnbwBO6s9KN+yvIqH
                      Ar1QoqW9FFXGPDBdjr1nVcM9nb2UPb+9wr3FB4M9ES2CPWBTvb1XnF69K6fDPQD8hLqLDsG9SuJq
                      ve2Ynb2Awmi9Gy2fPe1gyD1Yo5q99+HDPWA/tbtvALg9dh4WvT22jr2IZLK8C26EPSZEbj1SDBU9
                      Y0xtvUAyT7vw6Bo8Ru5ZPdi/qrx0xom9ifOVPShKw7zgYdW7LZZfvRCGyr2En9Y8AXLDPSgvX7zW
                      MjE99DXePIzDhDzgdyW92weTvU3Zar2f+MY9ObGNPXpzIT2gqSm9vsuZvYnruj2AN5c8F+V0vflX
                      tD23FpE9JbfAvVDLf7y4W8i9AIqUO5wMAL0DpnW9DcYmvRI4SD3ukSA9VZmgvarps71QxuS77LX9
                      PM5BET0AL4+71rAEPUODsz2sVOg8p3xlvTAIQzybI4o9QMZ2vRSUhTzAYDe80vlZPSY1HD2Srqi9
                      GEKPvOUGpL2tB5q9incLvcc0YL2bYqm9c/GTPTKRST3giiu90o4bPYa9DT2ABZ463SK4vR2qqD2g
                      N6k7FBu8PDX/oz1KVQg9ostDPbMcvj0ACwI7KG6uvejMGrwXO7a9OMedPJr2P70SayM9MKtavCJH
                      UT3KCJm9WmwSvSNfkz0qiKK9g7FQvY/xqz1cIYa9zBn+vIDFMzw6yXq9wH4wvTEEuz09Ga696TGy
                      PYLaOD3Iecy9TAD+vLLXAz34LYw8gOm/OhNVqT2otGW8SsJRvYeDzL3AunG9faaHPeiMH7zQ75e9
                      eo5PvZ+OzL3i2nY9zaugPdAYnzvZjpM9EMKsveM5tD3Fuo+9y6qJPTlMoD34rq88rQ+5vQCVXjv2
                      u4q9sNHEO0AOwDyAYbS64BK+vP3coD2wXOy7Q0NRvYA6C7zqK3m9wIldvcs5mD09/mG9KsEMPQwo
                      DL3xgaQ9unIHPdTOrLyY4kE8YPdlu/G4sz0ovBI8KOeOPAJHST0Amqg78C+/vdDdADwtupI9QNIz
                      vG02mD3QoFQ8ojlgPfDyA7xdLqQ9tDMOve4SaD3A5y08wL4EPO3WtL2X7bI9gvpmPXo1Wj25lJY9
                      V//EvZXssT1gEOK7jZjHvYCmXjpw0Ug8FgZrPftvkL3M5468yEKtvBhoRTzeEW09SfK5PTUnnT3M
                      l+U8kMQYvfLCLj0YXFq8JAKEvQB8P7xBrsw94Dq8OyNLqr37taY9nXoxvaqjc702pYe9LahYvRCl
                      J70ss6K8zP7RPAALcjy3f449QhJqPaAYjjvM1aE8e3e8veWAtj3gysq9kmXKvQSw9TwwuQg82itK
                      vbFtqz0q60M982CfvQD9errsQcA8GMClvBiMGrzfBYM97uULPef2gT0z48K90BThOy41Dj2N1VG9
                      2APJPLidor3dIXy9elgUPbgbz7yI1vC8EpiZvW0DHb1iW2w9/WG0veeMkD20lrA8wHobvEjX17yg
                      px67nBUJvVDVJjxi9XI9ATuVPcAqjzrRF5s92uQBvcnUpz3nh4w9sALCvdClIbw6rnK9gr6XvSwe
                      pjwDko297OCKPN6JJT2aekO9SfinPQKsyb2O8Jm9FHcEvUiluzyY12w8p5RUvWh/XLxPLbq9cBk7
                      vE5Vfz1K30g93uN4PXCcNjxHmme9p0dOvQINjr09QGi9xKPRPNCUqbvA61s8w8O/PRPYhj34tq69
                      6F4vvICkvzsIJ6A8QKs7vPerIr1ckwm9kMidvWOOmr0jnTa9AA6VO7DPNLyjVsi982mTPXQrwbwj
                      F5K9X1+JPRCnarwKLgs9sPHQu6Dog7uQYDo8yK3+vEY5YT1uLIK9+KGXPOo+Wb2Actm7wEIAO5bo
                      WT1Vacw9qC26vC9uxb1XIpI9QEd2vGw8wzyasZy9oAAWvWvsyD1VcZq9Csx6vQDvTL0SRxM9qouJ
                      vUVmmr3onkS8spkPPXcBIb0X0Ru9m1m8vaEnmD0lxL2908x0vYwJjrzoV5O8poeEvXV8s70A4v+6
                      jDW2PJIVQD1ezBQ9txJivWjf8bxQ0ni8lkBbPdbaQj2m0kM9AG1Euuv6lr0MT888YoFzPdDCt73j
                      u6Q9poE3PWxJjL0AkCM6U898vVj9BLyKoTM9UJdRvHBeOLzh2qU93a6vPcCJADxYxrq9QF5hPABy
                      qDuUEOy8U7DKPQq5ET2Akqc6Q255vRHFvD3ADx08wIxZO+Hroj0AgMa2U37HvcC4YTyDoUi9nm8q
                      PX9wxj32WIS9WiImPQBLwLniFgg9g4UevcAQVDxXF2C9f7vAPR6wVT2YRi08xWuJPcClLr3Q2Zq9
                      nm6ZvYwPlzy3Dny9GO5bPJjqwzwSF1s9cCsRPHDUMb0EIu48tDu+PGuZvb3Ohms9OEC6vLOfuj1o
                      qsy8eroIvQACnbqClIS9XvtxPTEFhT0wR4S72VawPcr6L72L+8m9rKLUPCDknrxmbRK9bDazPAAp
                      jL3k3fo8KFnFPP71jb1CnsO95msQvR7zFj2tJb+9ahsiPcCqW7wucEs9wCRXO2Lqcz3EI9k8AArW
                      ufA8b72Vp8c96AWxPNtUqb3isqq9YFJjvda5Qz1JE5I9VHPlPHUFlT0R94I9MAAFvIq3ET1g6aW8
                      JYnCPYBL7LuwkUu9tKKFPFLzw73oHZG8UhFTPTduKr1U+he9cyKOPT8tzL2CAnE99x95vW8lyb3A
                      mMW6pxtvvfawJD2Wiig9H9jEPRCseDwqF2S9bR+WvR2Jo73QrYk74qAxPX2DyL1xEJ09s3efPYJI
                      Gj34/Iy8aF8+vIDhjLr+UQw9aucLPfiQoDyoScy9DSCjvamxoD1fo4E9AFaQuXtPhT2gV/a7lqSe
                      vddmL73g8ec77p6lvUISUz1aFKi9iKaxvHqGSD0It8w8iA/EPKA3Er1PVLY9AOjwOgJOeT0AVe05
                      1PaQvGaRGT3d+zm92Lm7vKp7Br1TE8s9bXfIvfeyZb2ju6M9gAevvZFfmT2QgRy9YCzDPFDCiTsA
                      STK8Q4TJPRqtjb3ywjA9QvUaPcCtFrwSoQM98vkGPVrBRT2H62O9cBUVvMCfub1NfIS9DjKkvReb
                      nz1gCJi9G46gPbXXjr0Tf6A9SqYxPfBZM7ysNbe8NAOsPMIoRj0U4Ou8+nEgvUl/sj0QSTs8KHzH
                      vQMzJ71ze1C9zZLIvaJEIz1K6Wi9fUrKvTAmZ70tO5u9wzGLPUB7d7yRg8s9iC2qvU34Ib1jfiC9
                      bP+IPG0Iib2WTge9rU3HPW6eq71M3v68oPz5vDCGeLy0OM48W5WcPaC7u7uTVCe9AoYtPYLWq70K
                      FV296qIbvQAqljoWn1s9NMXNvN6QST3TYkS9gPsQPGDQUbsgI8e9GDOMPL3Ep73xJqY9/c00vaeM
                      mz1Y+qY8QBx5Owhzv70iD7e9AJZnvYiq7Lxw3ke8LK7avEf2wj0g87q94Juzu1B9TbxSRFs9Zd+n
                      PcD4YrtUmZu80BQTvVjHCLz9rZW9kX+iPUl0jT04pO+8jbgpvWj5dryUgLS8wv9KPfQ/Cb0ABq88
                      gMXaugdXyj3a35y9QKqmvICiubpl0Je90pcgPaC4JrvCloC9SOHgvEFgtT0pFMg9gOOCuic1Rb0m
                      phk995iDPbD9+LuefSo9nb61PdX5ij3MBYi9ZO32PE/Asz3ARrs66HOuvYI6j71UsJo88mQCPaSv
                      3jyAECK9wVuIPXs0rz1wYZO9IOuVO/cuvr2g+2M7cC17vOimkb2y+3Q9gBVIvY3zqL2DBli9L4bJ
                      vbtBlT3JbIw9bKTtPABSDbxOyy09TUugvSBo77yfgpY9Kv+RvYW6iD044Z+90s9SPSZgGj2xmsw9
                      ksBiPay+qzwor8O9+HyPPFiae7wTyk69FEKqPLtioT30dNi8U5OkPfpMW70hMbo9MZGlPTeVZ71+
                      klU9lC/rvIiphL2ABzE8s/W+PRu5tb2At5294225vZjpnDwFoYo9UhQ0PQMQZ72xkMo9WVSGPeMW
                      hT3ALDa8YFiqu9O/cL3A7iG8TDSIvAXohD1COFA9L8WPPQS7/TwEgv48WDJ2vAMyYL0z+YA9XyaJ
                      PUMBvb2QSgu8AF7OvK3Uqb29dGa9wtkHPYwAjL0Fs7e9du8/PUjPjjzM6sc8QX2EPanSkT1NJci9
                      2TilPSdgPb16Bmq9lP7YvMH7ij0KGmy9svNuPZhIAzyP2cY9SsNLPajArLxoKzW8lB2dvJKDLj0o
                      JGK8nu0MPZvByr20IMw8YLirPEmAvz0gUa27z4vMPTAYHbxMMsa8A3CSvbD/ijsvZ4A9ip6evY+U
                      yb143dW8guUPPT08nb0oSI69NJmOvHCxPDzKtS89HUlTvUQYC71IOay93hFSPb1orD1IDa29MP5C
                      vOipr71N4l+9fdGKPZd6TL0AOuS6hTOcPZRzm7yoHRG8DFSovMPblT0T5TO9YIeju3HnuD3VUoe9
                      Xzy4PdC14LtNU469oD1Pu1dvY705E449dwBwvc2Rn71mbY29lKb/PNd7c72RhrQ9XyGaPcg6tL0u
                      Eno9ano8PVA9f7yiegg9oDMbvfOCiT2w7Gc86I1WPGoHwr2Cfkg9YFuwO+z1nLyygy89CGmAPCEO
                      kD1fT7i9akpuvcBrTzx00sQ8eTHKPZmFoj0/P7A9/SWvvbsWlr3QwZG7neaNvYl0wj2AV9E6Xe1u
                      vUCKCLzZLpk9dV6evYdWzL0ClxQ9HZdaveBMnbvABVm8UitGPYrpSD3K5Xg9AHBpPGWjqj37r8K9
                      tGa4vChqFzzskIa87dCSPUGSlT1u8Us9EO1wvBLJpr1uk2Y9lqVGPSD20LvDv7m9dfybvcbiVT3p
                      2rw9t6a6PVg9PTzpOZo9GOqjPLlypj0BgcY90IfLu7HgxT2tLb49geHKPaSYDr0vo4w9yFH7vM1Q
                      J738kec89SOaveCA/jsg8I+8OVmnPQHRgz2S06q92PSFvGV8sj0UnIq91A3/PLlYmz24LZk8QNfA
                      vCUWxL15yL09aBuaPFIoRT0nasW9WCRwPFiCv7yohWI8JzJcvbuQxL3E9t08+hYXvV+htT0qDQw9
                      JDj/PCZoWT09hcG9GaiaPbDaUL2ZUYc9EsYyPceRsb002YC8HJYCvUAzrzr3ESS9btIuPe38d714
                      L5I85SC/vfVPnj3QngA89qQAPSQU9DwAsLc36OzIPBIhNz3AWZo824G0vZATI7yQ6GA8vURivTr4
                      wr25M4w91nwOPf3fXb1MQKU8t+ZjvQDGwbvS0lw9DFesvJ/rtj11L7s90BUBvOy3kzwY6oY8p9fK
                      vS0PUL2w7FK8+JmzPEkZoT3Z58M9oDqePEdKuj06awq9q8HHvTBpqDtg+669d/6HPSCE3Tu568I9
                      dPvfPP6nHD1DZR69ULB6vWDieDsYqY48E15YvRVvrz1Asj+8DK4PvYNKpj3gA/q7OslUPQrzoL3i
                      fE09qPkZPJjcJLwI6cO9oCayvQrPg737u6e97BaQPLPHyr3DXTW9AAvVvG2ltL1ojX88tsFvPRp5
                      F73VSIc9QioSPQBnD7uH6nm9oIiuuwraM72SW4S9jFmjvDf4J72okQI8x51YvcYdQT0El/s8PZU2
                      vT7yej0AcnW7aFwyvAB+szu4VaU8mI1TPChAIrwV1oU9mNIyPJnWlj2U04W8gEFIvJLdeT1QPOy7
                      AJOsuxga2bzhyrs9QFFRvA7+Jz300eQ8gJaQuwTp7TzuFHk9EAFGvNWkkT1wHpy9YNhtOyxw87w9
                      CYm9SpkzvWhKdbzjfcS9SO3GPMKMET0S6UU91+chvWiWgzwG5hM9HhFJPcBcprqHS7U9wFKyuoA9
                      67t28Ia9XHPmPAVavz3QRDI8I4d7vYClFjygCCS7jL7vvEJsbT0yCLC9owBLvfBVfDydPWi9PiSd
                      vbtAzL2CszQ95gh7Pa2wbb1cXgq9w8i/PYCL3LsS4Qg9lot0PW2ioT2AGq27UN1PvBT2gDwgO2K9
                      Eu2zvZSW3TxjOZ49wzQiveY1Bb2UJRS9k92TvWA/ZLsRWro9sui7vUAYWb0NTpC9R2O4vWlRyj1A
                      jlE8+p5LvZJTYz0WaUw9J7qHPa0nN71q9lk90m8OPWMWpT1i4Bs9yiwzPVAFYr0Z9MU9IN67PLd0
                      KL3SHUE9LdnAPWCChTwiSrS9t4snvSaRDz2Ak468+rymveNHmb3cxu888ro9PQAhMrq+02k9YEeE
                      vA3lKL0Ib8u8ijIXvfLtLT2+ais93TBrvcpKMr2Yx7e8YNrWO3cnlj3aGGI9XaSlPbj3urytcDS9
                      rv+YvYDvTL1VeKs93hosPVTq+ryTpqC9K4+APU2Prz1gSL+9gKi5vdncoz1hE6I9OC2BvSgKcrxw
                      Vym8M81CvRMinD19M5q9prECPbAPur3UTYK8KuYUve+/nT0wD2e9UX68PaqZGz0g0ua7gc/GPZLS
                      Qz2CkYq946JpvQebVr3i5S89SRKVPQAuFzvy42c9vts1PWiJ07ywpoo7Aj7JvQy58LxiAEU9XRiz
                      vVBorLs4IdG8bQPAPUBZEzsYTEA8Ee6bPUJXIT0TlzW9JZLCPSzUprxQmUQ8sORWvEdEK732E0Q9
                      xWWZPVh/xDyY4Lm9wBrVunLOVj2BDLU90HeNO4PnvT1QMY+9AndMPdz2gb2XUT29DL0TvQ6EUD3D
                      4iq9w4uTPSj78LyApMe6QPOrOmCwmTzh3qU90PU+vcyGB73IVvi82xHDPQd3HL0qz2C9rYAcvTAS
                      kbvtc0+9GtILvXl4oz0DTG+95qYWvWCTP7ts1t08gGYovG/drz1QnTa93hROPajyVrxT9U29OlF3
                      Pf1Keb2bqr49BLH5PLSWoDwnNx29un6DvTGAxj3QJQY8SGKTvOiLYbwgGI27y3GRPQB3ZL2CwBU9
                      kwSGPXc6jT2m6Ym9SzOtPfXXnb1gYJI7mrwivewJmjyb6Kg9dMwCvTruH72SoMq9KpSnvY7xeT1w
                      KiC9+8nGvZjQT7yoSTo8gFdivG0okj0Ndlq9/npXPaDbyL3TKDy954yoPSIWND0DhGW9bUmyPXTd
                      j7w8i/A86LxQvOBzljut1Y291LPIvP2+pD1sZ9m8YIPJu5JxJj1Wx6C9WHGBvdDLsTuwlTu8ZaKX
                      vR0syT2iMwo98Go4PJa/BD3oE6G9YC03vezwk7ywk3S8mFFyPH64Sj30IMK8yfmVPaCAB7tgBnW9
                      Rc2bPWY3B72MbIi9TcOEvcHMpT0gIwW9MCYvvej+szy0YJg8VOkFvY0XYb06nBq91Q2bPU9YrT3d
                      2r69YXOOPcBss7ztcCO9qD/0vHEIiT24ups8oD/gO9iQGbzKmAK9CsI2Pd0YLb1tZ8w9Ikk+PWdl
                      UL0zX3a9wuWivUMoPb1yb309D9bHPYBLnzvG5nk92mVEPYqneD1DIl691hBjPRkYmj2LT5C9S8yl
                      PdjSNbxWFVE9kKARvYZudD1GWTA9wPuXvP9PuT2f1ZY9VGGsvOspxj2M9dO8vIENvQC0yb0xLaw9
                      mntlPXqBYT0Y7SI8aip2PVCXpL3T75y9QKamvQ5SED1WhyU9ZWTFvT7+MD1ijMe9b2K3vZcFuz3S
                      WB895X+tvahX4rzeoiw9RyizvRrGaz0wyGy9mnCLvcDRSLyiQ3c9N/idPYPpw73a63M97OngPIDI
                      5LzdwRq948hhvcAuizxasms90K8AvMdvZL1sKMa8wFUvPNa1E723uLC9JMz4PIKkeT1aqJq9KjBI
                      vfA0Ab2oREO8YlcpPWEAhT0AuVQ8Q9+zPdBm4zs9W7I9iObxvLqhFT3sNsy8ALjqOowb7zyDSL29
                      ETDCPdm2mD3Lfpi9L961vQAEu7yyDI69kwyrPWi+g72gdME7zEaSPAAzcju5zrI9oChmu8qtFD2Q
                      81O86NijPLcWSL3aKZm9yx2gPb0toD0478S8A2JYvXjurzzlXcu9jsNNPTlvhT0wv7m9UKgOvWrJ
                      fD0klNc8xOHRPIW3jT3UAMg8oGBPvTh/rL0wE729jMKDPJxUE73qcQA9pqMDPZoeWj0p6aY9tR2x
                      va0luj2yLyM9DPWIvTjik72ber89U7acvaL0ej2Qs0M84vSVvQr3tL1xSJo9G9quPeRE9jy6V3M9
                      +AaOvACECr1A4Tu9YmlKPZ2uJb22+6i9cCNIvYCFWLw0m8K8l54tvbELiz0kWfY8SvIcPZNVlj3j
                      zMS9yDGNPJLEBz1A+Za6oLXjO7iGr7yg3gO7AMKXOQy89jwtXli9yy+wPaY7SD1LFKU9zA3IvGK4
                      Qj0RW5s9rrp5PXBVmr16kXI9UkUgPa1pg72m5SY91cGmPQ6zZT005K28rjkmPZCbZTw+aZy9+jRz
                      vew61TxVpoq9cgNyPSjYrbzjYWS9t8W2vWzgw7wdkka9aGQlPApsfD2aAks94LeTvT1Ehz12jBU9
                      blUuPfqNaL0u4mE9gCKJu9DLxb29jsG99KnDvC2upr1v5Z89DLu2vBe1Gb0AjK69iJ6rPARa3DzO
                      Alk9Qf+8PVZZkL1hI7k9hzRDvQAoLb0ajH69IK3xuznQwT2wCZG7WpRnPfRFjjwv0L49qGv6vHKf
                      LD1AvzY7oPe9vSWBwj0qHCg96xbMvWBBKjuDiGu9gEHzOhg2YLwdLYw9W1OTPVv6vL1axYm9WreR
                      vWAM6ru2dFU9Mp86PcAfc7yAGui7zf9tvcVSjj31hoA9fV46veBgIb2YEZ68h79NvQDPIbzogLu9
                      xoCqvQConbhjgEy9mAu/vUBMSLswH6I7EqCkveO7er1YAsq9HcRfvd84sL1g+yM7bBquvCFItD2m
                      yDE9AIo3u4kIvz35Dqs9WJBZvP0Tpz3FeZU95kBEPZOGl721NMo9IJuVPCCmzzvwQ8i90Om5O56l
                      Lj1s5pU8LhIIPfPPcb3MM5Y8xn6ivUUcvT2UCvc82qQyPeDFmbt+yC89dT6rvXTD6Txox7m8lD7Q
                      PECUNrwKVxS9+usivXBSO70I/4G8VnNKPdocHD02mgE9ymJePcNViz30nIm9AvZyPbckI70AR0K7
                      gNi0O9pPv7228569EKiZveshwD3Wip298PufvU0MwL0XvLe9SvVIvUA5oLy/J509Co0BvSKhyb2i
                      83s93cqNPThzlTwdH529TFX7PMD5jDyg00E7PckqvQMJIb19sca94D7DvDpSJD1oEgS8oQiaPVPA
                      t70jzYy9DDHnPFChDr1sjcQ8fiwhPRipTTygDYE8vslRPfugwz1Vjrs97KjXPCp/N72ADl+92KO/
                      vVPEsj2gz6e9AGahO73cZb23ZiO9IqknPVghpTzGRwQ9ANj5OwEurj1YnKY8orhGPcEVqT2wkfG7
                      4K2Bu8QZ7zwkhM08f/KBPTSa1TyGwzo9MJZfPBfESr1q5aG9njwdPZ1mpj3mGHA90JhwPCcMxD0y
                      qGg9oM4su2pgwb2xuJo9U7q5PYILYz2lfo29IwCtvco4xL0xN6g9Uv8MPbzLhr1guSS9HY67vXKH
                      dT1ismM9hRW+vXLxPj2A3Js7aMZ+vAMitL2pacA98DwwvNBj9Tvt4sY9+uppPZVxuD2Akpo6KvYW
                      PfYhNz0jJFS9Cx64vfDhdTwulUc9Sy7EvRAuvL1yLLS9N4tZvehP7rxRMqc9KECnPCjgmb3jY7g9
                      TpwtPcbph709cZw9gDrIPDN2NL1C7kk9STi7PVA6mDskOdg8/d14vUCTKbtgz7g7Amd/PRGapD3s
                      EMS8o3mTvSnSyz0Ktkg9rV9avYDErDymEnc9Qt0DPfABYjyXwpg99OKIPFNgyD1LFII97LKCPEyH
                      kTw/Oba94LRHvfhJur0A2+S7V4mUPUwQxDwzlS29gEiKutAhlb2Q38m9aRfCPejOUjzqNB09dNGp
                      vMgFrjy8yYq9+JqjvTIMpL2gqtW870CdPRZ+Rj2b2rg9wGw9vT95mT2pAss9iBCKvUIRVj3AN4K8
                      TVBGvYBPpTqt/GK9Gl50PZDVZLyAcak6o/NYvSLgGD1MiOw84IY+vagAo71SvgU9QFtGvCvokT0Y
                      XoQ8RfiKvVp+OD0k3s88sL/Vu6ustL27/pu9LZygvQyc9LwF3ce9vDTcPIW4i72oecI8EHZhvcDs
                      H7ykFec8cONmvblGuj1KsCO9dBX9vIMOjz0LWIQ9qF0uvJh8mr2wBfu7wr63vUpeYb1PUsU9cGYK
                      vLLSBD20roS90DJdPKDRY7utFMY9KB9KPFR1ozwOHzs972G9vQBElTqg7Zo8I/9RvdpSXL3F/7g9
                      shiFvWf4Kb1ojcO84fOGPbgziTw6QRg9zIamPDA+wr1MMYg8qHT6vG/1tr1AGpe9dcq0PRPSH72A
                      VrW84GbHve8wtj1948a91j8zPeQvAb02iXI9BmUiPQCZub1YWsG8oL2zOwqvi73tQrE94lKkvWJu
                      FT1y6GE9QOXivKBP/jtdy7C9cIwZvBpCu71iJMe9MQiXPaQe2TwbuqS9gAF1vYCU77qBNcc9o4eg
                      vW7VpL2gh4i8pDXoPMGPqT1B5oI90e6WPV/ckz32iW89GhgYPVntmj3zaKe9bPjavI8OsL2qLY29
                      kotiPUaIYz0/4rO9LOjDPFGurz0FHKo9rAuwPNDW1jv0XrC8ZloTvYKVXj2w4TM8h19vvefDkD3r
                      UsY9+lyGvaGElD3iYV09bJz8PNrVur1hGoc94E7/O9RR37wtrUK98/WSPdo0Lb3Ywqm9B8JovXI5
                      CD1Gfo298s9BPdCawbuUIuy8bOPXvAFXtj1YXye89FaAvIHBrT0D4Ig9Fwt4vUyfxjyAP8i8ABsz
                      u8cRc72Ij8q9NCGEvYBGH71S/Vg9IspWPQSU3TwEUM08d3idPeghqL241Yu8MCbAvUDKeTyAm6s6
                      Ki87PRgxvr211ry9gItHvDQ3/TyhLrQ93lQdPS5FeD0oZkY8b1KxPcdBmz3mPVc9GGsRvMAHPTsD
                      DHm9gll/Pdwv0DzQzci7pza3vTRgvTwwPpO9UQvJPViUzLyAEkW9QAYKO083yz2AUf26nvyPvbJ+
                      rL3XQCq9xbWqvQzmqzyMyqU8bL+MvZ5KQj0Uz/Y8m5iwvbNInj3CH7m9oxewvePHHr3gQ4a7wM5A
                      vE2NO73bOaS9w+tgvWypwTygCAW96D1zvMjGmb1aCIK9Bv4Nva33Hb3RkZ09bMaEPEG9hj1drzC9
                      psZBPT3edb0aIEa944tLvY7BqL3NTzq9mk+evcZ7ID0A0rQ895ijPYw3gbz1H7A93ahpvfjLnzyA
                      WzE8ypRvvfoGUz3UB8q8tCalvL3smr1MXci8Z96nPQDZar1sEpe8VgEsPYgkzL3tB2m9rVyCvY1/
                      y70zKsy9HQcyvafHrz0sPsq8jCu/PE3vqj3ROZY9lAXTvNyW3Dw6nX49AADPuvA5PzwYObQ8qBpz
                      PBEAlz0aDFs9OLC9veyklDx1V549Arc1PcYpmL3Y2Ke9NWvJvdbzXz0HcZQ9BIbpPLA6z7u61Vc9
                      YLr5u+Ckpzyu8lg9pi6rvVxFhb3B+5E95lFAPT1Yiz3o/7C8kBkNPKAn2btavUa9K9yZvVp/Sz2k
                      vvc8MFWeO5R7h71gEPy71yTLPauTyD2ZJ6g9GPB1PK3qML3Knb69ZpVdPVfPoj3GyQi9AhEOPZ4L
                      ib0Ayh071oIAvQAA9bzCK0890hJnPeLkLT1tVyG9ABOSvQ2pHb0zDSy9gMZnvWhL/7xe5GA9ACu9
                      u6ieLzyfDsq9KPOzPDTKnDwhKb093pOVvYZUfz2KHkI9wbyOPdC5qDvAF2G7WCXivLCNFzzUExK9
                      QssZPXP0lj13Kcc9JJkTvdojCz3qeRG97NO1vG0Qhz0nSL49cjKrvWF0gj3Y11m8mwuVveBvqTwU
                      MLW82LS1vWJLZz0WtEc9FIuOPABxNr3wBCA8WUC9PSOVlb0GclI9qP1CPGnzoD3FI5Q9ArRsPRoM
                      B726p0s9RbmxPeKqJT1iSyc9tKfXvBjGA7yN6hy97xu1PQxhkDyKVTQ9AhA7PQCoOjvgltg71Ir+
                      vKCZj7tKRne9gpS6vSwDiL0SM3o9GkWtvTpNND3vsKY9uF+LvdMZrD2AzWw8jXFsvWrus70UWva8
                      kGBlvbe5qz0eOUo9wBmHvQqZRb0+IKq9Yl91PXDEXLwApmY5hrsDPVQU+Txafh29NqqmvVcUiD09
                      YMy9wEbNus9Kw71AImm9DUp0vTBRwDuQcC48KW6HPS4Un71gTCw7EiSyvQ0gd70zWpA94iW5vTYB
                      oL37r7Y9gJFjOuimxb1UI7W8PdW1PTDSkDvFsqU9Hv5VPYQe0Dz1VJ69kH4TPAA/Lb2VGqM9452b
                      PUDQGjyTqqo9lFKAvNXdqD0y7089dtSnvXl9wD0hhJA9uTTEPXsDx72R3IM91MLjPAyLkLy998u9
                      xtcEvWgp5bzQqIu7RNz2PNKQaT3cRfI8g1qtPXAlezzqwT69APF2On6SKj0rf6Y9IIHBu72YcL1M
                      Dui8yP36vNn4yT1yEjs92vM2PUDSuzxfS7I9gGu/vYC3mrp6iDC9ENJMvN3qNr0g8uc7mQOSPfBq
                      TzzXjcc9YGpBu1JoCj0TLcu9LetFvVaoED3Yr3c8WCmevKx+zTwAXqI5yo8gPeMaWr2g1a27wrgx
                      PVMslT2qilm9PoJnPaqaqr12To295YvLvVj6l7zAtUy8oltRPUbuJD3CdlY9qeW4Pbh38LwTJSq9
                      DoZWPZrKer0Q62S82FWXvSLNXz1xRJM9ABEIPPf+Gb1oEfu8N1GcPaexTr0Q3ca9d5mOPbLLHz3o
                      fXu8gpBnPZHHsD1lAaC9rnwBPbrghL0FcLQ9uLmIvPhsqL3VA649kvRoPQo1fz2f18U9RIHYPMJu
                      XT1GPQA9oOPvu1/viT2J6JE9AKUUvPH0xT2AOwm8OlIwPc/pvD36bnC9qCwHvBYWi73AfQg8wKJB
                      O4HpgD1A8AI7immdvT5qMz1sc5M82ADLvVpXEb3gEHS9Ktk3PSxH9rzFHoG96LNBvGbnB72HC1S9
                      0XaAPa+ntj3TemS9d99Pvb4eBD3kGg69F6VkvXRbFr0C0oC9omN7PUBjRzuUh+28EA8lPA4MOj0O
                      I5+9EZiXPbiDtTxFeKm9OGfovAyug7xoYiq8wJpYO9B4tLuYtYW8aqupvUxZmDz2P5K9KkvFvfLk
                      Tz0qaKG9CrkoPc7caj3HuB69c0GTvZK3xL1wjUI8ivdtvY9Nxj2kkxm9oGZau51Ckr0AgXQ6+rVT
                      vcAds70JwZQ9vbG8PfN7yL3fTL69AKZMu5Ndmj3auQU9AskgPQc7dr3SO5S9bEqyPK1GJr0E88w8
                      APWPPMljkT0hpZY90phLPX4HVz19Zb6930LJPa5VfT0o5gy86J/yvJ5vgb38DQy9T9uvPShrRbxQ
                      Aqw714WnPTJbpL2GKXM90AdRvc5WQj3w/ae9yCflvJYDfj0O26u9Ks5rvdnigz0AHEI5Q3CSPe6n
                      Sz0AxJ69mtELvaX1vT23irG96c3HPVY3Kj1trss9FCCVvHKCJz3H4C+9Hi5xPaBYZL2KlHC9QzjC
                      PURVD71QGb+9TduRPQAUZbxo4Za9ALMXu10RIr1oFUo8wJTWunVLuz0RJ8Y94DW9PICXvjpE79k8
                      oNLGPDs5kb2kG/g8N9xgvfvVkT36tCW9IlGbvRhrRbxnrMU99EXyPFSmn7wJjpc9efiWPZg3GjyS
                      jq29KK4mvBt6rL0iHEs90+AvvVZcQT3aUSa94GDnvNf8oD3QUUC9cF1wvboSK711W7g9Ru1APWzG
                      9DwwudY7oiJmPaE8pT2KdDE9VlMBvZp7Z72A5028Iz60PW6lnb0I96G92EdXPGYKBL2wUp29px+p
                      PUyI2LwImMm9ORrJPUDTVztCOxs9hf+KPSgac7x4+4G8laKOPRgZt70KIgW9w5CEPQXEwb1PTLq9
                      iNiUvAiolDwfwpw9+eGAPet/sr0gb+E7IMvlO/fwZr3eOAM9gEaCOiFftD1jucm9mhaDvTFqgD1k
                      lc08XXq/vSCktLy2ezg9O+GpvegKyL1Arjm7UOpIvagm7LyaOiI9jod4PXGytD0CFqy9QNBrO2EN
                      lD0VCrY9DtwsPVtvnD1onb68TWi8PRHMjT0A95U85KkTvU2Ujb1U9848YB0FvYBRmryawiq9oji/
                      vUxdx7yTTq+9YEMpu0syxD0g3IE8ZS2tvfY9Dz00EIi86loHPSiRJLwy21o9TqeLvXf3bL2rK4+9
                      qLV9PGnWuj2Q8xq9hyg9vWJbOj1aXX69IFClvfIRaz0UwIE8YlwdPXU/zL1QWHy9DZlYvc3Xsb09
                      vLm97OnYPIn6qT2t47y9q1+xvXE3xj0KwYC9KImAvI36mb1Uao08srSIvfRDlLzjLKm94oiEvVaU
                      Zz13Rcw9kkFNPdiZ07zQ2iq8AC1FuxgZLjxC8WY9RDTvPBSZ4zwAEui5OnSgvbiFjTwj2Ma9QMHY
                      OoAs+zutFky9JaqJvcQaBb3gWJg7Y7E8va3Tnr2UUvi8UFb9u1D9vr1C8j89c8GZPRj1EjyFuam9
                      QMhAO+oAC70A2ou5YrhlPficizwd3Zc9cNFXvKGQhj1aGHO9sN3Zu0cdur14hrS8VBWfvOPVR70a
                      j289wAacPLaraj2gBsK9QDRZPMUwlr3QfM+7up9Ovfp5CL13Ga09AajMPddqZr2N3TC9JFDuPFhN
                      or2FYae9gAGaux25sT2uWKy9gj8SPaMrkr1SbxU9mjUBvWlTlT3iIh89SRmlPbdryD1Fm529sBiA
                      O+m3tj2AM/C6dPiUvACzTDq+vJS9QHzbvFJNSz0U6oE8/SY3vVN2vT1+Dqa96LNmvKaMGz0AgAc7
                      +idUvcI7GT3XhMi9uHWuvKjQJLy4frW8sLMjvKenvD3hH6c9SoEqvbD7ATwTz3+9A1uVPQokET3L
                      /qy9aSuaPfgt7bwKDS69EGVjPGC4z7wKqVe9OJD8vFqIr70yhi89OPiePJugvT1a9qa9szUsvZeL
                      Nb2gKH+9+qQnvZ4LqL0Ia4y8oUOZPXDjWTzAtx28xRKmPVDz2bvQUZm94IsDvZvDsr0DqMa9a2nI
                      PUCeKrsoxsG8k6qZPdf5gz1SSlw9ukRHvc3usL3gvsq7uyGTPbVJtb0Qzae9TEfEPHYxbz0tqrU9
                      U0WavRW7wb2S1RY9aVKsPXBgHL2wL5i92KgrvBIlRT2AiRC6F+ldvW5bFT0U05O8OAvFvcngtz2X
                      18a9CQeRPYCdSrx518M9QANZu49Ujj3Cem49gEBWvIsogD3ivl09YshqPXMooj1g88e8qgxoPdJJ
                      az0fCpU9krrLvca6nL0GjBc9YP0Pu+2TPr3B9KY90MgXvH1LXb3H+pM9KudLPfQ4k7z0ydQ83Mvp
                      PBgFpDz0K7+8oNiROw4/kr1Ahjy8EEOjvThasLyFmri9VZzCPbqxdb27WY+96F/wvDRYsTxY4hq8
                      hhIXvRGFvD1zIZa9gIzYO4tmjD2i+009wOhePEzosLypM8U9R9y+vUCaQby6YHC9MwSyPfNWf70T
                      SVq9GG9vPLYoaD2FpoA9kIVavGeZW71gPZy8O6yqvbA8ezxqZxE9GKS4vG0Aqz1yALS9Eya1vXAQ
                      YDzVuoo9msgjvV4JXD2wcBA8E4RIvboLN72s9uy8PmRjPcCxbjsYFDc8spQuPWJaOj22vwC95FuA
                      vTmGxT0PP6k9Fy+cPWpLVr2jUTS9ecuOPeMAjz3AX2u9aHglPMXQhT2Iwck8X8OiPQDI2rrQbIE7
                      FEvWPMVMuz2IrMI8hQSHPbA3Yzw1vpe95xCLPesKqj012JG9cJLCvfaMjL1/G7O9E4w+vYCBArxb
                      1L69FyN3vYr0Pb2hS4g98mJ+PUCQPrvCZhM9sg+HvRS//7yAdoy9Vh8rPaCrDTvT8Jo9E152vZCO
                      rr0qqA49JscsPbHDuT0CoH49t950veTQ0DzA1CK8cm2dvUs5mT2lRaW9MJ6eu9rlf703bIU99b24
                      vT4FpL2xkag9GsRovQCEtzvMsa68ItTIvcHeoD0wbyG9GbeWPfAdYr1UKMQ8xDnfPNA//jtydkg9
                      2nyEvSGFyz0AyG+6RvMKvXp5ZL2AcUq8vhM5PTqMlL1w7nM8MNF9vTc4yb33VzC9YOeWuxQrlbxj
                      j1a9IKvSOyFLhz2kC4K9dn0Ovf0uo70eEoa9kthkPenAnz03JnK9YKyTPBDqQ72A5C69k8SxPaqK
                      Rb3aYgW9JrVQPYx04zylGKg983YqvUIKwr2WahI9wBdNvCEqqD1Ynx+8cKdbvN6AfD3TXcQ91XeJ
                      vWL9Cj2lrY49V6eBPQMKf71Eqw+9CDadvIihojyTBE+9DzfLvXgjgzwAW348sho7Pb1Ckz1QvOo7
                      mWe5PU3+tr1aTbi99ObCvOgeLjzV8Y+90uhNPYBplToEuNs8YGHzO1cCKr2ZqL09lF2TvBKIST1g
                      HgO7ZpcQvdjyBbzq2yK9YhkGPWqjDj1urA09w8evvdYqhr3U0Mo8jcY2vbrVbz0/J8w91Sq4PfZB
                      Wj1SITU9J2fMvRQwir3xSZo9jLn6vLXxjD3R1sI9j8GzPbBWeDxAwMw8GIqOvJ7lNz27AbC9mr81
                      PbUPnL1kGPk8NQC8PYbxdj2o5ke8mrxTvbc7s72Vx7Q9jAr5PLnNwz3GLQA9iNi4vCu3lz3eBZe9
                      3t9dPUq9t71VkqM9FTWEvQq9Jb1QOy68vtIuPYCXsbzoPaY8jHmYvFDBQzwMh7I8PciAPX18QL1q
                      l369KOVHvI6yIT2Q7LO9VamDPQS/8zylTpI9IGmkvTlAgT3NAYq9Gnp+vQq9GL1QtaQ7o61qvdja
                      wTyFusK9UABEvLhYlDygUWI77PeKvIR6AL3zmC+9DWSRvYB4xzvf+7E93z+0PbRCCL1TTHW9UID7
                      Oz7Glr08kdw8B5VavUCBk7p7isa9uEvEPAOTmz2R3o49AMcGu005W73roI49xl8vPbB0Gb0Ancg7
                      ykcxvTAEzDuN7Jw9t8ioPWRP9Dxg0Ny8hI/xPIGGzD0hZJ89cIB+vehzhr0Iirm8v6G2vQAZYryC
                      6xc90l6zvSzegr2gc5Q80KBIvV0rI73bYqy9ZTjJPeH6vT3Dg5s9FEgUvawr2Lx9TWS9H6vJPQCq
                      dL3Nw8K9JkNRPTFqhj0a7Fe9pDH4PLgvubwwN2C8GOLkvBBkdTwBTYI9N4ynPRhQozxlZbc9BUW4
                      PfxAhb1I3Yg8mUCVPSR/zTxjP1G9KmigvWw1xLzs9YC83V60veTszzxYx1U8DKSuvPS/tDxgRoa7
                      Lb6nPQAQtjmAp/M7TP3WvInpjD0a3AK9sllbPcCYwLoJb7w9zF2JvRQsl7zWBU89mhRjvbDvcL1p
                      tqk9jITgPBiu17xIkZ69SIKpPDP3Ob2ARtC7M++YPSNlIL3jNbU9D07FPVJyGD2CmxM9YhOYvYj0
                      kryWHZi9ACIHu+3lfr0P+po9zkkKPWGAjj2oa5s8YNi8vFJerr2A+K+7KLnkvPrqP73wG3i9gDoY
                      veWvkb0zmUa9B69WvZtqk70WtFQ9xgFGPXbtQD20iv48DJKMvIWyg70WJGs9q7a4vQDO6Dmn5Hy9
                      UOC/u1ZTGz2K0rK9CUGbPXNRb73xf7o99M3BvOgLybyAiQe95LAMvZA6EL3okqG9aZCVPSivITyj
                      aj691DOjPLA7q7vIYbM82KxQvGQyFb2wRK27AJWBPEobej0yiVI9XPOBvZ5lor0KVxo9NEUDvXbZ
                      FT0oijc8AyHMPU1Mvj0jb0y9QphrPcuoj71gZlc7I/2/PXFhjz3imk49BC3TPABSrrkMLsK833ad
                      PZs5vz1v06Q90HxVvbUqpr1lVcq9VLadPIAChLpgTPq84DnqO4y+qTwiKyM9GjEdPUX/tz2xLbw9
                      MsJMPQ6UAT1iH5+90BLAvUAOmryjfYs9eDC4vVpzdb3DkZ29tS6KvQBxXjwipbC9YvJ0Pe2sxb0A
                      l488Jv+ava4slL0f+cI9IZ/FPQjXur3SpJO9kgpdPVS3hrwi01k9ZDv0PFaOGT2w5+m7e/q1Pf/d
                      nj0BCMA9yk9Ivf9Wkj00B5O8Ky2tvSAVs7xCiTg9UHtJvF2por2b8749PRXBveWrgL3S6aG94GX9
                      u9aZBT1+/jU9lEucvHBJdr2jI1S9EG6ZvaqRyb15J6w9+BqUvKWIpr1S6sG9NSmPPe1zPL0giWi9
                      vbpKvSQj5DwQdm48IiRYPQfuJL1huos9chA8PWxeujwFG5w9QbChPVdsR70O33I9QBWbPHg6ubyg
                      tKy8ceKqPekHuz2YdN+8XKsIvaaZZT2fULs9DmUJPQ2SPr0A0n87h7rJPYdyQ70BLoo9sjmUvZMP
                      vb1s+Ie82OmKvXxv6zxeOzs9zfS7vcDKtzwAVsM7gSKlPT3+Zb1H7XW9pVbEPWWuhb1yzDo9W2qg
                      vc+xqj1DxLS9E8TGvdIFGj0NLZO9uYK7PVhDGjyChyE9ouUmPVmHoj3ouqE8epsjvbO5eL2mQD09
                      4lNwPYBcw7tE7tU8qfyAPYAGRDygRos7ElA1PdNnur3QUYG9QEcjva6vKD3O7Zi9NLWWvCKLAT3Q
                      4Ui8uh8dvYgtwb2gNny9udGmPVlJmT1X4Gy9mI24PBgKD7x4EKW8TlB8PcvAwj3+I0A9nYdYvZS1
                      7bwKM2e9vYeYPTsXuD0ujRk9zvidvYBak70mUhS9oApdvec9yD2dD5k9eVOnPTtDnj23fYw9OfWF
                      PfTr1zzzocW9AHUgu/i+p70AAZM8yM7mvOHNoD0Q3lk8LN+3PG9Tyj1Rq4o9mAuEvWKQvL304eO8
                      NFmvPDCB8zvanRS9qhjDveGXvT3WfBY9lPqNPAIamr1Szmc9h2DHPa6mMT0CEmA9/vxJPY30wD1q
                      1wq9GssNPe67Ez2OrKa9tjtiPUc2xj2AUX4693efPeJYAT1Tfje9K1HHPSk8hD0G55S9N1awPYC5
                      k7xfRLK9hdmKvb6tST2SvH89Waq2Pdccjj2JgKU94JXkO2j5JDwtgcW9nLuLvZQx1bzyon49917H
                      Pcuftj0AI5g8acO+PRwo+Tx+/KC9wDteu/HFuD2YamM8EAIyvcLceD0Te429TIoEvUCqfbvGzig9
                      pgmNvWDhJbvYBIy8mO+LvT1+g73xe7k9IjYmPVjCu72aMUG9TWDHPUcKXL3pt4E9AHpOvezZ7ryJ
                      lIc9CgdivQMHvT2OPwc9zplQPZhIH7wUPMO8iMzPvHj9wzxbXYg9uWO1PfxrDL3M9908sN/iu4eO
                      QL06D8G9tpdMPXgOnLzY9Ki84EvJO3zPAb3ez149GmbJvTgmpbxwNm29WBTZvGzn9rxYy7y8WD5J
                      vNVWgb3ufTY9IZ29PewHEb3o7Rc87TOUPTPEI70dmZE9QUqwPU6Bbz3zwKO9wKu5vLaVkr3wssK9
                      4wiovSLpUz1zCcO9y6edPb41ib16Jca9uIKEvHfBOL2gYZm8AF3/Odb7Aj1gwpO8MvoKPSsegz1M
                      WYq9lNsBvRi3BDzQQ2E8gIDLurOKpb3kjtM8SvdKPUDOMr1gACK9c/5evcemHL1AWie8ugJVvfBe
                      Yr154LE9Q5UqvdhD3bzCF1Q95yBRvZD/BDw4Fua8sCVJPEvEs717GrY9QOPuvA/Oiz1NQZK9cNo7
                      PAqFXz3Yb528sHOBvZqaVr36aKK9ACrIPLwfEr0iAUA9IlInPdM+QL0wVUq9SKGpvICrRLwaMHi9
                      R3+xvSKeWT38Wgq94QKjPX2eoD1gJd288LNCvUhEpDyrfJ69QyCXvcOMkj0wjJm7z/G6PQASgbye
                      JUk9XCHTPFxtAr195Iq9yHSnvHCeOTwHkce9bcm/vRY0TD2eqoe9nh5KPTOGsT2lGa29UGsiPIAo
                      eTzgqj+9d0g5vVS1FL0FqqA9JTjMvfBabTyvRMc92Er8vGIRw73HbCG90IMCvOIllb2wBzQ8by+Y
                      PX1XG72gkIk7oBv3O4CKxLxT54I9YcKJPYC5tLog4Ky74DSWvepDVz2Za5Q9IFi2O42ehb0a3Ya9
                      bA3uvKUCjr1ixRI9eYS+PRa8BT2KHh89A3wmvcCqFDv5JZg9+rBrvfBJvb2jdFm9YCj9OwA00rph
                      lMs9kLA7vCzwgbw4ZZC9Gu09vUcByT1PP6Q9TWCTvRZqCD1t+Se95I3QPGi2Bzy43as8WDCBvYeP
                      Lr1wrjE8oP9yu5JjwL3KDhW9YmAmPfrle71emkw9pNrgPFQuh7yNEbo9GAEDvGbdMD0jf0i9LI6J
                      PIzSzrwZ+rg98Ne2vdDG8rvCGzY9ABqxOlZKWD0nO6E9TTOiPdaDQT0AW369afG7PRhIArzemFA9
                      3hIBPSQv8TzLX8c96JR5PMDyOjxO1TM94oJBPS7OIj2MHJk8tQrFPc/ExD3WPHg9SDTFvZ07VL2A
                      dLy8u3mnPYAejrwQz048I/R1vdP7H71thXO9MtpfPf7RnL2Qnlg87zfCPb2ghr11WaS9LKaCvE/f
                      xT1q8a290qAZPeLvKT2A0fi6KvOPvcDxor0gLyG9XqRuPacicL3xa7c9gJCdvHeSpz2xX5w9I99f
                      vbYDBL3MuMS8LerLvduwnL1gkFi7dHWcPICPS7zavxs90IGYvSsxqT29vsA9XpRAPZuHmD0UsfG8
                      IK6cvQK+QT0ACaw7YgudvaV7lT11y4W9gM/nO9dVrz1k7hS9ACThOiAWR70g7Jk8g6yqvVCHtzvM
                      qPw8Si8KPbHYjD19EbU94CiivDWjr70wCMU7t25GvbDDPr2PUsM90QazPc1Hi70cHoa9kq9XPUxr
                      hDyAgMS8aFYWvGJirr2nOFO9HfBRvQm0kD2oZ0I8gGHPup/gyz09OJw9A6etPZg7jb1KKI69LHy2
                      PEyIrrxdmR+9SBvFva1NIr0crO08CMCQvap1Br1bcrQ9DBaNPMCxE7voeLW9aUW6PWEvxT3UEsS8
                      7EMWvQDRqbsVZ4i9sDtIvUeUtD3qu3g9h+c+vSbJm72Hfiy9QEU/PCmRkT0GMhC9s9QzveHorj2o
                      KXs8KKHfvNOnPb0+WSg9zxikPXBqUbwgXfg7d5OOPWyA6Dzi7g89bHGDvCG0gT2TC6k9DCXjvJlh
                      wj2+bWs9w7S0PYJwBT3Du7W98IJpvP25OL29ZLu9YEDCuzBoxzsAFYa7JzKDPQ93xD2IR5y8EsZb
                      PTS6mTx1Eay9YB7dvPOFXL1MeYk82PSgvX1iG70A5Fa5EM5DvEHsmT0MI+28at2KvcVIsb0ylqO9
                      xCoGva2Amb2Eh+Q8J2h6vXoPiL2526w93tlxPYLwHT0qHx29Z0NdvTd+wD3Z+aQ95/VmvRBoVTzs
                      rey8YEjPvFpjDz0UyAq98kJjPbr3Lr1dAnq973SkPSzEjzzAUja8PVh4vWjogjw3gm29VcC6vTO8
                      jT3ZKb89jJ2JvG+Zsz16VT+9dzp6vUwIxrzgV6K8xrwJPUBAETvghYW7AKANuVDdpL1AjnY7uv8s
                      vUgYuDzNNo49Qp48PZhQUTwdZaw9XZ3IPSaPcT2eU3U9oSatPcrzN71ARdC6y8iXvSesTr1QeMQ7
                      VJaVPCJMSj0YT2Q8dogVPRi0rjyQOAi8BQirvYDnyr2yGBg94AfKvHK1Gj2ROMU9+JLqvK6XlL1H
                      CsW93p+NvYWHg73Q968747+LPYwg8DwDkcs9c1m8PZmfgT0Nwy69vSu2PSXQvb1Qtnc82EGzvPNZ
                      Wb1CjE49PXQvvVbyPT1mrm09Xf24PWAkaztlL7q9hwYwvUC0LTtrecs9EqRgPW11Kb1z1HC9TTlr
                      vQi70byyYl89vRWNPYt2tr09AlC9yA3AvN/qr71MPJ08R1yZPWXdqD3TNrs9YcSGPRAwOrwlta09
                      yPjUvLKzJj0Asjm7YOtmvWicx72jpx694CXWu9IXQT1GLlk9LSCKvQCeuznI5qw87V+kPYKKXj3Q
                      vUS8kO2lvWKaYD2UZti8HUSJPb/oyb0vHZI9YH6qvbbPRD2hsLM9VImUvKzSpjzj8GG9m1a1Pdrw
                      Cz1AOOG8ILJpvQLYCD0AkKk7iMDwvMVpsj0s+6C8Tv8KPSAn6LszKCy9DACMvYDeNTpAiZ08oZWl
                      PejRyb1d5TG9SrsyPRT63rwfgrw9ANQku1o1dz0Yw/y8ADpYuUZNir0z68E91/FBvfnwlT3XwLe9
                      Fh4/PQ1INb2M/AC9AI4vu+0ug73HjcA9gI5OOmwbhzyaByS9sKzWu0AZGzuwGEW9Tgg5PUncpj0b
                      qKW9docRvYM7tL1xBZE9AHOEvf0ELL2fMbm94HN0vVXDqr2wbtk7i5mivQBQRrvza7W98xpfvajf
                      t7x048c833qjPSjbdTzAMGc8QXOVPSa1gr0AyDe92XrJPWYFJD2oag080044vZiCkjyUzMk8mN/K
                      vNBpsbsQNic8EhAJPTg/57w9wsS9K8vIPWgrELzR6sQ9Qs8lPaBzbLuI2Z69xX2jPZo0IT18zPE8
                      M+RovT6LGD3iRx49mbayPemxjz1l28o9zdBlvaNWiz2YK6S8KRGXPcsCkT1N2ro9t75pvUP7hD3j
                      rFW9NFqIvYAgbrwWwRG9QK1QvXuTgD3fA7C9JDKCvQAkXDw9zx29Qph8PWhEkDyFR5q9VwSzPQj9
                      rjwavGo94LgVvdC4ljvQQzo8YIrhO+2cMr1IwYg8h/VZvWcUtr3YZ0W8sJy6vRHXlD2wAyk81GSN
                      vC0hwL2dJKi9QCnYvIgiqDwK6j69LMCMvNbSQj3wbFs84PaZvaYcKD3RxZ09H0y2vdB1RTzaf2O9
                      eZeZPVI2sb2genG9ITSwPQBg6LeslsU8ACZ5uwAM0LjQIsW9LU6pvbA/ub3jD269zJ8Wveh5fLzn
                      M269wLr2vNBU0TsXk0+9+DvEvLeWwz3g6qk7w2LLPT5TCj2q1AK9YCEOvYDIIb1AUYu6er+bvQDX
                      ur2TH1e9lNnVvHlujT0wCgQ88LcwvWBYvbs+eX49qXadPZFPqD2wQ3K878KcPcYsAL0AhI07ulsl
                      PW0nsr14aPu8qNEMPBmEwD1YcKq8YEKHu7AF7jvIIJu8iuCqvUjj1bznhTu9SOuUvCqPfj3qsoG9
                      N6thvXCDLjyQ/w88mPzFvNoiBj2UKPI8R4gwvVRLAr1DZSi9byqnPWMFVr2gBwa9QP0SO+Lxfz3U
                      HYQ8kXS6PW6Vbj2delu9jetGvSKGDD1yZSw90EzrO+sktT0wPOg7xqeavQBWKb1kRNw8iQuoPQB2
                      Ar1QXcK9AGPnO078m713cyG93WqbvSicE7yAmGG9gwtbvaPQrb2j0Y+9ITvCPa+Rsb3UecW8JWiy
                      vdgwwb355bQ9MrSrvTTG9rzwDQy8BnWbvcC/WzxYGQY85+DIPfZtOz24zc688KNovKinQ7xwgkA8
                      EiE2PdK8eT3KmCu9E3iZvajKy7ztXKU9gNaNPEyxqjwYNRa89W+NvcNoLL36wCM97RCQvdDTsr3n
                      q6s9Vl5MPcQvhr0sdYG9zfJ6vXAkcb1MqwK9BVK8vWyR+zzBIZY93R/JPVqtg71g3Ik7R8mfPcR7
                      +jwK0Vk9XXGRPSYqOD2qzMe9HYXEvQcIbb12tkw9CbnDPeZhJD0xZp49AIouOSxE+rzFZMU9nROz
                      PYCVVjoALNa4mE1HvALEbj3YR2w8+pdnvXJ6YT2tsmu9IjgGPQMDhT2RQ8I9ovcZPWiQerzbwsy9
                      AGubuQUIqb2A3Ps76ElEvMiSw7xz7XS9kFUMvKCi8DuUovI8ISu8PU/Vyz28yPU8KuC9vbByhrts
                      JYS9kU2iPZ24gr2x57k9avsYPYDBJjoz6W29FB+vPKqPE72HGrS92i5FPar4bT3CDDc9JXKDvTA+
                      yjuooF88WjJsPWLVFj09C5+90HvAu21Wcr3lBoi9oF1euz0XS73Z1Lw94K5ZvVQS5jwIM5+8xxNQ
                      vY1ggb0iMio9NmJWPfRpyzxS7qe9aHpLvDHIvj0gvJk87LmkPKh9Ajxq3Q69nODZPOjoUDz3WoM9
                      JN0MvR3giL06FXG9BgGXvVbPq73Y9PW8K1ycvWj/QzzRCsI9Dg9lPe9Ztj3bO6m9jV+svUAvMDuR
                      lbg9ulFDvc46kb0lAYW95slTPUUeiL1YjsM84I7GvDGhsj2+O3w9DU60vSZjFb3yWUA9i7SPPRiY
                      nLwwADO9aplwPcLoPj2AslS9mPdOPEr/Xj3aB6O9GJjJvKZFKj1ggFO9oBt1u1DjvzsBisw9MkYM
                      PRYlCz2I4Mu8NHOwPJjefDzAyma7OILBPE05kz2QbCu9HqBpPbQahL37Jq29GXaoPbqnBz2ovWQ8
                      YP6lu6QDzTyTqqC9xxCJPeo8hr06vCC9+cKbPWgQUDyMWJq8s4BwvQAwKTui4AE9HSeyvc1nv73Q
                      HnK9Zix/PQBgQLeAgZs87J7NvObCTz2TCWG9sHFYvUwaxjwqQz49wGxNPFqdSr3mRhi9QwmXPaDn
                      lDwZhbc9um1SvRdtrj0ymFU91sgTvcykvDwPsJA98ok2PURWGL2PpqM9mhqWvViIpb1RBro9kdqQ
                      PdDDRjzjzLU9zRy7vfyH2Dy3T7s9QhV9PXbtLz2YzTW8EOZJPNQqzDyvbr29ma+zPSo3Ib1XZrC9
                      rVlavWoIKr0gNbW9AHesva4KdD2sO4K8bXEnvXcZcr3iCxA90JZ8vdSQzjygpja9GCgHPM+VvL2u
                      I4y9j63CvQxI4byGtwW99DK9PGzvqrzEVeA8wAq+vNICMD0Zs8M9yLa9vagqH7wh9Lc9tJ/UvC75
                      qb3Q3wk8TgoaPeK3hL2Biok9w4qhPQAVW7y0pc28cJVyPGl1gj3oJAE8+qE6PRTPEb0R8ZE9UO3q
                      u92Ir72SNQE9aMQYvGjHazwq2Cg9MNsbvejen71imwo9Qos1PViAPrx3VEy9A9RcvTKcED27f6M9
                      3uEePaONV71QH/a7I7TAPdpALb0ocZy8mophvYDNuLwC4js9a/OavWBZe729RFO9BfSqvQdJsr06
                      I0S9euIePecSfL0Mv/K8/dhJvRRc6LwYMBo8niwQPbBGbTw4TYi8SL2WvVfLkD3Z14Y9B/wwvSAm
                      Tb0SXGI9cjQAPSg4+bwyc089Otx0PfbcZD2CCJq9gj95PUULkD0ASjQ5PpwzPS9hyb0IGYi8gCas
                      uoNqvD04XPK8f5jLveD8tzw8twu9N+tcvcLtdD1qeEC9MzowvdBIfjw+pF49ypwZPa2lM73q8Ds9
                      oOUlu+gfnbzU69Y8IPiWPIoZVz3lWqw9EioJPYCvgzwm1ks9UtxDPVoNgL3sRf48SssdPUzplDxF
                      D5Q9VJqnPGRD+TxXBpg9glciPUUvwT1eSVY9MuS5vYBCvDyASIG7l7yiPSpKgL0XbXy9MPi7u7iP
                      m70dvyS9UN0avA51p71Mu/08xfiMPdpaG71qryE9YL7UO202Sb0PgcO9MWahPUjajrwoK788zltY
                      PQCkE7wgeDq91loaPRVMm72A5NU7/mczPeifN7yOOVQ9WqEUPbb0Dz3wFHc8MAXcO76YND3gXrm8
                      7MGyvJI5Kz2zUz29usQGvSTx8TxfoJk9gIa3PD3kKr1yEZ69zRenPYIgJD1BtL093XVRvRTH+byC
                      wDY95zjIvazurbxAXZ698EZ3PN0Zxj1wUVK8sIF7vOBDj7wAGPe8Gug+Payo4jwuE3U9pPr5POng
                      uT3oAcy9eksSPaAJ3LxIbaI8y/iPPaYuTz09zLo9stYzPVZpBz1TKo299Fj2POu6nj0QXDu8VQfJ
                      vfQu7zz5G7E9LPPjPHPobb1Y/4Q8YIZuO+AJp7uAK148ph4NvUIhgb3/vbo9kG2AvadSVr2QhAE8
                      tYfIPT0oJ73QIFy8kn1rPWAPibwAg4y8I366PaUagz1ACxu9QHQ8PIQj+jydP5Y95kwAPY1mo739
                      7Z09+DeRvQnPwD2CyJq9hPnQPMOOML2YHLW8UHUpvWgIgL2Sl1M9/Q41vSCO2rysZas8sp5wPa5n
                      ST1gdmA7XYKmvajhprwrgoc9gu4/PZ1atL0bwpu9EH4DPNHRwT0dbXm9aQ2VPcLWLT2Eahi96MK5
                      PD9hxb0tJ1C9RUq7PSjqhjynTFu9jbOMPciIvb3+qHU9GceWPUTz6Dzeang9znlMPbBENTzFjYO9
                      k6xKvR1uv71AQKu8wGd/vHpsZL3AHKK9tHsKvZMfXL08p4a963a0vSoMJj2wFFY8WJ0nPL3cn711
                      VcS90uZ9PdrrET1GESY9IrUlPa4eZD3HGjK9um04vWVDlr0H2Ms9du6ZvZXQxz0g2tk7woi2vX1+
                      HL3rwZE9jmeFvao+db3n/Z896NcRPM2lZb04ToE8OA+CvWkprz3Mlrw8zAW2PEpfgb2nDJM90JuT
                      O0zG0jzH+zW97RWpvUDGPr3G6ls984+9vVSyAr0AY1A8ToQQPVBGf7y18LG9M7Ezvd4XZT14KM+8
                      06iYPfsNrb0+ekw9oE66O1gSjbwoZrE89aDIPSzA9rz67l+96qZhPYh3ubwYaos8bHH/vHMmQ73N
                      6cO952uXPfLXbj1S7yw9YCfpu8AZAjwEIQ29C9C9PT0Mt71nRUu9kF5qvVhaoLyDwMe9h6K5vXde
                      Jr0TXTa9Djc9PcmKrT3gwSC9gCA3PBLtXz3aYKG9NuiEvfF4wj2YEJq8tJX0vG6dlr3Tm8g9T7Kv
                      va8yoz25xo49El09PZnztD1Qapk7USuEPUoTHb2AyRC6OAzIvK1KaL1bmaq9E71QvUo0mr0wWTu8
                      QOQxu53wk73O2Ak9sFAkPCavl70g3eS8qtNrPS23ab3H/SS9wKMXvUBy9rwpOMY90BeVu+AyM71y
                      phU9Tfm7PbQ6izy6MXY9okZBPVH7iD1NXl+9H1C3vaRB9zz+4Hw9VBzNPD8prj2sdAS9c1wxvVd7
                      Pb346oy8kGw/PMhOojzpgpE9z6zFve9Fvj2A92e9kE5UvODQkLzOcn49cCsGvD1ahr0kytU8KjgU
                      PXCNoL0zu0K9iuyAvXvLgT0g6Ji7kAZIvFZbBL3K8VU94hV2PRWWhr0A2Qe9HrlMPVzI2DzmkyU9
                      KGldvKBjgbu0Ls68OJW/vcC6Gbxdw5K9K/CQPUU8j70A3a29UNpjvKr2DD1Ud6o8TCf0PMJ9dT2w
                      MbW90EkVvfDQXTyTnDm9RraBvWB0d70QEDO9Q8V5vYVPhD08stY8p/CnPW/Ovz0amgq9uyKWPVDr
                      wL2mqZe9aEzAPGAC0Ts7uqY9ADqGvTfMoT0g7Is7862ivaCWkbwyP289kJYbvIezgj2Awy29dOeR
                      vMATwb1l1pI9mD64vUB1DztH6IQ9c6pvvXjTrb0F+bq9mG/Hve3XiD3Fyr+9Ura8vcCHYrvBGZs9
                      KDF4vKLlWT2AX5A6aE/JvWCs77tnkFi9Z9U+vYAOsbsgtKU79sIVvb78GD3jO7Q9MD+hu0lOqz21
                      mJK9tndTPfNAwT2AHVc69Uy9vUD+sL0QTkk82pAjPboNDj2CaWI9a4CsPRJeez2EOvI8I0G1PXTw
                      iDyCgno9nMeHvZdrUr3AsKW9Vxm0PR13rb1X2MS96lUKPaT6zDy9Yzu9jZeQPVwv2jyoBa48AJIV
                      vajZzbxr+ry9aCzjvO8VqT3VoKi9nkyMveqICL0jz6i94suKvWBkIr1o9Jk89C62PO7jjL2mlgY9
                      YBIwO3BuNTwaCkO9AAcLPPG8yT35+8k9TUBRvacjnT1NWXW9uGefPEfahT30LQa9wColvFvuv70T
                      4x+9Ve3KvQC0ub3A3Uc8E3XFvaA7jbvKwWQ9dC3UPKa0aj31UaQ9AjiavWClib2A/bu9SjcgPYBr
                      YDz6xXO9wMVJu4UGjD0DE509INWrPJILTj3M0M08YBGzO/gX47xdT069LluevfT0s7wvdsA9eay8
                      PUCxVrxugxQ9sk84PRXOib0ANCm7l6jGPQa2Xz2AGsC9gw6WvcLuVz0aiTg9IBmgO20ipb3Jsa89
                      wM6KuqVbyj1QGnw8j8SpPeycpjzU8qk8YWOXPZ1mkL2kAc88aN92vMicjbzF3rO9Mqh5PczQ87yA
                      6y48ha+5PTgFw7z65Sq9gFZKvYFkwj3NG5y9O0HMPSWNk70dqKs9doqRvdvCpD0yW6q9EFd7vIua
                      w702qZ69qMsKvID6hzy4dJ28xoikvflbxD2oh4+9nbJjvRhLLDytAVS9gt9XPTSuvzw23YG9+b3H
                      PbqBBD08hQS90OO7u0QA6jw9KkC997c8vXqknb0A7Pu4MHNePCfuZb2guxW9flRhPZidr7wO3hY9
                      qNPGPACGxjodGK09gP/7vIersr0AfVo8RY+fPTSpy7x/8Kc9DYRevaeAO70g55E8APKCugBwkL2A
                      dJK6fyW+PW6Ok72QgXo8gGWiO5CrS70pQac9ms5kvReQmz1Y4i28KOEWvLKUpb2QSyi8IOi1OzWS
                      mb0saNy8xZbKPSLtZD2z6Jq9tn6BvVXgmL1o9ba8ABjBOL2uN73jUqy9EayMPdU6xz3wJza9ATGn
                      Pav7yT2w0pI7MIJsvW90rb3A4BS9k41MvR0fk72L15S9hGXpPAL+vL2J/b89E2wivdB9fTxwc1W9
                      FFUSvXXMhj2iIba904OXvS1xub1OqAY9KngvPSBIw7ytHpc9ApxePerSub0xXYE9oqZqPbfCuT3m
                      Sg49NNmNPLPdIr2WTwy9TYF4vSzsyzyCIxE9BXiIvayo+rwQU32815NgvXhOkDzSm7692r8qvUa3
                      FT3o/9e8Kugivf37Pr2sbu68FRajPahd4LygIma9bdCoPQQw8jwkaOQ8QIN8O9kVpT1xsoM9GEZH
                      vDyO1DygZyc7PYhsvT6vcD1+eQU97bbLPVWznr36lSA99E+OPE77ir21OYo96ql7vQKXAD3Ys4m8
                      3cYsvWXQyj3AUm47AnE/PSANbb2skfg8p+S3vQEvyD1y3CM9WBPDvdB8f7yORWA9zvqrvZLWET0t
                      YmC9hyO4PYsCqb2rUb29eHKzPADOdTxakY29DuRwPYbeHj2q/CS9VpQQPdWioz05x5I9ArM7Pdpi
                      VD3MB+08ClM9Pc2Rlj3P88s9fY9kvdD0KzzKcTc9MX+EPSCSrLvggSe9AwzKPQDiCjw/yag9GjUF
                      vao0Jz0AqGK7a1myPflaoD1A1bq6mIULvDwzg72VSbW9zmErPWAT3ruOe4a9AwogvXs5y72GUZu9
                      vdF0vSnlpz1A1hq99uo2PQCau7qg7+u85sIWvXgt9bz3TLQ9UlclPS3TXr0Kok097I+0vDxUjL0S
                      QhU9j66SPTxeCL0Ukei8nQnHPdgXfjzqyHk9yxSdvSWNt71G5xs9mD18PIBiyLonj2a90ROgPd5k
                      GT0w3z69kPqMvSaPZj1FybO9rI3TPC23mD22JQS99WCMPZXHpT3IacK8gCeqOj8UtL1giXO7Wrlt
                      vS4mi71Ee/48XpCivYtftL2XjUi9QDYXOzSa9bwUbtg8qEWZvAD9ar3md0c98AR6vHUrnz0vz5M9
                      9WCEvZgRvzzoFbC8zi2UvYxdnjwAaQw70ImgvX1QPr2PrZE9r5LMPXtkxT2mUWQ9OJylPDrnQ734
                      Pcu8lzG+vSBxojv9NK09+fG0Pdlikj0mWgw9JkFvPWsDgT2py4k9MYK7PV2Slr3aeRI9U10xvRst
                      qb0DvnS9OEWQPDXtnD04jp28ABbnOawJ+rzc/d88kWqnPVawBD3YhlG8p1jGveCml72gZC67xyo9
                      vaAtHjtgAxG7axmKPZBxJjzjeDG9RCzXPMBzSr2zPGu9N4RIvagaHjwQsS69OUKhPUhsp7wsVgG9
                      3fQovbY9Tj0tpoe9dD3pvBZanb1Q22C8NKC8PGJLy70mnxK9006hvXvvyD3opkG8TUtLvZrDWj0C
                      z109wmxFPdaMDD3KJL+9gOpIOlTpyDzyL3Y9CKCnPFy36zzfVss9YiIjPeA837tUdcW8jF/pPOJd
                      UD0Q57+9qjM6PdifqDyKlS69aC28vXCceL26V2i9tuxhPQBPfzs5DcA96KcnPDW+qD1ATlK7jFW0
                      PKBKlTwgDHS9OAuOPGhhBrzYVGI8B7c+ve8GkT2SGjI9KIJkPDBAe7xVLYy9TQBIvUBs/7wQl8u9
                      EO4tvV+gwr36kE29G7CAPXCujb1zzLS9qp8SvZ1Gqr0dzJC9CGKpvFA5MrwQ0lS8Xbk7vUC3C70A
                      uQU8rUeDvV5lTj39Fye9gTKaPQBI77yzHXi96AVuvNgHRzwBPI094ICIvIQN7DwQRBy8H1qxvZdm
                      Lr0phK094GeavSX8rz3LkrA90Km0u4N5pb1gM8Q8NeiKPR8Nvb0Yd0u8UJe2vUCWkLwQoH68dwyV
                      PWj17bzgTLS7fa8qvfJNTj0Sd7O98go4PVLkFj2FH4S9LG6vvDQd0by3W769nvd/PXniyj16hVM9
                      dCnovP7Skb2YQUW8aCzPvIRmBb2gwP+86THBPYDDBbwq1Ee92IyKvQrBYT3qfkM9uFudveL1cj3t
                      D1K9hq4cPX0npj0Mt488o/XGvV3Trr1dOMm92EeevFbdo70TSlW90oIKPXJvxb0sm8G8cik6Pd2h
                      iz1uCVo9uQyUPTOrJL2gTZO81eqdPaHMzD2g34y8CFSUPNDKXzyywS09QMI+PPfssL1Xr5Y9etyV
                      vfkxtz3AFhw7QPJdvRoDQT3CZxU9aHTEPJTot7zGNy49wu9nPbNlxj1mA0A9wb6aPUwMp7yZpIc9
                      atNvvRCrqL04Urc8/dGDvV3WJb3Drjm9xcSqvaptFr3mLpO9fcySPaXzo72ApCi9zZO/Peo8FD3+
                      jy89AEutvaH1gz0IlJi9ZSKivTN4Mb2HOnC9PZKqPQ7JKz3CyG0906DGvevOoL0wo8i7WCYvvCA7
                      4LxQZqS9AMxCOyDYb70IB8Q80KduvWQz1TyZ96A9Q5uRvcyVoTyI07U8IK3qOxiwBzzMz9Y8GB2t
                      PPIsKT0aBbK9YpB/PWYmIz1ulCM92gJfPctlpb0AOXI6jvJnPSwyFb3HWcm95DwXvQAKjrwAmRa6
                      jcaqvVAdvLsNRU29wfu+PbBD47uLbqW9GByVvGBorLxgzJo8wBuJvHrCBb0e1So9SrK5vcrSPD0o
                      Jro8rSGIPWB/cr2wY3O9EocqPQPxX70++4W9rXIuvRhhFzz4Drq9htNTPfqSj70w6Nw75PsLvSda
                      aL2r7r69L6nBvXgPpL0AdZg7Pby4PahGmzzAnaG8bWKRPT1rPr33pMu9gaaCPX+st70Mbtc8ReGm
                      vRq2Gr1aVEW9gDFdvEzS1zzy6j49PgBFPT0Al71qP3C90mUUPQulvL1hAJU9TT2ovVU7l72xusE9
                      m0C4vXj+tr3A3Qe8mExBvFAQKLyYSVo8efy+PVrLQr1Q54w7sM2ZO11Ywb1ZV7o9EISwvQALUDp6
                      ajI9+7yVPWJAjL2qfVg9N5mFPbboTT3ofnA8IZ2uPUpEC70AQB69UDagvXjjjrwpaZI99TKwvbiV
                      gr3m6no90IE4PPB3ajyxuJE9xgYVvaUKiL0omgg8JoGZvdBrjruFaog9K1LJvbbSVT1LAqM9KMhY
                      vNhYwLzACrw6mmwWPaimbjwIqsq8aSi/PcDSybye93c9gAeVulZglr2iFRA9T7aIPfj6jzy6dV69
                      SF+vPKgVyjx0Tcq8hb61PbjttjzbC7q9YYq8PWpwlL0455E8gTnGPR/GvD1QImm94KKyPEyd9Tyu
                      KRY90KMXPDCSxTuD3Cm9nMfvPAAVjb0AkvW6bL66vGdZZL0wmXO8e9DCPb6PHj1q6FE9d4g9vbh+
                      hTzBUp09PtWEvSgb7bzl64a9co1rPcUbu71E5ug8lvg9PcJHmL2YASA8dPjrvAAsRLwQ7Dc8it0K
                      PXjgor1hYpQ930vIPfy9/TyATfi7G4aVPZ55ND1W3ls9qKLCveiDK7xuiKi94MThO3s0rz29FIS9
                      zAyxvOhmUDygqzG7Oj0EPQ1txT0wvKS7aOc4vN2KYb3sQZQ8QsIhPWiqcbz9zlK9Se2qPYwvsTx4
                      q5Y8RpozPdrvTb0DYsE9AC89OkCepL3Wz5+9G/OmvYpYBD1w8hq8WsJKvWwwrTwAIj280yebPZjk
                      tbyobhm8XkoWPZZYp716n8q9phVYPUNUsD1fkYg9872QveSm6jx2SU89YIu0vLUXqL2MzIs8+Ev8
                      vIYwUD1SG249QBkzPACMmjoGvHY9sHwKPBbjA70ySCo9AG9zu33QmL1hFow9wFMbO/gpp7wAvCo5
                      c354vRT+gzwzRsy9I7iRPeqWCr1zkKw9YIzBvbCz17sg0sS9WBXovGKYJD3tWSy9UvyKvTGZuD0V
                      r8C9L7mLPVL3mL2glsQ7fYLGvfLVJD2GngU9Ps5MPQ+AhT21Frw9FICKvBf3P71ysrq9a3elvQCr
                      bDyl3ZI93uc5PY9yqD1+SmU9+gtzvRKCVT0wZXA8YOOsvNcEwj0JiYA9N0G1PSJRdz04CYK8sPXY
                      u/pjTj101Lq86vi6vVBZvr1HKzu9vym8PYBB2jrHyVq9bx6XPS4cp72Dp1u9Xq1EPRBexr3D8WS9
                      4P18vfwxFb26Fj+9KH5SPN6vET1SRo29auIQvULlJj2QJRa8Gug7PSC8mTzuTEo9RGfPPJNPzD3A
                      fog60LIBvC1UIr1KqJu9KEuFvaOlT71Fvo+9QMnEutcZnj16w1S98KIIvMosZz0Akg69N4hbveKu
                      Nj2eIQs9lHHPPIMbo7299bi9/blMvd67Gj0o1KG9FSK2vaKzDT1g0+c7QNY+vYL/az1yMCw9AkoM
                      Pd04p73+Ogk9Qx6CPRSy1LyfmpU9CeGfPQyBCL1WdgU9YTSZPfXkh726aBC96JSfvQN2yr3QBDu9
                      cxCdPZbLjL1Ul768Y4hbvYjJnzzDbqk9SgJWvcwoz7wxiJM9FpaAvSuRu72TJGS9CMW0vRQbgbyI
                      +6W9ssdEPf6VUj2O/hQ9Ws07PeEcwz3oBwW80ZarPeCmgbtH/r09J+mqPXJ/Ez0A7Ik7tMCyvBtO
                      wr0avme9urMOPXAZkb3jCre96oc+vb1+mr00BIk84zC0vSgILbwkSoG9MIqmvULTSD02ahE9qhRb
                      PVxK+zwYd768JP3qPF6mbD11Cpu9Z/NpvQHwwj3qpH+9qKLgvI4OWz1NpFW9jZK9vSCZQL29nMM9
                      oLnCvXCkQbxCOg89MFFRvbxWBL1PIry9AG54PA2tiD0zn3e9RHvrPODmkbzzwyC9VFHZvAJcPz3h
                      RZI9ozZgvX9Bx72I65A8N3tUvYFElz3IFog8sFBTvKhBCDzRKL09LbrIvVr0bD3Ymtq8QMGAPK3I
                      Xr2I5ZI8ou0gPS2DL70DhJq9o5tHvZACNjzAjDm7DIaAPNTqtDyyQay9ubCPPVOrM70u6qG9FPWY
                      vHOxub0waxa9QGCDPAdzUb035XC9fZ1YvYLnCT0AgEO5t01yvScDT72644O9HB4ZvRb4ED3nGh29
                      hYG4PXnejz2V6rC9tmFGPaPWfr3ABAm7gJrdO4Jzr71wzFk8GwmUvfjG8LzS0nc9LbKSvYDHHr1I
                      nao8946/PT+Oxr3dwai9JhQvPcjHiDzopaO9ZiQ/PWhdjL0qCUS9BOzQPBQ0+zwaqyS9qhMBvU3x
                      tr3WBpe94LwWvQDpob3Qchq9QEsCO0gt6LwUrQm9YEYTu7zLAb1zh329wB8DO8Dt/7wdvY69z7Sm
                      PQgQpr3cqgS9vNTQPPMLf73M+Y28aKrTvLJPLT3A5Oy6gCykvZrdCj0lhbi9wIa9vQBk2zttDi29
                      +hYAPfpIDr3Tg4Q9DtlRPeLwdz0o04s8R4iuvb1ZJr2jbrk9B2uHPVBHjTtCOiQ9DGzqvOg0sr2a
                      hsO94gU4PWnlwT1Zqrw9koQCPRe8Tb0QrTi94R2PPVdue73NT7Y9WJhfvJ+ixz2Dr2O92KH2vI1P
                      bL35rYk9jtSCvY0tX701yae9gTvAPVDYubtApAM8TbY2vbhMgrzJ2sM9wCM1vPVzkL3nn609bOHX
                      PKKVIz2xLag98/irPSjO97xOMXc94BYNvRo8RD035n+95DnuPMWLiz0aRGI9J2sfvZjMoLxskZG8
                      WOy/PKocST3YyTY86EmzvA8hjD2h/I49/hQ4PUC0TTtqkTe9IB+VO+Qb8DxijyA9mF4/PB2pJb19
                      zCi9KuBsvTMNHL0ALgq72NWHPAmtlj2AjUa8spTBvWwGmjwlDq495DbdPPLxRj1CoEo90duiPZUe
                      jb2odmG8vSuMPaVPgr3y8ZG9JrREPeJ3Nz1Ul4C8YD4XO2OfOL2teKK907mpvRelv70XP8i9YwzI
                      PXeDSr23hYc9PoxIPf3PxL0uwJW9Zm0aPb0Cf710Kb68AAgQO5AuMLxN4am9QZSFPZyIzzzzTZQ9
                      EnM6PWdXOb3vdZw9kHUevMmykz1NaHm9fN76PMjL7rxQAne9xSeIvT2bqr26YlW9Brh1PfDCTLxg
                      weS7YwO5vYAXW7woP0M8AO/6O+Ghgj3R7sk9gKy5O8P2eb3ve8O9iBqovBSL+TyjbDG99vtVPZXG
                      gL0ljIC96+S8veVExj1AVZa8KKPEvSj3vr0A4Cy5NPDTvAW8rr2oG4K8jeOIvQxfkjw/vr09Y7c/
                      vQ4HDD2oRN680C3Ku1BNP7wSNTA9z1LAPadoqD3tIU69IAXFu4CqhrwrbI49gEGRvIBC2btmzXw9
                      NGSwPGzUiLwOh4e9pXWLvVPWf70Qezi8QFDQvFsfzD34x/K8dI7mvBbvez0DSqK936yAPWBbDb36
                      0Go93+SPPcohdb1niFG9k+iYvZrMVT3v08K9gNfFu+Clxb1tOIw9yODFvHDBMrwpNYY9ACKbvaD4
                      0bsAYw06SMCOvHZ1mr3A6Kk8oH/XvCUdrz2HijG9FXucvRLoKj05s8k9vt8mPUBDgL1ntpI9wZ2B
                      PWqXLT2VKJO97zSaPZUvyz3AaWw8gfOxPcIblL1nPbs93HzZPBINib0I5e68KaicPbrtdL22CAY9
                      kfKDPaDoEb2tclu9+oCGvWfapT2w73o8R3e/PYLzRD2nb7m90SGDPT2RG72gVZi77uWFvZTHgTzQ
                      FEW8VBeevIfwGr1ATEK8PWTHPe06c72T1ZM9zvYBPZeAfb16+2q9WNDBvZQ2pbyALVE6VxDHvUgM
                      qTzTCDG9MBiou+zWoTyqvni9rhMNPcB3ZDsYqKy8aRTBPRj46bzCEqa9mKz4vFASKbx7Rcw9QCvF
                      OiN6Lr2Cilc9wAhCu4AyCLrGsZW9OzqIPavElj1g+6G9aNQNvJ4LZj2w0se7t7c6vWC3trwg9+y7
                      oNL2O0Sl+DwRBsg9CMvAvE5FmL20/bi8SsA8vaP/vb1NZnm9Xa4yvRoLsr0ANHi8Ara1vX7/GD2w
                      EqI7S2auvbMxrT3ICYW8gFowOs2mmb0QCaq9YuAQPbskrz0BxrM9EwLDvTSOwbyaUWY9AGZKvU3l
                      LL3CMC89gLLXuwP1y71Mh748jRuvvaodSj0winY8DayuvQorlL3QQBa9CrOevQB217wqOWU9as4p
                      vaavn70CNnw9i9qxvaNSkb2dorI9HZ0evYAswjyiCQs9eGmevMDFwTyBYLY9UKxuPDdCvj2V6bY9
                      /OqJvVorXz0sdPi8DLeHva1zob3WqTQ9gIU3uiCMgTvgxrW7UtY3PSd2mj1oRG48+9GOPT2bHb0M
                      s9i8XfelPT2krD3UW408k3e0vayz/zwQ1yK8cvg5PQBX6bzAaPw6+cKwPZJXgr2XvJM90uCtvTj1
                      sL1XVpU9cWiDPQyj3zxsLZ48w84gvcd1oz1uWnE9Y4ipPYf7Pb2o+768AHrpOrL2kL1ocd68y/WP
                      vbCGbb1+dn09xkmovQyBpjxgjn+7wKEWPKjnaDxL8709LocHPaLXUz3L46m9vYDJPdDnor2np8q9
                      mgF1PYJzRj0w96W7IOQ6vYBaJbrgKT69CPjBvFOqx724WuO8WHgjvHA5Kby0wMm82/KQPVp2Kb1J
                      wYc9MUinPYgktL2AtM+7ML7tu+Tyhr3Y1KG891FCvf9xuj2AUj29TjwDPVZ8FL0AN6q9SOXcvGx/
                      4jxo/tm8FcukPeAAwDtsq928woEuPeJ3DD2uCh49zVlavTMhsz1QiGy9MwIhvfAfAjwgAKG8vbXE
                      PYqDbT2XnMG9c4+NPcokVj1aZGk9sH0CPAa2lb3YDzA81Cz9vNA4wr3068M8xFP6PGCIg7sA+Gw7
                      1aCvPcFwvD232JI9PahVvUqXIL305Ni8yqN5Pdaxob15KZA99jWavXulhD20Kbq8EmUYPa5EUT1Q
                      IxO9Dxe0PVA3gDsth129yMqAvSKzwb0dJaq9gIO7uiHbwz3C5AQ9eqyGvaakMz1AIy281M2SvBjW
                      aLzopWU8AFKKPC+JuT2APt06O5+uvdEJyD33wba9p5AevaBjujsw1ck7M/O4PfJ/Uj1zjzC9lRm+
                      Ped/pT2sUJy8jIQKvdmcoD1apA+9gDPFPEGooT2NW5a9Mm+HvROyu709P8Y9rOecPLISfz0YEIu8
                      8OjFvfQno7xY4Ks8GsNjPWhXkLwOF0894M3uvBDnOLxQxDO9YosmPbD0vLvLMK89B4vAvSGzrj2L
                      aK29cZjDPTDGfrx63U69UI+YvS3Qlr0jCbK9ELl4vElDlT1oVz48uHeovCqXY70UeJW8AOHru04K
                      iL3V3aM93Te2PeLLaT3E6cw8wCZ6vTe/a73IH9O8vtx5PdfJjT2GW1g9NmEYPe2lrj2GCFI9bCaF
                      vXIwhL1+GVQ96lNwvRRo0Dx21CA92CuyvG+fkT1A1xM7BV69PUYpSD2eXjI906lOvefnub2DdnK9
                      ANJHvNBZt71lzJ29z02NPa04TL1QG7y9GF9AvKijazxVhYy9KJMZPJKfZD19MMc9rck3vWCWbzs3
                      E669c1G7PcZWRD3MsPM8Ffu0vYBMmzqusF49SWjMPQQOGL0StiM9aR6KPbr2Aj2DK4k9ZXaLPRvY
                      jz3HR2m9YCTjvCG9jD3MHbY8UFtnvImIjj0GGwC9oIT1vNJlLD36ucO9wAdWO+Iigb2ANiO8sLnJ
                      O+zk8zyxLbg9WLvKvVKNDT3HtDS9wCbfOn7SpL0zIze9PVQuvfpNGj1w5kU8lOuHvIoacj0GDAM9
                      wZaJPSg9nbwsKdO8sNrLO0PbtD23QMO9AiBhPTCHub2m7xW9Jy6/vbdAlT2FDZq9cPMWvb08Lr1w
                      uy48F0GDPRDMCzz1iK09M/x7vf/Swb1UhcA8ykpuvX+ksT2KP2W9hZ6NPe2huD1iUHE99rlRPaSd
                      zjxxRr092ATzvEcTwT2CMLq9UDNNvXNmub0Cxgo9IB/6Oxu8kL37RZS9gj4XPW5Bi719U5U9VeGs
                      PTAvWL2QTAw8Ra2YPdiDBjw8CN88/1S7vYmyuz2NhYm9ksMMPczKujy0NNm8HY8/vQfJbr3LwsQ9
                      w4eovahZW7wHfsY9boOKvaBqxTtXbCa9EPoWvQrFXD1igyU9EAAbvBiQQjzoXDG8oBu8PBrlUz2A
                      Vx691twTvcNEP73uDgA9EPtiPAuRqj1w7z29VgQBPahhMTwKRY69KS7HPbTE0LzoZp+8uKjHveOz
                      yb0AvYU8T/K9vVZyMz26mAe9yWCfPcGruD3yaF09QLepPDDWgLsUH7s8NOL8PEj4wLzwYF488smY
                      vbDbOjxY3WE8csNaPQYRKz2NT5Y9AfyfPT5HjL2No7w94LyQvLBqP7yiWXQ9WJnFvB1Nn73KAKS9
                      aGfLvXRGhL29PEm9zn2FvZQztTxi8g499nEnPVlCqD2j7oI94ABJvWYXAD1SdJK9qdvJPbrUXT0N
                      CWG9aPanvSApEb3Bcp894XHJPZzbGL0w66I7AjZNPfDQRrw1tLy94O6uvcRk7Tx3aLi9owpIvaB0
                      ErvfWMy9wU2PPQJPuL0NbSG9509QvSnbvz1VUIW9YHEOvdhgrryIAKc8VMiLvLK3dT2wHnE8dLKo
                      vPKcZT3OVSA9DV1mvdjfyzwCMz89O/y+vS8Qjj095r+9rfKePaATjDyau0A9oNFBO9JHJD02Lhs9
                      Ph1oPZ61XT0ATA+50gFqPV8PiT17D5U9qEayvNZlPj3wA1y9CNeKPIP5mL3gAFW96gBFPRn3vj39
                      T7o9JqcMvbiV0ryox1S8usZIPd7nAD2HRqg9RXeWvTH3oz10Mcg8Q2SfPcgByDzY2669FL2MvEdL
                      Qb2XQCy9XVnMvXXhtL1Z/pU9D9q4PTSnizya2ym9XX6PPeK7rr3IlMq8RvZXPWhOl71v+as9ImSk
                      vdDRPLwiHZ+9DjRbPVYsRj3GZAk9oaOLPY8nnD043KE8xhhmPab1RT1DfMs9KCE6POKDxr3ACxo7
                      cKlCPFmtkz0zrTK9URKYPTv/lT0zTSa9U4tDveI5Lz3eTEI9/VQ2vd0Kv72G3w89ecqhPYNIIr0t
                      Sme9yP/cvOL3Uz3t4E+9MDypvcnhyT1YQpe9yvRxPZjOX7zyNB091q4qPexGtrz8IhW9P6a3vepF
                      nL2qGH69mlZNPb6yLD1Q5V88B35HvfXyrr1nB6o9qOrbvPSNiTwHdii9Y+QhvV2eT70lmLy97U24
                      PRB/CDyto8m9AAcoukU1rz0m/yA9KNVvPPjNzLyO4F89jLnsPAxK6bxAvw88sH9nPGDFJjtRWJc9
                      sMupvW3cuj1QMom9Z0FkvbE3qT2g3ci8jN+MvN2Ggz1gNzq7UMRLvCMioj2TCmG9GBZ+vPqgLj2a
                      tpW92IOYvckjlD1hb8M9uHPJvJBZsL2N+4m9wKhivfihlbyNCyC9AHL9O5AvLTwlc5c9c4K1PZhd
                      lzxUeK08slk6PSodxr1HfJk965WUvbeawL3z7Vq99Db4PJd2Mr3IsLC945TIvaifjDygJEs7x2Mr
                      vUO1M715Wak9qtNxvXWmpr1pVME9bSeYPWYdDD0I7LW8Z75KvZR5rDydWUa9WLF7vLljwj1oqdO8
                      y261PWpHbr0AmLe5GKDGvBqGOD1inCA9p1tbvbhTwL0A7c6899KWPYRK7zwAUNy6Tm8rPdRSi7z4
                      irK8sFgMvKCyir2fy4Q96J9APH7kHj2Xk709vswnPc1fQL1VI569MhUMPX9kqj2wlw29Em14PY2y
                      vb3anyS9j3DFPVItLj140668eKi0vXuWyD1kN/M8/y+APRp5Db3gYq28ztNOPfR9B71DVb49AKKP
                      PA2MJL1fHaM9l+wtvbifvb0Cxmg98byMPeg4tTzlaJm9SMGBvXa/Qz23ClO9t7XBvSBvlbuHOXC9
                      CyWSPU1iir0Y4oC9pJUJvdr/Er1N2709sHAxvQDD9zuAP5o8ybGhPe03XL3ANPy8a7inPd5ll73U
                      IsI82Q7FPUB4lTxZ/Lo9LSB/vWjOhbzDDru9+uMIve6EJD2KPik9ZenKPUwNhLyaSXO92o+ivUfs
                      jj1AGB29EFYUvK0iPr2akQM9LBqzPJQn5DzGiwI9VpAJvWSyir2j+1G97YqTPdLIGT1QWFI8do9x
                      PUCyQDsgFJa9zRCcvQJosb2/ibE92CKdveCj8LwTASS9Kpk9vfBvfL1gqaG9S4eZPaD+lLvg5YC8
                      Ox+evVAlJb31NLK9FpcAvd7AaD2wk+C7dHWlvMBnIDylLp29EKp1vSm8pT2oCZm9PhUAPT5QBj1n
                      WCK9kpodPeFdmj0SjaS9U/ygPWeyt73zIFG9j7KrPVC7l7vaZWi9rJumvCspmT23ma49U0S8PSiW
                      kLyyrD49uIOBvMszrr0o/aO9JAQTvR/drb3P6Me95+OEPUqeMj3YmB88gO1gujfKur0de6g9umI3
                      vSKSPz2IZPK82qKRvVM9UL0gat27aEpQPGAGnDtyolQ9bSYmvVZcbz2VoJA9sIvzu/g2pDx6bUe9
                      ZCzNPAzkxLwUTwG9tGWpPAUXl73PhJw9jj4cPfSD4zx9gT29orJ3PcDNkDxAewM7fuFnPX7ELj3A
                      Gba8Q9iLPdBkeTxU2aq8pyQvvQs6j71Zyq896G2mvEyL+zz1fqc9eraCvWZ6Oz03KYI9+0mqPdOS
                      kL2Cryk9QIwovYKnMD35I4Y9ucipPcozZr0YV6I8ZZayPf+Uu72gZje7i+OhPTJILj1dHlS9APfM
                      vABQ/jn/u8c9Jns/Pd1MuL0Admy7wF8nu03djb2KxWg9ABVoulJMEz1JwZo9wwOYPWBnW71gESC9
                      v5ucPQA0mrriNC49Z2ijPf/ltb1ThCW9LtUbPdChkL3UF948t/WOPU6QEj27mKY9yFeevcovfr3D
                      54U9p6l7vcBKbbsXJnG9jeTJPUd0bb2Qa0Y8YJZVO/39rb32ABM915QyvSjIp72w0N87tE37vIIK
                      Uj3AptO8MgZdPVa3CT2U4PI8ghYrPTggmDzHJx29dD//vIYCkb2zb8q9jeuivUzYkryTiqu9wS3I
                      PUolIT0lILS96FK+vNMDkD1QvjY8riYgPSwsnDz/MbA96ZCXPRE0kD2oUdG8Y4qPvYNLqj10ipS8
                      GFIYPMCSMbs6s6m9P7XGPUA/5Lxb9pG9AEtkuzE5nT2aCTe9v4S+PbRAibzsovG84u8SPb5bID0U
                      aBW97vEePbHpqT0ORh89nM7XPKm3sT22BSE9TbEhvTTLp7yQJne9yNOFvHpuqL1849E8XVNCvSUa
                      wD3+Y1M9Uue9vcbQhL2skM28OmAhvfewL71Aile8wIZwvXbZCb1A3je9AA7ju03DlD3iMT89vNbN
                      PADLfLrZBsI9LaCGvXLUPz06jTs9NLawvCrrMT1Y3zM8ACjDvC8NkD3A+rc8Lz2PPWcYsD2rKZm9
                      aOTJvOFUgD2kT+s85wyOPfMHHb0svdw8jD+EvCeWL70SigI9CMmkvUAHdrtF6cC9AvxePeRv4Tz2
                      wRK9ruqYvUAwtDzo/SI86LWzPOhq4rw8Yg69JmktPUjMxb1rF549AswvPfQH5Dw9IzK9QFNNvQ1X
                      wT1upJS9CuslvcryAj2nAFK98ChePJ72Tj3lEbG9SAS0PADVOzthxbg9qhYmvUJdfj1T1Mi9ox1b
                      va+uwz0WThW9VoBxPSjvDzzTDkW9DSOtPVP/jL1gw8u9wAIeu1M8gz3ilbi9WnkKvWMiOb2N7la9
                      XqRKPZ0ju73PnbA9w7dkvT47dz0BNoM9EtY+PVLxfz3ZrYQ9vmugvUf0Jb3g+Mg7OYigPU53Bj1J
                      5q89u9y9Pefns70F9oC96GxHPMfVnD24n968YJq7vRlFyj0yHjk9p6w1vfU/ij0s6qi8wnY3PWja
                      X7zT7JS9DyjMPdi7bLx3Z0693beOPWKUkL0YO3K8ZqWdvS0mgT0weug7w1ujvUeYOb3KE6m9GL/L
                      vDDKfryToHO9juAhPccVL719+aK9EKI8vSzx/Ly+5TY9LhxvPUzlmjxoKHE8HQIbvXoYob2gUrS9
                      qxmAPQDPETw4+5082524PWJGOD2/qa49N2QovWCrhDzMSOC8gLJvvCeEGr0MDaI8fZKPvWCwebtY
                      dLi8CkhlPWK2x70LQ8Y9lrQYPbCXHL2AJZe9EQ6+PcrHib0VrIW9xiYKvfB0NL0IZb29AERUuy1S
                      Sb3u6j89/aIqvXo6Fr0xxIg9UFqdu6ghVby4Zby8M+aUPQIjOD09BXi97SI5vfgeg70edTI9pa2P
                      PVk4lT1QgZA719XAveDrn71rCsi9rvqbvdJ8ST2efJe9R23AvQASKby8iuw84gGGvZudu70E3Ai9
                      5PoNvbzjB72aAr294hpqPX/MtL0bmJA9AUe1PRiSIDxkCd88StoCvT0FUb3ZMrk9dLvJPCJaXT3s
                      tea8x7vEvc3HlL1IUJS8h1JwvSouXj3pi4U9jdtsvXfwVr2t/LW9vOTWPJgmN7y3H3G9UldtPU0B
                      nD0YtXK8QRyZPah7w7x5JJI9ptBRPY1dyj3Kgj+94LEsvVCbGTw6b0k9aH+8vOgFszyc6Pw8LmIT
                      Pfcocr3YYSo84iVPPZlGhD2acSS9HnWWvZK/Oj36fwG9YiNOPbYtAr17Fra9EO1+vabuDD3Wvi89
                      HcesvViXSLz1Aq09qL3uvD5qNj0Ogz491lcJvSCKar04BJ29SlwavWUkl72t8rw983eRPY/Yyz2A
                      95y7xbeXPTAzALxNVcQ90GEoPNC2LzwUl808QJZQvEoXjb2tsas9Z626PVjeZrz5XLQ9NoYmPQ61
                      Aj2fvpE914W/Pdjvsry4jKe9wpgoPQGhyz12UFc98hS9vbh2mrxtPoc9pATqPL6qn71WAA+99Y+y
                      vePSiD3Mmqq8wBmePP4IED0ZKYA9zBW3vBUumD1Edv886IvFvJLsYT3I7bK8wqUoPXAFQL03QFi9
                      Ot+HvVR0orwNA4s9CPG9vMgflL0wuS+85TOwvVDDhTtUutm8UKEzvPJhJT3QMso7y/vJPfmUxj3A
                      0sg6l2hjvTphvb0AhN47MBqcu84Ffj2kqvw8kn2gvV/Qur0w6767Dq6avc01UL3tDLO9oDb3vDBD
                      yr22nIu9oIvbu0YpHD0oZBC83Vq+vSL8ZD0ZLME9NptgPa2chL3DuEu99yu4vWxwxTwHSsK9AINj
                      PGzEozyDGlC9QAv7vJUUg73hu7A9YFy7u9oZyr2Ig508HodTPU9Inj1QuvM7dlsUvZ4YdT3q+AG9
                      Ip+SvWx17bwwTl08wFMhvbh+kLxqoDs9zIG4PHIQVD3wwLS9gc6cPWyfwzxTE6c9keC4PVqOfr0c
                      LYS9kgtVPSDXF71EoRi9WqoSvYtdu71AHII8/d0ovWRG4DyUdKI8Ur59PcxR17yGlRo9AL4MOwDg
                      SDqw7qY76SeHPVoSyb3zLTC98VPKPTDewr0dBb49mGBxPD2Nib2ghiK95DzzPAg4vzx8+f48sm+p
                      vddRuT1K3w694LHuvIi3t71R68A9I19ZvRsxhz2X+cI9YaujPezxqLz+Bp29gMJPPOaNgb1RDps9
                      YE/quzD7Qr3CVzw9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTYwMjAxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMTYwMjAxNnEBYS5kAAAAAAAAAErEVT1zTXK9dsGVva34tz2Oa3499GuiPMhO87wgA2q9
                      Q6FkvcKYGj1Tlo69br1gPScQnT3TXnO9Gi4WPWEJoD14ray8aH+mveFHwD2wfRu9Ug9cPbNumz1K
                      9Ya9KVKpPcD4dLuC62A9wKdyu9NMyz3+ZIm9h6m4vdSMFL1oRza8OHmVvA7kFD25UKo9dC3UPKLM
                      bz3gP4O94G7KO0zKiL3pnsA93eO/vYINDj3w/3a94KSbvVVknj0CYWk9hDnpPGs4mr1wula8mHV8
                      vHbSUz3jUjS9k+aevReYsz1ntWO9RnuqvZDYTDxQ6dU7J7LJveI3LD2bOcc96KgsPFrorr2KSBI9
                      0qV5PWzOizxSsxc9wLGVPH4RaD2HRa09LXuovQm6sT3uHJO9AMmbPGD6wr1YC+O8JiBoPU0/pj12
                      RIG9mjgevXgzs7zIwLw8AKgbvHJzy73iBwA9538avYqysr0d9JQ9h/bIvXNWrL32bnU9X9iTPfKl
                      mb0OZxs9pCroPKjF6bzQPUC9EHMcvFiFxjw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTYwMjA5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMTYwMjA5NnEBYS5kAAAAAAAAAEAZWDugjMe7LeI+vZPegD1S35m9mOvAvIeXvj0CcTU9
                      B04evXdXt72A2v678kW6vXLxfz0QOzS8KIgRvA7agL3ThEe9nPjOPGombz2CKVs98kMkPb//t71O
                      QU89tx9Dveh5JTx4s8Q8qJFnvNSk5LygBpg8QF3YOhp1y71IpaK80NdVvDDjbb32Uls9KtpEvUhr
                      kr2BN5I9wKNGu+Caob2A3ZI6AY+MPW4mbD1jpXe9ym9BvZIMcz2qNBI9QM0VuwBe9Lpns1C9mPUw
                      PGFTvj1Y9lE8sHCqvQA5T7pBfoA9Y37JPWDMzDsAfxC8HfC8Pc15Tr2NO669Oi9MPcaOir3ciuc8
                      AVm8PW2xR70R+4Y97f0dveWtpT0+DUs9iaOKPej+aTy4tsc8N55nvZBYlb1PxMK9dGO5PDIxQD1I
                      jcG8mKiLvGp5Xj0HmL+9U051vXhMzDwAgqs7mkFavaiY/bzNv4i9IhgfPVr2xL0Fkqu9cpCAvVTu
                      ijwAA++5zQmQPWAgvLtDQjS9EvywvajBBrw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMTYwMjE3NnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMTYwMjE3NnEBYS4BAAAAAAAAAGIbez0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        cdFqO29abjuKlNg7ipTYO9W8LTuBF3k7AFqaOwBamjs4HCA7PnAFOwr6VjsK+lY7OBwgOz5wBTsK
        +lY7CvpWO20zijvkaoY7Nty1OzbctTv5hIs7EaiJOwS2lzsEtpc74dWHO7rnbTsf7507H++dO+HV
        hzu65207H++dOx/vnTud+vY6i+8hO2f6jDtn+ow72sUMO8gUDztSmUQ7UplEO1pcBjt8dyM7ks1m
        O5LNZjtaXAY7fHcjO5LNZjuSzWY7nfr2OovvITtn+ow7Z/qMO9rFDDvIFA87UplEO1KZRDtaXAY7
        fHcjO5LNZjuSzWY7WlwGO3x3IzuSzWY7ks1mO7FzLjxS3Ss8aiS9O2okvTuVyGs8j3QkPNeyBDzX
        sgQ8CNp/POl+mTyUjT48lI0+PAjafzzpfpk8lI0+PJSNPjzNNBQ8sWAYPKZA4TumQOE7Pc4SPNfK
        FDwdAgc8HQIHPH/JFjwwMCw8Q7ABPEOwATx/yRY8MDAsPEOwATxDsAE8udylPK73fDxfSRE8X0kR
        PJx/kTyyJo88n11QPJ9dUDwvcZg8I5l6PJp8MTyafDE8L3GYPCOZejyafDE8mnwxPLncpTyu93w8
        X0kRPF9JETycf5E8siaPPJ9dUDyfXVA8L3GYPCOZejyafDE8mnwxPC9xmDwjmXo8mnwxPJp8MTw=
