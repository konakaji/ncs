N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDY0MHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzAyMTA2NDBxAWEuhAMAAAAAAACkioK+a0uevhJMBD5Uvqi+aKdxvWCyUj1A6Yw9fBaP
                      vtcDmz4mCPK9UBCDvfQtmb1bqC2+OGBJvYIrMj4LE5E+If6APgDyRT2IBhk98/yMPpgkW71eNi++
                      C/IfvuX2lT7Hz6K+AASgPML7HT5UR4y+uu5tPixPuz1YLVa+gMpbO5a1fL5LnI0+AUONPpnIiD4x
                      how+GoVuPoNRVr4gEFI85GKqvjyJmb4jcgm+QL/AO4SDn77g9Bk8YAoePVvFi75LVG2+Np9OvujG
                      Tz0wNGS+fOqbvTuyG764QFU9DL+4PakkmT6azpO+VauePmBhaT3gxGo99PnIPQ89iD6YvhW9nm1L
                      viN0oz57P1i+3h4PvoPFgL4A9mI66WmWPuaiX76oTxk+G7U8vhSZ2j3A9ZA7cCvLPdO3oD4cPoy+
                      opFuPsJtRT7Ae9q8+M8EPTw3uT2CmUA+Dw+QvjIfPj4nf5E+EGWwPG5Sp77mwNW9KbqWPpetoT6Q
                      Qvm99sJ3vlBF0j2+TDs+RosuvmDVMDwAk3K8AOr/vICBNb7kFYu9kHAGPphVYz1w/YQ9fN6yvQQx
                      o75QOQM+RqNmvpCAxj0AeVE9bJjcPRCQvr1YsgS+Xs0ivh3bgj6AqkI96DIIvfP0UL6N7JE+/DHp
                      vYjRLr6CUz0+zEHJvYdhqb7bAmm+syRMvsze2T0AEvc9hmVvPg2PnT4goJi98PaLPNTcn70OWCk+
                      C4mqPru1PL6kZLs9wqEmPkA9c73QPp484AalPWtEpj64a4m+x/+evjgFXr2lDJs+ACL+u6LBLz78
                      /Y69Ev9UPtyco72exRy+EUaZPpaUbj4cI6G9VK/KPbCvZL6M0Iu9I/WRvlbWV75IRVW9EtBnPvaa
                      bz6mG3y+YKFpPQDq0DsAX4K8sPWLvRCkgDzYOD4954ONPhUBmz7YeU29Arc0PlDuCr6A75q81nlC
                      PsAorT0wMho+cIcXPpMZiL6oXEG+u7oEvihmBD39RZo+AEVBPODuYL5QZ1m+Yq5UPqBCeDxmBje+
                      80RzvkV1oj4AFRa+yO9PPWJ+ez7A+T69hm5lvjAog70kGdA9uMZkPZkphD6gkgo80m4tPsqaZj6e
                      dYu+AER0O1hWHj3jh02+ldGEPvX2pT6k2J09lKjBPZAgUb5Zi6Q+XsEsPrDX3r3yHBg+aHouvq2W
                      pD5jS6K+a6iBPhmUkD6A/EC722RnvixX3z0gtCe8RH6AvUhOTr0xTIU+m2ipvuvtpj6qhiE+wLuT
                      vZV+oz4EpII9TgENPsZkQ760ioq+cjwRPqDvMby7wEa+9hc8vs6ANL6f9qO+JUiaPph6Gb0AAza8
                      C9BbvlkQhD5+Jmw+BAPbPQ7uGT4wboU9kNMRPhWamT4EMYq+2/p5vitlEb5o606+PWyAPutfF74U
                      WYq92m92Pgvvc74ivmg+4CAaPRCIi76MWLm9JiT+vWB7Wr2g8bA9wOn1PSdRlr4AgLo5p9+XPuAM
                      HDwWw5O+8PT9vFjEFj42gYG+E+Ytvlr/GD7wQeI8xG73PQQhp76YJaG+XmRXPstANr5Y0Xq9IlsR
                      Pur+cz5WQai+MKaPvc4bDD5Qrcc9sFKDvaiRHD3EwqS+QDYnPk4KZL7IB3y+mCpwvqjRW70chZG+
                      ArogPiq+YD4A+p+7FGzXPbTfuz1gKOm9graIvgAoxD1YpWw9t5yOvsQM/z1wVCS+MFuQvWpaND54
                      PU29tm0nPrAygT0WI7m9uNYmvmvSXr7V85I+sBEbPhAAYb7V6qQ+v4iQvs7GCj5TcSW+AAo/vGzt
                      oz3U6Ze9HBS1PQxM5T3hH6g+WReAPpZz6b1s9MW9mKZvvjy4072uF3U+gCkgPoTxiD0mowQ+pm1R
                      vtYxc76glx0+niWDvgBcGbucLZy+aJkbvVBChjyGqTo+4kU3PhNpT75AOpU7ouQaPqwe3T0xuYU+
                      ZIakvrjQab1GH1q+fSepPgbuAD4ETuI9RjR7Pug1Jz0YaFU9Ctw5PjgEKr4gp1a+nmVpPrj8JT7w
                      jde8AGqTPX4jRL6q0pa+Ul8hPtj9e70+2p++9mWKvisrI74won6+QDWpvnDky70OyAA+00wcvuYN
                      PL6jUFq+nt2VvlhIjL7u5m0+Jo5ivnCImb7rxJK+vHaePULkdj5Wxbe9iGgAvm6pIT5Th4G+LdSc
                      PjiWab0oxx2+4MvsPTDhzj14MiM9BnnnvfrULj6Zc6E+muhMPi74aj4QWzm+IAmhPQ4NFT4x5IY+
                      gLQ2PG49ZT7k7qM9iAIcPvcdpb5Oiik+mlwcPvK0dT6Q2fw8xhZNPsxB4b35Yoo+IixdPnM6PL6W
                      gUI+YAaSvqqsi74g6kE8shCevsk6gT5To2++OJQYPQA5FLy45Be+nuA6vkDfzj17bw6+5ooTPgUo
                      nz4guGM9wZmRPgRoxT2UKYW9TYqHPlB8BD6sCtE959yLvt0Cgz7oA4C+IDFUvIDH1j0dGac+wot7
                      PqMqar65eIs+w5cpvsQCqL4mn2M+0DmYvZg3DD3Aa7E7eGIgPc+vpr6gU3s9oxRpvvvfR75EzbY9
                      DidJvlsklD74hjK9lM2avnKcor4066U9SXmZPhZeub3AWvg8UvY3PmaaLb4AKS+9AFIuO7MONL4d
                      B6I+kMSDPQM+pT75ZqA+xsptvghIAr1JyaQ+4P34Pdzu4D1yuWQ+c7d0vtp/Uz6gcA0+Ft5MvqTN
                      ob2MYMk9nvZBvqTC/z2SaTY+fdSGPpJkOD4wk+W9fY6gPuPROb54RgU95KSivZa1bb5AzMY9lroK
                      PmuiKL7pjaU+0J6rPR2umD4QmZm94FUsPTY4Wb4wr+k9NG2avRB9B74eniO+RuMmPty/jT2QPMu8
                      Dlqavo6xg777BFC+o5OfvrC90Lzwoc29OP9RvVXVoz7TXp0++PIavRhsFD5M+I++Gg0YPkK0JT46
                      TY6+WD08vgsrlT7gpoS9wClwvcqGfT5a5Wc+AChzOdBF7L3jgSy+zlEOviypwb2uiQw+fEvRPZ9m
                      lj6CgoK+pvpkPmgqUL7mdL69pRSYPl4akb5QjO28fB+bvTxZrb2+O4G+tl4lPgJoRj57myC+3Oqx
                      Pfzvtr3aUFQ+4EyLvnpPCj5gcLa9N7WAPqEMqj5qB2M+3FC4PUV5lT587N09+LxJvuBjiT37Eqq+
                      kN75PVnjoj7AX+a9S0A9vmwC/j2ujjW+AKfJukr1Vj5KdKe+Ym9wPk4IWr6z8AG+eB9nvetlbL5x
                      ZYw+xF6ZPTjGJj1oak69qL5dPUD4Qb4Cw46+s1WnvhYgGj7Acf68a2tyvqDXDT7Ah5E98Bj7PG5N
                      WL6GXGG+YTiLPj6BO7444zy9ZP7LPVvXZ76ytRA+IPsFPuOAHr54nZu+YCHMvazP3D0Ahjy8UhqK
                      vuKZWz76NpS+iCx+vU6Zg77AUsA83ohwvrljhD73qqG+/emfPviLHr0o9Yu+8nZLPoBMfT1WlUk+
                      GjBzPiSixD2eY4C+46idPiQCgz0c/7+9aa6OPnjVZ75wZ8K9iU2ePsCOVb2/k4a+0JCSvqBROb4k
                      Wbo9CNt4Pcbjpr7Yfxw+dw6IvqUfjj6AU5g8pLWkvdlzpz7cSPs9yOd4vudXpj4wDeE9aMYKPhRp
                      ib2grv299kVKvuiWfL1omIy+ADYkvkKbPz7wo7o8glJpPjJfOj48MdG9shBLPsaL9b2IeUS+U7BJ
                      vuAOar7xxJI+gDEVPqv5lb7evCW+vDvCPdoHRz4gmVa8TC29vbb0JL5Aj/08BMzpPcV0qD44kS29
                      IbCiPoAkC7zg7zu+LCLiPfv6mL75VaA+3v0iPjjrfr43P6I+0OZzvkBCkrxyLYi+8GS1PIlomD7g
                      Gg8+myxhvvJacz58mPY9FLGwPRpzWj5maC++mOMxPfAm6r2QSCa+8D8Cvi50hb5ATI88QPy9vFAA
                      570Y1Tc9aIEZvvkpiz7Gn0c+2FR3PbPWkr4wZOc84nuJvn5/bT4TuIg+lkwavmNYpT7odlM9VgkJ
                      PtGPpD7eRZW+CtOKvr+HqD5AKa671m0HPgCuKr0ot1W98ptLPhU+pz4Y1hk+c4FzvnjBR71rqj++
                      0GGsPBRY3T3cH969AGKQvM2omz6oqim98DXyvDgQSb2G+mc+Pr4LvrPmkb6m7y8+1SaAPvZePr7m
                      hW8+GBJpvZD4nb7K9w8+ukVTPmDeCD7CtV0+Im0EPsVEnD4N8II+gBO5vDtMBb5J5pM+8PSwvQ1x
                      kz7m3ZS+JrFMPliPkb7OLRa+cy6UvuAlhb4KCw4+Qh1NPoDvMD2A/aQ85IukPepRFT6yBzY+iT6Q
                      PgiTZL0iUQ4+Y41XvpDa7L3Qbra9GwlevhLaKz7KFiU+1us3vkDdjTzOPly+VFDGPZDKqD1ziWq+
                      UNX5vbK0Yz6qtKi+6pJyPriwUr5icKa+6pJIPvrfcD5eZBW+3kcPPmDQDj6xhog+EBWHPOblM75w
                      m/C9tcmPPgApe74gpTu8JfGbPt7aez7QYoY8DLzmvYCXezyybzI+yKIuPVKDfj7eZSK+maKOPlDo
                      n73vxYo+wKc5PRCBibxgCXq8A64MvkPekT7AIxg+CQuPPmxSlj3Pz4g+65sAvgIJPD59Z48+pK7k
                      PVZDez6Z8oI+DrGnvrKYQz6GacS9cSWAPiALOTyQ6b28AJJcO9ofEj5wSqg9zF3+PcCRNL50a5W9
                      AAm4O2ZBBj6okHO9M0wGvpZTdb4ANS6+iBZFvcZoVT6QH9G8/pN2Pq4alr5cHfC9ogyAvqX3qT67
                      PEK+YoqWvsSg/T3Id1y+FhdWPuCjcz0wNxm+Nj06PtDFw7w=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDU2MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMDIxMDU2MHEBYS5kAAAAAAAAAEZbtr1w6bM92KlmPfbAgr62/ee98CTdPGqCZT4ozz6+
                      QOKRvZ0ahT655Zc+MGiuvEJxcD5q8YW+AJ84vqggKD78RoO94M1KPQCQmrrYpn69iul0Phya2r0W
                      2xw+glpTPvRGiD2qcno+dgJpPgRsib7QNd48zaOCPkKcAz70Q509WTaaPnbRVj4/6IE+gP5CvSxa
                      jT1gmPC9UPesPZIVRT6QP5A9WIZsPdGDgj4+DSW+wqN3PkQ5qz1DzpE+wBOYvDCZsr3Q+O49sIuU
                      vuG4iz72PlU+GGQQvoggWT3c9ZQ9hYWDPjgpXD0Ax22+hqJDvpj9d77YGoK+nrAdPmKKMD4sSqi9
                      COg6PYAkI7tTOoA+PM/JPczKvT31yog+g7MgvjOlar4epUA+B96nvpPCZ76DPSe+uHh4vqCexb0w
                      p2u+T8+DPoCPPr2IcWy9/4iqPtPrFr7Dbgu+mCl1veYmUb6m5Pq9P4KivhRIuT3nQZa+X8iIPiDY
                      JD0ukY2+6vw8PrYIib6+rEK+x5mavlYI3L0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDQ4MHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzAyMTA0ODBxAWEuECcAAAAAAAAAUZY7Zo0GvbL3dT1+fQo9pn8jPWDYjTtA9W67pv0r
                      PYDg0zod+qK9ioayvaCdszvZyMc99dCDvUO+mT22UXI9qCLZvIBCPr39y5y9jFvxPHouMb39ZKo9
                      s4VMvQp7PL2iBQs9ImFRPQYYPz3tw3i9g8tRvQgKlL1ML+o8QN9Ru98Iw71Q0C88KJ0ivHWogT0x
                      QZ09pzhnveVjyz0ALga7Lb6vvTM+jT3gqtC8AM0Duu7pPD3Amqa8DJnpvFJaFj36eGG9c6iNveQI
                      3jztaIk9D6XIPeCzvb1o7L482gQ5vfpeRL1kvwi9JpQBvZBhr71gbIa9jJOmPOgRELxC4gg9AhB+
                      PR8Ejj1EMgi9YlVNPQB1mjztM0G9szSqPXUPs70R2rg9gAOHvNFayj3UbpM8xGoCvTMwxj2DbyK9
                      AKKCvYKITD1AwiU8HOjjPPC4bDyHgma9QiFtPXDCZrxQTDG9RPqGvT1LoD2aOjO9tJKDvMiXsr24
                      wJ08NLuavPKtxb2KMRQ9XX8ivUOdjb3b1p09sq9SPXMFIr2dDmK9AhIFPdOfxj0F0Io9etENPaEC
                      yj0dbcg9AMt/OhIrUD0AshK9upKvvSsywT2P04A9F8Swvdu0wT0uUwE9IDPXu/AhX7zG8hO9SUq7
                      Pcdqx70QJ2Y82N3pvOEQyD3Y9a68RguUvYDkbTwaVyI9UPd2PLoiRL1wvAu8MPIpvGB1lr3et289
                      c9SlvY3cjD2/+sY94uWMvd6JLD2aIDk9+VKkPbQRmzwAUo06ykfAvfh2t7wTlbc9gEBivAd1kT3Y
                      DJS9inMGPcYSSD2rhJI9gDoOOkI4eD3kBg29wKOdvZIeLj3RoYE9Y4JivXP2uT2SjmI94J2OvZJc
                      dj0gUza9AMtCutRvnjyYcHe8qMFgPMKmND2NUYU9BKWHvTozeT0D+o49+uK1vUL5Nj0AHc+8ciFq
                      PaCFqTtgdkq93BzQPGb7QT2EYc082VymPZCVcr37lqu92I5JPCI1PT0Gyy89imFHPVcXtb2vg8Q9
                      QMDDvInZoD1sVQy95k8kPfedPr3Hn6o9aNljvFJ3rr1ge6O7suAdPTPBM70MwOw8Z/05vawmgby+
                      XnI9+g4DvZZ4NT1NVZc9oIQoO4DFuTxyAgk9Y1SivXKbPz2BK8c9WzqbvQoGOb2YshO8wEc6PENo
                      tL2Y5qa8ByZtvUxYzzxwPqG96HaaPOurpj3YEYO8yTOuPYQu+zylebm90EWrOzKHAT0aJYS9hQ6T
                      PVoeNr2os6c8zcoyvSpwAL3hkps9wKJ6vNpHDT0BvZI97OCavMqxcr1TESy920CMPYJNYz09lII9
                      OS+RPdCNl7vbIcS9EjWBvZTh1TzGbZS9FbHHPd3Ra710KNM8SBScvVXktb0AdNS78CcEvHelxT12
                      mpm9ClKOvbXfhz1IhbK93bNdvQCsYb2HKnG9Yzh9vUjFn7zgU767Oh7AvdhOmDzVrIE9AHE+OwC+
                      RDwlN4A9yO++PKb6Oz0bJ5U9zrilvWITbD1QTio8JvSovZhkPLyq5ZW9UdGtPfJACz2KHnU9x5CH
                      Pbs2yT1uH4e9mMGmPNH5rz3FSZ09beOgvcCLO7u4Lfm8phifvfIvED2hvq09AIJnPGi+MbwYrIm8
                      oKaAu/zKDb28KdQ8cjR/PZGcoj3w2kc8gdyHPV19Qb1g3RS9YC4hvRWmq700EMU801ZfvcMZfL0J
                      OsQ9c8iwPYMab72WtE89CQGqPVDBgrv0gfe8esJIvWqYbr1A9DO88wBevfjf57xaLB+9uN+SPJDG
                      q734iuy8ykUIvY19bL0WPmg9cVmLPb2UaL1QFF48c9NevUIcPT1O3xQ90v+XvTtTub3zrzu9g7CR
                      vUirs70ydSE9CLqzPJL7cT0g/lS9DiQAPUiXrDyADUg8bbi7PZDKE73IYrg8oKaCu9h1lDwac1Q9
                      Zvugvdi5frwfxrQ9gPTKOpDxdjxQ/5Q7kNt6PKD4ULsNUoy9Oy2sveAkgrzdUrS9kp8YPTd4hD1Y
                      0AW82GupvED1mL0XvTO9TFW/vO4EVz1NebQ9H2CyPRgdMjzVOoe9oiw+PbaHKj0Aiv68saWTPZft
                      rD3YNH28GgkrPa7BmL2EhRK9uCjGvRJkHD2R9a49dl0oPUNFgj3wSku9I8uGPXYDXj34YY69gOWU
                      u9xf3DzjF6M9tdSPPXneqD0ohV68mHqnvPMKq71JgMo9c/Gqvdh28rxYbT+88gt9PcBjqb3WDBI9
                      MHU5PICxMbyIBNC84ZHJPXOZab17RKK9lSu1vQDK9TnQRHI8YrBJPYCEiL04W/+8O/u4vRuXyz2M
                      uPG8/m9GPahWezxelRw98sYRPUVNoz0jA4w9l3W0PSGEoz3XNlG9bC6EvF55HT39iie9gHavurRm
                      AL1Bspg9mkO7vSfkYr00utG80JrGvSB9pzyDhke9Lc6UPZLsKz0qJcq9a6DIPQqaDT0HUb+9IAbp
                      vCztmby6lz89JZGaPV54eT0OkQ09vSNovaxk9zzIw+u8mps5vejMRrwxpLw9XrVDPXhqrLyXcmG9
                      bAQHvUDd37pQUVU8gNtlvch9ybww9xw803Ubve5kfT2m5Q09OntDPWiUtDxSQcu99aq5PQ5Pdj0C
                      TgI9jdS6PaPOYr12MkI91q4qPejoo7wsGg6902XHvcOiTL31W6G9V/G6PYLuST1WsTg9UyEkvcq9
                      Tz3ob8u9RSKMvXIAQj2STAk9WvrLveW1qr0wfZ078uhEPeirQDzi5WU9lYm8PRTUgr2eUi49HGyG
                      vQkrkD3kTwe9Cp1gPRdodL1z/sk94F+jPNDsVb3s1QC9t3levXt9tr39uJS9qwuiPbQqAb3yiAQ9
                      QN0tvAGmkj0AJWQ8wEJSvVvwvL3w4EQ8QKgfPDLLJT3g3Ow7DCLnvLctv73nT8C90CaQu2rCBL2S
                      5RM9LudUPZAgvr0glO+8zJLHPMbRRj1A6kS9LglRPWKFcz0Qwni8pBYYvTCIlL31dKy9IIqEvHYa
                      pr16lp69EwE0vQcWvD0gn+i8zWcrvZtKwz3KzxY9yMSJPFv1uD0jnbe92qXJvVgEsrxLFq69FMiZ
                      vMAJsr2sn+E8BLPxPBxJ4zzpNJQ9VCQZvfIkKT0W9ZW9kHCDvRLKLj3G8iM9lpIHvVs1rj1c1sw8
                      M2LFPUA7EL1KRWk9OJHkvL1AM71QyfG74psqPRjovbxAOZi6XnJZPTitmrx6JGu9m9y7vUAnkbxw
                      L0w8hosLPRkHqD3AzCC8g0devRYkZT1oLQK8Zoh+PVZaET2kGvw80V+OPXpUKD0iIVs9Kpc0PXP/
                      K72dhFy99fudvXcziD0Kcis9oPDcO/30sr11gYs94FLEPKDyjruAPHQ8ULBMPBgULzyQlqS9Q5W5
                      PV5WWz2zike9n8ivPQfZO713ZBy9rnhEPWj5urywRKo7YCdauwPPp73we0O9kpg+PeYDEr13qnW9
                      Ih4EPecUx70pzpQ92F7tvOUPhz15CJ498Ek/PFi/VryD1a+9ylhvPez8Br2IaZc8KEp5PPBqabxl
                      MsS9HRavvcaMaj0K8AK9ixDFvTisnTywieO7iAr6vLyi0Dzo7ra8usDAvRimgb3scM+82MugvacX
                      vj3djoS9CbiVPeboCr3QsS08sHM/vOrPY70Q4TA8ypk9vV6SrL1ZRYI9OsdhPeGFvD3yflA9Vwgi
                      vcmzmj2Rrpk94CedO8OOvr3I7tO8igxIvZIUGD39DMK92GxUvECdWLtAeey6veknvdTL1TyEeO08
                      oCBQu40prz3rIY299/43vWRu+zyZOqo9kl1mPVzh/DxogI288NtCvAAF3jtRMaw9w/egPYnNjz2s
                      T7+8dV+zPWkToD0nKqw9qstMPWzpurwNPJa9oMjSu0Xuob3q3IO9UJBrvcftOL3DLKQ9Gk0WvaJM
                      Pj0s3pA8QUKgPcgqpLyhUJg9BvgoPVBiB7yLCq69QjRmPZDvMDy5cag9DFqhPECAfbvHGFu9MY+B
                      PaRr7DwAk7y7hWKavUhNyzwlGaW98by4PeCuuL0Q7nc8Ako4Paf8d72WEqC9weiuPcPpyz1s2r88
                      wC5tPGr4Mz0Cqxc9qEdSPMUvgj2Yic28wOo0PB20oD0s4M28l9NyvdiDTzyAJMY8ypgyPVAc6LsM
                      a+88bZiFvdgsBbzMGci8UHzgO0nXoj1G4UE9AHZ9O3FLgT0NEye9wly/vbhqhryUDeW8n6K9vdic
                      j7ww5H88kK4FvEqUKD39hpE93f18vd/4hz21iZ89W+akPXThwryU7Ma8bMKgPA/KiD2jWpk9rHPm
                      PLFRjz13L3G9y5aLPW0+zL3zmyC9ukQUvZibjTzpFrc95q0mPeTs2jydR7C9MB6Zu31eij3y60s9
                      IhcWPbU/wj3XKbC9kPA8vPboBb399lK9wBpKvMD4KbtIS6K8YnU9PbBd57uOUm49i5iuvcrPCz2a
                      Pbu93wuKPS/TwD0wa8e96tlVvff+vj1IDdG8EPZovXAFUL1YX7M8tP2MPDaTcT0JJo89QI8yOzVp
                      j73T3aq9VyljvZgEXDzY10i8za5DvcAzy71LYpO9WjJbPeCG2bwRgIo92A2CvYz5tryUNuQ8oBv3
                      O9g8HDxYxpk81nUTvWYBeD2hYYU99i9/PagOqzwYWVY8oVSuPUk4nz3zKmS9sJm4u98lwj23e4Y9
                      baafvb6ReT1BDJs9MACGvYeJuj0U3YU8rXnAPY5pMD0waby7pscqPaNqa70qlQO90hApPXH2sz0s
                      8K88oBtyO3Wlgb3OXJa9bR+TvT5qGD1RgZw9MPhRvawyyzwIGa68dAqJPI0Stz011JE9lMbKvICx
                      CToQpUq86Jq5PDklgz1pZpc9zJaNPPLtaz2iEEs9HdRuvXabpL1AUYQ81+qtPVQ1urwQcly8AmgA
                      PYDJdLrsygC9kD4KvE4aXD3GD5q9+vF9Pfuzpb22yRc9SKuKvJCTNTy0RIW8iB3CPLNzsT16BCm9
                      UqFmPT/gyT1KpDM9UnhcPdRe5jyT87E9KS3EPeH7nD1gDzu7DODIvHSxxjxLpLM9cMcLPGobCb1o
                      m6+9uS7APTvNhj1gady71u0ePYBMIL24ja88ABkDvNFbgz2TaJQ9QHcaPEB0RzumJn09ZK39PPAS
                      Brx/pMY9+Q+ZPVTRBL36JFk9a72ePcqRa73w3FG8EuArPegUDbxPEMk999shvdD6hL3ZMZM9AIiS
                      uD0VkD33XmO9MNZ7vDJDWT0wspY7rAq8vFC+cbxNrqS9IIuYO1PXuz2SLTk9IAKwu9qyar3QfAI8
                      UJiQOxi+gLy6vkc90JmqvVVspr3LWL49WF6qPOCCs7tSQig9yB/Dvf2Ti70yB209k++3PXLAGz0i
                      hkQ9qlwSvTrShr0Y9am8CCWMPHM4y72TNr09RSiuvYZqNj1pQp09Rq0yPUDYN71ArUi9R7uvvQPk
                      sD2Pxso9G0/HPYJ0nL2YOpC8IFiEvHd8RL0ahEq9tDncPNstlj2DUsI9n42NPYDFMb2o7H08w8Kk
                      vcQ3Db14c/68sPhjPKq2Cr2AufW7YNq9O52qmj2hqII9a9+MvY8SxD3gGCO9MnMrPUJ6Qz2qyCY9
                      yCrRvB2Ihr25pLk9EK0vvf5Qej3rBce93a9nvXFSyD0eWyg90IosvSE+vD1C4lI9m4e/PenfoT2d
                      Bi29F/UgvbgBnTyYPlk8JwZ3vaMBk720Aek8ycOSPTB4Hry9jbw9UViNPcAmOL2BFYM9iUCCPeBn
                      kLuwCxm9UBI5PEDosDyNJLo91jQAPVLBVD0NSYO96LJQPNPgU73KmWu9FDoXvQwAlryj/3e95bWw
                      vShwWzwD55Y9GGXfvIqbsL1Q7CO8cEJwvED7BTySGE492OcAvHgCxLznOXm9A3umPaPPlz1TY7g9
                      vh94Pdj47LyMTNY8DZSuvT6Kj73j6229yJyAPCGbnD3T9sk9XvE3PZ+uoT2KZTK96qwJPWCfEjvK
                      swI9gEVOOkAtlLy3N369IhF7Pbtjjz3Kg8a9QsgDPTN3qL220xk9OdzLPaLaET2Yebg8aseoveDB
                      wryjdq69tgt7PVDJdTytql29aLu7PEg0jDyEFxK9SOyEvEBgDbvBn5A9GFwZvAAB6buA0uY7ANuk
                      uRf1M73D3nC9oMKcu9fKtj2g6027Q7RPva75Wz3YbxC8tLmIveBXwDvD27c92ZvCPbT5gjzuIau9
                      rZ7JPYpzdD14eua8EJc9vMJOej0AyMS8YzkcvWY1FL2Yokk8AitYPXRE/bxt7aq9ybvLPdN0lr2z
                      EJE98Mm4vUs7lD3uGBM96CsOPMQRir3BHIM9LmoePSr1Nj1eH6O9OBaTvYKrPD2DEJk9NJiEPCDV
                      r7zy0669SJe1vN7Rjb2yI189yixcPVjQoLz6t469LInqPGBu77thhsw9mkaJvdRagrzzcrG9uiFp
                      vR60jL2TO7y9BwtavUFTsj3A9Kq8erZgvQAgUb1oLrm9zJ+vvAKdDj2YJY+8HWC8veeeQr3SWUY9
                      A+8hvdKhXj2gBoq9kG5TvRU4pb1BgMk94KOcO6lkyz2C4om95DHQPADkv7tTqWG975fCvVZhj70Y
                      6ga8TXR2veDnIL1gUJs7LY0svVYnB72lf4k99XSkvVOlGb12bjQ9QLM6PKB9krzK0Eg9TOmEvABq
                      4bkwXWE8F0G0PWPmZr2UFoU8Cu4evXpiE701BJI9wvMQPT1sM71E9QO9MlokPWCB5TvtUia9PnOW
                      vRhVBLzz6C+9RzmpPWAKXLuD6nm90NuzO6JxTT0UR708wJCQuk0Iur2qIlw9AEorPPJvo72AJJ26
                      osESPRR6/zxa0E69s4lRvfECmD3N9Ue9V3hnvUnykT0aGGg9oPSxPGFimz1QUw48jnuLvbiWlrw3
                      +zm9G0+/vbBxN71AxjI8DBrtvG7vp70AUWy6pWOyvfC7ObyFc6W9ZP/ZPEnxvz1JuY89VHKRvI8n
                      mT0LQ5I9wBEEPM+TkD3COiw9c/ayPfqVcj2QdZi9IKeDvK/3u70UPq88vTgtvYYOAz16ciY9UEoW
                      POaQMz1A/+q8uQCRPZJxvL0hmbA9qsQ+PeQpgL0rK8K9sOSlvchLi7wokqY8EaGmPUwP9LyjTbi9
                      2DrEPHxM8TwDkGa90qGEvcicorywj4o7mG6APKpxBT1KBMu9FMbovJhvOLyojui8+IbEPHXQt70L
                      Eb69WvlWvdzJ8Dy9N0+9LUOevQingr3S+189cLpsvIBBmDpUlPy8Z56YPQDYtTy+GV49cAtZvGgw
                      wr1YrPu8niNkPXOls72mJ1Q96QC5Pbbvjr0CK4i9E7UivU2vpD1ru4Y9CeehPSCGyDtDIU299mxE
                      Pcvtkj3QdjK9XmMePUJBAj0WaDA9cRaaPRl8tj02WKy9wHjVvKbmXT1OI1U9MwuhvUAVIjvoyLq9
                      QIqnvIDgIjzyLz097I7BvPR1zzzA7By8fcuFvbDL5zsfBq09wDApvOTwgr1wAmG9fNoDvVPKSr0H
                      Ay+9yRXCPVmzsD2QQU885L3xPLrlm73QpVC9TVycvRq8UD0T7sM9ZpmnvXhBlr3NKrC9eCSVvHe9
                      qT1QZ1U8/hAhPZ3ga739bVW9hrY2PbYVIz2+1T090msOPYjnwr3E69c88HQ/PKwwi7wSxrq9Wn1v
                      vcDQHLyRz6c9WPuOvVRw7bxRFoU9VD2oPNTQ0LzQKTW9dJuOPDD0dDzQ/iO80SaCPXtWiT1hZrM9
                      HQZmvQBlULvOnkk9GfOaPWDhxbvzGi69Kl8tPdMWoL22MBw9nnMePbOWP73ucp29aHgwPFR4xDyU
                      0MI8UvR3PaWPjT0mUz09yu87PcK4Pz0K2Aa9QDFgvLrbaL0omzi8Ox+rvaoVt73gEaA7nkQmPUcM
                      Qr372sM9dQyjvffdxL2dymS9PXdjvYWirj3oMTS83qsrPaMkxz2oIEA8B97BvZyO5TyAnX296da9
                      Pdh1DjzTn7Q9/eF/vYMSeb0C+p+9AGVoO+glaLw1LJ49OVyJPQnanD1Yh1e8oPBuuzD8lzvf38K9
                      +IbPvBQapDxSPz49LLWsPD/UrL3sSN28YS2APQSF9jz4tKu8e22IPbjMhbyAC5W9sqZTPRTnwDxN
                      5E69FoYCPeaKAj02w0o953tBvSCypb3a9wo929KXvXLaKz1F67O9jNLuvIDMlDya41g9R/l1vQA8
                      XDpHdZY90Bw9PEp7VT2wc3g8QrJXPZhZizw+SSw91loBveJbHD1KmzK9y3+wPRTh/bxgSlu9wI6a
                      vEy+hDzG4iY9qAKdPEbmDb2wBzS9ov5gPSIxYT0iqA89skhkPUICjL18aRm9zcBVvbqXHb0MRg+9
                      kt9lPTzK4jzZloc9ChjEvTAIwL1rEIQ961quPXJPQz1nl0G9AHjLvSBKxb0AGF27MSmuPeADzru0
                      6tQ8kmVcPbIQHD1Vssa9iEWoPBi5OLxd4MM90P/zu2uThj04Q7o8ADwoOpVswb1QypO9GEFJvDnl
                      kj3Zqao9wky9vaDvJzsWkT09X++6PcBcWTwC8GU9gnxtPdUNqr0WMw29sLeouwgzlL1NvYU9ar+j
                      vclorz0s9Oo8yKCXPAywFb2fCKk9oILhO9QVD70Y+Ia8VGvxvCNfkD0dTMC9tfejPfg37LxAB7W9
                      154lvUdtzL2eEjw9APgfO+H6rT2XmEq9KF6WPHrJZr24asa9ApWVvTKfWj24oZ29svamvYkBiD1D
                      b2O9PQbJPUhz97ygGYs8CRS1PShn2Lzb3qm9H5iLPYABprxuvqK9wTabPbC3TjwFiKY9H3vBPbQ8
                      gbzy70Q9lAIIvRaLMD0yfXA97b+kvXpHSb0qRCC97Vg5vfgjjbyAmd46gG8oPI+Wyz2wX5c7N+lp
                      vRsDyz1UPt68JW/KPZplRj1wjbW9l9UcvbQK2bwa0zq9a8HJvQBtETtgW2W9vdKKPWIrAD0AUQg6
                      HuuJvY13Zr3IJpm9RoRDPeh6uL16k7y92kN2PRGqij2AHdG8INbhvH71JD3etHY9RCnQPFZzbD3o
                      9Je8y0rKvTQ+GL0kE/o86F6oPOEImz0Yplw8PBjhPGTt2TxgsNA7YzC2PUU9lb3Q9de7XuuMvQpw
                      db1RWcY9KrKsvVNaiT2oIby94KiRu6AY/ryAZnW6yZjKPccEbr0SAoW95MbwPCcekT1n4V69beiA
                      PVqoQD1WHyY9t5tuvWwUoDyqImo9py+wPUqnML2zGXm9ms9XveBw5zsCnsm9pWWivRIrOD26QnM9
                      dy27veAD4TvWPD491uxePQAUubp6Hh695wltvdCWHzz49ca8aLudPKy33LyyJWc9HhiBvYFhqz1H
                      obY9ag6tvQB46ry3q0u9zTCZveI8fz3cq9A84/mxPdKkMD3AKnm9g1XHvVyK3DxKthk99f+Ivcs5
                      zD0TbGK9Z7JCvbruP720Ab48wDg7PCwbpDxOBpy9RGMUvZfxmj3hwYY9+sxfPeDVj7s6KES9MHtj
                      PDAis71oeJa9qPaFvMgZr73y+wg9uJXTvIB9iTqsos48KTyDPSYNQT3YwxU8ks8hPfrjkb1ytxM9
                      LKn5PAIOTj0GuxC9nFXkPLHzsj0sXKs8XC3RPKhDcbxrk6o9SNqtvRrhEb19pjy9dqMyPWSWB72K
                      dhk9LqYIPaP5RL3o51M8ZbakPdjyxzygB5K8cu1SPUEAij0QjHu8zYGYPYr+hr0ROpg96kUxvais
                      J7zcdd085QOAPQWEur3AOTO9iCmivZNlLL32CpG9Yy93vf9ZvD1Iz4q9HmlYPfZsmb2rJq29epRZ
                      Pb+tgz24wLC9kxVvvStgtz3I5K483KYKvYCX8jqjXYY9WD/ZvB2iYL3EVQG9RmhSPZelO70eqE09
                      HaSOvQbVl70Ar006FT6gvReXvj3LPLS95ziEPZWtur0tMUG9WGrLvbAiM7zwFlA8GJyYvEhxk7yy
                      alY9sAIuvQXAyr36+jG9AcONPeoSOD1CBW091CqzvBGjlz39yZa9UDXYO+yPgr0ACWy7Ut1pPf5G
                      LD2gfa4784JCva8vgz2Dk5u9ICHcvOpJzL3AwRY7hHL5PF6bRD1lBay95zVwvd4BeT0S8kM9ACTI
                      PKNmbL0AVhC5oggnPRmimD2HY0e9tnsGPTKVFT3uw4i9Ct4qvSHDvT1kNtw8YH2nPBfLSb0Ns0a9
                      UC+Xu+UXiL0u8gM9UNeLu7KtID21g6M9YlAJPcDGcjwzUKw9ZqpFPaD66DuuFBg9/n1pPYFwnD28
                      q9E8c9thvQDmeztYKAs8IDEWvTMpML2aiaG9xVCzvXISgb3QNV+8e9mPvbQ/wTxaWTW9sKjBvWwk
                      iTzYk7O9qKKRvTp9UD0gfNi8+9aBPRrUcb3H+bG9g5M/vTpYe72Sm2k9fSanPX4JMj0YSIe9hkJ5
                      PTesTb1A2TI7WPZvPLVBvj30Roe8cGuWvYFIhz3gcg+9diIAvaprQD1Lq6o98MJxPKZ2k72KeSK9
                      YsE6PRjD07xSp469gLKAvMrXg70vxIk9KFqgvTAMKbxBBMY9INSlu/olRD2zCq89EQygPXLirL3g
                      JTa90x2qPTC3vLvAlkQ7SgypvQSyzjyBd409BXi/vRj5OjwAY2c7gOrHuqcFxL0ZQYw9UxaXvRmo
                      mj3AhJy9Ns0ePTSf/zziCoq9KO9AvE6/q72iynM9KLgWPDroFb3oCz+8ArRMParYIL2AgQO9h6yx
                      vcKtOT0XqoI9QzAcva0cxT2UjPi8pqEXvXdmiD3A+XM8CxqjvQQD3Tz4/NK8SRC/PUFDrj0VVrA9
                      AOwuvfYAWT2oQrQ8NYTGPWl+lD3AKci9O9qJPTNGzL3/lse9TbKdvSOkJL0Eeeo8miUOPc/zub0s
                      8A69V5NpvX4UMz3izhU9v8XCPfntoj16swm9AKB4t7Bskbul+qi9MN3hu1OxS73Azue8JCvnPJk8
                      iz291Ii99v9WPSj8XjwwN7Y7gBXnO/PUaL2d5Iw9MLmQOyH0jz10F5S8BDrRPHHYlT0py7Q9s05B
                      vdDJsjtvE7C96aGaPeAXkLt9UJQ9TCPxvKfYmz0MasK8kkFvPVbbMj2G/gW9EL5cvIC87LutGUO9
                      +73CvQlhhT1as1w9ZATVPLlEjD2YORA8fSuivcC4M7wI2Y08Iu9OPW/irT3AGG27MJldvdS17bzQ
                      tOc75HPQPEyVurxVZos9uG3BvAy98bz+7JO9wnxoPXQO4jwMD/i89zc/vTVfuj1Z0Zk9w1WxPShE
                      QjzD42G9EhwQPWX2tz1gxns7k/3DPQBzUzsAdwg7Q5RJvRuVkb2vG8W94jFvPRYdaz3aWyY9SSSh
                      PSGIpj2KJGU9Bwo7vZQ9gzyXJLU9neC3vTTbmLy6RSM9z0O8PU3Per1ZH5E9/lwjPVl0wT1ob4k8
                      RmoMPVu1q72wG4g7QKoau89WoT2tpIk9mNueveKWYj1yeUs9PVuhPf0/pD1g95g7i9SMPcjKgDxe
                      Xwo9MwIivQyN8DytjGK9/d2vvXgosrxYkLM8sCcqvAJnNj3Wywi99QvFvQ8DnD33s7C9FJSDPORg
                      7TwoWTO8uuBUvRiaALxZvKo9mFxPPAADs7sgicC97B4JvYtIvz2d6lm9rjtYPYAiOjpFrYu9hfmK
                      PabyNT2av4a9BhZnPS8MuL1+V0g9GLIDvOqvUj2YNsC9wGB4vXI4aj0G9gc9Q7MfvQDfazz6AHU9
                      KnBKPT7SIj1gmYs8zrGEvSy3mrzItaQ8WQvDPas4l70AgOg7GJOpPFO1qL3TITG9lCzKPKwghb27
                      +cc9suciPQ+ooj3hRLw9Kr1JPXjAqLwHGWe9gOoYui2hnD0YwV88IvCEvQDDvL33gXq9mBmovKlN
                      pj1oiQk8gJNzvYAGR70m1g29wUe4PefJxD0jgLC9YgAoPaDpj70gV329AUmqPXhkzrxGCZW95gKl
                      vS02ar2KMEs96IRcPHhfyTxwiQ68AP6YOWlPsD0leoc9e0+QPWpVsL0wvFO9YZ65PWgjH7wIXKA8
                      GfGQPVMGxr0gP6O7qFQYPEdWbb2yKBs9KjkuvXCTS72Ai6A6U4k+vUuQvL3p8Yc9maTEPRN8Y73n
                      yYU94oa2vdovO72tk8o9Va7CPXooKb3YMAk8ykk7vWxu87zwpE48wGsIPFSQ4LxCimU9NIafvL7J
                      FD3wbkg8yG2LvLBhnzvAzS69Gyu3PZIyCz2UVwy9s9hDvYigyL3QnQW82lElvZOTpD13CGO9R5DK
                      vUXTob09DGC9YiGyvamyjD0ImZa8gCoEPAAdDLz/A7A9GOervCZRkb2oBZS9Wa+7PbYrST2j3hy9
                      FNoNvaCMoDxPAL29rilgPWrVEL0w2J47fRxBvU5aSz3ocyK8uwHHvbZEn70bc8y9v1uGPahcZ7x4
                      esE89TaQvao7EL0Mf4m9p2DGPco7JD3Q9MS7CxWyvcfax72WJWo9jh1aPZt1yr1yLQo9LEO/vH05
                      XL1CeiU9FWmRPYMsQr3oId+84VazPahyj7y3cTq9fhVJPeg2ubxYhiU8GBqgvGC7gzz20zE991OT
                      PYBqkLudvki9ErN2PQE0oj1jfLw9wIyVutDtIrySjCs9coMEPeUShb3ywsm9hVnJvXg117yiETw9
                      HrAGPTQAzzw+oHY9HTocvXmInD0YiMa94LSgveDRkbyK76W9KauePeFWlT07Ppq9oDt1u4wiz7zY
                      oby8rd23PTqzxL0wB0W8Zba4vZoMMD0U15o8iyyvvbiQ7Lztx1W9jnomPe1+X72TQ3a9GB6XvAgp
                      iLyqVHs9UA1tPMCQ7bqgIaS8n9u2PZm+wj1xfKc9Q9yXvdDhM70cgv48QbOjPZa/bj2YvAO89Sei
                      PT7vDD2SzGw9klCWvW1cqL3Ynpo8TZ4/vcTD6zwJZ7c9vXorvVPkKL0dU6Q9ApFaPYB0NTxVxKg9
                      CIiWvH0WiD1qU2e9GPWWvOCT37uYmVU88+m7vWp4lr1so8q8VW+XvSTg+TzX7Lw9IqoJPX8qnj0A
                      ctU5trgCPc2bsD0iinE9o2zGvaCZMDvBFJY9wCwbvICEE71CpK+9kdCWPZpnXb2A5bK6+H7Ivbao
                      gL1lQ4m9NKi5vNjtBTwHQ8s9EJgZveCDob1RfrQ9gII2ulQjyTzsd5C8evo9vdAKpr0AvXW7cAZa
                      PJQ+xLxDqyC98OYyPFE4gj0imQw9tB+hvHqyrL1oDRy8b5vIvbk0jz2su+U88NtlvKV2jL2dtcA9
                      dF6mPCyD9TySnVI93jgYPWpGGL3+oHQ9kKRgPACSCTwAKYY8onF7PbR8iL1OBjI9gMeEOyifR7wC
                      8RU91zOdPbhfkbwbKKS9HfjBva2oqT2A5Ba8HsmZvSZGkr0oTwC892HKPQTp+DzOWng9DVGBPXpc
                      CT2AmEy9DDKqvECJib3i2hk9YrQSPVf5pz3ASFu7lDnHPFR16zxntYg9Rnl+PfECwT2ANKM8yIax
                      PAtYyj2SLhI9SjZKvQyclLxaU3I9YMI7Oy9yrz2Q97i9QD12PGoZob0y2FE9umJfPd03tb1qI3E9
                      mk2zvdXEtD22DIq98aKJPcTj/Dz2qnM90EwKvZBuoL0uZHw9oFIjvRdFyz29B2S9dWyVPY1QK72r
                      QLU9AHhCOkp6SL2g+4s7wLeqvKzuvTzlEpA9iAujvb9Nnz3qDLW9ZqgEvbSPu7wSwQg9F+FfvRCY
                      f71SfUs9Qb+JPaEZmD0AneU5EnKXvXqzTD2wipG7LeMuvff1rj0mZh893NfiPNjVJDwA1Vu64K6M
                      PCDHw7uAfaE7kCNlPF3IZL24BKy9TOWpvPR+l7zqk0M9ZqMVPSFXkD0dAZE9Tee+vUYGiL046NS8
                      RUeUvQD5Nzt0yJS8fKsJvUR++Dz8te88IjUfPTPayr0YYtG8tCkMvUPpGb32OXY9wu0WPS7BVT16
                      Ly897DiSvKD9k7uAct+6p+mQPaZWgr0SGUY9mu5EvVFOpj2SNjI9MpUIPWHutz2z/Ma9o0JxvcpQ
                      J70YcI483c5lvd07yb1zN529RYLIvWoacb0AzGI5lE2TvOzqsTyY/TW83xqZPaDnZ7tqeyO9k4um
                      vYB53Do9B2295nI2PVvFyL2X/WC9zSfKPZTy5zyYKL48A2QovVK7Vz3zF5S9SlhWPVM2WL3olPi8
                      ugUOPSIPKD1KGE+9rBudvOi3PDwvo4o9oESnuxARbb2QTHA8A21mvSsCsb3HSVe9KPegvGGDuj23
                      N7Y9uh4APSKGsL2gMqi8KGBbvMsXlz2IjP686tZJPQC4lL23oro95L4UvcqraT3/mIk9wxvAvVjT
                      ZbzQWhA8gPqnPAAZ9jskdIO90NmRO/mbqT2Mqew8ghh4PZOJOr3Iv9W8kOwRPJSU9jyXEbu9rKmI
                      PCqgZb1UCt+8sEFNPIkghj1LxLu9L0vFvdgDjr3AbQs7TX94vRkplj0A4bc72RyqPZ6fCD2UcvA8
                      20KQPbdmLb0gmsg764CTPYAPnjtqRa29KEs1PLn6qj3DkpG9PYFfvbhylb3oR2i87ZE/vVREEb3P
                      88u9ly7HPeUfq706/wU9K6WfPUeZQr2QqEa9a125PfCfSjz3bFe9ogVvPWiENrxg6IY8QEWoOjr6
                      U73djbM9EA6EvUSt0jyYB7i8FDCFPBhLnDy38Z49g6+HPbhnkzxkedA83WKJPQCi/DsAtU68eAK9
                      vDqsHD2AvOq7tbmhveBFw7xDcUC9c2CAPc7dET1GdZW9gIeCvdtvnb2EhIS9+zShPU2Lyr0JLMk9
                      9zK1vZAmOrwo3cU8PiisvZ9esb3Y4n+8oGhiO/2xRr24k5G9wBoKvKTS5DyUZfM84AKJvA0bQr2p
                      Tog9Ye/GPSBB6LtgVNk7gAbBPDeGlD1gTjG7ING+vcCtYrtAZAW8GPFbPIC8aL1WFI+9wC27vKLG
                      bD1KqkU9gIB3vADo8ToNvIU98tI+PTD807uM1Mu8idiaPRI0fj2k6/c8ApgPPdiVrTwBX8w94tBg
                      PWDhk7zoExC8UlxUPSw/vzwAWaK7AANVPM0uLL2VaKm9umcdPYycgDwYoaw8ugwWPZTfy7zejxE9
                      B1dYveCWwTyq9Q+9my27vZDCezzaOFW9RD+DvTCHGrxG/wc9Wu8PPRcHML1ASJa8wzV6veDkzbwi
                      Omk9qeKIPRtzub04TYG8bR20PWSb1DylCMM940mVvQCZWLsbmJK9M9VDvaj7k70jDlu9+IH5vKD6
                      zDvpwcs9ALtgPPFzxj14I7g8KpmavQiUmLySgFo9MMxpvITNB72D8Mq9jXyLvZh3zDyIMsE8o5gu
                      vWpJQ71CXi49ycOSPaK0Hz2vEpE9WRe/PZ7OWj1SESk9+PG5vI4oQj2Am5i6LXS7vSJWCD1Axj08
                      gN47utL6Az14Cr28V65RvSQX1jzwlmc8mO7hvEB3Tzsi6F09CwS8vQwytryw6xm8sLPnu9nTpD10
                      lMU8DqJHPTdAtT1p/cI9aFQMvNGJtT1h7MM9UjgMPUyU2Tww5/m7tHrWPDMtX70ZkMs9R41wvQw9
                      6rzn2r89KzaePX1ThD0iy669YlgKPRD9LDyGo469p9jIvTAZCb1ONA89QiZ4PaauEr1AmEe9QyGh
                      PSKwZT1A/C69GCw8vECl+LzAEHM7UOVfvcpYLb0Q9XE8ujMtvRkqrz0CiYu9zJ2RPFpgyb3YbHq8
                      +D+4PPCxQzwvTIA9Ez6rvag5drxTVbw9waSHPQAqw7om1D89wJkuPNDoa73U3f48KPtBPHPolj3s
                      nLe8QPCtvS7WYj2AB6K8zKmxvPfptb1CjiI9hcGlPf2TO70ShGY93T6VvcJifj3yfCI94F2Mu6Bw
                      sTtht5s9ByHEvUg+xL0eH3k9Iq+9vUwc2jwylm49mGhvPBNqrj1wZGi9SL2XvQAw0jodmDS9iVCT
                      PaeGlj0wNt27QLEmu5O2yj2Okhw9YAPyvABAwjmikEE9QLcDvc/7sD0DBya9syWkPW3zab38Fdw8
                      Dj1IPZ0jY73z9jO9OIPEvKN2tT2wfk48TAuvvCJXwL36dSq9E+9vvR14qT10n5g8QIU9vLCnH72N
                      crO9WpCdvW1EhT1tBpO9Wn0mvRAQSbwDmIg9LPG7vFoZkb1WIge9Kis9PZMBsr3Zyq49KMUKvP2t
                      tj0Az4a8oUybPf2sy70xLbk9Z4GxvVsPvr0zhn69Jt2XvdMmmb33YJ891Bv6vPrrJL2mixS9wnR5
                      Pa0bmb10s4+8EtIWPRCGeTzwg3K8MEAHvAwp/DygMX676NSGvCr0gL1eZ6C9EAx4vEAorbzYCsW8
                      QK54O4CZ2Ds4VeS8OFeBvPnhjz0AJAS6B2BwvZ3QpL0IwLi8idWHPeITYT0TJHu9qFmvvNCHir08
                      cs08O/alPSJyWT2gb7K8uhkjPdiHyr141ri8Mre8vWIbOD2TMsE94/KhvfudqD1czhK9EJwDPFfI
                      hz0soO68WpssPcp+yb1Zn509QQuAPc1YHr1ieMO9fhVOPdBnuDvOPlA9MM6qvWjnBjyChAc94hZ1
                      PSlvrz0Aeti7UjaDvXiLg7wQl3m90mNWPQAlMTteJ5C9VGO4vKPjXr0PX4E92HwQPEB4FrvAMqa8
                      qAOjvD2lV73irRM9WtBHPZQao7zQe8I7RXOnPW/+tb1gtNo7CRORPfBacLxRAKs9qHxHvI4hpr3Z
                      Ea092x21Pb6tg720yJM8w529PYy25bxN1ku9jY5DvcFotT27jMo9+7eJPW6TTz3apkG9g2RmvSFp
                      vD3YL3c8eDu+PFb2XD0GUn09kxEivTKTUD1DV549zULHvZCfYjwgCNA7zNWDPMBsoLrZBps9kPwr
                      vF25J71oZmI8gBGLuj7Wn70QFhG9eVOAPc94wb0gCKi74KuKuxDlTr0AFm67yvgEvSwoFL2aS8y9
                      HYZ6vVf9oD311r09WqRIvU05Tr0gKQG9ss06PZH/vD0CH0A9r2WJPfuDmb31go29cnxOPXMedr3R
                      osA9leuKvTTy8DywwJC7Nztxve6YHT1oDrK8wLApu4CGzbuJGK49dNW9PCYaRz10VaI84oquvaAX
                      c7sU3dE86zaFPdaAGz2wpvM7XoBQPbYoMz1CbRw9qjdZPTqXRT34hMQ8IbKNPbfQlT2tuso9qEZ5
                      vAMDoj3p6Zc9R1zFPT2EUL0Aaeq7oKRdvTIUTj1Apls8EIu1vekfxT3b0Zg9cKNLvSS21Dwb27i9
                      PGrkPAhhs7yr78E9ifKJPVxUC70ofqa854dTvf29oj2t5sa9e1ewPUrPy71haMM91EHyPJiTgjw+
                      vZC97LqLPP3jxD3zMyq9MP76u7flN71V0KI9dEPlvIIoVD2Y8L29VRG4PVRv6TywR/a7NIzlPHW/
                      ir03UrQ90HXmu3acRz2oylq86LEoPJCarL0H+qg9ENFwvaBiML0VNbU9fq09Pa9+gT1Zu4A9K428
                      PYCrfTzQTeM7qq+pvQCGeLuxm589PaYpvaePlT05WY49IlwVPRFZuz3zgae9jDvnvLehv70QzLO9
                      2ExHvB45Ij2Boqw9WmAZPVKGdT2Cz249/VeMvQhPz7xqgR896sdHPU5hnb1oyK08vmRkPYB/Nbxs
                      p6M8BsIvPVjHK7y6BMe9sKdovShQzLyF4cK9Nw1MvaD/y7zwhjK9VFb8PK2BQb01ea69YGGbO6Z/
                      bD2UQZ08HEoIvWCwwLsANt675mOJvZP8nD2MCYa9M1zHvRX6vT1AQXg8Ug8UPSdWer0Ri789lEm0
                      vN4KLz1y/38984DHPVvViD2Aheu87H6hPHBlir2CdmY94M6GPGiGhLwy+CM9otJiPU0xj72LCam9
                      HveCvXBZfbz9z6g9YE6PvWBDNbtKd4a9svy5vU6qAD0wmZC98GxQPAAwKDk66yc9OrR+vWS/+Two
                      4+682v15PdFjrz0AoHO3vQTLvboNSL3dpbW9IEtIvWIDYD3uGqe9Y9MfvffiuT3UVLI8Fk8FvUJz
                      i72CWT09AOrevPanVz02L3o99KjVPM2AgD0wxiQ8+hpFPUFFoT2NqZu9oCsru1Xeur3AqUu9JfWl
                      Pb8dzD3w1x48RIPUPKl6sT3AoIM84EKXPOjY6bzCnYK9evJRvQnOgj1Z+ZU9mcDHPXClRL20LPk8
                      cEYwvIgqyrw42Om8IF7sOwzM9bxgq8k79bDDvQCJsr1ENv08UIy6vS2Fsz2XjiS9wF6qvf2ktD1g
                      ZbE8WDKgvBD2bTx/YKw9SPCnPNoLYL2Av868kxG+PUhXnDxB1LQ9Hjh9PZ2ksD1y/CA9GIBfPNrk
                      Uj29taK9ez/LPSIjeT0qmUs9VMCLvYCI97oAm8u5FyIpvdLAJz1BKp896Bm3vaqgVL0/crK9Bg4b
                      PYu8gj1IhpM8M1cyveqTVr12Dkg9e3mwPXiVkr3j6ak9wMYdu1Jhaz0aLwy9/3qePRieELz3i3u9
                      gaK3PVocrb0w8pK7gCqpuxy1ib1O1iE9YBCZPFg0gr1Or6O90yBLvfDYr70glDO9bjOXvVVrwb3h
                      K6A9jCCmPEr5mL1TgZu92Nt/vKqhyr04ptW8aIUPPEAsu7ylArW9QKnwvGMbNr3h3Jo9zECdvPUn
                      o73Akl28JhIpPUk/sD1lS5s9Y76+PYU5r70FBYE9nyq8PSDV9bvh4qc9XRN1vU5Jpb14PfC8lvqj
                      vff3Ur3e/gU9MNObvRS3ujzL27k9AOzUvMEAjz3IP5O8gOKivSBAxzxo93a8EoRCPdDLjzv8UN88
                      6DXEvcolcj1R6K49gBwcPNErtj3APpe6lMKFPHrlMb3DIso9YimuvWgeIbxb7sg9mjNZPYwXvzwq
                      gFC94EuEuyYgqL2YqVs8+nY+PXa/DT3LH6m9WK/Gvcirorw/m5k9yN+OvLiC3LxWwhw93ZGbPXQA
                      nbyl5pW9rXwrvQctyD3bN5W9nyW8PcauJT16vCQ9hw4lvUwntzzCpis9AFpkPGCUsL04xbG9sHz3
                      O+A+ujyAS/28hL/5PPR/mDwoT688V/q2PZjKILyQQxy9wJ4gvSvzub2Ye6G9IsZUPWucsD2O5RI9
                      Hf2bPQ5/Lz2w8US8WppIvfAnir2ttUO9WDSfvCGBxj2iDX49dimmvcQGGb0Qe2K9DjYEPfQaurwA
                      7Ni8tPvovNSEiDxw2yc82NsAvPPGKb3Hdq69wBKVvElEqz1VIKi90GgtvdflOb0HyMY925G9PdqX
                      v72gyDe7wuOXvaCgjTxXNIk9XJ0LvWRx6jyZALg9YBifO0HitT1ntzu95yFivRgqozwyNXE92YKY
                      PeqeJr3Qmiq8ELSHvRo5Gb1+mCM9K2CzPf7Si73Jwcg9+pOuvf/Rpj19HjK98A0wvAaVHj2w8YW9
                      +MnpvPeAqD2g85g8wn2Jvfd4sb2mzlk9lCivvB6zKT2AU/S7umPLvc7sl71g/TO91evAvdCcDjwA
                      MNs6gB5FuhSYgrwEWNY8DudCPerqA73ILce8vqMzPXYyPD1xo449NTelPdZ9A73A0w+8HvSWvY5L
                      ir0g6YS8sJ0BvGdpdr3A+pm9c6oqvaMewz2bQq49/VipveEGnD3kEfI82iU2Pb2xwL0YFYY8R7hj
                      vSBQ87tj3Lc9Z0vIvck3jz0gnsE7wA4YO7pVjb0tWcA9IEe1O/I7DD3YjIy8hmtMPRQu+DwnvC29
                      IC2cu+y6rbybNqW9oMZWO5Rz8bwAnuS6nJrsPH3FJ71IycA8hMiJvc5Cj73NcYM9KL/IvXB0sb3Y
                      RBM8UOnuO4xwpDyA7Wc6/j1NPcrnSr1HZVy9V32uPTDRSr07rb09WDyIvOTo1Dxt6WS9E/AcvXwm
                      zjwBD8Y9beyLvbpYtr3BUqA95g+bvQBSpTwAtEk7MR+2PZkpmT3RWsk9ZpVYPbZ0dD26cT692a+0
                      PRrcE70uWW09o3qRPTBVAL31RsS9+JK8vQ0Up70kyf88IPLUO2K4LD3HBEq9Kt0YvXD5bbwzqlm9
                      wJ0Eu3etnz3naJ899RmrPcvmhT2QMEa9oBbDPCLIuL02PlI922uLPQBVdTv2iT894fO9PcxZubzo
                      jay8ylgnPbgcq70K9Ja98K9LvRuHm723jyK9wOYiu5ejNb1BHMo97nWBvaeCqj1wKHc82DgEvGNe
                      P73Yz+68Az8kvdSIyzzwiSa9gscIPeoNBD0w80A8JsRdPXI4Aj2Dk1u9kgwtPezYrLwIz+u8E4aW
                      PeqIID1g08Y76dOOPYc7Ur1q71+9MWCDPWKBYT1pxok9uu4xvYo0Hj011ZG9QMisvJjjBbxQH6+7
                      QeesPX3Ejb0r+6i9glgLPRITWT2sgYK9YnywvVfqr71wOLm9bd46vTY4Er32wjk9QoVBPfrCBj1W
                      PJC9eueHvY44ST29kbK9glE3PT/9nD3UsIe9KqsLvZDXG71qBTo99qsIvfWBqT2ge0K9uzukvbSv
                      xzwZUY49AFvRvDDqwTu6J0o9vUaUPQgJgTxGCRg9A+GPvUOdH701VJG9pkGdvVDqvLt61xy9z+e6
                      vYBmzTq8K+g8M1IcvZJxVD3YxFC892eWPTKXZT02Pkw9Y3XMvaBwurtgfcy9SZK6PR3VnD0zYMk9
                      NiysvWm1uD3BMJk9wHNCPL0FHL0XZbg9QvZbPcieoLyNvzq9w6SWPYQ3BL1n3ia9wBMouwCStbns
                      6Lo8x91SvdTlx7wAzxY7wL+gvUrSPj1xXY898JM0vHoFfL1Ch6G9ACwRuji3tbxvUII9TuSevQuc
                      zD1Xd229Fl13PQD9UDtq5R49gFkoutDKLjwjXYA9KDwDPCAr1rx1iJu9iDeTvUjmyLwHU6M91B6G
                      vM2voz3wPG28P82lPUDcD7yhwpA96C5qPFPxoT103KQ8fvg8Pahgybz5Q8k9zp9OPdTRDL2Mwwm9
                      BbGEPfuypb0AGNQ4+MLnvMZFkL2slfk8GE1AvFJzHT3CnaW9eB3CvLRYzbxz43a96JaPvZCfUL3g
                      isC9i6uPPfZ2Dz0qdZu9ZfSDvehfjrwwGVO9ikmbvXLqRz0BzZQ9YxK/vbdhwD2UwqU8tvkMvZPP
                      yT0gYrC8Zza6PZXwv71Slyg9hfK9PUMwPL07ise9Qx5JvfazD724jde8/MHfPHHUrj2Jn789WtJL
                      PTU9ir1SfE09IErdvI4zOz02QDI94dWFPQuFlD2G6oe9mPqcPBePpz113Im9qCVWvLiL2Lzg9bO7
                      0E59vIDlp7zGb569s9+sPaD0iztAErs8s1dmvdGivj2TFpG9vgh3PXYtHz3Q+Fi8OvM+PeDan7wA
                      ODC7sQ64PToiBT1qI0w9OEK0vXDojL2ANB08je6sPcnYnT3wC669cp1aPRMZer2U08s8GIGbvYlc
                      uT2Aify8oSibPaJDdz3W1mA9yVqLPfPGhz0waAa8FjQxPauBnb3q4469AFkOPLUyzL1IO5K87Gzr
                      vI6JFD1NfY09k7ejPYDEeTw4oc68469jvTbaaz2sf+y8muqQvQDw/bl+i6O9knPDvWBJL71ve6M9
                      C7ygvViKj710kwe9XhF9PUVEhr1ip0k9FNYRvZhoLrxXD8c9BmVfPT+3hj1wvyO9Cs9SPRO9tD2+
                      KH097YfJPTHlmT0A/E+5Gv8bPVT+67zs7hG9vADZPG9zxT3AKJm6ozm5vRXciz2DxLS9qmYFvQC7
                      bLp2/Ii9rcGSvV1/T73tYpe9QI2IvaoITj1L+cm9MFV8vAaZBz09m3W9gOb4uhhxMbzdYpc91qg4
                      PdQI1jyAxoG7nthdPbZZOj2WmWY9PepPvYC2jb340qk8ChW4vSC8wrxiuKi9w0XIPeEuoz3eRIu9
                      A9a9Pc0RsL1tKMK9Hr4zPYnPqT3cXs88s1tbvcI7mL2t0F29h3++vTcBY70j4lK9dnQTPQgHqbwW
                      gTM9d65VvS/Sxr0m4Bs90QS2PapFiL3DFyu9kxpovRqUHr33L6U9QLTEvIZ3GT2FYK49GNAAvAxk
                      9Tyw4V28gGi9O3LfHT1Y/4e8uybBvTVJmz2RU4c9mLAMvOcoO719Qra9B7vKPYBhyroNtSm9Y9Om
                      vcaMCb1dEIy9WPc6vDB5AjwZg6Y99Cb7vBJNfj2dPpE90EQrvIMDmj0bDMK9w+O6va5Fpr3e05q9
                      6oNmvZrkBj3ApEa7rjs0PagF+7yfd8O94r6DvUS/2TwcHuU81d+rvbraMD3ncr09BWibvUaoYD0S
                      Ijg9bf5fvUxaojxdHXK9ANsgu979KD2B67U9bp4lPbgb/7y9hLm9XDHWPCMutb34CO28VWixPV3Z
                      Zb2wQxS8r7O8vZbKKj0Hu589QWOuPeabZj0k2e08EPsLvRNGsz3hUL49zQhcvSDCgjx9SI49SkpH
                      PexL5TzMV7S8/w2/vRsMur3wgsO9ADx8OYBvyrwge6K9zDn2PBicUDwA1Gu5DmsvPaBujDu1Npw9
                      CIeFvN91gz2Cy8C9MhsLPVgc1LzSoRk9sL4FPIvypL21Q8Q94KHmu4opFz1puKI9UgFCPXPkhz2y
                      YBc9rdY6vWQO1Dx9/MS9RaGuvXgwgbygkkK7APrmuZYXHj2Ip6+9kAw4vbnTxT2AHku9aH2nPBf1
                      Gr0Ih6M8zRiWPegfBzwDrWG9QLZ5O7oTbT0oLiy8MMSFO8D9Rry3i4g9Y8GkvSbGXT0og3+8V+R0
                      vexEwLxgke28grd+PSATrr220z89He+gvbjxt71oh6u9uppVPbvWj72fpro9iLiLPPp9ab0wnIC9
                      wAYKvTDT6TtasHs9UyQuvYdgYb2Auoy6nfKvvaTS2Twm4KK9Wf68PViqgDy50Lc9ZuuJvdy5gL0W
                      g189dnwOPQnhsj3VrKk96ltZPVrlSj3xp8k9xvRSPXnWgT0ASoC9wn9uPWIxSj0sqPs8launPbrz
                      Yj2Trjq98PAEvFDTpjvgjIi72v2ZvcASar14jIC8IJzmvMpbD71Uc/y8OCmtPN88wz14pLo8tEAH
                      vZhdpr2AUcK8nLSLvU+Lgj1zUG691y5UvfBrx71Nhak9ud2EPXBHPb3YlrE8UKQ1PEUEor0ANVe9
                      J8kaveBWLL3ei2Y9jtg+PdOJvz3rrZG9QK9avL3nLr0Q2FS8A843vULLrL0QTJq9K7q3veBTu7zy
                      vEc94I2aOzIjAT0yLce9iiRJPXplkL2eUgA9cGMivLYudj17/pM9/rGmvVAIGLzII6M8yQSzPQCS
                      fL0YuUu8ig2evUY4Kz2wxlI8MRSHPQ6nnb3uTgo9KNXWvENPRL2AfIi8UKtmvMhbhb2Ob3U9ljIM
                      vfBgYrwlML+9wpqHvUmenT3A30G7SNaOvOcnsb3AI6O9wVGVPe1yuT2AdFc8InE0PVvVjj2C+rG9
                      eFSBPN6qiL2qM8q9z9yBPUHYtz2Ney+9RG8ZvZZ6Bz3N+8Y9zGWiPAJJZz1+EzA9mnwjvWnpqj2d
                      C369ULX+O7IwLj1iYV09Kj+kvYDCgLxYqpy9CUeuPQegN70U0xG9IqYIPche87wrLrM90nW1vWzA
                      1Twtrau96Ge9PPJtWj0Gojc9gZSEPW7/Fz0FP7S9ymIzPbAtNr17MI29Ja+1PeAws7uG4lI9YldJ
                      PSX9lz3g7Hq9IjqQvewijryA7X06+D3kvNoxEb1Kk149mkStvT3mrj1yqgQ98+4hvVZ3CL051I49
                      VInSPABQL7hjwTy98mSFvQzVzzw79489gNTfuuvngz3eBlY9sP0hvLO1jb2TcCa99A7ovCIRWz15
                      bq09IMSHO4G5oz1Yjk28vS0bvTQ/grwAUA87UsgRPSmXrj1BXbk9oCEgvRzI+TxwUW68KMKIvNAK
                      LLx26Qw9OZqTPdNaS72wI4u77MbfvL2lZL11vLo98D9tPDKXcj1Mv8I8g2m5vR0BuL2+wHU9wKJE
                      uwPYkj3ANUM7vqmgvZZCh73P5Js9TV5tvZiYzL0jY2K9hlSBvXfBsT3wGz+9qIh7vJD/xL1YUj48
                      qNjMvMGswT09K6u9UIO7vZlJhT2ILNe8SRGIPaCUVru4xaW9ABYtuRpBYD2YHX48QTarPUFTsT0s
                      Cpq8cFBSvRBId704Lsq8bBfgvHeprz0oHzw8aHOwvdBnBL3l77Q91x89vQaOn70GyI29KhE8PVWh
                      pb1q0UI907TFvcAJibyZF8U9THihPMVKgT36K5m9zbknvTA7JTzWbD49uhwJPaqsbz2g7Xa7qiJP
                      PUrZaD2ARck8krU6PYbMWT16eQa9mbiGPcuMxr1wDSM8KNo8PFUjnb3U54O9KAi9POGumT1QL707
                      AavFPeeGI72iPW89WKpjvAB/ab2a5nU9BqWEvXWmuT0yDi89vUOdvfY+SD00FOS81yUgvcJErr32
                      BgK9ZK0UvagsMbwAsbw7MSaDPX2Hvb2DQYs90xXKvQD7KzrGz3E96GyRvCUlkT0Dqmi93lKOvVA+
                      6Lt4WaW98nF1PVmlwD0GDio94faSPTg3yDwKhya9VEHqPNpBSD1RWso9rKPQPNY3l72vPZk9U+eu
                      PXEVrD3HYr49zo88PeNHb71vSYI9eb6vPRCqoL0hIJo9QJYfvWULiD2fs8I9oKMeu283xz3spb88
                      g1CkvTCt2Ls6bYC9cK4avFKqdz1M+688oHfsu0R92TyvU4w9IBiSvPlIhj3xV7g9bSyZvSOYor0A
                      Sii7UZyWPVqVSj0A01Y8IPWTvS0ytT1qKsC9O0meveSQ8jzJz749INjWO0Awf70CxlI9kCI2vDBL
                      tr3YgZ+9umFvvegjFTyqliO9+7KAPQDmK7yCjRE9HT6TvZRap7wzK4E97c6RPeZfXD2Tqo49oFec
                      vAD2ADy7+7s9KHwGvInRrj3luoE9ukoSvXOorL36XW697N/YvPn/sT2DPE69vP8FvTBCBLzOpRg9
                      CFaovbOiy72z/4o9ekV8vWckX70GQhe90QqDPegrfzzWKlI96pBiPVIKyr0Mn/q8VisXvZMOcb1M
                      j8+8iotWPTqtnr2dyby94RKnPajVJDyiXys9eO2UvbAqhrsWKZO9qqMZPSBbtbvLNJ09Oo0SvaB6
                      ljwUkO48DIWuPKHLoz0kwuE8qmRyPZdlsT06SCS9JF+MvQNejz1UorO8/X7CPYxJgby6GZS9Y+al
                      PTS0hbz/hJ89EKxQvfCSSTwAAAw5GI9ZvC0kHr2s3J+8fjobPY1PiL0KiSG9YBi8Owd2dr1gD+S7
                      qKLfvL0Nxb0leKI9ejHAvUDOv7yK+ys9YPjVvFprKL2q1B+9oKq1vbfIrD1dEK89u8rLvfK2ET33
                      w2C9LlCLvXRUybzSHzs98KSavVAwBzxJo7I9UDfbO5SUi71oa448OB2IvRWerb0AArO8yuIrPdJR
                      Jj0Q+2i8XTVZvSQ9B71Av606vrdUPRNaYr1gpN28IOmavLr4DL138DO9mO2uvbCHFL2aLw69EZKw
                      PS3xJb0eFig9E9YqvehlTDwozWm8UKaJvReRxT1oDAI8Dv6XvfhW47y/cqw9O5aKPQ2ZrT2wUpA7
                      VTenPVrgfD3KjVE9Vp4FPR6oLD3APgG9lOLsvDAU8rupKKQ9UDcgPOjPrr0xO6Q9xx97vS5wib1I
                      LYQ8LdKfvYOckT0DA8I90rwcPWH0wT0YE2Q88vOZvWBPzDuGAW89qiEUvUaLFr2w85w7zPQNvejS
                      e7x2LxW9IHYFvZEdxT3S9Y69sCoQvGBoir1vscA9IJDIvAjqub0FhL09mSvAPTSmirw0dK4860ul
                      PaDHjTymswM98BVgvVJMLj2Kra292hGLvecVvT0FtJ69iGi1vNjXx733c7k9qXyIPQBI4bvaM6u9
                      hWGgPRhohjzoFIs89C7bPLC2mr1p9qM9M+yyPcMbu713TkG9ezSrvV0Xhr2MHha9jGf9PP2XiL1Y
                      hj68sZvDPR21wr0Vi4A9ZgZNPciQmrwNqok9mP8PvKmkuz2atqm9m++JPWzimry57cM9V3mjPTOb
                      mr0q9Vi9AC8MvI1mR71RFcQ9maeoPfDMOTzWcT896quQvRUxtL2jfaU9m5ufvRBgXDzp0a89MuA4
                      PRxKBb1Mrci80NgqPM9zy72/P6Q9n2TIPejmQjxQMEA8CIS/vb0Uo70ziJ09qSeuPTRLjTzoaIG9
                      GOMEPKG2pT2Rt5w9sIA/vLMldb0gqxC94IKzvaiNyL0e3DE97L24PH/Nhz0IjJq8CtMEPau6zD21
                      wci9cJaOvQW3rj0XRJM9wzW/PRQp27wA+bc7THjHPCJrnr0vL8i9AMAxuIIHNj0EbQ+9ylQPvX2k
                      wL2goF67MvRUPcB+Lb0Z05o9Y3KgPZUJyj2OIqu9ABY7OwvqmL2qPQy9pyS1vRC6Ozwd+o49+lk8
                      PW3SNb0wc/y7h4MnvWBYqzt/XYw9EDkOvULTAD0Jb7s9/RwmvV1Im704fJq84imqvbIvVD0jlsg9
                      6gpDvbgK7LyYp6g8FuyivQYxST1aYce9ZvtJPcjGvrzn7Lg9A1dLvWBrxLsH2rm90r0mPaCtmDwa
                      L3w9XfwwvfRNmDw/X6Y9Ei83PUAya7zud4C9QBN8vH30sD2nHYY9UmenvVPicL0aYa+9eqAbPYer
                      vD2ahZK9q8GnPaGcsD1u2XI9Jf7IPf2tob1gN8y74EfGuwCRIbo+05+9AF43O/DLg70yPmQ9rffI
                      Pacpqj0oyce9imssPcC8NzxKKZe99nmEvehxJzyqEk49WdHCPUPXn71L9II9gle2vfAOA7yzdqq9
                      vLrUPDI7MT39uZ090C/6u98Oiz1WWRC9rfRKvTKdcD3QxUW8uYa9PeCIhjy1Loy9wPScutKOsb2A
                      luE7AO7QO9rFt72NkZ89UN4hPIw527z5B689Kc2vPZRQqjwutj89ygwnPYQW5Tw2KVw9mItEPGBb
                      8jtAg2Q7p09pvcD4QLuTnWm9gDi8PJD7f72BAck9rbuNvbh5x7w6P0+9r0XEvSiT4LwnXE295aut
                      veaZaz2/I8s9J9fHvdDhhL1m8o+9NHCJvWMWoz3lcJO9wDaqOq3EVL2jxJW96ASvvATYib1Af0k8
                      bxO/vXBydr32wXc9WIlWPND1jTvNa4C9fB6FvZcGuT3XbXq9pd2WvYyQwzzSE2Q9WlhYPcpOu72j
                      ulC9eV+mPbDrBzzFDrI9WoF1vZCjaL3/VIc9yk6MvQCstDudoSG9cz9AvZaLez2D7j69i8nCPTAu
                      p72nyC+9cLxrvTj8v71A+nq8bYOqvZzvh70+BRE9TTWmvRSz9jyoz4Q8lGHXvMN/Vb0AohW7zJzn
                      vF4jJT0msyg9ttNDPUBR8jrEmug8dE/WvFCR1zuq2bm91HCivCCC9DsxgsQ90mgmPaVYiD2QQ2I8
                      WJEZvOj1s7ze0Zy94yamPSD5vb2gwhW7H6igPfI4cT3zP129+r40vdA72bvA8he9+GyGvaD5/7zQ
                      vna9ewO3vTVxjb3zzr29Ww7Evdp8ub3yaDM9AFJ0u9NUYb3njyO9Pm0HPcC7zbzHwJY9wB5XPG0p
                      L72gdz67kM8wvRJNYD2AYmA8Uvx/Pdp4Uj23YIE96rp5vcDbZDxma1Q9mY3JPfiHu7zwYDY8bndX
                      PYwxjzygZ608kocQPfvyoT22Kqi9sOeDvXRJ+TwuzRs9AJdIu/L9Mz0K0Iu943SjvdB4oL0YKLm9
                      k05FvcA4nzoP/pI98XGgPWr4Sb0llpG9pBMIvYwXhjwYQhs8FmlGPdioWryoWgY8+a+jPZ3RNb1y
                      T009ZpAIPUPplD3ieau9iCv0vI+VwT2Cgzg9dyJavRbPn71oybU86Ls/PKk0vD3d7b+9oOAQvcTt
                      8Ty9mag9eFCqvLgbu72mAxE9IpUUPSK7rL3gy9e84PKzPLo1pr22U6C9k5eqPSIjJT0gopC7btJy
                      PUCAmrxgPf87MiwYPeewiz1QRwK9CCm8vcDKojpWPHM9llsMPQ9clT3Tva69fT8/vUA54bp6/W89
                      yXOCPUbxXT06PAK9yUvDPZiYlDxh0sI9fgiVvUAxdLxgxGa7xuA9PR7yMT3Izr08Qo2kvTHpmz3G
                      oxA9GvN4PTBGQzzKd5i9ASeePaPsKL1gzJu8FnhDPYHQoT3ot3E8M/VpveDBg73Z/5Y9wjRuPb2X
                      n73noLQ9O5K/PWXon71jhzO9y4mavXgFuzz6hBY9yDiyvRxB4zzI6LO8PNgHvfNMKr2S8wc9taCG
                      vVC1xLvNkJw9IrHGvXgImLySzjM9RhJxPVAZkTudVFW97cGxvWRk6DzG3Ck9wOQsPNayGL2AKXe6
                      eMuEvNpSRD24Bo692Ac3PHNlXL0neEC9sHNOvEDQVzsseLA8GDcfvDNXpb3Vg7Y9q6LLPRDkWTz9
                      r8E9N4BkvWDVCr1vSbK9IJ2/vEB6Jjzz9Dq9mGLwvGOlmj1QW7k7+CWOPEdfkj2mhBE9cpZ6Pe9K
                      vL3eJ0o9B8CgPQDy+7kCr6S9kQCEPQ+GtD1f57o9eJWUPDpfPz3adUm9IEa0uwlCkD1oWjS8iio6
                      vS1XhT2g2ro7mnwXPdKoCD1sgZC8oB6rvJC7aLxgxcO9FnxXPa32jb1dAn29E8duvUCOvjxHQDy9
                      VlKNveBckztnUmu9c+05vbulhj0C6h49qFGxvRx0E72SgYy9qBnLvVwKCb0HnHi9G6yuva3nwL0O
                      HhU9WDfZvBNlij1ejz0982y6Pa9omT2Vso69AFHdu8yN4LxU7YU8+WzFPRcyoT37DJy91IWKvNC5
                      /buD5Su9k8aZPcb/cT2OXgU9QNc+O4Jfq71Kejg9v53MvUDxlrojjHG9d8ohvWAGlLws1PO8aDa4
                      vKDey7z8uvs8cFZ2PDhbyjxAASC98X6vPa+AoD2ynA49siIbPZNyWL3A0Ic6AKUKPOKwBT0YpMg8
                      cV6qPWD99buVQLO9gkcOPSMemT2IrJM8W77DPZI2Pz0P0sI9IfO5PY80u73S55y9RxLDvcLJRj1U
                      muc8mfe1PeAhxjsAePM5IJWCu2yrFb3MZYy8l3IbvYfWJr1fur+9Q9A3vZNamT2ozxg8w73HPQO4
                      RL31Jpa9qh8evYo/Xr3DPLA9fjmJvSA+lLvXVK89l4AvvVw00jye1HA9ARi8PVjUUrxWK6K9SHmg
                      vVL+dD20xby8GBdyPMxrxjyeRGY98p0NPfHlhD1sZwW9IKSMvA+Jw70BK4Y922eRvd1wgL0Lc509
                      ANCvt/hvv73DCoY9EM9yvTCuSzwlF4k95+yoPR3ejz3Vw5a9Y3C7vZh2AjzUNPC8LCStPFkylD11
                      prC9mE+EvdBbKL0Xu7w9EkJiPX0nH70wPOq7jH+XPIe2s71iKCQ9CYmoPby5Cr2UH5a8QK/kOgBc
                      fDrdjaa9p0OUPf3SVL3i83U9Dxe1vaSP5TxQWLk72t5sPXw3CL2RAIY9j1rKvag4RTyGfkk9lkMc
                      PWHYrD3xhrI9cxlUvXe7Qb1o5aC8DJP1PHIDZT0XPJg9QEQ6u4hfub0/Wok9dNKRPMgojrxaSjA9
                      YjQ5Pfveoj2TeaQ9oYW+PT1CqL1mw1o9SKaaPL0puz3wNZS9TIsYvdKuID0IwJY8f3mSPToOkr1i
                      6CA9mBq/PNg4Jzwqnxi9ugsYPaChhTxo8wI8MuZrPR/VlD3QGVY8jFqFPHqeZD2QNig8GOv0vMSm
                      EL3YtUO84BKYvMBej7wiwWY9GDJcvFjdvDyMgbO8+mU+PU/+xL02Ky49ArgqPZEWoz3ERBG9yGWJ
                      PJR0hL1Z+bg9kxRuvY3oeL14XIQ8GEDfvLlgnj2oCYW9pRDMPaG+xj0ptoA9qiwEPR7GTz3QCZ29
                      wod/PW2sXr1RxZ09eTjIPcxshbwVOZw94OnjvE02O710mta84oidvXrYi71gGpQ8C7DKvVPbTL2a
                      jJe9SAmsvP1Sxb3XryW9Xp2pvdkzjD0OqnA9QPU+PCDidr1fioo9B5ZsveCcnDvgt788t/cnveP9
                      nL2UNa08sSudPR7CET2T28o9si05PVO6sT3bwKi9AwOaPRQ/ijyZEpo9MG2hu7rSx70AHe67PA/9
                      PL/4hT1EbOo8h4YsvbIWHj3zcHy9SMvAvHpEbb2aiGy9cPu0vSr+Lz3zNoc9WCx3vC4KiL0YxaM8
                      +n0hvSpQKT0Yc4y8MFJRvXJVIz3ALZm8MKGDvZlluD3A4ZG9nb+fvaKaj70AeBI8oJRvu+SBGb3y
                      5js9nR1avSD0hjt6wx89xhKmvftSmb0g0be8TD7DPHp2C70BVJc9oK69O0xP8LwfQ8I9YO+2O7ee
                      pj1JysY9AxGXPQ3sHr3nEWq9ukZMPdr6QL2yqLy9aNhlPDqkIT0Somk9OJPFvH/jmD0SYys9mXDJ
                      PfQ8gbygODO9S4KxvZnLjD2gx6e7VDyGvHKBQj3qTw+9xR+TvTXasz24Z8c8H3jEvZWusz3M44i8
                      VxVXvdpshr0ANzs73jYTPeEWjj1qyRC91g6ivfQjlzyYvNq8Q8ZovVixQDzQ/WG9Vmicvc5Eej2Y
                      zao8WvOCvVutkD2xspg9jI3XPEhbrbwPIb691EPXvJc1wD1gSss85skNPbQx6jzlCKW90zaaPSzf
                      gr2hco09xfHDvQTA8Tz6XBK9DQW+vQpUZ70y4Rg9SGLWvBD6CrzQthK8EeO0PRalfT3b0529jGif
                      vDS01bzyNIi9YvlzPfq+QL2IsYK8YpdhPU44pr2XoLs9KLpFPPEEiD0Y07e9cbirPSJoeD2dDne9
                      Yq0ZPWClHbtf+MA9Is65vWeicL3oYrG8JhshPf7DHD06bXW93hFBPXxAEL0ZTsI9TJiYvMYjC71Y
                      She8KbCIPeqru70S0xM9oNSPPIJfZz3apHy9OXWiPai5vTwbYLG9TUo3vYpcUr3zH7A9NIYRveyC
                      3rzAWvi6IOOkPMDTHrsnrWa9QwVsvaCGijsw8Tq9/V6PvTv7mj1LS669+UmEPQP7wz3Dmi69coRR
                      PSUcwb3G5J29gHXBvfBOcjwWLBw9eVTEPV0AXL1haJI9aFDbvJgImTwgzjO9GFWRvJTr+TxgMG67
                      C0CkPVLHbT1pDp09xF4EvU2Wmb0FjrS9OtgXvalysD1zr629iqFmPcgFwrxUTtg8FGAUvWhIe7y3
                      3Ls98M+GveeNtj1q4xc9B4ioPaB4z7zDSY49JLUIvXjCp7yoM628dEKXPO3mlT1QbBy8twWhPRgs
                      ob1ferW9xuJqPUDBRzwoj1a8F9DEveoZlL2t7CS91E+FPABGq7ltRqa9wLqZupQ7xjwYSvm8/pE3
                      PZAPWbwpkrE9CkqzvfVTtz2iWq69+HqwveVMkr1AI1g8vWwuveh5kb2o/jU8mJ6IvdA79LvDUKc9
                      WuQZvdDP6btAJ6s6TtE6PQDWcrx6tCe9LTh0vaXSrz2Mu608Oreyvf2QN714KvO810eBPas3iz1a
                      Qkm9QJzMvHqIbb3I2+u8q76+PRC7Nrx0D7k8YoGMvXFGxz2aDmu9D0+0PaWYgL2gN8i8KAWJPLlD
                      jD3DR8u9c+RnvauCiT1FHoI9IOOBvYoup70S2yI9jYaKPTjnhTzTsCu9qjlJvcPyxD2aiam98KBj
                      vajuNzydBIk9ijpmvRwyGb3gecO8EgsyPbESjD17tZA9m86cPRH/nz11/aw9MrVwPTCow7swfJ69
                      MKj/u9QJ4zwKn4S9pn82PWN5yL0rtaU9spFPPRBkCjxfQ8A9V3G+PQyI8rxAZf46qF+evYEtoz3b
                      hpE9QBZPvCJVWz3giyy9cwzMPbdGxz0TT6U9S2KtPdDrnjsz1jC94o25vRP9m71+lBs9aBASvBA7
                      RbzggJ29fYyLPWTMD71daYy9YXaoPegYvjzAvAK8zHSBvBeuvj1iVH49klYpPYZ4jr1ibVw9SDyT
                      vfKbrb0ukBo9dDbQPIC0+LqBeoE9xmWHvUrnBT1mW3A9YyuhvZR35bzjaZq9CJW3vVKmxL23Hre9
                      MjYkPfuEyr3joUq9/LUNvaN2lL1jFYw92N9WvCGnyT1QMEC8GIM3vHCxKrz/CMM9uznKvUnRoz2z
                      iXq9Ivy0vQChRLrjZ5k962zBvbuYuz2Iaqa8rTC0vaNNtL3PdJU9OqxPPRosOb30u9g8ePeZvfc7
                      Mr3NPDa9imOuvdDIKLxX3mC9FjRSPS30oz2qw269TVjIvRRj1Lwwgb+7WDJ4POXbmT3NQFi9kgtB
                      PQA2BrsqKX49jNb9vI2Lt72J6aA9V2VNvQy+rrzyJWA9YQKQPYcKRr3od5A8oLMwveueqz3ApSS9
                      pPH+PEyllzw3ziK9Z0bJvbYchb0mcxY9x/KIPYrBDb2AMBu8fblBvVFLgj0K8wQ99MaxvB4PfT1A
                      nFa8gEmWOgBwcbmoOoM8Gf6wPZO5bb1Wk0s9oVyAPRC7Nb0WUmg9oimmvfihwjxwmxW89245vUBH
                      wbxiOTM9ekELPdQOkzytc8A9wE7WOtqvDb3xyro9Pwq9vWUerb227ls9XrOYveakVj0t8Iy9DBiK
                      vDOPxL18s+w8WOT2vIGIqT0waYq9rPzqvNNeOL3ikrq9ILyNO7LrOj2AiNM6gn0dPdy8Br0I8oQ8
                      wXugPRSE9jyYpw08IJ3bOzM/wb1jc1e93n16PWvyxb2wzDS9oncQPdXCkb2Y68E8NdacPUM8mT1i
                      mZy9tnMVvTJnub3ADMa88tgIPbICHj3eB3I9IXe6PYIYTz0B0Mc92FIOPHK/MD1FjJa91IG1PBLf
                      ZT2n17a94TiZPYC5prvAqCU82CCWvcd8s70I08Y8RAvzPGick72wAeS7ul05vUk6mD3YGBy8fx69
                      PSwt0rw+VYS9fGWEvQ7pob0ofqi9Qf7JPfhrkbxNlCu9/Ln4PFBefjw4Mo08ZhQNPfE2mz1se6U8
                      oFwKu2gQx7wNxDq9l4xOvfqQn73aZC69xlACPWNBVr0Aqp69Ap93PfCZQDzeT4S9ShtKvdXlpb3a
                      wxo9MB+YO7IEej3CdiU9ktKHvbSZ0jzY14G8Wt6uva8pw70HHIU9mJYMvPA0A7xSezo9xzvGPb98
                      oz05LsU96nQtPVf8lT2tM4u9tV6HPYhew70G+Dk9VDC9vMhdrr2Atrk6B6eOPcK8ub3bvrk9AOCh
                      O80vkb3ZwZY9p2MpvaHxkz0yHmk9uvuovQRoib2CMBc9IB6mvdDYlzvYdow8WF6wvcCRcTsL2MA9
                      bZRKvYAlnzyFgY29cOExPHBVRbwqCD29ILK6O4y4u7y1j6o9WIJzvEojcT3NEJe9Z6h6vf3/Ib1v
                      LLa9Z6pYvZfNG72IroO9vCLbPMbMbT3NBcA9QBe0upQduTxsg+S8VNkHvWAklrtY1Y+95arKPdM+
                      vz3QCQG9LZ/FPTuhlz2QUU+87hpSPWyxD73tabk9ltUEvbYhFD34VO28YCKeuxfrWb2Tna+9RbCE
                      vbC3GLxgpgy9yUvBPfAQEb0K4xw9GtJTvRbMjb1tA3+9f1GEPZbanL3RDJA9ID6EPBLoLj2dYTK9
                      wk9UPfQH4LwA1106lEWXvKKLGz2hJ5098AJrvf23hj07KJa9SQaKPeIcvr1hQ5k9FHOMPOk9ij2p
                      uKo9V9GvvWMdK70fAYw9YEquvGpYw70fnbI9aODIvfrdKj24BrO9ctVkPcJzkr085+c8496zvYCe
                      1ju3PYU9EqqfvWpdCj2sFeW8sEAtvBupnT2iIn890jVmPaiWvzzAT9m89fWePSiYxLxcyRK9ILmf
                      uxAJS7z4ZcO8beA+ve0quD1KmGY9o6Z1vT3lgL2oCDY8UmFTPVkHgj1wSQ+9IrcnPX7kCj0rL7c9
                      zW1bvXJgej3gS7o7ateAvQYadz2yLy89NqJlPTGyjj24jbq9Z0O8vUDavDy1B569gGfkvFY7Er0+
                      ZXE94iaIveNlxD0FPa29CY6aPQC+zjqlqJc997LCvcAE+TrCGFg9oNPqvAwjtTybK7e9DsCavZGa
                      qT2dBZG9clF7PWJbUj0A7Ty9ALjpuYvIrL24Xqq96QqYPZBZRb0TzrW9/jkVPaN8Ub07dZq9w3/F
                      vaoIDz1AUiM8R89QvRiSwTwWOic9+ko4vYC+2TvI1LC8tFWRvDAtRLzKLSY9IryXvSdshz0zW6c9
                      jbCPPbfNSb2HTUy9AI2YOxhaZjzLbZW92IyYva7ZWD1yz6m9xsEMvSB9/TuufVs9o+vCvSdpLL34
                      n+i8czSNPf+5y7185Nk8StlOPVXxur3w7Cw8nYG+PYx9jbwtVju9EOILveu6hz0rXr49lLbcPFZp
                      Ar1bFsk9CJvevB70hb3C7jI9jJ38vOCGkTxQM1K8gDqwuyDIV71ra6u9qOClvWD3Ajso8Dc8hSO0
                      vZ7EcT0AMra5Ov8bvdgonbw9lbk9grl7PRpfVD3N3789/+27vYzV5TwQzDE8g3C8vQCkijxQtCE8
                      gidJPTqgAb2146w9gAaDvO2DnT1HkIc9Exs7vfOVd72jYZ692NWuvfVAmb0efpO9qPe3vQzBmTwo
                      JgE8VO/EvPP9ML2qLbu9Ol9Avdi8vDzbj6g9pE7wPBvNrr2U+c28a5KnvVBQk7tdLI+9/1mwPeCb
                      lTuYJQU8ANhHO95yeT13mFC994LKvYpzPz0cjd880VO+PW2kf70ATnI7wqJtPbG2jT2C4bC9UkwF
                      PddJu71QPmy8rpNwPSGmmT3ZgrA96uRhPSaWLT0+kSs9DaaPPRd0bL0wP3+8+DftvIy67bzPLpM9
                      OMSTvaCdqTuVmp69DJTVvDKKOj0glJW9ouNOPdDBRL3g5JW7wALqOgIHVD0T04c9SghSvcDzZjyi
                      yz09okBEPS44PD33o409BuoSveD3Bb1A0pO8AN8ru7Bqi7vASRO7sO/Uu1AvKLx/1sO9UhwgPSZO
                      Fr0eMmY9wPpAu1A9xb1uowA9179SvQ8lwz1oRFY8oO64vPo7Dr3WXqS9Leohvemlvz3YHYM85xRf
                      veIgXj3+QCY90MDpu8cZHr3D1sI9syjBvcNPk72Y8CQ888VIvYlqgj3aoXw9SfyhPVAOhLvySzo9
                      AL8OOphMDTwI3dS81mALvdS2wrzRa5Y9r5WfPclWyz0A+ww6und9PZj3ujyRzog93cHDPUI/Zj3z
                      u1O9LDLOPID50bzg24E81aiFvaWNlb3NjaO9K2+UPZCKH70xgYA98dm9PfdZkT0i/EM9E0zCPSxl
                      zDygzyy7cEMcvaD5obwAkq48bpWfve1pNr26pkM9wMkuvH14ir34T7i84MGyPK6HET3X6Fe9haOz
                      PQFBvz0xmIk98MsXvEz0ib3IH8i8O/qzPdg6Orzmc2s9MG9bvPodl730QYc88F0XPO+gqD0WknY9
                      EGt3vSEPxz2YuDc8vcWUvTK/ej1siLy87TlUvRnEuD1QA3a9fcmMPU+EtT0btMe9PnBePfaPSz3J
                      FZE94LWovJNbO70AwHI5QKQEO0BVir1EOwK9jJLvvFgylbyiCyE9y/GbPQBFXrxg4Nm7cFIwvViN
                      ir2J+pQ9cEJ/vAfBwD1Bn7M9mJHyvIypwjw0Cgm9WsNSvTn7hj1zC269moOLvawkhzwYupg8xVy0
                      vcBbkLyL4JG9YEDAvTC4n72VTLA9S+OzvX95yL3NOHi9SsMmvZAYDLzUK/Q8AGL3ujIwED1C9AY9
                      my6dPZggO7ya04S9AFS3uOxk7zx/q5k92Ny9vWCGIL3wlDa9xf2lve4oo70CYFo9EKpkvJ3Ojr2S
                      ZGw9UK+vOyXlmT0occO9wwmvPdQr8zxjq1C9mZSNPaq/uL0J48k9kuw4PURbEb02tQ89+ulrPSAV
                      qTzAXrW8gG3NvPQZrzywCfu7l2BRvQBd9bnS52Y9K3izPUoLir11uYk9Q9wxvddnyr0O7qi9HITm
                      PBHUkT2yXgg98APJvZJ7Uz0AOG29bAqRvGmljz3i4ws9GtgyvXL5wb1bzcu9y9HGPcnagz3hnKU9
                      ylu7vUyR27xsoRe9mKjGPOxRiTzwwmQ8cH0RPFnssj0AmoO7CLS5PJmShD3p3oo9V08uvTQBvrww
                      l0i8HLsXvUDTx7qGujE94OWMO74WYT10oJ+8XglZPaCuQ73AyQe8piYzPUDpCrunOGy92FlDPMRw
                      7zwFV5Q9DBGXvMrpTr1g+XS9EI1kvfKHVT2AKmq97D6avHMSvj2pk689qg9wvcCNdry6/X29CYqw
                      PaG+jT1so6G8vNjkPMhvyTyIjpG9Jz5hvRDbbLxH6IA9eGi+vBoQYj0gsOU7uAOrvJiRezwYd2i8
                      +sFkPdKkuL1g9QU7AACDOOC7vb1ws0O9QOpHOxFYlz3CQmQ9bSupvfKXhr2ju3y94KS1u2P4Mr1P
                      T6Q90K5iPMg8rTzY6qO9kIQrvWuPgj3Rn8k9KEo+vNvFnD2gD6u7sEnhu1AAmbsYqiM883ekPTsk
                      zL0Fq5a9poaCvWq5Yz10atK8ldKfvTFOjT3aZha9t+NsvfpWnL1BWLs9qpSivYTB1DyYnJG9KSvJ
                      PUwk2bypG5s9WOMYPGvkqj0QUHo8NmKNvQnnlj1RDI49FQe8PfKaaD2tLpU9WK24vEpzXj1AAMu9
                      M4quvXDXNbx3uhq9/Y/FvawO2rwtX6A9OvgnPdKvhb3zhoY9Utk/PWoVGD0uDKW911SGPV2SJ71k
                      w/88eJGOvURx9jwVAba9IWmpPUMavj0K3Do9Tf9/vTBsPjxA2d46GHGKvQc0y73B7cA9RtYaPUBO
                      hDxUGom88pkSPbJZyr3ZArA9nIniPKdMuL1l5sg9SA2lvQ2Tcb3F2sQ9Y3svvcwclLynt5Q9mBun
                      vL66pL1RoYI9B6KGPRYkrL3qfUM9Gr4WPUBtvrxaBry9WGY3PFIlHT0WY5O9DrElPdixfby6tMC9
                      xJsHvRReyLzzZKU9wuEbPdSnuzyhZ6k9k1mLPcggorw4uIo8rNKLvKcVfr2zC729c9DFPZ1XxT3g
                      oWO9SFKJvYZLXz3aEws9v3nHveQe6zw0npU8yIKYvOeWer3Q1dY758jLPTT16DweIR89ZjJHPYMj
                      mb1DpFS9wVm8PQB5oDt+KU89wheYvZI7Tj1Yap+9VrJwPTDl9Dug/4I7DL/XvBWgq70XDhy9Ko4q
                      PfM3wD2NPFq9bPCPvCflWr2iyRM9suMGPY3Oer2wJli8jdsgvWDwkL1tgYq9iUu8PejfP7xMDKk8
                      WG2HPMDEDDtM4ZG89F/jvPDkQrzYTTO8ennGvR2ZOb3Fj7g91cbFPe2qt7229gi9tCaQPD7ifz3G
                      34y9jPDFvMw14ryMhoq8cnSpvfS+zDy+Mnk9wCzAPHV1lz29+bm9pZKyvXmVjz2CM4e98Ee7vemD
                      tT2riY+9XyCtvRjzYDx0YcC8IFjMveAq7bs3pF+92Cu2PDTB+rxTPJ09GFtpvKj3pzxgZ0K7wJtX
                      u2DRQr0NGIg9JvsbPcyYuDx0kQW9iD62vDwbFr1M0NE8hnwgPejSbzyPL4g90R+EPboDm73f+og9
                      9rWhvUOPcr3yKMq9sNYDPLFfuz0tios9qMPKPJ1pvz3zIEO9o9eTPQDkPrsdEoo95feIPU9Khj1d
                      asW9Om9JPfI/dz2w+Ki79zg3vQ2kq72gB9I7ZuNvPVW1ij1tnSm9QJ0WvKfYUL3tNYY9wIEUu/M6
                      uT3Aksk8NQOoPXsZyj0NDH69YDXHu2oAL72eqaW9Y040vdJ8Sz1DV749ejeXvVB8Gby+O2I9Ij6F
                      vVtStz0ovT88cjCwvQAx5ruOwHY9jQyyPSutzD16E1g9BvmRvb0Jhr0hb7g9Zfu2vYbBmL3zJSa9
                      1RyKvQBYbL1ylX49yptWPUdaNL2vUry9mIadvAcTsT36iH+9d8+NPVX0tT3IbIU8V0zLvQWoy716
                      xji9osp1PWiHWjx2pZe90MBmvai5urw+hRg9AJzzvJlhnT0CPE89s3pPvYdKOL0PdY09EhnEvQLq
                      aD0pF4Y9KG1evBsYw733N8G9tJT6vDpZXD2IZo69vemtPSBHqb0sdo48aIb1vNCan7uYKUU84AjF
                      uyP6er1A5V08aBdZvCb3KD3gAq08UdnGPY1aJ70Yq468IHSHPFiRxb1XP1296zCOvWw3hL2AltC8
                      ravDvQmrtD3zP8W9MT/FPRHztz2vJsQ9IhMBPecOOL14MMe97B2IvdsBgT20V5k8wp2Fvcjmibxp
                      BZQ95qYlPbrTAD2nSDe9dsUNvQDeijwoWT88STSrPX7KPT3AOg08oNWoO327lj2g+n87b8W9PTUa
                      oz2AjSk8LHbMPAe8Zb0ibGc9wx61vUBWUDzSO209zXhJvagcsL0Kf2G9d/tXvXF1hT1Qj+U7aYWV
                      PYK2YD0w4TW81UqbPQDmITsFPKq9LJC4PNPqkT02yho93TehPcCy3zphQKg9ATWgPeJSkb1uUBs9
                      aGSWvIRw1TzAe1U8V7K7vQKgZj0mkQG9AJ/Iu9Oxuz2rd7C9kppaPZIXBT3HU2y92vwnPdMMm70w
                      IOq72GUcvHBeyb2gf627ZTqOvSGYoj2i9J29WMm7PBVikz3k+Ps8qoRzvQ07ur2bH409JF7WPOZW
                      SD0417o8I4WZPS2hU70GxTc9gF70u3qGEj1fiKU9wFEnPPeiTb3caQq9HKkOvc2snj1wLnO8UkSG
                      vayvtrxsmIW84aSQPTn1nT0siYq9u12nPcLYGj0oavy8gG+GPBDVPTzdSbu9JHn4PK9avT1wMwS9
                      QMEOO2p7GL2izr29bgI0PaAZxL1ihks9PcGJvRb1LD2JtIc96qUSveruar3Cx1o9f9yuvaAb9bzv
                      HLI9pY6ivQBNj73zorc9mvmXvUItID05LrE96kNpvQeEKb0+ijY92fimPXSJFr0xCYM9CNz1vDsR
                      zD0u1Tc9EGMqPMBckDzu44S9q56FPR1Lfb17oqO9gHfMPCihwb1HW6o9J+aXPeBJrLt8nuU8rQez
                      PYqbIj0nKEy9wGhPvG0Dvz1NiKW9/Ww1vW7Vq72ThG69fUh7vUbxVz0S72M9SqCDvdNGmr1avWS9
                      o2y8PY2svj2atoK9M/iqPSBYqTzA46w8fTZDvcBnS7vJrsE99TqqvZpAIj1IEoq8F/vCvcj1pzzS
                      4qm9JNoYvZ5GVz0NAJS9EZGSPVv/gT3dbm+9Hr6AvWj+I7zhAbQ91PsJvbrQeb3yqWI9ApI8PWgQ
                      WTwSrhU9alBtvTgTxrz7/4k9x9yoPbeCwT00d7i8tC6svLaWaj1yDTA9hFz3PCdbRL2thVa9/pNS
                      PVRMqjxe0WM9oBuHuwsDij3KBkY9IPjDvI9wtL0wyKi7+nNNvS1Muj2iBEU9rSY7vVCXlL0bzqq9
                      AFeXO4dIuL0stvG8seWhPWLlKz3YgoC9NwQcvS3SvL1vt509q3+wPdr0Az2KykW90mLGvYuunD3Q
                      ids71kNJPWYYo70K2ru9gMAzvD5nPj3Id7q9nRKUvUgmyzzTw2e9mNV6vAAs+bhaSCa9NB+8PICW
                      Hbz9epG93f22PWr9ej3o2HS8YdaSPeCSqr3GYCU9s3lKvfYhGL2kb/k8ew+PPZEzyz2zXGu9PEr9
                      PIIsuL26xVG9UCBjPOP5qD3tqH29UhCHvRT/wDygLc87CRmePUnEzD1aKHw9RkR6PVDbeb2Ux+s8
                      1YeuPXrjPD2AtAw8IIvSO5j+qzwoZgy8IksRPX0bhL3gYqO8QkhzPU3esT2svwe9ElJbPc4fiL3o
                      Dzy8gFbUOq3wyr3laq+9stsPPaht/rx9N0K9i926vZBsPbz/apo9AOZFubS0mby9Piu9MLBvvFoq
                      T70QbTy9b5q1PTYBpL1kWd88GC/HvIznqjzQBVq9mVuNPYTcFL2Huly90FHzOzQVkjx6Plk9gzVf
                      vR/ruL0HdbG9elvKvej8s7xoyzg8ZlM9Pbjri7yMIIi8rMPEPHJplr2a/Bw9ZROHvScShT2Jq7E9
                      6tlpvZ9UnT3aD4S92C0ZvO2fqz0E/xa9UFFPPHnpxT0sqIy8O0fLvS24SL2jn5e9AZCHPU+2wj3U
                      fv88DUVlvVcrY704s6C9k5qiveCjursN4iu9asZzPfbkBD0JAaA9NCvPvMhA/LwgMxK9LTxJvWjT
                      XrxQRxa9sFvsu6CmzLsSR1Y9mJa3vY1xHL1p+J49w6CePf/Yxz0aByW9Y1p1vQDAtjkoucW9uSTM
                      PeKuYD1Px6k9gJO4PAAMHbk4xLo8MAmLO3eznT2DZLE9FMuIvEAj/7wE2QW9kKxDPPEmiz2CEgc9
                      YdLBPWPffr1zbKS9AEtDPPMjwT2A0Os7oEmOuxL3JT30nqs8KGi/vFFpyD19obG9hEHfPABlOjrR
                      epI9z0yEPXlAiT3MO9s8Jg1xPZmpiz2qpC89IDHbO/JiNT3Y7Yi8VVi0PRkpoT3QpDu80A3OO5WU
                      sr10A5O8aKkAvNZSJD2ybyU9bMK2vNh8pL0N6YU9+KK0PENvkT1yNFg92J/MvF0wMb0Rv5U9eVGI
                      PRKAMz26+0w9h4KqPVd/s70O/SI9Qn03PR0Mfb3JU5U96nKSvVj+qzwAI1S6qn45vcElpD3ighU9
                      YA2CvYLELD0RZY89AUKfPcPLmr2zU5s9bQS5Pb/trL399329TxuSPWpzCb1QoTC9KCikvQBbjzkM
                      BO08xlFSPe++oD26WrS9DCT2PIA/Ijx7V7q9zFP7PBB9dzwA7GK6JSbDvbZIUz1gNoe96LlCvIA+
                      O7r0Rha9APh6vfsznz2adm+9+jdGvbFBrD3QZAS8d15OvT4HBT2VQ7G9hOv4PHBMHryx48Y9IoWt
                      vZfear2s8P28J7KePWeNPr0qlb29+H+LPEykwLw7U6s9bKacPEkKwj3BF7g9u2iHPYgowjyWR5u9
                      hjAZPehsebw/TqI9Up4TPWqKAb1T4bs9gEK8u+1nrD3ssgi9DTt4vV66kb1iVbu9MiMxPYqpOz1S
                      hlY9IpzCvYh9kb3Ki3S9jpUvPcJ1dT0DlLg9fm2PvcU3vr0o13i8hmwbPed2s71gkYu8t7Z5vU0Z
                      rj2Ip6m8fnShvfPypz1e9VU9yCD2vBRy8TxrebI9BD3jPOBmk71Qw407UC47vLDMbb2w3qm9Bg1N
                      PV64CD3HBsa9rAmJPOO2ar3e35a9GotSPTZ1ir2/Za89vSlPvURVAL0Y6IG9yWaFPWJAcj2Am+M6
                      20WZvWA++jtCin89yGnEvIpySz2CCGM9qPiFPFugxT1HyK49o7Q/vfhoz7zGTwI9et2Lvcir2ryT
                      y0W9wbOkPXr8WD2lJsY943yQvYC8/zvsmYg8EbHCPWrYXD3Km2c9wNQivaK0RD3gTp+9ShA3PXNB
                      c73au5u9ukpzPeS32Dxt9KI92UWtPeGjkj0vMbS9HhMhPSJNUj1Lm5G9rGu4PJmAkD3ykRY9Gk+d
                      vZXvu73Cn1g9M8yRvZcHkj10cJa8vUulPWtOjb0fL5k9WKB8PKLvHz1mshc9IP47vSZIAD0wYsW9
                      Q4dsvaALnDzTL0u9ieS5PbNrsr2g2pO9luMKvdumnT3wl0S8InsZPQOslj3iLFQ9e1KrPbJReD3V
                      hJa9NqiMvdFUnT2GwDg9ZwNevfWMrT0HMpo9lAoFvXKYCz0GPDM9F2LAvaw96jyzSKM9KlEYPTDU
                      djyfbZ89t7OaPS2ASb0mY3g9pROdPdCivjv3NbG9AGhAvNbYDb3RzY89GsoaPZTUEb3oHAw88AKu
                      vRvGlD2AknA6C8ySvc/8mD23/ne9CjM+PYBpCboABau5uVufPU+Egz2KpTE934y4vYUanb2I/pK9
                      mo5nvSl7kj3VkMs9EkVhPeBIxLsl56C9dkKQvffCN734Z5E8wzPFvc1Xcr3gEM+7kbjLPR/2sz15
                      0sg9AFLGOdC95zu0wuK81rwOPQDTK7u+JU49AKQpvEf3mT0AOz47AGdcuxMJY70SJgk9QQWvPYzg
                      3DzMtwm9DIvmPKhAgr1i8i89QHuTusASlTxKGn890zsnvca3Dz1boMI9AJjIvGEYlD0OOUM9jcmn
                      PW7Uor0BYcY9y96YvXOCu71ckBe9oH3Lu5+qxz0ABm290husvT1gjz05J8I9H9e2PZK+Pz0KVSK9
                      MK0dvd3wab2KtYq9dspoPRqhyL2S+jE9J929vVbnRD3qlQs91gcGPazDgjxpjcg9VYy5vd7Jnr2q
                      Zw49/8ujPeoWXT2fZ8E9AsFePX12hL0uZEc9liaRvSdplj23jHq9wGc+OxsRsr0M/Jk8Y3OfPbrh
                      A70SXq+9kEdvvSlblz1pO6k9E2iMPWDDzbt746a9bVuiPbRj5DxlMKw9KvUMPSpcuL0AzTA8F+i3
                      PaheRrw4lbq9Sx69PbH7uT2L5Ik9AJEFPLC+QrxIeqa9Q0+svWcjwj3Yyb68O66tvXF/wT0AbiI8
                      0KmuO+I4rb05FpA9OB6svLH6jD32FXQ9hhgAPSBd3TvsJ+A80JrdO+Whxr1H0re9PncmPSHIkD3g
                      n3q9DQl4vYhQwjyM95G80vgIPcHVnj12uKW9muJ/vZIumr1Sv3w9hmNaPQPPGr2ptKI9cXC8PQBa
                      frnNOx+91QrFPfIvfz3oncm8x6uqPbcvmD2xLIo9wGb3uiUwgL0N9L69xeDAPRfnQL1g+Ou8UM5N
                      veA6sTvPh6M9f9m2PefUiz0sUcC8tR6JPSVPub0gtuC7c2+FPVc8LL3KzQO9AbGdPSq1YT3jn2y9
                      XKLfPHbqFT2MLeG8gXDAPTa3Zz2FwsC9Va6qPRs+xD0oIm08+72QPZ6mPj3iJz09RpA/PQp4Ij2/
                      AI49YlUKPfAdHTzTVp897E3TPJ8qyr1Mo6c8AK0ovIAVq7uABuY6OZyNPT6lq70yZRQ9wLygOoC+
                      vbugJN67P86/PXqjUz0UMPC8aGD/vGjDwDxWK3g9jZ+0vUWihj2jZDO9b4+0PbSX1zywn/g7gLSz
                      Oxz2EL0UJtK8sJbXO8PLar0R5KQ9+deePXZ8WD0SM4C9KPwMPBr4q700JtI83HUUvQjrnrzhpcg9
                      MDtRvKFSrT3F6se9wLQKvPd6t73QZrY7ud66PZ0Hjj2Ya3o8NAqzPFJuw71wQoC98x40vRBALb1M
                      dZ+8INfZO5BxBL2IB+O8p8SpPSL7aj2Q4m29hBsVvVhV9rw9T2u9oGqpuxVvkj1depa9/dCMvQCd
                      RrrqUC89rbYnvaTF9jyK3Xg9W8upPeXfwj0AjWq92IcovBCGU7yD4zG9x3ZhvXduer2qpyK9bG+d
                      PBh2v7xSMhw9gG6jPPAEfbwT1Ji9cwaMPaoxNL3K6ms99Lz3PACsGL3ob188U5WXvQCWyjm43YA8
                      qrYxPYx20LzvR789FZ+HvdRj7byUqwi9p+S7PRx8F70oEK+8vngLPcWzrr1BU6Y9Jy2XPVLvVT1s
                      bbk8O63MvT4hi71JqrM9J8VkvYbwLz0AqFm4hLzQPCypkbzyRnw9r/60PQF1hD0T94y9b4fIPdVi
                      kD3qYT+9miOpvcGoxj0FPq09nW90vXEFvD3gETu9ABBcuIqYp71uSm89ADWsPNx/0TyD6bQ9GpBR
                      vaURxb1A17M8FPr4vOBegr0Xn0W9ELY8vOzQn7zC7389PZsxvUDJubwVI7O9sGgvvLICdz2e+Cc9
                      Q7VQvZTU/7ySWEM9DQ68PWx5qjygHh274PkWvaFIrT3pi4o9XetpvVnfiD0zY7w90AEavV7Pez3E
                      r+I8+hB4vUh8sjxgx267aKVBvOqDQT3XccA9I0V9vclXqD3ClBk9t5bFvecRyT15nas98B1FvF4a
                      bT30vsA8neiPvazq9jxg7bY7rXClvYoZCD1yaBs9kE9QPBFaxT0CQ2g9+kbJvSA0yLzeVwY9Yj5J
                      PRM3Yr1ix1c9wCCtPBgDQjwAP6E8+RaEPZ2rbb0u7kc9ADl0OkRr+jyDyJe9Huw0PbnZpT14gt28
                      5nVJPSrXn71QP887AKQSujbBDj1s8I28RB7oPFIXND3QrFm8wL7JvBqFrL2Qlpa9NbicPSCu9Dv0
                      bb880TSEPYxx/rxo1hC82OxovPOioD2MyNe8FT6NvYfrN72IZYq97c14vUAkbjuz65m9FYPJvWD+
                      nLzYdLe9Ru2UvQCTlLt66nY9qy+iPQY0nL2ob9G8QtJHPZCLRzw6oIO98MtlvR1fuj1ssJG84Bm2
                      u+aOTz2iEUk91ba0vSAJ8rzw9QS9rLitPMp9EL1/AMI9JKXOPEttuL2zQWG9DtVlPdm+qj2nEr69
                      ZaO8vZsfoD2VE4Q9dFbnPIU/wD1PlJA96FbjvNaBQj3S5yQ9KChOvMB42Ly9/XW9BpIDPdlhuT1A
                      39q6dAIAvTudlT2oqkO8RMHpPGHFxj1tv7w9IsCZvQAcRL01n7m94BSKvO+slD3Rg6c9ArxwPcD1
                      nLzsdKY8GHRPPLiFj71+sYK9vU2lPanZxT2klvs8SlFRPayAljzY3qy9TtEmPXDOGbzOKx49OzGw
                      PcB9DDwn6cE9CY6iPSnOpj2wyvQ7vceavczz3jyYIoG9ZWu4vU6gVz3NLS69wBcXO8u4vr28/Iu9
                      O+GsvUeyZL1b78K9UBybuwH0gT3sW768yjUUPd7KLT0gezW9aL7VvLKJOz3MJp08CbHFPZvjqj3g
                      Z6e7kogRPVCBgDvMmba88MYavfIwHj1zyR29j9q7vSjWwb2438m9VwZIvRDmS7xjC6i9pP+IvS4y
                      QD2SbZK9hznMPdeoxT0Ty7M9MR6ePft8rD1Q3Gq9O+zDPUo7K72SRVw9dSanvVbVET367Cg9AGZy
                      u46BCD10e4C8gDSZO3o7KT1UCQK9zIkKvWwaEr2GpkY9rv54PQ3YGr0Hb8a9aT26PazH4LyKW769
                      tDa8vERI9TxRmLQ9zN7PvCHyrD0Aiz88YoqcvQnUpz2Ws5y9YMrHvEBHIjuWaFc9VNPBvEqncD0b
                      lqI9kOZMvWDO+zuSe0Q97JeJPJIFhL0QLTG98f+6PVROuLx+VQs90l9GPRiQI7xYz4a8XF3RPCSa
                      9Dy9JLy9pwSAPRY7Zj2PA7y9FNG2POrkKL2A44W6sJVcvZ14r71//Ys9FYG8PaqVUr3AYwo8alk4
                      Pe0Vo70wjmC8GLiqvGKRXD3IL788NrFePSCTdr1Ylf+8bT+sPbcgSL192ry9LeWXvTeHtT2oupK8
                      go0ePeHtmz1Mt4S9+lhFvQ+Vmz0aRkq91zVkvVDF3zsI+Ye9fNfuPNj3JTxSPU09rcU7vRqrWD2C
                      lg49JceBvWBE5rvPB6o9EIw+PKiqOrwgpb28oOIsu04EkL3VwZi9ggwQPdLpPT0Ie8K9mx/EPcA6
                      UDwybHo9gipTPXfqc73sQty8w/4jvYx5ybwAIVS9YJtPO4I+p72PfbC99KMLvTDI9bu5vL49wM4V
                      PHtHrD14uc+8aqIDPXDlL7zMMt48FOmaPO0WnD2YKzI8iTqFPSEOtz3iAKG9WMCkvSApjzudeKG9
                      MCwgvOIsi710Uqq8aJyoPK0vrT3QAMu9WKNlPJNJMr1OGHs98KUVPMAfWjso+6u9zgE2PULQNj1S
                      Hgg9UKqMuwA/mr1g2Oi8KS6MPXK2p70Nt5q96tsbPSakez3Qa7O7TH3KPGBnmLui10o9wGr5vGDc
                      DTuBO689Wq8zvRC7VLzgMIw7WG20vQBR87tMeMy8ACMkOuhaxr0D4b29APmNvaiRHLzCe3s9JdbE
                      vQWbgD1MsJe8UMUjPDEpgT2Ze4U9NWuOvW0bpT2VuaI9+r1XvagUOLxt54a9CVi9PRuCqj0XyUe9
                      dGwQvZZPPj3QHKe9mFOIPHpFNz3kcuw8wNjFvbZkHT2If4u8ovARPaOGN70TMjC9Y5q1PYdRkD02
                      JU49CWWkPRj5WbyZk5o90eKKPbDoUDxgFhU7V9xxvZgdJ7wAAOq2DcWfvSzUDb3o64W9Sv0Eveox
                      b70BBZw9Xv+kvbSYrLzt9T+9RYOGvTM4wj0SgUo9YnhTPSrafr2Aj6K9UAbFu8D5YryArcG8w4nD
                      PQwd4LxqXD+9YIaCu+DLk73/tLa9Qp6lvTaLj73g7LU7o3azveCihr2owYy8ynZoPcYUGz20cP28
                      Daa1vcqENL1amw29M+eZPUIWKD2Y/469AC3FuzQhmrywQHa9SLrHvfqibr360aq9EtYHPa3wvb1c
                      rg29rJOkPHDOBDygpkc7juxQPZhYUTxRCZ8993WPPWD06Lwo3Li8uS+UPYLilb1665q9uMiTvQA+
                      J7zqp8S93W0fvUUUrz1ACF28rJ3kvElKnT2aWTG9a2/DPTATP7zjF0+98uZPPaAbJL1Alb68ANud
                      uxhVG7y1b7g95XSyvSwpF71yLw49SGSMveK3BT1AE2E78rsAPf6ZQj0AKPK5l/lFvcLWaz2/TLm9
                      WsBwPSBIl7y4HdW8wjWqvXJqAD0aSqq9lHW3PE6qob0vILe9irDMvRrHaj2Ah807knorPb4fBj1a
                      ATo9KvlavTYLIT2ivF894zhKvaCPtruikn49I6iWvfOrSL362Qq9kWbFPf04Qb1QsKe74K57vaIy
                      Az2FR649296OPS3Zlj0gh4k7EnpnPTSDgzxq6sa999cqvWDEtL1AM5i6cazDPQgQmLyclIG9GMCo
                      vbnmmj1Mhr+8cKaPvbVHyz0K4ci9sASru2M/sb3TVbs9AZCVPcJ1Wz3mzGk9smcvPUmqrj36mm89
                      SmtFPcxmlDwg4sq73bdxvdREr7wxzKU9R2kjvaDwPDsMd4O9ItjBvRP3jL3gjEi9yjMuvWxc1bxw
                      nla94PfWOwHMwj2G75q92CVmvABHDjpMsqS83y7IvbB1/bubMsS94SKLPYC/1roZ3co9mn8yPUC0
                      MTzDqbO9wMVFu8AFTLue2QM9n4HFvQD3gzzifyg9K5e8vZSoiDy4bMi8MwTMPXqRBT1T3h692vQZ
                      PdgeLLxdB8A9+pQoPcNWP71gqLK8NnKXvdKCPD1yn1Y9TLv0PKRoA73fwKM9YOpYva0Qsr0sBok8
                      OgAkPWiWzDwoTKm8aqVMPZvkoD1pq789JbK+PWhpATxYTXI89CXGvCErrD2E+c88u4qhvbHPuj02
                      d1c90HcBvU7IGz0hX5c9p27AvdLkor0NEiO9wWunPex0CL1O6oe9h7+2PVRa7bzAsWk8h2lyvXjf
                      07zAtau8E5RZvbAlgrs4ock8+j9ZveRQh70DecA9oOnBuxgKl73jdly9msATvWAT2rvWxYK9U9i4
                      vfrtIL2AmjW6rXqlPbJ+dz26wJy9AIpKOdO/wT3OZgI9JTyAvb1wur2hrq49ckaGvTU1wD1Kewk9
                      ilNBvaBfw7uhQrk9gOwmvcEAvD0K+UU9L2SVPTkWkT0YIUe8k1mnvSF7oD19FGy94t8HPQEdpD2a
                      BVq9m9yvPdv/wr3CHS89YKpLu7Te/Lx1BJ69YIJXvUX6qL1X58a9Kq+vvbWEzD1Gpis9EVKlPUzq
                      FL2KxBa988yovWHfnT2wSEa8ih1JPSzTrzwEg9c8WCxnvFIAHT2Nsau9smdDPZRfozx0wwe9KD0A
                      vO15H73vwpg9ZmkWvYvgxD0lxbg9gGAFvXEzgz1DNzu9lTOoPYBHLTyIar69GHuMvRBMCb3f6aA9
                      UF1TPJ2tSr1pRYA9okFwPZ33rb17Qo09EL5CPABbf72PE5Q9TQbFPbPUZL26AC49ZGjUPIDhNrqD
                      3WW9qC16PFrnoL0mWnQ9Xag5vQC8s7sJnpU9pxlLvfqrJD3f58s9ACDJvbgvpbyEWoq9khgxPWBx
                      0ztgUPW70zpRvawckbwwT8S7PV/Mvbg5kzxAnxQ8gOGtuxVegr3Aayu9nOaEvfxL3jwTEkO9bSCk
                      PXsBvr3I9KS98iMBPYA+jLxkse48APrsua5rPz05PpQ9SAKdPNgQJ7wX4789o24gvV3gdr0BnYs9
                      kdCAPcUBsr0RV5Y98oKAvZh3q73k8es82ECvvCcvar0bGJU9mECUvbAkOzyNPY+9gIUAOlJtED0U
                      PIO8VQidPb+Tqj3gaDq9IS6VPYDn/LwMW4c8ODmMvYcsoj1QF8u706i5vV2ppj00GPM8gCOiu1Av
                      H70jtaA9EFoRvQCw0LqgIcI7w2atPQ5wUz0ohmy8gD6ouhkcqz0H27c9FQCwvVTMnbwwVH68peqb
                      PZaUBT0NZI29YFS3vW2+bb0bxIc9cAMGvQB9krn0jIe96GU/PHTIvLx0ePM8ih9zvbCyGjy5CqM9
                      sHO7vSDz17sGApO9w568PXkuyj2dB74948auPaRB5DxIaZa9GvqtvQAVQryj/2C9VRfKPYDjY7xg
                      SPE7OnQWvdQ2xbwXxni9q6OAPUy3jDyWDXA96m0VPZMZYL0Jspo9ycOXPWDzuTvglMO8aJsUvPBy
                      Fb2pBqg9h77GPbc1cL3fOoI9jOjzvHS0/7wLkaG9MniCvcPtoz1bAbM9s95fvXaYC70W6qW9F8Wh
                      ParlMj2ofbm9EPd5vbpKQz0cSdI81jOCvaPSlb2/s7C9Ol4ePf1ZNr3QPve7MPlRPLDsaryQ47u9
                      I3BcvXpSej0AlNg6/rNiPZBnHTy3x6I9HRQfvdgwub2DoRm9AGiWOVLmmL0NRzu9gH4jutISED0w
                      EXa8qIljvMAKA7x/B6g9hSSsvfAFCr3Q5pE7+AzWvJgH47xKyAA9vbYnvSn+jD3YWRw8YzuqvVuy
                      yj16uJa9t3xWvXIoxb3/7cc9gK5VvJj8EbyYH368lVycPS6nkr2GV1k9ioGUvSNMdL2vmbg9kudG
                      PS1utr3/nLO9D+PAvbLwUz1wNGi8L4qxvRl4kD34VaE8jBOgPEC1hzqg8KK92aezPVgByTyyaxc9
                      9P/0vADNgTnxiYQ9spQDPdc8Ir1pt5k95ogWPZr/SD2hNIM90qUCPTM+yD1HXZg9GCzDPJA1Qr2J
                      DpI9Pm+NvV7gLj2wcre9cvt3PRga1bzkzQO9wGNmPDIUDj2KdWW9YaugPYdzrr1aUCw9ujdYvbAw
                      ETywW3i8DUhTvf3Glz1nnIo9OuRHvX1Gbb0FkZo9WsgWvfDmAL2QGA88cj1GPUcWx71AGBQ7Bk9I
                      PQ3vxT35Epw9dp4vPYj167zADgK8tBiDvHJBDj0MKhK972CqPQAferqxYrU9NZ6RPWTi3jyEdfw8
                      SCi9vJ2GsD1Sj4C9U7SoPfrDgr0mgjg9xD/7PPTtrrwECek8cAGgvapHK73Of1A9UlkMPdqEtL07
                      raw90D2Cu/62HD2S9FU9KB/yvC6Flb2pRK49Sq1evee2Ir1kJfU8osJKPaCid7uqajQ91HUNvW0x
                      wr2NBm29WBc2vLTbBb2gyMC8MBviO3p0mb1Fw5i9mEJzPFCuubuAYpy8btJiPT4MCT0E8+E8B6F2
                      vYAuPr2YsEA8LTa6PRRSxzze0l89qE8JPA4xnr3IUY+8GJEjvFQjpbzYG5W80tUkPWicGbz262E9
                      gMWBPKM0u703Cji98kJuPUCZP7uAk6q9RHcUvSNeYr2aggk9AoADPa/JtD3IBJw8iVfHPQCz8bmf
                      a8u9QOorOx1YnL2AP5C9oM1/u/qOED1e1TU9LL7zvBAhDjwAdT+74OXxO6dKY71TgjG9iBm6vTp6
                      Db0tmXm96tpUvVxy0zzOBw49oP+bvA+0tj0Y0a68SFSvvDfBUb1w+G29UqE3PYYyEL31c7893wSb
                      PfF5kj0CCgw9p0eoPUCpALtnZKE9aCBRvAJMmr1yxKO9lErevED/pr3zs1C9/Zg/veQ40zzAerW8
                      wcyoPepZTr3YB4W9ox64vYAvsLsHAFi9AsM8PYZYCz2gNbc7YUyhPRgDvrzpYKw94UOePQQBDb0i
                      VGs9Uu0HPSMjpL2hx7o9gG6KuqlBuz1qqIO9Cd6dPRHpxD3Sjpa9TMqXPMeqlT23Q1i9VdmPPRvQ
                      jL3/QLw9xdmZPdvKlb3oULa86HdrPA/9vL0YXZW9KFK5PL0yjz0Lo8S9affAPZ0dgT1AVSG8gD2S
                      vVWCpz0ZTJU9qjS6vbDlEDzu6UM9HXPIvQqLn71g/ze94KmGvCCbMb3ETtU8Kc2sPZQw1zwQI0E8
                      LGqFvNhmz7yXTF29EqloPbAVCjwZ/qM9BHzxPC15Vb1SrXk9GOLovP5Di72BRYI9kb3LPY/pwb2i
                      3g89gb23PSohdb3NzCS9OvMtPaNDW71pr5494OiovPUeg72Qd6u9UDdxvSBA8DvMhZ08TAq+PChj
                      irz4AZi9kpMLPWCvgrtwV5q9iyOxvTDWYb1sCcq8F5tZvZIjob25Yq89z1SiPYnBvD227Rw9vfim
                      vbMeP7377sQ98khWPdNhnz3CUS49e8rHva2Svj0wSCm8dAfIvOGFwz3wrEm82kW2vddtRb0o1Z68
                      vGf/PFigx72bMqs9i0nKvSgzNjzQvpK7sAlRvD6eYj2D7Gi9gtpRPXufur2JMLA9lRCJPVipWbxC
                      nGM9pzSPPQrJtL3z14I97qJNPdl2gD0qgUi9QNAWvd4dnL2ACTy91C2DPAPKmj1ASO68wJ/KPBCW
                      Cjx6/GI9IsJtPWASyDxAdZq6o3ZxvS7UXz3ApIg8QAGSPGCe6Luu2gw9lmYzPYgakzy+MnQ9wAv+
                      vLDhBbwKl0a95maQvePzOL3Lxos95uMiPVjkzbzYUT88M0e7Pf/Our0ddsu9e/e4vZqHyr0wize8
                      glhqPYOpZb14yra824i+PbcKtz3wdCG9oFCLvP6fQj3gmMW8s4yyvTckN73s7Oi8hMrpPEgwwbwY
                      oBK8gPrguoCGIzq4ite8w6RfvbHqnj3d3JS9Po4APbWevj0sPaA8SB+rPExQCL0Upo08UOM0PB+g
                      qD3Vy5g9AYqqPaK9VT2Y4Lo8aJ1LPJglT7zM4fw83TvEPWC7lL0ASQc8sQvIPUi+pryxQpM9rYST
                      vYCgbDx3bZc9WWaJPSRQ9jxmdVQ9ifuTPYA7TTyuXxw9KVCsPSfVT71ndcE9AYGzPVh0hLxGs5q9
                      nT4hvWe2UL0QB1W9JkxYPd3sx70Sl7C9uQPFPeZbAz0j4n69/UjGPeixSLxC3xM9kEVCPEzJh7wa
                      Tz29yFzwvMxN9DwhzZk9dCSqvG1LPL3M3OS8YrIFPWZen73w4jg8gCHbOxISr7317q49/QrDPXOo
                      fL1A1jU8rCqPvI/AgD0M8Im8gwtevX82hz2A5008ugtePYxE4Lw6vwo9LghUPbNxoz2iBJC9RTnH
                      vQCTA7vv/LM9aZqHPZ0ouj0AwTS8csVQPf0Dgj0aocq96KypvZa5fj136ZA9EINyvTlUqz0iKY+9
                      Bm8DvZBhxL1gukw7HFrzPI8atj2XiGu9BtZdPZBXQ71UOpO8VHejPP4/mr3AEZY8nXiuPfqZcz36
                      DHQ960GBPQ3UgT3w90O89YG3PaBsBrsacL69p7GAPVIDWD22YAG9zAbTPLX5o701N789lq0fPaDK
                      ML0AkJG78ty9vXiQ6bxAbv+8KEewvYAAuzxYrB284mdPPbC4wb0Z8J09la2MvXf0vb16r349vZG0
                      vSzCmzxhzbI9HwOiPQCkpLx/b449t9qtvWZ4GL1HRkq95fzEvdgzGzxTjKW9Q3WhPX0tOr0AgrI8
                      O3XKPaAikLwR7Zw9/Y5FvWMHsb1ctAq9lXOOPez/B73FM8I97nINPdqyXj1gtzk78m+ovczJ+LwA
                      msW82ucHvawB7TyQRV28cwK8PcUIwz0AGAe4iiiQvWDiJLtb1by9shlnPbY4Tj3zMam9LyGuPfRl
                      hbxNho89ogqivTNsur0WRwy910wjvae0T71Zy4s9itNTvXLYAj2Vv5C9oGoSu2sYmz1CYJO9QLvC
                      vbDbVb0uiUg9nl2ovYolQ70wgSc8AxcyvdL8Hz11mK+9nm8+PUNqYr30SfC8OZKUPeazD70JkJ49
                      YHGEvJiQwLxo59O88KBTvSEWpT2PdbO9eGSdvb0phT20kbs8GaKAPeSu9TwPxsS9na+1Pcr3gL0Z
                      Nok9qlYjPcKeGD1v0Y89RhYFPRpeOL3NLSu9bROmva99xr0BMI89MxzFPSbdj73/Z6+90xkqveh1
                      czwVnoY9ffSePfiu/LxMCcK8iKWmvUXblr2gcn8719ZqvU+Zyz1sWuW8XrEYPSIng71G5hC97Cjc
                      PMP1oT3wgHw84RiEPQCSkjotdmm9ANJAu5GktT1QRUW9aPiEvBKksL16eQu9jQaPveJnHj1tUzG9
                      DDPUvJfRyj1mkw29OndOvRNdtT0Is6C8ymwRPajqwTxhAoI9ivupvZrMOD1z+6e9WEOdvQBC/Lt0
                      RoU8CnU1vQAXQ7vJBrs97yXEPQBMAjzEFRC9jadkvQzM3bzwaWm9KUu6PcfgnD0LuY69UAr1u/SZ
                      /rzi2z492bvMPbPyoz0nTHy9/fEwvbesM70AVoQ8QpVtPd7xWT3ad8O9rCHqvGA8s7w4fPC83nlf
                      PfVirT3Apom9caKYPRICbz2tPpE9MKDlO3q0r73tS2S91891vYuVoL1Yfx08QBdQPPgqv7zChVY9
                      Iay9PeB5T710hdA8/Xi9vRb1C72YGQS84fayPbivlzxXYlq9cb65PcCESDzsWv28iAP0vAdMkD2s
                      o5+8AOoVOWPLaL26rSk9SvgfPWV3tj2NTYu9sJwIvYPVvz0APfG5hrODvQAtqrvaw2O9gPQnvKD6
                      1Du0sMM8wdWEPbBn5LtmW2s92uA5vXXdwT3hkqY9oHM0vUM1y70M++G88CuLvXNMqD0oQpS8w+E0
                      vbyG/Txh5aw9Gp1CvcsXjb0iqG09TrOKvRhMwLxd7b89TQJ9vfQs+7xKjlW9eBnGvAEWpj2sU5g8
                      SiMbvWfgS70AHVm93fxAve6PZT3wiyu9LAyCPO7kgb37f509wPaEPOjRwzw4GZS94P7jvPDjMLzK
                      MIm9oDMTuwBpAbqlqbW9cbKePbEwkz3D+rc9ByxpvU5Nkb1ifV89mBanvQuchT1RNqM9mockvUAF
                      HLw7f6k91q8Ivf2PKr1d0zK9w/qsvbWuhT1dUq89adDFPSWOyD1ZCKg9cEWYvezntTwb/qC9olMQ
                      PVUSmz2AGmW6ydC7PV+kjj2Ql2c8ChppvZsjxD0gr6A7osUTPcvTyb20y9q8yfK0Pd3Zvb0155c9
                      931bvXcbuz2y3Cs9vWOivdA1ALwInuq8Uf+QPdOPt73QNqO9aMu1vGMnM73iS669HvmAvXtbtr1A
                      vwC9alIgPSB0yrua8Qc9WL+DPHFNyD3L1qI91HK6PLHhuj2DPYA9PsdbPWhZljxUU/y88g1ePZSQ
                      kbwamXM9QeyHPVTdkbw4Zr682jhWPVCvADzU+oi9SEqnvFAoBTzzzrm9lc6wvfMot71SIzU9wyeu
                      vfVagz2gX+U7KjI7Pfjs2LxXxa+9gaWLPQ3yiT0ttkO9uOe4vTtrtT3AUQq7gl3DvYBCSjr0vbC8
                      jTnAvSw3Gb0AwPe4KilwPS0FNL2o/eG8YR+8PSgMljwgfPm8z2GKPS20uz2QuCy9OJPDPJTL7LyT
                      dkO9Gnq/vQoSQ70vYr49l2tzvSPmqr3ZDpI9mlM4vY5pmb1F8Z49vRKUPdQyvzxGHAq9M/+bPeNc
                      Yr1ndjm9EPVsvfNJJr3i1bi93qqAvWw02rwdXqu9IhVxPejF57wTxVG9qU+NPaSaGL3VH4g9MB7j
                      Oy3BQ71KJzw9qvFjva08jz3IXue8pfeOvWCOgjtZJYA9GprDvbOYtj0A43S6qQKKPWyF8ryB0YI9
                      tNrsvAu2iT3wn248
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDQwMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMDIxMDQwMHEBYS5kAAAAAAAAAAD0Fr0Khba9gpoVPRjByb1UJs08/e+tvbTD8bzLfZq9
                      QJv1uo7ucT3C/kI9kD8aPEgTrjzaOnM9hiaAvQxY1TxKVGC9KOl7PBhz5rw4iZm82JWlvLAnE71k
                      F+A83cfJvcCM6bz4Crw8EuR7PXDjAr1Nr8s9GeCSPeq8XD1aLyk9ats/PZiI5bxqwik9DlkAPeza
                      pTw4/qm8cspzPaABCzvy8U09O7iNvQzU0zwRD5w9qfGbPYDPHTyixAQ9dJ+ePNMmMr0wy4k72LbY
                      vBbPDb3SwY29TaDKvc+NzD2TPaA9cJE/vYCmyjw1UL09wIG4PEnisT06AVw9UUnJPaC/tjuoxZG8
                      NvoPvY4mmr0v/sa9bCOjvEDNubqwRNS7CgvCvbZQST0sto88WDcgvEbhp711Hoo9gBmrvIDxCzrD
                      BqM9KFpsvIh9tryaklQ9uQ22PRSmhzylfsK9aBUcvDYuBL3xPYA9hWO4vZga0Lxsvvc8EARgPO2w
                      k73qFEi9rPMJvc9dsr1i3Ii9CoIKvfGxqz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDMyMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMDIxMDMyMHEBYS5kAAAAAAAAABP+v72CM569FHndPHOOxL03tz29YIH6OwCevjoVA689
                      AB4cvdh2g7yAodG6za5+vX5tqL3M6u48qCxtvCdhPL0EUIG98K0fvNAGzztOOZG9J1fJvXTk+zzn
                      doQ9r7C7PcNCx734UP68RZazvbi1hbwwuCe82Ji8vVV3lL2gR9e7Xy+gPafqkT3KKcm9bMmOPLo3
                      Eb3wD469X2zMvSp1Ib0jbJM98LFDvPi95bxohzS8FmSrvYnJlT3x47k9IjJ8PcPsoT1Hl8m9NQaK
                      PbFbtz04Hum88ai0PRDPcr2gPvW8YECpuxc3V73dzZm9CixWvS7yFj3QY7a7NTmIvUK+Jj3sIaq8
                      ADBJvVCtnr1scbG8w+q8vRAWN7zUZKi888m7vdnEgT2z2qA9x6yJPQDw6LmAwqs7fcxlvRB5Pzzt
                      M5C96CI7PMA++rp95ZU9QI63vdeKtb1m5HU9rTCivTrQhL1QLZI7amiovZqVsr39dMw9xdStvaMS
                      a72AKXm9+ZrIPbHglj1hGq896pJIvaYUgb0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMDIxMDI0MHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMDIxMDI0MHEBYS4BAAAAAAAAADJ8KD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        TXd6PGFbuTwoKWU8KCllPL9rzjyP7rs8a/uOPGv7jjz/YVk8mn/xO9FedzzRXnc8/2FZPJp/8TvR
        Xnc80V53PExPHDyvBmA8pIoqPKSKKjyOJY88XUOcPDL4iDwy+Ig8DF8MPGJ6qzsIFxo8CBcaPAxf
        DDxieqs7CBcaPAgXGjyNFYI8VrE8PIjtXzyI7V885y3hPG5DgzwX4KA8F+CgPME3MzyWrpM7sNb5
        O7DW+TvBNzM8lq6TO7DW+Tuw1vk7jRWCPFaxPDyI7V88iO1fPOct4TxuQ4M8F+CgPBfgoDzBNzM8
        lq6TO7DW+Tuw1vk7wTczPJaukzuw1vk7sNb5O+NH8zpCXqQ6DPMEOwzzBDtymJM6ux2iOsYU1TrG
        FNU6GCcMO4dQfDtFU/Y6RVP2OhgnDDuHUHw7RVP2OkVT9jq06UI7If8HO7SlMju0pTI7DNbUOpb4
        wjpQb946UG/eOloLWTvxq7E7hbhFO4W4RTtaC1k78auxO4W4RTuFuEU7UDXqOmN2ITtoDgg7aA4I
        O9VMhzquGug6nmG9Op5hvTqp/yk7y0zOO0rkcztK5HM7qf8pO8tMzjtK5HM7SuRzO1A16jpjdiE7
        aA4IO2gOCDvVTIc6rhroOp5hvTqeYb06qf8pO8tMzjtK5HM7SuRzO6n/KTvLTM47SuRzO0rkczs=
