N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU1OTc5MnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc1NTk3OTJxAWEuhAMAAAAAAACir4G++BEbPsYnSb7KfFI+XrYjPmZEn74UgIW9kDi/
                      PNrVcT4kDJm+mm52PtYnvb1GkxG+AGCWu9xTm70AOnY8AfOfPvQRpb2jORG+9HeYvhIpXj5AI++9
                      Ox10vo8/hb6cqJI9LJ6APcgKEj2QMKE8ZtgDPieQgr7Xi6m+qVuePgCrmjpLfna+I/ObvvCykjwG
                      ekY+FTucPg6VGD7WwwI+wEiJvAh+OL7a/xk+WzFKvuuHJ76M6669AI3qOqCEOL0LsW2+viF2vpCM
                      ubzKp4C+ua2DPkDlv70UJIC91uJgvtDumz0SrS0+8FkHvgEqgT7goM09ylVtPqcEkD6eKJi+KBNF
                      PbbgDj6GsTY+pNqyPaKYfj7IxWi9wEJqPfibPz28+989IKI7PEB9Lj1AeOi9OAwGvSb7X74ANaa8
                      HNi1PXbKGD5Kbiw+qC49vmoThr4AEfe6cLKRvoBIbzwAIK8764lNvo0OiD4WvYO+JkMLPrmxhj5m
                      PzM+sDyWPJQpnr0A2L+81F+APZBik7wgFJu9kAKOPM7kDz5s5cy9GJR5vSZLED5mHWQ+Vja5vV2L
                      oT7ADP67UNSKPGxmm73HD5y+5t3CvZ59jb5tKqc+qaOdPlhKCL2JhoA+208fvsWgmD6wcuE8OG4l
                      vpBaHb7DZnG+47Wmvj5/bj604Os98J1jvvJChb5RvJo+BEf7PVbIrL3HeZy+CtxBPoaJer7vqpG+
                      a8Ifvlzlnz3xS40+OARaPYCX6T2AwbG82tVSPmVPlj70KaW+GBoFvbyt8r0LlVO+VjZkvunJpD7g
                      ANS90E4yvmDmjb4i6EQ+Q+iEvn72CD6QrO692+WGvsiPCr0Az0e+3NOgviOvNb6guoK9Qk5kPgAg
                      zb0srck9BFeAPSPxZr5EnIi9RFmJvrjcg74VeKY+ENrnvdBG4T0mE9C9RcKjPmC9E77mm0E+oMnp
                      PVBjpz0MZJS+mW2VPkYIdL5unTQ+YqxoPsiZLz1UZ+g9QhJ6PkxLnr1wPJW9XMX8vVOtFr475p4+
                      xmU5PjoiMz6iqZC+4mkwPgJlfj5YyHs9k9hzvrLlbT67VDy+AKuBO3kChD54wlK+B8SEvvXgiD4A
                      zK27Bm9cvp7UGz5EFae9spNAPnAh8DzCAZ6+8AYlPjDbpD0o5aK+sBHGvTLGjr50sae+jS6PPni1
                      Hj6gBhE8nzyCvmDsLb2MCtC9RuVpvtD0urxvx5K+QMgJvfv6dr7ecBS+iphtPnBMqrwiW24+gPSZ
                      vUAIDD7WpU6+yHNUPeN3hD7WJ+S9bcWbPkDKnLtZGIA+IjYAPiDSBT5Gfdm9A/1/vuCSRjxS1lc+
                      kBS4vJTdg70XjIq+8YioPvoyo77gfVM9/AXZPYgpIj2mIjs+OhhEPhQ8lD2T6UW+5L2RvgguV74U
                      6+o9YCECPfoGMD6bEmO+ptozPgYF6r0AgvW9fB2RvVp3fD5qOlE+SPAivqnolj4AYFq+kk+bvvD/
                      rj0Rf6o+JpuoviCriT18rdy9s9qFvuC4lr4Z9Zo+k3CiPjBA+jxYOE49y3GoPt+wgr7g3mO+6z5c
                      vkyupb3pK6M+qlg2PiCuJbwiWzk+uJMovXjAlb5eriQ+vBSQPQY5+r1Vs6I+CD0PvopjTj7iFGY+
                      YHAJvLsYX75AQPq9vaaMPojePL2au2A+Uo+QvijPhL73ZIQ+UNbbvQdrhj707Je9glVoPr0YqD7v
                      tqk+ICg8vWijDr7ycY2+4N53PW0OgD60VYQ95sYnvubGcr4uCFC+Gnqjvr5wUD7smoa+T6aSvuUv
                      pD6ak0E+UHbXPFkukT5QtdQ8YKsHPkAb7bstBqo+7I2nvdJUWz5kL4C+ONU5vjAW7D12yyC+mGdx
                      PZChxDz3uom+JjgLPveGmj6blV++Cup3PjAl8rw+9FG+Yh56PpGpkT7D44e+Yj6NvgC+5LvafHw+
                      sx6qPsiWbL4An5o8mgR1PgtHVb4ggzK9+P4jPvB5Gb5mkGm+I8VKvrQQqz3i00E+r5WEPvOocL5Y
                      lBk+M4AGvh9Dqb4Uu7M9/p+TvuqqqL5QTuO8Nj5OPpBKAT6cXf+9VMagPZmIjD6Egai9oD1Kvl7Q
                      MD4caeo9Oi1GPpL4Kj6AwUy9QHsLvqvoU776zHM+wlRCPtKhTz5sgJW+MxCqviH8hj4QzZ2+c7Bw
                      vqyo4r0IEhK+9sL/vRtVQb6O/Aw+kJYSPrmwmT5jmSa+ANYOPfSzoz0iE3k+cPnnvHrDGT5oPJS+
                      JvFVvrjkNL0sZuC9kBfTPZhzdb2KRqW+VuZvPtpZZD7xqYE+sFyhPSELqT5gGxQ+lKOCvliMFL0q
                      BkA+RFiXPdZ1ST7CCFg+QAG/vTZrqL7eEQk++EMZvV7SlL7w2UO+wpc2PneIkz5Mtaa9UKUYPsDv
                      Gr62LqS+hjgCPozBxz2q9oy+AFYeupj2Kz3uiRc+mJUavYeKlb7okFQ9/nIjvoANkLyIuDy9AIak
                      PPDB2DxAjuQ95gKTvriVeb5ATqQ8oEt0vJ4udL70DZW+RpprvsVDiz7U5K09Y+Cpvt53dj6eGom+
                      Hh8uPmZGy72cS5C+qmExPnyP1D22unQ+2LUaPvCFpD1iHYC+bKvWPdcNkD6umFS+xs8VPgq+Xz60
                      JNc9CBppvrTB+D0gamS9UMEGPpLDVz4+vRk+wOyrPE5PmL6Ml6s9YbiYPiGHpj4vAag+gpkVPtxZ
                      7z1iIjk+44OEPvhQU77GfR6+4KMUvZDP7r16/H4+AEKuO5Yikb5m/7W9fmZbvoCQqL7suIK9O8qN
                      PvSzlT0yWU4+crxfPj3YiT73EJK+SNZxvms1Pr7+eEm+oMxvvmuBYL4YcIm+YFrZPf4PNT4oKhO+
                      8GqWvtDFn71bN5u+QGf/vEptnr5r8os+g81avjaqCT6mwmI+ll8Dvn+soj6+9AC+oNo+vbyHjr6+
                      ch4+Xt+QvvYgSb6gHXq9vMDsPfDI7D0Q+pm8gCJ1vuBgxb3y5qW+oymnvu4mo76gPak91FDHPXSl
                      4z0IYA0+DolNPgrEaj5yLIG+u6EEvugJjr4KD5u+jN3evUbm4L2owxC+LeaBPjYvHb42PyS+e050
                      vjYCG77Wwpq+NsyzvZCBoj04VqC+4DRVvQC5nruA13M8ypcUPoDpDD2U3Yg94B8vvfieIj2AfD++
                      8K6LvWgfcr0T0iC+OvNXPsDNoTwJ/Y4+iMYjPSt4GL4+93U+T4SLviTsnj12Gdm94F4ivgAsXbx+
                      Ghk+SFYRPgJgWj6AFBQ8WB9BPTa73b28GqC9UamVPoKHID6+BxA+bMD4vQ9ekr5LKBu+J0mkviDx
                      Ib7gaQ88sB+JvvVdhT4Kzyw+2I0Jvayu+L22V32+ALajPZ6dBT4iFmM+O7x3vsD1ar0DM0K+cGyS
                      PUJlYz4kq5890odLPtiWW70cxre9hMvgPd0pqT4raqg+rInPPRAyur1Aznc9JfKSPkibTz2IY5S+
                      IPb3PedAjj4ANBk7MMDlvYjfCL4x4ZE+cKh6vkDGgbtAB6490K2vvBF+nj6I1Hu9Foruvbhfjb7w
                      u3i+ZMqAvuRfrj1urJS+lJeOvnuXQ76mBwq+46uDPtK9Fz5ynUs+NXaHPlAkNL5ulYK+iEZAvrRS
                      wD0yzy0+AOmnu6Qdwj2wxMq8eZedPmhTPz12B6q+Ywpsvox6o75eASA+oN7pPVAC97wAAyo9voJw
                      vgGTgT5AdrI7muOZvoTjpr00h7I9wBXNO2REnj1H8YY+wPm9u3D5xr3RaZY+XkMdvgAmZTvTZki+
                      S9pIvuZLKT6FAIU+HPj5PYr+Ij6y64e+WpKCvqCsJ7zcYIs9I8sjvk6UXr7XXoc++g5mPnieSz0o
                      iVA9HeCLPkNDor7Q0Ki+18mNvv3Agz4mOV2+n1+TvghPpL6I4wc+YAsFvV04hT52DMu9K1N4vg7w
                      Bb48tMY9ACxfu5D5wjxQFZS8012VPoGkqT4mZA6++KY1PckOlj7gFwC81txaPriZkb6gKB08MRyW
                      Pjv6N778AYG9lg8BvmPfG74TXJm+w9ekPhCcXb4Y4Ve9/nZ1Phb6ED4766C+sux0PlgVE74h6aM+
                      4G9+vdgBVr1Qzfe9OL06PfJAVz6nYIo+F8CbvjrTcz7sFOs9MN7MPaazXz4g0nm8tHjYPdQ/mz2i
                      Xhc+kGW6PCaAYz4UHoS98FNLvi6MfD6U+om98qRbPsDF/bzhhYQ+9bmMPpr1Nj4MOJO+0HoVPoMO
                      iD7isiY+oBgNveL1Gz5KeDs+4LYAvCMroT5gm5m9DK+GvlBYIT48GOI9oAKmvp6nhb64jDQ9TpVt
                      vjcooj5TF3a+APqevmACOr46pUo+WriZvvgcGL2AT3G8wEviPFGfqD66xjI+aLCKvlAXtL3A4Kg8
                      IhpKPthnHj7x6J4+HMTevfZE/b2ij1Q+KnRyPj6bLb7T8i6+KIQQPVaKNb4mez4+IJjYPS5EXD7S
                      GTw+wP1/vWA5hz1ADaK7922XPhDgN74KgXw+vIvbvQDd5Ts3tYA+zogPPrtpWr5BVpw+E5IPvoca
                      pL7itJ2+/HylvvqdTz4+8Ak+ymajvsSGib1IQYu+xCCwPVCP17yiYh0+7i8nPqB+7T3vT6C+daaU
                      Pt70lL6jHJS+ZL7cPcA9nLu6xHA+zlYbPrC/mDxhUo0+pnhtvqOeU77M0I69yMF7vjyIsj22tAI+
                      YfiZPqvtjj60v6K+UN3XvbLIRz7yqH8+bUiQPsDTGD78XLm9T6SFvnYWUj4M3rm9cncpPuQa3D17
                      +D6+sEuYva4GMb4qKo6+Rw2JvjzPg714khK+AA7KPaAs+T0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU1OTk1MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzU1OTk1MnEBYS5kAAAAAAAAACbTez4exQy+jl0APm6XUL5Yojq90NvmvdUSkT7mvVc+
                      MMjivW8Ul76AliO8Y8CePu56Lr4zRKk+BaGYPkBwnL0QiYg9AGGRvNoECD7J358+ACzfvDWVnD62
                      cC8+N2SbPnT7hb3wzuq8261VvtIkED6DyBa+IPOTPYCH7r0OhhI+JLjqPagcEz7sZsE9wLKDvZsr
                      iD5ArtU8GmJaPhOJe74HZoG+lj2+vYAZezwodmY9JoFMvh46Or7NU40+X2eAPhyY5T0tXYg+IntG
                      PtAQvb2UYK49Qf6HPsjQPb7sYtu9AKTiPJNiAb4R5o0+NnTUvXRvzz3inpi+4IkwPMAeyjuoiXW+
                      JDeivWBmMr3JY58+Cn6mvou0R74fKZ4+/An3vewqg715G4o+cO6qPcA4I760wJa9NA6cvYK7Tj5P
                      wqa+gDXxPR6CIr6QGK49Uv52PshzHT2gpkk8ANvzPC6zK74DAII+5K6WPXzssL0m4tS9Jzihvrps
                      Ij5LnHe+T7CiPn64AL40SpC9MPlhvsBhijw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU1OTg3MnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc1NTk4NzJxAWEuECcAAAAAAAA6yiu9KqRLvdCJN73cCc88mmwWvbr8Wz1gVY28aPOb
                      vGqYn71lpbs9vrEbPbD/AL2KZ5i9OIepPDXHnD04KOe8TQtqvXrsJT3PF6I9e6eFPei0ETxsBJI8
                      2rcTvQy3kbzt26C9pb/DPZ2MHb3H3oI9MIF8vJKDir11+sW9VlRWPWgJvbyyEoO9YGrXu7eewL1a
                      gHG9pGDWPDD4HTylAo69gE08vbLEWT0uDRw9AqRGPQ14Wr2wzAm9gjTGvdDda7zgsZI8gDh1vJGJ
                      jT27NqE9LKG0PD+igT1DjV29KLdnvMkHmj0t1Vq9BFTkPLAHITzY3FS8Yus9PSSdzTyUKqg8/f2Q
                      PXGfuT0t6MU99EObPNCoiL0wDWW90s8uPSrSKb0u7Q89jIyFvPB7KbzyXD891tUnPRHzjj3lIbk9
                      LpU7PZrfcD293TG9bVaJvUSqib0g5tW8LVl6vYG+pz398Z4976KwvVrvQL3ihGQ9FB2EPKC6vTtp
                      Wsg9D+uHPdEuyD0rObE9ujtrva0ntj2zyr89UfWQPTdlT71T/qg9qjcOvU3dI73A3B68oGE/O61c
                      lj2WVXI9f+ysPfXduj3ynIG9LKvsPNC5EbztnqI9svsJPah8oLw12bY9YEHOvKgqNLxTd6+9iot5
                      PTqbqL0zKsE9qG74vIjgwrx0s488wFiaOhprS72NlcC9bfO1PdCKXbxEq/08aMOZPPrOV71Z+LQ9
                      QA0pvFOoHr1wgmS8ABAluLZILj3FhYQ955upPfpSdL0wLq474TCnPajxkLwoUFo8RkajvWMojD0w
                      ILO90KRHvETEDr3PJ4Y9APzYOlclXr2gK6482MvHPHZIGb2yCiQ9sINnvFhRWzxzR3q9mfeZPW0b
                      mr3wvrm9budBPQKVXz04gJu9NxsyvXXytD33Osc9Uz9FveUMr719cDK9KLZTvMCPazyZoL49anl1
                      Pexrkjxgh4C7YK4EvZC9XTyqgVE9AFgpOoDo3Tufy7m9igZvvQ02nL2Zi8g94qouPTKBLz1MJYa9
                      w3KevW8nxb06JWQ90k5UPZSf/7x5SpM976jKPbZNj70j0Iy9WO2fPDiOubxW/gM9V857vbjRjb1z
                      iiC9pduLvQLYaT1YOFy8d5tNvc0+d724Wf68sJ4kvFtlwr0orpW9u+6QPXfPZr0eh1Q97Tc4veSa
                      6DwWWwO94u4tPdq+Ir1/x7I9so5wPZHkoD2kS9k84HxmvQCwNDu+qCE9jd6XPeiXlzzaTY69J5+2
                      vQAS8jlQBx88KeGrPaUPnL1gOYk7WQ6wPVIGBj1DyZO9WoygvRwh8jzQG9y7cvwqPYucyL0XYy69
                      ceqfPQ3Xd72ggD67poUyPeqUX73AHsa6VXKrPTC9r71Qnu87zXXEvXHGqj0zyaS9ACryOoe9Wr2q
                      8W29i1XGvYzy8ryEONk8qvlzPQCkBbkwiUw8tKQEvYDQuzyQNbm9K9KwPehHErxv+Mi9/9mJPTIn
                      hL2xm8g9ukSpvQDA8rraVl69zJWjvFfQv73MnMe8aySFPdi6rzzMcPo8Ez+MPTRLgL2zF1G9UcGc
                      PU5Uez2iV2w9V9OUPVe/nj1nSbm9F/KvPRNgVb0yN3Y9gZazPaCxrLxnFbK9SUyyPfmbiT1yeEQ9
                      qC3GvGwyqDzGp389qvc9vaiuk72yVYy90XK+PTJoXz0AFoy79lldPdBIyTsd/7I9wJZMO6gQHDyg
                      ip08DSS4vRkZjz2Kakw9ZN6CvQJYcj0wlL29mMKaPHE/uT2C/Ka9l6qePQJ1Zz1VM5u9U+aZPed3
                      y71UuJc8keidPR3SnD3m2AE98IlMPLPWyr1An0o8+P2QPMu4tz1tqGW9H26QPVeTqD0Cjhk90AiG
                      vdjT4bwAhr47rMaovFotej1YrKk8tLWOvLhdxL1KpQK9i8SJPfZdQz3zmME9ey7IPdBysbsdEsw9
                      SHSivLR2Dr06l3g9YQyUPXt6mr2gCws7auspvVEQoj1AQTC7sT+XPa2qQ72FH74943OAPUnSuj30
                      fNy8WaaPPVD7MTyS/349aoWjvViQF7wD92y9gAibuyhnrTzA5nM73e6HvcA1FLtgO/i8My1EvXIA
                      nr2yui49YG9KvdKYZz1gMEG7ObHEPWIbPD0xBcc9ExGYvRLvLT3re6M97JPvPF4yHT3WjQi9ppKa
                      vTi5nbwAuMo4OrRbPQYvpL0NMLI969e8Pe03rz0K5UQ9jH2EvV7Vbz3NWmW9fX6HPZjipjw/Lbo9
                      dwGsPbC5M7xe/zI9AJ+pPBjGibxtOCu919xIvSCK7bsCCbG9oXaVPdUZiD1YO5m8L5KwvWyp+Dyz
                      q8i9kD08vCBT5btj5m69cSOcPRKrAz0WNwM9AhB9PfTKnzxYfNq8BCQOvWjvLTxwjFY8tnkqPdTt
                      8jz9FY09ylJDPf4aZj0Aj9Y7XpJTPRSCCr0ul2Y907mzvcIPMz3Scx09obWWPYAdL70EF/w8/bZK
                      vXXbh70T9pQ9Nz+DPSkUiT0tikq9p/eVPaLoVj2zlSy9xBHnPMDykDpow0I8l259vUjokbyQ88C9
                      ECoBvaqiTb122kU9sNCFvVpPJr1YyKa98PSLvXnxmD2Ywv685HbQPIxusLyqKly9I0RvvWUspb3T
                      /Du94Ha7vJs3nj0KvL69I4TLvTU4jL3Q5iS9kQ6APag8QbxDIMQ9MBAsvfo5Qj1iQjE9sO1/vFh/
                      4rwwGJe9rsAGPed1Mb1ECQW9MLFqvWIsk71Xx7K9LosrPew4Dr1AZNC8AGybO8BPPDwAdwi6sIqV
                      u6ixur1zSbS9ADayOW6Lbj3CIy49AMczvGgwajzLa4Q9MH9nPDiolDwA0mS9TfOZvaMzwz0AzOe6
                      Df27vTRS+Tzgg6q8JYHGvTsVuj2+yIK9uI2FvMW5uj2UtJG8BmFJPRg2g739e0K9uZeuPWN2q71K
                      VjQ9RWeMPX2AKb0AUMu81wKuPUD2O70P3po91yG2PVZfez2xc6w96B23vYBUR70WBxs9fLeCvThh
                      vL0VIMW9SM2FPHIAUz22dHA90LArvR4oBD3PO7m9dj5gPZpuKj0dr5k9lnSSvdiT7rxQFHa8u3ue
                      vQZuRj1TLp89nqwGPXVRsr3Z4Zk9Qm1DPWC/7LysYoq8cqliPZpVKb2JDYo9QL+AvB4YYT1ngkK9
                      2cO5PZJ5UD10rQm9gjwSPcWVnr0G3aW9XKwTvXiigTzQGcW9vbqFPeTACr2atC+9mWS9PUZJbD0E
                      WYC90Bzpu2hjTjzmagk9ckVZPWwtojwti569JVqhPRp0Bb1YOAy8MBzsO6DeT7u2LhY9yHP8vD8x
                      jD1UqIG8GHmPPDOikj1qrgE9OMW3vKLDeT1czvM8qkV6vUC9djvoFYK9l7t8vbnggz0UnLE8LKqc
                      vCbJUz1A59G87/GpPXeoO70nqUW9tuMTvSjKg7ywYEO8QjwRPeJxej07oK89wAOzPA7Ilr20RdE8
                      9KDovCAOursD4jW96FhKPIwJ/DyMVQe9J17KPXJCbj1xksA9QNGWPKPqsj2onY29qkBHPWqUXb0A
                      Osy8cppyPWC/cDt9ljq9dE66vG2ecb1M/+U86TWoPfCVULzAsvi81mxpPXhY9rwwWCC8cD1aPABR
                      1LuQuza8SPeiPKNoVr2+rY+9enebvRETtT2ooEm8F+G6PfosdD0ClcW9MIOGu1iwyDw/OLK98Lxz
                      PDMZp70+7Aw93u93Pa31qL1As1W7oF8evQA6Mr3Av6A8+D+evIxr7zwg2OS8YshkPVg2/bxDerO9
                      wr04PV4Omb2Uw/280EXRu9LWKT0ISsW8yTDEPSgG+LxYtYW9o0gsveCfmr0BMck9gsRQPRREjDzw
                      Qi48is25vWjR8LxdHi+9SLm1PLgmwbz18Z29pXe4vR6acz3DuGu9QExmO6Ap+bswHd079l+NvSgW
                      xrxzMaW97QrBPeXqjL0wHWq8K5fDPTjK17xBlbQ9DoMmPdjzjrwdnhy9iu2fvQDWJ70DeqQ9Gyi8
                      PQK+KT20q/I8N1EdvVSXzjygLYg80EskvWnZhz2kSu48+1WTvdJWCD1h35E9kYadPeBpGb1Xv3K9
                      ak5+PaJkVT21kLW9D37LvYDscb0AiNq6pw43vWAPML29UDm9MtxGPUQ78Twqdyu9PQuZPbSv6bxp
                      Sbo9ML7MOz5oTz0AVra9Cyy2vTDZkr12x1E9Gy7LPfMyQ71H2YY9CBGXPCDXtr3BP5E9WKtYvADI
                      /7zSJA49BNToPGAeVzsGOIO9YJYFOxfZRL0CLRU99GOEPLDDsDsAHco71IWYPJ0hJr0oCnO8vpQE
                      PTjCrTwS3wM9mkGTvc2cyL1uvKy9piIpPYDudDzsfZi8UmQ+PUD2Gjy/eaY9wNIAPNpJA73y+0g9
                      he61vYX9xD3eyIS9zAS5vDFjuj1kJ9g8YF+rvHT5wryNQcU9Qb3CPYKHKD06up+9GzO1PUAFiLzr
                      jIk904CzvXKwr73dl3u9szK4PYjU67xwPTO8knEEPRLUJT2YJ1m8oGyZvNB/3TvgB0e9XZlTvSxR
                      hDxAWcA8vwCgPWITWT1ItMo8NaejvTaZgL37+7a9KLR4vE7VLj2VnLY9BV6QPXltkj3aani9pQK3
                      vS5DZD0AS/G5EKoAPAz54jwg+rg70HW4Oxxi1zwgbxK9z6KaPRo8tL1oxUA8qNorPPo4dj1NRpa9
                      LKOjvJikoLwGPIe9e+OkPRCDSzx0WKK8ulJmvXa1RT2pbqQ9yiw0ves/yz0CCZe9oLC9vaj/lb2P
                      lb49KlVQPY6JWT2qwx29sGqoO3CVIzwN2LW9VfuhvSahHz0XD6k9QF4EO+j2gjxd/F+9fYRyvVDa
                      vr2VFaa92tAQPZNUmb1aMTI9gvEnPYKQDT3Ej+I8cEK6vRNPoT3vOMA9zU95vVRy/rxizVM9eIaa
                      vSG7jD2o6bq9aLBKPICNZDpamVS91BToPNMFf72i/2Q9jPqxvPEtxD2QpTk8R3utPbSw+bzoITS8
                      9zI3vULsMz1CjFc9cEu0vUQc/TxcdtQ81GjUPInEoz1Iooq8ypulvXPkoT2E74q9TzC3vWzyFL3/
                      9629H3eCPSJRbT1FuqS9kJAMvYfXI73ADGy9CsllPT2XgL1xzYA9uGfNvPSGuLysgIM8MUqaPWCT
                      hb2rUa29uloKPWrfcT1gNO67rVGEPbLRfT0AgDW2WKu1vfBGEb30x/s8zsd0Pewf3DzQ4QW9bS1v
                      vW/Wtz1WeS898MJavZibjL3APc+86YLGPe3qTb1Aioq9UVKAPRMnjb20bpy8thpQPajeWbxBUcI9
                      qGv9vErvRz3ucYG98jEVPRCPWLywkUw8Q7u8vc10qT0Wf429ihtgPUCjnLxwD3k83jimvfIoSz3K
                      t8S91D7XvKi7O7w8xPE8N2aMPZ0Axz2hzoY9BfiePfo0tr2dUYi9uDiOvKqDh70a65q9tZzAPYBm
                      NzwFVI69QGhnu0JJaz0LUZ29S++uPSK3GT3vHoU9tLWZvIDM5zuHbZg9T4nBve88ub3qcp69AAwn
                      vbjKmL0IfbE8pmUJPVXVtj3AVIq8mM7BvcBXDjuapsi9UE9fvcjMtLzwyz69/rI/PfB7J7w0lvQ8
                      ZsakvYDbwb2goQq7jRbHvZD7VbywKFC83n8IPUF8yz2AzvI6EXfGPZJcNz3glYO7eFjZvMGHoD3o
                      +AE8ADJmO1a4aD2fgMg9PqpIPTpXJr0d1aE9TFzKPFQu/zxVWrC9gLW9vHjNijzrR5U9FgAYPQz0
                      xrz/xsm9a+KxvVJOVT06+ja9LpByPVFujD3B6Zg9v+nJPei3izzkGwG9eE35vDK/qr0dH1O9pJ4K
                      veqSmL06xZO9UqudvYCw47q4icK9vaOPvfnmuj2YG8688s1cPcqrEr1JYcw9AyhMvWcusb1UpfW8
                      wC5XOwSz5DzpRcc9DvE+PaB1Wr1B1ss9IFISvYktvD1dhY49/OzZPNggz7woHSg8zd0ivRcrNb3a
                      IZK9LO4WvZg/5Lyqory9VWeCPTQOpbzw9TG8gM2hundNxj3gDbI8Dv6RvRrLQ70K0Fg98EhFvHpM
                      M71qAJu9+RmzPZ+quD2w64Q77JcGvQDyoTz+inA9c3CZvfKmdj0wGLe7AHsMuyrhOD1gO7g715C3
                      vQkfpj0DHMS9hReCPbUmwr2ypH493UqVPSrnu70I2oe93KGCvTJst73wNVc8mGW8vRXOuD1AOka8
                      yQiwPea+LT0YYsS9yPCgPM/ExT3IEPm8kJlfPDDkarxzDE29RFnkPL0BlD0+sYe9XZrHvcrKhL0A
                      xQw7TzDAPRhZ+rwgWci8IvwHPTq7YT3ysWU9NgWEvfavD73VYbg98FE+PPaNdj14caq8h/+zvT48
                      Pz2+4KG9d59KvZGUgz02two9zkQCPV1Ovz2YkNe8e1+9PVALcTzw0Ui91265Paj9dDxlPaO9oLZn
                      O2BssTyvHbK9I9pIvVBLsL0QOGY8CbKGPWssmr3/+q09ikoRvb1pS72A2rU8ZOTsPKBC3rszxUi9
                      VtYGvce3nT0UjPa8TKTovFoTI711a729ujEcvYZGUT0zwTC95DXYPBjnuL0woaC9aZ6dPYAipzxK
                      HC896EuevEAyYbwsFK+8TGfZvNkxjD3oJsa9MK8DPPtsn70Agcc8AlQjPbvqwL1+6Bw9HiILPYLL
                      nr0Dom299ocXPWAfZjs4QKs8cqSfve3pwD1UBAa99uJnPcufxr3S5So93xeHPRTZojwDCZY9aFO+
                      vDBBaTz4dP68Owa9PUDWIDvdKsi9gHWRuqBJxDygKdi8IM78OxVJmL2g8LY7c8CpPZTc6rznb5g9
                      jllFPbBD/rtgv8o7eTe3PS7xET3WQzg9bKDxPDn4jj0m2Re9VOfJPMDJVbzMUri8+rt7veBvZL2g
                      Lj67V0F2veLJzL3QclO9ALj2OFK2VT0Nr689h9CAPctcnb1WXYS94bfCPcChWryH1KY9JnuhvQ48
                      or3RaK090LMpvC/nv71m6ga96FI7PC7+ND2ifB89Iwg7vcADybwAXrG8nlc0PTnSlj3Qsw+9OH7M
                      PHgM6rxTsse9AFHAvSj1ELzE2ug8VntVPWpgTz0QXC+8duwOvViSrLwdMUi9U+eZvT4HKT2Sc2A9
                      ftClvQYHLz3SknA9TfVNvcLHx71w4E88IOysvbsHkT2zRyi96YKtPdTY27x2x2490Du1O0dDsL1T
                      fJK9PXdQvcrndL2Yf4I8wjFhPYB9vL3jGVe9gnV4PU4+lL0HaYI90JSjOwDjBDpAfH+7SxSaPS0M
                      vT3qZam9qthtPVP7Ob197FG9+senvUPotj04aqw8tiWhvfESsz1XK3y9NUyAPcsxsj2qZWq92MI9
                      PKA4r7s+Nnk9wj+9vRSx77wDVFu986t/vbUYhb3NpLG9QaWAPbqKir0gSHS9BkRvPS2sij39EHa9
                      uxuxvQwYAL3E1u88pmhtPQB8Eb1M7OE8L5rLPafhYb0Q6Ea8gGoKOuEjnD2grlg7FRmEvSxrqLya
                      7hU9LEndPCLpDz0GCyY9GjNAvXXCoL1QHwa8Fks+PSquF72wsJi70Cf2O3rGNj1oMmm8utRnPX07
                      qz12IKe9ymIivabGET3QMu476IktPPjz/LzemQk9ctUHPfu4wb2AJK08pr0+PbDNk7vUypM8WPeN
                      vcmUjD1zfsG9N4hQvcCqqDzLIb69NGGEPABUmzrquBc9B26EPVMCgz2kHAq9QkGKvajeQzxYUf+8
                      X97APTBn47sjV749/f6LvThduzzEqg+9UAJhvau6t73H/0u9leO5vQ8Byb1cU4O9Nc2GvaBuvrt9
                      1Yy9XoZxPTB0QTzgudS7/qqcvWCGkbtojF08kdmaPcCSpLxavE+9lBmEvYkVhT2okaY8Qxd/vTpK
                      Hb3XkV69YGkpO6AUnzvQ8OC72iFovUDMT73FFpC9+OTpvKyMg72Ambi9IF10vUwkxTx0GZS8qGSK
                      vXjlwL3AHsq6okl1PVC8RrwO8Z29WqAqveuZtD0Mkqk8+2+fPVjaZjws6+28RmtaPcDKBTxBKKQ9
                      2B33vPr+Lb3Xckm9+FqsPArvPD3QiMg7nnOQvRA8sr0tkpw91fSEvVCKrb1tRLc9IRiNPVE2lz26
                      yks9qh9PvY6TYj3jzMm92irKvQ01xr3Nfi+9rqtZPZfuUL1dfi+9mD4zvMqpFr1ac3G9lH7mPHPY
                      lb321EQ9kgupvRFroT2SmBY9PipNPQAM4DiMR7a8aECzvDSUzbydU709SGqnPDy3C70A8G44MIiR
                      OwDqmbpyul49CpahvWxGszx9Ypi9YAiWO31Fn720f8u8QLMmPD2Dmr1IQOq8o8mRvQxmrTzk2uM8
                      cuaavSwDrryth5E9aj+bvUyy8bx4eaG9elugvSqmKL0YKH68oNjZO1f7S72sh8M8fHQVvdC+I73n
                      mUW9qIYAPMDLuTxokEy8WvlHPRdpVb2S0089bJGivAAgkrqYire9MOdqvEx4Fb2YU5y9WMmBvN0H
                      jr0YSVk8OlTBvfChLb0R+MM9dCi3vHgVsDzwF7S9ioYfPRTwpLx2UoG9erepvQCwZTpnCcE90ESK
                      O0yjkLx+wIq90ARIvYaobD3kONM8xskyPT1zmb1eJys9ZZecvfA8AjwZxrQ9PxSwva23kb03EDu9
                      uDH9vEQrCb2dYsA9AAQEuZElqD0AEX68cHQLvXS73DypMpE9wC05vX3oxD28IvY8Gt52vTl8jz0b
                      2LW9eX+MPd6yfz2u/HM9SIfwvDRpm7yFHca9sB7Su+aIMD2Ymz08RfmoPQFDpD1kshK90BNLvcBl
                      TLuWKjc9aCpYPJNmrj0gRIS90+uJPaDsZjuAf5W8RneBvcJclb1KGxu9meiBPb/1tb1IMpE8Re7K
                      vYQx6Tw8fdo806tyvbagAD3Cqxo9qLOPvQB2wL24W5M88+nFPRgGHDzboMI9etVmvdCu0jvV1L09
                      hhCYvRuQlz2SkLu93WCDvUqpDz1h3ZQ94vqsvX2gUL3TSZ49hca/PSCeqbsqUyE9yweovUH9hT2S
                      Sh09L6m8vTD+h7sgXKY8w8tbvXXAsT0AHg+9EsBrPSBkv7uQYhW89M+IvUyx7jx09ug8gppfPdCw
                      H70eqFk91iBIPbBvFbx+Bm494NGMvFqmir1uzSw9ajMtPfYNBT2wiI47OO3avMiW5LxSIl49PkyZ
                      vRnitT0Q50w8Om8yPfFauj20UpE8wHAovI0xvT2nPbS9wmucvfHHlz1wDBy8M3O/PQP1wr1ARAm7
                      E4ErvYEikz05Fbo9uMSAvKodEr2mVzo9ZJ3SPOXMn728pRK9KqN0vR5UVz3KnTc90OETPDq+tr0b
                      Vok918g4vRgUkL1Ya8W9mul7Pexj/zySlkk9gCizPJTyuLy7wYM98Ha1vbC4CDywjhO8wEodO+3W
                      tj2wJua7WCUIvFBbSbwXs4Y997yEPVdMuj1aFIq9SZKuPU3cyT0o2kA8sDFYPFAmIL1YiRc8XTjK
                      vRqhNL1gcL27sq8aPWDIaDtQPGs8WUmLPUxdwrxUTKi8ZIsRvTPsbL0wzFQ8wIgpvcpYmL1liL89
                      0KSju958Lz2dsra9gnijvXnLjT3CxAU9IFhevXipzL12Lmc9KKWEvP3zkj2LTro9i2muvfC/BTxQ
                      zAe8ZBvwPGqKqr1AjXm9wlJSPe0/Y71Aep08WHaRvOgxQzwa42q9vVzGvTgfzrxmxjE9YH+ePJBi
                      wb1aE4+90Po6vFT4mjwsi9Y8Rg6HvTUKq71gRVM7XBruPFCaLLwoYh68q16rPaBTxTvj1cG9qmBH
                      PYCSubsDWZG9lr4GPcwrwbzAb1y9tOKEPFjjEjxWSKa9cE0zvViUF7x6vE69TezKPcLiQT3Ff5C9
                      vmhKPbByNbwG2wq9AH/Gu/zZ5Ty7FJm9i8SzPX+anz2AbZe6dK8UvWIMSD0Wmi09HYM2vYTO6Dx/
                      T7S9m7nAPUh8mL0wzaa7EWCiPcoNMT0fDL+9oLLUvGCJYTv3uSW94hZ3PdvNur3Xw689vdPEvaAX
                      xzzIEo28Yzu4PQ1okD3Pw409ILrfO85WYz2wv0w8g+uuPUC6ZTx1AbM9QbyMPSpAJr0Thx698K9f
                      PFTTsbxURIo8pEXXPDUVgb0geIE86eHCPdpGU70sq968PaAoveDCrLySZIS91ROjPQWjxz214b89
                      UHmMO5CMHb0+PnE9xr8NPYJAfD1scbA86Y+DPa0kvj1XObm9gPmtuszqjDwANpS9hJjcPDdwWb3I
                      1Pi84ng/PVpZhb3QjCi97HeJPDg0l7x1dLo98gqLvV7AfD3AjuK8HVCGvdFAij3ii3E97T4hvWx9
                      Bb2kiRK9DrmpvZsasz2pZ4M9s3IivRq/DD3QRnG9UDAmvUWsoj1nq8Q9oBrLO3h2jLwgEYA8PwaR
                      PTC0wb1gr4A76uimvVfxyT20hqk8NmWlvYymh7wPkoY9EZq8PQfgLb1ep4q9diymvS6qdT2srN48
                      hEj3PJRjgb3xCqc9OOHIvMaFGL2/U7i9PTrEva+exj1UQvo85yidPbJhLD1C4Xw91XiKvfRw3Tyg
                      NZ29qJTVvH9pvT10Lam8zMftvFuYoj3SL3A9ML42PABtaLooRYE83ZnGPbcufr3HQV691e7GvVYl
                      mL02uFc9mKOyvF8xyj1AshK76qEwPRdOXr3dVom9SpwCPbjDw7xEm+U8bHyzvBd5wT0Xymy90ESi
                      vUyl9ryMjqY8kGYePIbtCT17dMy9ZqE4PcQQ2jzOaYK9YEByu3iLjjyIT4k8DjEKPdgj5byNU4w9
                      6vanvQDNE7py4sK9WOW2vWqzPr2HR8Y9WhosveT+8TzYSI286gocvQm0nT3CexA9PV80vaJHcz24
                      M8y9JuyBvaORxz3vcrO9ajl6PZ2suj1qEkg93XcfvVntmT2Ff7Y98rCEvdearz3hTYM9rjGCvZKs
                      CD0iPLG92DLUvNIgCj1sFQO9+byTPYCtmTyHz2i9kMFFvZpgtL0X9jW95gdYPXBbPDzNt4e9Ry1m
                      vUa2Uj10f6u8UjB3PbpscL2Quya9ITK9Pf7Ik73graS7PaIivcCgrTroQb29YPPBPPYfpL2guSE7
                      IyA7vaBtxjsL95c9Dg1lPXqmNL2aGG09coumvQiEtrzpA6Q9uFiovaC+sLzs6ou8mIiuPIshu70C
                      9iw9c0uLPSiVEDxQlwq8JzvKPXnHnT22jTc9FOSYvKDGeL1Xo6+9dZKrveoWv72ixkA9oEm0O3Br
                      eLyGoRa9YKS8vWm/pD1QX6O7ikMdPWr0Xj1ypKu9/flwvdh6dbxm4Hk9/bG7PZTf27yZnoo9bG/s
                      PFJzrr09bII9aNIZPAvavD30aew8sEfsOzRqiTxRp8I9gIVKOlAYTLxySGI9aKYuvMi5jrxUfuO8
                      CMCkPOaFJD3f3bW9kEuyvSuKjT3ln689OAaRvV63YT2nE409OEabvM7kcT0yGEQ9CP+zvPK0mb2c
                      ZoS9EAcJPPpYWb3g9Y47pGDOPLgA9rz1YrC9e9SZPVDfu7s2Sgg9KweFPZB3BbynmUG9ziZnPW1X
                      fL3mqRI9tDncvFK2Ez3ChHw9jmJVPaxdyTzI6JK9YJjcvJweEL3CxD09maSnPYCiNrxVkaY9Nl6f
                      vdPGN71QC5a7+sI7vUpJNj2gWUA7unA6vTAne72GjYK9hlQkPTIMi72PXsg9PJ4IvTr9Hj3iNbO9
                      pdufPQwttTyGaS49Qnh/PTAiub00crK8CGHevJ0yPL0MiLK88xavvZPmyD1iBMS9bW+yPQDNUDoy
                      v1g9Lyy6vZw16jycD9U8kjMLPbf5eL1NwzC9LMKgvKiWz7ww8TK8xQaTPXr0wb1q7bu9cXOXPSC1
                      qDudeae98OZQvQDwubvQWSE89ZSEvdCtgzsTGFK94Jdivfojkb3mWzs9+q2avZeilz0fdrg9DM+N
                      PCDuijvj2rO9jSGePXLHVT2BW78984bIPfKNVT1Ajmm7GLYgPGw8u7zF9ay9ZJfNPL0lkr09R1a9
                      XnQTPeBuRL0bCMC9t+q+PYTi5jziJ209VYLCPR1Jk71GHxW9a4u8PTUun73F75s995dIvTQl+7yA
                      Uzm8zd6APZ5TST0hl8I9TJjWPArrWL38pYq967yYvY3AhT0vfaI9Qy2kPdQ0+DyJnIU937zEvZY3
                      Fr2+7gQ9rQmHvS6fGD1rp469fwCzPeGqsT1GTk89ndu/PTUvkj2LaYY9IQecPVj/f7xBeYw9xJsF
                      vfBfp7066Cg9ML0sPEA7UDs+zGM9vX9HvTDIx7uwJEw8iKK+vadQpD3Xxk69QOq+vTmDmD2gWDO7
                      UH01vRbJZj3oUnM8wtOZvdZwRz0YIcc8Gp5CvbgOwDxoEKi9UJEmPIp1b73W8S09AJ03OlQz3jyA
                      BP+8B8jLvSnLoD3HDVS9QGouvcQd/Dwubqe9qANOvH4hGz3a+jG99rs3PSaGGb3UR6+8Q+5UvfOC
                      yL1HoCu9FaG2vYrPGr39i5U9LexHvb7jnr1Kbjg9KIeTvbAXXzyIHqG8qiYWvSisXTyiIiU9AMPf
                      Ozr/i71McPM8m1ifvXIEVj03w8K9NfKIPfCXer2nrpw9ALKSvRQ8CL2Tti69scqNPWDGjju4Pb08
                      Hr18PYCfpjsaWHm90KKXvelQhz1JXYM9wOmgPGRg1jz2ulc9EpzDvbQtBL341cC8mA0QPKQh0zxA
                      OV07yBLuvLkpmD03uGy9qQCMPa+emD2Ylp28InMjPYxpgry1pbM9vbh7vWBpiLunhBy9vyy7PaoI
                      w72WMn89zxG9vc3rnL2hj7E9L2HHvUP/vD3M3wO9a66tPXTpu7yK8HS9IUuwPcBPZDtsqwi9SJT3
                      vOF5iD3kCto8gGEoOl5aYj0YqE+82gpTvWXroj3gw/a70HFavJReA70Cwci9miN+Pd70gr1O/HY9
                      BGXnPMCSCzyAF4m6nm8EPbUIsj2nOYg9aBpBPNK6cz1g6BU7zZGyvcBbKrw6gyo9mkkZvWxs07zh
                      Hqc9kCNdvRIfTT11Tqu9M8tIvdreEL1Eeoe94DbKu4AzcTzkFc4812YmvegRHzwjJrU9xBLfPNM4
                      Y72YRxO8c4ZSvT0gkb1jaVW9KCFAvBfWtr0OQV492oJmPVOSRb12iBM9WE/svMIBuL3FD8w9tB/n
                      PFdwQb2TU8i9gH6IvVnbtz0oQBa8AB2YuTi0gbyY8Kk88ReePVhvZjyFOI49gFqBukRAFr2rHo69
                      vjtuPbmmsj0eZH090C0KPMavaj0NnI09mHT8vMialrxIbKC9fntUPfDRy70ZfLM9QDVoO7Dip70H
                      ph+90JGYvfqeVr1DiFa9MvEiPQX7q73qjje9iZekPcV/o71br5e9xmucvULFAj20TeI8oAMVvcBx
                      ZL3GFI+9FusYvQtNkT0Osy49lkyWvTGapD0qex09jdqNPVHfgD0M1d28UOjJvavhrr0eI6G90BSA
                      vcdVqz0UOKu8y3HHPcpgvr1NjIq93ySdPffNpT2AuTO6d4zMvep0Ib3KGAK9NVWvPQwS5DwgscC9
                      R48ovWANszyEtga9s366PQLWx73MXKs8bhFtPUIiET2DKEm9bqkJPXNpvD3gSLW71I6SvJZPfD0/
                      kcI9xo8Vvcgy7bxjO6+99Fq4POe4eL0JLJ49VVCGvRb6Dz0NuMq9MGGDOzaiZz3gup67sAB8vXbG
                      Cz0MGIm8EQyHPSduxb1g0BG7EggZPXoNvb09Ycm9bRgcvTB3Yr1Kt1692q9tPfoUnr3g8Ke71n9l
                      PadBdr317bW9Oj0Zvb5Mdj1iJFQ9zrdHPeCTbL1A3JK9QNs7OwCEubpnXlu9FPQKvZKYfT1AoD07
                      h7KDPflbvT2ZjK89weq0Pf5olL1HYp09bZqcvdOfPr1DxGO9tX2xPWYfLz1iqjE9KswyPWizN7yK
                      m7696N2oPDbTDD30bKi8Stk8PRE7jj3dQ409ZQCsvc8Bsz15DJI9QzpWvZDUjr2g9K+8IPn+vChr
                      nTzoa0C8AK6iuVF5qz2QIUu8zu41PQusmD3CcDQ94xmvvdwL7Tz3WTa99Pu4vGJRlr1NArS9cMhp
                      vbQSwLxAxB47RRKIPXSXpry9wFK9KGeKvPDDe71Kxj69PYWhPYCr1bs+XR09hs5pPSOXK71vUaI9
                      gCrSuxmYoT2Yn628dQjGPazkk7w8d4a9soB/PQ6MKj2A4J48MnDLvcDEXzszd6e9yOKevVfjsz3y
                      yDQ9mJbGvP6uCD0JmaY9jBmsPAjYx73SoSQ9WkVQPVZfEL2AS767AC2mvd8ZxL2YMYq9G0mLPXMY
                      x72T9We9WCCbvU0DHb1QCY47k3+JPbO7Qb2A0rm9rRKgPVIbbD1CZm09Z4RkvfQcgzw2YGM9NLX0
                      POTf6zzimWA9QvF1PXXgu73UY8I8qZiEPaKQED0FEoy9sqxBPTCvar19coE9SrEcPR2TJb2w9oc7
                      2OOJvcq0Gr0dOlm9w615vYjJwbzjSL09QFG3PCAj5TvjBpE9h1xDvc0yib1KkQa90b7JPaBYmL0C
                      Gx49R4HGvQIWxb00jM2856ilPW6dAz0YhFM80P6vO6/ViD2gDxO92Hs7PFoTNr0wfL69qTKQPZN+
                      rL0vSq89fWOGvaDcXTujLqS9gH6Ou1ARAzxXWyC9NiEjPYjx5Lzzx489kBsYPIprX72Q1E29OllY
                      PagTpLyUPfe8aRmPPULeVj3QdSW8Ig6CvcIytb2uiIK9dUiCvR2zR72BVpo9vMMIvbkRiT1SKrG9
                      NOT2vMCmwzpfGrg9Z9M1vQ51nL3zV5u9ACVZOuGTvj3zfY09AKgPPHGnvT1wAEC8rEPyvFR80LwD
                      sr49a2KXPeBbs7sgeLG8jax4vaLfUT0Ai206wIomO7odvb3KIne9cstKPfO5SL19uUy90EQ8vcE0
                      rj28LIy9nhB/PTVJgb2rE4097WmOPXv0xr3rEqs9wiJnPfITkb0Yqkq8j1iEPcE8nT0typq92Y2q
                      Pan9vz0wurO9kOhWvPLsOD01Xbi9mb2uPfrFo719DWm9EBcFvCbcnb0w1DK8fEvyPBtQqr1oZpC8
                      S0bDPcrJJ73g48y7HYk2vbY3PT0t11G9+oFVPQDGKblavFg9oBH+u4mzwD0HZl+9YOJWO+B9tbxy
                      jRA9a7iBPT1LrL06Sgs92KiTvP9coz1Tn8s9BmlyPaKLUT32e2A9NGa2PFD0cL2DLaS9kHh9vJn5
                      vz06x2U9xi9sPYEBkD0IUZQ8qvYPvQCAiTYsswG9+zOqPSM8qj1MhRe9rAuwvGgIJTyI7Ze8Enpj
                      PT6lUj29NTy9qhw3vfAaQLxnkW29yfWQPaLsZj3YD1K8Wgp/vTdqgj1VvZE9tJy2PADMvL2gYd+7
                      WHEAPERE7jychBa9BoKNvVE6gD27S5k9t5G7vYjyqDxgoLC8gBLqvHULyz3iZGE9IYOgPWwv+TwA
                      diQ8fvF7PbZxWz1A9UM7rEWmvBYOXT2N/bk9kJ8UPJrgLr04Qpk8ZnmavfBXc7xamDo9PemBPeAM
                      pTwFncA91QC2PXNYm73ABii9wEq6ur2NUr0yygc9oMGnvbI/kr1KmHY9AAl/u9fPMr0qmbe9rZC6
                      PdGIiT1Ugt68KI8HPJ7mWz33cag9gH06vadAjz0gH6K8GuiqvUh6lTyJ2pU9LQC7vYBx+jtWn5K9
                      TaJzvaXPrL1QGMU7KJJbvMTW+DzAEMC6FbmzvTRl4bwwAvk7OtQxvaBaTb3x/Lo9eixoPRreCD0/
                      SbM9YnI/PQJgt71C93Q9d0m3vSb3B71DpVm9ONL/vMAEr72D5L29PcjFPdAjg72b+ZA9nFAKvRi9
                      wzxYIya81mp1PVCmYbytboG9dEKYPHMKpL3YqAu8Erx6PeYEVj1/lYE90lBwPR96gD1xXZ89ulg9
                      vYWQqr0T5Fu9ANUzu9iFwL27Q6S9qfGhPYdYsr0AOoO6FJWQPCWexz1Q9Y67WcWIPQYupb20B+M8
                      Gem3PUmykz0s58E8OmZnvZUJiT3DhVy9c5opvVnvsT02xAI9uIOHvQ/Agz2UncA8FS2bPbZDOD0N
                      TFO92XuxPdk9jD1TM3a9QHQCvFLBbT3ai4a90OicO5NQwz3Sy4i9jKD8PHYsFz0oWiK8ov4UPd0b
                      mb3cJOU8/a9bvXmpgz0yUj49q1eWPUYYfj3sjI28rTtsvaJAHT0KLkc9xiWSvZUdoT2p4aA9PTNN
                      vSCcojx0SoI8cOamvRRTkjzamyQ9DyycPSiNW7ySTVg9/fU1vWBK6bsACmW5w10hvcCi2jrP47Q9
                      LwWwPSeuX72YytC8ANeyOztPtL20Pg29iW/KPagdBrzQ2D299sIOvYPHfL2lqoC9oDGDu0qvN70S
                      8k09xkYcPQZbh70rjIA9kr5VPad8c73D3MC9KAOkPOA/Hb0eXSY9eASfvdWWj72aEDU9Z5FqvZtK
                      ub1ANnS7RHAXvQVnhT1yvlQ9ncqfPXmYhz0oXYO8bB2evJ9Eub19WMK9svpLPWA6jLxoY2Q8LY6q
                      Pc9Qiz1Qo+O7sSWcPeT1/Txd7Y09T/msPZr/t723Ak+9UIsUPEAhO70RT4M9GCUiPNlgwj3aHV+9
                      UO2yu2NnqT1ISda89jmpvV0nK71SDko993GJPTjuxjyKIyS9FtMGPa9pjD0zU6S9dz9/vXCza712
                      Bj09c0M8vRc6QL2Aeum8kK1svbI3ib3YJHi8pyVBvbBeuLu7PZk98jQWPWjCbDwSRlk9I2o7vRK1
                      Oz0a32+9HmQePX5Wpr37+aA9zfbLvUBlIDzU16K8MDh8PC6HhL1wnza8logVve4lKD2+DZi9faae
                      PYBVijzKiXm9YGsbveizZjwMVPw8KyHGPXGnkD3w82e9UisJPecpwT1iFCk9MMMYvWNCHb1RDKI9
                      VPi7vPgFtTwA7vc7wAEIPO4Rmb2K40C91sw3PdJADD3MBum8z8OPPbNhWL1kXfk8R6svvaCiVL3Y
                      Fum89GD3PHCbcLwygwM92zPLvSCSqr0lRJ+9TPTiPJuNq73QEsu7Z3O+vQ47Wz2Pb4Y9XJ32PFBI
                      +bsD+Dm9UgASPQAFirwl1pe9btxwPYxvvDzg3se7yuS5vTD+fLwVmYs9AT+NPcCkALyKHFy9TSm4
                      PUCNPzyo7bG8OevIPR0Yv71ykAo94j6mvahozL0wGdW7iButvQtUrL2ijY+9AjRzPYpTBj0K0RQ9
                      cNtIvKDKAL15sIc9VeSqvVDHxb1xa4M91oE2PfCHVDyriYg9H3yVPXbgiL3SSGU9Ht8YPYjDubyb
                      9Ze9ALEbOw2otj0y8mk9WLwzvKADKb0qWUc9XcFTvX3TOr1WWkY9yWbIPR00yb3SDIC9ULsYvXd6
                      V73XuXq9kJdrvXIbKT2gDMM8QIxBvYM2Ur0Yuh284F2Vu/M2vz1K3w09KK1VvA5cOj3bsrO9EmVv
                      PTqmVj23yq29kN9kPIpNQz09fyO9R09Ivb9awz2OPoO9OPDEPAAeaTyQarm9hZ6Yvc/Bnj3Ri8o9
                      ylV2PZ25ij0b2oM9EOJnvPx4FL2A2V28ys+ovcuYrD0nHDi9s0tXvRgfcrxpZos9ujSivY3Odb0N
                      0yy9jK7EvGSo1Tx2cRw9sH6Bvfip77xhVsU9tuIUvW+kiD333x+9MNoVPKLZeD2gH8y7vynCPYbb
                      FT1LjLO9YKUKu1Du/Dts8OE869iTPSMtvz1iuYy9MMKwvcNdpT3QA4i7QsIcPbLSLT2S9VE9OACs
                      vEHoiz1ewho9L9anPUJWDj2znZ09Xbq3vRSOrzxVR5y9oGEvu8+xxD1IX7W8Su27vXoDbb0LUrW9
                      HSObvUBVF7xN7aQ943xZvcEjqT1PnLO9sSW8PQusxD0gsMy8k5FKvWXTxD0AB2u9nQZIvdBwGr3A
                      1a48EKB1PMC0g7xoCgO855uUPYd1r71n/yu9MFZGvdPHjz0uJoW9Ur80PdckJ72KtXc9HsBAPWLn
                      HD3rYY29uSSfPUDeJDvgfAi9wHbfOmzR1LyZkLs9g48hvcA3O7yJ4qA9MF63u9ehhz2QAUK8midv
                      PQ3Bsr2xNJk9lCPBPKLvHz0cdQu9DTSzvcrVfj2C6AA9AyUovRfiUr2qJjo9oFhHO4LZXj02EBa9
                      iGKUPGMEmT2Q2JG9IUzJPZttqD0wOXC9oG1nO+Qy5zwAAEM8dS6BvR68qb1NDr69rxTCPSsvrL2q
                      50c9lLqyvBPjob0AIpw6DWyRPbB+/Tvwdne9ehxJPXXyyT0FQpI9gKrGvBk4jD16i7i96y6hPeL0
                      ir2e8A895k2AvQx7jrzMufS8gO+WPPpgMz1Q7hW8d0XLvcgjtL0D46W9YPa6vVCAeDxOPQA9MKY7
                      vNG6rj3w9HK8XcuWPTS7jTyTY8Y9VASMvPjBnrwCszc9KAiFvDBW6LuwGpG9uN6NvOJMj711Abq9
                      AOS4vNBPKLydI5u9yMyqPKgFnTydRXC9QtAOPanFjz3s6aM8wsZKPVIKIj3IcIy996hevZcvIr1H
                      j7m9xbWMPbu8gT20XvQ8UUOWPT0KQL0APDs8Z6CyvVoZcL0ACLE5AAV8u/U4mb14isA8EmkXPTiI
                      oLyiv289Au9uPXm/mD3NO8w9KWSAPS4Nbz1xtJg9NFTAvB26Wr2wwxY8B8dpvSzh8zy04pg8LIbR
                      vDL5q71VlbG9erZpPcVgpT0YryC87MnMvKhlib1G4yM98zdDvaA9pL2K0Gs96GV7vH0Sv70N7hq9
                      fKERvaCYlryxJr099uVXPbfpkT1X1YU9aJ/1vFBUBbyYqcy8MHh/PLbeFr0KhgO9bHeJvB6xbT2G
                      7XQ9StfEvcOmOL050ZU9SLONPK4Spr1Q/F+9xvKNvb2qyD1AeRg7EuIyPXpFFT0WM5q9ndk3vcP4
                      pz0kNuY84D8cvTqjlb0HZLk9RM4KvXFnvz3Yc3E8+HbGvXaRdj2bap49Qt0sPaOcGr2wwTw85Mjt
                      PMBuA70Agfm7Q1advYBPLzwLJqW9uw2WvacqSr3dx7y9AMBEOkDKtTwg5me9LNeuPOqbBD33dro9
                      9KKAvDcFM70UC5k8Ss48PUutoz2SX2I9elIbvaeSwz1zwMa9tnBZPfM0mL2eKEQ9C7qGPSCPqDzg
                      o7k791EavQBoArt0Va28IM6/vV6PUz2Qkxo8ACC1vKS/1DwwCDi8Qyo+vZAvKL1AShe8/ROnvWzQ
                      CL2YIDW80uF9PWhlODy0JoC9ZqKsvYFilz04dIA8ANoAuayp27xScTI9873GPRDoAL3YRya8f8nD
                      vfGBnT0V1bu9B45svfXyqj2OtoO99ETCPDehTb23SpM9wxScPei3uLwsapE8h+uZPXgfmTxjHo89
                      uj82PbSjgjyGN0c9JSW7PTAmeDzG92Q9h6elPeO4nz1B7MM93vI6PYrjWD0o1728L2G5vfZkcz2y
                      nrW9TJaNvICV/Lpwzks8mFLFvYLGdz06pba9iih9PcERnj26MVq9YEO+O7JPGz3KUnm9IF+FOxpV
                      qb25c589hQS0vZBzF72JE4Y9x128vbLdlb3wUba9gt1xPWp7Wj3ZHJs9AICdNsJRob2goI8748ab
                      PXQy0TyWDwI9FxaoPRZ4A72tqrw9qjs2vYELkT288ga9DFSUvPARSr2wJpW72iR3PXnMoT2E6QO9
                      UfORPVZ5JT3Ax9m8A0SPPSc3vD0DSco9ZkoEPcPznD2nVrU918NzvbuSkb0ubpy9cx6WvVXgu72i
                      P2w92LNxvPAcX7yA6EQ81KLdvMCrR7wUwpq8mPYbvCPVkb3RWIs9vqUJPZ7raD3A6S68fDgAvfMT
                      V706jTu9g76evZXGzD2YPHk8gKb5O47qMT3ohUw8GFTHvJiEJbyMwKk8mUSLPcBpHby/MLI9YPxc
                      vQym1rxuqX09y+68vbiXxLzojJo8PyW6vTq5Oz1W0jI9WpR6PcADIzxRuqM964SaPZjHir3o5w48
                      +aGaPZCiPbztNsQ9gKexutRy0TwnTXK9tWqvvUCws724m7q8K8GcPVTN+LzmaGk92Bs0vLbYhL1w
                      +nW8UCLEvQGZpT0SQSM9sBVPvHwLgL0OtwM9g79wvWCXP7uTOq29IwyZPQdBur3iyRY9tugTPXl0
                      pT2a4Um9Og4MPcyGvjziIK+920WSPVlniz2gqZs8RW7JPTjf+Lysx/s88kY9PTiJvr04pZQ8cK5o
                      vMXhiD3WblE9DIKFvP49Lz0WAyM9tFvPvOTY6Dx/X7y9dey+PbDchTtAD9O62LO7vG0/gj3VX769
                      raBTvZD7hL1CbHA9KNGNPAKVOj3AEy67IsOkvR1Kyb0NnbQ9N7tSvZhFh72YRxe8GMO3PJXhnj0C
                      HK+9OlFmPVOeWb1t9DC9GxegvUC3tbq6zaa99AUHvYZFiL2V95o9M5hHvaCZZb2lFJu9AAyDONCn
                      IbzivEE9VHuqvAfTrb3K4wU9NKbPPOktrT3jpj29wCj/vIK3ej0GPQM99z02vdiTnDyoFaw8daWa
                      PfCaezynRn29ilFuvVJTBz0SXXs9sAttPE5QKT1wihO8ls+jvfB+aLzdSWq93/CcPQdvrD1qk2o9
                      EG8pvOCLxb13Uk+9hD6EvWjjMby+Pis9dG4UvQIGTD2AfqM8cBmvvYy2yTyinGM9zLmJPHAdOr0/
                      cak9VEnEvBjBXTwgOtw76ihHvYB6Yrz9ez+9Sr6xvUiA9rwLRIg9YkI5PeArnzyzIps9tDXGPMvs
                      iT2dT5+9AIc0u0IMGD0pi6U9mUeEPSyD4rxMCYO9BZCOPYCgw7vK7EC9U1KnvayS47xzGxq9YUGH
                      PZnCvD31NaC9WpZzvSrTfz0Uhq28nMfpPP3wtz1tQK09GHeTPIAr3jo6ulq9cBtcvABNdjv1Fa49
                      yigHPQD5p7v+oKO9yqRWvazPC72BNKY9wdnKPRiQlrxY4ju8kxx9vfOyqT2weYW7jFzpvAwmmjwD
                      Iim9SmN3vSaAKj2iJw49GpjFvWQ8D7362wG9c9WoPQLKp70AWEi8QP0TPO21Wr3o1Cg8sLoPvW6w
                      mL0+X2A9wDElvRQpvDxA1+S6pJvkPH7yo71fj7G9mHMTvNA3dLzvdsq9KkTLvZBthb0kOv48qKwr
                      vErun71a58m9KsEtPUg+sTypw549wiyyvdtPt73jIaU94PU0vea9ST1ju5o9I5eePS1kG73SqoK9
                      ABrsuuocLr1/YIE9cPB7vDmxsD0o5WO8L9uMPQfNHL2eDi09OvZNPZYlIz1WSEg9rtlDPZRPiLww
                      r5m95YGsPfmCrD2O9lY96MhEPI/trr0AOZ+7AiIQPUgDnbxmCmg99ZqXvUIMjb2dc5C9g7i1PQqY
                      Lz3RgsE9aH23PCYcBz3rIsg9qQC9PWNmSL2wdSi8trhVPQwhvzwgYMw8jNi/PLCgNr0g7k+9vbLG
                      PVg9i71YDci9gJH9u3uPx73aT1098BwmvR2eyr2wvuW7d+c6vT1Ygr16U7W9IEKoO3NcK72A/CM8
                      crTJvQD7yrxg8TC9vQNhvXAcELzgpZ87AJIKO8AsADxGIEM9iMLFPDRLobzT+Hu9rnEAPYlNwT1b
                      2rY98ZeOPUDYT7wnX7g9PjdhPRfSgD2yD3A96LJqvILMRj1rzo897UiOvafvVb344ti84YSnPTAS
                      67tStr29Ka6aPbH7ij1MVd682TOTPUAbXLxK5qu9x2BFvShWqzwJeZw9ZvFOPfIfaD30Aeo813ZA
                      vQAgiTvo4Sc8avKJvZHspz3f2ru9aLiIvKomAz3UOt08fAXfPLwq5DzDvLY93VtCvQC+5Lk2xRQ9
                      yLjovCBg97zKvh89Ctksvdf7Yb1gepy8t0LKPWK4pr0zXMu9SfS3PXzjhb11xbG9aBy0vY4Xl72g
                      yuw7qiVfvbqjub1P0YA9WB8AvFSuqzxMl8U8mjQrPdDosDtnUFu9M8oivb0nir29+cW9AFd7Opfc
                      Yr0HsSm9zGbCvKSI4jxdBzu9IEK8vPcHhj3QMsg7bbI6vTB8Z725Yok9hSyrPUBNuDoARCc88Se5
                      PeghOrzwFRW81AL+vC2buz0y9SI98GJOPLB8eTziazU92IBQPOjbQ7wtjq499kMAPfIBWT3JEsE9
                      6wKavTeawL0I/eG8kyhYvWICdD0ok8G9mOjCPP+vkD1yWJe9sLIMvAxUxDyNbbK9ubKhPaekPr36
                      Wbu90Kz+O9BqXDwAjKY6IA5mvTP4PL3I/P684KvhuzC+VLz6EHM9sG8zvbA7ezx3Zxu9BPzrPDP1
                      Wr0mC4+9yMGsPGC6KDuC6hU9F7JyvaDjHL3imjs9bJXnPCEhkz36zi+9agUuPcBIW7zIM86818ai
                      PZR9+rya3DS9lm2UvQCPfLqaRCi9tjkUvXPpu71dPsW921OQvVTK87yBCpE99eOVPSDYiDuYlbC9
                      bN2nvPLWSj2w6ny8oGVau3F9nD1k8+M8uXGkPdAASTwYVDm8hyy6vWqHkr3aMx09XsgiPSARCb1K
                      lyM9qjKQvUB6HzzwNSo82Ps0PEDHlLqWKWI9fxmoPYtqqb3aq1o9gMDfvDDX4zssZuc81NX6PBgo
                      j72gaMO9qO+1PI9gsL3Snic9skkHPZ5RVD0U+M68AeGxPXCKXLwEK/g83fq0PdqSbL0gUKi9FeOY
                      vUp5rr0M7rc8lECVPGTj/jxopNS8yPm2vZVvgD2eoC89ZPL1PDaaAL1ARiW9435YvUyw4Lw2uoK9
                      fzivvXRvsbxe7VA9+I2avFhdwjxOojk9iqO5vehQwrwndU+9+RS8PQBwIbkU6fS8AgtqPTjQibx5
                      arg9DY88vagNQTxFj4C9vf6PvZgj/LyqZVg9iLrJvV9MnD2Yqqo8PB3UPMXbsL1QaKO983Kwvej+
                      bjwCiwQ9wG8tvUnPsj2yfWs9YD8uO8CVj71bP8A9/z7EveD1vrzhacQ9WdyLPYwZ87xFuIO9ndvL
                      vV/bxj1Jj4k9l4u6PYaqHz2kMwC9kuQSPbaMZT1YUKI8ALEDO8Pny70mCBs9xm9nPazhyzwiWqa9
                      LODSPCB2nrvqBXc9gJqDvWb/GD2olYq882vLPXC4Vr1mS049Eq0EPTaLeD2Qcp+9klRlPTAYFr1s
                      Re08xqyfvYAPG7yAs7O6zW4ivdo0bb3r4pU9AoqhvWiRATxtCjO9+t9nPd5LTj0Gd6e91EStPBY7
                      Nj3TRIQ9GGhCvF5XGz2474y84NWhu0wHobwoOYK9MrCwvc0ikr2Z+ZE9KxaVvYJcdz0w4su99KHb
                      PFRLzryYkWI8iMOrvf49Pz1+bEY9gSrIPapvUr0m5ZW9B7t0vdP4pr29Iki90CZYvHAZLrwUKd28
                      qL8TvA82vj1sffq84NzJO0W9vD2QHHC9abCPPUxc+TyqSh49ENcaPE2tpL2gACc7qJJ8PDvlyz0A
                      ZJe9NFH6PB3QTL1IZMq8MN3Fu1gdfrwAka69FbSzvQBqITxAeOK87GvSvAzP97wAOCu6MGptvYB2
                      HLoACL485Qeyvagqfjx/7pk9wQCmPYqsob2g1kM7aEeEvTvlmL2A8rI63eaUPUCearuDQsE9kKgY
                      vRnHjD2QLHK84kydvcJjqr0EF9I8xL+IvTJ2BD3wFBy8ds6Ava1jTL10Z5e8rb9+vRLfCD0aPx69
                      Go+EvW73ET3AejS8sCmhO5PsoD2owJi8fXGdPfvSij2YGIO9mQK4PVN/nD0IlbS9qTCYPbRq1zyC
                      GxI9YBByO2K1QT2MKPo84nkqPUC19DrQnCW936vCvYhlwr2A2YW6OHm8PFfpiD0A6Mu8hjM+PThl
                      nLypoYA998W/PVreWL2gVLc8xQ6OPRDZQTxiJMi9qsdLPSBhEb0Y8aG9JsgXPQAZWjxQ8rQ7wAFr
                      vP0bsr1At7G9dCyWvDfuy73w0Zi9+M2/vcDUc7tiOKi9wFTevCcvyD16hya91hgNveqBl70iJCw9
                      DWOYPSkZyz0W0QK9JBbtPLrZur36tU09At0kPfhfpL2ofGE8qQXMPWMXeb26Nm69HUkkvYCi87ws
                      meA8Ihm0vWi3FTyo3em8UEl/PBazaD0Q0CW8/QZ9vei8+7w7BLm9xrCQvQZbk72B3YM96jpUvdPW
                      b7144/m8ssQjPaDcVL1sV5+8gG+sO3qqAL0X02m9jg+GvexR8TyQPFk8y32nPQNNyb1a1kI9iySE
                      PYZgXT3wLlg83/6+vdMrQr0Ih8+8sLBfvXALfL2wgkk8AOvdvMpZir2yMjQ98obBveJiTT1WSxK9
                      ZhECPcTE4jzKBoq9h+W3PYmnhT2aYcC9G+iovW9itz1G1Cw9PNrgPMpwVb0moXk9oBCDPMIpXD0V
                      1pi9gbW7PTJbt70V2Jg9KK3bvBpwaT0rApK9kgemvQDRdjpASiW78rU/PUyUjDxgtz+7RtVPPYAq
                      m7wOcZG9PcGKPdYvaj3v64s9dWCvva3liT2nQhy9G6vJve4HeD3voJQ92erFPXRRmDxBJME9vXpk
                      vbF9qT3DFLg9akMBPSAxhDu26AE9uoGHvcp+HT1Yuau98u3IvTDqDzwZRbk9Xd/DPdU/qz2Rw8o9
                      yG7LPIoHEz2SOcq9vwvMPYZ7dz3otoC8eiNSvQKjcD0aVGg9B+nFPYYQGT1SE3E9/d2UvaUnmj3X
                      jcU93e+rPVnOjT3JmaQ9z0O+PZCPKTx017O8GZO/PeD1m70x1r098AZcvNAKNDxm/4e9AIhZuqUL
                      yT3DD2u9ekNKPeA+2jsc64G9VcGNPfBsNTzCxF89aHlFPNM8eb0sXrg8i+WkvUmwkj3xvpA9IjhL
                      Pajeur1K/FQ90Ijzu7hshzxzg6M9HwDMvYIIDj0dwki9uhvGvTMEjb1grSk76OJdPNiSKLzVkqY9
                      AM4zvBCRJL11uIe9uoRqvVC9Mjw0L968aMgZvAD8C7rCuT49pP3/PAlYyz1t7bm9Pu04PVZRbz2T
                      WJy9rqmdvaitIjy0P+I8EL04PD46pr226UE9yWSGPQBlHDtQ6Im9k1qpvQ0Fnb25haQ9WROIPdMP
                      Xb0k6PA8wi+avZaueT1ssos8aZKPPZaUCD2K12Q9gDJQvJBSvb3A9ni9IwvKPX2fpz1I6bW8QJY7
                      vGVRnj2aNZa9Xv8lPf6zZD1oM8S9oDVOO1Ppx71a7Xy9fU95vc1cvj0X/ce9GHWUvdAnDTy+iw89
                      UL7DO7eXrj04oeu8apImvUnhoj0Y0qG8IuytvWB+v7zpJaI9LY0+vZSr07zFmLU9sIoIPMACLbwN
                      73m9YrgqPSEEgz3Axqa6sNUDPHBkTTx/mKk9S/m1PbTdtLzoUfS8/eUZvQDGlrsU4bo8csI1Pa0f
                      pr23o8k9goDMvbA5FTztUqU9b2CFPQLOOz1aWAO9sKQQvWCg1Dvno6Q9EROTPQJto70ocFi8MJyS
                      O5v2jL2k//I8wPuvvOJ3GD0oT+28QDshvcINAT3hjKA9sAvIOxMjtr3A3RS76qJXva3mJr16aGG9
                      BpJ0PbhOubxXdDC9K3K4vZ/qsL2kJwa9RLrTPBBZgb1EfAi9WLunPDBwnb1fVsG9yNnKveOXZ70p
                      z6E9REXRPK7YPD2gVC674EPUO11YP72+1yQ9dIfYPNc4Ir0so7K8c/zHPdBNML1ld529sINVPKjA
                      AzxAOF27EmtkPRyh3DztM4893ZqwPQgbwbwAlsy8LlQXPRoWsL2/cZw9+1ChPeFuqD1Tf6g94tEC
                      PU2+UL1dU6I9oGGmu60AJr1Nlz29KDObveOEVb1y9Cs9sASNu7Hywz097JW9PUSavd3cxD259Z89
                      lGzaPAzj4Dyl8Zm9BY6oPQAsrDxoYZW8yyvHveWbn73staE8QCgWvee8xD3ydVU9gNfgu9pQi715
                      Bq89w3EfvbZMUD1o2ZC9Ly7BvQIkIz0QE1U8NlWVvXJ3YD1sPqo8K226vY9ctb2GraW9jHPGPLMm
                      jb3Icey8rHcAvXlVqz3AVC273g9BPQC6aL3ny329qh5LPfhZmb34oZK8jYdfvT0cUL2YL2k8h3ly
                      vfDJJDy40vq8CoU1vT58IT2qLgU9+tYEvZf2tr27Oqc9eRKGPfzXir1SapG9zMqAPGQk3Dzho7M9
                      Cq9mvRpRPT0q1g49MPvGvYC7VjwqAng95q2HvflMpT0gofI7MN6rux+niT0dFK29GEdcvKthwj20
                      66O8lTe2PV9+vz2jIbU9GvBPvSvqsb2A5Qc6Jc2Pvez4hjxoJZs88I5tvT5qej1s+uw8AMBvOO35
                      Hr1ZDY89i8quPeCjkzwoOnW8yGjIvZMaPb0B4LU9AIUePClFkz0A6z48j6jDvaCthDsw9F68aCQ9
                      vLajgr3oTBe88KFWvfnijz0ruLY9OwSqPU4sVT19MC+9ALKbOTBxdL0mC6a9sDNGPLzf/Dz0ep68
                      8AckvIA0CrzBnJg9FbevvR3Ygb1B3po9wAsXvTBhHb0AYvA5wPQovEC6iTyxF649wNV4PJbZSD3u
                      y2U94dmLPYxzgDyCJC09kNWyvcBWxLx0ra08XSGRvSktxj2/3I490B7TOyZGZT2+kE49LdDDPbSt
                      orzRbKU9JtOGvV3rPL0lZ4Q9sPBxPMgxjbwbn6c9rB7vPL2xcL3YMcO8/UuyvSLUQT2oR1y8bC+m
                      vDNItz0tL5892w6ZvUCZObvY4zQ8yDiLPIN2uT1hOJo9Gj5OPePAc70BMb89aiNtvWCcYL2gJ029
                      8MohvFS2iTya1Gi9GZaFPeS2/DyHKcq9y7mkPdhNrrzDjSy9P5/CvfDsSTzneY495TjKvdhjG7yq
                      kje9LidgPRJkWz2+ikc9V3EsvWiUzDwQlp69LN79vPc1oj0CUGI9ut7EvTINAT0UQL88+isAvYD3
                      p7tSRSg94osePerba70ov6i8IvAxPQnUnD0CuGo9itgcvXOmdb3w0bK9/rULPb2OaL0avWG99u8L
                      vT/svb0QHyG9siS2vQyICb0CYpm9caW0PaAOVb1U/988LAkHvQjyrrxYYUW87QatvYP/P70IKq68
                      WhUTvZJnqL02R309BhZZPedlTb0Y0JW8HutTPcRi0Dzf/bU9HPHrPLgrz7zWawS9HF0DvbcRqT0d
                      vxy9yHORPC7GOj1ieUg9T6KfPToJNr2iBjc9cJpdvJiJDTzP0ok9cOcFvLcwHL3gvZA7p868PQwU
                      z7z2mio9YIpJu6CByzw41cA8MGlGvNhpCbzWTgs9Oq0ovXDzT7wttDG92PnMvL1eXr1GsTs9lcfG
                      PQBuhDvjaE29sEzqu9O2nD2SwX89RhEzPTmapD30pPK8YYXIPSQL+DwgY7g8WPqAPEpWUD3ItKm9
                      YYyAPUP2mb0oqUO8Iz62PWB+6DsaYWE9WK3svCi657zzXyy9sCnjOyr0Lz1RssE9J0Qmvb5xcz1P
                      BI49bhxKPZiRt71Q6V69SUWhPQg6mL2IRK+93PXoPAAYMbiKj0Q9WDLIvQpSez3X7sQ9ZEwQvXD/
                      cb2xG8A9HSuzPYX0xz06Nzo9s3OVvYh0rbxwbFy8I4dmvSiuXjwD6I69hs4/PRWegD3YiwE8TDv7
                      vLT08bxfp7E9WELDvCQd7zwa4o+9cI8+veHYiD0SUzk9VeGtvUpZqL2Ebt08ZCHqPAUDhj2qJBs9
                      6jUWvVFagj2TiEm9rzq9PfG7rz0sQ8k8FOO4PLtilL0OgDQ9IYW7PbSViTwwC0q9WNkEvNwBDb3s
                      9Ai9PrWgvZo6CD2a0h698yh3vTJ+fD3Toyu97miXvauUoj3iDxE9cyrEPfdhZL2aFyq9nnErPc5V
                      Dz0wxaa7GqqfvUwdzjy5xcE9+gCIvfgykrzAv3O8flGmvf59fT3jN4I9V6QpvdCXZLwAcB69gJLB
                      u2rSLr312Yo9UI1UvGAjGDv87uk8hlZ3Pf/zpj3rr5+9auKtvQxGkjxg4su7Z8O6PbP0uL3kePk8
                      MCcgvNTpybzuNX09gnkqPcpkOD1HXzW9bOeiPEIBWj1tX6U9AP8aOsDpgL04Ff68XSfMvYNgsT3U
                      PPI8S52hvWbGez3LQMu9bF2hvIBQ+zpSpqy9qHQUvJBFPTxiNra9vtBvPevFnz0YKcI8zelFvYJm
                      tL3kPPE8ei9CvagXsjwwx4I7AAGfPHSR9zxXkHK947+uPeG5pz0npcg9FpAaPf22cL2opou8gNb/
                      ukbkSj0XVWi9Uzy4Pdm3hj3Aejq7s51qvedDcb3dHrM9pd2FvW3KP729wVm9i3G9PZ4YUz0rkMq9
                      aKQwvNo1fL1o3qK8uRmgPRhZCbwiDaC9DHLhPMA7db13ODe91L/qPDdGWL2CH109FUK2PaArSjsq
                      FCI9+SmFPcBwgTz96K89i0S3vRDCjr2Jep09qlpdPYIXsL36DAi9gIC+vBjpFDxU9PW8dh+WvTYU
                      fD3LMMA9oBCiu9zR8Dx0xJ28KEP6vKy7ujwoUqC9YM0cOyAwt7xgdba95CyIvUDwpDxMIoy97zTA
                      vWsEpz1UWL48LXDHPcV7rD0NOJm98JyavbQq8DxPWcQ9o55zvXFZtz1odIe9PVSNvfu2xr3In+K8
                      J9C/vdOoPb3P1b29qiwNPcDIEbyAY0A8opkrPR0pLb2gVhK783dkvVsgvT3NYJg9Yvk3PZDuBb0N
                      KEe92vRlPRB+Pr0jFjS94pWAvZuHjj24A8y8eAWxvWhuVLyEdPc80JCmOxL0Fj205rQ8aMm0vCX8
                      mr3A9QA8W2ayPatZmL04yb29EE97vOAoxTtgU/y84vTJvdr8M73g/q69N41qvZEWoT0NBbu94IRV
                      vcgvlryiLUg9wKVsPNCqA73WA6u9skiJvetHqr29fFe9TgMJPaClrTx51IQ9ynbMvcfNQr3LmcW9
                      HSqjPfIxfz2AI+K74F23u/uRqj25Rp89NJ7pPFJfFz3T/F+99J2AvWJSND2F/MY9iHnLPM1Djb3Z
                      tLg9MQKFPVYTBL1+bpm96jQVPcP0JL1whIC9gDCvu2MOoj3w3hO8UDFqvR1dtT1HcH29fVDCPZ1R
                      nT2Yzt68zo5/PfK1cD1LE6w90BkmvO2Uuz03GyS9oMjsuyjx9rzrsLC9ql6Mvevhmz2S8L+9mb2U
                      Pa+vuD2/1ac98WC4PSizxjywF6i9IhpIPRecI72EWeU80JOju5oqjr0wFYS7UA5iPFKTbD0Eduk8
                      VaqjPVDmXb26nUI97A8IvY7/az3yQUw9OsMAvSbkNT1gxSs7OwKRPSjItbx+iJq97hA5PfKbXz1A
                      qKC8dKa3PNhQg7yYFa+9P1GzPfbHTD0kl/s8oJi8OygnALwT0ZC9UQaKPalwyz2q+xc9CrJIvTH0
                      yz04AqO88k43PbDmfTzY8j88nUm8vThaiLz0fcw8bN+mPFeue70N6iu9Uei1PZEJiD1WEms9xB7W
                      PBdpyr1SE6S9iNLsvLCBPrwwfDe9yKK+PIzNwLw9q5c9uHq2PKM5iT3WQU09AjB2PY/txb0wcHK9
                      /F+CvZJYaT3HZLO9H6WHPeG9iD1IbKS9iCWvPJ2SxL1ou4E8itJePX32hz1KpkI9SPG0vQXKk72w
                      w6C98DfGvWeuHL2YQoa9unZAvcwLhbyaHls9tKHVvKBybb0JKJM9gCh8PLZaC72eFFQ9sXuyPd1y
                      br2Qmwo8ec6lPWVElb0059m8KnU0PVwK9DwAkgm7QkoTPUmzmT0jX129Beq2ve1twD1Furk9AFKB
                      uszTzjxhb549cCpuPND46rtA4bo6gKGqPFDeTb13M489eM+TvV7RWz2CTIW9di0DvdQa8LxNP0G9
                      gPy6u+OxsT3YNx48NImZPFBTAb3yBQU9jy6pPXCJWr06hww98lA7PQ/XsD3M7RW9GG7mvCQF9TxU
                      Uc48TcFcvRAGQTyTaaw9EXvMPcIOST1izjI93EWGvXOOxb3M3tg8K4eRvY45Cz0TUqm9aSmEPY6N
                      HT2xIqA9bLKNvACPLjoA1KC80HqbO+5xDj1zx5o9BYG7vcbzi71TEB29Zfiqva2auT0xvr89QMQ8
                      u0Qe7zxiRR09QitTPYBcf7wzwcU9DaCHvdisjLxq0Qe9Jm8uPdAXPL2fh7O9QxR/vW66IT1zm5U9
                      oneKvSzB07wAa6u8WFzCPHHMrT3rSMq9+G67vFrtX71Aqnw7MbCaPcJgHj1AMso8gKLbu8zQwzzC
                      vSE9skJ0PQBqCDkYtMu8ohF2PQqCF70c2Bi9AI1svdr+hb3WoG098L/DvWNebL09+689/GbTPNAV
                      ojuZO5E9D3qRPSHGnj2TLJ693f0bvSCjZ700rIA8PVDIPZw0C70AMIi7wCJOO5TihjzAa8m9WAAa
                      vHtFqr1oR+28YJtLOxMfKL2bHsI92HVkPCoWID0CwE09sUuMPY04lr3ouro84aSNPaKpBz27l6A9
                      qBcXvGdGyj00ZcA8UIkivdd1v71tDVy95u2mvZhUsjzqcAE9dWWYvUi1nDxANx47Ws6AvZK6DT1N
                      Pp49Hv4LPTXDqz0pvJk94PzPOweiQr2uaH09N6FKvQR3zjwbQ7y91WWEPULibT1TTsW9wGNluzpx
                      Kb2S3B89ysxMvdMmqD1QDLA7jEbdvKgsfTwQQ8y9t/YnvfCRWDxhC6o9O2S4vRIDLj0sOck86fG6
                      PcDvRb3AYoa8LFAOvWgu7bw381C9MPySu34CcT1FiIG9EZmtPZqOj72tjLi92FkEPEChm72qvLm9
                      p8yVPaHwwT2KSRO9RpZlPWmjuD1vl8G9WmMtvfDBe7zu/oC9YFy1vUCJEzzzISy9WNQKvOjChjxg
                      XqC8GOTFPJhXHrzK+2A9ALGfu6DSwjsZHMk9ULUSvORszzzDTWa9Jei1PWqCTb2wfYO9zYFFvVC5
                      Prwjd5o9QyUvvc2eS72QGnK9gF44PNCmJTynS0S9utpSvQAhKDvj1Ca9glQEPfaUj73bAKa9tGrz
                      vGdNoz3QPM87YhSMvYyB+TzgZb+8Pz6GPYCqszpKQiQ9ilMyvYlrlT3EtuQ84MFGvdhzdTzQxL+9
                      vZlPvaupoj0zkSi9UIpiPJUzmr0vCbG9QJp2u+oRX73MvPU8F9dmvQCZUTt4aq88neF9vWV+pz21
                      lam97OvSvC1mJr3Nvn29Gs+2vQk0sD1SIS09wEdTO2XTlD1LJLU9gEOmO0oWN71l+Ki9SpRYPchO
                      tjxojrK9NxaaPYA81juWcU49UL1Mvdq6WD20uwG9WH9DvKjug73r5qe9/sFaPVOozL2XsbQ92XCz
                      PcNDWL2aFMW9Sk1RvQ2wjL2BII896MMXvEI5Iz3Ki1k9NOadPCD+i7yK/G+92OV6vMhGw73Tq5E9
                      Y3hYvV/pwb2KGLC9bjsnPclWgT0D8Tm9OlJNPcWVur2qDWC9+klsPZhYC7z2BZ69wBVRPLDbKTyE
                      PP88UFWpuwB2krmCBkA9Io4jPe2XwT2K7wq9bBGnPEWryD2MBYU8TKHIPJWbtD2LC4s943aOPQUZ
                      yb1Y9zK82u9gPeByi72rNJu97PyEPCqgk70lp7E9EZyUPXdWJL1Cw2U9BcaBPQonjr3oPp29dMD7
                      vFBtwbuCJRk9KJe+vJQn3zzJm5I9rLAJvYLCgr2AZVW6gMA7vbTRkDxgiG27C93LvRrLWz1AU8W6
                      RvePvWgEm708hhe9qPy2vVQD27ypQ7o9ZOH/PKpACb2sBw69pCHyPMZsfj2Ez/I8itxkvTuSmL0Q
                      gxC96xqRvbB8kztYwRW8gk6tvTbeNj1GJ3U9sIIxvceMvL3UXq88BdWLPVgoCrzX0ZY98Ks/vb9q
                      uz0VyJE9MCtXPI64QT2Wknw9bmd4PdCHxbvSeV09mcu0PXY2ND0MmIm8QDs0uzbgHj2jHkq9YsgS
                      PRWDvj0sWqy8RiYWPShMy70AAaW8oDZSuyiOs71FnKy924OdPeCl0rtj3B+9v+uMPWBy1TsCwGI9
                      0yyaPbAIVjyCvlE9TPSdvLJKib3KKpm99WyfvQC2pDksFf28/XuPPbkvgz2alp+9sYCuPT7LUT36
                      noS96x2MPbiWib2AGjq6lELnvApMDj36CWe9riYvPSuBrb3MAoG8djlwPeFdgj1dgLI9QtJgPepK
                      UL3AAdO84jQZPbj6kLygQxC7tBzXPCgTMLzNhUi9gOGQOow28DwWHTU9yB7lvEbpDL1Av8689+5P
                      vRIFZz3poso9gKFiPCyNtTyFtZ49l7u7vfKBr73dM8y9FUqHvagJx71IZJK8kJpOPAPxub1gufa8
                      giZgPQdixr1lcbw97SMsvUgdqr24PcQ872y8PTKKVj1WG4e9CnF/vcbCEr0zw1e9Fa2cPce1Z70f
                      ipA9iZTGPeePsb0LusC9oWayPYwSjzyszfa8GRzLPY1qw70wiSm9ZZSpPYhEwrxoPNu8dy/HPbYA
                      Xj0tA5M9MRW/PRMjIL1117m9wJc7u1AearyoZDi8gJWIPCDmm7yObks96ncavYBY8TrHka09IvZt
                      PbQ/7bwJ+rE92h96Pco0br2pzoI95Dv7PMMHjr3N/Im9WG/7vEfUmz19BFO9jIffPFecc71hYKc9
                      sGHyOzYCRT2LpYA9B0uSPTaZAL24Drm8A72+PaiytrxCFZO9JbCvPb1mHL3AvtK8YtcsPUfxv71h
                      aYg9ffRHvVg+Kby2eom9A1LCPQCBXryabBo9Epa8vSJhRT3AkGY7hmsXPZ66Gz0BVqY9QKvJOsAk
                      4LzHGEC9inqLveiNJbyKohs9Qrk3PdDTar0gise8JzQqvUCLdjuoGYe8ACxTu+zi6byrJrg9+nSR
                      vXSj9zx4Yr69l68nvXB4iL2G3k896s0qPcD8MbsB2Zo9FDD+vCokcz3k+9k8AKWxufoTmL3DuWi9
                      9ErYvKitPrzzw3K9MmqAvTIytL0eCAo9hJQPvR0zqb0isw890UKFPUsppb3ALhq9x8g3vYiWoTzA
                      31S7U7OsPdc7er2Ubfa803BGvaDNADsAPPC6MyXKPfAqTrzr9Zi9FOyHPF5IND0IFYG8KAp8vPMe
                      lb3+JRA9zCfuPIFznD0hga89ABkjOo6WgL3kEdU8Q+x5vboVRr3AFti6WcaDPSiqwL2HEKk9oL0Z
                      u5BkObwVY7O9kqYwPZhuADxoIVm8IdzAPejJXzyQgnC9IBauu94ZeT0P7co9NO65vHK7Zz2s24e9
                      PkdbPb4BlL3Zkb09ioxfPWu4vz1HcsM9QKp/O0DEZbtAddg6ABdZuwppez2gPMA7R3KvPdC+YTxS
                      yxs94BpwvaofKr1sgt28AskxPTtoxz09jpq9YGB2O/3JJL24evu81L7aPMA1nrzHZqk9PpiVvTip
                      27yUYIq8Ks0jPRj1xL1Q9gW93qBEPQkiiz2tiLu98K4nvS4GSD3KGBC9XTSEPZcWSr2gFTa9x+XK
                      PerKcT2Ii5u8cypNvQKsOj3JWok9YYHMPSUmlT3ncCu9c590vcyOnbyCIpG90+avPUZhXz2ECeo8
                      8YiIPaqrYD2dcRy9hmhcPZABbjzoMuK8AJbKOeh1DryQZy+8jIHlvOiGi7xYmwS8oyyjPRsFkj2w
                      Krm9wnQkPYmAzD2NcZ89VllgPSDzyTzv28K9zLnJPBd7ab2bGLA9WAV0vCJ8lb3j9B+9EAMvPBhB
                      cTz+HGI9olmcvYIOfj0QbBE8B8PFvUD7UTtovpO90ymYPXpph721fME9kvBtPR1unb0QcVm9mBHr
                      vENIQr0i7q69kqNcPTDOzjvAZ5G9sC+wvfhdkDws55+8o5hsvVLYVT1Juoo9ENaPvdAkQLwYlhE8
                      t/l+vQCxIL3gZI+7MN6Fu7CIHL2dbJ29s7WvvbNWuz3LmKa94qlmPfpgrL3Ae1E78tm5vVBPtzuQ
                      cCy9JmlMPcjO4rx8oM08MNFjvYq8Ur2hs649AEsePPINRj1LRcU9oAN7vTBo3ztfkcC9Gy+yPZ3D
                      uj2QjG88sIHqO1jgR7ym5Za9J3tbvaDB6bywy0W82AKmPMs4mL3Y9rk8PWwpvc1QI70RgrY9iv4P
                      vQhwvjxAkAa8I3iMPcOtVL0Ps7c94YiZPXqqo72kcAW9KL20PHcHwb0wQKS7qq0rPcxLtTxsULi8
                      D3WzPUChYbuh5bM94MDvu6cGu72I6L69Krt/vRgZ7LzAunq7AACsuqys0Lz0trS8dneivdIMZj3L
                      qrQ9tVm5vY8ToT24HcI8oIYFvQCRg7zBrKs9jx7KPdg/VDw1hY+9Aw83vcCxqbzBXLI9SBaCvQQ6
                      Gb3qFGU9ACoVuf+cwz3An7a9+cG0PeE+rj02lTw9EjSvvYvLlT36I1G9Z7EcvfPGwD32+HY90gh4
                      Pc9NzL30KIg8UqKdvQahAb2oYmA8FBj/vKjOwDyqEyA9vcdgvVvonD0+Ozc9QULFPWMtnj2XFaA9
                      krAxPavSs71en0U9buFjPQB2Ub2qZCY9h7hwvcNUgj1edzo9HeWovRdCJL1aHF09woi/vcD6rjpA
                      Gay6qCRAPDqWTz2wjKo7TqNMPUC7oDoWaho9oYusPeBjv7u6NHe9cnubvaBFeL2sM6E86eS0Pad7
                      uD30x6i8QWKvPd9Vkj2kLew8mL9BvGCW7Dtoqp+8igSzvQO4yz0oK7i8hUS2PQ3KxD0dN1C9RuEn
                      PZArIb1k5wq9QAGxuniig7zz94o9j5ecPRvyxD1AonK97BmMPG4cKT3KpYi9WIP/vL8YiD3am0u9
                      s+xHvbJ2Kj3A43e7yqVGva11ML1dNyy9GnEnvTNguD09vZs9HSJ2vdhogzzo/GW8oTCUPZopvr0Q
                      zhk80Aelu2A6m7wNlUe9+A20vDiBmjygXEM7UAGLu92jnT1i5ic9wIWovaGVjj0Ux5u8+3ujPRD5
                      mL27uKA9oEeZO3N0gD06OGQ9aosgPQCLGLrAQom8juJpPa2Xwj3AME28SKGYvdJgSz0oTY48s+xC
                      vZ2EpT0AB0o7NdTCvcUrtD2gd3W9cjpOPXlOpT0cDf88UkMwPQCcCjuDuU29NKWivEh5mr0Es9g8
                      yvgYvY5qNT2Gdgy9BZ/EvXkmtD0xrZg91w9TvahmFrxiRUY9sylMvRCqTbx+nzk9CB3HPFABZrxb
                      q8k9otRvPahYX7xoBZW8JE8Hvevpwz2EOO08bR5TveLZtr17u729UrAaPSeua71qX2C9Ebm+Pcka
                      tD0A3sa70xrBPdIvaz2Dux694IK7vKBWfrsDybg96EuWvMhZlr3YJHM8Hq8OPVFDhT2+vaS9Pcur
                      PRCfM7w5+cY9YFwmO1jq6bzkC948ql4TPW7SCD2ITZm8S3q7vdfse72Zdsg9dYitvY03Tb01Fa89
                      kkKnvVB2BTzNgqc9Dhk2PVTip7wjNoI90/+fvdcHsL1HIcC9uyPDPUxk9Tx4/KG9iJmzPAAuh7y7
                      O8Q9k35PvTdZxT2NfMU9spR3PTLBm70h56E9mnsMvahfwbzSAy895yTHPWIRdD1RIYk988eXPYqk
                      Ar2mJZq94kVYPYDnVjwcxO08aOC5vBH5nT3JZY49I8KuvfA8PjxTHaY9mz27vYoLu73eM3w9AkNy
                      PRA1PjxEzPA86POcvHmWnj0QSTS8M4DIPb/joj1WWxY99VzIPczthry1LKm9ACiLudQSrbwHj169
                      HWQavSjcrr16wLO9bRVmvTAgfDxaiYe9hFTdPKyFrLwKzAW9FA6pPDiCrjwaz0a9Ev9HPYAb9ryj
                      jLy97JWjvCxzjLyY8nk8+sKtvZ0+oz1yZ0c961a2vWGbiz05qMA9APvQvOXJwb3FDoE9oRG2PX0C
                      yD0OraS9IUa9PQEouz3ut4m9YVWUPTDyQ7zqm4i9uNObvWHcuD0QIiw8ftqJvagUHLzA3n+9OxOs
                      PVBCXzzyeTA9p+bFvY1Rjb10xqK8QCuKOhu/sD2To6K9AM5EPGILIT1IEcm88YGxPYMtG72v6Ig9
                      4uxWPQDsqTwhCrI99VOWveBu3zs2/SY9CNyyPFB9xrtixSs9pYqyPUzdkTzQG/W7FsMXPVpWMj3m
                      RQE9LVyavdiQJDyS6R49+yOgPQ1Qgj3KAgo967yVvayFFL1jWog9QEf7ujjCljw54KI98qdXPcxY
                      7rzAXJk6opikvdOqcL27Mq09ftxCPWmurT32JjY9DDeDvJmmwT1bhbW9Hj0dPTkxqj3edCo97fyW
                      PeDvizzAGmW7Lo6JvdwvCL02rzg9cHYvvMRmDL3XNSa9/YeTveLUVz1jEKQ9WCIdvGOXcr34SL48
                      PbiIPWgRjrw6IB294xuTvdPnVL1Yj0Q8AEQOO1DqF73i3DQ9FUKhPaDDO73QjlK907SkPXpakL0q
                      8wo9QsatvXTIFb0U6ge9oOWdvVqUDD1AZ0k8WvEaPQJcOj2LAIg9M46RvbDhzrvPysm9vOrOPBji
                      ZryMo828Hd05vWi6JLzEzuA89/6wvRPcxT1znG+93cWxPTKdMD0T9z294VyZPVjjVzzgSby8ozU0
                      vSSl6zwGp5292CZ6vADET7mdwFO9GhMIPSLyZD3QNY47EDg5PDfuTb3A2tc6dBzpPKMmtb3AsBQ8
                      uv6gvUj25ryw4HQ8SvdDvfLmHT1/0b89+Q24PUwLuTzYmNq8+lI0vfgNsrzwohG8K8K2PR27hT0h
                      8sY9IlZ2PeYDUj0xi7Q9Q6CKPQC4yrukHdQ8ZO7MPEhCqL1R0YQ9NnFbPWBxJzvWyy89Y1fHPUYr
                      Tz0T5cs9DeVlvcJUaD0A4lQ7oJ7KO9CjJLxidoi9WJ89PAM6d7313r+9YrsCPU5QET0AxcE5stpJ
                      PbS6lbxZc749MA+ZvbjGrzz6wVs9BbWgPdM6wT2oK+C82lgCvf1slD0thog9OmvLvWwAxjxgh6S8
                      gvUzPeGkwz0Qbsi9AD1autdWfb2YbB08eu58vYvJkT2r76W94smlvePrxT1wjQy93xi2vQxTFL2P
                      0ME9rGYLvfxvF71nn1+97kB7PX1ptL0g9Ku71NfWPGopXb0qgx29IlwUPWCrdLuABp+6ZAEWvfoL
                      RD1dUbg9GHuRPMgrlLzqAAm9u3ymvZK8Mj0aCC89bDGVvJLvRT0HaYU9iB/HvTVYmT0AoS86FpUL
                      vWZjlr0tDZc93SVRvWBykbyu3wA943Bdvep4lb0jOq49/apuvSLxDj2SozU9Sip2vYp1A70ZnY09
                      6gdqPVAUxrvMHoA8CMv4vMpQV71zZUi9UBwsvcWGtr3YdY29eOO3vHXDwT0zs3u9bilPPbKjPj0A
                      pgm7UExKvF74mL1ModK8nZ8fvVXZmj0gzNW83c+SvddczD0BCIA94I2HO1BJGbzQ0yS902glvXKJ
                      AD1YTyW8LEHiPCchU71yp109sKisu7gYkryAV6M7BIX3PGSJ3TwABDc6/46JPZ1xpD076JU9VK+C
                      PCy8/zzTHMO9xBnPPNyw4jz0j/U8FEudPFkdkT0Mp7i8mPBGvEpYmr26p7q9euO3vZifGLzAx1o7
                      /C7NPJHQrj1x8rE9aBvJvKfBYL0PnK490AGzOwDq7bk1fIM9r1GyveC7rL3YVBS8aA4AvGSZ2Dy1
                      Kcc9w0WkvV12vD3i6DY9/cMyvRAULb1XLKA9kOMIvVJudz2DSLq9XGHPPNRIE73SPwI9qAmIvUoE
                      gr3jQ7E9ReiIPbpLFz2ojRU8KBNZPBATITwQ5aS9W+elvWLQbz0jN4s9MPZFvVlovz1qYVG9bPHT
                      vIJAcz0D7k29kt0sPcXqyj1Qpc+7ABSEOsUgyT3onBA8+jUsPVp0cb3sups8qT2tPaiJhL1qKgM9
                      4HGaPOnXwT3Ch4e9jtyQve/KyD1iSSA9woZ2PaA79TsKUAm9WRfIPbMun70A36u8YPPlvMLkZD3g
                      Wc+8VN3CPPkdqz22TlI9IL6YvYCnvrzNoDO9ADtCu6zvujyJxJ097ZIsvXjwzrwIAfW8MLZmPNkK
                      mz0r+bG9LwOsPZCSYjzFUsc9AGL1O/supT0z55q9wF+Rve07Xr2a3ZC9gE3cOu4+gr39hDO99zW9
                      vfosKj2AE9K8yvdmvRg8hLxSNzc9BTfGPUqvDb1JkK89Igt7PZbbXj3XsHK9tYiyvS2pr70rQru9
                      TfjCPcK/lb1vtK69SSOcPb36hr1xK7890O3Xu4zvozxmnRo9WOqcPMybBb2u3UY9WXKsPVq+Fb1t
                      6ow9c8kmvf6Mlb1wFUS8Gr+VvfsxgT3Ic7C9WlYyPVPVpj2JFJc92M6jvQe1ZL2ukpG9uZCMPeGL
                      qj3Efxa90P+guyfSK71txli9ApenvWdwpD3LdZe9Uei9PfCCRb2aDJy9qEUAvMASoDxyx7O9ng6k
                      vcAyWb2recG9zFHwPCfZIb1wwjS9LVMqvXDOD70iAYe9JYC5vXneqD3txYm9WSSOPc0bxL2Rvcc9
                      WCcIvGCWpbxsCNk8tMe9vDjzmL3s8Ja8p+V0vbBzrLsQ5Ee8YaG6PQCDKjxYXry9rN74PICKFTqb
                      L5I9mlAuvZDtQDxXMja9i3qvPQOCLb0U5aK8eKC8vEDLWrxY3sW9pvJAPQT//TzgyKO7UOZ3vPLt
                      Vj3g5Vy9aLABPADCp7o62k29aFhPPPDENryFo6u9vdSlvQuytD1IKp88MGppvScWlj0DKcu9CsE7
                      PcazBD34Q748SCGPvBh0sTyhqKM9q4y9PXUpnj36UUU9iRrMPYInDD2gbyQ7MKcXPGDwQjvCozo9
                      gjEnPe3fpT0fsMi9MEP5uxqgRr1gkm29jBSHPABhqL0m80M9klR8PZB0eLzOM349cHV0vPCFNb0t
                      wcO9utGWvdAhVbwho749lrAnPXY8LD2JYYA9+B6XvQjpsr1aUCU9aCBrvB18zD0AEag8zMnQPEAJ
                      gb2XkCi90CNRPIg6r71MARG9s7WTPZiAbLwAWCY49AgQvaIacT0qTiG92BGkvI1pxr2AadK6UjJ7
                      PRVuzD2Q+TA8AIbbuQDnKjxglqg73VldvQB7wblAB5y9Mr5xPXD9y735F7Q9tJ6yvDBZ1LsYvx48
                      RRSIvQ9ihz29c4499Q2fPQa5ir1GnwI9YOfEPBhKfry1LYa9xkMSvUYlcz30YIu9gIZeOr0cjb3K
                      tyw9WHu9vFZ8Hz3XV7g9gBbJOpgHoDwoJcY86A0uPFnMkz2r17C9YrKYvch9rryaUAq901dOvSdt
                      c72XfRq9TEqGva5iTz0phaQ9SNCsPNNXdL24d828+scLvUzS0DwCxxw9I1ejvcA89zr4PJs8vb7K
                      vSL7Fz05TqM9ySm6PZC+ery3KLM9oQWbPSChHL3Df8O9vTM8vfr8bj08heI8YEBhOws4j70l3o+9
                      42OkvTj25bwH/5o9hYyhveVljD1TM8u97JOSvCdtxj2oz8q8ghW9vcqoRz1+6Qw9YQG+PZ1soT2d
                      RIG9sAwqvHVnv70SvBk9GjFDPeh5XDzdZKK9st7BvbbVgr0q9yO9AfiqPfZ7Er1QVP67EvG6vYtb
                      wD0KdxI9BaKZPTowEz19SW69KDoGPEOXrr2q3IS9QpmevTkzxT1AIha7dBaEPOjUITzQ+RU84nds
                      PYuctL3q6FA9huxFPUA3gr1qxy89UOvTu4clc72eMy89LJQVvUBgC7wXCD+99U2aPbJLdj3D1WG9
                      wF4IvX+/wz0ieh49CNqPvAJbJj1ZLoM9V9PAvTb8Fb0Tdbe9PHftPCegxL3gFOy8YilMPaD+3Tue
                      TIK9bcGAvXInVz1DpmW94KGNu0CWOb2At9a7Qji4vYBc97vQoYa7CpWmvWjPhrwMqOk87MvXvPfi
                      Z71J45A96KpmvODt6zvo0aS8PPwLver8Kr0DJFq9GWucPfbCST1KLTI9OqCUvaDwUrvTJ3+9neBs
                      vboWFj0JBp49ky1sva1bHL0ByMc9GNlYvGzJ9zwMqIK8zliRvVbSEr0NCSe9EINFvUhmgjzQ71S9
                      AJ09Oqwmqzx1XJc9ZlBUPUT09zzYCBO8Es49PWRd1Twpx5Q9RqtrPQPbvT34WZe912xmveDH0DuA
                      4ps8wB2bPAJ2Kz2/Hcu9gfusPdclhD3o5Ga8/cp7vUOVjb0e/ws9qSm0PWIorb36IR69DSiqvZMP
                      qD0AAcC9OKKgvUCd17oa5V29aLPHPCIkNT0APvo696UfvbF6rT1zqlO9RgsKvTdvu722ppa9Weui
                      PTC9x73iNmI9f5K0vRpnsb0Of6S9cxnHvYAcHr3CoVs9yu87PfdjrD2507c9YAzGvFCuAbwhWck9
                      R1SePRJheD14iKC9f56kPbGHqj2CN6q9evIHPQC0BTlKBAc92VCOPRdPt71tS0e9gDpFOhHumD1t
                      8Lq9cBdIPADG5Lp5ObI9S6SfvWjdaDzi0W891JaZvGKYTz3AuXY7qkUnPWA5VrsvQqI9bL30vPBj
                      jr3tnyi9YFvWvDqFV73kVc08GoJwPbDDor0+kIC9OMSDvcA5CbtAoRE8R3BXvfIjsr2iVIi9WSqM
                      PXo2UL1u2Ym9gDGsvdI6hL0QLiy8Oq9EPQ4sbT2yfmU90NUrvXA0XbxNyGO9Ub6QPXFquD0iWUA9
                      zwPFvYocVj2lhpS9ChxuveqGMT1K1Fk9vZNLvWgBwrySMg09YmwcPaqQMz3qi3S90brMPXApW7yw
                      ca27ED49vSh/NTwaWFg9AAfuvMi1lrw0I4M80FstvNGsgz3JHqo9AnyyvTACFryYxWE8KkJVvQAd
                      4zugAVI7MBVYPA7KIz1d0CO958Gtvck9mj2zzGy9/bugPYxTzLztZDe9Tm2PvdbpET2IgZ68znBC
                      PVJ9aT2YwpK86PNBPJzVB73YgzK8AN9dPDDJIL1OS4G9IDYavZiFbrxQnEm9622ivYX5oz0ZuJo9
                      Y7W0vQBm7TvUbIO8cHOdvQBDyb3MWKi8zYqqPRlPoj16g769Tk87PZ9Qyj2AnCQ8IxhXvWbxZj3w
                      mma8WM8EvBpsAz0yQ5C9JtMIvXfVhD2i5Y+98qA2PXnajT3AOcw8NNXWvFGOqz02B3o9aO39vIei
                      xz2ZsqA97We2vaDpJr0x88g9pFfUPAbLqb2amjy91ogSvRhkuzzTBI29jY8evaC7RTuOy6e9D8eq
                      PeY8rL2HPLe9YgmYvSpDl71n6Ti9QK11POy85rzHdmi9KKhkvFNEkD0wWto7O1y6vYAiZjwBu609
                      BHfjPMBMzbrg6hG96JpBPHDwLb3R8cg9STKqPSd5Mr0M4eo8NCrkPCBir7u2VJu9km4FPaaDaD1M
                      ua88ijDAvUBAcb2FY7G96LglPODE0btcse08EHZGvedBt718Jc08EEF3PAB7P7zdWpS96M5zvHDo
                      Crwdl529V/dOvSafUj1S6hk9MkyWvUN3br2BDps9NI4OvcC1jjyVkaE9UhiQvdMdQb3oa3a8aFOn
                      vDSmFb2yTW09mly9vaf0vr0BGr49n1PIPWg6C7yu4G89gCECurBo8jvqTEi9mIGNvZ54lr1j4Zo9
                      wcvAPUVBur1anmO90FOgvY5lXj2iRW09AN2UOQw837xCdgs9o6VsvbA39ru02Za8U3SFPdQbz7wA
                      Zgg8wsszPdrIPT2tNK09Gvehvan7vz1jDMO90XaFPbJAfz3oucU8Eo5rPfq9er3PZcA9umR2PWBU
                      JrueyxU9g84kvaD8uzwJuJs97pUgPfB0E73Adyu7UiE4PcCsEbvIqbO8Sd+HPfL+OD2od508Iwox
                      vWK9rb1gjLg7+LCFPHkyxD0AI6O8mG3HPIL8iL3oTzQ8WwSHPbiy27wAZXq6Cy6cPaiucrydaIi9
                      5oNNPdqdHD0YigU8mIoIPF25fr01E4m9FmplPVcfyz3a1kA9rzyhPcAbrjwyvh09GsNTvVCHMLzu
                      N0g9Qms4PcwZ57yjM0K9JyWgPYOgoL0Fe409Rwx/vQbUdj3YZ0w8FGK9vBDfbb0sZMo8Uj8PPcJ7
                      Jj2AAcS6gCmkOmrrL72u5Za9baiSPRNwlT3yV2g9DW+2PVpafL1WWhS9zFyYvFtWw71gZxK7n1Gi
                      PcUckb1n4FC96Fm7PGj1wL0Qpne8WJ+0vBKKID0A8sG6I1OBPRDhGL0AWty7fa18vboqNb0w+GK9
                      GId8PNA9uDtNFXa9MByPO0Wnrj2Ab669hgQFPTdiy71U8KE8wAMqvQr/wL3CK6W9YIZtO7ctc70t
                      PyG9EkdYPdbZZj1GxFs9nWujvTQZjryYsYm8KoOtvdpQDj0ybD89A6ZdvcCLTzvtx3i9nNGHvdg3
                      pLzgbE69DLvkPI1CIr2y5xg9MHQ6vTx9DL0N36K9OjEdPZFdjD1mAmo9wPrwOnZzVj03lbG9JztS
                      vR1mhj20zJE8uzezvZ5aQT0oDL69uBizvVpXKr3Pm509wBtOvMtWvz2uBVg9gVqkPQ5sND07Rbw9
                      HpsmPXAXVzzUL828GBNbvI2qIr3iFLO9IntEPWe5sT1H1Z493fqAvSiToL0Mm6q8LpV3PXNym73B
                      b5Q9K1eiveh+wryMksa8ahipvehqk70TsWu9gK44Oj5RlL1zqmm95nQXvZSl+rzL7sS9DGkLvSjC
                      OTyNTjm9JBnwPGQc0DwxcIE9Y4CyPbgdvL3gDeC8gDmwuwZSlb0AGgO7ukAhPYEygz1AJGu89wHD
                      vQrqv71wkze9NEv/PKAHEztFsIc903ZpvZa3PD2hF4E96tSJvWAW8rwCjgs9OP2PvS4AgL0wb9U7
                      2NO1vWJUEz2zBnW9YL3Qu51Yp72Par+9Wu+Svei3bbyAzRq6IrVlPUZefT0wZrK9YJ10u8JAmL1w
                      F769g0RzvdNYO73j2GW9IFJHvbYfqb3vKpk9QHmoOhS+gL1Q4qo7H9ulPbbsAj2gShy9YF5RO04j
                      nr3CNh09XI8SvTumzD0ARF+9YLmSu/55IT2olcu9e7mrvRSi77xGSJu9eipbPfWnnD3GWpi9DF6b
                      vB6VfD3smKK8sD1evcyzoTwBRLU98rZ5PegmGzzq1B49za1FvSNYiz0nycg9y4uPvZQ89zx565M9
                      CF6kvCNxfb0wdim9gPbmu6EbrD3VQcu9jLjlvDAkYrzgEGK9R/guvb00KL1ffpU9jMqePJSI6DwV
                      U8Q9EIArvSiQB7zHDME92QyNPcnioD1oSyK8gMblOrTyvDw4BMy8j5ahPQcLwr3sr908fYyqPWLF
                      bD3Yqms8YMqFuxRVzzyiyi89aJRyvP0LsT1BhpQ9WfWQPXBEub3wVGS9PQwdveoKaj3uNzU9LtpD
                      PbKglb36Ni89h6FFvQDImLuqlKC94MmzO0QA6zzqhJm9CjUQvWMjQb3bp5U9ZVbHvf0Rhb3gAdS8
                      j9asvSeLSr1pwZU9hc63PX0EwL2xIoA9auygvZ6XHD0R2Is9j6eAPdjbXzzYC1m827m2PZcZrz2B
                      PKo9v3TIPeCIw7xk5dc8E3eVvYgxpLykM4e9liIPvTAetzuHvrS9uHuBPAINBT0AILy8YWHLPWD6
                      rbtSE0s96hEbPfRu0Dzh5bQ9Ml20veuKgT2ptqU9gJdOvPAKRjxWMpy94NdjvWJ8Qz2xt7w9i9ys
                      PeT1hr0ygTI94KTouz2IvT0M9fq8KiIXPenDtz2JXsg9Uq4sPUcjyD3G/aG96MJMPPLaJz0smfA8
                      60yePd1bi70oKlk8B0povaDR8bz6Y349wDOcvG1dfL25fYE91PaivCjumb3P7pU9YK4dvd6+AT0M
                      UPO8YJmuvdUdu706yk+9cj8xPXJ9cz0tLq89GafFPe0rwT1zVzq9alDFvVhfub3Ewdw8Fo49PeQ8
                      FL0k8Im9LkgcPWBIbjtVKKy9+sOBvY1VKr2HR6M92rSGvRoZYD0aSza9UAQXvK+Kiz0kGew8y6eJ
                      PcBxGTxYn1G8WGRAPChk5bxN1ny98oIwPUSrzjyqWxi98nNlPW+tvj1QS+q7G6W3vRRGzzyA18c8
                      rSquPQJDmb0APDu8IFe1PHR1u7yiQgE9lpcIvVOSyr3DSV69XZepPYDF5zpNcaS9TbWkPRaeD72B
                      Xbo9wqkOPRaSA71N4yK9tDSKPLBxGTye9X890D+qvcBL97z+u3I9aKRfvAf/Y70Nuxu9ZOcUvTAD
                      tb0HEB29AHp/uzodOj1eGWo9aLfbvA3qNb2BhLU9gpCZvVrMJL3JVZc9MLUXvCF8oD34+bY8sBmt
                      vQ29rb13zzm9V5ktvZEIiT24SN28gO6fvM/mxz1dh7e9gLD7uz1Vjr2gYvQ79PecPCy1xrxg+qe8
                      C+XGvSxFGL0wr8S7oPdAuxf5wj0ptYM9DYOWvZq5Pb37v6S9bKCpvHqrnr12Ri09YEkIO5sgjT36
                      OB29KSmTPQ3mXr10ere8P0WzvXXWm70YCjW8lJb+vKCxarvYr5c8HVelvZk+pD3oX6w8qFFCvOh6
                      W7wGkgu9IG6HvW6iLT0wOGO8kkN4PR0iyT2nf7u9EKxrPBE6pD13O7w9s/afPZMKNb3V0Jo9gNac
                      usa9Mj1kr9881UW+PSkwwj3UEOC8hkmcvVSp+rwBHLs971aPPQAgg7nh4Yo94N2IvDPHqL1J6K89
                      ABUnOt6vLT1IC548kAQovcBiZ7yQQCa8LBPhPFDRMrz2fnk9sF5pPAZddj0jYLa97XsivZgv0rwW
                      5js9OFiRPOLDOD0+mXk9PR7LvUAAfr2uAhY9zjSpvWCrnrugFyo7I0sjvanriT30U9Q8h21OvfeI
                      w71i9zw96QCVPSgEvr324is95+yPPVBrdb1s3xO9HfxHvcsClr0aGrO9mG8NPNjhTTxIObs84B6g
                      u0m5kz3ISqK9WrNLvTZ1Az0aOgg9ClebvQcaXL0gyKI7+F6svKiOo71MgKs8qX6oPcvquD0bYZI9
                      TGLWvBG5hj3KEl29GIp0vLD517u/FbQ9HzHLPeP/lb01d8u9a9eovUyy67zoN1i8yCyUPOAd+rxR
                      0Z09mrgavYl4hj1AZ8Q6gMSEOxPlwz29JZq9vPD3PKtEoT3bea49mLB2PCdGt73aEUE9Y1KMPaqG
                      DL1MSpE84g0tPUGpvj1448W8aqNWvbSHvrzKAF89QPf5vD01yr03J7W9LrogPVR5AL2TicI96Hgq
                      PPOnG71khtY8OfizPQapZD1g80m7oCZlvck5jD07zKI9qODYvNXShD1hk4g9U8qsPT3ELL3pob09
                      3RcivYDmT7pFUbK9IoKZvTLUJz0wcpQ704elPW4CXj1a77y9OeunPWCpqrsR4cg9KDlOPJMjlD1G
                      rw+97rZqPdoaHz3p77A9d7GtPU2Suz0EAdk8lEjfPOamHj1gEIm7h4qBPS3Ss73wbBc8LVRovVOf
                      VL0iWG89gKKDOwyq+TxS38W9oFbFu4BEybtmx349bg2lvQGfqz0MYxe9LcnDPcKpbz0OMDU9feG/
                      PWsOxT0kIPA8YDeDvAp3VT35TMg9N7JavUZMlL3FXZA9WTSjPaCKqLwfdce95421PUcSwj3YLlY8
                      wAmivTDrE70kJvw8zBahPLTL4rw68Bi9x11cvZgPWDzK3129l2GiPd7sHT0wgp29Z0ZhvePVMb0c
                      9RS9DUzHPRbwID0Gtwy9oKLAPJJWWz2QQFq8IFERvQKWcT0SFyw9oNa3vTAMvL0pyqo9M8GevbCp
                      GLxNQaO9mmMOPS4ug70CcWw9sAaJuyBxwDve4o29KjKcvY1thb3oUyA8CbK2PdDYpb2VJsY94NKx
                      O2J8Kj0UT6+8z+W+vQAQZTyNjoQ9p8pIvcFZwz1W8iE9hwKwPSJkmr32y4y9aYKLPRR6jbxuoyY9
                      ivVSPaMiG72C9q69GHMVvNbgjL1b9Z+9tmoZvQp2eL1KXhK9qg18vaDYrTvg54y9eOicvPTOAb0i
                      SHo9J7etPZNDnb2wY208S7yNvU+ctb3g49o7VI/IPJiExTwCL3c97Xxivco8ob1ORnY9iG6yvMDU
                      hzrIc6295fO7PbBpOL1A3f46AJWYvZXUlD2VYZ09P/CJPboKjr3Py5s98M0vPADPh72d0F+9YOua
                      u1JBAT1TOpa9pUKDPaW9vT2ityM91faXPUC3fzwiOVE96IkaPH3iY72OcRk9C0mPvc/jhT2yEsa9
                      1VeTvTIgLD2wz3W8BRCBPXGovj03W7I9ngNRPQACGLxn+Tq9m+qzvQ0xTL2sl5W8hhs+PWDSozvK
                      j0c9+sMXPTCXHjx6dC49X13BvdA1GDwXybe9TEnUvBY3bT3s8u685cicvSGRyD0AgJM2R7JMvZm6
                      mD2wyJ+9wNHyvHDXNzz7eZI9HQlcvR3dx73ha8w947u9PQya/jxOpmI9FNMBvXy70jyXbjG9L9KK
                      PS2Zhj2iLW499kEEPVcRZr26xgM9M1dBvVDCNL3pA8Q98K0qvQDrNrotYMC9u3bAPcDQDTzaQ8a9
                      IVS2PVAm7bt1wIq9dql6PWbMLT0A1zC8nhunvZB1GLzbg4699Jm0vMDED7wq2MC9CR+6PfpJXT03
                      ZTq9Mnx9PeAR/LxySQU9h/C4PV2htz1QzeC7IIGZO4jbhDw9B5G9s+ajPQEkzD3CUVc9N1xfvbCj
                      5rt67DG9wKkwu8AJv72o6Jq97JqYvGSx8Txg60m9LoZgPUAktr0yjYe9MLmOu35IJT1talK98oa3
                      vQBuXTvmI349Gsh2PX1Yqb1nXWq9DAS8PCOeuT0AocO7gEG7unwnBr3wHUI8of2CPR2Axb3wCn69
                      w15Zvc73nr3iNiI9rYaNvQA7srvjNLw9KD+XvOieqjyCPoK9YEIpu4x9ujyZkLc9qb2gPWQ/Fb2l
                      NZU9ueeLPdAGUrwYdLG9AS+wPQAQZjjIcI690NFlvKiMKTxofQk8zQ4avbMBxr0BBrY9NKUKvRTG
                      lLy9krk9NpCqvcLJPj1w6g68BSK5PTqzab2Yu4G96Ng4vABg2DfQV7U7HPvYPLwl6zwgWte80n68
                      vVH5lD0XLmC9g+9xvXQhDL2bCo+9eiBdPWyHzLzo6aY8yfiZPSLkJj1mbWE9ILyDuwpjfb1+KiY9
                      KY2lPdPWH70wjfg75YeBPSDbj7woQh88QKRmvZTKDb1125W97YZYvRI6Hj3riJY9KOX2vJg8OLye
                      aDc9pmcxPUZiED0CA8e9HyizvU4QAz0A7KK4M7QhvQCI4LkAsWa6F0jIvQo2Zj2A7sm6SzPHvcl9
                      xD0SzI69DLn0PCH8pj2Q+iO8PlqfvUD1B73e+h09vEMCvRJlMz3zzXu9VQmPPcmIgT1AN4Q6wIgJ
                      O8S16jydM7I987DBPcyyy7xoB3O8AKpWuw2hUr0UGOc8TL6BvU08v71wD8G94K7mOwVfv71A6To7
                      WZqsPfa2m70gdCq9Q1+UPY3Myz0zfZm9EHBBvX5HLT0ATX+7B3GYPeKFQD1UToa9Gn5gvR1vML0Z
                      bZI9XWpBvbIWIz2Q0B68gDgBPDtRsD1egZ29APZcuxrbg72SY5a96ZSdPWiLOTxKTCG9spbHvddG
                      Zb0nhba9YuxCPfCHADzsLwG97Ef9vP1RVr2pi7I9kYHFPUWvmL3Y/KU8g7W1vWQZ9jy1oK29SEWZ
                      vK17R70X6Xq95nodPYgKxDwCKRQ9y7KZvXCKs72AO4M7mLyevFaCDj20Gpm8dtR6PeMIML3IR5W8
                      UpAmPdOPob0A1fu8w1hUvf9csz2IM5q8zZGsvbbjEr293z69oJjNu90yeL2dgJg9HkZHPZDvgL0Q
                      kzw8QcuwPVNRI70kd9U8HgAzPeOsQL2zYli92hI4vXWkj70Q3WU893qvPWqYV73Pwas9c4CkPQA0
                      yjrHqGm9acC7PY3bhj2Ai4K9w0RpvfT4lbxGT6a9L3eZPbTos7zQU1+9pADyPLOsRL3A3zK9RkwO
                      PX7BYj3MFr886C+WPFE+oz1357y92PQuPMLQt72oKr08ACtWuwaFKD1XjUW9mfqJPXrOM70nnbC9
                      5+dGvcxfrzwAYq48gBfDvXXsiT2btps9SgMvveZvj71o+we8ra6PPYNKzL3jd1i975a9vavGsr1l
                      xIm9IqJUPV39N70C4EI9N7VjvftFv72YALK9WEuQvEw67Tw5dIM97/aYPW7KRz1SOLi95n4XvSe/
                      XL2Kxbu93Zu1PbDsTL3uzks9s0VTvY0SbL09+Cu9JuhlPVjk4LyGbSw9zMP2PBHCvD3LGai9IyqT
                      PVKOSD1llKy90a2pPWBHBr0fTbY9ka20PUBuhjwpqY09aIOmPBMoPL1Yw7I8qo0ZPeXOqT2wDAC9
                      WAQAPJ6AFD105bg8z+W6vTUqyz1+oAI9mxjJvYAnqjpzQqy9i3eRPXNGoj320Yq9GNAePIYbg72g
                      qR67bmagvQCFVzxOhWs9Jsk3PVhS7rww6ek7AFqjOr0elD2ya6S93eFPvfbGDj0fMMO9npafvRJY
                      Qz3lhoC9woBYPUIJaD2Affs6TBnsPECeJDzHOR+9p2mwPQDMmDgCtgw9lq45PSeHdb2DE7O9mw/B
                      vQANGrsR37s9hKzWPKIChL25crc9IrJYPUpFUT1ULc889l9TPeatAb3wFmG9rbsavX2MVL1CEEA9
                      XntyPQ5PaT2C4wY9p56PPRFNlD0wsSu8HuqMvQAvAjvnty+9sL1mvXs+hT3mhHA9aM+ZveWWqD22
                      ShM9QJWZurI/Pj09EK29SALKPP30Kr2C4yY9Lfq9PUyBvrzYo6E8c2hbvdgJIjz6F3g9+32vvQDE
                      GTsKwLS9dGT6PGAQlbvAC3i7ZsaHvdRHjbxYNOa8w7yuvcCxf70YXxo8aidjPc4ZIz2bssy9yMaG
                      vGC1/btPmLq9APrAO0yQy7whGKg98H0nvXgnwL1GmYe9EkVBPcD+rDxQ6k29TT2ePRqEc70C3EQ9
                      twtJvUyuojw/Qru9hCfePHqMBz2iIyA9eK2+vXO5lj0DQJq9x5GQPep2gr36+FS9lJiyPFC4u7vh
                      HJo93qk/PdAjRbyAvLO7UxSAPYAhIDoAHtA6ACV/OtUtgr3ARog8s6VBvSfXb73o85y8bHTDPBbR
                      qb3Knn69LFy/vKgBczwDlMy9p8hqvSj/RLzQXt87TfKjPXJwjb1UVem8QI/0vH+pxD3Xi8i9blyl
                      vQDpM70eOou9Qd6iPQCsGjmQuR882ueGvbjJujyK15q9o3NEvXFxhD2YuHe8gu8qPXCZFr3oYlw8
                      8gVqPWweujw0EJu8gLUJvdnHjT3Yh3M84/XIvZn2oz3Le8g99niTvZBBWbxAqGw8EQOuPRqMrL14
                      UYq8AAsJugoYQL2Ksxc9+kWzvcCewzoz9ok90gm2vXBUH7wNo4C9z6qPPZ3iyT165Xk9jCHwPLRV
                      pbxjk7k9otmXvYA277rME5082jWHvRqnuL1AU48842C+vYA44DuA8JK9DHq1vMXgtL3HFy+90sgM
                      PRgwxDyVy7g9GLGnvdO8wT10QMw8QHxWuzjDyrxd/Ha9qE5kPNRg/zwgftO7LgoaPYDUj7ryahs9
                      ktWCvTByK7xpo8M9V1xLvbz2/TwW10M9dOm4PHvQsT0oy2o8sE9uvRRxpbz9+Yc9RfK8vQQMB73v
                      AbG9PdhTvTSGg7w53rY9fiWfvROGsb0J07U9w3LAPaf8G721zZ496qW1vQDDCjuYuYk8c/WNvcTU
                      /DylpI89ngqqvUpkLj06vEY9Thqovfa/iL02KoG9kncgPdkLgD3s7/a8HXuUPQAJ77sgwcq9M+Ww
                      vcL0yL0FSI+9aYypPV5xhb26Bli9SYiyPSz5+zy7CYM96k10vQwSmTyEOO88B45ZvbAk2Ds9rjm9
                      nFrdPHANJTzLK709BkcBvcBghzpHFie96MVIPIPFWr2q/iU9KWe7PaysqTy1mqK99XaLvUg5hbxY
                      o8i9WvthvYkCnz0zVZG9LJbvPOj5xryzlme9qKEGvOMiM70yZic9Rtp1Pd34Lb3KK2W97b63PaAp
                      fDsat7S99xiWPQJiBD2oSbw8LhE1PaLDDT3Yezm8dUq2vRI3CT2ArJM7xPz0PBg2gL36GRi9sg8z
                      PWI7MD1C3G09vG4BvT2ahD3KY2K9U9mjvbMuhj0wYkS9FvRfPWOEo70Bi8k9xuJGPSurpL0tAow9
                      jzm+vWBNWTsiCRc9orCbvRo3sL3rp5s9ZtiKvWwS6zxIvsW951BTvSPsqT1yEEk9Yo8xPVrOeD2w
                      8rG9YzR1veYPl71n/ri9ikY3PUWlyb0sPtK89Ly5PNuuiD2o5x68IWnCPX+slz3RyJk9jhwAPanj
                      hT2q32k9WIwyvKKNTj1jGMk9QuMAPSO6Z71wd2C9qGQkvEMdP714/Y88ZmQJPXKWcD2TK4Q9qLF/
                      vOp2KL3A+uW6KKYQvDy09zwwCLe7LmdAPS6Xej1x35I97CbHvEs4tD3gwFa9pg9rPaJ/Qj2Mt7y8
                      ADi7OWCHQjsnDkS96i4sPb0cIr1y8QA9CrdWvUzRoDzeTI+9jdkmvQaeJT1QRbg7eYjDPSDp6DtJ
                      1MA9bYklveJvzL06wDa9NdbBvdR+Bb0dgkm9SgIuvayC9rzQwJu7HD6FvWBCmLzOVpK9gMQSvAEE
                      rT1Qv0280PqBuyCXAb0Qu6699joEParAqL2Aqd866O1wPGrwKD1gdkA7JtKMvWoqgb2b6p+9MLIN
                      PKdBT72Po7297a1yvYAWjzvaSDE9mN3LPP8GgT1GY5q9AOrUvJjCQLzKW8O9MsRxPVKMSD0CbGM9
                      WMW0vM5qXj0A5WI8AEUZOxhQLDxYpCo8IjOYvXDpcLwRgoY9KjAJvZNdt70Aa1K7rDeJvPBPVTyH
                      bkS9wE0wu6rXFD0AQpC9WF42vLAVYbxvrbo9BzMpvcBYZTugeoA8gyS/PdA5P7y6gHY99d2ZPdsE
                      oL0o+3M8wE4XvGgoAbzzlaI95DbcPIFbyD0kKuU87M7XvO3OVb2bncC9cHEzPBM6t71QECq8FDyT
                      PFAjCDyWmTU9NlQIPVi2ujzgjpy8QkxpPbjxgb0u9jg9VD0OvUvirj3WY1s96DNivBQR7jwgnuM7
                      EO7HvUDdpb1Z+5s9gFvCu20yxD1MZoW8INHGu76jXD3oraK8h+pyvTCAAjxGThM9090nvVgObzzY
                      eOa892UivdCyyrvAx0U8TF6iPGIpaD1Km8m9gLOTu2ZWSz1KRgU95wVDvXEdlj2gbAI7wndmPQtw
                      oD2Pf669Iw1Pvbjr3bwymhw94N+KO2Cx7LtOOoG9+N7KPBFyvj2Iboe8usVNvelIij1ASE+8Vm8m
                      Pbksxj0FQK49CBffvA1nnj0Zl5Q9Tu11PSkqqz3z7609O2uDPTyqDL3AUkY8kowUPVLRbj1asKy9
                      PZOmPd4qYD1sX9q8KFYjPGrIDb3FAL29A6C8PXsDiz0UOOo80AInvRh/Lrz8Uf88CgYvPYCp6Tqg
                      ioQ8A35fvdqeaL2wjAE8zAr1vJZ2dT0Sc0o96Fi5PDBKar1wFlm8Y817vcJbdz2TQU290pOLvQbb
                      Mz1g3EQ7Ubi/PYBo1zsPIaQ91pWRveKuRz0wYhc87B6PvPjfkr07iZE90FpzvJqEcz2WDjU9d5LH
                      vUyZsrwoZ6i81MS4PPwO2zzgr3+9qhopPeKiPj2JVpw99nwxPWjRr71a0629knIyPRDuub2oo208
                      J9C5vZjxs71SDGw9aKH9vMU4p70YTNi8SHPcvFhRgDwimiw9jC/9vODQ0bsw/oK7CRqLPbBPmbt2
                      2Vs9Pr0APcAZCbxwkx+9JVG/vdhjrDwM/gK9W/2jPQZmaz1Tqb09Mn9cPZocbz0aALC9EzcxvedZ
                      Sr3C6rO9SOCuvCWxg70aZ0U9hmsEvWj2ZjweoWY9iLK0vXakWD03R7U9cP5ZPH8Iur3LH8s9pk+M
                      vSsfpz2az0A9PapTvfin8LwaZU49o1esPbGomj3768Q9eLibvQh7yzxwgnS8YOtyvSmArD3w90q8
                      crEOPaWws70Kt1S9xSzGvS3FMr1wzLW98C2evXi6/7wwDi+9Z5m6PaZyfT2bPLc9lFkRvccYsL24
                      PME8LLvlvNXykD37RZ69VzghvRAHCjystMg8spNJPVlQrT1Il6o8QvJFPcJlUT2QE0u8RWSuPXoe
                      Tz2+KwU9l9q1PbZUfT0AYB29CeSEPQ8onz2oWXE8H2a+PdUTvz0wHB29KHj2vCBZjbxIzZq8QtwM
                      Pei+jb2oJdy8FMvjPACd7jnANFQ8R549vbY/Jz0Asyo8HRmHPUixxLzSsBI96tGYvSgMtrymxVA9
                      MJtGvevVgT2Aape9cJRTvGDCBLsQqwq8Z+87vfQDurzAkam8AxxFvSwV7Lz/JsA9Uva+vazmAb0A
                      FB06KtxnPRoKJT2K+Uk9EYqTPYo4JD0AS1a7+hOlvfOnY71Bsag9aCQEPNgrYTx6sQ+9XXtZvbLZ
                      bD3I2Ma9rFvkvNLOhr11MKw930yHPVc7Tr1zdKu9wOKdOip/U70k0OA8/vxnPYDfgjvnhcE9wOKX
                      uiA/jztqfZu97b6zPX06pj1YLeC8uHqcvIR6hr1gptM7DMaLvEK8p73yhT49OJD6vJKtAD2ln7c9
                      hv8WvRabmb1WO3Q9ANJTu81jmD1lP8u9gAkTOgoVTT0ekh49yrloPfmejD3Mt/080167vcAEQrwR
                      NKE9UNojvGARO7s+nwU9uIurvRBJKb0AJws6quhIvYxD4TwF/r29ElJpPfc0Wb3YQR+8MP7Vu3al
                      MD3MQaM82sssvRr/aT1A0mW9RuciPXAaVL3yNLe93qF+PTmXlj2AjpG8MmNwPQjE4Lz+dQY9yg1D
                      vZq9xL3GDzs9iYmoPdJKUz2vu4k9UwMhvZj7DDzAocu9APR0vBDnAzyU8+a8AOyEOxu6rj24L4U8
                      S6TIPYXOtL1kiOw8St6MvQyOtry91Iw9TQ2pvWPxw70bNI+9DL+IPCOZYr3KUzM9BtmTvcERrz06
                      sQO9mISxvBBhO70Y71a8fwqMPYbPPT1hPao9VVWwParHrr2XHJ89ToRhPaEJnz2b6oY9976QPbZJ
                      fz3aWX+96JMfPGiVlDxPy7C9wLSsOiUTxz0j5Yg9g3lQvcyQybxCMRc9kwkuvUNSoj2FboS94JKU
                      PGK6Kz0hDIE9GFa8vADJ2zsd4V69QIWlupiYgzwQFA48MuFdPUM6oT1Atbm8mMJcvOmwlD1Hl5Q9
                      qAc6PICcqTrgfJG8EORPvJGBlj3LsKS9FHCbPHr+DL0oJX684BW+PL5sbD3wK2c8TC2QvDiKxTyi
                      9Xk9rAm1vD79or1q75C9IWuOPdhjvDyI6ta8t65EvRo6Lb3r3b09oF2TPEYfBj39QLG9BtBZPQmg
                      tT2jz8m9YKmKvUUFwb3Ot1s9FWGovf2ftD2KQEO9bvg8PQjFub0aoEA9mbaZPSU4oD0qxXK9hUy8
                      vWyjsDy/7Zo9mOLLvBJMn71dgqs9sqk+PSzTojznzl292IayveDugryyPwc9fesevdAH3Duw6/a7
                      aEg8vKI8o729M3S9jqABPa9Xsb2iOJe9JfurvbOAyz0Bw8U9OOThvLIbMT04ha+9tg10PcjTt7yt
                      8mW9rNOCvWAeRb2ACkU6NKLDvOR15DzMlLU8zYaSPThDvLy0tJU8QbmNPTn3yz2T/ma9gUe9PbMw
                      qz0pY4I9wpY+Paze+zwyqjQ9N/KDPaDzATvqZw49pQ+sPfQxyryou8e8GOQ3PLarMz2tVss9RTO+
                      PYwWuTzoPAQ8znmfvZg7iTyAR6w6ALSBOEArKjt+Dlo9zY+APaDsDrtDgKc9mERwvPDPAr3G6D09
                      CUCwPXosXT2M1b08
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU0OTM5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzU0OTM5MnEBYS5kAAAAAAAAAPB3LL3j86294IyZvMlfpz3Q19u7gOBlvIDHJzwM6/K8
                      AMl+PCTL+DzYVlU8AL9YPEy5xzzHW8w9DC2AvK+Kv73s2ce87Si9PVJncD2RlI89nM7VPP0Th73i
                      iXw93U2nvfA1Eb2nXyi9WvJLvdP/cr1X86A9SoSZveBSqbtHq5g9oRGsPYxWD73H7449p/6DPXBn
                      gb1g8X6955h8vRi9UrwBXL0951zMPYCF1LrAGb486Hh7PGJLlb2bPJo9wHi5vBWYnT0kZ+U8AGVA
                      vNPpc73PUZw9wOWvvfp1AL06MRe9SbeVPUCXQrtTwEq9JXedPS0YiT1tbyO9CslJvfVwwb3U5we9
                      lG7iPGVtqD2Rs4Y9Hx+KPWnenT3uzZ693qJjPT8qgz2GMgQ9N3OxPdoiRj1CqTo9Lp4+PeKFaT1S
                      aFg9h5g9vaCT5byord68pGmKvcZAMT2Kx0Q9CvbGvSthkj1gN1u9MAKsO4J0Az0Y+sa8ATmuPdA5
                      eb3EdRG9RCDYPHZtAr3n4SS9jg9nPfoQSL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU2MDAzMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzU2MDAzMnEBYS5kAAAAAAAAAIBld7zNMm69h/80vfr9HT3grZu8IGu1vNqLGL3gW069
                      sAKWO0C1ZTv9LII9TRy0vVBLNzzSfKm9MFRGvb4lBD1/z8U9AK/Cuyibhb07mJG9QR++PWA+Z72s
                      cRS9sw4pvVWFnb2HYoc9O/i9PbSWgbzkDtk84uYfPYBDyDuaSiq9ytCRvT4/aT0YPLE8AGpyO1Cf
                      S72QxJK9ABeQuyiDOrwdt6S90GKKu8H1pj3J/Kc9mEy2vJpzAb1DuqG9u9LFPQDbOzusFuK8WueQ
                      vWD2j7xj/0+9p70mvRvXp70WXhm9lfuOvbIcVj0FboU94NZVvdkdvD1oVva816m3PRJQPj2/HK+9
                      6XiXPUAEI72ggTA70AWWu/CPYbwK+re9gDGvuvKWAz0zw7a9PAP8PPWovT0ui1E9oPqlvJIIcD3K
                      6hu9KCaGvLrLAL2w9Ay9wKgaOxcMPr2aQTu9M3VnvT5kQz2l9489AMJ8u0L9xb3+CQw9FIPzPPXX
                      ob3xvr098AIZvNAOYTw5x409Jml+PYJKST0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzU2MDExMnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzU2MDExMnEBYS4BAAAAAAAAAI1cyD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        bJ5ZO0P8Wzt+X5I7fl+SO8TiVjtDjCk7xYBZO8WAWTt4oG07KyRCO+f+izvn/os7eKBtOyskQjvn
        /os75/6LO40qtjvg3Vs7RR+jO0Ufozs2HOg7H9drO337tTt9+7U72iwKPD66kDvqctM76nLTO9os
        Cjw+upA76nLTO+py0zuOe0o7NYYfO0o3hDtKN4Q7JnB7O0KfFDvxxV878cVfO7tOUjtE4RQ7srdf
        O7K3Xzu7TlI7ROEUO7K3Xzuyt187jntKOzWGHztKN4Q7SjeEOyZweztCnxQ78cVfO/HFXzu7TlI7
        ROEUO7K3Xzuyt187u05SO0ThFDuyt187srdfO0duTjzFNUw8YXQZPGF0GTxnDlE8vXqEPGyKTjxs
        ik48qAw9PP5kZzzscSA87HEgPKgMPTz+ZGc87HEgPOxxIDwOm/Y7/VFMPLiyCTy4sgk87IrBO0V7
        PjzV2vY71dr2OxaPojsHMxs8TXTUO0101DsWj6I7BzMbPE101DtNdNQ7stxdPMPNjDzB4ik8weIp
        PEiqMjzkIZc83MBIPNzASDx3m1U84t6WPKXNSDylzUg8d5tVPOLeljylzUg8pc1IPLLcXTzDzYw8
        weIpPMHiKTxIqjI85CGXPNzASDzcwEg8d5tVPOLeljylzUg8pc1IPHebVTzi3pY8pc1IPKXNSDw=
