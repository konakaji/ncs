N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NTk1MnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDUwODU5NTJxAWEuhAMAAAAAAACppag++6+mvlznoj31a5Y+mG0fvuDzEr5q1Fk+9gVD
                      vqBoK7wzLAO+AIinuhgjQL4QatC8XoiMvpz4hb4AcHc81O+HPV0apz6WZnu+OTqFPkJdXz61Y6U+
                      wDgSPoCLXTyoJQe9gJyUPMkEmj6zY4k+0L+avcSmnL5A0zw9Me+QPlduqT5WfQm+0CWrPItjmD4U
                      TJw9snwzPj5FHL5CQpq+AD+ZO5qMTz5Izg+9ipQMPiQri7086qi+cOp6vtYbyL3Tgag+XtV8vu4w
                      OT5mwwa+MMzvveiEWT018J4+FiCyvZCU/zw4Kia9pu0+vkhEFb2mTX0+NGWpvlILYz67lge+eJ8e
                      voaNNb4YtAa+hg2vvdFlpD6wOra8ctI3PhJJOT7Lip8+R8GGvoaBAj5iK3E+BcOIPusKpD6o3Yy+
                      iPgrvQnBgD7ouz29Zr+Lvix6rL3IXxs9lRWIPqCmTT0Ao6C+mP0LvQDrlDoA+9m8AJ9fvYLoGT70
                      uI89rH6dvkAb4ztTkFK+wAQMvYcekb4IoUI9jhJyvhHwjz5oDGU9ABWAuijFpL5YaVQ94NI+PWAP
                      7T0cccM9snkuPqDmCj5GGzS+bn0cvmO7aL63Dag+v/CSvuiLCj5O2xE+PDbrvZzOzL0Tr2m+ABvH
                      O5oVVT6oLUO9UIF4vgjCfL4GR+e9GugEPkITj74WjHy+g4eUvpuTlD5zjaE+O9k9vow07r2IIA0+
                      jCDwPTIpZj5etyA+bOanvaoXHT4ARpA8IPciPmB+tz0A8xu+lIKaPROYKL4+Eg4+TrBgPkBFDL1C
                      Fhk+3iwzPk7fQ75Qggy+f7uFvuZQAr51k48+c9FYvtCykz0RAp0+gA6ivaBAmL44DxO+MliIvnSk
                      ir7UC+Y9yJUjvu5JXz6A0go7wCf6O9YX1b3p7p8+Kl8UPij+Ir52X2e+bshWPoBTe73cMoy+jhsJ
                      PlaeHb5w88s9QHFQvaAaGT0QzMS9GnoyPqqQDT6jiEm+Q/6VPtSv0z3yjDM+pe+fPjsfnj7azJu+
                      oA4WvbASED63lao+eh1HPgJGMT5gilI98NTIveCWOb2QKvE8DZ6WPuvGlL50I9o9bhMKvi41Nb5t
                      IJ8+k3AfvoBC8L21iKI+escsPoB3hzzPA4Y+CClivpQTiD1UNsY9ZCaHvZt/mr5RdIM+yLM1vrBY
                      jL2eMh2+zM/nPWCjBb78T4W9RFaGPXaI+r34uXY94Cipvu/oqD7Y4Xq+ReCcPgI3Nj5G8T4+IM2l
                      vQDSNTwGTk2+pvEVPhPwHb6763O+q+Q5vgBaXzpAHiA+Rd+oPmmLkT7IOwa+eRmFPqjfqL7AUO49
                      U9EUvnBF9zw0hIo95OafvVquOD5a7T0+vKv6PetWkD68sba9oFvzvfIFAD7DCWe+gCdlPMnrmD6w
                      +4k8fkAJPhDzvbyw+BG+S4Zxvjsdhz7+yhe+nml5PgBwBjqT4Ge+KRWFPuA/m75LP0y+AS+qPozH
                      mb3qL04+ECawvajaZ72IKwA+rd2aPgAlX70Acz29M+6OPjDMq71satW9wCyHPUxszD2gz5w9RhkZ
                      PjyPpD3aAJK+5p5oPtbR1b0YuA89DY6fPp7iFD4AIa86O/5YvthHjr5AfY+9hLyHveMsg77g7g89
                      gFCIPWYvHr6VaY0+g2WZvnhtDT4sKrU99uQkvqpFj753W4W+nm9CPmutA74wTpQ88ML9vbZyJL4e
                      f3W+iPYivZbndj52Ibq9AmiVvub1or5u9XY+cLOMPId7jT5GCUo+t3qjvrwnwD0mkfS9cBahPGqk
                      jb4e0AA+YO8gPWoOKz68u5g9wEfMPXMYOr6AtkK+gPHxPCDC2b0uO1++z4qZvoz1hb22/V0++zE2
                      vpCRor5x2J8+RtQPvoVnjD56qDE+YJDHvTqaVD4gwpM9wixMPoDfIrv+1G++/jIHvpDQo73mYKS+
                      XlhdvkqQWD4n+5g+Jpg8PvARrrz4fAg9xT6gPmpqhL5Qe629au6HvmgPO764qmq+QRaaPgD52j0C
                      +Ew+fZuNPmKqdT7xwac+FukxPqx+qL4wcok85hSNvu6+Fj5Cmhs+lXaXPlBy7TyW2ze+QMZOvsCu
                      x7tYQ1g9LCSrvUCUEL6gBim+rn9jvqA2Fzy+7zg+stpLPkgff71zdSW+UK0OvgClfzyc5Mk9Olk2
                      Phb1YT5GPuO9gOshPaUTjz4ICpG+5kMNvpZ5Wz4rKoU+GDZbvaCEmb4H8o++shgxPqhaFD1QOxm+
                      s05EvrACOL5CeHw+yA0kPXeOi75AI1Y9YBdpvBaxb77AW547nVmYPpRSvj3geoC+XNDHvVJNPT5Q
                      Xe891nyMvubv7L1CBnE+yF4PPmCbcbyT9hW+zjplPh5heL4Dmh6+K7WUPkoBWT5uBDA+hD2jPWAT
                      U721DIU+t4uqvlatAr44fXI9o52lvgBbwr1o5jC9fj0SvjrNVz62rVK+APzGO6nDnj5u/Ae+Gr4c
                      PlQr4D1a9lA+oB8nvmMhXb7szds9eEokvqdppT4crtU9y7WAvul7kD4qZp6+BuzsveaAu71D/Ia+
                      eUWIPjwkxL0kNpK9CQeHPsB3nL0HvJg+c/cDvtDOnTyrNgK+yMYLPSAeAT1M+rw9lqJpPmT1lz3M
                      A549hp3avVRXgj3A3AK+x2qYvuKCSj52GMW9GrZNPtAGyj34Sk+9xnURPiasuL0A3kG8gBhJO5s5
                      WL7baVW+LDWcviuyDL6upZW+0OdKvhv4n77+Cj++AH/9PT5gWT74OV89HvNwvkAhpTwWU5K+Pn8f
                      PqApKD2nxJ4+vqs4vqAcCrwa4i0+LEuIvSwO972kG6a9bsNYPpfPgb5yaDg+fyCUviGXkz4wHDO+
                      oK00vV7HWD7mXJ2+aKY3vhrEFz5k4fA9W5AEvgAu+7up74E+e112vnPjBL4WuW++SD8GPdaNI77w
                      h609olQVPqIHgL5ySgs+AJl2PYapDb6g/DS+aF52vqNCd77zMCG+FrhpPt1+gD68gdi9ENLNPDAH
                      2zwctsM9kP5CvtAxr735/KY+tGmAveVDpz4c86k9htEKvnP/hr6gXwU+l7apPpSNm72AYyM+drA9
                      Ph6bcr5g8fm969V+vjpSSz4goJa9eO1lvsDnBD4BGaA+2NBPPQpWSD5Ithi+bjhTPvRIxz049As9
                      84uXPlKSET4AasI8Co9wPofAob58v6I9LllGPpjRR732bnu+OncOPpCq8L3AF149SmhzPpqJTT7h
                      WKg+ufycPgC8mb3ZdJk+FUemPlpsEj4utnO+ygZmPmg/GT6GzBu+IN0avjQ6m75YNki+zhqQvuAt
                      vD1LMJ8+OJA/PZwOyD0UU4e+UMlwvggFVT37Pn2+FGLPPXZul77wfxK+EqE7PjrRWz7LHg6+1mdu
                      vtijRr6a3EI+IKx4vBHZkj5G7/C9iw+hvoOTjD6A2ty9IF60vUJbST5W1mu+YO7Bveww3r2olWq+
                      /BLbPcojaj7wlTC+lZ+MPn5pM77GqrS9JMWbvqgqV700Fbg9AEglufvRlr512qA+ouN5PoD1Wb4c
                      3pC9t2mcPnrzST5Rlqg+YvdtPmTM+D0w8ak9MNK4vFuub77Q3Ki9QNSJPJbqZj6MnIS9yu5wPuKF
                      lL5Pt4Y+JgtfvhpMSz5nK5e+QlNgPuC9QT0bFyi+/pQ5PjwIlT3uwGk+zOGmveCDj738BfA9G5JA
                      vnY2Mj7Udaa9vEW4PWhdVb0y73s+kKCavdSpmT1UuPM936CcPqWlmT5Adhi9QLyBu7bijL6WChC+
                      HGqKvrIQJD6MfpC+Q1qRPnz4kb3Ar0K++KkYvpbntb3tYYk+INPUPUceoj5MK6C9nB7DPaBhwT2D
                      W0C+mFVyvQJOmb5KX2g+kCSjvb0opz6bL5u+IOnWvSS2lz2GZSa+mxpMvuDkLTw+cVS+uG5jvdK1
                      Hz5baye+vYmbPiBRdzz+fUu+2+xAvjq8PT5r3p2+0LyAvaZWXj5Ddak+or0kPkoqLj7A13i9rJmd
                      PSN4N75WUg0+jl1SvgCVnb1gnXC+e+yjPswV7T3l4Iw+5aCMPpAKs7y6SDo+QWSEPt04kz5AGEK9
                      gRiBPpbHxb0wlYA9UJOqPIMXhb7QEom9GL51vVjtKr12Mey90LSfPTyYrD2TDIe+AK34OxgRDD4u
                      +0I+GJBfvoKGJj7mXK29UK7YPUCUmbw7q5G+Tj5UPg7TZT7j/IU+4wN5vvtPA77gwzs9jITwvRt+
                      qD6euom+K897vqIPMj5urjy+OtQ6PsOApT6QPsQ9sYiQPqDc9r2I/aC+EMeRvaZwE757YgG+enxs
                      PizDoz0SdUc+0M95vqD0JD1bkpy+PCyJvZ5dND4M8bm9vzSIvrCPS77AJOe7aF5yvpOTir62s4++
                      5vlgPvAhsLzAkpe7hmGFvvEOkz5UBsY9SlUwPp1JqT5cA7Y9VnMdvii6Hz6C7jg+GOhwvUrZPz5A
                      mLe8GUClPsmNhD5giD89hvBFvtCFFr5i/zA+8sVlPnDlWr6IPTw9FuPzvWtEpL7sBqW969iWPuYq
                      2L1ghEU95p6rvSx15T1EJZe+FpZUPlXepj4pjKI+YOUUvYhvdb1+kzq+biaXvnZsXL6Anh2+LkAW
                      PsBC6DsgPT48QMKAu8vmGb7QnTm+YExjPIhBkb669is+KLWhvhgAeT3Dii++7JfsvY1Boz6CtY6+
                      OPY5PSvZcL5AMrs8OhuBvtgEcD1NbqE+2IMfvfTT7z2u9Tu+tPifvtf0pr7ivHQ+eKsdvdK1UT6g
                      GU29yKtlvvhjbb3DVJ6+IPJtvgA6TbsyukA+MNH0vQNOBL4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NjAzMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NTA4NjAzMnEBYS5kAAAAAAAAAKZWpr4ndKW+DIaWvhOgfr4rNaU+YLplvWggdD2wLEC+
                      RwmbPsCSmj1r5H++wODjvBjHHb7ADIK+TE6RPVCJjDz7pYu+g3KKvhziiT2Xw48+TESCvhKaGT4L
                      Mge+2mWSvsFQmz7gw/29yHZwvsT8ob7yOEo+IlkvPlO7lT7ukTY+NGXdPfxEpr7guFy8Zkq8vUR/
                      kb2BQ4s+WG4RPva3gL7LIl2+bJWgvUDx9LzYrgq+YEtKvVHrpT7AO6m+ANhsOXIUXz5bLX6+yKhS
                      vY6CAD6F8Yk+qWOaPjs6Or7vdae++JoAvuyNlb0aVgk+hlASPnFsgT7A4Su9DE6BPbcZlr46Dl4+
                      ACwpPXoKYD7+136+XPqwPeAZXDyUvY6+CGAzPTiUnr6K12M+K6ShvkNcmL44rVO97uFSPrRen77E
                      E5A9X/mUPojmD70WhNG9oqJ4Ptu0L77AYie9KFpHvRtPg77AVta9zAukPcitX738FZS9PX2EPluw
                      pb54RB2+tD/EPYMbbb6QLfY9u6KXvoigD70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NjExMnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDUwODYxMTJxAWEuECcAAAAAAADCqxA9u2ilvbxU9zzgOVy9Yn5UPYDZPb0vy4Y9cSya
                      Pbpqmb2X48Y9ADw2OsBmnDpTxUK9cy19vRCJVzwjM5295gFqPe1Yyr1IOZE8AEb+OgNdqb00DeI8
                      As2wvbaAHj00e9w8VTKEvSzX0bxdNqk9CJXvvArbID1CAZC91/1QvTSVmryAK6e97DyyPKbWn72q
                      aDW9sS2/PX5oXD19q169YO5svY7Mjr3iYhs9Al4yPe27sr1nPny9I+XIvePMYL2owcE8HDQMvWAx
                      77vMOvm8M47GvQrEIz1MUJc82oYbvcPZlT0GTi09NAuDvZn5yj0yh349KnZ7PQtqnT0I1KM80GNl
                      PEExkj2WfXI9IKHDPCjQmrxUeaQ8RoRxPS75YD3A/bO9zt+BvZh/tTxuBhQ9LXy8PY1py716RCu9
                      yBSxPCgghDx6HjC9lCuavHN5c72pSqs9DCfLPMhT/LyyThI9X6SmPZgLazzgGrO9oJzNOzJNNj33
                      YJY90FpFPACGUrt6DGc9UkeSvcrfVD1a8yi9bp02PWyz/LxgoMI7dW2xvewli73sK7U8QGyMvBA+
                      Hr2AFsK9UlDIvUIUpr1MPKC8YBApO6nFuz1MpJy8rBHgPIaQCD1DJro9ztSTvYJGAj1ZnI09qiOw
                      vdADH7xQiFi8YBG0PGkysz2DonS9KwHIPVTzirwwksq9ABz4OxEyrD0uOaa9QKNdO0GYuj1jhWK9
                      PX2tPYTf8zzQ/sC7s1OrPUvbwr1ADhU8Cl1VvcFhtT1gXXi7j8mmPW6YEz1wSFC8WFn7vMif3LzE
                      j+M8HUOtPTJfr73XsLu9EgAyPRgO7bwtwJs9S+yCPWDhwTwgg2u9TsJPPQeLvL1TMmG9xBr+PJ10
                      xj0G+Qc9KmtWvSMIvz1Hvra9w3nCPWqvqL32RFI9bpYEPcp+SL3yl0w92KBTvKrFHr1ZyMk9axDH
                      PbcgML3ozGo8gPyTOgdLlD2A7Z29QLh/vLKgIz2BMrg9zT2zvVXbpr0QhkK8YKYTu4YbBz3aCgy9
                      QE0tvPLRIj2mdxc9AFovuT0lZb0gubo7teWxvYxPpDw4oKE8nmdOPcAFNLxzApC9ABJ+vJSm1zzC
                      7gQ9+Z2GPUhdlb0ATpG5ihhfvV80vT1A5CS7tgyjvYXhjT301bE8ggl0PaLAj72irYa9wJI9vIs4
                      gz044KK9PjqSvV3qXL0U3pA8YNuovMAVG7w/wMK9oAq1vUfBdb3MIpe8DlJnPd6GfD3OhF49ODnG
                      vECuMr0SxFg9SpRZPfOLiD0Dbim9oSq+PeRPBb2agyO9x/iwPVBjOL0MSZm8sDtAvWRIBr206Ly8
                      QLUxu/N1yT2dOBq9FdSbPUyD27zzl5w99kdgPQCoSTqzu6w9HguPvWrpXL2c3Og8HdWMPVAeDLzY
                      jZ29wAyWvDDaYDw6Fm29Ej1EPcfvvb3E8YG9czOKPZ0sPb0AsGu5YmQxPULaZj3Qy+I7/ZU1vUaw
                      AD3YDE68sACkOxvywD2T0cS9WPcbPNOgbr2UCPq8ZBrjPAdstr1iGoe9gEWMu6pVwr3Go3Y90A8X
                      vBUbtr3B05o9IhFUPVfvVr2yoQk9jehuvQEiiT1FCY49QFYSPMb2k73fRJY9UlwLPQYEHj0UtJ68
                      Ctt+PZaKUT2wm6u90x+xPSDxVb2a02w9vrSovUYfGL26FIe9zouCvQxEnzzUJK88g1YovRVBlz1d
                      Ilu97ya7PWfWQr1q2iq9rCG7PCcjgj2Y/4u9gMUDPB7LCD3AduK8lBbUvDPFxD0WnnQ9LRiVPTSP
                      wrzKRnQ9lkR6PTTClrw0Pqg88FFzvWMMT71YBb08f+jEPajwC7z2wiw959GRPRJcVT3y8YS99BDv
                      PACtnL1JiZk9xNLNPGhnUbzm8xg961ihPWKGt72UDIG8gjI6PWz5jjwUvtw8rQRBvazVFr354rQ9
                      4aybPZpbcj2q0xa9N3m7Pcq8rb11C4U9bDoZvVNYiz3ga+W7qMKqvNivjzxg+E27tHHLvCwk6jxD
                      zJi9YLT9OzcBsz0036A8YJiqPFCtJjzmAQa9gLuIPBtAzD22CJq9iuhqvQBwkrkgU2e9wfW3Pa4L
                      KT1099y8m0+zvVhZXbw9TD+9oMl+O+0lrD35Y5A9SzTJPZWWx72aAW898DNzvfI0SD2a2B89CZmv
                      PYyIwzxB55Y9mKWIvDtZrD3ITp+8KQ+APbNrqb2jO6e9tHGGPEFpjz3q5Z29Qx+0vTCpNTxwop29
                      VrYkPTc/WL3kk4O9xPYRvb1qs71QZLs7Qm8tPWJrIz2X+6E9dks5PQBeAruwgOA7qHfjvDLyyb0U
                      Kr+8wA1TPJrPgr1yVGU9Aq9SPQBAEbfcRdY8gBsgvSV8xr19NTu9MHn+u0Av5Lo/Z7c9lJmFvXeC
                      xb2sx7A8vghzPd3AxL2uJkU9pVOUvTO0tb10lfW8TbyhvXVDvr37vbQ9+OTHPBVYtL2qwY29KBG5
                      vchrs7xx28M94Ghfva1Mhj1Tqbs9G26vPeAwT70YA0S8/L+JvdhuqTwTLBu9zp6mvfhtsbwiZBk9
                      dYjKvfqPjr24wNS8/Th/vdehMb2kBvE8MnIRPeC+u7vhPYM9OtMmPZquZz0Mw5u8zGzIvM5aFz0a
                      vZy9a2ubPZezI72Yhms8QAFUvaLnQT0Qv8K9gMIpOk3Rm70QiTU8MI8wPGtiwj0KqYC9YJnOvEBl
                      +LxPt749yfCmPUB+dLxQ0Dm9U4yavSHVqD07PrU9E1qwPbfwvz0nw169yPmsPKwJ1Lwy7ic9VwfM
                      PYgLijw9dD69kAQ3PDZnaD0zrba911RHvegv87yet6u9yAuPPOscmb3osny8TWddvZL1aj102Ls8
                      elROvRZYCr023Ao9Lxm3PeO2tT27qbq9tEGFvNwE5TzYj8U8GaDJPRlAxz1AV+O8JcymvTiEirzo
                      HxC8aFTqvBf7vr0orKy8rMGhvJE4gT0nskq97kxiPbRLg7zoIMQ8V6/KvWg5wrxMo/w8E3C7vbPx
                      tr0IWL28RjZxPUIXKz048Zm9XtiKvfu0uL0OKUc9Y2lHvd8bpT2wzNY7tt4JPSkOyT2CnJe9pZGm
                      vVCMMrw6P7q9LxGFPerbY72W2he98FEkvT1Ypz3xDas9YMFmO/2pxb3AQKS8YMJ7u4DVYboKJnm9
                      lxKePfTB2bx6Vg49shkqPUw0iLygb7C7hfW+PViRCrx6Okq9K7SjPRAZGr0Kg8i9d60bvVgEoryT
                      26S9pLEXvdjtJLwAOZG8RwqgPf32lT0CC2E9QAZ1PGvok70BQa892LASvNY5VT3gnB29Kk0tvZBy
                      AzwOr389mvzKvZJoaz2gsLM84FfPO0NkHr36lQa9E493vUrfsb0sctU8UpUYPWz0l7ygTvC8V67C
                      PeIuob2gf7e7EKSVvdgwqryAgfa87dqlvXoRkr0bici9SgLFvTVQgT3g8yy9YMs8u9pwC71DXJm9
                      mrwvvRlsyj207pW8yhywvdHGyD0i1mo9moRVvY+fgj0eeJy9sg6GvVZ3Eb1QEnq8G5yrve8Prb0T
                      AR+9AY6CPZj4/LzCAwQ9hvJnPeZaHD147IG92ZymPWCZnr1g00I7/hcyPeL7vr1D3su9cOtyvQAg
                      9LesYpQ81AHuvAKFwL38ewy9F6h0vc7fjb1INou9QE1EPLnXmj2WPwe9TRZfvYjRgbz1FqS9mg7J
                      vZiVn7wpHo89AxxAvbBlnr0K9389nmuGveztyjyU4KC8pNiIvWXurj2gp7C8On1sPRPyxr2ARto7
                      UHW0vcC9ATvJd8Q9um0KPRImpb2CMGo9UAy+O00BQb2aEWQ9MZauPch0jL0wCA+9x8NlvZmthD0w
                      EDS9CVuePUkfuz0YNn68DXuuvUxfFb3gZtm8A3iOPaRZ9jxCiYK9mEQXvGCoqzyQ7AO8safBPWHr
                      wD3EPBK9jCuGPGo4ZD1C6o69+AWCvezTwLwANIc8aK7YvKIEUj1AFk28SG2HvPCWlr0zjcC96uEf
                      vSyApDwTz0a9Yxm8PZDPVbzYc+y8KiysvTAhFDwTb8k9kfS3PQAA+DWRn7A9MJquO6/KnT1tbV69
                      mSW6PWctsL3OeKG9rldGPRGkqj1AMMm8kYq4PYIHEj3QuzW9zXtVvcMUiD0wQBW8rK6YvMExsz0Q
                      dq69CXicPee9wb1P+pw9qM4TPARB5TyzrVu92CdcPMD5UDwyf5a9otwbPYDzR708PYO99cqTvZor
                      qb0sI/g8w2HDPcFrjD1n3q89s2XAvRoxSb1gXTG78jt/PeCbG71Ai2m8gK0RvHQJxjzSZ0s9eT+D
                      PR2dLL0Z+6Q9WJgmPDtUlr3sGou9HggTPdNhUL1gw4W7bIcIvUPruD3AMtU6S2vEPT6iJD3Qh669
                      QPtoPIPjn71vwrQ94pImPZfgqz1uaC895nBgPTWCqT0De3m9MDeeu8hJrjxQKbw74KeCvVhVhTzg
                      wWC9YvV7PUCv8bylx5E9UFfbO4szrL0VLqK9wMwSvInPiT2Z4J49mjEtvf5+GD0A9rS5xNvYPPdu
                      kj00/uQ80RC5PeMSkr2wmwW8UEduvUzKtTwwo3O90mKOvSmTgD3mJ209DLPqPJAlSb1wxDq8uPCr
                      vPbaWj1xrog9UFDtu2o8Az0Y4BM8vfEuvb2as72wD1Y86BiTvDiLnLwAW4+7GgtzPRa2hL1XyXC9
                      /SNtvfdUw70MCNi8+eTEPZ1BHb1qirS9jcCHPTofAb2z/EK9ftOhvbb3RT2Q0HY8IgBQPYM2Ub0x
                      mcc95IHcPGwx+zyUYfY8M5osvZ3mMr1oM5m8OkcUPagbK7yAHe46yA31vEP2Ur3t6HO90NdJvWME
                      bL1/asS92EMRvB1/qr1SsTU9kZSoPZr0KT06zH096vxbvZKXPz2UZ4I8lEjHvFjfJLzixQ89StBo
                      vQrhI72HRcE9YJDRvGsjtb0EStM8oNKIPGLUsb2XnJI9mB91vOA6orwCs6O9zTW9vSQpEr2epQg9
                      OuxYvRjI87yAHms6TYqCPQhajL3wECg8Qp9IPZPYR71shaW8hqSXvRgk8bzgfCy9uJzvvH0MnD1g
                      47u9djmLvQqRg73ZT4U9qtxNPb0RxT1zkU+9bAiNPDeMQ72OQVU9QDdUO2a/nb1DYcW9sM/AvYLQ
                      Uz3nEF296hA/PfDse7xBKcg9RrEGPWBKzbsJKK89fWszvVBM9DtHfLg90H0DvGBm+7vhkq49NDOQ
                      vD4RVD1Co349R5/CPQ6ymr1ypys92JhSvEC+uby68m69Xa+RPeE1kD2sVMO8dPmSvPhA4rzmAXo9
                      YKFruzdDiT0oqUu8EpFIPYg747wAmvE5cvmsvf86gj3NKHO9YZKGPQC/nr0q5zK9Oiy2vfReyTwo
                      DcQ8XoJlPQyapbyikVY9lAzdPHCKPTygjPM7ZxN8vcbwZj1ttDC9lg0FvZ2Pm70Ow6S9iCrBvO1R
                      YL3dU2C9TJzhvANFiz1SRX09vSp9vYkJgD1MROm8ZmtfPS1ynb1zY2i9GLiavCZ7jb3QzO87vT2L
                      PTCisLuTxZ+9VtSGvWBOqbwKxmQ9EAtDPCufyT1SDGc9rzSOPbiijjwQ1DS8W3HHvdLnMT2gP7W8
                      G5+5vXrYdT1+gk49RZGVPYQy+jygOh673VYavdg/37z5/ZI9oxN7vTMVUb369Va9aO71vC7MBT10
                      MbY84zyIPe6Mej2gBca7PD7bPOP2vL1BK5w9WC+LvBlqhj06q8e9SLaTvExWnzw5KKA9gsFAPYEd
                      tT255ok99KnBvLGCgT3jJI09F1izveCT/7vy1WM9WiAnvZ1our324SQ9ZgtrPSL5ID1yE349MNx5
                      PB9Bv72AudK7IPuNPDBKW7zM0oq8ob7APVVJmL0Yo8U8UVaaPeD3vTzCJC49gB5evYOLe73a8ly9
                      FRiLPaHAvT1unXM9W2GQPUvrwz2vG5Y9GLrmvOD5iL3oZVo8VTrAvVMgoT3RgbM9zJWgvK2Epr0Q
                      UHC80RCAPRGRzD3J3Yk95wdmvf9QjT2k9dU83IyFvaD7XDtY16A8mxSfvTopKL0BXIM90iuwvXhC
                      +7wjoWG9mO2VPECrnbqAf6+7sGHTO4YsND3H4Yo9yKrgvMLzOD0AC9o7/ZdsvQDiYjsw60C9aPTh
                      vMbrJT2vabo9aTuMPagbcjzeF5C9qx6Tvailx7zw9Wq9GMFfPOoIGL3QE3U88W2hPeY9Nz0AKuG7
                      6LbvvJ4iob2oo4Y8Vnafvarrbz1dyDO9aouwvdAyk7u623K9kDMbvAClKDzlSZy9UKYbvIE3kD0G
                      rhw9Ku97vXHmjD2vWLQ9uK+lPDA8yb2XVpI9ABFhvLAzwL2B05I9cEdKvHzaD73WGnM9x0PBvXDo
                      I7wwPDm9RmgBvb3IhT2AiUE66YWZPQ6lPj2Mc4C86DHovAJYET3EwwO9GrRevaiuTTx3y8S9oSKp
                      PfxaBL24gZQ8f7yfPZTh47wpyIE9HslJPQ1zwD1Awy078v+avUx9pLxb0o492TiFPUBheTwAVe05
                      oCk7O1BtDDx4oLm9MIwJvOGgmj1ifxc9ULxKvYbTdT2IS8284OnOvEjyib0wAxk8gBPmvMOwrz0w
                      vrQ7KsA1Pasyo7159JA9ZkGZvfD4ETwupW89HTUkvWO0Rb2R3sE9qLDavKx08TygOB67TlGZvU7y
                      Fj2Le6m9+RyXPZbfjb26lwm9szaRveGgnz34eKk8gHuRPAhIs708n+k844PIvcTdA726wEI9QPQJ
                      PNgEIrxDNo097RtKvUczwb3+dlw9bigkPZOdmj3VcK49ArMnPYIFHT0oIGy8B1BIvYLQoL0Z8MM9
                      AKaEvayXzjxg0HQ7j5qrPYgpgDwwlp29NDG2vJCQaryBzrk9cPVlvLoBZb3rf5O9l6MbveDAhr0g
                      u769tEOBvU6nor0wHom96HlrvFiazDyTJIk9jeyGPZQ/C72BxcQ9glI8PehKX7xsJ8Y86ODJPMby
                      aT1yFH49hnsNPc03vz0A0E08OQ+HPakYmD0w2Wk806anvQCtmL1Mfv28bTF5vWmnjT21nMc9an8t
                      PUyp2zxMnNO8MI1bvN86pT0DG6E9mGu7vAyNC73QjXe9R5p8vTQf/jzs5IA8x4ccvVqigL3a0XC9
                      +tCrvWzikLysyf+8FiMGvbrWnL1KG0A9na15vS4iOT1luai92DCevaAdsrxyAiI9ihe9vfjMjrwB
                      K6A9MYCCPbBIgjunFro96AhavAJtlL2SYDU9txg9vZZaBz35MbA9WNrsvOV3o70yaR49vcTIvezM
                      7byCj3w94+yxvWpuVb3Azge960uYvU1tiz0CxS893+WePUBvMDufN7q9qnpKvd1eXr0Dk0G9nup/
                      Pdj7b7xIC5c8bl0VPeQm3jwjq6y9B3uOPYY/az24ZpE80sgUPWK1OD0T+qy9NPSIPG3SoD19xlm9
                      XVtMvblbqT3Y/Q48mIZmvN91xb2svJq80ePFPVexwr2yMh09gGOivV+5vT1CZSU9AJvau2YvdD2i
                      y0U9imUMPYeRf73682M9GB7LvXRPjrw3wag9oCW5PLGRoT1amcG93pF7PQXpoj2DwUK9SHOcveIQ
                      az3Aa1K8LOvsvIjd+bwa3CO90P8wPGprbD0k5988gF3ku9Jrcj3uGwU9GNWzvdcruD3y8z89+BbG
                      vfjSh7wURYe8YuZiPcXmtT2cYxO9QiZRPWDY5Tuq0Ay9568qvfBNYb1mRT09wO1uvbNnpD337lK9
                      BPsEvfJdJj3oeby9GiVGvViSNbyKv0Q9QMZ2PAyL+TxoPmc8LKWbPPI3FD2aWXK9X2CYPanhgT0o
                      V5e9sBl1vaj+7rw4MKw8ACDfOoOPY713R7q9GnG1vQvflD0dlLM958i9PadvuL2kPOA8DLStvDBY
                      I7yipCo9S2Sevf2zsj2WWCY9iHi6vF6gmL1uUhc9wEl0u39Vqj0ut1o9wkctPTAezjufwbW9dqgS
                      vR9twL2WIpu97FOJPIhAj7zaRD29UrQ0PbnbtD3KSkc9JSOTvfSIsLwM0ha93QmlPb77XD2QtBm8
                      xs0EPQCdgDyWsQA9TfSDPfBfeL0bXqy9MIgAvaEDyz1Iaca8wKAcO8y3AL2osG08V14fvU5NKD3T
                      GJY9bBiiPH0Bxj1FKJG9EaKXPRk/qz2N41q9He8rvb2JZL1DTSC9hooOvY4bBz11+oQ9W8WfvZ4x
                      bj3/eJg95RSAvaFqnT2Bd4M9gbTBPVCMzzv+gjY9KNAnPFCygb0wP7M7jeDJve/GxD0f74s9LMqJ
                      vAoZGz3Q3nI8auejvd7eCT1yMhE95QCJPWSw/TzGbU09/t00PRBCXL2elVc9DUWXPeiYrr0TdES9
                      rAOivB4hAz25L6g9T3quPShGT7zw72297UAevecKx70kft48/nZsPRIaVz3N4qG9LIGFvKjMYrzu
                      F4S9sPkmvFDkFDxWlSo9NqBPPcNStz0i1kc9lL3bvEhdl73iMBE9syYkvSxz9bwo38I8BdyIvQqO
                      dz3Psp49bn+NvYAJW73a28C96jqavfaMXD20qc+8jLOEvR3qs70zdk29IlM0PScAiz3jPbc9f7KO
                      PQnohz3CTkc9B4aXPd8vnz3Y/kw8ULsqvTAasb36PXi9X3aFPUAvGjsgEjm9+h4Wva21Yr3Vtq29
                      k09JvYUygj2LR5c97ddgvey7oLyk29Y8blp1PeDk5julIJg9OE63vSYoYj0gP069sJiJvXhqjb1Q
                      hpU7KgE3PfNxjr1dJI+9UvkDPQPvPr3ijgI9IAS/vFZ/gL1m1jg9xmkKvbQ0xbzwbTG8aDb/vEDR
                      nzqKbWM9J6NKvScBY72zyMg9cLRVvXjvtzyAOcS7zO2+vHNHb72azYm9AJadvCpUTj1amKm9AbXJ
                      PR+4tD337SS9jYWyvTMMTr3BbKQ9hmMOvUAIRTy+Ko29ynh2vfTO/rzepQU9IzzJvdZwLj0uEJ29
                      QJMmuyacAj1Uzc68wO4/vKV6xL0oE6k8aCBGvH6nIj3o+ee8GXOtPTqXEb0o1hS8DMj+PFl/jD30
                      6te8mtlfPXQFtLw+T5G9WFR+vPDxbTy3qiu9oIi1u5MQP72qpxi9GNK6vNAQDTxqtws9tMqqvJHL
                      oT3+fqG9AJlrvNiCXby9qby9gi2nvUtLlT0vlr89/idhPZ4+OT3Jq4U9jG7JvFDfCjwAEPY5akZz
                      PckOmT0KAKW9VimKvd1qLL064py98kACPdozFr2aBy29oCRoO8C5MzvLS529sAVOPAS32TwS+yA9
                      B1sqvYBilTwgkoE86FEuvORJ3jyuEzk9FEapPAC8ELnN8me9lVymPeMTjr1A9Cm7TfCSPThrorxA
                      Fbi6w4BlvdRX/rwXOiy9jAUWvbs/jj0B9pk9zSdyvWImHz2A7OC6F32CPY5Qpr0lBbg9CLOqPII2
                      Mj3mJBM9gJEeOnNmxb0iNDk9CgsPPZSUDL2YgJq9gDpkOigGRjxQ4zu8YYXHPQesur22wWE9bEjy
                      vJUcwb1vAa695lgSvRAWYb3sGaO8IFc0vdqOPj3YZ408HaGNvWCBx7xKZyE9TCOGvKfUoT1Sw1o9
                      DZJvvRCDeTzgJYM8TEqhPLsVoD0TG609EusePcwX0LxifCo9Qod2PZJAJj36tWS97p+FvdABEbxd
                      6zq94JGqvDD7bbzcO/w8wAoMOzSMujxld6e94rwMPZowBL2mwwy9bTiavSQViL3Uzem8wCSTvOop
                      RT0wZhK8Pz28vQKwIj2gu867ghdUPZSGpzyY1au8hwAyvZ3JzD1AQVK9APd1vA3NYb2B1ak9wqoa
                      PSTF/jwiOXQ9GsdMvbREGb32nEY9FBO8PEBz+Dpwcry9r0iNPXIRNz1siIq9LO20vPH3rD2C/Hg9
                      GjslPUBH1zqYD3a8kJaYvYdrbr1YjLc8ogQmPYn7gD25FLg9eF6WvVXSqr3ADMo6EsJ7PWZGAz2Q
                      9nc8YIcqvarmKb0YWZm9GA06vLGpnT2vcpE9jvovPfCffrwCNoO9KqBkPUAXR7wxgIE985AhvRhw
                      pjzgVfW7gIvYu4VFgL3iIVo9cpyNvUTi8TzAnm691biYPcB1hryfC549LXhhvQBqcLwtAFe9oLyg
                      u+JQXD24W6W9871CvQ18wT145Mq9ALuBu9bOTT1xdoc9qMhqvLfqU73CQns98h60vZaDDT2DOLg9
                      2DQjvHQ7vrzvbIE9Qp52PYPjtD3/Hcw9SPiGPMD3Dr3iHSA9JEL9PNT6uDyfHbk9CoZ3Pf+ZkT04
                      D9W87caZvbClGL2+qUM9d8cavdllij16MA+9QDlMu0+Moz3akUO9tfG0PeMZGr0ukRA99WG5vWnJ
                      vD0b/ca9wIDAvKh4M7w9EKe9sGECvY3Dlb1H+H29nYSLvX7vVz3SHsW9f2CbPbnsyD0W4ig90AGQ
                      uwoLhb1gVd47JnxYPZEcnz3AVj680O27vUyEwTzWyqu9oA5iu2zhqDwzcVO9LHqYPP2FnD1vHMU9
                      J+C4PbRGqLzCiAo9Z30fvdq4WL3AtJy6uj1XvZZnID1SyHw9Ya6PPY21d72orTm8duRiPdQmgr04
                      s5s8oHAgO11RsL2yNgs9ah6hveOlvr0kbfQ8r0m8Pb6HCz0CGTU9YHlzvUljqT1qDjO9LrECPdv9
                      q73d2ry9zF2CvNmkgD1y7sS9UBCkvdKGbT0UDp68yDeVPOTc8DxMtuu8IJ+/PMeewj2wN3a9zZWH
                      PYZGbT1AXXC8dDL7vCxr3DxESNE8NrxoPf5zo733frE9su85PQAAS71dq3C9kHMVPIKpVz2zDyO9
                      fTKXve6UCT3Cw1k9NgObvZe5vj1Q7P+7eNbHvKMQKL0YQDA8dv0gPTHziz3Irqe8AIknO8FQgT2A
                      LGO8RbfLPVqaeD160Ji9BOKIvZDqPzxStDk9ALTrulPabr2u9Tk96N74vPx8zzzbta29hUDCvVP6
                      y70C8y09OMzFvcXXn72Itp68ME3Suw41ID2/DLC9AEWPuzm/gT1yQk09ZZy8PdLNLT0ktv08h3a9
                      vZo9sb1Gop+9oMwmu1FRxD0w/je8mNk6vOUFor3gchW9UWaqPTwGgr3Wtjc9sJj1O/O7OL3KwT09
                      mOV6PNDZ4zvYPii8MB6NvbQB47zx0YM9L7W1veurqT0Rj5s9XqAhPYUgvD29MyC9fIz0PATS0TzV
                      F4y9oA8mu2KgIj0sNf88LK/wPACiE7wAM+y8ut6CvdMJnT2GMyY9EGw4vJFCjj0odzM8v7GUPUeq
                      IL1i9re9cjIKPdBSHTzg6Kw7lCGbvLblOD1Kwh49YkaqvRh9DDzsQqW893aQPeN/VL1Y7Mu9y1mf
                      PUICir1Qlzq9ZvIRPRTcp7yJUac9Yi4gPddCmz1QU8u76//EvcBrIrvZIaU9w481vYC7BTyUO7g8
                      IIwDvbMzfb38eQe9QIdJvDosXj35rMM9uupaPR8kuD13obw9C86mPcMuiz2AK+q8cFtYPMYJFb3m
                      0xK9eBOUPNI0Tz1vX5Y9OrMmPSVOgz2WGAA9Zk50PTJxub3NCL8982KxPWyz/LwykU094/SPvVlC
                      qT3Addm8wpuwvQD5TLp6f5O9HpINPdh0RLwnNWe9oe+WPZ0El71HqGe9+v53PZ05JL0OSmQ9NrGV
                      vRuCnD2o2e+8GmxaPbhEsbygDxy96DCGPImarT2SFWE9XVWhPfimhbzAtDU7dfqSPUCklzyBkpo9
                      V1BjvUb0LD04Yv68niUMPeAn1TsHxKc9gsBhPfCFy73ObkA9QCewPGxVGL363sO9GaW5PYMctr1d
                      y0K9y6TGvXvWvz0QKDa9IUygPdLaUT2THI29VyGJPf2WJ71eDmA9dYqUvUwJmTwa2wK9YA3MvCj+
                      Hzw5G7Y9M1tovVD5Hb3AUN66xRqCPUo8yb2Cklo90B6Su8CkybqdyUS9ukAZve5MTD2FG8k9DFr+
                      vJLSo73diz29wJpfu7G4pz3oeMy8i8qOPXzT9jxiMnQ9tBX3vAo9Zz2Kl0O9AJAqugASwznUH7o8
                      DhRNPbIfSz1g8OS76xijPd4rGj1GCSQ9BKH8PHiOpjzgTqI8N7SSPYFEyT2C/yQ9GhwNvVQxsDzg
                      zqC7l6W7vbZsF7151Jc9hiYKPZLBpr2DDna98qunvbfZeb1IN7+9N5quvaY2Fz0qW4+9M9lHvUDL
                      gr3Cl1c9vTqxPbRx5zxYbIS8jUSOvcXapz2g91q7/MnXPABgk7lTSyu9ZmCBve1Mg7069k+93YlB
                      vQlSiD2gArg82ME3vAya8by6bgS9LOzAPH1lPL09N6S9+pF1vZrIVr1Hx0O92jYjvTCOWr2qosy9
                      gieKveink72maig9N9CCPSZjSz3C2oO9rT1XvfiL+rzY3cU8QJRTPGX0wz0Yde68hWi5PSgwoDwU
                      S6E8BtSfvTA8br3gg+07gj26vVBtX73wPUc8wnpaPczciL0R+pg9o1NLvVe+Ir0gc5q9Lr5NPT0d
                      nb36E2g9UFAOvDGVwT3zNSu92rkZPSngyD3ZIsk9gHalvEK6ej3sDty8mJaKvKCAwDyAAUK8orgV
                      PcadGz2AU8S9epYovYLxID0a3cu9AJupPIKJEj0SRBM9+smgvfOHOr1ZnLE9vc2sPdhT7bxlkZe9
                      MAdzvcAYxjzwsHi9uK64vaBYB7soHqE8+1LFvRsRhD3IFPe8w0tXvWggt7yUaoy9AErTvFjiuTwa
                      vWC9mdKOPUDpNjvyXsK9ovpQPSAZy7vGIgK9UxNtvWtVrj2o61280lMSPbfHqD30gq08qBzcvNKL
                      Pz1+GVs9R5bDvQDQCrtFUb49xV+4vXAHCb3yvV89gtNXPewGnbyi1no9reFjvcbQLD0gVU69crdU
                      PRTiwTwNNYu9IDL9u712hT2A57+6dM+qvElLxD3g26+9QpxMPTIOGz0Nlyq9JaKAPSrfaz09wqa9
                      Y8CnPYCBL73KuGO9MDTau8B8T7sleog9EwRIvYrydb0fQcy9TKXyvKumjT2ivU091o0PvcNUQr1Q
                      E9Y74FLYuwUTsz1E4dE8VN3AvAA01zjVVKm9jLKivNgJgby3bWy9oEBEO337PL2g7Wg7lhFbPYG/
                      kz0ARkC9M8JrvQMjHr3it2w97TIjvabPjb3KpJq9859dvdhUMbzqzXK9ABCFuyCKWr0S3Fo90j5I
                      PTEauj1avUU9EwyTvTO9mz2zLrU9KDVBvDq5g72md3Y9M+ydvcfaGb08GYa9qMkpPFC8Cbzr/5u9
                      tISbvO7Jm71w7ja91mUSvfiXwr1DUXC9Td8lvVQm6byYv7Q8kDM3vfLgHT3VxqQ9gG22O6gg/rzq
                      YHs9XeUvvVp0AL0aPTO9gJhRvI5Epb20ePW89zg6veqds71awxe9ss1LPcjwkDxAZmW8rTCIPchZ
                      /rxgnyK74AxkvTfgxT32Sx09ugxnPWNXxT1L+MO9+tAuPcA7obxEHYu9Bpk1PVChWbxAvNC8bBrZ
                      vN2Qur0A0KG3F7fJPZEWpT2ARX69gIKnur1Jwb2wPT68AGcHvZY8bT0oisi9M8I+vY1Mwz1gYVI7
                      ZAvaPNHJqD31/Jk9gFlgPKiGpb1b5a894gx0PbrNbb0gd5i84KtTvZIdbT3YYBY83YaQvbdPhT3E
                      5v48EOZcvcAAUrvqqm69BRXCPSBNo73X5GW9wGgtvT63Hz0MHMe82k7LvUj8p7yaJwQ9tsgUvVB6
                      fTwAVLe6tRugPaAShDxGVi89N4OVPVLQVD2U9wW9Le2UPRpaXz3m6mo9sB/3O1CyHjy1z8g9MnUj
                      PbRBxTyniyS9viYXPTR18LydQn69ELOAvQg257wNFmG9eSy6PaDDKLuMNeE8ALvsuzCEoDtwbEK9
                      yGbFvAgV+ryi/JG9EKgvvP4Lcj1YA2o81LH0vKg2AzwMnse8as0PPbQP/DxogOC8yIqovNKagL11
                      rLc9YEu9vUBtir0AgHI4TcyDvVUruj2gmiS9kxyRPW5uYD3DXyS9On8CPTAAhTuiiBI9UoS8vfRO
                      mrygnn87hxy6vUFKvD1AiDs8IKuuO4J0Ez1TjCe9oo9ZPYkolT2r5bY980yVPa4Sp73HSbA9ZJL+
                      PETj7jwKMiG9nPHVPNBVrzs0BAS9o5e6PfpWEb0lupQ9MntaPRi2sjzYnJu9qqqRvX2fNb2ggrG7
                      5eSAPbepsr1gCC29Iny1vbC2xr1dBHq9OoY1PWzx+TyqHoi98LZgvViW27zL2Ly9wKQlvGZLMD3e
                      t149bK/2PABFWDwYciu8gD02uk1rKb33hmy9glBvPeAhoruEgdY8QLxMvD5sXT3BXZs9GsiivTxj
                      /Tz64Mi9YEmtvYJHeD2R2pM9ELQtvZC9AL3FB529aOJ+PP2Lab0uijU9KGaKPHpCyr1Z0Ig9sEoF
                      PHhwh73lI4a9O6KXvXwb7TwwglA8JErrPGxJ0TzxkLE9cvJgPWHYhj3H44U9SESFPPkSpz3+FDg9
                      d+0wvRnrgz2nV549WY+ePTUGkL2iMcW9OtUAvalOkz0Q4RO9sJcIvH5ufD2GcwY9DNzdvND5n7vq
                      enU9OajBPbIAm72CIEc9NCTjvCjYlLwiLY+9GfiAPf0iYr3UerS8S7WfvRevyD3d51W9jIK9vIMu
                      nL2UAKo8wnJ0PYR88DxiyZO9CvZVvW+PtD0jv0m9YF57O01Ol72oeAQ80npdPba+Dz0oCyy8QJ6a
                      vSATvDuZEJ89gKW8vLDM7Tv9DIE9b8+nPTITHj2Ev+Y8mIDCPEwN67wKfQI9iC7RvC47FD0tiya9
                      XRStPVoBWr1d/nO9hqgaPTik2rzoWXI85ZKyvSwNyjwdEcA9TUepvUBqpr1i1Ts9Hjc2PQLEST1m
                      QBM9zyCvPTCWMbx07pC8k4zAPU3buj3n6Jc9aGcCPBCfOjxTEyG9Ki2nvY6phL2APqA88JYZvG9P
                      pz0ogjK8INAvvWjDCDz5y8I9IMmdPLYnLz33YLi9UcW3PdWZgL3qGiG9fbCUPSANCL0phYg9TXGV
                      PfCmB71JZbs9QP4QveQh0zxQMcY7p6x4vRmJjT2tIR29OFK2vFj4rrxaZV69qtvHvX9Oqz1QOii9
                      wtwRPWBd0jtd8ZC9ErQ+PfDOCDyaI7S9v8y5PekByz0w5xG9lHqFPAJtyL2JBIY92IW+vCShir1a
                      hBa9Hsh/PcfEyL2CRgk9N7RYvedzur1t5Mm9wKNRO2KeTT0E+uI8DezAPRrRZb32yCk9oXq9PYRm
                      zTyViba9oHvIvUFUsj10Lqi8kM0XvXy31zwY1YO9GN41PMCReb0YT928A742vVpYgL3wkpu9u6qG
                      PYGevT0VEbc9v12zvbI5Lj2gYYO9ZCHhPJgFiLxQ+NM7m0iTvQq+vr1K6QS95tmqvQB4yby5B6o9
                      UH6cu0UNlj2ZMcE9gPqWu3nZlT3znzK9ghWVvS8GrT2wAGu9fm5sPRLDID3Zpok9GP64vERx/jyo
                      K+O8euhIPdCbtztQxxK94A5uvV8Rtr2g3Jo8TFzGvGbicT1jFJ894zzKvWTr8DxgErS84sRQPUph
                      Mz3iy0U9IEWlPGih6rwGaF89KGWAPD1mub3ARgW9/kpVPZW6i72znMM9MO6kvbga+7zA/3u8ZQqA
                      vclJxT1AX0+7+kl0vU64Pz3KRUC9uv4+vavQr71Fg8q9oPRoO/Cikb2aMXa9vrKnvXGlsj0/prQ9
                      SCelvJJaaD1odGy8Wg9DvVM4G718zdc8gFisO7DOYr0gisu75owaPX2zoD3jZGi9qFQXvEZYqL3R
                      9sg9OJKfvcDsSL3mbpC9Up9LPUBEWLv+/nI9R8OdPSO6Wb1Ijoe9Rq8JvTO6Mb2bn5u973CMPTFZ
                      hD12yUw9yGimve49AT3CBJu9FU/CPVk7uD3AQoG8EFcgPAiy+7xgSaU7wNi9vaiIgrzQUW+9Ykt1
                      PSBXlrxJmpg9MCdkPHQQk7yA2YE7oC7tO7kzjj2/EcI9MK2Tu8jPnL1VSo895mtjPYPEL710L5I8
                      wP8tuxbdUD2A//q6YtUxPcVdsT2uaJS9AoEmPUoVyL2S3189k76EPUVDoj1Ucwu9gCSQvZ17lb0A
                      wIS2Y59tvUppr71ga2q90pgEPctIwT1w5As8saa8Pbd9ub3iCDA9dL/yPLfkU73n3iW9yF+7vUsu
                      gz2qvJO9zo+svbM2N71wQSi9ofCbPcLDWj0Khzm90tyxvQCzzLxWdH49pgcrPVJ/RD2NKK69JvgL
                      vQTA/jzAN3k8JK7XPK4XED1ULuc8Ln+BvfwE4TyDNYo9zMcDvWc8tj2qn1k9cxfKvbj4sTy/SbY9
                      Y5u6PQgnvTzhn6Q9ElcIPcZ6k70wZgw8I+qMvXAwfLxDHcK9AbrEPRHvsj1gpmk7KRPIPeYlC70l
                      1oq9U7ShPXgRrrxud3c9wrS2vTDqPLx6fiA9UmVsPbGYvD17wIY9zWR+vQcmT715C6o9AEHKO7p6
                      ZT2vMq+97y2VPeuDxz2UjJc86WSlPTExnT35QL09Co2cvU6uor1nLsS9KOtqPMMUt720BIa8J6pm
                      vYB8ozoDQWK95+FFvXX+ub2PJbg97X/HPf4Omb0iEio9gKQnvMArEjyA66I7rIOSvNOktj1otFq8
                      atczveu4mb2Q0lG9oSyrPQD3ULqq5Aa9J0E6vRqEaT0h8a09/MaAvVXviz1Ibai8WvWzvYUzkj1k
                      LPI8Qg0PPTJaCT1ceQK9M/jLvVZNKz1JcJ09eoYEvRjwBbwA/uu58nZpPbkCvz0wFgC9lM/7vOFY
                      hz1NdY09/fFWvWOyI73isSo9V2/HPdP8M73ICrY8QggXPfUAlj3IPqk8ay63PYMCOr1j+SO9aB2H
                      vG04tD2bpra9AHiuuapsKj0AiEa83C8YvcGUlD0+DyQ9GM5EPMCS8zp7IZw9cxiRvcIlSj3wtkC8
                      ecCIPcBoL7uzZ1O90ItkPDI3n70Twb29cPlovWnklj36gUy9uZqXPfbYmL0AMUq7WJ+DvBjVyr0F
                      Upk9xhBGPZSCm7y/mqA9TKPavDqpvr3/28E9ahcgPQsKqr36eb+9g5dAvZVajL2Eef48GEcXPN9+
                      u724AOm8wXWKPdH/mz3U98u8UpcrPZZDdT2waSk8Q0fMvei8Mzyn5Va9UfGRPext/7yW3pq9rEnq
                      PIq3mL09u8e9fX/IPSdZGr3GGR894VXIPbifqLx756K9h2tbvZI1Yj1BD4k9Q6SNPTCHursw9o07
                      nMr9PGNgqj2w98q9YDmUvNkWwz1z0ZK9rECwvMxGlDzAas+8BLTxPAsgzL2HwZU9+Tq/PUCHZLuM
                      qQi9Y2q2PeiAlzyt2I+98CUSvUZXob2eh0c9AHdaOlcGmj1ZHLk9qQidPatYv71wwR68DR+Tvc4n
                      Mz3QG/c7gO9/vCuCkz2IZdS8j3iEPYnwsj3WxjA9RkAoPcN8Ob2CDQY9YDuOO2wQBL3Q/+07OK6V
                      PIC9VTqI7r+9VV6yPSnrmD3h14c9l5uuvRJBrb3tkKO9i8zFPb/8jj0zkXm90xRAveDL+LzKA2E9
                      ozoavfCxy70JrIU9eJfCvD2qt73B4ZQ9ibypPWlgvD0aUVk9Ur0uPYFuqj3YibA8etpivcPRtj05
                      O589W4+bvVqWob1y1C89ktUfPVb5Br2lr8e9ra1JvYWRq73AHwa7QByFvJiDLbyA7b06TDqFvDBI
                      Abxy1Gs9UO7AOxCSN71sh9g8k6YqvV2vkL1QDig83PbbPP5klr3pz6I9NhwDvXCcYr2xUcI9oCSq
                      O9QskLzD6r49B66iPdcOyL15zcU94DrKu4CHl7pwcmC8SJnGvSIdZD1SX3A9ABzXOwO3cb2gFbA8
                      +FWnvPcGMr1aL2O94HWPO4udlb00yPg8hjwIPe5RKz0GLj09dKH1vBNejD2LX6K9AG5lO57TJj2P
                      kaM9dqxCPaiRjzxzlqu9xzctvbCWpL2bjr+9eioqPQ5OZD2wMbm9PTK3PUDEJjsAak+5ah/Fvez7
                      tTww0GW8QnQIPYDtlzyyobG9+6SXPfj9s72b4MW9tNiJvMQU6DxM8og8VAyRvBq6SD3JXJs93RbL
                      vVIFAT2DbsU9C++TvXLnCj3tAYA9fgsjPTWGsT1kQPQ8T2yDPRVfpj3hpoo9qP6uvIbig73Zg7k9
                      PuJkPfV5lL1Ejuw8R0GTPa89vT2wY8W93elKvQgrjr0nuMA9IjEKPTn/rT05ccI9LpsMPWDqybtg
                      aqU7gDWrOw/fvz3YBU68TdTKvYLcaj2ZGbY9Q6amvRBGxb3Qygy97T21vZ25Vr0SVw496LG9vQfq
                      ub1jecg98KA5PJKtdj2A4/E6fu93Peiiqr33y6I9QAgRvQB5EDtxRps9udaNPb2CP71Q3sW9dG0L
                      vcCD6Lzh64U9pjdVPVJsST0uKg49IDmAvQOAqz3jP4A9BUK9vVq6G70Rb4o9KA2MvbVToz3gPsu8
                      Qj0iPTNxI72YBfq8ukYhPQBQ3DdDfJY9mkd8PZIzDT23PUW9J7ZpvVB8obs6rAu9aAvDvJievrxj
                      RB+97CSOvCNRWb2e3VE9ELRqPGASTLvg8Wy9ZkUqPdBstb3naK69vw7LPZk8yz3r4r+9q52TvdjR
                      Sbzaxrq9YYSePQDwPzsy7Tg90mBPPc1jlj1Cn1c94l3KvVT/2TyAkc682OauPCOjOL1PDJs92g/J
                      vWC4o7vqX2E90NpQva0rqL2uCnI9fa9rva3yWL2RxaM9ML8KvKC9n71Apnq9MLt3vcQs8jygyxe9
                      U0svvUVhp71NQlm9Iw7JvUpVCb04zJO9/o0iPaXtor21ab+92LW7vNqqc72xhI89WOXgvLAIbjzx
                      cLg9jPDfvHAFADzyCxs9nZOtPWZbBj1wl5K9R66+vSf2pz2ZOZc9MsRAPdGrij2R75w9MrqhvU2L
                      kT0GEpq91IivvABMsjtZv8E9cNQVPBbJlL1yGhE9MtcXPQBVIDw1Csi9RPPhPLwm+jyrd6w9DfMt
                      vdkiyz36fLu9QoI6PVJUYD3ZWJI9MDTCvUgh+bzqLyQ9YLzDvTWVwT2mgho9qoC7vUPWvT2KNGQ9
                      5eO+PYq2kL2APz+9CWOZPbVZqb2jfoI9N067vUPXbL0Oug89AmhOPf3lQr2ZurU9lxatvZpBAr3M
                      yL+8OkfCvWBSU7sVEpC90kZdPdteoL1Qpvy7o5+bvWiDiTwuKi49WOq+PDD5GrzPuII9sCMtvbm8
                      uT04t4y9wNgfPForfb3POIo97IvKPLAG0Tt3k7G92hgvPVlqyT1uOqq91w3FvWe5O738Hg+9xrAm
                      Pfq8N70o+iO8sAltPAJOhb2wQSG9+rIjvZKXgb3q1Vi9zbuQPQAzVroDpVS9deeGvWiksr2geQ29
                      wDAtvUppWz2SQZK9dmgdPUOaVb3wdn88UPp5vXAxSzySEZC9uBWePD1CdL2wef87rX2SvTNCjT2z
                      1689B+DFvXMUPr0mDxo99Q25PSGqsz0SxJ29EjqmvVjppb0SAIq9oJ+WPJQMu7zpAZs98viBvZKm
                      gL15hrE9lfzIvVz+9TxAFfe8Ix/FvUibr71iyhI9KLBYPADlFrwQPlW8BO38PPJhGz0+p5+94tTG
                      vdL1CT2+U2g9wvUnPY6jlr1uljQ9ckodPcpeRD09SJG9lTnCPSGGkj3d5Yi9Q4O/PeCueb34vNK8
                      02cmvQr9EL3FOLY9WvqnvQYyMj3sHNW8p/qzPXi2gL2vDI89MR+xPdBMRjxoOwM83mtpPS0Bor0h
                      j5Y9QIY9PNhkibzC0Co948S0PRXjyT0N3ri9QK3GPAo1Gz2MNNG8GwWuPV9Bjz2X9m+9WieRva2F
                      m70Jnb49iNnBPOgxZTxBFr89SkQcvT/2rD0bwJe9Tm80PQhnkzwVMYK94QetPUDXoLpqIBw9M3Q3
                      vfsZy71glwE7LeLEvR/lvz2Acqu7yJqjvO61Vj0sa/c8YamrPWPEO73gY+O8TbUZvdi+lLzL/709
                      VNbIPJeWkj32CzM9mInHvHLgur0ONAg9QOmkurCkqb2Aacc8qP9AvKOHtj2AMPW8X3q9vf0Ptr1t
                      aBu9ZhipvYSw5jxA+h08AGl1utSyhLzAs5+8FrIGvQx7j7wi/2I9AuIBPTldiD3wOAO8ZdKavfSd
                      4jwaDQg9XE0TvYOrd71nR7G9hD/hPG1InT3Ycq48Ga+xPcCvc7yMhMq8NAauvBQ3jLwN7Vm9qMqm
                      vV6mGj0gb9G8T22UPVaPDL3agxy9B4CbPWe8yj3j6Gm9qs8IvVqcr72kLt88wqU1PWJeST2gLKk8
                      mspKvXzV/Tyx7oI9WHcUvLQNmzwPNMI9DPwPvfrDX72jHpU9M2OmPQI5ob1duoE9o1GoPSxj1LyA
                      k1K84/l8vXMzsT2awzY9x+ZyvWRZ4DyX8Jk9pIDsPJeMO70lTZs9xJ3jPB9KuD3j+nG9KtZKvXcF
                      I73mmzQ9hW+8PRwQ7TxsStK8OVmIPbW5qD2ISb28MH1ZvDLFIz1SiYe9/D+LvTyt6TwaZnw9LDam
                      PKBipbsqqhI94EKnvL5SbT0W7Gk9w18xvX3nnz2z6MS9MO15PAW9gL3l+K89AEb7uxgmyDzwmmA8
                      1wVavbBIQzxa1BM9elsOvbRa3zzrkLg9MOuPvfsHn73QEdY7WL04vJfcy71KRX69ncCWvRR4wLz/
                      Oa69RXeVvUAxXTuqrsa9I4ebPVTil7wAi5O8TYe6PVkfwT2G20A9aJ3APFDr5zuKyVC9569DvaDh
                      5rsRMJk9jDqfPHDJNbxgmbk7+Nv5vAKLMD3jOmC9Y2x2vc8Msb2B+Jc9mXmOPTA9Azzl4qq9p4Qz
                      vUCOrzzsubO8Mk05Pdj39ryh1cc9OcSCPaCDtDs6psW9RN3iPKYxhr21KZ69HOUTvTmEvj1xwbM9
                      q+GYPRerRr1GzCQ9tFSXPNVXiL01HY09vqWEvWbKLD0Mlrq8eNinvQ2/s72sfBm96arCPWYSPD0S
                      tlQ9KBTbvMJeiL2CZ5W93MMUvdcARb0SeqC97kaivTGBrD3MIo88yjRwPROOar2oLJm9YrtTPWDt
                      mjzCqUg9SqwAvacQXL12ggC9ONvcvIkJxz1s/we9JiJNPYAD+7sM1+O8uxCXPYbQg72A5X46SWGp
                      PXP0sL2Az587WvgVPdlWvj34G7Q8dkMQvTNFu73msGo9FlSLvbC0O70MGMe8ccGrPU5SPz1VBKm9
                      6DFVvIWyqD2dnV+9yIW5PB6hWj1Ry7o9Srkrvdd1qD2o+Ne8UDw7PBZymL23gHm9atEFPQCSjbny
                      wKq9AKb6OuDcuzuAxYG8AB6aPOgI3ry1NKU94ArlO1ZVVT3FUo09KLcGvHCQOTxkCPw8NlVwPe+s
                      tr2bz6s9ySO5PYAAFrzZeLg9ps12PT7SbD2MUw694AKBu+Zzj72aJQQ9goM+PQVRxD3gzZm9xJbv
                      PBCoVb3gxPa7U3EwvR0uML0NBqS9AKpmOYKtUj36Gzg9JoZ5Pf+Fwj0yH4W9FEuOvKxAir14CJ28
                      XbmhPXBQBDyyXQE9gt9/PTBKBr1AoxM7ItJ4PYaQJD3aDlW9S9m1Pc2Eib1G1RC95zxtvf3RxT2W
                      rKC9qqdsPbi8g7xgQRO9A34mvTKwID1sNLu8m26lPcCxi7xajR4959jGvUyMq7w1g7C9QMmIPFTl
                      urzTMcy94OXTu2gLM7xYkAK8AKZuPDEKsz3CXyA9QI4ZPL30jD0c+NU8ksYUPXIPn70AACy9EIIY
                      vCN+rj04coe9fV56vUuKlT3OST49/ch1vQP6jb2svuA8FzwpvZTmCL2zK3e9+/2UPWj4RbyiIre9
                      pKmHvRNzhj0BgMs9Qc3JPSKBQj0qhgM9R2eGPVgb5bw2g1w9dHz0PPFnrD1st6o8PbtnvZLQfj2z
                      qZc9la+TPaq8TT34uKi9MslfPT4Waj3qwWC9t5i8PYzat7yCLJu9DaWZPQHExD2j5ci9rKGuPF2s
                      ZL1wrIq94u5nPT25P71Cs8m9qUenPYCZi7wKXSG99NbIPJaSl72AV8u6QwU8vaW4lj3imnw9XIWG
                      vSgDyTydFYO9hMwMvcBK1LqoZJu8cuBuPWB8pzvSkY69p4VsvY0mRL2aiD+9LUanPa6uRD3QMKk7
                      doZ+PYoKeb3wPou9GS2YPdCLRLwa6Be9uODDvT18jb0izKy9PgefvaJeYT20v868WGjDPBFuxD1w
                      e7+99N/KPICU6rvnm669n56PPSNLvb2AZYu6OqszvaDDlTwOY5G90lhDPYf5jz0M/608M+W7PTDo
                      6TswyjO8NJTivFomSD1L7bE9qqEuvTTWgDxlFMc9Rdubvb2ptr3Es4C9MJhnvcBoB7zgpUm9iWHA
                      PYBbcL0KeCy97tcmPZrxbz1Ukfe8CKigvUq0T71DwrG9YxopvVBrLLzftpE9ago3vQBGSDwgUIO8
                      GAkwPBDBeDzumai9t3FrvVJAUj0K1ZK9SL+ivO8tiz2AnKm6wsYmPZhiKzxTZY29smFAPZfzR71n
                      Z8U9MrM3PTiGzbzoJEw8YGXuO4c2vT2lwbw9mnE+vQpzsr3wK3q9UNG3vbu+lj2gDPg7mhJzvSi0
                      xzyua3g9m4SyvcqUMj2K0sa9sikoPTOioL08MoW9E0axvYbkEz3UdIm9+pfCvV2exb3YclM8ZWag
                      vSyA/DyPH4U9Fo4ePYrTVL0MPoo8wJF8PGqRVb1Ox049AiszPQyKurygeNk7kCESPAs2uT2Gb4C9
                      nF39PN1ip73D9m+9YAixu53nl70a50a9g6XEvdwl1zyH8aA9Vu0JPT2tgj1eo5q9oDs1vZbRfj1y
                      9qu9jq6KvTg1xDwuZQw9StwQvS01q70oV4E8VRG/PZPHnD3uzXA9YtonPW74DT2dQUG9302rPYB/
                      iTwTVGa9B0h6vWp4Rj2XiWG9IMD9vMDHcTxc+QC9AhCcvYhgvbwgIva7JguEvU3DU72efA09QIMN
                      PIb9az0ynRg9kn6mvWih/rzYSGc8k4lvvaB6fjtsaP+8aOqVPLBTOLz5o5A9fwXAPX3aj72jJay9
                      wvV7PTBiIbyqvVC9rP7mvHqaJT1qbwA96A+0vD+WgT1QByE8BrpBPY+Xyb0m/QY9VQesPU+Uyb1x
                      8YM9NEIDvWgMPbwIHog8QJwavE8Iwr1oWH+8KFkjPEOYy72B+aE9OBuzPBLEeD3A8Yy96q6AvUjd
                      zrzA0Tg8mBK0vYfNoj2gRs28WL0SPNLOdT0Chqy9ADNUvXtvpb2iKVg9c+BpvaDMETtI3ZM8OCrL
                      PLDkur1ALhK7Kee1PYBlyrrSr3Q9VRedvVPNKL3own+8AQ/GPfJeaD1ZmIc9WMorvPHgkT1D6KM9
                      6FjAvMc3dr0AEHY6GKi8PJkDxT2JFb09oFCHO9DSeLx8gxW9uiEPvXthoT2gsnu9lGuZPMYuhL1h
                      rLs9wcSFPbdDyD2xTIk9l26vvXv1iD1jzbk9ISmcPQzbjzyXcKM9u0GCPRvntr2fY7W9wmhfPVTg
                      AL1jsaO9v26qPWSO2jwCHA49uLedvP7WRT1Az769f/GiPejSqLw/lbI9h/fEvWj7R7zoQEG8OrGO
                      vTOVkb19rkC9cMxJvQCh+rwwCZG7MoLEvXA5YL2+yk895qYNPU1YJL3lhp49B2l+vRIlTj19PXK9
                      8l0QPYDJSTr8LP08XfuIPaB7srsSOzc96+nLPbIMTT0s5fK8WIQrvDbQKz2t1cC9ol99PQBEoby9
                      1qI9b7yrPYgZrTyqIk89ss5iPXKwUj1rUYc9u5q7vW0tar2RiZU9AIxsug7Bjb07p8C9zUOXPUB9
                      07pNkS+9XgqFvYD2hro3icc9UHp1vJkntz2yi6q9UDLZu+JHwr2HGCm9MswPPQX0t70YRRU8NJOZ
                      vEskpb3ohcw8y0DKva4Gqb2eyVA9GoV/Pe3enr2H2E69vbQkve25Z72QnRK80DKEO1JKIT3MkOu8
                      N6SqPRLZSz2K0xk9eKWwPENuo72m1Yi9OWujPWwbsrwlAoU9DPjZvBAnUTw4Duy89beYPRSymLyn
                      ylW9/s+Bvd8xkz24GqQ8FH68vAItXT0wM4K7G5m4PVY9nL0OW5S90tUtPQrCfL1zXci9zPnevG3Y
                      m71sL9K8mNgIvGh4SrwFEJ09wRSwPRWSnz23pq+9dsQWvU2ytT14r6Q8sMxxvMKUfz24KI+9AJqh
                      vA5bmb30IYa8MuYhPfq1Gz1OQgg9oBnvu4ya1Lxtjpw9J1uBPcPbHr0bVci9gMmGO8BEUr3ObRU9
                      TUumPVPQs718BN88ZioBvdnJkz1RhpY9aL89PNj/tbyi+1s9ot6CvXpEyr23Mq09wPBxvZ00mr0g
                      tXu9KIi2vCcbuD0Cc189bX4yvZCuTDwAgsq7GE51vFZQqr3Uqv88ZMPwPAZmp72941u9b9jIvTOr
                      lz1DoI+9rRMuvTBgdr3GOwW9eOzxvGqgCz2gT9079QGRPVWRoz2FNJ69WDfJPPAbTjz6D1+9Zp4n
                      PQyjiL3QGMI7zNKRPNj2t7ybraK91LH9vHdPd72Awg88cYqDPTDtdTy3qo09mIOLPE2prj3SeBo9
                      IntXPRJCTD2RYow9kFhTPNtkpT1NXoQ9JNjcPLMmwL12aXo9mMJxPGAMgTvS2Sw9B3w9vYoVIT0A
                      su28kgBBPcMhc72OLis94nxoPU+9uL2C+GY90BDxO6tLn70x25A9E2ervXQu3TzYMGE8cNUBPGTY
                      6DzY6re8Z6qYPaa8Rz0DYiK952Fvverik71M7J68BlaavU1Ncr2qlXe9TM3zvNxK/TzAFzg764Oi
                      vc5VRj0QG8C9mMMAPBaXkb1oDTs8mlp+Pfzs+Dwb+4M9MoMXPQesGb3Yq4u9rzyEPSgCuLx4Bp88
                      R7K0vfL5fT1aIGS9yNixvG9Qhj24Q+W8NDCJPCenZ71AoxK7bS2dPZBLbL2hppE9fYSuPYU2xr0X
                      y5U9Y+/DvYVfuL3IS6S9iI72vF29eb0QS569DJC7PEBYUjsAwWu7oKKbvC4lAz11qa09qa+bPROH
                      Mb1jcJU9OEaKPBx73DygJEy7AESjOrZfCr1Kclg9CbGvPYJKvL2DLUi92rIXvXbddD2Ku209cjpm
                      PdT2kzyO8wI9wtRVPQxgAr1ouL08z1qlPShRdjxvU8k9kio3PYKdWD0ytyM9hkZ0PSAt+7v3WEq9
                      +WvHPagjt72wLmu8gvWOve9byj1Qiee7sBkpPCrtVD0J+r89KR3BPRCqSr2Zp4E9CIqevQoyk70u
                      BQg9giUjPYx4+jzN9K09ILHuO4lnyD0c4N88dpU+PYijtLydvyq9M0VgvZzl8jzGNxM9BHWJvT5o
                      hL044ey8u1vJvba7hr2eYJ29XZekvZ1MPr0t65m9dPKfPJaPYD2Uzui8UEp7PCJTJD1W+wM911mE
                      Pc4QND3MsBS9geS9PchjoDwh1qM9QDaivCii57z6ERK91DORPACvXrscANw8QjqSvYqdZL1s0hW9
                      LpIhPUp7BT3HCDi9pHjpPBjiuTz7sIw9JcWaPQD+CDsoUey8YGEGvYf4H71y6149OFinvFKxsb39
                      XIi9OOjMvGhg8rzb36e9Sf+BPYbXOT2VDsK9JsAOPYWmtz1DLKc96LlmvMuDnL2rsMQ9sQ6dPenh
                      wT1AwW280CJgvELtGD2YSQ08Z0lWvSigGDxO71g9qnE0vRJ6cD3CGGI911RwvRoAej0jv6i9WBuP
                      PANlj70AGjU7J16vvRCxZLyaEJe9aNTnvIGYkz0i75m9ioYIPWoZK70uhGA9iohPvU0lpz0OrQs9
                      ebGIPbqhib1iBRc9YBqlPCLXLz11LZI9crCJvc+khz1aqmW9WBIaPMBvhDzq25K9onawvVjdVzzo
                      bEi87OzIvG2Skr1zZbg9vuJZPWiHVbwgz+Y7nuWbveDXdb2gtqU8qsE8vWvQsz1AgaC65KSFvZbS
                      Gz1AZ007YIAUuzKnaD2iXDk96/GHPZB8VjzSARM9Qk9+PWi9v7xCVDE9jgWEvRkkxT2D45C9hjFR
                      PTR5ijyQgAk8NQiwvZDJV7wQ+nk8/C8RvWQo6zyA88C7GvxlPSAl/Lus37Y8g62rvRi+1bw468q8
                      MAdxPE8Pyr2dn8C9oP/xu9BYfb2s1si8BLrrPIIBSj3e3zs9J9SkPdpiOL3/AIg9anSPvTAmmL11
                      6ri99dyRvcD/JzwgspU80Z7DPfw2F72YlYM8ESDMPYBfZTyO/5a9CfbIPfAWBrywvY47c1OXPfKw
                      Fj10J+089NCGveRO0zygfLc7SJ/Cvezu/jwC2x092qxrPRPZkT2yMWQ9U5qZvVAdM71j+R+9evc4
                      vSpCXD1MC8Y8DODnPAKoET2Shzo9dF+mvOCYk70G5XU9eETCvRdogj0rKYM9/olnPUnYvj0y4g49
                      XXGcvRaZBr06olO9SNvavCiFl70ULJe8XWiVvbqNBr2bDJw9TbhuvaJsYD1Aniw7bBTXPDiFybxx
                      z6M9fXE7vaq/p70vUsM9PPf/PFI6Zz3X+3e9PZeNPSo8UD1uV569NeO1PSA6p7vtnhm9IK/tuyH+
                      uz0ssxi9UviPvahgFbyU79G8sGgZvQ5HMz1DYmW9oBLxvNEnxD2QPw48OBG7PCsWpD3hu4c9EiRF
                      Pac4Rb2AxCG8A3Cyvcnqyz3dqSe9sCyGvT0qG71i0se9WsNYvaD02zvs3vk8Kk1YPb3Xdb2Aaoe9
                      TK+zvLLeST3aeLy9f66LPZjcT7xDhZe9CoMzvdhwejxUkae80IY5PEYxCD31D6K9sVyePYTC4zw3
                      PK+9+2rHvaD6br2g/5C9Pa3FvYCUkjxD3oI9sHhXvECKBTyY7jc8oH+lvAeCQ70Sxz89XXO+Pf/O
                      jj0gxnm9mDfhvBQvhLxMVe88wE5iO2BRsjuqmFE9f1ibPfJ9Oz2gDdo78hp8PcBglDwzwX29UMZ0
                      vFeuHL1NJWm9q+OxvUrfcb2HrDS9otaWvT65nr2Auzu9SoRSvY5UXT2Ri6I9+yOevViTJDwAUcS8
                      34GFPTCMTL2gQja9sFcmvPj3jb3qvZm9UxykvWuurb0Wi3g9Ks15vYLkpb0m/5e9wCYpOxBLob04
                      vaU8r2mwPVrvcz10TqK8eOyNPBMGkj24e++8h82DPexbtrxgF7q7PklVPbV3lb10BK+8IK3wu/Rq
                      x7y4BPm8UXPCPbolg70YAE28dYzMPTu8x70Aodm7JZegvRkBuj2AW3K83CLcPBghvDyJR7k9aViK
                      PTDF9LsSUg09W6CXvSyhyzxoPzc8GLL5vDCZDr3SzUQ9oM9svbP/jz1ot/C8AH0sPEJvTj3HRsk9
                      SFCRPCy86rxg7Zu7kZ3FPQ25gT0g6ow7omxjPXv1kb2AjRe8gDIkOpBhZTxphaQ9ACQBvAI9nr20
                      mtI8u5i/PTD+VLzwZGS9jCChvFOdwD2AAcq6niqbvYDqkzo0q8k8tNfiPFo9Kz0ACH+8MKmfvdAC
                      zTsMOes8T4DAPUC5F7xDgsg9eLnnvAlRkj0AEGS60IuXu9O9yD3aJRU9KzKivXLgcj1Fe8y9gNC1
                      u+jIqb0+l0w99VS5vYFsvD165EM9O6ubvewPgr2d+mm9YJ9pvdH8oT1Ahn08PoycvX0hrb2/5b69
                      NVmDvSB097vp4KY9AKDZuEBgN7y9H6m9ikUAvRw3zzyKzru9+BH/vGMRij2MigC9WM5HPEeRur2Y
                      xv28CQ3IPdyT/zzgu6c7YwpgvUz3CL0DvD69mqRcPUDQD71iPUk9YGZouyb8hb03/q89O7awPX3U
                      eL0y3FU9NgENvZgQtbyh9489NKYGveH1gT3AGZC9jHWUvFqkRD1jiz+9mMsyPPo7BD2UkoC8h+a6
                      vZGmjD1V/8K9AGBJOmu+pr3Cbx09IGSzO5MAvT1Zeo89fRe9vbg9wbyYeEe8DgaCvS66nL1gI4e8
                      WYaaPeZiTj0Y8la8yMPNvICpEjoAXQA6uhgNvdjMtTzKxhe9k5O1vQDcU7oAS3o7mql8PU39Kr1/
                      yZA9/RJuvfDgb70NcqW9WcLKPQIWqL3WUAO9WslcvdHCwj04Uc28RTWbveCrSb0RVMM90AOOu5BZ
                      HzwN00m9QBCxPPNkU73qaTO9Y7ByvepTPD0nSVq9SI+EvZwd5DzQiPo7hD/3PIEzxj3BMLo9RYOc
                      vQAQhb1lL8S98ya6vVPLzL3lh8o9oInLO4CtODqarCS9k6HLvX27hL3nYI09KDxPPATqgL0AXoq7
                      gKwvPMDHDL2AiRg6HfNWvaDBwbuZwLE9s8eUPdA4FbxkvhK9DzjCvRhMprzAQ1+7sEw3vNIWOT1j
                      68I9p5FzvQCW87znF4Y90hmBvRJvUj1KTmS9KjocPWy77bzw6JO9cKNVvXAoZr3ollw80laovd10
                      mb2QBiS9j13KPSl6yz0APUs7dLqfPC1/rr18HuU8ww4ovTuCnb1tW2e9igkOvb7xfT0EF+g8mP0y
                      vHRgvjyxsb09r0e/vVDLcL27SMa9BObtPLUloj3zjpk9YttjPShuaDwjQai9ADaSukCrILzQvj28
                      UN8TvVoJVL0A++45wFhcvTRGm7zH+LM9gASTvMidhLzrT6y975/DPcAGkr3KslG9EA8fPAIWpb2D
                      ubq9MCmmu4r6O71QGd27oDCyPIG+gD3QfDC9Yh5YPT2POb26XCQ9ckFpPcwA07yg9gW7K6vHvaCc
                      NLtnvZE9btCbvWJ0CD1GBD09gE+hvGPopb2/nMY9aO21vBYLZj3/gL+9s66bPTCeSjzgRbs7iKHI
                      vF1QRb1ABUi82QGyPWAorrvHn0S99XOrPRQ3uLwzZ6M9+jR7vbAheLxNVWS96WmcPVsGsz33po89
                      WNmhvARHhr0gdD294LaXu2K3ED3ayby9kp8NPWmRnj3oSh88GHMUvB1tMb0wbcc7MH64u2bCmb14
                      jo28Gro6vW0qRr0SjY69O1HLPdLkPj2KhRK9Y9KNvcl+lD362G89H8+SPQCQrLqMkfo8dk8+PXQo
                      7rwz/W29/uSTvfqDcr3gJf87suN6PSwmAL3A+R27w75yvYpOrb1U7aI8p4YbvYCkzrzmhZe90L1e
                      vK+Asb19DLY9qMFCPPX4mL2ZR5o90PNkvAhPnLzfMpA9QhF/PQnssT1FaqG93J0Lvcootr18qPI8
                      eb7GPazR8rzq4pC92GkuvBOFLr0gY+47HFzNPKKuLT1XN5c9MbiyPWD2crtYGnU8yKOmvOBEm70H
                      J1+9LYQzvZH6lz3Y8rw8QOU/u6gkPbxg4+i8SNf2vAB19Tljnla9atYXvWymoDzRbMU9MJjwu8Bg
                      iToKZBs9GEtFPIKWCD3Aims7GHBNPAAzT7sKVLK9YFYsveDx0rva5iQ9SjJzvX+hx70q0QK9uZ63
                      PbdsOr0iS4O94OKEPDeyY72xMbM9mORmPLSiijyFwa49CA+CvM9mtb1gzaO7JUG4PRDTib0U+8Y8
                      5v+VvYA9uDoN2rc9kGNAvAD++7uqPJW91MwFvZNQML2Qswq84kaKvcMNHL0qMCs9lwOUPdQW9DzH
                      Aa09wUi3PZi4Kjywg8K7xpERvbr6ez2WamY9EcHAPaDhb7tdC7+9YCyvPHa6Cz3ULPi80mVlPaXs
                      nD2qyAQ9sEW5vW3FOL3jwla9wy5ivYCJq7ow/HW95plEPVOZkT0ifJu9MIbAO/0sgr3U19q8/SiF
                      vWVosz1a1Xg9TIzcPIZLAb0oMZM8OBmCvLl3rT3AMS08AOY1ueiMsb0M1rW8tBSjvDgsi7zAR1Q8
                      WOwcvPhj8rw9/UK9IvQQPWKlBD0pvpg9TBvNvOpmbr30tfY80YScPXCteL26opq966GqPdbDn73g
                      crO9ZAqCvRZ6Uj2QKA2947SQvVQ4rbxLlpa9nb+GPYQIzzytf5Q9Jj2DvXJ1g72izy490KOdvbqe
                      TD1zUrm91Bf6PET56DxPWLY9ADrDuQBvWTpA4e662o8ova64Uj1oDom9mwecvZ0FNr0oGnU8sOKR
                      u39cnD2ngJU9OMXGvap5SD10XIY8sgkGPSJUGz0tTB+9MdGOPVkWiz0goPK7fYKVPSg2KDxQWA68
                      4IP4vNohj71M8+K8OY2pPQYHD72+k4q9ot+avRJ3q71ymk09OOCZvZr4Yz0AMV862w2RPTO2uT2G
                      tz89bCa8PJ7Km72AxgK6cvSYvaVNtj3n0ja9mntxvT3IuL3zVym9gE+zO0dYQb1D5B+9Urm2vTtL
                      kD3kOuU8CjtzvRTS8bwaV1o9qI+pPM+7vj3NRJO9sCbDvYKys72GUk89FQuIvZS4mDwfPbc9Gul6
                      vWDrfjvsbcC8oQm7PXhHxrywtAU8EM2lvdrLQ72ArQa9gANRvQJHqb2oRHC85uCTvZbyDr2g7zg7
                      u+OdPZ3Wdr12zD098Jw3vQAY97z3GTm9ixG8vXTm5rzZZ6w96HEmvPplNj2Yfou8bGOZPJx4Ab2H
                      9bg94Gi0u+hgmjyqIaK9aoQDPZEmnT2VYY89ZzwivVdLR73sjqW8t5tEvWDR0bzsCdY8dPwXvWjF
                      gjzgs8s7Mk1jPYGXqj3u8Wo916ksvThMub2YGQu8ETzFPQrMND1F37O9gOQ2PCoVM7294rq96Cu9
                      PICN7Dr3cJs902afvf0KuT2zXki9wL+XPChCl73Ay2W8+joOvf0Tsj2gleu75wkjvY0Mpb0Jysc9
                      cCdHvQeKuL0nfoo9BkJLPUrHR70hXKE9QZOGPbjeibz+Y529+2WdPVmXhj1iSwg96auHPXLOtb1H
                      EWW90wukvUAMEjtPz7C9edbCPQomHr2jpsG9ZsygvdQK/LwMqdY8pMSIvdiI6rzBV8Q9bxfHvcob
                      fT1WJBi94YeyPcwl27yCDjc92TCCPV3Hrb3i51M9icm2PQAC9jsQrnI8qP9hvObIPT1iBi09cMpk
                      PKsTn709Jcy9APF7PKU8gz21u6a9FOervIffnD1s/c08KXaiPeYGGT1d0IA9TBmRPLIOdj3xc6w9
                      IA2XveBlm71SwRA9qGCxvPJ0Zj2OfzA9XJPnPDMcZL2ztny9x1Q7vYDjEb0xLac9YukFPe6AQT33
                      9YE91KDavDRq3zxmoGc9cYqhPakZqD0SE7G9YI9Gu+CQcr1OGYm9aKljPKUAoz0Rh5Q9KIazvTJw
                      Lj2CdQ89aaC+PRkrsT1nNJA9QIVSO+8vlj1mvmY9tkSAvanMgD3cuBC97jh5PYCc/7yA5li9YceW
                      PUq9sr3fwLI9w2JLvalDwz2abbi9HSC8PYzr17zRMoI9AHspuuovDD0R3Lg9UGFfvEMFGr0GDj89
                      6o9yPevyqL1A66O9yAqGvdoJJz2DFT69yZqVPZhx+rykqvg87v45Pexul7yt2Cq9WxyePZnvuz1R
                      3KU9QKIWvJhDYbxiy3E9KyLJvTBXQrzfzMg9eaOaPaANdTuA8js8MLmEO/oNFb1AXSG7AH0mPL3b
                      nT1+AKK9o0LJPRMll72G+BY9LIauPF2BVr0Db6k9HloVPXKxJT1Y/468m/2PPXDnBbxAhVS72Nsu
                      PEDjCjw6+BY9AJi8O4Dhpbx9ace9ohttPXq1XT0nAK29BKjUPHLtOT15hps9yeybPcmNyz2Ch1s9
                      /vJmPcDw27rf9YY9ADu9vAzv27wk3wS9WAOwvNAqjjuAngg8m5TEPagHEDwaNnm9SuA6Pae4V73y
                      Dzs9IF2NPDPtGr2VVZI932WlPVA2bDyNg1m9Z955vWgqMrz0Isu8BCDzPIBop72HTZI9uscpPfEF
                      mj0A0Po3YA0/u2l9iD1Iu4C8vV14vYtLq70nc0m9nwGwPVMQqT3o7Ho8vqCFvQaFDD1XT8m9d86J
                      PVK0h73b0MA9bR61vYORvD2G5EE9S9GUvUKnJz16scC9Pp03PcA+Ir2SVaa9NhZtPRyY5zw1o5+9
                      clybvVObwb2/Np8971q2vfH0yj3j9JE9IV2MPSx6wLzA8wO7oHO0vJIURz24P7I8gIqSO+PPhz2A
                      KLM6wELLukQcg706B1A94Wa4PdNOZr3/x6I9RIDaPNq7PT3clvE8QJlTOydMgD14MrI8VfyxvYLR
                      gr0Z9sg9rNWdvADJIr0hWZI9tZacvapKxr0oWoi9PIPUPJsapb0/0sO909isPdOCqT2E3Ns8LYiT
                      PdkstT19L7m9t5mOPdCYubuCJgM9wROYPRiC9rwenCk9+ralvdtCor3j0o89zQ86vWRR0jwlVKa9
                      /2yUPb3PQL1Pzrc9CLeLvLR1u7xHYx29LalYvTq2P71wtGu89C/iPMxLpzyAmYA6kKd6vCBRh7zG
                      63E9aKOjPBybEL0gub0712OnPU8vwj30Ye08aGxKvIBSejpeVJC9labKPUjw7bzsco48pnhfPWum
                      uT0eWGw9M8BgvZbEWD2qXlY9qGCsPNhOQbwQkzy9kuk4PVdYtj1q5gA96PBJPIMyjr2zjqw9KFg6
                      vCDDj721Kr29ZRePvc2Wuj0IFZW8S2WHPUrOp70tlYO96A9ePMkWlT3xnKs9OASOvakIjT2AJIA8
                      As+EvfQOEr0v9Kc96JRpPFB2wr0Y8Yq9HdejvQhbqzwk2+E89Oy2PNmdkD2c2NM8oAjzO/NJer1l
                      q7k9LkkOPTCOyL0AdW27WlmRvYJjAj2kxe48bf2KvS2nrD09Zq89ZzDMPfYnbj2oOP68N5C/PXc8
                      X70r15s9NvYDvZkNwD2it4O9d5y6vYDvLDwffq+9cg+TvU4gCD2ZX6M9AtGDvSy3nbz1YIG9HSuu
                      vVcCiT1kTQC9tNySPEFgzD3QpLS7ASqlPV1BbL1gCF69KPl7PAAqWTtATQW9KN/XvPYtNT3vT6s9
                      c++0PVDbU70kreE8z0ugPfL1TD1gRjC7tvQrPZiBnLxgkBw7xrkMvc28nb3Svn89s/57vc7Aob06
                      sgu9cO0pPAIdib1qQGG9qMDpvDW6pL2Al/m7FyC4PRtYxT1jLEG9h551vTCiCL16pYS9mo7CvVAh
                      6ru097S8YIG+vTBov7sgf2y9ePzBPBRw+7w9Vhu9C629PTOvm73m0qW9Is8MPVBK/DvgxMa9BYa6
                      PeCTP72qNYq9FGrjPCi3ALwGQVM93gRQPQ44dT0w6ys8f0+XPR6vIT0jPMc9WK9kvEIRkr1MzIm8
                      FK2EvIdmTr1AjGG7KkGDvb7xUD1v3Z49Scy3PWDhDDutrJ69imY7PUDw4ryNe6694E8kvehZILzK
                      sik98BwbvBXdqT3BF6w9W+6UPTAjULz0HK+8IOz0u764ND0wDyU8MmBEPU7/WD1A2xi7PSJtvWoJ
                      OT3KMW+9oJeovFRvwDw6YUK94C7KPEKJyL14Asy9tzeMPa3Mfb1ScRc9kiNzPeB0+TtAOVO8CJTC
                      vAxO1DwJoaY9KsVgPaTc8TzcXfQ8IEmVu2dFij0BOcQ9dYy/PVJKED1CVqK9em+JvdWYxj3a1ym9
                      sE2jOw+hub0lnIQ9sIcKvawn6TyBvpk9TT6mvbNcv72Ab+g7n0OnPYBk6byQ/iy9aI+BPEB0DzxS
                      ZEU9YjxhPcTk5Tzofh680p9qPTfrGb3nzDm9wKsouzj0sL0gD+k7Ah50PXMdML3zjYI9t1iyvWsN
                      vb03Fcc92lBpvb/zyj3abGU9p0uKPem3kT19+Jq90cqcPV0NjL0Yr2E84ATyuyr+FD3kHvw8YwaZ
                      vaucnz34daE8IjJdPfRonbzFs6e9SYe/PSjyiDzDaHy93d8avRMcQL1fGaU9QvUJPa5qDT2oCA48
                      0n4FPcL4Bj3Qeoq7f265vawIsLyFK5w9kYS3PXiSpLyUBwy92JymvUOdxD2Owi49UHVKPLBui7tG
                      AEo9fkKGvVDNlbuUFMq8PncOPQhD/7zwFTu8AFUtOwAWYTuYwJe8GDRBPFBn3bswSEO91E7ePBZu
                      pr20Tvc8aG+evWDff70wkGG8i+G7Pegi0LyqlFU9ykLBvVfoP70AMx06gshaPXonzL3R+bo9n8Gc
                      Pa3zuj2qL6S9rgE5PfBsuL1AofI60W2VPTV9x73omRC8EqFwPTe2J71he8Y9oFctvaW+kb3Y0L+9
                      i0anvfd7Rb0A26w74fKnPRN6Vr2KdSC9kSWnPTYmXj0ggdG8YIWPvMB3D7w+uHo9sNIPvPKym71A
                      LHK7cOwfvNlusT1Ndba9fS51vU1PN72zyiu9Tu51PXii8bzaHnU9jIeMvaAatzxwphI86mFivSzS
                      Bb0AQ8E872e1vf5pj73Klju9M1mhPWTn1Tyd5ii9Li0APW2ItL25kcI9qQvKPbAwarzqYsW9jO2v
                      vAqPfj0wspy9gMfJO/AVYzyCKIe9rKwDvby51jwg5lK9lWK1vaJRID2s46a80wSqPcRl+TxsPfM8
                      h8CaPSIURz2sa+s86JkFPJInaD04R6y9QiIpPSrzLb1AS6y8UNv4OwCPITt1+L89pZCcveDWob0R
                      n4o9IsgwPYPYoT10gPC84nJKPdaEaT2AUGO9D0qvvSdFTL21Ebq9IZm0PQjNqrx4dLW90RuTPXSy
                      kzwUPdm8anV9vTUdkj03kMW96K9OvGbHZz1gLt870B4Rvahf5LypGag9oCZ1u1Rr4Tw+DDM9gMCW
                      OhJ7Ez1BGKo9+KXAPMBjer2AH6i6WOxGvCFVnz0QkgW85yxkvQ0BLr0Dvam9kJBYvIs4lL1AxJk8
                      7VC8PSxhyzycwvE8oul3PWggubwJOJ89susRPUMBZb073bm9IPKgvMApz7yZqIs9CBHCvFYdF73U
                      2oG8QHhtPNrsw739u7m9EtuBvVqRKD3Q9oq98OFevIhlob3Y7fS8uc2nPWSy4zza6W09fTK2vZfe
                      eb1t5oQ9+zKzPRIDSz1B5oQ9U1xqvQh5n72KhX49WrYZvdD4mL032CO9lBj1PNDLI7x3Bka9kgx4
                      PZdoPb1C8j89oOn4vBgMnb0aFVW9hyErvTDpEbw/67i9knk5PYBlvztovQW8YKZyO5BeHjxjucG9
                      UhCEvbXPpj2TX489UPvQO3KkSD39gcs9MExMvJ9rwz1UwIS8B5fHveLcSz2nMD29g2CuvXOZrr1g
                      LoE8pMMIvQrgOD1ACic861q/PSSq7zwdhx+9PseqvQmmsz1q6wM9aEgbvFYgHz2gbi+7dVSAPY0X
                      Mr29opy9CpG6vXD+ZbwQEmy9Z/C3PVqReT3ALqK8UtqmvcDSHry9yKU9p6HHPSOkpj32coK94Rey
                      PcPUOL0L6a292Rm4PQoCuL1/7ru9tyORPYMLxL2NGL09HYF9vQF0jz2vIcq9tg1JPWqHvr3jcLa9
                      bqIiPdNnmD0wrjs8j4GzvfsHrr1Kdik9IECZvOmnkT1gUSQ7wPImvEQbzzw9H569iP26vWLGZz0A
                      UDg8g78jvciLszz6YU69+ZbIPfqpUD1YfPS8ALkZO4S52zwpz8E96uW7vRAMFLzQGWy9FyevvWDF
                      nDvkPfQ8YA10u0CgobzE5oK9sLAPPGg1qLxQ4nu9pK3iPMJ1jL0t8rY95hcKvSaYpL3y6A49AHIi
                      PJ2LjL0U/6A8NJj3vCD/wLtgzn29oqpDPVjo1LwDmVK9lJeePKzN+TzkBeY8ygRsvanyjz0BubE9
                      6mfGvdDBHjy4E8k8lYe2vcS92TwwvwA85wrGPeCUbb0A8x+9AOXAPEIqRD12FiY90BxsvDboCr2o
                      sH68gBG6vJXlxj3Cozo95zMevdqul72dcG+9MA1UPFAjX7yKI1y92WLMPa6bJz30IIs8wJRJO3K6
                      xr38Pwi9tI6FvYKkfz2YVG48wUXBPdIaHT1Mm4G9lAuFPEeYpD3K0UC9j/fEvYDylb3ebY294yQd
                      vfsnpT1wGms8Q7ShPcURqb3l4Jc9DNHvvKLkPT3Uv4A8a++uPWq7DL3B9YI9VVGJvZgcLDwsFJi8
                      UABKvKyin7yfMsc9IYexPecgVr3dWz+9gF11ulq9Ab3I5Z88rSQjvdSHCL3qXxs9zE7pPFdtwj3A
                      h0w8AKixOYwa4Lxz0L49p8pfvUxx+rzQ+5+7gIeDO0cIvT1PuJM92MJ+PCESsj1xLKg9HV+nvc7z
                      YD1slIm8tKfsvE09nT3v1sC9Ohc2PWgybjwBy7k98NlRPFjIy7wAeE+8/b44vZ6WZD3itUQ9gF4d
                      vJ/Axz1GtpS9ICyduz6cFT3G7Xw9uRybPYCo3TsgMKQ7IrYbPcNcgj1ZbIc94iUWPWjhpLwzDiS9
                      QSXMPXIHRD2MbRm98kIePVLlaD3IYJK9a7O2vQaxaD2gbxI790BbvdpRxL0MgqE8dPmIPAMaar13
                      vy69KPIkPKNUYL0QITC82GwcPPehkj3KdUq9p6WjPcykEL2Yzye8BtNxPSjcv7xY+pq9V+2ZPZkD
                      wT2YdIO8S5PMvdfzxz2gcpC7GiKpvQqMZr3DLyG9NIm1PFQC67yiino9Jxd6vYD93Tr5WaU9uEHx
                      vIDdBTzLFKG9LIyWPHCAWL1tMVm9OEuEvGjEmb3Y2N28gouevQF0iT1rqa89IoQKPZ0FxL3qFVa9
                      sJAbvCisMry0Jsm8rqsOPVDpJbywZsK9eAW7vHwYgr01oZo9ocm0Pe4MOD3416s8Yd+mPSbNOD07
                      vZE9jFzOvDnxyD34gZo8k4dTvfwYBr33s669GrA0vWBsKjuN8q+9oNIZvTpMOT36Pn49JKr3PIQw
                      Cr17j7m9YP9OvZs0wr0i8yw9orjKvSukpL19U5o9MM9xPA4RfT1Fz4C9zUKJvUKCbT1DRsI9rZ3K
                      vQ2ksr1MhYO9eq+SvapdMT39FJw9mQKsPdiBVDxdULc90IcJPOfXiT1Lz8A9uKfhvJUPxj0YGgo8
                      w5SmvcWlvj0j34E9U/+yPXqFXT0WpY+9iOS1vALebz3m/2M9WjfMvWrbqb1bbLY9DzSdPTChmDsA
                      HA29jF3tvEBkCTzYyxA83fxfvSrlL722IyM9VzpTvWoWKr3isRE9eEapvKN7sT3lLcO9ZnEPve3C
                      ub0WxW49goBRPco2kL1F6Z89wE81PG2tib2Zl4Y9Jhx3PQ6LET2zOKs96CguPFpiBL3Q6jq9zDyF
                      PLh1k73M6oe84pC0vaA74DvtSh29cHQQvee3f72xjqA9SGu7PBA6DLxDyFC93epUvd6ViL01A429
                      nXiiPddVxz0oEuO8olw8PU77nr2NIbM9sJPLveV7wj28B9M8FuQlPbAHQr2JQJ89iBmbvChfszzR
                      Zo89gC52vLAcurtTlUG9sHYTvUpfBj1WI1E9tYGDvZ2gSb2Y5gy83wLHvfKqFT0wnKe93daXvT5f
                      Iz2gbFG7u2afvcvAmD3en2E9/HXbPACIsL2nKya9gXeaPTq+Ir3bxbs9Ok4KParXGj2yyJq9E04w
                      vVALhr22sgA9LwOnPXIELT04XbA81JLcPBi2zL2Ax987FqVdPdIRKD0o5X48EOqbveULrj1R+5E9
                      8oMtPeCY/TsAIAS6EB6avc1Vw73a+XY9AGRQuoBszbuoXDW8Rv8UvUBCWL2AByK9hZWOPaDtnDt0
                      kIy9ryuyvaYVPj31OMm9ALNvOpPVkj0A2Wk8jMXJvMAtNb0FE8Q9JTGWvWaHmL0pzKc9vc1HvRDI
                      S7wAR5677fxYvVPkrj3awBu9MGeHu5uYuj2AAgy9hp9mPd/ft71zeoA9ENYAvH09lD0Aikm7RhUE
                      PeBewL1KgRS9YdWiPTCjcjx6rHQ9mDa+PDvMjT0NM6S9SZCAPSB+qr3A6iu9iK/ivPD/OzwX7Hi9
                      0G5KvYgthbzjxjy9DcCsPbawUz0YKL+8zh4qPfb7qL1C+cu9iGHfvGMhYr2wQAi9lNfVPJFvvD0S
                      nRo97paivZrscD2wJ1i8DJquvP5hDT3g22W91swWvRAZSLzEU9E8Q1NxvYKeMT0sguK8wCYNvWtn
                      tT2HYGK9hdy7vU0oYb05Pao9nvs9PeD/br1ShzA9NDHaPC6xgr0xZ4Q9lIbLPHWmgz0wwTi9Xgwp
                      PT2xRr0YkaS9UNFEvYi/xDxAq6G9FE0PvWDgSjuYIra8AOzOu5iMqTy4Sqm9mIqjPE1/TL0JtLs9
                      BBUVverbID0H5kG95iQFvV1Xw73/P769OkkuvTmcyj0xdaM9wrY6PYUMiD3fW7G9spXHvZsJuT1u
                      BpG9LOf6vEjlob2so5682hEsveQQ2TwRYbo9acGWPRO7cr1qsx29ght2PTJkYT1ASai8spJ/Pcp3
                      xr0f8ci97mJIPWCVdL1Jwb09WoVCvb0APL06YHE903h8ver1RT3gLwa9NIPDvALLdD3IL6g8TJ6J
                      vIxYnTzYSiw8KANHPD1Bdr3BQJo9lP2BvR6Vaj2S8lQ9oJNxO3MvRb2QDFW8yJTHvepqcL0ArJW4
                      DVq9PWOZdb14IMW9txo3vWJLZT2CYSU9E7NYvaYQgL0sqwa9h0I8vVlawD1AfEO8XzGDPYbDWD2c
                      Mg69WjUxPaBt9buwkRa8bFjOPLqPQb1Ij4k8gVqIPYXykD2ArCS9QhdOPS6Phb0APAw8UNaLva7B
                      mb2yz3896cSHPRZeib3IUY+9uyOrvVKgYT3jjoY9AODJOKB1LLviqZK9sB1LvejYHTwgfaQ8cOOG
                      vWPvhD3Q9oK9KQWqPVQj2bzm5Bi9lyHGvQUUrD2sd7m89KuaPB6PFT2U1uA8QKw1vXkMyz0T7l29
                      4XaFPcxmhLxATaE6iPa2vAdhnD1A5iG96ARLvCWpkD1DkTa9Pek9vV3LpT2wfJe7Z0A/vRD6Xzzi
                      ZX49imVKPUxk/TxQwsO764OyvXcbRb3sh/W8DLmhPAyBsTyscue8AFy1veLMQz1rxsa9gFh4vbg6
                      y7zgJ7W7wLKzumXTv73zbVa97eDFPW0nlb0r4Ls9l1JKvRZqEz2gJ6S8AKZJuQ5GGT0T2Zc91Mq3
                      vNxs0TzYkrm9KO5ZPDFGqD0geKW8GKk7vCiOVjxg2ca7ANl/OuEtxz1AtUg7roipvYKMJj2S2Vk9
                      2diRPagx9bwtzqE9aohnvS4EFz3nW7W9j8TKvWU5uD2SgzQ9L5CRPel4qD2G5qq9lm1aPVAI3TvH
                      7S+9UHjAu9joZzzakWa9VEmJvRNxgD0PVL69gB8bvd3wZ73lkb49SCKJvbEmqD0A8rw60gZPPf9V
                      sD0SdJC9VdezvSDhtjyy2BQ9WeyrPfeYXL24nLa8M7xqvYE4tj0RHME9QhwIPUYHIT2AXsw7kIcH
                      vCn4sj2gMOW7KnVYPbwEB72ArcE62XHDPebvpb2LmK49QCx9PPnqsj0PcoE954eYPTq9yb0R0ZQ9
                      09RHvfQ8gb2zncI9LZNzvff3pD10RuC84u1LPfp+FT2RArk9ShfHvSkevz1bCrg919aEPYxbjrwi
                      /DI9bSeIPdQxrryLOrc9W6W6PYzc4rxAfZG984BovZhztL3Ql4U7Wip+vak3mT0b/Ma9qHvJvC1L
                      Jb1wVBW8AcSMPYR05DzeUFA9oDmHO1aMSj3anF+9g34/ve1/db2ALSc6zUhovbNPob0Xr7c9QA1H
                      veBhvbwXnyS9cg47PaD28jtsT5g82vBJvfL8VT1MYqK8ku5VPQpRHj0NaI+9FDm7vJejgj3IYM+8
                      VKGSvDd1qz2tn669Z7RZvY4fOD3y2Tw9rNWHvXrVWb2HgYg9JXHIvWqgGL1tMXi9gjQCPQNVTr0Y
                      P5A8QIMIPNO4lj3uAW893iFNPUe+Vr2SIgI9BoBBPVNGkL23n6Q9dKLvvJclHr0FlsW9ALYQuWmg
                      ij2sYLq81mYHPQC4t73t6Mm9qUawPb2gW71bEZi9XWGKPUBvtr0gaUK9OEO+vFHGrj0gc4w82AYl
                      PCq2Tb1AcTy8b6mzPYAH87u7tKm9RP/kPNC2Ub3JW4k9kdSOPeKRLD3yeom9wxA5veggsjxrd7m9
                      bnojPYDDj7qZzoA9AKnIvKxZ+DxLj6O9ctM5PTDzZL3ffoI92Zq7Pe0ErT2twqg9cqhPPdWUh72S
                      EBw95yZUvXamjr1YjhM8lg1xPSVTvT10U4q9GMwvvJDlDTza2rG9x0+0PbCTc70mzEk9tosmPddK
                      SL327TQ9QTOuPWirfTzWAAA9zb6fveiKMTzUuIw8jk+ZvWL4Bz04mf28FeaAvfWxlr2ACqW6bU6r
                      PYYSp70omNq860eXvbfQqD34Ube8Qk1dPZCUg71iRoC9ESicPQgeubzQ28y7LAbgPBBdJrwaz189
                      /SIgvcDuqDwoUVG84KP9OxKEYz0o8Vs8qgh/vQC517um9jk9mhZevcr3Hz05e8I9wxmrveAiE73w
                      ni+8kgeVvefJqT3MroO8kLBhvEDrBrx02AS9hVWvPWi8Z7wgLN07RjUhPVAYMLzW6yw97lQPPb6H
                      Mz2/uqs9MdiQPRfwVr2t6ju9GLFTPMj/4ryp2sY9s+GHPfp5HT0K6kC9nNT7PKsUxD3gqLa8nRiu
                      PVBNrbuwWUS9SzqCPYCpkjyFcsm9ixeEPTDTqLtqfGa9ziBMPb5VLj39aII9AHiwvE/XqD3w27W9
                      IILnO8Hlkz0grzS9Zq4YPRA3GjxndbC9MLJxPIiJhTxAjcK8fECBvXJ7Gz2IyYG8YxtWva6qfT1I
                      DIi8ShyLvbDcnrtpKrs9CqnFvYMYpb3odqy9bGr4PFdmTL2YAm28GxCyPdfGxz0V7r89kCcWPLeV
                      Wb00wv28Ajs0PdLlo71M/xa93jFJPXvHjD2415y9XaG6PcA/y7wKOAQ9YvcMPYklmD3n38c996ii
                      PYAasbpepm49luc0PeOnxj0Bo8E9etJLvTXYvj0duC298PVEvVJKfT1f5ro99Q+UPfD3Pjz9Gjy9
                      7htyPe1Pfb0wbb292h81vY2BSb0ynF09HbeVPdgATzzorfm8fs6evUuPgD1AHAG9HrsgPezEtrwf
                      66I9pvFrPbciZr24uIA8mP/APMd+yD0woYA7PYGAvbT437zTUsI9DVG+vcwExjwlsKk93RqoPVV5
                      k71gRUW75NwYvT3/y71Oyzk9OsxuPWD/w7ukAtE8bQ9GvQ5OfD0Eef48tFPlvKBjpDx5dKo9H1uD
                      PavKr73Ehxi96EldvLcerD2GVIC9K1PFvUDuv73DVLk9AUGzPWoHnL0ci+48XJL+PDUdqL3AFwU7
                      LsOivQBAGrr0AdQ8oGkGvUIwUD16i0A9DMHzvAfBiT1olyG8fkVuPcAGVzwhc5s9b/e9vahEqTzJ
                      GbI9Dh9mPQBhDzxBlKE9kO4MPMPPvb2mfzA9sFvzuyxAgbx/CcQ9uCexPGbMSz025209yv1XvcAO
                      r71wLFO8cMZGvEEMsj3B0bA9sr2nvdPFVr1xjaI97ttgPdjx0bwAtSO8IDDJO6WHvL0UusQ8DLjI
                      PMCK6Tr4zpi8PFMZvbb6VD3gSQ29/k+MvcW0kb0R6sk9PgxQPYlQhz37LMk9NCCVPPbGCD2sZ5u8
                      ItZSPXByDTzKIcO9tHyVPO6PAz3QLw08uVCtPRbTHT3eiAI9aDYHvFRz3jxgQ0+7mIdIvLEWhT3o
                      WCi8tr6FvYlSxj3mFg69ytuJvWmwiT0g9p67TNyvPPfhG71uZSw9QkwNPao0Jz2V75Q9ICS3vDDZ
                      BL0pG6M9AKR4O1D6d70jGL09IPgivbQPzDwswJq82l01PYgqnr058r49j3y0vRH6rD3g+nG9p1M9
                      vf5PmL1Schs9t2W/vVTsBL0j2b49/Qw1vUEvtD0vlqk9+8PMPYNerL3yO4y9V22qPah9DTz1jLc9
                      aL28vPIHQj2+QY69wVjJPQDd17x/uLo9AZ2LPXcGu71ca/c8DE35PNi2YjzbiJc9ridkPc21nb0f
                      isQ9oHrKveBeirvO71M9AC9qulEVjD3OKHM90mRzPSjOYLyaujS9Leo4vaC/Nbtdv429kLUJPNhc
                      PzwwCh68VYaqPXTp4rzzTZu9wE1TO8tJnD055Zc9zpMBPT6mpr2ST4292rB7PTApDrwUIO08FKKW
                      vOUnxz300pO8t36zvWdstj16kHi9esZzPRfzij1N4R29UjdSPYUkyz0S0S49pMMOvX7dlb1Qo169
                      Pb9JvRarXz0Cuou9YF9JO0g/tDzAiGy7ME6gvV3TY70qL5W9wA40PCBQwzzb8JA9Lz+6vQrBgb0T
                      8sI9iGXfvJ4mpr2xbcI9avgtPegUVbx0Ce68sIZhvR9qmT01K6W9gAJ5ulAMhzt9elG9GRK8PVDx
                      1juKnn89YJHDPJ6elr2gXra72ESfvfTaFL0ao1+9NLObvJLMx70nlm69I3GWvcammL0Lxcw9OkJf
                      PS32cL1Xysq9TEaGvFAbn73mdxE98G1nPCBPqbxAc6O9A0GiPSDawDyLB5W9ssVLPSh3ELwh9qI9
                      fnGsvRBYGL08Ieg80ZHIPWd1OL2naEm9bDOWPB1jyj0GV1A9+LuIvAP9Gb0zRUK9HcM/vZm/ij2A
                      PaC92VGEPUrlIr0AeEm6xv1fPVCjBzx7HcE9y6mVvfoKv73kCv08amQnvVEWyT3o/a487uIDPfNt
                      N71acbG9IFrBuyIErr1TmnW9N9mLPeoIhb32cFk9sL+kuwRN4jzCbEw9j2yvvRFZuj1mcH493Nvr
                      PGqmaT1TzYw987VYvf4GPz239Jk95qcPvV3iq71ZtMM9fBkPvUB1njqvX8U92P8pvP+vjD1NZ3C9
                      U4lvvdggnb1jGq49Kuc7vVRc5zzAxps6ANqzuk+5tj3niIQ9oMFgvbmSjj0QtHc8kkfAvb+Loz1D
                      crs9tDWWvGlgiz2rfMK96LBiPEC76Lrmckg9QHIvPLuCuz3w4SC8wFFCO6h6DzwTgbK99PqVPGKm
                      TD3B7II95WmZPbAF5TsFJYa9KhMGvSAhyr0i40U9mcuVPdksoz0syIU8gLUZvGChjbzXdpM9jRWc
                      PQIabT2dy629UkuNveqTKL2d2ZG96KTfvAfzN731sYA9LM6EvW5QfT2HViu9KpwBvQFYgz1cN9k8
                      YIJQO3I/Lz0SVbK9gaaIPYJJDj05CbY92e3KPbvisj1Gnyo9R89ZvU5fDD3i21M9gBj4O0fEr72g
                      H0W94nhlPbIPiL1gjJO9NzsuvZ0ZPL1KmgO9XPb7PBGEuz2DOrw98hN5PchotjwAtUy9cOAFvLES
                      oz2AnRi8AHuQPJczRr2AyrY6DWa+vUK1Gj0IEP282Ab3vIDdgrqYvW68mGyOvJagWT1Ax7I68LND
                      vPZtAz0KhXS9UCF5vL29vj2sItk8YBsYvaeHvb3aX4W9wNA6vHUtvD3GWgW9GPMmPEmFhD18ehC9
                      EylIvTE7oT3QwL07yfmXPVBHX7wKnbe9uP+ZveMzdb3scfE8CDKVvWf9lD2D/5w9rO8Qve3dkb3O
                      Iw491EyFvXJtJD2B0709LtiSvVCvTL1pUco9dL/DvLiyhzwjC3+9QEQnO4BRYTrxYrw96zyKPZjh
                      gDzPh609vCcKvX1ix71AudG8Dmc2Pc0mjL0u8XE9WBiqvJCbtb0/v629TQ/FvdrAK71ZOqA94Ib+
                      vNAnkb2Kx0I92BKhvaAMyDxUGMY8VHKFPCnukD1zdT69t5WrPawtyryDVb49nD/ZPACymzuup1E9
                      OQ3FPcu1jb114Y+9YuUTPUM5Ib2AQd6819Y8vaCs4DvoqL88Wl4zPYyw2bxs2PW8gBk5vf0/uj22
                      rS49AMyDvWAYWLvAnFk8cOYYvaBJtrtdQbi9Sm8IvaBkjzwAbFE8XeJ2vVmJsj1ktgy9/FzyPJnV
                      nD3YAmK8slZmPdrYB70dFL29zq8ZPbE9hT3Tx8a9gMbsu/IRKj25jIk9uazJPZPnrT0AJtY7c7ec
                      vUwMAL21bqe9zA3+vMpcwL1sgAa9V2t7vcaLbj3gByq9UEuIOwDv+LsAhw+9cAJvvIfVOr2QMJW9
                      YvKLvQwLuryUbNY8/cKQPfBrfLwRbMA9fdMwvXSW7LyAgNK7fvGVvbgzrLxgpMY8aIFQPGCZIL39
                      GpK9ue2BPWYfWj1Qtyy8byyIPWrkIr0VXMC9z8K+vYDasL3Lf4o9Ms2HvUJudT2QdFK9TE26vIY8
                      VT3D0pE9Dckwvfmkmj2nG0q9AID1topLdj2gdpQ8kLpRvCgnhr1/I6E9aLB2vDQC3LzdQJy9QG9I
                      PHiyjb2j5JU9QPFevSUEqL2f9K09GAL5vOhFhbz2dic9WmMCPU1nvj2gioE7wlIhPZBhaL2A54g7
                      2JuHvViDL7zn2WO9IXu4PWLUOj2KrMy97L+yvM+BxL3PXpA9AH7cuhuDrj3kafE8gkS9vRXcxb1x
                      Pq89oxtavU7dZz1UvvC87scxPTDQFbx/47Y9tfS9Pdf+a72Cw0k9mixKvcAcBDwqCFw9kKqsvboq
                      Gr24kfO82RenPR0Ce71NAYg9wiM7PZ2YWb2gomc7SayNPUYHnL2Ao6G6Rx6oPVY7fT0Yur+8R+LK
                      PX/4uz2wNAC8KGJTPKZlLz1qSV69grk8PfB5A73qpTq98mIQPd0QyT38p+o86j+KvdHBij0b98a9
                      YOVcvahIlbwAIlC8DyK5vSsosr0j7MU9mG1bPPFOtj2ieK+9uo9PvQXnq70YHTA8QxF7vahPALxY
                      kV68L83KvSNNab0sE5y8aIqNvUVUiL1PMcg9kl4NPUbqSD1ZuK89oO2uO2KAbz3Nc1q9uOyYveDd
                      rrt9NIM9FMDfPEfoqj3Eu8082BAEPCjFzrz9w8e9SynEPbvCrT02Lmc9oHQWvXU7o712gX49mGuO
                      vMuDgD3IH4i83ocnPciXobwAkZK9e+KkPYwa+7yg9147WQOcPXD4Ob0A2Xy9AFSNOJBRaL1Kw4e9
                      mTWNPdqejr34Uam8PQE3vZKLeD3N/S+9gkNpPaQ05jxAoBM7SUiWPdX0ur1IJey8RfmCvXD2NDxr
                      qb29MYq/PYL6Ij3L86k9J9wuvfZDqL3oJui8o+GMPSZzKT1NgJc9zYuSPaPBqD0wCom7CqE9PbIQ
                      XT3wBWi8LOHBvG3rjL3LdMy9UM1fvLKyFj0wnEi8AiVWPaJrPD1gVRe7R31CvXDqVbyLiMe9rcxk
                      vdC5Djx0ucG87GeJvOjlUrxyb5e9+JjGPBY7gr2gSSe7v6CiPehodTzANtu8dIigPAY3Hj2MFYi9
                      Kg6kvcA7bDzAoHc8kJQ8vEebOr1dAKA92hGivYxAjLx7lcW9iqYCPcZcBL0SJ4m9hrYYvYblZD2P
                      Jre9UMvqu0B6Krvrbaq9GlURPfgMgTzGc2s9GEtSPGfhcb39+qo9eeyGPZSfyjyYt128Ews8vULN
                      Sj3AiEs74PUdvSM/Qb22dl898yQyvQCO9DpMR8q80HbtOzKOcz1LU429DisBPQB1/zsA/Fw88z+r
                      PYAxpTww4iC8wuGjvUCloTponM+8bDD6PEMdUL1aMz49CH3yvJ36xr2CUj097jQ9PUK+JT39U6o9
                      M7G0vYaOAr2h6cg9MqU9PV+JkD0oK5w8qscGPb3MwD2jxLM97+mTPUrmFj2wfMA7eq0Fvfstm72D
                      cya9dzMjvSoGUD3GyHg9qIWuvb2FIb0kW/Q83GSLvZbsFr1njaM9iPyePFU7gb2A6/m8NSiZPV5e
                      YT2nVFy92M6EvY2rnr3H6Gy9HUp2vVBNMDwNuby9LqEWPUiWmzxAmbW6MGxNvXAed72WvQw9w/2H
                      PaMeKr1sKak8tCe+vDBDqLuCqws9AM2Wu+Au7LsFYZ+98YKKPSJrbj1Q3e87LCmaPDGCvz3hWZQ9
                      zFwGvZnysj0XrCi9GM8lvAKLWz3SFV89SZWbPWe4Zb3TXJA9GLDSvF4+fj3b68e9xI/iPMAOqbpU
                      stM8gK3nuu4kZz2CVa69AxoavU+Brj3GhzU9cD0pvXRrprw8hxK9f0+kPUZbOj0GPSI9DG+jPAJN
                      OD189Ia9+xijPScOoT0CP7q9YOpMO1Wgy730icI8Pe04vaC7Db3tQZc90IN3PEg5jbwX9a+9mNsv
                      PGl1gT2gm7S9qqKbvfHCqz30urC8sNNePE7XmL3sGJk8NPmlvMRh2jywzD29OqV1PXjF57wo8Zu9
                      6O7wvNCQqDuTR6M9WvYzPeDLrb263hK9aCIsPICxsbpHCJU9wgkVPc/Nmz1Ynj68oot3PW1PyL2T
                      MRq9MONJvJHNhT00ZKG8YHZcuzrndD3gCpM7YBiCPB9xiz3M79a81r6avXLCQj221Vw9H12VPT0L
                      uL0yJLe9WpZAPSExwz1BMcg9Kpi3vTEwmT2S27+9yQWqPWrTAT1QrbC92Rm2PagVdrxDg5C9GlIt
                      PZbgnr2Lnay9AmM4PfAjM70QYUu8Q8axPfz1Ab1DE7+9CLCVvBQM6Lzpz6U9MKglvf2Cjr3oMgm8
                      AFymvQGowz3fT8m9kh9rPUo7Yj1dWIC9oqh/PXMHy70HC3G9OC7DvMBQirzQBw28qxS1vbccfb0d
                      p449s6eqvWCkvb3z1nq9KtMnPUi8zbxzaaa9uRaKPRhWV7xQoFs8AAWpOStmw70SB5K9uPDKPJiY
                      VjwiGkA9POHmPEE7uj1H8kq9XCPdPK2kqL3wph+9WvU2vUhrhb2A/j084gIaPfr0y72AKcq8Llyq
                      vbsHhz0AYPG5MNoSvJjopb04mMM8camePTP0pD38peY8gCqWOrhohDwAw8q5Tb6LvddIub19QK+9
                      MAwrvJQF0bx6oT2913IwvaDG/Ls5h4g9eMbWvJtXwj2Ee+c8ogipvVPXfr2S/5S9yVqRPUI2rb0t
                      tZG9ACzvOhzwAL0YG668uAWivUj7tb3yyWw9k8arPXb1Vz3iykQ9BB0UvSCLs7vYfQC8ajsnPR2k
                      y70GGYq9l5a+PdVRhz1zvC29wqesvcVgxb2QC2O9uf2jPfwS9jy31pk9NtdoPTJJTz0ONJy9AFRi
                      ubXNp73IyYK9KCmlvWJwCj143pW9cQmnPbAvoL33EXi9+sybvYLbtL15XbQ9pyKTPXCAmr2QImw8
                      V+eOPdoqQT3pV6o9cjwrPUoFN71iHXA9BrysvZgb07xRBLw9gI6TvFAdsbtSfX49OCTxvD9Uw70M
                      oYu8eLeQPBjuHjwX5yS9en9bvRQcz7yuRjc9P1vHvQaqFr1nczy9VNH6vCIBAz3J58g9N3hqvaZh
                      DT0wxQY8zTe4PWKGMT2REo49k+0/vbdCbr0OTDo9YSK4PZLHZT3B8Jc9HTuyPeVSuT304d284M+S
                      PHUFqj1yPDo9HkIEPbQfiLzBXZA9fKEFvURb0jzJQrw9iKLwvGB0HTt4aLq8ivc5PSwl6jwQzQg8
                      KVuOPTBUBzyKzhm9FpoDPfCbb72ldqK9oFMLO9WJrr1FOqU9aQOzPWSy4TzuRhg9ty7BPS5kSj0C
                      pCQ9usBzPQ2gab0Af7u8L9TKPRMNsb1AUBS8bHqWvEDB9LzK+FC9XMf0PMAqYjvAsVi9vQ5qvZVj
                      m71Qf4g7DciZvRv9pb0QTQe9LvlOPQi1iDx9N5y9I+WwPaTE3jyILPC8MZyAPdcNnj2Bk4E9dAyC
                      vWEWvT0gIMa8FX64vdT7vzwomMq8MpAsPYqzBz2A97K9qKKgPGDm77xaN4y96APMPPqsSz0xQrk9
                      XHf3PGCjy7vKKrS9yHu2PAXGvL21XLS9zpcsPYCPSr3OC1k9ms/CvdKcGz2OSn49wBoHOzQx1ryg
                      L7q9rfq9vbA1IjzXHye9k0SOPeg+kb1jcY89QFS7veF3nz1NkCG9bLCLvZptir1p84c98R2sPUF6
                      kD2AI486MnB5PbL0LD02aRY9yGKpvP2dML1iymQ9ic+dPdgiCTyYUyQ8qpqFvTKzBj2KVb69a2LI
                      vTZleD1YwF+8jG3fPAGZuj04oag8kIiovUC1dTwr3629noKavRXJsb0a7SE9zrg1PVB2Lbz5wpI9
                      kj1vPeosQz16RQk9CCahvLIQwr2B4Jg92ZquPWA55byw8gS9IKc2vQKaaD2/asy9OLy/PIjLkjwa
                      /w69YPTIvWESjz0dvE297Iv6vA5fbz1NYry9AMgHOlvEzD2gFNO8ZeOCvWM1G73iZkM9d/1jverY
                      nr1Askm7yYaMPTDhXr2fPKU9FJXkPBDoVTzja2W9Elu4vRlZoT2FMrq9jM3IvBfXwD1Dm2C9DMHO
                      PAVQk71nc609tICwPLB34DuTjDi9tNzLPOIdNT28SAy9XWWfPSr2N72iw5W90m4yPSraNT3z0C69
                      cVmsPUAGlL2yXLm9i4eOPUD8r720o628Oc7KPYAdub0Ajug5iGD0vLDyHTyj5sk9HpV5PSqLBT14
                      Hca8EEtvvCamor3Yi4O85s4LPSjzhzwNMFq9DFu3POqPfD1iL5C9dISZvLJxQz27ibC9ykUIPf06
                      lb0gdMa8VRyUvbl5nj1acLu9Lt1xPcnzmz3DyE69woVoPQVcpT3gPPK8ADQyugCiCDsSeTM9BLsN
                      vZKSDj0jYLg9UjVZPdaoFz2y5389wiOcvT+szD3OqJa9jYVwvRhhqr00Y4Q8umBbvcDgiTpQD6W7
                      JVOAPaARwrthQsU9PcFxvXm0uT0BsKg95KsVvYAkr70AaiA58PMIPEgLjb29daK9KcyrPTcqWb1F
                      ZrE9ZavBvTBkOzxKx109nzC5vU4qID2AS4C7rvmjvXcHvD0YVfy8tC+lPID+c7o2iho9x6h/vXZz
                      TT1gdBe7ZwPCvc8yvj0gXDC9vzuxvaMac70ln7Y96VWaPTSmqDxQAy68gn5/PaQLCr2+QIm9OuYk
                      PWJotr3mZg69smQHPT3gsz06K569XOgOvQauHT3ImP+8A+unvaRPDb0Nba89nwysPQB5WbrQQ008
                      BRS9vUbebz01KcG9AuJyPWDXrzydEb29zMKoPIfBQ70dWYw9yGujvRjFzLwYC6s8+CWhPKIhbD3x
                      7qM99J2gvAD0FTlAzj69Lp6cvcCNcjulwLS9KLzmvNO7cb1Gdpm9WWGCPXj4jr3YZ6y929CkvRi7
                      QLzS7qa9F7I1vcneoz2oTws8lwR6vQenT72ACoC96j2vvQxE9byevRY94K/Ru0BwDTxKRai9vYaf
                      vUz50LzgfIs8K827vdCSjrsoK1M8Utp6Pb4Ygr2OKGo9Ux+1vTjKrr1fu8G9tXW4vcJCCz3uUBI9
                      KZ6RPZEdzD0d7Lq9nVM5vdPxNr3CHQM95a/IPQB5HTp0HP683+WtPTOVpj1Aogc8eCXFvHKOy70j
                      wWG9DgJtPdMNij1gG8g7CKW4vWD9vb2tequ9mB8oPIlfqz11N4M9rtdwPaBlLDtspa+8YFwoveyy
                      67yUbck8XeqlPV2mlb2wvHm9h0OFPYD03Tsg3J28LsGYvRaeEb2sRgy9xw5MvQD0GbtM/KA8IMQC
                      vQ2os72YHKe9oLc8u84mAT00Oa88ygxevXcVzD0AmDk8gNiqPH0+xL0AnLa8YGFku24sST0Rd5M9
                      33+xvZUujz1h2II9irh8PcAVN7zMmsi80L9EvTR7yTyApe87O+fIvQLoZT1o8Cm88i8ePRB8TryQ
                      jXO90AdNvABIRTrfu7m9g2RTvXn7yT2yERQ9CscwvSD/SL3PQMy9JKv6PNTeubyQ5be9Hf7FvdrF
                      Fb26HBU9CvJ1vYGxpT19nGW91WGXPUAqAb0akm69+M6jvCRe3DxAQyc8siBMPZ7uIz366Hg9WN1R
                      vNqtxr3AU1S9suAEPaDbbrvgiaG9pWayva6aMT0Acty75vlXPcAKjLwouLW8hGbiPHPUsj1oeIo8
                      Wjg5vfDAM73MtKO80JJtvNAo7DtFLZ+9Wux6vXC7nL0Aj2+8ev5MPevrgz1gHXi7ts0NvWjkAbzx
                      R5U9dCDEvDNTOb23wEm9N1OyvQL1Zj2wC6C9J0aGPVjILrwevoC9c1jCvY0pMb1UB6W8oJq3vfON
                      yr1g0Xc7pktYPQDkYb3ycqG9VM7YPDBDCDyqWxi9HEH4PJFVlT2wWRc8BI7sPHcJgz1CPzg90R+i
                      PUHcpz0ASU06z/rIvYqEcr0XuYk9sGK4u1SywbzY5yi87ILXvA78Hz1H2oQ96uCJvfMHhj3V+oE9
                      0t7CvYg5nr1oC6I8DvkIPUBDnbzXtY89k4ChvSExjD10Xg+9M21+vaOAo70C+j09c0F5vcC5P7yw
                      Z2I8BvJCPQLneT0XemS9hdeJPXesuT1Ky7S9AHYfu4FrwD3Yghc8AAWYvPpIVD1tzVu9EhK1vaEc
                      qj2noMS9wJU7vdBEVDxQUyc8AIzEPABQojelVYy9+H78vGtioL1L45I99GuevJALZjzg99Q77X+y
                      vRPuqL2QcB+8BqtuPQAhAb0Ed/k8mlMxPUyoFL0ox5+9gsPAvV7JFj3QlDC8MvwGPSmFiz2M65S8
                      V/vEPVcHhj3umGU9zd2mvcsZkr3MJoC9gISnvWsGyj10NQu94L+yu/RcrjxQGT+8sghoPfd2uD23
                      9xy9sESgvVF2hD2Cxh09LOyQvATh8zzgkpO9UmQ3PSMBn73yvaa9DMXWPKtNoz04Lac831mSPfPK
                      kD3N9oa9sMHbu6Kxur32VqK9+C+9vLd/L71Tt649UF4avbWThj0T6p898tdePVt6iz2DQqM93xaz
                      PRYrLT3PnKk9LKrPPGrfRj2M/8Q8Xwq/PVALyjuiBHc9hYCwvZORxD2wsw88ZDLrPPrdd73QfKa7
                      9mtyPcvDoL10LNq8eJWXPMnJyz0A33k7swEovdDvrbvikGk9PRZ/vRIZLD3bmIQ9ML0HvLABqL3z
                      7o09YFmBPDp/Ir0nSF294eu0PcBy/byYBCu8HfKPPXquOb0KhWy9JvBQPfurhT3f9609dhhVPUZi
                      XD2AH2a9JDPYPGq3Gj2Erd08zmpPPeZ2gb0dO5M9csi5vWwO9bwjPcI9kPlGvCvkkL1Eohi9qo0S
                      PXCGTLyVZZK9RgJFPaTX6Dxn/jG9O6e2PZx5+DzCcV09+PaoPNVFkD3Anbq9cU+9PXggmjzD2bm9
                      YjogPQh+qrzwLSs8UFq8O2n9pz1ubAI9mOa+vWw48ry1R7w9KEUdPOCJWb00fPE8bXrDvcVJv73o
                      TPy8iqNeveiJsTxposY9I79qvSzQobwLmJq9pDXgPCarTz3iSl891NrvvK0jb73xTJQ966udPezu
                      rTwo+pK833a1PQAgXzvY2hS8rCmOPBSX5rxaVk29vjlnPSs3wb2oTpQ8SWarPYBqOrxgk2+7KPNK
                      PBj8Dzwdz4c9EMkJvc0GM72gAri9ku8oPYI2KT1IFOK8+aKvPYDToLxoCAE807E2veAGkzwsgs+8
                      TZR4vUBCvzySQL+9vhUFPVd3LL10Bgi9bAbcvDrxLr3zP1O92Lj5vIKtpb3Q3i48SGjKvNAWLjwA
                      aUs8IVO/PUPihT1Ur5u8IHUqvedpyr2cn+U8UE3DvUmdmj1s99C8IUPKPTFhrj0DALK9YCexPDp6
                      RD0F7MQ9xwysPef6Gr35GMA9qYWmPR8uwj0g7a07Ba+jPSAoyryxaIg9Ni+evbY0nb1YnBc8Tto3
                      PW5CCD2sVre8Gi7Mvdglkb3ibw89VopKPcCXPLy1GqI98GRfPGcETb3Rucs9HYiRPcVXsr1KL0Y9
                      +RKZPX3YO72/LcW9KQOuPS7oWj39SMe9kERZPLRT3jzpuK89FO3uPMp2aj3wKAO8ulgXPbgYsryw
                      05+9iVi6PQCI5LlK4Ge9NNiFPAiV4bwYK6e9Q1YrvQZ5Bb0VWYM9g1SRvYeXRb198Z29bVhVvVqD
                      Kb3GqZK9ANCLvTiXszyNMi+9kE0ovYATib2Ni7Y9oHMBuzEBkz0fFre9nT2NvXAvMLxiMW0954aW
                      PX04nD2ONgg9e2HMPeh6ELyiUmM9sDXAvcJ0QD2NJKy9YZ6TPeB9kr0Dho69mIecvNrocD0MQb28
                      gCpoOqwlq7wi0wY91vxiPVCIr7sg1rg7hwljvap1SL0asFM9naNsvX9brb1TZB+9oFqGPCY4Vj0m
                      SmM96J2UvepidD1A9UG8pkRtPYdnV724ceq86OCnvFO1N71Ady08OFelvZjVdLwropM9UOzaOwDI
                      zTmWS4C9ENpRPEi/hb1smIm8hKDfPH1QaL1TUbO9hdbFPVqaa73QZRa94mQFPa8/gT2IG4q8kDB/
                      vEbmDb1g1+u7TQtmvaDOIjsALoo58ASevYfJGb0P8oU90JzAO4BJP7zHul+9QMs9uy01Sr3iCMO9
                      41iyvdieOzyAE369SFeHvSMjX720n4c84uViPSNoxT1apRC9FyKoPcrrZL08zAS9up12PUpZGL3u
                      IwY9UGxvvBYZlr1oA0g8ujWxvTo0Ej3i9lw9iLW2vG1ztD2BHKI90JMvvF5dUT0oyHW8pNWKvQVW
                      wD0aZza9pOHzPI3jpb0zchy9OqhKveCcs72Y+ve8ovgtPUDRfrs9zZM9xHPSPGetsT1qc0C9VxI0
                      vYB6C7wTzp+9oNNovbKAPD3pDo49TrGgvXf3Lr3l0cA9fz2gPSjjXbwjYcM9KNP/vDA4ELzq0BG9
                      IL4NvSqEZL0kpgm98I1BvIFNiD21MKa91tpqPVO9xr3ccRC94DTGvT3Qmz2u9lM9UNffu11tw72D
                      5cM97ZmWvZhrf7xA7dG6AMsFPMj8zbwp1I09HTpZvWMVZb1Ldb89IAGlvPdYtT2NUpa9YJ2TvLFA
                      pT2ipzE9MGa4u0CPVDsOxRE996o9vZtYtj0gQNQ7rGPlPBQLgby5bbE9aRG2PdTMrDzMQJk8I62e
                      vcH7kz2dMLk9sU2JPTvBoL2AwxQ8BETPPA17iz1kYQe9d2YmvZidHTxRbI894D6cO0oaaD0yKkI9
                      6JtkvONhfL2YoAw8mCUqvOatTj1ITM+8Yb6hPSTzGL1niR69QO5Vu8zvqjwIJMu8UFHNu2DC+LzY
                      gK28aAHBvZ6sMD31c7I9QNGSOsrTIb2HEHa9js4aPezPEr34zrG8/zi1PZIyez2+hBY96o2qvQp2
                      ML1YJYq9IP16vUB0dbuBq6M9I8k4vQC+GbvzX6i9x9F3vUuEkj0xPZQ9GuB/PSjCnTygtHq7niB7
                      PWyXtrw3kcE96SeCPe2JwT1GqGA9fSpivVhmA7xAMa48Q6ZNvSm/uj0c7xO9x6ScPYlzxD2awQu9
                      k7srvQhB3Lz5hr09YFcou0iW0bxa62C9DIQOvYinhr2AdDK90CMbPBgzr72hfrE9OJaZvOaNND0J
                      ncg9YVCNPQHepT1wGoi9EsIvPQAW1Tp/7Ms9tf2IvcAoxLyjfrE9YeeoPRWIqz1ulmA9lESHvA0N
                      Kb35iLI9HYFcvdO2er11dZE96LLSvPZ4Zz3z+Xi9UCWXvSn6mD0mljE9ehscvVTB6rwjeGe9NqAY
                      vcCVLb3A2ua6tywbvVjoZbwaVBE9vUuBvebklr2yIDI9AEtlPKAKMruojk68CQybPT4dQD08mO48
                      odS5PV0sjT0xXpQ9yi8fvYZcST3hQbw9QJCqvADS2LxYEc28gkJKPdwSC73S8TM9wXiIPW/WwD39
                      ISO9mm+VvcwrwjxsiLE8JkcQPfotSL0KG129w5q6PceJG70Vho29RwLCPfcJoz0NoWO98okvPV7V
                      Kz1iDpm9sgAqPeCU2zsiNbm9+8OWPYBMnzws3IG8aS6DPbIeob0MrIS9lJKLvPCJbLx66RY9gEtN
                      vLWRqD1ao009kz+0vQCIq7uXKKE9cpZUPVA6D7xNpxy9YiQGPQ+ktT3ULf88kGwpvCB21rta/hS9
                      iOO7veAtuDyAno68
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NjE5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NTA4NjE5MnEBYS5kAAAAAAAAAHC0mL20QeQ8d2/BvaAyRrtghUA7LLf4vAPQJr3Y/H28
                      /xCQPWUBp71m+T49MEcrvEanGz1yOXY9NustPXS9+7wABp65QpEuPVDqiDsxLZk9IvmgveMzkT2g
                      syy9fiAwPaxB07xFybS9fzSNPVJMur1yqho9/dZGvVbVMD1AOuq8XBnjPOKdNz00cxi9FF3MPFJB
                      DD2g3mc7FhqTvUBwNbsC4w49baWEPdp/Qb245ey8C46uvd0UzD0oZpw8GSmFPUA0Q7vWI429MuEb
                      Pd8zub3I5KO9d1a3PXEzqD36eyg9aA9UPK6dUD14A7G9gA3hu7BdBL3PULy9gBiNuyfkgT22uU89
                      2Fk1vFNRuD1KhDI9gOa6ujcBzL0A1NK8QM3TvDCSxjsyOwE9EGMFvK2cub1AvHo8QPMXO7HYnT1l
                      Hrc9kkA1PQp5vL0AKJy8EKotvHrXOz0QWCY8ZmaQvVRfmbx3GCy9FYqzvdT9vLzgn3m9jObyvArj
                      bz1AIFy9VsckPQDiCju+HjY9q2GgvdC/yb0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NjI3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NTA4NjI3MnEBYS5kAAAAAAAAAMBlHTywBJa72f+9Pcd7hT0Dz1S9OF69PMC7Ar2TgZs9
                      LKDGPPpbbb27kss92OiKvE71AD0kWO08kFBgvNBGBbwjW1K9AHtoOoAHqzwOeqC9LM3bvP59i71Q
                      x4s7YDrPOyncjz3vqas9VscVvWHTrz3nN8g91Te+PeE6yz2I1YG9+jlCPf31fL1AfQu8AN1wvL0H
                      hT1Ye0O8GsmbvfQmjjxTuXy9QCVMvMoUIj1ov588nzOYPR5hSj33wVy9Ehe7vaKHED2mZqK9zwe0
                      vejKrTy+D0s9AEtbOyaUq73wCKC9qKyavcCBw7yga5q9/YusvXK7Ij1jvaI9akJEvQ0inr0saO28
                      cDQtvBSb/7z8eYu9rTW6vQFzvT2Y/HK8RDv5PEXAjr3ALly88fq/PTSHtrxwiXo8PiNmPTqRlb3s
                      hZA8rJizvCeQW71wesG9qz+7vbqSFL1dGyS9AC2luzqKb70gtBS90mASPcCTfbziVpe9dH6xPD1b
                      qj0F25i9/od5PdfVjT1I1Lo8kVyRPUcLsr0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NTA4NjM1MnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NTA4NjM1MnEBYS4BAAAAAAAAAJFkhz0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        J+C8O2dGpDvRdvA70XbwO0VYHDyL5w88370TPN+9EzyCy0s8tpBGPMNCNzzDQjc8gstLPLaQRjzD
        Qjc8w0I3PIKGhzueNGs7aDO1O2gztTvyKbs7D8zzOyQRDzwkEQ88YxooPKOZJDxp2208adttPGMa
        KDyjmSQ8adttPGnbbTxwGMQ7p7iXO7zyLzy88i88bkMQPEuA/zu7ylY8u8pWPLyNYzzAfzg8UIiE
        PFCIhDy8jWM8wH84PFCIhDxQiIQ8cBjEO6e4lzu88i88vPIvPG5DEDxLgP87u8pWPLvKVjy8jWM8
        wH84PFCIhDxQiIQ8vI1jPMB/ODxQiIQ8UIiEPKTfATyNUhU8jwXMO48FzDuA5Zw7wHWqO14Ipjte
        CKY7T7twO2cSdztK2oU7StqFO0+7cDtnEnc7StqFO0rahTu2/zQ8RpVQPNhfBzzYXwc8tg8DPIU7
        yTs0das7NHWrOw3skTsLB5U7BkJOOwZCTjsN7JE7CweVOwZCTjsGQk47DC/6O32tITxvaos7b2qL
        Oy4JqjuwA8A7GWhkOxloZDvZmFc7UfSEOxsWOTsbFjk72ZhXO1H0hDsbFjk7GxY5Owwv+jt9rSE8
        b2qLO29qizsuCao7sAPAOxloZDsZaGQ72ZhXO1H0hDsbFjk7GxY5O9mYVztR9IQ7GxY5OxsWOTs=
