N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NjI3MnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzE1NzYyNzJxAWEuhAMAAAAAAAAGQju+TTuLPqA0J7449V69v/yVvthZd70laIg+EA3q
                      PZhIbz2B7J4+SyWfPvBQ5Tww1xq+mtlZPusGf77d7KY+sSWEPnY0Kj5AWfa7mDeUvrBr27w8G6E9
                      S/0zvrA9jTzwe789+MwUPQDszboMD4K+4Gd4vuCQwj1apFk+JLicPVSnoD0AI908QGHvu64vLb74
                      dQy+Hs87vuuOPL7T5YQ+dCbGPZyb871gIW29yDsRPh7vnb55vpU+JsR4PkBJNT3ES/Q99ll6vjCk
                      4bywaeQ8HK6SPQBAIzrcK8M95SWIPkDpS74mjcS9DYaVPqjkHz2AgYI9oDE+vODObr0Ov1w+GgU2
                      Ppiagr4ySqO+g3Whvl4Sc76hjIs+4NJHvlENoz62d2O+GN59vebfFj7OlU8+MxKRvnaWbz5Ay1C+
                      pfqaPoAInT1k0K09eIBmvpR8pr2A2Rs7XmZXPnwPgr3GtK69Kw+pvk6QS779cag+MHuovHAMA75g
                      sxe8YpRnPga0673AjPU9hokePnDT4rzeQUE+Ttl1PoNylz6/Koe+KqODvuZrB75cBou9ICC8vXD/
                      xjwAvQ4+eJA4vgCEfLz2nhi+pKfcPVK1Tj6Q2q88AIXnPVkRmj7gTYO+J1KEPk6ITj6TaqM+VEap
                      PQoMBz54dh0+Tsc5vjJzRT4bJZA+XwOqvgrFID4iAn0+4PaLPYiin76GyCi+9+6IvnG6hT5L8Gm+
                      to/evTHvlj4q5pG+m4SUvlCPL74r1jW+gWGfPqUhqD5DqQi+gADYPFDhoL5H6oW+Mu5lPq2Vgz42
                      NSE+xEuUvah4Lz0eyQq+5lJyPrBW2T1Lx4K+NXuGPie3iL52+V++18mePsBjR70kjoy9MUiWPqgd
                      SL0QcR2+625UvqoDEz4I1mo9tswPPtNgqD6kApM90LXbPbC3qL2A+Q27Dk4/PipUWz5GiYy+JjiP
                      vqopRD6jxqi+4yNDvsx28j0q9Uo+oCi0vcB07ztw+4s8CLFovShGEj2GQkk+kpR9PpAX9DwbSBq+
                      Ruc0vtafNT58gMg9QCBIveJ4ZT5wlpg8WIZqvsTvkL1QSpw9Ex1pvkJbcT5GrrC9wxEvvkyYor06
                      dzc+wN2fuwZchr6hz5w+5c2WPu94oL4o6xi98zqZvl+XkT5mnvS9kywPvpbQFz7rmJo+FKCLPRrL
                      HT5QkSA+QJVaPbsYWb7ATiW+iQaLPkP9Wr5tnaA+tauNPo0+iD5SjUA+rptOPtLZZz65OIY+4rk3
                      PmPfoL7YYhc+dienvmicWr11yYA+fZ2gPvhvZr4+sBg++5xCvneTh761zqA+9F6Tvuh2WD2xTIc+
                      YCYwvTJifD4At567rkRIPnyojr5u6C++CEhYvdTnmb3zypm+MBurPOMZmL4IwkG9HtQ0Ph5fdT74
                      hja+TIP9PZHboT5ehwg+BpEOvr7cFD721bq98Ee3vNCKiT2q0To+wIniu0Sr6z0hj6E+QCzEPAAu
                      L7zgK1Q9e/eiPjwa+71Wy1k+sttpPmCVSL3ALA+9LDCkPQBxLb6BIak+hvWLvt1TgD7AFbM8Dgld
                      vlw2x73ZDpA+Fm7ZvbAevryqp1s+wsAJPjvep74Ne4c+MDGPPAgGCL1wJ6c8eZ6WPiAWFL1yaVk+
                      1PnnPbIlTD78aJ09wINZPZ7fNL7fV6M+5jX0vcAbgDyQhsS8gzxEvvf3kT5WzQy+WFQxvj8wjT4Q
                      ztk93GzePWbALT6yVnc+3shwPnZSCT4KMk8+KGaHvpkKgT4QAOi9wIwaPVSilL4Ll5K+xhpHPnL/
                      Hj5DKZi+gA92uzIoXz64vny9EALHPebDqb79VJw+y9R5vuQ2yz1ASoG+ouMEPj6OVT7FooE+waSG
                      PhSal75C2GI+oq2Kvoj3Br2Fzpw+cqZ/PrBA/z1GorG9TFyBvg7har6ghoG9FZmiPluyb77IwzY9
                      uSenPhYz5b3AzWi+zNu5vbifPb4w58a82WWDPnAbW77WRSO+35uavliXMj2AsC496BxCvaorDj6W
                      lBS+upN0Pko1qb5gaFQ9iNJMvVqtRj52WCs+4JoJPtt2fr7Su0s+E7gnvq5mWr5uIiG+4AF0PW9x
                      qb5FUYc+WoBwPhKEZT5agDM+yOQWveh8cT33AaC+bscKvo4fj77g/Da+CN4fPSC0XDzqQmc+WMAn
                      vrMHRL74REI9oVOXPusQo75zoQu+yL90vtkSmz5EmtQ9i8JnvuF5lz7JaJE+2SigPip3bD6INlc9
                      ECTLvADg37lzW4g+szanPuwSzL2Sh46+/E/JPU4+fz4gmBE9bJfwvU6LKT5epTS+EFBtvmapXb7U
                      75y9Rm4HviAnaDzbmZ8+wiMMPuRMnD0DYYa+xBKKvYk7oz5obgu+wkmTvoR4nr3r80++AGXsO7oQ
                      bT4AdOa5pjkVvtgGZ76oihE+Sm9OPikPoD5Aj1S+zzeJvoBvDbuM8ZA9IjlAPqaxDj7l3qA+Cnw3
                      PjYyJz60tIG9ft4sPgBJ3Dr2w/69KmpbPpHGij4Anuc8OqorPmYljr4vM4u+dosfvg6abL726Cu+
                      iTeTPlI+Oj7SSTg+fRKcPsApxDtbqx2+GmA5PsjOar3cKtM9drHmvQDBkbtURZe9K/kivpBW6r2k
                      Mas9ABY3Pay9yr2PpoS+KqQiPgEgiT6OaXm+ZuWyvV5rSr6E3Iq+Ll4svp5nH76L4hK+sGibvVD2
                      rT2Dk5s+OKCqvgYqMr6gzAe9a08ivoCvyzxLEZm+YEIqvnU6gz7LlIK+ojRfPmDdTL3zDom+xECL
                      vSqBNj5DPw6+8KDHvYgBlL4AY+S6eI4zvvgBJT4WnAS+cXKlPozBjb0gdyi8KKA6vrisPr1IZiC9
                      8npNPo6LQr7wciY+bJyqPdb7ID6YeRA9PvB5PufNjz4CklE+Q4duvhmphz44nwO+QN3yPJ7MkL7m
                      qRa+ZSylPvyO/b0YX0G+arigvkDdHr7A81i+6H9yvQ77RD5yK3I+6Kp+PSSgnT2UEIO+5l2IvqYa
                      ED6yRJq+BvHEvcDQ/DvqiV0+c7acPnrNFj60RJa+AADhOjz/hD1QCcC8IFAYvEhELr4yvjk+gS6O
                      PkBUtTvoDQg9TqU5vvGEnT4czNm9uJaKviF7pT44sXC9dL6OvUzjpT3mCi8+wLv9u/DUvbxwi969
                      Lrievgvxhj5PXKA+fmJLPgRYl73WroO+IJ8qvhBY+r3MjtA9AF+wutC6uz1Cdi0+ANzOu/Byxb2D
                      z4A+VMGJPVChaL4HwZ8+VMvbPUCsdL21Ups+2Jx1vaYX073C8Ec+8ED3PTO4Dr6AV1k8nfORPjp/
                      IT4QNna+TKO9vTK6Sz6A/3w9CJRIvtiTS77Gzmm+Ivc7PoBHCb3IWHa9phMvvnRp4D2cu8w9cPoR
                      via94b3SymI+TDSCPcK5kL7QGyi+YGCIvYGviD4TNwi+gkUuPnCqmz2mKx8+znx9vl0Rnz668ZS+
                      CSiiPsKYcT4Ywg+9qS6aPj2AlD7JT4k+kMHfvZMRYb47m2a+2geCvud4qr6cFP69OnhePkCYoLx0
                      hoS92rZGPryH071sVeU9yyJRvnBHqD0jvkK+JhzsvVaG871ApJo7gP9bO0Otfr7gBSA9a/k3vt7Y
                      Hz4jyG++REzpPVDl/LxLWCq+guA3PjPYpr7AnU894rZEPvD6tL1o9gC9EuiRvrsmUL63iZa+yPZE
                      vvUboj5vPZg+iNUFPvhgKT3qwHI+YJcrvrgGTD1Ghy6+WIdqvpxOlj3svso9pjCpvsAWiL44YV+9
                      yiloPsDqbr065n4+Hn17vlx/yr33gIM+e7FdvgRSxz3Qcfe9e+UOviR9iT0u1T6+gIarPEgAUb5Y
                      y1e9EGjuPCJZfj4A8eM9HI3cvWBU073cfcs9+IccPeVUgD6s4Ys9um1zPkpuDD76hFc+RsUBvvms
                      oz7Y7Q6+L+iePqIzkr4caq69UFhTvnM2Gb5gs4a+gaagPupMbD5oFwm+OCZpPdBopr7N3KQ+zt4D
                      PveDkj5a0UM+bEiHPY/XpT7A9w2+xK/0PVADqb7ErIO92Jw9PWRSpD3KzSw+DBHjPU2soD6Wd2g+
                      dhQJPgjcHb2mmtu9NlaGvoBZfTuMSr89gOh1u+ThjL3gQZk9ewVHvpPgkD7CfFc+SFYavuB17j3A
                      8O48eJYCvZAep73TZz++3HrdvR6DKr4y3wU+OkJkPhMWkj4IeRC+gf+IPlDCorwAbFo8iwyePiZN
                      JL5yLYi+UulaPtD/kb7Am709oeKNPsP2P76NuY8+s3wTvrtkAL6vq48+QyWQvuRa9j04wAc+/ciV
                      PmumD74H2Y2+4YygPsNWSr5TJYu+6bqNPuiwm77IcTK+ViDnvciKb77ML9y9Po8oPvBs+bzH0IS+
                      GIgCPXDxvDw5mZw+4yVPvpeEkD6Am248gPQRu1OrTL71vJo+ZkdmPsmflT6i2Ew+PsqWvoyU7j0A
                      rwo+AIHfPJCpjb3eamm+Y2OjvrnhmT4QUsw8oH2yvUTv1D3IiDk9EASmvvnMqT4ht4E+gAOsPCYN
                      n760pcY9sOwfvibyrr2sWMk9SJNdPQBp4bu4I169ttYuPka67r32XPG9ABy7vaYhBz6FLJ0+ACFM
                      vZgZRj0SeW8+qkskPuBsh77HE56++u90PrS4iL6a1Wg+AKK6PE+8lz4kUKq+kC/6PWaJdL6wHre9
                      StSTviyhwb3VYIM+kFacvYKJUz5mQH2+YgQAPlOOoL5A0YI8GlhdPlKUbT7gxfU9+sxcPrOQJL5N
                      QKk++02TPpRKqz2wjps9kZShPpiPBL28kbW9roV3Pi+cmr4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NTM5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMTU3NTM5MnEBYS5kAAAAAAAAABAJ97zKz0s+WEZ5vaNRpb7ASYA7wBoavrhlYz3gVQS9
                      4wqcvoZNF77WJFg+ei6RvoCgOLwgixC8oMESvDIPBj6U+o49fix+Pti7FD5FlJs+VTuMPgCxsrq2
                      Al++4N3WPZP5Rb4tlZ4+PPuGvetbPL6YmHM91uNlvvzj+j0KVks+KwxAvtiWfr2AXHm+wjMZPlNn
                      hL4g0Sw9gf2pPv5lKb4Okgo+8JgbPugSR70IARO9OnhQPjArxzyOmXS+EMSRvrNqoz4+H6a+RTGq
                      PjBZlbycILa9pH/rPbnUpz7wDOu8qEN1viCU4T2ezD8+gtxxPiSYxT1q5H8+4B0HvgBUrbtgQWE8
                      ALrQuyPuZr4AhOC9OR+gPqKrob41LoE+/KXkPSZk9L3kzZ694zSSvhZM2b1T2na+ALRCvAVggj58
                      NqG94jxePrvXR75wdBK+7rN9vozJu70aZHI+XiUjvto0Mz7G8Do+ZPeaPZSv/D2+uSS+mLl4vq70
                      kr7mIBc+YGzHPdswkb674k2+u/kIvnvtTr4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NjUxMnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzE1NzY1MTJxAWEuECcAAAAAAAAWqJi9Ul4JPZuRtr0AhFI7fpB6PVe6R70+00c9Zg5k
                      PSTa5DxH4bq9qdmePQUzmD0mdXg9mCtbPFaWOj1yyWI9gXCOPRRFgr2AGe28DJWNvBnEqD3K7b+9
                      gG+Vuj/cxD1qzlo9wm6svXdvuT274J69AnVdPSA3zbtkz4q9EvcZPcoOg72ZFb49GzG4PeX/lD3f
                      kse95mQRvXfuw70QfCG852OIPQAbgL0KlxS9KAOyvdRr8rzPDbc9sM/JvX1Tqz1RvZw9PnA7PSB+
                      kjt1uZI9SXGrPRuLrT3nuXa9GDNgPGaeBT1phLI91/weva6JKj0SZMa9cuVrPRnsij26/Ha9myat
                      vY+xxj2ASvE6VzYtvSiuEzw21Q29dceBvdVQwr2ZQoE9gFgbvHp5TD0yWRE9RFLPPChlgrxNqp69
                      mBEPPBA/Rr2Ao8o6IM6cvdb4XD3EVhi94FeFu4OniD2QUHs8cpaIvXqYej2AB5c8cl+4vWAPiTuw
                      D7A7eFawPNgACryGCYC9H1KiPcBpj71s6oa9Ip5tPf89mz2whG29WwWZPbc4H71Qe1698D57POik
                      gDy9pm+9GMXvvEyCg7w5Co493O3kPCAj27wCR2M9qvE1PXhDp72wi9E7glY+PVArv7vI0qu82eeS
                      PeCtbL2PkJk9GL6LvBjnDrwykSg9WBu8PFLcJD1LMZc9sIMNPNuDyj0zWZs9cFtlvZQ5i7wTqoA9
                      De5YvUx73Lz3cSu9ME54vcIxlb0eMnI9WtlmvZ5Dfz1QwVW94tCpvf1OG71MZvU8aD8nvE0qyL1F
                      Zae9yNPGvPtxvj0dBKu9mq13PUCsZrs9a7m9XMz9PGLEy71g/9K8NBWXPCqUHj2iFQA9OKPFvBiN
                      ILwwBpC7AJomu+cYxj2Uip08AEIzvOIUET1AAiU7x4kpvaQ3/zxEI/Y82iSvvZUOj73rMYM9Mryw
                      vbBiPL003Ms8cJdevelCsj1oEUa8WJ1ivCP/y733HYw9PcdPvVQsDL1adiy9PXOavdbPRT1rXI+9
                      jArevNiBpzwgPag7YA+4PPoWXD3YgVG8wMjfvNCdOrwIsoC8XkIZPbChbjzWnpW9+KyEPBsJnD15
                      ZaM9GqQGPYIKIT3ggbK76vhvPTb3lb1YqIi89TCCva5Ddz0XLbA964GQPSiyyr2HPSC9w3asPYBx
                      sTzGr4C9kgC2vbT9sbz2vno9MQqBPfgAjLySHp+9eFitvZAtk73QMte7YBewvU4Gpb1A5nq801dt
                      vTKEZz0oI388sFB+vHOGQL2ev3A9wGh9vP/yur2Yww88zA7qvPfcrD0SlMy9KN+rvYCTnTrQLY69
                      cBsxvPQ63Dxmyoa9UrswPdf8y73DMWu9ghBFPRSs6zxDIpm9zo8wPfLdCD1yuxs92vTAvcIIfT0g
                      4MU70HX1u2pUEz1QUyu90BKcu1C+zzugdLs8AqFRPVgRmL2Xs3m9A7C1vbPzpj1wJzO8Og+avbmI
                      iD3Ed4e9wCq6vJAGF7xpn5k9rbG9PckGhz2szYo88R6EPcALQr1oCHs89K+nvN9atr0gCZ87PiwB
                      PQCKvju3QC69oPjLvDKhbD1zJ6c9AEivOWoMOz1NqXW9gI7HvBDber043cC9e4uOPTCcdrxoPPS8
                      wXq7PXBOEzxu74W9+1qnvazCszwkw+88QQOMPQNosb09zW69X++jPVqACz0Ki3M9UsBuPU0QiD35
                      1oc9zPD9vHceu736x049gJwbvEsrs72gBHS92ZqIPQBxp7wARAe9FtlxPTo/gL1t+3W9U7KIPRTz
                      nDzSSjI9gaCePdguM7xgIna75m0Fvdbspr1wp0g8SCe7vGttvL1wl0+9MLsdvMpsV73ozha8rGyQ
                      vGC4pjzjHZw9Frp7PSOTpz0JbbU9AA1du5xsD702dG49GdLBPZh6ULznHrE9h40ovXZcAz3j/rW9
                      aIqDvRFShT0SrkM95auHPZrpAj1abk69ItwKPYWgsj1jS1G9WHxsPE+DuL1Khpa9oGyUu6AVi724
                      i8O8JtORvRAyOb0K+be9AHQTunSVk7ySIAg9gLiSu2zvwzzkyxe9wADpOsm9pz0RLJg9jWQovSfR
                      qT2pDpI9sLUIPJDLFr2YWbo8Of3IPYB5QjpYlqI8h0C8vUAJnzpgZZc8gxbAPW3FtL1jqFW9dajB
                      PQBct7uqmia9JODcPBSCyzwM7uU8qceAPfDTGzzSoFk9KQuHPT6fUD3QtGU86P7hvNs+vr1QtHG8
                      wI4ZPAGouT3NQXC9kMaqvWbyHj2qnGW9MtIEPQkasD02N2k9CSqRPT/5yr0Z/qE92hVRvW/duL0z
                      Erm9nm5jPfkYqj2gHS+9rZAevVKfNz06KhA9XxWaPeJuGT1pPsA9wC4SPNJ3ND3Y0Za8UpltPUAN
                      Ibsqdi49iziTPXB1EbyvKa89nfkpvVS7qDzAYV+7YR60PfOljz2Y8gU8Qb+mPazy2DygjVe96HtW
                      vL0nt70qazU9CTefPaLebT2u5zs9EbKcPWxGyLx6RZO9Wlg1vTFChz3FP5k9QFlzvOpbd72YKUY8
                      NKfvPGyh2LzgphG9LAKqvCg68LyA/N47IDJMvRb3TD2KOzk9qQSAPaPnqr3E+gG9aKxivABgS7mI
                      gqK9aqW4vTdiqj1/WJA9KiJ8vZ2HiT02TZ29zbN5vTYvBz2Azui7SqRPvfQCgbwwz5W91jAlPf1I
                      xz1iNJe9gFbCuio9XL1lyLK9TkAXPYDOtL3A9968mHrvvCo+kL0yqzU9eGezPHRA1jz4R4O8Kj8r
                      vQDgC7o9iIe9l1TBvbAfsbtJLKc9qMqFvIsFvj09JJM9O/K/Pei98rwPx5s9QIP/OnfGv72ALKK8
                      w5A5vYBWyrsTQaS9IInKPLAGvb2jLr29qRmAPYpFPL1AFqC8IjiivTbQqr1g3RQ7GEeEvPpFsr1K
                      yz+9QROSPa9ykj3CxgQ9BQC0PWtMsr3Amki7ii/BvXudvj3pwMU9ys9uvbQv6TwbZ5A9TpQoPYBR
                      9by2ggo9IpxbPWpnkr3dBW69au4rvUZdGb2t/Jk99curPZR3ibxNbDi9V029vdNDjD02hoa9ob2S
                      PVCAxLtfDLE9e6KRvScFNb37v5A90y4xvcnlsj2mIAI9P1O0vTAl9Dux64E9shKDvepPFD0sL/e8
                      0nnHvTYLLD2wau47rdNPvTKxAz2A3cS6S1usPQPhfL1oyay8tHfTvLi4qjzkLNk8WA3UvJhlw7wx
                      3qI9MNFNvIt9pb2A0ka6nb0ovQCAoDmA+lO9lhYTPZTxwrxApeG6FeXJvUz3iDxg5kS9izmmPYAQ
                      jDsC2L29IBmFPDc4mz2kwPc8dLOFPE9DrD0Y5Zm8HAb2PKDx/btoxIO97RtTvcBI0LrozF48E7pN
                      vdhhG7xjeI49lm5ePTJLYD0ZZoA90NqfuyCLxjyA2Oe8UC6Uu0tCqr1lCJS9kP8bvYVIsb0n3ke9
                      CNOcvBi0ib1gDJW7UJTHvUN5m735Hrc9oNf4vKCGDL09LKq9VG7ovCn5jz0YGTw8QMMzvF1BoD3K
                      Cyk9ooo0PdTd2byoR6C9AA15vYA86btq+xQ9tcbEPf0mNb3hHJI90mZhPem+rj00dYS9AErfuW/9
                      x70fF8E94cXMPScpqD1ynLi9xAftPDpVYj0iF7q9hgVAPW+wjj3SVUU9xZyrvQzXsjxS+xQ9WB30
                      vJkKkj3jWpM9swV+vfGCsz1tKbe9NukJPfL1fz3nMYs9lqxXPdC5JTx4KcS8W4/JPd7Oej1zj0e9
                      bGfevHr3lL1keew8OJmyvL2rgL2lfqS9qu5MvahcTrwMcYm9VrmTvQ19cb3Urd48DGvDPL2xLr0u
                      5IW9wVOkPTR4hL1vkI09362SPVoXUr1WYZi99pQaPermRL0zwsO9QPOeOm5ZHD1sfMO843JhvWdP
                      vr0qym09cm4wPUC1e7xotSQ8uByiPN/9uT09AK09YLh+vVJmID2kqdU8Xd0dvemHgD2kNPI8vryS
                      vQ1BwD3YmDm8k4N/vY56Lj2iDhU9uZu4PSh1CjyA9p870uI9PUd0ZL0xjMA9U/aKPeh0y7xxE6o9
                      EGSQvT5GIj2aP0s9/rlLPYBpPTyCEo293kiRvbKQFj3tdsy9Ox2ZvUCeXb0jfiK9vUaSPRDvgb0d
                      AEG9apIkvSygkjzQ6M270rJ3PQCiJjzUZuS84L3XO/TvijzzO5Q9ZWubPSzsprwXoXa9WrBVPWjc
                      VbwHIoQ9gslaPQ0lg713rMA97YDAPcrrQb0MZpa8IostPVbxZT1w4Iy9wHV5u5oMAj0esaS9aL9G
                      PEmhrj1lBLI91X++vW1gML1AX3Q8QwG5vREHmD0WTAA9miM6vVnKoT0as6y957y/PT1Rpj3MYBG9
                      fML8PGDT8juYICA8t9KzvQcDlD1QLiC8GLInPEC6bb0X8h29YOnwvCDpjr3yd1g9MMaXvdPYt73F
                      J7g9QM9cvD0cvD2MDMi80VqfPdmnsz2HqrA9/XzDvYD8pbo6vg29/+CtvYMbvr0eqyc91HSzPBYg
                      kr0adHu9YNhjOzANhbuedYe9estOvTgM8bzApqi90vdfPbAllDslsMc9ku4jPbLhCj1XhGu9oSuF
                      Pbv5uz1yqYW9WgrGvXFOlj0NPpi99xihPXIjdj1o55o8o9irPVVdlj0A9v454IrkO8Ayx72WBgA9
                      WdicPe6QRj0yIyg9DgyLvWhNKTyiHCA98CwUvIkxxz0zVEG9gu98PbOLtD2oDD88Xb24PSBqT72T
                      XzC9LU2EvaBigL23icE9Kg91Pey4+TzAzSi81/82vWU4xL20ttw80mVqPfKZQD28vom977zKvTzp
                      Dr3zcbu9KV6XPWSM/Dz4C729Os15PSCK77sT44A9B59WvQofXb1LYag9OTOoPfIAxL00JYu9WHUP
                      PLAe+7uD4qM9vZVGvT4MST1itEU9voM5PTvWlT06zVE9+zSaPcoXUL1yQDg9EUuKPakRwz1Ai1S9
                      FUGZPZ3eyj0okLw8pjdbPaj/lzzGog89UtRUPS0NOL26Di89gWKnPRNfvb0oyGe8FM6kvAC4Czoj
                      HaG9pHf9PNehwr0DJDG9AMovO3ZiMD1xlIo9omY7PQsCxj0jlI49FwuXPUdRuT3xeIA9yK7wvER6
                      zTxCzC49inZPvXhAtjxQTOo70HGfvSCWj72kbPg8l9shvctDoT06VzA9UP9APFMXX71wXje8PFiB
                      vZ0AxL2ewkU90Eeou1ZZFD2k6Ym9QMwyvQD3czorpMm9oCRovSSnA71OB309TIXVvEH8mz06N5y9
                      QLMQPJezvz3Hh7Y9PMsPvTrfZj2uxqW9oC3YO2jVO7x4n8C9FVeCPQBTSjvYgfa8CQS8PbjSw7zQ
                      fSq92FGqvRDWeb09krs9TpsuPQDrX7wu40g9JzF3vULuJT3+4qa9JSGRPWguSTwGmEc9wqkxPRjo
                      CrxDBJI9wQGQPcZORD2YTI88F18dvWaHEb3JIrg9k8Zkvdq9Uz1p57s9oLr0vAIpSz0vGbe9wwfJ
                      vdgpc7zFFom9wAJpPCVHp71HzpA9lmQUvSHIrD2IRJq9CTaCPQC8cDvyIC89Fm5DPRT42rw6pge9
                      NObRvFi6FjwW02Q9hG2HvWz7obzQbRm8tnAvPdKSUT3I1LG9jcCXvZ2Js71xPrc9L+OvPQCS8rvg
                      pdW7gAPkOt2gwL3JvpI9gr8PPQCTKDqwqa670BG/u5W3mz2AusG7ohibvRLeYz1zlcA97CvwvPWv
                      xL3opL+9E0vJPXbdq73nkIs9AOR6ufLaoL2o68y8MExXPIKIUT2ChY692G8BPMD7yb32eRi92hrJ
                      vS5OWz2kX4i9iKKOvTUyxr0/ZcA9AWeKPduenj0TJzq9s/RQvUxXnzyFF509I/i3vfToybxQZBC8
                      ekcuPVD4wzv6HQG9TsuJvVA1Yby9HR69PsxAPUyRnTwy9LW9avULvdDd4zvQ3cK7Z+u4PTOxer29
                      yI09jeKvvdBFLrw0rMO8Pf1tvVBETb0Sbgc9ED15PMVGqz1sLLW8aEgyvIe2pD00rri8YMKRu/qP
                      rL3glxG9oKY5uzxY/TxHd3i9agSivRPXsb2KvC290jW5vdAnVTztw0u9BvEYvYfnbr0048e8SlNT
                      PSiBnTygixe9WMmcPNiHZLyJLcc9ls0iPVTxqTz4j8M8EDpNPJhimzzbFMu9n92VPdggQrxeQW49
                      2CuOvF3MvL1YRbq9Ys4YPViBnrxk9A69TRtVvYADUr0U48k80PnCvQQTGb39P4c9fNbgPH0EXb1d
                      Rmm9dmASPdjHmbxBJME9LYS0Pfkrmj1+0Iu9bSW+vWcRHL2SRj4923GbvaA/oruA0ve71f+7PVTj
                      u7wt8cG9k688vfo/P70Aa3w8esgkvW7iPz2YW+e8Ldd1vboLkL1eDR49KNCPvL3Vkb1IL6C8AElV
                      O39At73stLS8zRWvPXLcpL23rHK9qvfAvaJ4tL0p/pY9eQO3PVh0jr03DiG9ioenvSCS37uOkJy9
                      wH+wPB/elD1SVAU9KpggPYQB4jwp9sE9ocaiPSGSkz3/NZs9JmOEvSxmh7wS7D899cK5vZV/sL0j
                      4Me9DBWnvEBgaDsgFuu7Iu5ePcQi3Tx6Fi69QIV1u4vspz0A4Ni6ve6TPUrDwL3YlYy8GSzDPXpT
                      dD0AMnC7LWORvVd+xb3QxYu9x2tEvW87xD23yVS96JGBvHZ3Vj2LH4s9bSamPefYgT0Oyyw9KG+p
                      POACobzCwGo9hggWPQBseTp7OsC9QoBaPbtnub1sWhG9ovQNPfISr70b48k9Z7tdvc93yr2KLQE9
                      EFxTPM81x71YJLE8cFwnPDAJ+jusJ4O9zDrGPED0FLtpMqA9kGsDPKz/+7xya8W9AIQdub7+az2A
                      PZy9iarCPcyM77yoToS9eqE3PebJFr1v2ra91KfbvFL+wb0A8om9f5bEvfZdKj1gxEG7Q0Z0vQlO
                      zD3Cu1Q9cJ2SvUM9HL24p5S9nV/GvTKvWD3Q5Z29dugMPcMza71VGIe9UpeevfZKSz32rko9EHA8
                      vAvjmz2eLUI9IqCEvdvDqb1g/JG76U2pPQv1rz3dHIK9ZTCYvbQLp7xQY6A7rAG1vGYkYD3O8Fc9
                      Wq+2vcDHHTxojao8E7QyvZj5mTwMTIq8bUF+vSANybzDD2C9ANYpvaP6Pr1gYhM7upF9PcirqrzU
                      0AK9VYmkvZZ3PT0lJpY9TX6vPXiQi70KFgy9+JHnvNUrnL1fO7m9QP+yvZRB1ryqSRy9FKWQPLpF
                      eD2Dp449/umLvaZ+Fb126Xo9kMNBvQH7sD0Atu87rS5AvUdkqD2AUga8Uuasvd1TnL1QLTw8ETKt
                      PeZ4o72NMbk9DQKAvSoOpb0+eDg9GLSJPDQ9u7wrJpI9hm9JPfjntrys3c48SNKtvOHfhz0CYiw9
                      GTuqPdEnqD3iEBs9+tUAPajbBLzaRXU92JmtvLA8jbuo5DS8f6WmPXgbsL169xM9DGWBPDPQcb12
                      T309sN8jvO9exD19W2q9Lam4PZeoZr1KaG69M6YZveI0vr3gRYa8qB0EPMDykTw24DA9An4LPUFU
                      mT3yqXU9TPbNvOejvr3UeAm9Vy+9vbPlWr1YBwY8mIuNvVTs2ryXYCO92PvuvJSFg70dE1u9MJnF
                      OydMwb0p66w9r5SzPY5EUT3oZcq9MA9GvY0sQr3N9lW94MqYPBE6tj2SGD49uhi5vSo6ar1rib69
                      /a6nPYURkT1jRrE9cKScvZ0kc720f4m9cp95Pe/9uL1gRfK8AL14OsDkdjwisCc9yOiQvezoCL1n
                      jDK9LbyPPXcMML1jQJG9SNupvHpVWL0YSde86PRCvNTxiDwAo5K8GAmDvK/7sj0GUBK9cPabvZIL
                      oL1ABjU7wCh9PKaESj3Q7cU7gLxlPA34QL3RaYk9SrV7PeCvkLsgPsI7065gvcjcvrzApNE6JUWp
                      veMFoj2KqHy9aTiIPUUokb2a0YG91wRovaF4qz3A0jA7iot1vQO+ur0Qq2085+S+PRZXUT3IOJe9
                      PZx7va32bL2UO5U8tITKPPL1mb1Cu0E9APdUOzdgtj2gvL47XEoVvfKYDj0IFLO9mpcPPfGojj0Z
                      A5I9s7LMveJCEj0FW4S9oIzKu49dqj0HnVy9lBHbvMy1hL2Aq8u80lEkPSiHuTw9+We9n53DvTTu
                      yzyYIW+8RE/tPDGDwT1q/zM98Dx2POduqD2HIGa9L3PHvRThu7wAItS8h/t8vQomsL0V3Is9PtcP
                      PRlvoD16SDa9dNT7PEeKxz1I5Le96B+pPD9/hz2Ug/c8wGjBOn2XxT1OVE095vc/PQNbVL2IQpO8
                      lrsbPU0Sgz1YDj68kp5dPbQHjrxoYLg8AHaOvQiGwby+q3U9U35DvWCNQDvj7Hy9rLSoPDdgK73j
                      /Wm9HwqRPXXZoT0AAEA1yza1PWBv3Du+bIS98utaPbNTnL3y4Xo9ANjWuRxL3DxHVcs98/FivcwF
                      6DzIDa+9WRKxPWiTPTy0/bU8lS6JPUrfPj09NMC9YXjJPdCSbr2Y2oy9Qe2SPV5GED1b2pY9cNk5
                      vHoIfD2WJBW9uKHHvFsSwL34SbS8/zaNPWhpx7yQaCy9F9m2vcYlYj1Cbls9o0SRPWBsLrsR94U9
                      za7HvTPTjr3ClyY9iZ+uPX45eD2eYxg9vMcJvYFZyD00uNM8wgtiPegxpTzKwz49B4ytPdBcDr0m
                      ZCg9s6l9vR8CkD3MPBK9ccaQPQIxkL0odXA8WOc8PDBUWTyASvq7YJU6u6wn/bx6ImW9GBpuPJT/
                      uTz3EnG9jhwcPXIOQj2zA2S908YlvUt7or3MGOA8k1NEvQBoRbjQg329vpAuPSBHw7vnsbG9DrQY
                      PSUFsj2Ebw296dSlPeePy713Wh69wtU6PSRv0TxptaQ9AFIMPOryRL1lgso9g9OpPTqJjb0s7di8
                      0ISnvbEGsj0Lw6I9x8aNPar6L72C0Fc9bEjEPC/Cyz36a2q9qoqsvZhJMzzXHSa9SrK1vWK9TT0B
                      tLA9QJyuPIy/gr0xD6s9AHOVuZ+5gD006ge9h3RAvb6XbT3t0Sa9qAvCPIAZ4LtKNgw9ouhNPTdP
                      KL1ShGM9UGN7vHaDk73RvIw9WzeevUTtiL1Q5yC8hDQCvZ9wvj3yfDc9ilccvTBwpL3RM5E9ZFzb
                      PDe9I739Unu9jTi3PaiBy7xSYXw9d8S0PeXXtr0An4k83sBhPVBtB70A1tW7uzmxPf2NOr2zerW9
                      Lzy6vQIwYz1yL1w9ipayvXmhyT2oBEy8Sn4yPTY2BD1ylSw9OKW7PNjXsbyANw88DJHzvO10Qb0+
                      uJS9okS8vZ73q73YALU8mh6MvYlKvz0F1pU9m5CBPS+Poj3yh3U9AHh8O9H3tT0nUK29IGJAve5c
                      Az3d98W9icqBPXaUUz0otYy8vsIwPUcRkT2waLy7PZWAvWoeF73nd8W9AD7Uuq09jr37L7s9y0+3
                      PeBEkTxGXjI9cJwAvBQrprxatlA9ecfFPWpPKL2gWDK96OmHPJKlfj1AQ+A6whk5PZ6KGz0ITvK8
                      UPu4vWLuTT1U9PY80ObBO4IaWj004N684ibMvcDiQb1wxiW87p9xPeDVOb32ITQ9FBv3PDT7mTxQ
                      mYQ7sA6lO+qNXj3SHjU9ccfLPZuSqr0S03Y9AL6Vur2Rxb0HpXK9wk5cPTAcurtJMLw9YU+8Pbow
                      F70jsim9ih0YvUeQiz26hYi9RJ7xPDpCCL19LyS9BjtdPeA80Ts6I7K9ANvYu9B9wL15vMI9fHLw
                      PFDVm71L1ca9u6XFvaodbT2XSre9EwOKPZSz2Lx28xa9YtwHPbQYsrwnbHW9ZAviPPmxij0ANky9
                      eMP9vCDEa72aIMi9oOeMvGT72DwAEDA4EB8UPNsLgj2PR8k9om54PaMhsz1Qh487+HCOPGdbwT0g
                      Jlm9+uIYvb9IlD1dnZI9k8yLPfUNgT1osQy86OtyvNP0Mb3P/rg9vZmIvcCAsTwwQ7A7V66uPXKB
                      sr2kgwy9iwujvcAQ7joKsMi9uf3LPb5/jb2PKL294868vbQVgbzwc028oL8fvRasmL2PIZE9R4Ko
                      Pcs0ur0NO8W9jo6KvRqosr0pTYA9dmJEPdBSC7zbfog9u4K2vZhJx70j51y9sXaFPdy48zwFZb+9
                      ydeKPW6UBz1h2Is9U12SPXQLnTwA5Te6LcK+vSWbt72qeI29FbqnPa0Ixr1RoMs9oEyXPJJuVD25
                      TLo907DHvfA5B73GWF09deucPdIwDz0g9uO7KDC3PIDbCLzVCqg9PT5wvW3OlT1ll4K9Yw6UPXFL
                      vz2jRce9pd3KveBRtbuL5Zm9rXxBvYqOUT2eh4q9lDnevFiYJTwaxks9TFjEPCFHwD0oGj08iCCd
                      vcMQpz1TGYc9KPGxPE/ehz1uXFU9zHTOPAGcuj3wlB+96h+yvQqReb1SxBI98nQzPUg8uDyA8dk6
                      orZYPZWjqj0UBZm8IiiwveWOlj2zESm9uqbJvQGjzD1y01A9EEgIvTw5Ar14vY68QIWMPNgw/7zA
                      3CE8ANiRu8qyib0tfSm9AKvGu+hJwb0x67Y9ABzzOgqQYj04+Lg8Eh5JPTinwLwOxDQ91IeWPKM3
                      mr2U/K08wF56u3VSkz21Z6c9yEfGvEBmZDvAEE47IZqPPSuzwj27Jcm960m1PfU+rL2jzce91CmI
                      vRmPhj3YWic8lMbIvH5kg71lqpy9oJvxu1R2mbzOz5W9GvwEPS4PUj0MGJA8SaqzPXr7fz3ZOss9
                      iGufPCxG6DwXay+9wON7PNPZqr0ZwJE9q6TAPZwegr2r4Ls9gYCBPSBIhTxB+Mo94hsjPeOvXb22
                      FgG9AKCLuphXuTyuTjY9fN7NPL1mlr0C2389vj2avTWQiD1AAHW8UA5MvdBGKbzunYa9uDirPONR
                      yb20Ya+8QiU7Pak/hj2fErq9KIYrvH7FiL16bTi9KJ0BvGqrMD08y+k8YpUfPXUIp72BD7A9Xu57
                      PSAjRr1MqMQ8cKxwvEZ8CL09s4Q9QeOCPZ2kNb2he5U98nszPZ9lvz0Nq4k9muN8vT5dhr2d+DK9
                      ML8mvdmMqT3ge1G9whaJvZKAVD2Px6I9KzGuPd0Dyz3w2KG9i7GqvTkAtz3g/tw7HqZ7PeBKxbwN
                      wrU9k+TFPbDYPDywBt47FNvqPNLvr71UsIK9dZPEPQCB5DsAIUI8dIXovDJUMz1ACB27gE6PvSDp
                      K73yMY29k0ZdvYBclDzF67e92QvAPZTOg7ydDqG9ff4cvQxipjwhNMo9ulNkvVeLhj0YGa+8hDPl
                      PJiRN7xovIQ8SGrEvWDY7bsP7Mq9YFDJu41HZ72sv4a8dOvdPClXvD0oNKO8CO7OvGayib1svp68
                      FPgJvTkOxT1nSjG9vfSQvS3Wkz0plcE9EwVJvaJ4bj2IKKG8kULBPRvbxT1NOK29sOGMvcgslr0y
                      CBM9D/WaPSBy3bsNxoK96KhOvMHlnz0DMUW9APUbOvr1A72CV0I9SNnGvNgaorwUaaS8dDHnPBS5
                      vzzQ7DQ8lr9YPezppjyix8y9NVqHPcrYaD2ArW48Q6BBvXe1Rb01x5g9vduUPQf2G73LLY29+L29
                      vP0Gwj0l46e92fOqPVHCrj3KNC495n6nvd4HOT3IS4O9l2C4vVocOT0+BKm9MeeaPSWNv70JJKA9
                      sB46PHNXuD3/Z7S9A/p6vVBxl7352a89QlBrPddUjz3yFZG9Vz4ivXB2fbwdri29+DiovQBiLr1l
                      XKI93TiTPT0jgL2g1qg7jYs1vUx5pbyAal28h4pkvabMCD3cUxm9UgE5PUOiLL3YAlk8QH+BPOLR
                      NT3MDIA8XRusvSjulL05Uqo9yA/QvCdqzL19s609GGGMvIWBk71AWlo8YSWKPQeKTr29PzG9y5ie
                      vSz4+DzgIlC9AP4aPCbMCT305o684IGAvEusqz1ZorE9ZiZVPWRiib3KHkC9wwKxPbB3Uzx302O9
                      GLPCvDXoyj3C7ww9GqedvbzAhb3Qy6y9UF5TveP5rr3oMva8QCqIvJd/Yr0Du1O9PaioPc2cnD0a
                      mUw90e7EPZaPQD2qRDe9GfiIPZKEh72LI7k9J/JuvRUVmT1AyPK8N45YvSiSX7zYyiy8HSTKvYv/
                      nL265ZS91iJHPUAh4roy0EU9kJURvb0NWb03TUC96+SzPRo+Cz2gUY69EsBpPUOCsL26+Vw9OEW0
                      vBI1tr3i6349i6apvW3VOr1JF4s9qKS5PAMmeb0Id8a8GFjFvKIDIT19aJE9sMQ9vQm7lT07HKo9
                      77G9PSz1xbzQjtM70DCNu+DpZr1YTQc8gfuCPRkYhz1IZ7Q8DcSNPRjHeTwc9s88yv4TPWQa8Dxk
                      bou94xiwvSBBqzvSUHQ9BWqOPbCkOjxOzoC9wBN9PA01mj0sc6W8olsWPT62qr18WuE8GrqBvfh2
                      hDzrucK9GjI2PbCL27vjBlq93o1TPSXfgT0OVyY94BCDPMbUqL04cpa85JoJvSoOSb2w4ji8/AHt
                      PNiSw73q4WS9f87JvVMDuz07Zra94N3iu5fViz36KxU99gpxPTZfET0xeJA9aTaoPWuMxr1QQU29
                      kr54PWBHyb2Yvcg8QNANvPLrk734KMe8JMjwPE5Ln735a6M9kusOPXhdtDzE0Oo8emaGvbEQyD0y
                      Eai9Ldg2vWDfMr2oksS9AChYOBWhtz2ATae7k9MdvVIzFD123oy9UM3MO9j7IDyMhqK857uSPT6i
                      m70DDTG9oHm4vZfwxD1IA8i8MFzjO+yMtjw0xMI82CGTvJ6nhL1WOgu98HJvvFb9Mz1SLsu9XPcW
                      vbvJkT3DAWe9twA6vSAWgzuAGvW6w+tUvcCWPbxgosM76sIovfjeuzzMP6i87Z7KvUBeSTtTuj+9
                      HaNPvQ89tD3qtBi9q+XIvVZCLj0M5NY8R2RkvWSR3zxr5bY99ssOvdA9nzvIj7Q89iiPvSeXZ73W
                      uoC9aFY+vPihr7wDgWC9yGXCPOyB+DxXbJw93KDuPCp/A7153Ic9pd+PvduzlD2Q7X+9CYCnPc0C
                      kD3aYjs9QMHJutiImjziYFQ9WKDAPB7NTj01pKG9WGJxvJ00nL0n64o9jjODvTB23rtorpG8fb2b
                      vQCiijnElBW9DrhkPYAfY733LlO9KFy1vIOjPL2wp9a740tOvQJJUz1k1Ow8OnEYvawktDzd5bM9
                      LGjoPN/bgj0iSQw9Jr9rPW2DsL3m7FY9Kc6yPSRd9zwByrU9lm2AvbiawL0qhH69kqMZPYGRoT0w
                      ylc8o8YqvS2apj2OAms9woQlPdDKVDxYfsy9Ut9GPfR1tzwZxZI9mOAYvOo1Nr1mj1Q9GG1dPAcF
                      vD1JoYQ9CiFgPeKLKz0l5Jw9yBudvELwQD29fsY9U4RFvaBFdr1+Rl09rehGvdTbrryTvYU9LafB
                      vY1jrj2w0a47z66APW7iLz0+WAs9aDOpvc5spr3pxq09fJv3PCrHCz1mrxG90OCUvUT92DxgK3q7
                      AA9SvaBZiDtSyEQ9Ya+XPVhzYryA2YW7+s8vvbP4rj18Doe9oASMvNJyfj0NlU69w6jBvVaxKD01
                      MpI97RM8vQIwNj2W7Zq9CPbGvGgsPTygBcA8WS2VPRCKdzxjzK490iGrvXGInj2oxgM81/iBPZBr
                      cLygSuK7L26SPUxREr1cnPQ8wFmzPETZ7TzgdbI77QHAvZfku736ZT69it6NvZplQT0AvS66FWHF
                      PSwNnTwdri293ap0vetsnT2YhpM8oB1Ou+yN5TyW1aO94o1+PRi3nL0oVKu8cDFHPClIkT0yYCU9
                      Ld8jvQBgbbzJYoE9UEmSvQCUTL0IUua89Z+DvcocID2gt+Y7eu05PWhJBLwA7Bu5Mza9Pa5Dor3F
                      x8I9KOuQvZ2aj73iXUw9MQaWPaCL57yOzmA9ovRfPWBgXTtg3S+9bBTXPLQZrDwYFvC86DwwPFYQ
                      dj0o1Gs8mFB/vLBpr730NKQ855o9vcDkU7zp36o9J3HLPVhSsL13R7e99YmXPRrgkr2QoRe9Mhg5
                      PZAJNryzf8E9Fvc0PQAYHjzDnlq9ybWIPY8ws70ArLG9tD7pvIuauz1tu6q92JbFvSNmV71qppW9
                      onNyPb4kJz3UBqK8wLwaPM28xb1azie9zBW8vHNfiT1I9vS8g5imPU86nz15k4Q9VSqSvSb/ZT1A
                      SF+8oMFaO/8gxr15QbQ9XdWEPXYAbT3ncjq9WLojvGhJ+LzNjmm98ChkPFQe+DzA0Bi9dDv3vJG9
                      wz2Yz+G88nlqPaCYmr1N4oO90PqSvSCg7rxow4y8zEKwvMOErT3IKJe9TTaxvUDbYbs6KJ69FVGW
                      PTgfwLy76ZC9zgtOPTpbPT0cTAu9wOatuo74JD34QsM8YOKZPDpZvb2LMrm9+0PMPTU/uT16sjk9
                      vLQHvUmalD2iAzM9Z0utPTjDvLzz/sY9jwywPQlioj33xVy9sDFRPGISZz2KBhg9h8C+vc97pD0/
                      h5s9+USePeDvjb2ejqO9cBAEvQpvxL2QCms8kHxOPMBOarzPaLo9MTenPXqCHr19tpu9RTmvvf1w
                      vr25Wrs9IBQHvdLVaz3qiiE9gRCdPQ27Qr3XaLY9TnarvSA/j7wowa08NDGhvL4Qgr0tW6Y9XQ8/
                      vRRM97wC4IK9gJKEvUzJ5LzNqb69B9xZvcCmzTrEMfw80u58PTWXxL2geui8sC4KveYikr1FDLg9
                      Lf5QvatKiT12iZC9mPmtPFi2pb275o+9dIuNvLOntL28soO9qDWHvaj8SDz5jbs9rOq+vPK6ET1y
                      aFQ9TMKSvKEMxT0SvGk9LTIwvTpxlb1ghJm7UT63PckqgT2irbi9gKXKvT70Gz1Y+B68EPEsvOig
                      dzy6ww89+IGVPID7tTsuuHI9sSKdPWSIhr3Pb7U9bPbAPDSN37xje6m930mEPXRyl7xIRqE80I4z
                      vOuwxz3tEMS9wkJ3PXZnHj2oy0a8s4movUrPKz3CJnA9SmYgvYL9MT36MGw9TCToPAQeDr1gLpQ7
                      0E1ivVaaZD2yNB098ziRvZAbKL3nSpM96NRFPNR9hTwOKiQ9MijEvewXsryXOsS9AEFnO4Djnbyz
                      I3q9APuHOZjxRjwgtsq7xnVaPaCR6DvKv0y9Bv4pPcJ8j72tMZu9p8bIPfOvfL3DZiC90n8vPZcD
                      JL31m569ErArPWCTNb1muZ29UFuXuzDsZL2wpJa9bCeLPAEXzD27WaC9NulAPRYREb1bia29kHhv
                      vGDsGL3gM6W77ba6PfWmgr0omWc8eh1pvao9Xb3CVqu9VNr9vJDlTTxNJaG96PU+PN0rtL3VWsm9
                      XGX+PPBIXr2cr908HSKaPQj4jr1gAAK9g9qvvYwFu7y9aam9hDntPCvRnD3i9nI90N/TO1x7hr0K
                      Zp69CK7HvAAoKL1UjMy8ssVxPUlzvj2abBG9UIkpPKJhZz1AJwC9IJ64vBlrrz1btpi9SiSevRBi
                      eL34lIY86o48vantiz1Vh4G9K4rEPfCIIbxqxq+9ACAOOpstyL2Di7896wjHvYATwrpbK4c9I4Vs
                      vTeQjD1O00c9wNE4vV1tXL2Q0zq9VXWsvR9+jT0HJMq9eOO9vcfiwr1Pm8q9y7rHPbcdar2yT729
                      whU4PQBmjLtCzjE9NhQEvTg8hTzZnbQ98q9bPegk9rygCCy9gCGKvIrKnL2pBJE9zL0Yvb7PHD3w
                      cDw8MCVxvICNyL2wlBS8tqwVvQB1OzqjSoE9HUGWPRMBI70Xdrm99JkRvbRKh70QXCk8oqxYPR51
                      or0QQpq9YItCvW7lbD0ifVY9sZGvPcOmlz3DWE29JnEvPQCDVbpgxQC7Tj5LPUvzwj0z4SK92JcR
                      PJ6Mp71S3CM9Obm/PQzs7rx3SHG9O4ukvQYtGb1y32Y9rnNGPYVnwD1UuKw82ndivbiz/7z+mV49
                      GXefPYwBzjySPSI9J5xYvR9lrD3a5Rc9WET0vLBV5TsY9Ne8OKK8vCNYNb0YyTk8EEkVPG38iL0A
                      83e7uMO0PCjtir0MNum8W5m/PUOKtb0j20W9t/mMPe7Tfz3j1pi9wNIQvV22PL1a3ZG9XHkDvfTW
                      lzwgw4G79d2tvSAXEr1W+wa9cJJGvNiziLy6Nng9wNBHPMB2mjxG8QU9aCYxvOBY/bwMiY88WnY9
                      PX7rqL2TTIU9gg2zveBIib3E1/48C8GIPbk0qj2/R7A92EkhPHoiar0u+oK9xmqovdhpa7yjocS9
                      6cekPbIxyr1FBaa9bqMTPYwXmLz99rw9sBsxPJf4wT2nzCm9PSYhvXTg6zyNML69AHsmul/uwL3d
                      AME9bZGMPcD4Y7tyzFA9Z9ZKvUHBxD2SswY9oDZPva+toz1uQBQ9V+tXvYpnRL1aA3M958XJvV4O
                      Sj2hZqc91GKEvfShhr07CaG94rqRvYfTJL1GXyA9c0t1vVgvk7zixgs9EGZsvYCDwbraIam9QDCc
                      PGUJyj3+ODw9lDDZvOZqAr33tZM9/xOsPeAeGb1H37K97IHqvJrwJz21t7K9cNOQvSUyvT1Nr8C9
                      OmW6vewM/LwSDKa9JoApPVhrQDwyRKa96MhPvFCGX7zkKBW99nQGPU5Ln73qVBi91PO2PIvwvb0k
                      mvk8iwKsvcSdBr39qcM9AIeQPKA7R70jo529DeNivdPSYb0yPGw9qPAlPMpqMj3FuMK9cL5hvXqG
                      wb10Rce80M2Bu8B1Sb3A/2k718N1vS6mTD2z7Yk9i/2YPRh9ezzAh047JFsSvc2Psb3XG7s9KCIu
                      vM38Mb0AEeo7sHbruxovYb0OwxY9Ue63PWb2Pj1Ur9K81/e7vYp+Vb0qqce9VuZaPf9KzD227Eg9
                      gHuSPGt/tj1yaGE94DyUO2GUhT2Ia9O8c09mvV29vL3SU5C9YOEHO8CfUrxcC/88AAq3Ogoymb1T
                      fmW94GujPIxZ2rxMiKc8h5+iPSrbMD1RV6g9gY2SPSgplzzQcw+84zezPcBsdLt5Sa09FNmnPHxh
                      8DyU9JQ8Y8SoPXQhwbw3VJ49A+8svWx0jbyRyLE9kmZzPdgvor0sG9g8dL+oPOqkXT2se6i8YG35
                      O9gR9rzwdK29IKyivS7ZCj0AIPS6iqsAPSpiCD2Uofc86vkMvdeqx71OsxU9UKErPFXxlb1OsRs9
                      GIqgvVZzRD2Q6RQ8X8qtPTDLhTso8Ls8TTtYvaCQzrsEU/g8r8KnPcXSij1QllK80/OjPZgkhL2w
                      pii8+KqpPOrWRD2A9p68IBKzO6AgKL3IPaA8p4alPZ3+Nr0EpOU8aE6hPA14Tr32IR89GB19vPrY
                      ub1WMyQ9gmLKveJLaD2Acqa7huUKvWBT9LuKC2G94K/zO+3IN71W6mA9KGz+vIDCIzwR3r09MBZu
                      vZsgkD3Q0o294MfLu32sfL1C5UM9qJdCvODOIr20RIi9LD6FvKXfvz0TzCK9kNNXvMDJhbxPLMm9
                      UHjzOwEumz2ugEQ96EbMvfYSPj14CKa8gsIcPUUxnb2Mwdo8gARmvP6Qgr1nn7G9EuOUvXQMzLys
                      Cpa8rw22PWl0xj0ArvG8JtsvPfLTlL2gFGm92FaKPIIknb2C/hI9JCLgPEDyuDzrUJg9Da8jvRrH
                      gL26Jxu9F9ZnvUrfBb0Qunu9OEaKPHjvhrySXaS9aBIuPNgE4rxtAnW9ANCgOXa3UD1G1ng9LUpo
                      vcwoq7yB5MQ9ejQVPYC7KzwSlR89IAOOPBowDb2sCsa8uG3JvOF2qj2y0bW9QrsFPUg6p70A1zc7
                      DYqlvYiYvr2dtZ+9YxFkvapAm70gIvO7fk6fvQDDZTrAx0O8Lr11PXDzM72AVlE82Ly+PJ4DeT21
                      WZ69SlUjPRGynD1KZsq99kyOveWRiT08YQ69ZeuovdCvNLxg5Ds7WAiOPPE9wj1oMmO8ttSJvQan
                      jb2n2ay9ai1nPZV8j73tNaQ9mvQwPVAHpjug+oS8mFNzvBSYrrz05Jo89JWXvHQb4bwQlYG9DveV
                      vdNauz3UttK8lJoWvZbWMz3QSDe9x54evRmliz3rSby9zRxRvUdqXr1Q4aO7KRyNPc9lmz0396+9
                      wE9BPIDhNjpNz2S91OrsPIy/8Lyze2i9ZW20vZ3lyb1Qik+9FWiiPYF2vT33Krc9eMe1vSD3szxi
                      RAE9rP6MvKgyq7wvEZk94PzAvXC8c7yWxWQ9Ez3IvQDNj7zwhIa96WXDPT68MT3AS7U86yCmvfaN
                      Xz1yzW892YOCPWtRkb2sJZm8PncfPYChnzwT6zm9+rcAPd0jM71AYWU7h7W/veNsJ70nilq90rUw
                      PSrOP72Aj/c7iGaGvVo0Cr2wLXG8vQ2wPbuYhD3CcBw91XCnPYCPzLsyCkE90vYmPZFWiz37Aa69
                      4wh2vZWorb0tt629Dl5zPWLcaT0gCYK93IHmPFIeUz2scsA8yICxvFTup7x1wa29al1ovWZQYD32
                      dgE9UCiYvVBTcLxNn4u96lB2vRhpWbww0y69kGF6vIghhDxtn2O9W5SqPbCYs72hI589YAryvLC4
                      77ubO5i9Tbi1vdJDjb26Wko99itjPWh5kzxKJik9pIARvXSRzzwYpWg8k5zJPU4BJD2P2Jw9kciw
                      PQO9kL0g+5C9Kil8vYzmyLy4nYK89XS0PU+dpT3bU5u9cGkWvZhdbDwUDrK8m2S/vQA67rlnzGy9
                      jN7KPJiujrzA+G67aXuSPUyQozwKtBu9AyCuvW3UnT0wWIM7QC+yvUISPj3cGxm922iWvcCLgb0m
                      JU49qP6BPNqCOr1GH2w9mz+ePXKDBD1nK5k9ksDBvfm8xz1Nt3e9psVuPWYwB73fu8i9H2WSPQpV
                      Or0wDvy7YnB0PUqJH73wOgS80gixve12lr1GWwk9I9WYPWBtx7to6Ts8/u9kPZJ4Wj1QkYi9QIWa
                      vBD4w70gZcK7Sz+aPYCFyzqyu2Y9c/onvWKUMD2MnpI8LUumvZGImz3Unqk8ANiqugB35bwnnrI9
                      GwzGPUpKHb0QVae90DTRu5/0sD3Qov27t6h2vawYhzw3ioA9AeLJPQDBXLyAC6C8mBGVvCoOeT3J
                      Gsk9UbylPW1uf70dUhy9tfiUPTBXQb1Gp5e9vp4zPdJdgr093F69HoeTvQmqsz1KOAC937vDPSD0
                      ljxgC0I76J3MvO9Ilj1Zja896SmfPeeTxr3j+D69cHp7PODh2btcKhe9Ko1WPfp9vb0gmIU84Mqc
                      vMCqbDzorXS8kB82vEBEQrsSvpG96voGPeU5hL10J728GDrFPLAHSrxPZYc9FG7pvGudmj0ZxrQ9
                      e+yqPbCZvTswj947P8LAPW37vz0F55c9tvqEvRAwDLywckC8qlHGvfzji73OREc9RybDvYBbxr28
                      2Ok8gcOIPRqwP737Aac9B4ZQveXRhL0c/Yi9kEOyvRh+Njxe1oi9WzaQvfjJ9LxmL3s97Ij8PIA0
                      mLy4ZMs8iC3EvU3rh70M9wK94jlQPSCCxjsKRGG9cl2pvXCdYzxdJGy9sPZQvNDEkruxQME9c7us
                      vQBl+zkg8ZQ8rqNOPVA+ar2YOeK8CrxbvWPqnL0QLxS9Lb+XPWA3DruHMJE90b2FPaizobxWowa9
                      7dV8vTcJZb0MoIu9FLKcPIp0D727eaI9P+2mPdbJEL3sQPK8dU6ePfXzpT3nViq9j0S/vb7HJD1b
                      58q9aSKRPZLhsb1CnUg9uwKSvTOiWr2TJ3q9tiOrvcDXUTxNzaw9wgAmPYZhGb2oKcM8ELR3PFCD
                      jjtG2mQ9kK9pvV6CrL3l3qc96kUnPa6Tfj0YTYe9/S1evfX7ub2bY7i91/9AvbQziTxQ9qI7NL7t
                      PJXrmD39pqY9wA1LO63yiD1n45M9DOGHPEBjSL2Qwh08ShVJPSesPr2AuAe8iEX+vNGKlj0Hcok9
                      fJ/zPIbjqL3PU7g9x9huvXs+uD1n5cu9YB/FvL5EVj0DtXO9UCoAvFWHuD1YW469f9KOPZKejb07
                      tbw9HS1zvUuqgj1ycpO9aDiyPMDUbLv4t408DzKFPdJDKj3dd2e9YCl/u6oPOr2z4Ea9WL1jvPTC
                      Fb0dG5A96Ji0PCjVaTxoXyW8Ilc6PXevcb3xAMQ9eiRYParKsb2/IYI9rJaGvV+wsD1tZUi9c9Sz
                      PeHzoT1zcJ09WpdvvVCwKL1Z7ao9wvh/PVXdiT2igSw9SKDBvaAYyL2m4xA9MJjJu2OIhD2A8nc6
                      2F9DPKDGKTtGJgw9LZ6NPRFLnz205Yc8AACVt1hlB7xYtoi9wF2lvZV1gT23QrW9YPdLu/Bibbyo
                      MsE8Cw6APQ7PLD1RwJI9mE8yvF0Rn70CtYm9AG6lvF2jnr0ytH49SWiFPRH2wz0wydU7WwjMPYKD
                      Lz0aTh+9F9w/vUaYBj045La9SWGtPWqgC715EMk9Mx16vfRx/Lzd2cq9/FLSPCcrH71eyyI97B2W
                      vOoglL2QdVq9myLJPQX7i73W9E09T46RPaHwrj3QYKG7YO12OwJcND0OkCk9yg+BvcI/ND3gpYe9
                      2PTnvLZ9E72Tb6G9NnIRPaCdYTu15Zi9g9PAPYYmUT1v/7Y9q07GPfz5Db0HKRy9GhW9vRD9NDxk
                      I+M8prR1PbrfLz1BPaQ9IODSvKobJr2mniE9EAQsvQ48dj1ugx89/fZ9vTvHuD0Csmo9HjkqPYCc
                      4jvAOxy7IJG9vO2bkr0AKOs5cxwzve4JIz0a3w89NjxZPXj9yzz5cYA9VNvPvExIwjwYFdS8PU2i
                      vYVCyr30DYU80ArTO7chbr1HhpE9AFtSPP0qiD2wdMW9U68qvWUKsr3MV648RAPTPJZ2CD324lE9
                      Sj46PfT5tjzIzdS8SjyKvSxk2bxjmyu9JbSpvaWUnj0AGG+78HtTPEC7pzwRoZQ91naDvdeSSr16
                      jL+9txBTvSXTgD0sv6I89UyyvfTr3jytWI+9atFXPbBS3TtATiq90tmFvVJlOz161oO95R+avTA9
                      TjwnjJ49vSkzvZ7Aj72gN8W9irYTvVLAaT0K5rG9EeCIPWJnVj2sEO48ECFTvYhahL2qE2s98uAr
                      PZJtHT2HFr490zw1vXk6vD1fqrc9a4eFPTEZmD2Xdly99ATRPJe9tD3w8Me9oDbCu4x3/7yDP8s9
                      MxWVvZi/nb0FYZM9aAQkPNYNST06DiU9ZwGKPVKQCD2Qxy48AK70u4S91jxDncg9MJxxvdX7h72g
                      Dh694jZePUppeb2EuvQ8KRqnPfbbIj0pda89edqjPffkSr1GSHA9Kb+rPSlayD0rELw9hGnPPFN0
                      Z70fXpU94hZRPWyMqLzw4zS85dCnvSAQUL3wnWy8ILDDPFQn9rwqARu9ShWevbkvkT3o3sS9nm0v
                      PaBFnDzwB7q9bO+Jvc2oqL1lzpO9kTCaPVjpyTzgRbM8kPQevBjP8LwDLL29FzGkPd2Jwz0aEHQ9
                      YBO2O+MgT73ALJQ86gofPbb/Gz03dma945pdvQMinr31w7Q9xgF9PXdbvD29dFm9QKMnO8rYib3M
                      QqK8rYi3ve5PXD1Jzqg9BuhtPQwxpDwibDI94Gm2vRgCpzwzE0+94uQtPabXqL3xop49hqEoPY6M
                      Lj1gudW7El2vveF/lz2o7XA8WMN5vAoyfD2tJTe9ZEDfPODb0byDsqw9IAb6Ozn1wz00m6y8cvaa
                      vWqbSz2wYTg8cMEVvHMTub2dDKk9RGffPPVRlr3D57a9TXrEvUDzHby37XG9OVSyPaiLhzy2exG9
                      hIzlPIEjnj3QdAc8AILxu06sUT3q1lA9puClvf4RRT0QjLy9DGfDPPM/Ib0LlMg9BNiJvTlDxz2k
                      BOs8MI3cO4bxBD2Aiis8YwamvfYqHT0hiYQ9GGlFvP9Syz3g2Ai96O/dvFhTozzaXzm94kELPQQ+
                      2Tzrvsy9UCcDvbCM8jvsyJ+8OuuHvax88TyoEnS83I8CvcR46jxw6qG9yfTFPaZ7EL1U+Li82cG5
                      PQKCCj204Le8du4FvT3rhT0kD/Q8rt+BvTzi5jwwBWK8ZGMIvW46Az2wbSi8sAYOvfPtlb2ukDA9
                      zZd/vSiUMjwdvJY9wBS9PBRc07wyohA9OWbLPaSuib3lqrE9Wk9TPaAQeL1Sibq9yPKQvBr2Db1J
                      u6s93cmOPUpvxr1C2qS9cEJLvSqzbb0w+Vm8IGCivXX9uj2w71a8AMAdOrAdNL0CHVY9wI4Ru4Cp
                      1LtDgps9JdiivctnhD2A9jY8jCiCvFD/ujuYGim8aIE4vOIYSD0RSbs9nPgWvWrUx70KTo69pn8X
                      PUBccrvWhIK9XdavPdHwuT39dmO9lJGovJBTgr0L3bk9FF7BPA2hh73yqHA9vhsWPQCX3Ts6Gry9
                      YBuDvPGblD0Dzzm9yyW7vXpQUL2IEsC8kQWiPYCE9DrDQmG9EFYCPK1hnD0NhcO9IKHfuyOTIL24
                      1Oy8Ew+NvUzTgr1LNpS9VJIJvaBu5TsA5XG7O82wPdAbAb2aZoq9XfJ7vXORVL1EStM8LpkuPWan
                      Fz2sF+48AI3FueNpRr1o1+e81LnTPGjLob2jaEe9y5ygvVATxTvSOr2942qJPUAmMDsAVKS9Quy0
                      vXsvqL0gRus7QGBau1G6hj0LYIc9h9ofvVBihLvG+AY9p6jCPbJObz37uJ49utfCvR9iij0dQIE9
                      oB0Qu+MekT3QOSI8emRnPYCqtrveNU09NmokPcBydLxgmSC7RVi6PRhDdbxSp2M96E0zPGDaPbsA
                      k6Q7ZRSfva6feD29k2e9cbGNPcXOqD1sueO86HlovNoNpr1hNJs9OPmpvOACPL3AS1O7gHiAu0jN
                      2byN8Ya9Rq1FPRgAabyikHk9FEDCPITQ9zwgYZQ8VB3qPCd7wr2gcuw7ajN3PWa1Lz0yCwc9N2Ck
                      PTGCtz0wUdQ74MSbO0brib1AadU61g1BPXODp70guHq93sssPf45hb1gdFW9sz2ivQ5nNT1hN6c9
                      aMTFvOHBmz3NaaK9RRnLPWm9uz1bxMs98MMFvecnS71SIUc9ksBVPf0dy73rw7m9UKc8vKp1j734
                      2N68UIXmuyAbp7tpR6U9bESjPOpvHb0CVMG9qJBcPA7xh73rgq29op5pPWwtobyo8x28n4mwvSyL
                      +LxkuNo8MuZgPY6YAz1mD1096FeRPCMgLL3Yktm8IyiaPVNVpL0dpU+9KNjRvNLZEz1mmjY9h7Y0
                      vVBilbuGaX89572DPVhGFrxJSLA9cGFVvS5Dq71IqY68E8GUPcVfoL2xKbI9QC9vO3t5nD0qTzi9
                      AFM0vUN4jz2nY8G9kVmzPViadLxg5xo7mkoZvQjtkLw0wN48RoIRPczIlrzM9rc8xz0cvcXFlD2F
                      0Lk9rXQqvbZ2Gj1tOnC9/qqQvT6jj70zxII9DSnHvcpeQb290Js9cM1vvGAVJTvMksW8abLHPfcR
                      Q71l16k9JvssPeyy07zNh649QPBxuwCq4LpyW5u9bJbpvKCeEzvKu7a9aWO1PUB9MLyCvQw9oFPC
                      vIDwOjxTUq49UtkiPdDzdjwIXLS9u4rBvQ8Muj2ie5y9FIeXPGuPqj3MZLI89FjUvIwciLxwfyu9
                      prkVvRIOgb04mKW9dr2cvZgbi70SR8y9MsNUPVdlw70voL29Esc6PerlPr3w6D+8gMi6PK26ib0o
                      NGY8aAZKPD6FiL16LxS9iAqQPOvwrT3AyoW6ANTNOIK3Gj0oiIO9NYScPTgtsrwAVh47gBQXvVoG
                      N73q5ii9zFqPPBVhqz22dDw9AJ2COd00a71wYXu9+t5EvVizWLywC/i7+gtyPdC7Tb19Hsi9DHqZ
                      vBD3Czxg6Im8/+nDPf/9x73xWKk9sK3Cu4Zzfj3Bb609oHUxu/p2n70KnGy9mupivZMrd73U4ry8
                      i1y8vXvZoj0MDoS9b0+cPVosb72W6Fk9jSOjPcnvhT0yOEk9MUCBPVcdTL1NS1y9gTifPaCJxLzj
                      n7y9uD+PvFobRL1UZM+8BvsWvTdBQb0vpa49wNZovAwdjbzQF+U7IOPlvGsut72ASY08bKH4vIBd
                      lbvzkhu9M86TPWxX8bz8LwG9wPtXuxjQZDxolkc86OcOPIfwuT1KJ289UHhUPG0Lp72oZIK8m5iT
                      vVQfrzztyZk9qPE5PJXFrD2WI6q9DQWcvX24e73qzrO9uh9vPVZCYz2YXYK8Mu9bPcNmm73AeLO6
                      sACVvUNsvj2V2I090BL8u+QE/TwXKq09AE9wO4g6lryPB7c9MyFnvSgj77xY92S8oGxfO2/ZyL2z
                      BlC9GT+yPcAka7uQXGy8PwLCvRqqTj1UQxK9l5ZPvdfvpT1U9KQ8N+hevbYAGT1h25c98qpkPUAW
                      ATuSf3s9GvMYPcRU8DyXMq69yACtvFEOsj0ZhKw92JgBPDCNEDxNfbK9JNcQvZqFeT34+sY8ZgRD
                      PWNxK71irFs92iLHvcpBHj2CAS49IMW6vcPQr72AP4C7hxCuvQOYdL0YoZY823KTvbKBy70gMpW7
                      WCiDPKaIn72Scca9pRCAvdvFyD3nnT29AAyLOs1kI73gLZk7PTK9PQAldDzs5gi9DWYcveLiQD1a
                      oRW9WqljPewPm7wAG/o5MUTKPSgxxL02WVg9la+PPcA0RLx0Mv08cox2PZ61nr3Ndo49r9q6vTbw
                      C70o7ae9Q58yvTe0bb1SxFI9QMPWujKWmr1LrYw9iJKJvQirtrxPIa69JZGRPRpeWb2yuCs9gJah
                      PIl4uz0QIyc8hzKBPTNBwz1HPru9LZVVvbZNGT14TKQ8ddOxvX47Hz1ITcm8ldSYvR70bT1aur69
                      SAW2vMD/oLwJd8Y9QN48O2A6+byyWMi9GCgFPE/giz3gwUy9Gsx9PYp3TL3h6oc9AkMLPQxbmjzn
                      6R29upobvV4eUT3tsMs9ghxUPba2Mj0yIB497YlyvXCExL0ZqL09Q6dovaYfGL1qJiy9WCkEvMx/
                      xzw0nOC8CG6/PLBRN7zV6q49FCYBve2NI73Fe5I99kEbPQJgdz1o56u9LVhpva/EkD0aAgk9TA/R
                      vChTyL3ivWo9I42kPXK0az0jV5c9Vw1yvQtJpr0trXa9YM/zO4Y2aD070Ig9IAwGvUjulbwXAMS9
                      yFG7PAAgUruaBhE92BLwvEA1obowhdU7wBKKPPE0ij2dU6492FvNvJgMyDxveMc9sPJRvZGErj05
                      VZc9kEe/vZBRYr0Ho6+9zaNSvRKlNj3zJVW9luMIPZ6bCT3+BoW9eQHFPVCbxL0wo4S9kPgUPO/3
                      sL02sS49Ly+LPUHYsz2Vxpq92Ne3PGaDMj0A0Xa7jYG3PXpKST1WCng9NpqAvcnGjT2XoZY97LO2
                      PACLYjuwUWW9na7AvTpNPL1gpMy9iT7APUGpiD0vz6w9AM86u+FOsD251oI9N4mtPZ+jv73ADNK6
                      d/uyvejgibzh4KU95ITRPKgmhTydlMs9aCN6PJIvQz29GMI9BxmNPbW6uL2w1ZO7LEWKvFI/Iz3r
                      YJw9BJ78PAD+cjsWwhO9CjJOvU1stD1GuVY9oGcMvbadbz1tio69kiIWPUA1ArxotiU8wD5JOzbT
                      kr0SfCY9rHzcvKsivb20rpy8zqmDvUBkOLyfNIY9jdszvY2Ltj0Id8C8j9aKPVWxtb1bSY091RSi
                      PbXEpb3S0xs9+sQXPbpJZr2AWFu8gstyPbcjjT1W8wy9s1pCvfBqGr3ITeO84cy6PZ3reL2Yl368
                      wJg8O2JmfD3OJQI9lwKDPYPsPb2iWMC90K1WverJwb1dWYw944QqvQJjTz1wNWa8NyqVPWWTqD16
                      MQ49jpymvTUyhb0RjIY9iwOIPaqcVb1m+6a9IK/1O+jyrDyoxsu8V/SxvYKOfz3nTS29l0SePfAx
                      HrzsVpQ8SjJivTDwYrzmqh09q3uFPZgRjTygiik71fqzPVXUuj3Jo8g9A0jAPTZ6Ez2MDIK9YNtI
                      u+A26zsckQq9uFuWvRK8fT3+uZ6931S7vapWcD0eiiI9gLqBPLopR71nda49FMmFPPPybb3dQGm9
                      33G3PcADKzx9IMQ9GvVIPZ25tT0mcDs9v4vLPVMLO729XYS9hL7jPGlcyz1gTbe82uByPRKWcD06
                      osS9HTGJvQLdfD3/gpQ9QAuAutMqqz25Mb09+C//vHoWgb0X+ne9gMXiOwpcSz3mcKu9tcS+vUBo
                      SjzA80C9BcDAvaOLW708lIu9MIXQu+pbV72kpeQ8QIwnOwuGlz0AVOI6l/+EPYCbMjzkxdw8Msdc
                      PZaGYj1GuKa9JKMXvaeasr3MhBG9FCrlvBjRy713fjm9D1GLPcDIcLwYVz28hndEPRqtWz2vhMQ9
                      gK2nutYTg71/8409AJdIvGoshr37mJ89rBLsPDp/vL3A9CE7DLTUvBI6xb3XYEu95pKlvZBudb0w
                      I1u99q4DPcAcbbuTIEK9NI61PKDitL33gY89at0wvQz3q7wv1ak94kV8Pduosz1wGzI8lkAKPWyg
                      grxjbKO9ONCjPPZmHz12yEs9YwTLPa0/Kb0ZRr09GIu9vAsInT2KjBu9B1pkvWAnZjs4LeC8zArV
                      PBRDyrxtvUi9tW+GvQBjWruow028mt8hPaJym72iBUs9m9u8vbApETwAXa+51m8FvSI7ZT1g6247
                      Qsw+PX3rVb0M9o48bDzTPIZoOT3GbQC94MoEvfe5S71fYaY945G9PejrP7yQnA+9I9FAvVCLeL2w
                      iHi9WGugvY4eDT0UGYy9atkpvTtGuz2bSsE9ALP3vNopyr2h68g9fNz/PMBvDLwV3cc93TSgvRS8
                      kDyie1k9A9uxvQDgwTiXdby9ZnYPPaCA4LsdQHm9qhQoPYAmzboQOzo8TNGgvH0aNr2dbIE9KCsf
                      vBBlWjxsF9W88cmIPeascD01hos9NF/hPOohCb34U/q8+XWHPbNzwr1zUEC96FRvvHAPFDyAq669
                      oPrMOwBsiTioeXq8AHJMOw7iPD0AbYw8c/S4PViVWry0nPC8QgMEPWMCLr290K49mugaPUyY87yB
                      F6g9+duLPQJRCT0Q8W+9AMCMuWoUf71Aad68aOykvJl6kT2KQoa9KJQfvCieBrwgB+c7XSyFPZKN
                      HD3KLq69Q86zvQDYYTyqMJm908E7vRIaaT1qbZS9gGt3vErkID0AL3W8YmsYPRm8nD3Geau9ODes
                      PBrCIz1QwRQ8+DCfPN5vhL2ZY749dSnBvQr3mb34T/68Qr+gvUfYsL0qkTm9WBZnvBlPyT0TM7K9
                      3YBevUJRbT1tY0G9uqiivQgSlTwHnqE9rn57PdmEgz2xrMw9mtGtvbFtjT0BXZc9wYWHPYAc9DuN
                      v5w9JKHyPJUekj2Q+am9++2LPVKEhb1eQ1c9H5OrPbE1lj3KD3+9qocNvdnewz1orR48AGcoPB9a
                      hD3ITMu8zYSRvfXVnb1gsYs7q5/BPdGsoz0cOuA89Jr4vKj4njzzqZC9ToUaPQjog7zMF7a8I7U0
                      vamcsD26eDA9EnOMvbYWbD3i2qe9hEnVPM55Oj0T+ZY9IBgHvdbdbz0wZdi7wRSqPcBBX7yIPPe8
                      oGEvu+t8n70WfH49FdGivVBOojt+aay9DcipvRAEIryNhS29bH3WvJudwr2ZarM9M+CCPUfVIL2w
                      3n88agNvvRh3vL1YYw28jnshPebTXT2RWJk9yIvqvPdnO71zp1O9rTiZPT37c720hdI80fyFPXi8
                      hbz0ios8MK0UvKXXlD1Ye0e8GqUDvWCg67t5vMs9HaK7PS9Jsb0QOMO9ge+EPQz4yrwrNpS9TIOe
                      vDh5y72VuI09jvIXPTMAlL1A3469HeYovbbkYT0vMY491osQPYA0SrwphsI9R6hWvSBjtDz4Xou8
                      TRJ2ve4bjb3Cwpe9Ua7FPT+Piz0AlH68zgOsvVhHiTzgwl29dvxKPcUoij1g/7U7Eih5PZrNE72p
                      v4o9sIDWuz9Wmj2wyDi9KYOMPeEbjz0FGY49tx0uvarXJ70KCFm9Ilo9PY4tSz1U7P08dNCxvBCt
                      DTxte4Q9cMF1vHZZg70gb6Q8ulEOPYDDFbzTXrY98MU+PC4+dT1N3L890BvIuzkuqD0AyUc7ECaU
                      vcpoyr0An4K7GFzTvNWdqL0ycF09i3GfPY0btz3g4aC9W/C+vSa0lb0saum8LCbjvJKzMD2aFAs9
                      YFlAvfKZVz1pMK49vQ6XPS1NLr3Wjhm9mNEWvNi7NzwuvBw9a0qOvSzHpDzN6lW9TtsZPWzhrLzK
                      owA9L5iCPTmXiz0gXZs8WMV0vBkKpj2khNA8t0kcvf3OTL3Zi7c9WsNtPcl1xj3r6ZA9oSiNPdid
                      jb2hlcQ9pruhvSTQD70q+gk9YD3Ou4Jwdj13SsC9zIavPHM6Lb2VybY9GIkTPKUivj3CISM9nlU2
                      PWv8sD2At3u9AcqfPc41HT0xj7Y9gDpLvRC1jr0pdqc9eaeAPeKAHD3whsq91P7dPDK6qb0iGxY9
                      Tw6HPaBLlbz4RIi9Rh8FPVp1MT0wo+S7WIHvvMGitj0ubE89ikeHvcpQXz2wABu8BNLnPCAaqLua
                      3mw94xZhvUYUCr1ySru9Xi2kvZDOCDzn9ju9ZKDkPAqSir3cxOg8rueFvai29byANhq88C2dvWgr
                      hLxRJYc9B/OoPdAfvL01mcW9Kt2XvUmmtj2sxAW9wN9qvaDCGLtwaWw8YClAuxBiCTyAlXc6A+y/
                      var2uL1QUzS8gAasvUAXTTxj58s9+6elvdqzh71AJp29oJdZO5Irur3yBj89OIyJPPbnlb2OaTI9
                      apOLvZt0p71AlGG7QPmMPDoRaT0UR5o8oEItvTSFk7z7L6S9QPTDPLsotD1wCnu9Ar9uPfo8AD0o
                      FMW8cKRevGGokD1U5dq8IDb0vAVRvT0S0hY9QoQHPdfExb3MlP+8IQLLPfDYQDxyWwQ9dJC7PDpB
                      NT2S32U9HlelvcWgmz1ldJ09QOZQvegisr1MppU8DfRYvQCkuzt0X4e9d3xGvfQFtLyoQMq9VYW3
                      vQccHr0n7k69tol0PSikuzwNVps9fhobPV9Pyb2XQJQ9gGeIveAbsDxyh149GhUTvfMokD0S3ay9
                      U72HPRfGKL3t0zK9QN6fPBROuLzE5Qq9wObGvHAobr3WLBW96B0cPNGulj1C9ws9oPmJu4OtsD06
                      /Sm9BwUgvaofPb06opK9ACvluRjNYjzN7Lu9utIxvaYqaz262B09fT6JvdlMgz0Az/c7uEfvvGCf
                      sjuL2qU9gCUCvN0Prz15lsw9AByKvQIhTz3qChK98uJtPS1GXr2Bfp89ioBcPZBHALzgSVe9MDX3
                      u3raZr3if7W9W9i2vcYLMT0sdOQ8aK2WvTjLub1T5p+9w9JXvY9Pt70gx/q88pVgPaDzAL3qWlI9
                      aJxZvJ76cz1dJVO9wPZrPLOiPb0Hd3y9aLFZPKLnlL0YkGw8dM3TPKgOcDz8oNc8g3g3vTqvej3Y
                      1qo8ULqAu/YXC72D1L+93raIveJ7Qj27Vam9hwy4PSBnxrs87gG9UFO6u7VijT2oNYW8JnkOvViW
                      VbwIZbK9TaK0PZX2lD0odZu9GEWlPB0Vkb1Arwc8uwOcvUdFHb25W8w9mQyrPT5nET1ASSs70B9h
                      vOglxL34asa9Q89UvY55Az3YixI8eWeQPWytir2StI+9ebu+PYKcBj3VMYe9KAmCvXBHPb176bw9
                      V7kfvUpNeT0eL5O9lphdPQDIbjuxA5Y9EFEIvU23nD0RzaI98NpwvQBNOzoaELm9UFF/vbihnL0K
                      x7u9ex61vaAJ3rtIL708OL6rvGh4krxC4149wFNUu9CzfDx9hIE94+eBPTyXDb3TtGe95tILPSOH
                      gj04uYe9bLTwPKIlJz3wfEQ8X6y1Pa7oCD3Tza292zOPvcK1g71EM+88ilWmvSBK97we9Ie9fXe3
                      Pbd0G73oIje8TPCIvfyC5zx+SyU9lwgkvQ7aOD2IbMM88sAzPQ9Dlj0KhIW9Z3aDPbQrtTyQlS29
                      bZy3PeBdhb2UdbO8zevHvaAtZjvmARa9IrhBPdqCH719OGW9OFWNvW9Dxr2AnzU8N5PIvRCyZzwX
                      7S+9g7mOvQBV7btw8sO9ImJkPX4JND2S0zE9RbWEveB/jLwgJ8m8elscPcySxTwDJqg91nEIPSCb
                      v7veyQ895wLHvdIjET1Ym1i8RmlwPYger734L5o84MmOvddetr0o/vm8AKIyO/Ty4DxXm7O9Ebyu
                      PWCJwLyqMhg9APM1vGpUAT3NYHu9dCysPPLpej1sVPo8F1quvbkMij3s0Yw89oZHPVN2pL16X3s9
                      u+CtPQCRoTslXpw9RIr8PE3UX72StHY92ObQvC1Xgr0RxaQ9WrWqvbJvAj0ACnI7I8k1vRJYuL0S
                      bbS94vYpPW32Yb0dk0e9m93EPbLZtL0qa1490j5tPaDCZ7tskoG9qZCPPQDLb7s50789dFkIvVaL
                      CD3zIm29FDrXvN1War34eYs8rjNtPfhzlb0qJq69Y+SqvQ+yoD2A29q7bMGEvaCOg7sIFIm9yJiy
                      vH3LjL3UCca8sL4BPO3oKr2qVm29LXh9vQAQebwwyBa82OZDPHnImz06Pke90k1mPY8cwb2YwLU8
                      Te/AvfELgz0XtI89YCknvSPAtD2gJf078MRxvLXZv73nrbw97gUpPV+igT3I9pq9gAa2vN/Wwz2V
                      Zce9KLsZPKreQb1H0DS9XxzKPf1Vgr1Pr8m9GjkSvVtMyT3QQ0O9pxeJPXd8G70AMBW8hiUGvVhe
                      oDwGx4e9FqpTPcIrbj29Np29sWHGPXXPsr12/2894+0xvUA/mLzQD2S803tSveJuAD2ivoS97EKz
                      PHhohrz6iFU9tf6gvU4/AD2WHDA9GTCXPZrPrL2fUoA9yPKzvJcAZr2gtDi7BEDSPCP5UL0dpC29
                      GBpLvNBBJDwnypo92pUDvY6JQT0fN4o97lkyPUwh0TzT98o9kG9gvfYnRT1Q/Sa8AAbxucA0CDuw
                      hnu8A5SdvRh2Ebwz2MO9WnGAveYUHj0dvLM9CMOFvUxi6DyTdL89msMVPUrgwb3M8948po42PXDZ
                      PDwkmeU84H+HPMqWMr2Ykka8AfjBPfrYPb3svtS8B5k3vRwP2zwmHxc9jH+zvCC1hDsA9aO81sAP
                      vZA7WryOrx09z3WuPXsss72UruY8RugRvXQW4LzlPZW9OTzAPdTx/bygRbW7r4WNPfS+8DxwUR48
                      psUVPV2uTb1y7089XiyUvadSHb0qbCQ9ED4mvQLxpr0AklK9QCWXvZqrBz2K2KK9KL2qvUYaDr3y
                      GMe9gH+uum4cdj0KXBC9EtURPYWRoj2AvRO9aMlkvK9es72AJEa94BNfvX8ixr2eATA91mYKvXSX
                      6DzYGWe8AL2fuzBooDs6p7q9QFpgvBnhoT3qHcy9AUyHPdYAjb098KY9YrlRPTKrBj2fNsO90vuz
                      vZAYWLwFPrU9izOZPXA2Nb2ympm949eaPaY8eT01OJo9lGS0PKgJyzytBUa9c/q8PdUruz2aWTg9
                      sJWUvXhm87wA4KA5WEPCPB0IKr2iGFI9giRsPaghWzx0LLS8WS+MPeWHwj3yaJC9QF0vvWq4FT3/
                      /K896eONPXD5Gr3Qdky8GFewvCDXtb2BSYw9uFTuvBFXlD0I5oy8UFYPvIkMuD1Aqgg8PviXvSgy
                      hTwiOwo93YKwveHatD1455O81VWRPWiyULzAuPS68JUPvMChMztCbyw9Up9HPRKoRz1jp6O93mt/
                      PdNwS72i9hI9TGOgPOOinz0EM/488FoovQoLNz3jMJo9QEMBuzQtnzysKeM8vMDXPC1QIb34JN28
                      hu6cvV9xgT1RAoc9wInJPAA8LzuAPQi8mv8LPYCfgTvwsXK8oTehPSTS8jww91+9iJKYvQ2PyT3J
                      qqE90HWhO0Idbj2AoSS8zKPzPG1ho70M9f28CS+kPajRhDxI1s+8fGqLvVCKurvhAp09RlGCvaD3
                      +rvunQU9BQKBvYczjz2rcpc9LogSPYpgw73A6EI87cq0PQBitbtnr069Z3xWvdArLryAPiY8+hoA
                      PRtjmL3AHoM8ghFyPdCjr7tiKnA9t4a0PWnUmD24M7y9qJTOvADIszzIfoE8lslhPYdzqj0hMrY9
                      wEkpvajfgjwAoEe6ADnavCjN87x/5pY9x/YbvYnnjD1In6I8vWPIPYh6vzzi2Gg9k0fMvUAgG73O
                      VT89fQOrPar1Cb3eTI29R8wcvWoKKD0uL6G9WEnbvOAGgryYmJ28sHALvTZdRj3y1Hw9s3WjvRyf
                      ib2A2cC7E2l4vQUEmb0thoW9XOvfPIC8p72ivpa9wA8WvLpQIr0FHYQ9UPC0vXBOUjxHqp49KnOy
                      vfFKkD3M3vm8xYvJvQcmlj22MAo9GqyfvdKCBj3CNlk9bC22vOLmVT1wNVO9c9KyPWwkiDwA90i8
                      IGK1vVDV+Ttgmh29RYyMPWgSir2lM4G9Q38rvWA+DjvESAy9YFPevL4Qh71SlB092JoWPKDbJTtE
                      CvE8KRegPVhBlr3CkQ494XyDPQFwkz1jCIE9YO40u7RrpTxj+8O98sdBPcBcjDyDacG9mh4ovbLK
                      hL3wAqW9k1iPPXghirxY6q69w04xvZg/ZrwHbLc9osUGPQDl0blZ1Mo92TuhPZxjgr3mqSs9AJ74
                      vM58YT0KR1S9Wr1lvUmulj1AcGi8H4vJPcg1kbw35Ua9YPCzvJihm70XIH29+KW5vPCAub0yjIy9
                      2m5+PV9ajj1U1e28aCKMvVqEFL0oqJ68VdClPRknlj2Igaa9YjOLvUHWqT1GrY29Iu1zPYCp7bxC
                      FDw9Ds+mvQIdGD0zd8m9gLW4vPvnvz30jdS8zdiWPcIRbz1br5c9gFG0O5THybwVx6k9QAyZPHKf
                      yb3twLu9cpdEPUADwrwnAj69qiB+Pew3rTz0QdI8ASq/PZheyDzq9hO9wUSMPap1jr04+YK8tTK9
                      PUC4pL0siIm9w+9lvZjKpjwwahi9YP9VO5IiWD1DHym9qO5PPPM0rT3eVng9ZjgUPQpkOL3gCWa9
                      yx60vQAuJTygiOW7E80tvWiH2Ly4RL+9uP/IvONpyL2ghYM7lSO/PajDPDyePaC9u121PcDZmr2n
                      eLk9MOs/PD7PNj0MwQy9s9GYPYxt6bwot5y8qn+qvYCa0zv4l7o8h2iyPQBhqjx3UTq9Sh9WPYCD
                      +bs6kY69IK3GvUdUtT2a3CW9FVSdvQd6Zb1Pdck9jWG+PbARfbxmoKO9UCNFvADKArzBY6Q9vDCJ
                      vVyl8zwjM1S9MJSRu168ZT0HKK49AMPBvJ7cSz3i3h49SDaAPKxC9zyAfbM8kKYYPEuArT1DHbQ9
                      TDmdvDZRXj2+6Ek9wEW/vU2Bt70oDXu8lHbnPNgTI7yAqls8FDHLvCKsvL1Q00S9AAUUOmdzG72j
                      y8s9gHOqO6pQZr329hQ9kcOkPbGsmD1jLpc90/kmvcScgL1szt88oeKLPYrgBL1Qzpk70xVRvazf
                      oDy6vyK9ekgzvbQB+byKc3y97a9Yvc/+vr0RsMA9gMT0vLIGaT2AMxO9MoEuPcDaxrpw2xA8KWe9
                      PfH7yj1lEaY9w6+TPZk5xz3x7qo9NHShvOxyiTxBiZc9m/qsvbOmPr3apk49YP/+OzXtwj2zm1u9
                      15pLvdB/vDtP/6g9ew+NPc/Jsr1QVp+7oF7xO2/mpj0giya9zdOdPdFiuT2msgk95mGGvUduK736
                      xRW9MxqfPU1RRL2A/Ya6i/GQPUtqkL1dUqa9cmp8PQPrvb0HilO9VTfEPcg3j70FtYC9/cNBvXKV
                      Bz2iQRM9VtlmPQwHk7wA8nI7YAOXPFl/mD3SRVk9oGQ4u/OrLL1IELu8Owy4vYs4uT1QnuQ7+/nD
                      PbrdcT3o7FS8QEWBPIFBmj2UEb681wC1vcj6sDwSv6m9B/yfPe2Zeb09L5U9tTSbvdh9LLyfJ4A9
                      Oqd9PUdEIL2j/DG9W8HHPUdEV73gOpS8qemJPSrlh70LOr+92NtmPH4IcT3AH3M8GHhUPPs4sj3R
                      BrA9muBjvcJhej1QwQi9hUamPUS70jy+ko+9sDoivSIlej2Abcy7y2iuvWpzvr06VUc9hvUlPYA6
                      iTuBvqs9wpcHPQyfnbxMbrw85uiSvbBTRL2ITdq83VYsverXcD3/wrI9FK23vE+xrz10p9a8VDCI
                      ve0Fhr3qMDk9DDmfPNR9rLwK9Hi94iy/vWrqc71pw4A9MHayO7P/vz1QWEe9CM24vPKKXz3QEtA7
                      qxOfvX6IfT2Msqm87vuHvU7nAz0H4Cm9SvoZPQjgjbzL78u9UHJMvUywyTxB+4Y9E1g9vSPdrT0N
                      XKs9CicqvVxxFr0YXTG8KCh2PID/wDzyAQA98ldVPQYBbj2b7Ko9KHpCPK2ktD3UX/y8c7LCvRSK
                      ujzsZpw8g2lRvT1ssD3qGXI9ChdYPSfUNb0gALg7oHXhu4AyVzwAC1u8sB4JPFAXMjxSaUQ9Jw5D
                      vXAGn70TwGy94IUtvQoMWD0jlTi9+qSJvUCL3bxjf8K9bNSSPF6kmL1FFre9PW2EPS5mCz3O/H89
                      VEuLvTEzrj3eMg09tAiHvM6IjL1tere9gESjut4EIz0zk6q9wRWPPXvslj1hdLs9GBSdPJdYrD11
                      ybc9Vk+LvcBVkr3DilG9ONLUvDG5pz3lVpo9lzhyvXuOrz1recE9kx66PXTYlDykCfM8KHWCvZ7S
                      nL1EDhe9V+SXPcMmvD3dLT695DIQvQAFrTugdfy7Oa6yPdm+hj3g1eW8Hh4cPRaRST2aZy09UL4X
                      vHoTXb36RA+9Wk1QPcALEDzN08e9iU6GPRhtZjwtKBq9otOcvcc9kT2T5aM9EPJAPIw0Gb2wnCw8
                      0qodPa0bQ71oAXK8QNR5vHhmlb2DIoY9XqICPVedrT3Mep480Z+kPeyo4byedVw93seEvUANO73Y
                      sx68MH6wOwLhDD1AehO7dZKOPXpWJT2KDy09Fgw8Pa1Yer2TFcc9nheavUAZuLoAaIc5s2SbPWhb
                      X7yxfJQ98oMkPSQ97DwATZi9CHSRPGj8rTwtQVO9xzGOPZTrEL1I4sO9xpwWPZ/1rz0Z97095y2r
                      PT4NNT1BTrQ9wK9YO/hhiLyBzcE9rtYwPaBDpDvYWR88ltUiPaCEuztrKpY9MVGTPW2EpD0+MxE9
                      cPuqvVNqWr0bRbE9YBfQOwKHPj1gMLk85fSBPeXyqD0Rna89jV8ivW/7nj0Atso59/OUPbeFxL0p
                      NJA9whJIPaeRqz1wUjm9+H60PDNCS731Qss988O6vU3tc705yMQ9gM7FvaBaKb3Y3He8KJoTPM3s
                      ar2oPWi85CnPPNWOnD2gJ2a79Je7PNCtgzsCMUo9JTSaPSqnhb2G4oa9gL4PPGuswj1jz5S9oktB
                      PSE0tD1lILa9aD5LvOJlYT2bQ6G9yAm3PBrYM7144K29zrl5PZ2Ee72icEw96EUrvFm/uD2b8bo9
                      aPz5vE54Pj3i8Ts9Wlxevfy13TyJUqE94FysvGqJDb0Bm4E9b6WdPWC9N72M1688eMWivV+8wz37
                      Vpc9C96TvR3WHL2y5zs9RRSuPfhbvL0aPBm9dIqovAD/GL1gOD695UO7PQ0XoL0gGMK8LZ1+vVdF
                      Nr16hLq9j5eVPTI5i73Bu5U97VBCvT2+V71AaRK8nWnGPeI4pr1PW7s9XWkqvQGszD0AM3m6FIDA
                      PGx6jL1VY8S9oA27vYDTsTs0oqy8h8fKPe1ykT2ioUo9XeSAPfK6v71QWL69UMnYOxMhxT1aJsO9
                      GfGaPUwKi7xKSRq90EGHu2mekD0AGUY7lEufvELjfT0tGUq9jWosveEBgz3npBy9wHIDu3CYLL1w
                      bFK8yAyZPIqZir18vdc8dZSAPZhVnjxsMce8iCSjvOgDqDywyrm9pROAPYaNMD3lfJi9cytGvWPK
                      O71DRKg9jjeSvVww2TzaDHm9AGIZvbAEA7zbLJO9PNcLvULsHz1QTr679wmsPRmHiD3ASzk7kNY3
                      POD/xLsQjiA8JH4ZvThgqrxogWi8+RO6PUpSKr2+NAo9KtJ7PQQXzTy9QoC9T6LLvVDyWDwF1Yi9
                      CixfPehMl73bJcK9OF3avFhIwr2yFQ89t/sgvVembL3ETu88Lf2YvbN5vz1QrEO9pLQTvTKxTj1L
                      UZC9ma2vPRhHXLxTyaQ94FPCPASp3DxnAGa9/fWPvahgY7yajmi9wMO5vFBGo7vg3p6731jBvQ21
                      pj1mCQA9801ovQspvb0YPAK8WnbJvcnqmj1Aa/s6gJmGOnUrpb0TrUS9x8d6vYjhmr0Z7YU9sokp
                      PTexgj0zZkK9/rxyPYqSWz0A3im9Gix/vYY+lr01RI29MK+AO2iFWbxa+JK9mfDHPWr0cj3GX5q9
                      Om06vaq4WL1oZLO8ODWvvO1Hpj3qQH29G5mbPfsFoL36yis9FLXZPMjvxLyOeVQ91KPSvA2ErT2T
                      bK+9oHNKuwP0Wr3//8s9IOsevYDHxTvHN0694OKZvbNFn71gStY7AOzXuyctI73K7Fu91ACMvAW/
                      wr1yDse9bKiOvABEgrzdGJs9Yge3vXkYyD3m0py9ogYzPQlSpT1QBPo7yYCQPUaLDL1azig9GH5s
                      PIZhPD09Akm9hw67Pc29eb0os8K96r9hPYBFDzwU29c8Cj94PVCeszsBU709FICpPMLAFD3jhMW9
                      CDCivGFLtT1KpXK9ozXJPUDSNr2C0Ws9NM34vObaNj23/rU9d9+tvfJ0Yz1td3y9elNjPclBuz06
                      OhA9YK+dPGA9lrvLm589GIyDPChroDywiE29UTWSPb8CqD1NzyC9IFUyvV06rT1AHR+8C4+WvSZk
                      Pz2GXVE9KPM2PADEcztiFca9CpcwPbTRtrx9Y4+9KuxUPRtSkz3s1J08IMW9OwhwgLzjUbU9AMuU
                      vfoCcD13ucO9ANp6ucGcmD3NlFG9kjh7PTjAprxdoK+9kmcLPUCuZbuk49U8rYOdPWoAhL15qY09
                      GGrCPAMsur1NpZW9iM+3vDilojyAjuE6sJtGvYk1nT0ihpC9lqh3PUCIwb3YX5i9UOkJvSRVBL09
                      5Ys9K1TJvT1Byb3ucJ69ZBv3PDnLvz1wwCW9g/w8vaGulz3stRK9+hlBvSBQK72gbs07MbiePXEj
                      sj3o8HI8ym1SPSg6ODzSXzc9NYS8vR31WL1wPmC8cGBqPJJKND0aO1c95H6FvSZJmL2Q2XY8q3qd
                      vWiJwjybbIo9+voqPQE8xz3lWJ69ep1mvaAB9LxO33E9MVmKPRoVtL0Bao49k5xtvbLlVj1wFVS8
                      DaGwvUyAAL3reoI9ANfFO6jaI7y4jZA8VdXBPX6qNz14XoQ86MuSvIBznDujgqe9cymbPaA+hbsr
                      oYk9cGE3veiebLwYBVq8kgRpPW1LpT2NY2y92ONFvDVfqz2hvoU9N/JpvQhN17zVCai9GnF7vcIc
                      Aj0i/T09cpmlvaJqcj3o97e9l2I7vdu1wT3gKIa9MmITPVg+aLw9q7I9OMjKvLG5oD0NjEa9qhYs
                      ParuJL3FMMM9LyTLvQC1pTnOTBQ941O0PT3DS70gB8W7vj2YvcJPyL3kG4W9e564ver1bj2FebM9
                      EHxtPBlJmj2XmSK9KuEHvY7Bp729Ilu91WW9vQMBMb2xrpk9wqITPdgafbwa0mO9VEWUPNvQpj27
                      d5Q9NtQjPbDFHrzjHUS905eYPTyy9jx4coy8206QPbLnBz19PEq9zaatvaZhm70nIaU9f7+5PSV1
                      qb0Yzmm8xwUkvb0dlL2w3Fs8m+mVPfAeALyl46g9KlzAvejo47whDrQ9ujdvPVOPmD1YzIc8jaSq
                      vcDUDbvgjIe9AI0KO0anZD2YyQo8p3JTvanNrz2fqqc96TPGPSC+Gr3ipl09wkNbPW4xQT06v2G9
                      ijROPSIHZj3QHog7MOBnPL/xlT2dHag9P/+/vYzT+DwyJgk9QK5ZO5mhmD17c6s92VeVPcLtwb1y
                      Oww9UiNEPbBrrLsQuXG9LiWOvZlNlD3Otyg9sIzEu9Yyq71qeQ29hJbsPIocSD1xHMU9+K3JPMRL
                      3jwSJKC9ej0FPZ3Fpb0N/G29mp8QvaGnwD3APzc76ncJPWqWIr3vN5o9c5HJPUqTQD317I49ijMK
                      PbBjYzyQx3y8UJQ4vKBPxDykRxG9wOpTvMELmj2HSmG910gmvTUwyD1tu5y9lEHGvJLFyr29vJO9
                      jFqDvZSCkzztQb89GG17vLiugb246tO8MF2Ku9MCwz0nImK9oPvtOxnEkD1ZKbs9XZ2XPe1Ya70g
                      nHS9TsuPvT5omr249PS8tP/oPODnmLuO4zs92M+4PN3Isr3WSKi96EZgPON4rz0klPk8uvO4vaAO
                      d73qKS09ZpwEPe64CT2SeCU94DravEiXuzzXkBu9kp5uPbOLQL3otRk8g8wzvQCUvbrmQKi9YbeR
                      PdmQhT3Xy669cvVCPXhjyjwwEd47DAG3vGjzZzzeNgA9wZ69PRi4yjyAfdK6rGO4vF+fzD3gpI27
                      Y+IbveZ5GT26iXW96MO+vWz/87ytBq+9VwOdPfeLd70+sA89ff2vPVPbsL0Q2Cy978qHPRcDP73Y
                      xlo8UP1pvOayfj1uOxc9OJayvFidrr2w8hC8SEykvOwFxLx04aK8yHH0vFTA7zxy90g9U8W7PQBE
                      Zb19OyC9NTG7PU7sET3o54y8c0mgPY1ZgT1tPCW9KM8WPO9ltb3KfL69c/1RvTBRsDvna2S9zCWO
                      vHJgeT26Kgm9Q75gvYoQWL3SXWU9glIqPYXBrr2AVVu6bJyXvFwhDb2ofxW8466VPXKBir13qjK9
                      h4crvad9Qb3wwzO84oljPRkfnD1ojf68E8aWvT05U73gi7i7EJuVvcoSwL0ooMg8edyFPWCdgr18
                      awq9WpYrPVCtOL24i4M8uFCcPNhfNjyg46G8j8u7PfTyvDwskpa8ZjkuPYDvkzvAHU+7YHjKvNBK
                      lLuekAw9MPGDu6PwnT08bOE8O9PEPdDZZ72SmgI9AFElux0glb22pwo9N/VavZSV8rwUZ9u84FON
                      vItdpr2LJ7O9HbqAPeU7rT0oFSQ8TYp0ve1hRL14GNG8L3CcPeoPDL2df709d8BAvQPnwT3xcro9
                      kt9EPdJUcz1iFgw9fa2LPSaEMD1lh5M9sPnYu6DdibvyrJW9YIFqOyIkbD1QcuS7NMjMPOjMpL3j
                      G409am1HvQg07LxUkJu8Wno6vXqiTr1Z258902DGvYfGM70Aagw7QIfKPEoVg72HFq49Pt83PbBm
                      dDz1ZcK9gLb5uvcLvz0AfuC7Ajg+PYpGD71sIxG99SGPvUoZRr2QjlM87Wo8vdK4UD3YFsK9sPXK
                      ux3siL13F8e943eMPYuQxb2MdN28PEGKvb7uCz0kt4i9Tot2PSDF+LvYiWu8LtxjPXoQIL1+NqK9
                      CBWyPBMXuj2I2sG8qOFGPLF4pT2ACGK8ACNlOjElyD3Ya7a94PSuu5+Zpj1q8lk9UBqyO8B56bwL
                      osY9CMK1vFiqXDzlnZg9sst9Pfgsyr3J8Kg9SvITvYTM0jyy5qe9iPTMvOsEpL06T3m9vY0gvUW3
                      yD0YymY8twCmPRmEnz23UGi9SHeePMpYID3TImi9UZWBPdrIfD30kqa8R6NAvX3Hmr0MDrE8KPpv
                      vMXRhj3QMRg85QijvYfonz2SJUw9V3ObPcXMjL1oKYc8ylcfPabHID1KHsi9wXDBPd4wWD1icIy9
                      wFA2vQwJuryQBga8Z50ivYAL0DtgETG7qAGNPFDoQb0d4o89fmtJPfiPu7zjcMQ9uxaJPfIpYj1G
                      OxK9j+rCPQqtr71SlTI9A126PXf7mj1AF8i8WpFuvRiGAzyOWWU9gN2VOtC56jsXMYU9tjQTvcqZ
                      Jr3DapA9YeaGPfgwjb0haKo9cZWGPYINpb3Ql1u9M42QPaBOIbu69Es9k1exPfA9ab0awT89kTK8
                      Pdg/bjwomES8SeiuPf2EhT2DQCe9AO0xPJqfb70dGcq9AFy3ujaPGD3enEw9HPoTvej2QrzCRTE9
                      CnNfPfvyiz2Q5FW993OcPUOQJr0glR+9oB0pvRjAazxQTYE7wLC8vPO8jD1Abf46HuYxPUzHgbxH
                      BoA9qAM7PJu2sj1unWo9kz0mvaPyZL3UPsC8Us1ZPS3Vcr1C/b69QBtMPDc/sT1b8Iy9t3tjvQCU
                      PbvJ0qw9MB6Ru5WSnz3qIYG9QnIqPZD8e73w1T29QGRNO1jgUjy46sO9fvE0PZaTRT2AL6E6QOAx
                      O4T4DL3/HMw9k/GZvUydGL2SOlc90O6fO7POWb3NV1O98IAYvco+H715e8E9IDwTvdAvf7yAO6K6
                      wDsSvQFrjz0JfKI96LEJvG2Bq733cVi9Ni0IvSCwrL2BvpQ9+n4jvSBc+rya7Ga9e9ilPfnrtz2A
                      vbg7f42iPdIEHD1rIr69RV6PvSj+XDzB8rU9vWpBvYDiKb2+GjE9N0mHPTowIr0Y7Yq9UFg/vYwv
                      ujww0JS7hOEPvZn4uj2wHkO9Wg9+vRoCV73A3Hc8ADWeuRtyp72+bSE9oLJxu6LvVD30v5O8yDOD
                      PFjaLrybw529Li0YPb4wcT26ojU9YKAgveAhszvYTqs8hP7jPHqpZz1veYE9CF+vvMT/hL1Gcwo9
                      DRNPvWDtGDsqFQo9+OWNPAoNI73wD1a8r828PauXxT1H9bG9HlxbPXNBJ72KkLu9ArlrPaYmFr3y
                      KxA9oKSWu8Esij3gLLA8kl1GPZLWyb36sxc9AIjWOBQO7LxbssI9MBKAvTKuYz2m/y89HHXdPCqK
                      IT2gy7W7MEbEu4w89rw0GOu8gXXEPRkTvD2kKIq9ZucFvSeXgj0KYRw9TDyJPKBkQbsapqW9jL3N
                      PEaqHT3EzOU8mA9wvEDib7zzFx29nQzAPd3cmr1walm91rCdvUBsXjvrW8K9+Bv3vGPHxD1Tyru9
                      tkVCPdjgazwHIDu93poJPV7JWD3deGC9VYyJPSx17Tx0dtW8s1U1vSFauD3ggnC9ID/FvaJBZD3i
                      t2U9kE5yvOdKhj2FfKw9rZhFvYZlZD0Xlsm9kjd5Pe5eOT0Ahou9zH3EPHPCPL36ojS9SvfIvQz9
                      1LzgJZe7LBG7PBOUsb2kOdQ8MPgUvbLjaj1GA5+9f6KRPbg7iDypOrI9lafLPch5obwTebW9uGig
                      vThN/7ya6Wu9WvA+PU5WoL2QnCi9Hs5GPVplrb32wkE9rCq5vFSGnjy11Mg9YFjhvL8AiD1q4Gq9
                      ffK1vaDJ8LwIdrM8KNikvAVjsj0AcpC56t9mPWAqvL20M6k8bgmnveyN2Lzge5g8gPXRuvvnwb3Y
                      nZ+8EyBsvcIFx72QZG+9VxpGvQo8YL0AnzU6ymxtPYqkCb36x2U9UBoJvA58cz0WkFA9IBNBvaPm
                      Sr32+QS9QMVWu8rJk71QjzY8HeqevZ7cAD0No5m90yepPRWiwL1jGUm9I0ewvYlknD2e62k9Usxy
                      PSAF47ywtfq7DKK/PJcEuT2yBHU9V9B/vb4bVz06ER69UKjSuypJPj2On0k9QIQuvCyDqDzy/HI9
                      dD2cPCocWT1urDI9apYfPUBT67yaY1w9B4BnvXPHr73bI8i9r9e2vZpEVD3Ehc48YsNFPQh1kDxA
                      qwU7apRqPSqQkL3I9JW81EW8vOZggL0geBm9nWaevZLFRD1ki+U88tqovXSq+rzgtt+8QS2lPdqg
                      LT0GGYa9U6hQvZ5dSz0ghkq9MJ/lOxWJsz1dB6u9ZUmKvQ3vqL1lnpQ9+Z/EPTbPjr3l/6k9OtN0
                      vSpkf73QgRa9HfJlvUBJTb0AXZ45cMVcvddIv71WHCo9sFtQvZAnH73yRxc9w01evT3wxD3Wgks9
                      8j5BPQPilr3Yc8A8AIDwOXd5ab1q7RI9AKqbujZ5JT2kxfc8zwOqPQBf7bsNRYY9sDADvWp8Hb0A
                      wYu92yupPSt0hz03s8y9gJV2vM5Yez1yjl89ZaXEvWz02Dx6PGk9Ta5lvRWIoz1AjzG806+uvYA5
                      8Dvsj+c8eiebvSX3xj24ZoE8MGI2vYPOXr0qurq9DBnpPJ+WzD2XhMY9ZG3rPIldpD04+8i91UOx
                      PfZBkL26YGK97HXpvDBHGDwMw6K8Oy2ZPaUKnT3HSoM9gPSvvNp7y73e11s9dHGmvID+wb3Hl1q9
                      qBxUvKjenr06Yq69FiyhvamZuz3AA2A8J04jvbBRqjsirzw9GlU7PWA7STvrS5A95myVvdj1NTw3
                      GaU94ND0vJ50Bz3mUZO9UPJRPBD6Lbzi4kY9YIK1O7OjkL2wcsq92uQgPQOEOb1B8cs957nEPeo2
                      er0966C97HyJvGpRDj0R0b89UM+XvXOaYb1dgiq9oI0CvV4ZID0TEsu944lgvQ4hIT19LbS9Crph
                      venixD0ELus84PfbvAZJjr0KP0u9ABRUuWy4kzz6vkk9yvwVvW6YVD3Stom9jNzIvDYdWT3kStg8
                      yFSxPB1+oj3SHKa9YGUgO5srwj1pZas9CV+0PdRC+DyKMXa9MBRLvECh4bpoBko8dLeEPLffab3g
                      fqQ7FskEPcrzg70wt2+8YUOHPZQU8zyw0Vs84ghnPUksjj3CFDA9il4hvTpQlL2Ty8W9041MvaIV
                      ZT2HPkO9TEaoPIFHuD315sQ9Qs/EvUgyxjx4oag85EzUPD16sD3OmQ094u5tPbJnkL0aWBO9sE7r
                      uz0wTL0YJyo846PDvbuVwj20g+88rWhHvVgUALy5l4c9hoErPZQGu7z1ZaQ92I/XvEZ2Nj3NPWe9
                      oWinPSLOvL3qOgG9Ft5EPahNYDwM+O08mA4xvOCoCb0wtJW9eVW+PT2TgD2g76q7QA3GvUFeuD1a
                      lCK9GoMfPcxT3TytIzC9EejAPf9Uwj1gxFQ79CzkvBraWz3Rvok96E/EPCMtsj2YHxK8ACgEOtmO
                      iT0qJj+9cCsKPGAg2zsgofQ75otmPSh8sbwuOk09sHqovUBzOTyYM5M8kOADPGv3ij2ghi678VnE
                      PTdOpD1cNOk8AJ+zu3CrS70gYZ+9TLq3vNF+iT0AMUk7ZmGLvRKLQj2MQOY8FB6SPG6tnb0w/bm7
                      YMAMvVWEpz3ymYi9t1Yfvb2alT1Q9uQ7buAJPWxJzbwU1tw8wI7HvV57QT09LSq9uIrIPLDJkzuq
                      AVc9nUE2vakxhT3A3ki84OmDvco6ET0wjs07x4EqvUCqCL0uwWE9ortHPbOBbL0oG9K8XqtHPWVG
                      v73cEtY8DCWZvLCrFjyADe+8bj5HPV28gj2aA8y9l6JAvRUKlD0tQsu9u7LFvWjAvL04WY69nS96
                      vZicvL11nsk9kDG8vb0Fb73jMpc9qJEwvGl9kD3P87m9y8auPfcqXb05VLs92I2IvJhPSjwAeUm8
                      ONCIPPN9V73+VCw9gYmLPUEqvD3Q96y9V6UlvS0dmj3mxQa9opZPPYrLtb1gFE296OvKPGJOLj0Q
                      aj+9HFYNvccjP73xVJw9AjEkPSarST3gg6e9U9SePa+Rnz32c4C9oPHLPCRP2jwwoki9LNStvJSd
                      zTxg2ks72JJlvNDHgrsr38U9TsqrveD2krzQ2UU8cG9VvADbITzwQDK9ijJsPSnbmj2hspQ9WM0u
                      vJoNRT3GU6y9U/VAvcB2Njv0O868JuVZPSufrr16EWG9JFLUPLU3vb0odsG8oUfDPcDbgr2wV0u8
                      Xwe5PQAUDDt5QbA9UcCbPccqlz2pzKs9pvALPYqxr70yDIW9gL1FvWJFiL0aXCM9kvtfPW6NTT0A
                      nNk7xMDaPPAQuL2sr9q8is9OPeBEkL1gO9K8RqsJvTftyD3s3tE8CtJ4PZIdy72tV269QBvkut8+
                      nj1QYfY7IuAZPe9Okj1tjri9AE7lu8xcvTwo1xo8ZxOFPZrKWr1Uy9e87qipvQDWQb1wzhc80Aua
                      vfpVBr0jX5i9EGwQvIM+iD3OuB09Q3jIvcMCxL39A5E9fQujPebnpb2nbXq913xtvSiicDyALq66
                      mAHxvJqpUr15XLc9oKLDvAtCuL2eLC09vKCFvUPvfb3Ikv28lk1cPea7Cz1I5am9AModOwhZgTza
                      hUm9YqUkPTC0ljvIELC9k+ldvUAOrL3sD428c9WUvdjPgL3Hzy69yqWgvSj7JTwwsWA8dTaKPTsU
                      nr37tLi9YOsovZJWHj3XxsM9hLSAvcd3Ir3mMHI9JwWePZLzej1SwBA9nP4Svba9AL0YEi08BQWM
                      PXAIYbzAvjY7wF6cus99qT3Ds5098Dm7vfC9fTwCWlE98Yq5PYA93boyMAY98uV7PcN/Ub1Oo2M9
                      Dc1xvZDyIDyEqek8FfjGPVN4pr2EEfo8eG7APAiPz7zqOo29iqJavbNMiT0KX3c9ReChPYqaur1q
                      o3+9dEHSvAKfKj0O2ho9QJqdvOdvoD0YFYW8aIfhvI5kjr1iR3Y9uCDCvRKVsL3Q82280CImPI31
                      jz3RILk9IpFePQNNaL3ayxK9eLSLve1yhj31ZqM9npBnPek3wT3Ykxy8+2u/vbKziL16ZCA9g3zJ
                      vbEenD2HLr29+CWAvdrVEr32M2Q9dQmjPUwnhr381vI8UpxFPUI0Ej3Neb09EL0pPHG+hz1pw8k9
                      MWOlPexGkrx3hiS9PjInPZY8HD2wmYU7UK35u4J3dT2AGkS9K/inPTFTiD16xh+9pjMWvRvutb1g
                      k467HqMKPWhWRbyll7s9WJmJPCoNGT1Eld88J9jLPc1VU731Ir49WsKIvatdor0QTlW8GhQlvYAK
                      qrzAwpe8uDWVvMaDKD0cANM8sNSwO73Xsr0tTHy9hZ6nvWAVA726Rzk92VOvPUOGcr1YVH48blGs
                      vV00vL1JIYc9xz1svZBhZLywsgu9cxSPvWLKEj0I6J28PnZuPe78Kz3NBLG9ODqJvJsPiD0AnGI5
                      wJcIPDj+pzw4jqS9Nx0bvaKdiL3MQbc8GPGSvIBbBTzyIcW99h8JvRkrwz1gkb+7cPp8PEpxTj1W
                      CBm9wFoJvCOdlb0Kyhy9DpJkPZL/CT1tJrs9az2sPQwM3LxyMBo9oXWAPQVUkj1CLWg9ZbuwPS7t
                      bj1TNni9eooxPXbkC72yMi49XmMuPZP+vz1pr5M9kwujPcKxxb32PHk9MwVSvQDm57o3nL+9DkmN
                      vcw0rjydz3S9OcDLPZqQW72yn309gA+gvSANxbvDsKY9SRO9PR2VNb1XJXO9kvZOPTB6/DuC45O9
                      wf+0PaFFnT3DmJ89UEIuvQDhRLoahiI9/tp0PZMZrr30hJa8O2Wmve/Ykj2CEQ09c9xcve2Oo72K
                      Cis9iFjEPJAyVzwzdn69bxW/PWBSiDwGyRi9mGPGvBh1jzyUy7Y8SbPIPRJaez3Qkmk8o7OXPR0V
                      Hr3D9Ko9EorDvSgXWrxfSMO9kx9nvTa1ET1tbzq9GvI/vRww4DzCIWU9QKvIOniiuDwwUrK7QPZF
                      vUGJvz26KCC93phfPa22dL0oJ1A8Q/yMveD00Ttmxh49gg9ePf/HuL25PMQ9a3qOvbg/0byYjRI8
                      9UerveZAED2uLYK9w4kqvUONiD1AVoI8KEE4PGCvQ7smj6G9+UezPXi1urxCJMe9Kl9NvQAUHDl4
                      Gcm8GqQ+vShnCLzIMY69kOcrvEIlBz3cmv48CRLIPa7iWj34452927q3PQKKZT1Q1/87eKfmvFps
                      PL0so7U8AMnYu0eVtT0xx7o980F9vbFivT1wiU08sPiYvcHalT2i2n09MumsvWEorT0QrAK9cdWu
                      Pe/aur0Qfoq9IhyPvS42ET00V4q8sggoPfTN17wNwII9qIvLvG52lr1QR+e7LuVYPb8px70hH8E9
                      WWGOPcCOKTw7Jpa9U2ivPUPwV73G3Uw9N3trvQyPCb0dboI98oqdvepOBz26QBw95LCIvYKhLz0l
                      UKE9oK+9u4LgYj1A/9a88hxlPc3QG71G6Bc9vrQ2PSt3vz2oy4y8Mpu7vQAOVb0gq4y7vZDJvVQ4
                      Fb1ITZC9gKzDvIaDXT0OoUc9hpN4PYNhcb0sfYm8wwo4vbLCBz2Bx6c9cL2BvfmeoD3Q+TW98oUo
                      Pfg4j71s0wG9QDeouiEMsj0NBoW94pQEPfiYhr3AaRe8Z+0pveoNAT2jnYI9aIsbvJo3R70B2IU9
                      oLMrvcPKxb3gzMW8JjF7PUmrlT3paJg9bdzCvdFSkz3ASG27dD3QPENFe70AQLS6jkwBPakikz2F
                      uYm9gkBwPTj1l7y2sxK92X2nPYmJvj36YH093roKPXzu3TxDwh69gDjWuuc4ZL0r2rY9Eci2PcK/
                      dT1oA6A8KrGPvU2uh73jXiy9EYenPaClujxKskk9X2HDvdiDs7yLsLg9onFPPd7Zh71stJI8C6GT
                      vQjDubxh2J89ANx1vTDinDswMNe74udkPYDQhbx0Odq8/Y9Jvc8InT38lNs8M1e4vSWfnj1CjXU9
                      BByLvbSw/DwKaIK9fTtIvQZOGD1Jdog9GIqGPP0aqb1uvIy94K2oO2Fovj3XZDO98NdFvCjuhr0Y
                      5rq8W5K6PSGAyD29asA9xIv1PKw1qbzynZ29HeBsvbA9+jvS52c9dc+NvUYcqL3C0Ho9AGCROpbv
                      QD2tmT+98ya0PZ6NIT0kQ+Q8AOVlvYPukT2Cjh498os2PeAUhLyNOIE9rPixvGCpZrtEtAW9lJat
                      vM0Dy710tMU8x9+jPSTQ+zxBgYM9hN3+PPKIRz1yfXs9+raEvSnxsD0q4DS9XoWrvYsStr0I6Oa8
                      YLepvAX0kT2sXv88oKrFvSzksTyo0rA80B2yu3uxv705LsY9S4qvPcxTgLz0nfW8Uau/PWEJkj2U
                      UPo8GpoPve3paL0guZU70YyUPaCSHTu9RIo9rgWavexJqTwU4528MGVUvNh1dry3dyW9NhhxPQAF
                      5LtCEhg9uNqdPM4YVD0quKS9Uc+QPRSx7bxAoxa7Upq2vf/ImD3b7aS9z2+jPd7Mbj1HkXi93rkj
                      PWhGpTwBZ4k9E1dYveUCwD3z1ki9CaaSPUr2mr21nqg9IIGnuyKzIj3wZzy8uCa1vKCu7bwxK7w9
                      8oQHPS5jJz1fE7I9mgJ8PfoQJj1HpWq9foN4PdjXtzxx/o89GNW9PDdOaL2XEcW9kg+vvc0Ktr1V
                      aac9ivwvvTeXy71QsiI8Z96wvXjb/Lx5+sY90C4nvQAapzxxg7k9s/uivRDNIr1yDcu9AHUdvVGp
                      lD2X+MA9sGpxvGE7oT0jl1C9DMuCvK6DcD3uNEY9mEG/vXccNr16fRA95yJUvYb7IT2tR4Q9UjAg
                      PXqeDz3aIEY9HpQkPdHHgj3CZsW9KPzevCZHCL0qO0G957B+vTctab0j/1m9RiuJvWNqar1KUyU9
                      FAf0vGBXiDuAsZO7gsqdvZARzL0YHoS9UOXLuwfCUL1AvRg7f7CVPbCjPr1ycCY9qvEuveh2bLxH
                      Op49kz1DvWJoVT14Tf68wPhzPAFHij0DkLO9UPb/uzTHpTygj5+9WJm5PDRH47zUqJq8CNnAPH2Z
                      iT1gvwo7no4YPaiIpbwNm5O9pWiXvb1pg70gPLa7+wSqvcyEpzzZUI892nSYvYo1FT16x4y9nayl
                      PaGboT2I/7W9pgEGPT2kV70Fbp89tN7XvB7gBz2FYos9AJiHue6UTT0oroU8Qu0VPXTEszyAMfI7
                      oCGnOwAPKrqYO0A89F6zPI2js70AcXS6UamVPVDEXLxghIs8FeedPeQP3Dwg7tO8MG17vD31t73Y
                      64O9Gw2Yvcd3cb0oB5K8GCtUPFDo+LvyVzM9mk+3vVTJ2jxtcG69c6OevRGMqj0cEYq9GXOdPXgW
                      hrzkHtc8WI4yvJRuEL2q+Y+9xwLHPUf4Nr2vG8S94OacvfCADL1MIMM8gYOKPQqADD22qzM9vDP1
                      PNPEkz2KLko9MgFkPbi+y7yyHlg9QBdRPLJ1NT2zmaq96gMJvfKhp72Kvo+9g1Z1vTDBSLyZ96U9
                      mVKFPX2zKb2sfY28q47DvTqTTr1UcpQ8gFFBPEifg7wK4Hw9dkNlPQ/RvT3pVIo9CJmBvI9Urb0t
                      caI9iFCKPNTZuzwbQMw9MkhpPQ0Ak73l5Ko9cce6PZmgvD1GI4K9uJurvLJQXz1hTJE9SuQqvfXM
                      mz2Atyo8ipIdPXO3JL1WGha9nP7MPPVxt729hK69IJNrvVZjCD3d3Hu9APgDvfQtgTwW/109FcvI
                      Pf27hD2ir6S9iB2wPAIlw70m3UI9YAFsO/F1wT0SjlY9h9opvcc+xL3WMTE9UAInvMMbjr1ckPc8
                      Wps1PTlNvD36zse9i3zDPaBBar3Eec48qT/KPaN7mz2gB+K8wNkyPKI3yL0aPQk9H7+aPXCrYjwA
                      UYw8SiB/vRALHL3AGom8wU7HPVjpFzwt+F+9mtAIvXS1/LwjAj+9uqa6vRPopT0gs7a7Ih2QvezT
                      xTxG6T892ApXPLANkbsmCxM9kOZRPPZ3OT2xn7A9YmUPPdaRkr2nZKE9QKddO4DplL2AZKk6tvRx
                      PfRZiLwM6LG8oPHLPPd5tz3iamY9pDHXPCDDS71qn249UGJtvGD3I73HnqA9BtMBvTDhmL0kSQe9
                      7icpPfjPmL3AT1u7YFD1O7LZDj2A54m6jIO3PJ5Spb2w1T08nzjIvbA0LzyjR8w9mMbRvH8JiT11
                      Psu9sFgtveMjW73d3HG9xc2nvV2jH72BQrU96louPaCLi7zJpcA9KIDjvMd6b72gD6Q7E8VovZfk
                      Yb2AA6u8WCK7vLfyhT02GCg9DWLIPWY8n70oojS8KL9FvDZXeT1qG0M9HcOZPcC4WzsbBJ29KH7M
                      vajHozzQzYG79OeEPCi1jL0MAoU8+MGCvMv9tj1Rusk9p2C0PYNNaL16Bgq9ZogxPQo5GT1Y5Tg8
                      3ptdPUYpEj25HMc9uCGOveS1/Ty9pR29L9exPSSoFb0AaiW9L1GxvdOmkj1BxMY9zLHDPLoXP70Q
                      Lru9A6ShvSZOUT3x5KU9IDYIvWsDlD243IO8gLcRvWghNzzoD4W8tyOlPdQl5Lzk0/I8446yvVBW
                      YzzJULw97divPXiczby6ZIO9gNJ2vLPLIr2MRZ88vgJjPeB6t7zwC0+9moQnPQtpkr20iwi97FOB
                      PEk3kz2Zs4o9Wi0NvSCyUb2qbGk9myucPYqtbD0avhG98OgRPHLEET34o5K9ULKRO156i71Q+SO8
                      7nF/PVbJfD2sqam8/l8TPVPfnr1jlrs9cJMYvKKHXz0XUz29OsobPakNoj36OTg9DuNpPSiYQrzY
                      /kw8Qsh1PTsmv71MU5E8N4NxvZQW+7x0Wek8KFNHPICOLrqYa8I8wMS3PGDFpDvTpYs9MCsWvBvd
                      n71ozFG86hUKPZfPc71pDbI9TDblPOixdzzyGkQ9Q84+vTx7B73odL69RK+FvRBkKTzQ22i8ILEm
                      vRnKuj30cfO8UoRVPWDAajsUxI28o1LLPf9Mqj1y/1A9GBCpvcO1lj1VtIE9qsBRPd3Ri73HxWG9
                      YVPIPQg+qLxJ6qM9jEaMvICE4roAfEu8MEFcPMDaejvLEb+9nQ4gvcB0CL2zjso9/h0qPfFFrj2N
                      KLO92tpWPdCvMjwAGCK40Ca3O4Box72psKo9RAfZPHL6eT09xKG9qUGrPVYEfj2Amqa8p0LIPaiV
                      kLw7RaI9IYmQPRFJnz1rHMa9Ysp3PU0LRb3gKlW9sDwKvUTF0DxUK+Y82dyOPZ5zXD2Lcag9WM63
                      vPeNeb1dvYi9nlggPeHcoT3yzr69RH/vPNrFO73aNCM9KrAFvUAYQrwoIZK8PjV8PVT3hLzIDJa9
                      elwhvYZeor2AhYK71LvVvDukxz397me9oRWUPSSh6DyniFS96AaxveBhpLswGKC9yIrVvBimIryQ
                      LS68hQWWvQnUgj3KFXI9kuFjPcFgiD0gQbq7fXanPUY9FL3UtYY8ErRdPb6seT2d+5Y9ovh1Pfo0
                      E71Dslm94MepPMGWwT2rerM9reSaPdSHnjygftW78JEOPFUVvz1pUJo9ZgYvPXBeAbyQxzG8Uo5i
                      PWy9rjws1Zu8OFbBvaD9DzvUZ4I8fYwxvcoSAD1d9MA9ajFFvVTetrwMHcs8dzhEvSZhGj16zEy9
                      Mi1uPY44iL0ATWM8FqYsPb0/gT24HZS9ZNTQPAIwWT09/ri9JqtxPQCJO72HYVi9wKxNPGj3aDxj
                      WLY9LIyWPJ2TPb2YAL2879iFPQBw07qAyn69zkE4PX4Mcj3Q4rO7doolPXCKBzy6K3S9imdQPUk/
                      wj3sc+c80qWhvflLsz09cpe9FGqUPE1Zy72AFVu9t+eHPfd0L73KI0e9IuuTvSjrjb1aO1u9aL18
                      PEa2EL283gC9ALzyO6xF6bxSfyI91ptfPVAskruAsAG9RcyLvUCDrzyAepW8OKivPMAzJztg/4m7
                      zMadvJ5PPT1NRI89s3SMPXf/r71/+rc9ndGsvWDWJTvH2Xq9PR1/vXJCAz2t+le9KARNPPSVqrz5
                      bqU9qBh4vKHmjD12m4O9AGP9ucDSODtGkGU9XY6ZPSC2vDz5EYY9QJ1ZvB6Eq70ApQO9GU23PQDj
                      uTyQwRc81ywkvZI2RD1pyMA9QmxpPWZ5Dr0YtgI8HG8NvTMlmj1SHxs9TFsAveG/jj2aVVC9Y7ab
                      PYDSNzqwyAq8ZXC2vffxcr3LDLc9T2CzvTBSWjwtuMI99A2wvOg6U7xAC4w6PBnOPKD0CL0AZsm6
                      ClKhvZgxu72A/9W8lN+EvFO/Ib3x1Mk9MFLCvWCWWb3AZi+7XsJ9PX3rfb2v4Yw9hs5iPYDYwrsA
                      lA66eGmyvAx+rLxUAbc8QP1oO+4YMD0+kFI9QwZkvWAV8rzsr9C84HWjvMjPlr1Vf8c9mA9CPDR9
                      Fr0AuIm68mNWPVgIyr1zp569sGcWvNBWSrwwrwq8CbzGPf0yiD0JN7U9ejNqvRp/Wj1jjKg91Cq2
                      vK4KPD29xUq9ifKyPRo1mb1A3Ji8hyS+Pbp5ET1lacA9+LuWvVu+yr0YAII80iEDPYUvib1yhyA9
                      eu4IvWgot7xmGBY9Hi9nPXLXMD3CCDE93l1mPb0Amr1pSrI9bJPDvGAHKbsyExo9QP80O6KBaT14
                      k629kZGoPRT/hjxlXam93mhCPd6qOD3enZ+9jqUIPZqwnb0TgZ+9a4qlvYlemD3ApAy7EIhgvfK4
                      Xj1+kQ89eAWmvQC2izpSGo29xM7tPFlVlT0dikK92Oa6PBcWlT1wikW8MhVuPWbCm71wID888XOH
                      PddbgT1ZAZY97xO1PQDwozzypIW93rNJPeCrwjxCyTk9gE2gul38br2X7LW9UYqXPe0Iqr0Y3QS8
                      vsg9PTuboD3A/EW8J3XGvddTQ72Mz8u8ao6mvYiPszy1xaE9nQ9RvbQe/rw0gYO8w1bDvQBDt7vi
                      r4+9crxoPSfZv72IUty83iF+PVE8nT1MGIi8S8yOvd00iT3RQ449oupMPbfZsj0REq89qJ4xPIBn
                      LDwhXJg9QO0yvGvNjj2ahx+93VwyvRGkwj2KbDW9qMGFvGEimT0nwWK9aFAzPB1RtL1r/pi97ahc
                      vVF4sj3rIbO9Wi0BPRkixz3XfJI9qCJlvMzzgLymaBa9HBUOveCvnrzgr4k7OzObvRonZz1oYLy9
                      24/GPX/nwD2AItE64INlvV7JaD3SbW89ehVyPcoaT70aqH+9w6CFPei+KbwijjY9cuV1PXL3bD3I
                      8oK81AyDvVqzRT0Hdz29YN68vcGvgT3Q3hE8xweGPQh9xjwM9KM8ABPSO/4qPj168hg9UIDBO9qd
                      GD1tIxq9Wr2zvdKqMj3EIYy9/UuivdjlYby+3wE9qmtdPSYhi70akEW9xEcOvfCtL7zCbVM9mh0r
                      PQbkOD3d+sC9veVCvbZyCL3z3Xu9wGkXO+htlTwt0rm9APQpOiQs2zywxds72sM4vSjwnb3Ow0g9
                      4LjkO20Oer123ZC9Iz9ovfCnu72Ld669FzGAPZ2SiL1YWRM8kMAzPNCRT71YwX48bF2FvcgPyb2K
                      mky9I24yvVXZnT3j2JE9gmcbPe0Aeb16Zxo98lwnPTCgsjugbYe9EvtmPcoIEL33qLY9nx68PbC1
                      dL3mKmM9XxmfPdpcub3GA309oIyUvNvmrD0A2Oi8S+ayvTIJZT321FM9pJrxPGC9pLxgBZm8e6Wv
                      vXGgoj0moTE9aiFQvVQ/sjyMCIq9gRG4PcRb9zwXNCm9SROOPb0DQr3Sols9MQiQPQfYxb1mMhK9
                      LDW8vADbO7rIlcO8Kn+ivVjDK7wG4CQ9JOf0PHnivD1jjkq9/bemvUDClTzaVXe9ABFPvcQy4Dwu
                      o4W9a/PFPYDD1zutK8i9cxKpvaalUD1iTSQ9G6HBvQIbYD2wZte7V3OsPWC1fr18v/U81HaCvXbm
                      dD2SbSk9MHAgvbEzwD1NtrW9nc0evTa1Cj1Qrge9eZmoPT34Nr1llqO9nW2hPViRiLyANge8mQLG
                      Pe3eIr3QDss7kfSkPVKVxr1daje9tloTPZBlETxjJ4M9IZuzPZLrcT0AmHc7wca9PZnRhj0/4Js9
                      YpdMPYDdy7yK4E89ysVxPQhNwryw7aS9F6qLPQDU9zgAH3w7bilNPbpikL2tfZG9A56uPXDeQrz6
                      I2q9gH4HurBfC738a4O9XaNHvQonPL1iXXA9AEysupZFCD2grCG9rIbBvHBwdb0AU5o7Lu4yPcSx
                      6jz06MU8GNucvKmdmj2P6LW9NLGtvBrkfz3d9aU93RlLvZjjJLxyKyQ905iPPYxm2zwnC4A9gE7A
                      u1J6eT2tz0C9MmkZPYCrbDztmsA9+x2dvTDOaTw4oqa9gq5xPQTs4jwyHBM9uiUYPdUJrb3tUK49
                      fv4FPaJyDj34jpi8WrM4vX/OtL0Y5AW8JOHlPMbWLT1zuMs9yvxnvUz0g7319Ii9WvMkvXPsHr10
                      04S8r5jAvT8OnT2FiJ69cDckvfqfjr0w1Uu9mlcivUeWfr2gx6M8WA+EPEvWsz2Qi1g85vczPdgc
                      KbwQyFG8IAxqvfdqxr3kXc884JqSu/iT8rxO9nQ98Va7PfCkUjxUp7A8MrERPY8IrD3sHaG8S8ug
                      PcASrrzNS0e9gC5XvEIRZD2YSom8VeDGPXxi0jyA08C6sAhLPDCzmruxrY09gKjDu3sfpD2Ub4I8
                      w7l5veIXQD2zwsS9/jYnPbnrjz3wjm08wUOAPUTw3jzxprM9oOKGvCraLD2WoRU9gC8dvfYZSj0l
                      QsG9AGdyO/efu70UyhS9avknvQHAhj0Yu7E8T0rKPckJsT14mrU8+j6+vY/DgT2A7sI7/V5cve70
                      Wj3C5R894C/cO+CWXb0ycEY93cNmvcAE07o21QC96kCYvSbXaz2edT094lNXPdSRsLydC5+9YHJg
                      OxABC7z+X3c9CmsXvW4xdT2+LoS9YBIku2BFTb36/nO94FHIvTUyy70qTQs9YCeMPEBDnjznc4k9
                      WxOiPawT5bzgPaO8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NjExMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMTU3NjExMnEBYS5kAAAAAAAAAMxf3zwz8by9qLauvRNUL73AEmu7I4+PvbWbkD1isby9
                      F7pbvdbIBr367Tc9vntMPRMrxz0bHMC9UukYPd3Ixb1isVc9BF8CvdOqhD0wbX69CmkPvQx8xrw9
                      UZc9YGmIvA5hlL3fhq89ikMDvRMCJb0Yq1a8Dc8ivdOgf73qLQm9KAPIPHdysL15W8w96pCVvWq8
                      wb0elm49gDeUuiCbTr2ReLw9tGn/vPm+iD2o9X+86Gq7vOJOUz3A6a489lJ1PRC8ULxtXZC90caq
                      PdmOpz2IwOG8oqpkPUCfEjsU2dq8MpxGPc1eYL0Zzq494YyUPX0rX72aMsO9Bk5vPSH6iz1do7M9
                      GdGtPZr0fT1MJ5Y8UX6dPZ57bj3aZLe9GnoqPWJDbj0KsQg9iiVOPburt72wKAe8kL08vABLnTww
                      tLC71yOyPUVSib1MrZi8qDa+vE1yNL0rfac9gNg6PCiIfzx3ui69wKBGvMtCyj1t+TS9yn5LvYCY
                      mTpUb7Q8fKSKvUacDz0QKkq9Q46xvbc8uz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NjU5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMTU3NjU5MnEBYS5kAAAAAAAAAAIeaz0YDVG8AA9CPLn2rz2M6Nk8sFeWu9BWlrsQw8u9
                      cBMlvc7GPj0AarK6Qqs2PZMbtL3ePJW9gNp5vcuehj1TyGS92qgiPYumuz3CwBw9Oxe+vdakDT2K
                      zAS97enCvZBTIryyOCY984I8vTYzrL3mgRO94OWouz+uiz03YME9IIbJvAONZ72VYrK9s2OlPc9i
                      mT0AtyI7W1HDPdB9rTsx7p09rvIQPbspnL1Qpmi8Ttp9PWBBzrsiBwg90tNnPYxfjbxO9GE9rmun
                      vbhLiryiMRc9W7mYPYCFa7puUQU98FM1PAxihb1YOgS8gA2RuvhhpTyhwbY93S+AvSLQSz2gs0I7
                      CsgWvVvvwb3VvZW92MyNvKL9dj3fva09ITDBPdDU7Tsa+om919lnvd2QVr2aIoq9gK/5uyIJSD1o
                      y6+9MM19veqOaL2QQGm9ekI5PUB6NjzXcqM9AG8fPIStDb0a5Ia9VDbiPGgf3Lw6WDw9Q7wyvSiO
                      d7xAycS8CBnwvOYeBD30eNQ8ANUaOhXrmz0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzMTU3NjQzMnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzMTU3NjQzMnEBYS4BAAAAAAAAACixG7w=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        3/HuO6SWXjxs2GU8bNhlPNWanzv52sA7HtLlOx7S5TuWMNI7EhojPOBXRTzgV0U8ljDSOxIaIzzg
        V0U84FdFPPNsGDwHWTI8VENJPFRDSTxHlMo7sme8O9T4zDvU+Mw7wjHgO/mBAzzfiUY834lGPMIx
        4Dv5gQM834lGPN+JRjx8pSw8mIorPIv4EDyL+BA8H3jRO6MEqDvoxIg76MSIO86QzTvA1QE84N+0
        O+DftDvOkM07wNUBPODftDvg37Q7fKUsPJiKKzyL+BA8i/gQPB940TujBKg76MSIO+jEiDvOkM07
        wNUBPODftDvg37Q7zpDNO8DVATzg37Q74N+0O04c9DszBoM7VcZ9O1XGfTu0ujY8gDkXPErN/TtK
        zf07ycAKPLvPsjsXyZM7F8mTO8nACjy7z7I7F8mTOxfJkzv5Vb87oYajO0PokDtD6JA7PvcPPPLL
        GjwCSQ48AkkOPO4VAjwlxd07UeWSO1HlkjvuFQI8JcXdO1HlkjtR5ZI7Ee2oO6UDqju7LMk7uyzJ
        O/k6CzxRlC08GT1VPBk9VTzQ3w08lqDgO9M9ITzTPSE80N8NPJag4DvTPSE80z0hPBHtqDulA6o7
        uyzJO7ssyTv5Ogs8UZQtPBk9VTwZPVU80N8NPJag4DvTPSE80z0hPNDfDTyWoOA70z0hPNM9ITw=
