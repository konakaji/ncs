N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNDg2NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjkwMDQ4NjRxAWEuhAMAAAAAAADYPAu9djbuvSzJ4b2bKiS+OyinPpb8dD7AeF09mMla
                      vjjZkr5mZjA+ZB+7PRB5hL7QBNs8K4s2vnhsfb5YAm+9AktMPnBRor745hm+3m9APqmHqT4zTl2+
                      ICBNvKZJDr44bSq+6jNUPqoRgr6bcpg+jjuBvsCp4r1oNl09gUCDPjhJT74WDKK+enMuPrnpkD4Y
                      GyC95qFhPmK4LT6kKu49kIazPTNyjD5tgqE+xttZPp1mgj4dT58+ZaSYPsRnsT3gJhs+CC1HPSDF
                      BjwY3Fq94JatvZHYjj4DB4W+Cs0ZPrzpmr44dh09ODxCPT7Fir6BY5Q+K2mnvna2CL649GG9/vA1
                      vnaWEb46NH8+NilcPlDxzr1Kf0w+ip+OvpJNTj5XHoy+qMEYvoTMpr6T2jS+WN9xPTjxDT3WI8i9
                      AJ7DO6Snmj0qFlk+QL/MPGjNLz1gSGW8pSaqPmPTk74rJ6A+SvNuPhyd973OanS+erVXPugqZT2o
                      TWm9KN0FPtj9m76BrYs+rzSoPkbeED6b616+UASzvEoENj7Qh7+96+SdvkBhbD3+NRG+AMZivaiq
                      Xb6grgI+ZDCAvg66NT5A7cw7jDSePYASFrt7ZoY+uIAzvuLOVD7K/1Q+/FDMvQBN0LrZIZY+hTuY
                      Put2qr7iiTw+1rE5PipwMT5Io4G+ACmLu9LiaT6+4Aw+wbmSPtcZgj5AhZY8PROVPmDiYDz3Qpm+
                      VpJsvn09nz6L9YM+ZrnCva4JIb5Yt149BE2EPVr2gb7L6p++gDlIvYm1lT6692A+6G5JvWeKgz6q
                      Bjk+NqKTvot1lT6bUWa+wKi+vJYfZL4A7MS6ACvlvEFvpD68R+m9M2uNPsaH/b2oMZq+uK1uvjBG
                      xbwAEn084cmaPjziir3+Vis+H4qUPgi/LT0m3Vs+aEBOvlzFub0ObgO+6fWcPuWlij6OAF8+oXul
                      PgX8gT6I/QI9D9eMPkAE2DwQFfG83o6FvmiEID2ky8Q9226cvkpENT5AzIw98N6RvHY4Uz4AOfo7
                      d1uNPhKVjb7qjm4+KM9bvjzcij1F4Zk+k/eoPjWziD7AjYa+0EOoPZ51bT5Z4ZE+mFsWvVYAW75O
                      /AC+M4elPn2dlj7Y226+YE0XPgA2JT2QlK+8uRSNPmYngL4+9Fk+iFVKPUIep75CKWk+kSakPren
                      iz6TwVS+sAx/vgCm5rwQkpu8jgYwvq6mVT6VV5A+PKynvl5KJT5+OBy+Hp9GPpKJbT7+Jyy+3NKR
                      vgDKmr5DJFG+kiRBPhc+qL4Wfzg++AF3vjFRjD46wAY+5pXEvfwhnb3wYyo+QFjgvFuufb6Ax4y8
                      bjFzvsJrLD6wUvu8AIQLu9Z9dj5eyJq+gAIZvBCWwbzwxK+9rtwLvu6GBb5caIq+GDEDPrbabL4p
                      46I+TnKYvo7ELz64+Rw+ocGWPhhkCb7A5ZS8msgOPh52Hj5JAqI+cGj2vNxGnL3+3ZC+wEucu3Nr
                      M76TD5o+YJxCvubrVr6NIYY+AMVxvEAmujwre5g+0MzyPU/Onr7gaku9kBCuPHNTG75Ebp6+YvqX
                      vmBo/D0MoeO9xLiwPe2HkT4ADjI9wLJFPXjsdT38t7q9gKc3uyjLBT3w/dy9mwRUvpZX773zCku+
                      k/QlvmzIub0R8p0+fK7UvYPFOr6qsGg+8IPLvBzkuj0A1wS8mCxCPY2hlj7g8VK9cAjivIw+sr1R
                      bZs+obmZPtSE8z2wyrQ9EPYxvh6mcL7y6yo+ANmiPRzVhb6Cu1Q+iN6RvsQyyT1GkG2+pj14viCo
                      tD0WNUs+G2OUPqOyXL4eS1E+Kyozvvw5pL5ilF4+nFeFvUNcJL7wzqS8MLG/PO7GfL5OoX6+CgJW
                      PrhSJD7RQo8+gPnkPJhVCb4yT6a+DFDuvX6Cer5kxqO+ucyaPi5Ea76yYS0+4gmXvg58ar4Lhn6+
                      6JtNPcLqgL4A7Rm8NuP0vXeklr6KTzg+au5iPg8vor5gnhe9GCRxvrTWnz3g3bI9wntYPmLiHT5b
                      04A+DKOIvrhJUr2ySkw+J56VvjhzHr3wtky+4N8mPOrADj5Cog8+R6OOvgrDKj6AcQo7IEhrPKAG
                      171AHIK72JwdPYoCTD52vF++4Hn3PdCw7z0U1bI9xgxkvjP2gr48tpu926VBvjY1az4sVb09nF7a
                      PfjWa73z8WS+Cm8uPkgfK71AaVM9bL6ovW0bgz4ciZ2+MuM1PtbHGz6w6DW+Km4QPuDvmb3YISK+
                      47FSvkZQpb5ro6I+IcecPluJW77mWsK9AIhFOwbpqr036JS+qvQQPvYmPz7rVqc+ygpOPirIfT7D
                      y4G+Ylo/PoARXT1z1KS+sN42vvBw3jxgpHk9YPRFvGqvWT4gfEM94AhlvnJGRz7LcyW+ABo4uxBh
                      3LwrZha+gN4+vjC43r0CE4a+ie6iPgSwuz1c3789r5qpvjzBjT2CQkY+2MVyvfCyuzyrdJ4+v22H
                      vh4ORL4W73g+YM57vgZnvL1wpcy8XFHlvRBT2jwu8WG+uMscPbsmYb5y73c+gO56PLOGmT67nYI+
                      2pCWvmJRJj6eCDC+DfqmPpqNeD7AGjy9mEQbPbiwbz2mUU4+wyxZvk4TAj6EEr09CncrPtoiTz7A
                      W5q8AKCnOr0nnj7jz6Q+4auDPu4LYj6q7zQ+AGedPVDquj30BpG+qo1QPsCrtD2Aaoo9QMP2PKay
                      aD57qV++ZMLTPXNtIb44U349oDjtPX4Mdj7A+n49BuAdPmBwzD3ceI+980A5vhgZI762iEy+48qW
                      PgDoKr7rYDC+8G7gvb47U76yM00+7PyCvk72Ez7QIKE8BDf0PcOmlr4ACfk8xjJQPonbkj7wUJm9
                      bB3vPbCNsD3wyM893mYWPqb+LT5emnG+ftllvipro75F3II+j3+ePjpEfz6Cm3U+n2apPp5EED5J
                      hqY+0DPwvIbrNT4t7ps+4F4uvgDkyLm8hdY9Y75kvoxPob3wLa68/mNsviZZOb7m9yu+migMPhaZ
                      UL4TaBu+UjyRvsBmnLuK642+KrQ/PsOYd74+ODe++oNsPvAJi74A9X294xMcvvDY6b0cXrm9VI2h
                      vnvKjz5WjzG+GEV1vgBMWrsUmZ2+nC6gPaP6kD5QFBC+WB5Ivp6fHb6WiEk+FKCPvcUjgz6z6oE+
                      PF3WvYAicr3sltw9gN1KO6aGjb4sILe9BE6NPaX/pz5WKVs+8hiMvhgLkL64DQG+EGL7vTugnL4A
                      biA+Gq6lvujICT0yeFg+XpyPvpIfpb4y9Zu+gE5CPULjaT5GMms+wFMuPZuRlD5yC1Y+Qyd9vhZ9
                      hb6jsXS+wpadvgTymb4g1fu92zFMvhOVhz5Y7WK+YPQGPOGVpz5Yv2K+7NikPYoCKD42NCc+AKIA
                      Pf5cYT6UaMI9QrikvrAb570a1Fs+i4KfPumWpj7wjKk9tY2KPqOhhT7jdTS+gPF9vRBduT3zTY0+
                      TeCcPotfMr7Gwgq+OAhdPXL0dz44XD69bIiAPbASujyO0Bm+wMm3PeTTtj16930+nLfHPWZxJL5I
                      wRi+JTGOPg5dl76AyDO+psFKvtCkXb6mlFw+1jcLPhDIc75OImE+Lp52PlxDhL0AQs+9GLd1vah/
                      Jr1gaJm+B56nPjQMsj28Lds9KLAAvuvrVL6cQYi+eqJPPlyHyr22RFS+8IicvVjrCb0qtjc+phIW
                      vggzLr5IRVY9U2Shvmfsjr7Gcjk+oO2hPR7dBL4AE2a8pwWLvgDSNDsz+Cy+sP2EPTC0fr4IVXK9
                      gIocO44Cbr5qUSw+wOmSvi41Qj7LNqq+PuMKvoP1gb6ISHc9wIrLO+DeOr0HmoY+gslWPkCj+Ls0
                      FIy9/X6pPqAdNr0r0IY+KwmGPszChD1GbfC9biBFvize3r0ARic+LPmpvXJSVz5ahn8+ZOb+Pfac
                      xr1Y3wq+tIfYPWEejz4A4v07hu3ivXwsn77LoqQ+ULqsPPkbiz6A5wU8gLl0vWjnCb309789IrtR
                      PuN/YL4mWIa+2LU4vv7dQj5kD6G+ALwAveDCmT1e/U0+HEWQPVPdRL6osSW96tZkPs4Cjb6Japk+
                      sjtmPqC73b1rkoa+xJWAPU2WgT4OUF8+LkFevoh6dL4oPmi9TIuTPXivYz3RJo4+FFWHvVmvmT6T
                      nmO+hg2EvpF0lD6uT5O+PIqYvbBpWr5IugW+4M9Dvk0TpT5AmMa7KDsYviCIk73Gj8K9oPkVPmPX
                      lj7K+lU+uxehvpJAKT5OhHQ+WOAoPaDtOjzaOEs+uqMkPmAIIzw8X9e9Ckc+Ps5bRT6AOSm8/mOL
                      vvNWpz7Iiky+YHM2PbiLib7AnJ+7oOM5PFg3B72qMUU+ALFWvcPuFr6o3xS9w545viCtcTwLbIu+
                      8/9Bvo5YYL7Jd5I+TO7KPfBp0T2wrpS98LmrPPDtOL6V3o4+jOaEvSDoJbzy/YO+EGu6PFBq973c
                      XbU9ozksvsAVL71gvZC9gnpFPpi8hb7UWJG9+yZwvgDEID2sI6W+OKkNvcyqxL0IElO9NIyoPWfG
                      jL7AdPY9dv+yvcbyX776yGU+I8tavufHh76Glxu+AAwzvg+yhT4ULKa9CZuWPoCmMbw5hIw+YD9f
                      PLDXxb1s56y98OIBvuDGYbwaiKK+9pY0Ptxaur0zggK+SzpNvlDzpD1Qf5g8erQyPviXdL3ZZqY+
                      oJxFvsa+QD7Gn9+94LlOvqYTaD5gsDU9+iknPqp2QT6ApP+89JSZPQQYqz0wJ3m+UMqMviqyej6r
                      wUK+HPCOvmCwNz3u1Zq+YNgQveBZAD1id0E+phPcvVj8Bz0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNDk0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyOTAwNDk0NHEBYS5kAAAAAAAAAHhRTz0LuDi+0K/xvJnLoD6uP2o+ULnpPFi/Dr78Na+9
                      GldcPsxs8z2swa+9ywJrvjSIjT1f4Zc+K8uiPoaQxr0b0iy+HrcqvkB+ED5k+5y+7RWRPogzXT3U
                      ocE93J3NPUasr70KukM+SHakvrAjpLycNIQ90O27PQBV9j2t24s+JtikvrALlL0AKRU9AJNXPUqv
                      GT6++FS+ZI2lvrKeaD4tGZA+QDFDvg7tHr73JIE+5GOaPfD01T1BH4U+AEbYO1ZrQz6Bg5k+rvlc
                      PsJjQz4QDc486h4+PgG1nD7QO3G+ILQGvICDXDuAsBy9AWuHPtDouz3+EW8+eP8GPqZ1y73G9EK+
                      sL6nvRgMqL4C3Eg+MyFevk+Fiz6gcL89glE8PkBfqLvNpJ8+VoGLvqDs1D3w5409TayZPhghOr3W
                      ZRm+VgYdPgAsFLxwWtS8ThQKvoi3cT1oZ0q+ry+fPrKBQD54plo9vPqWvQCMoz24mGK97vpvvh46
                      M75ANwe+ROWgvoGIjD4A5C286A4dvV9Tgj4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNTAyNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjkwMDUwMjRxAWEuECcAAAAAAACod0A8BOPPPADqGbwZxcI9tp4CvZ4pCj3IaIq9XN0G
                      vVF/nT0s6de8RisHPStVhD19bVu9UarMPTonAD1y8CI99UyTPQNCTb3EG9E8BTe4vSnhlj0AJpm5
                      g1O9vQrZor0crvI8t9GGPQgI2LwMx/I8gOpKPEPpqD0IP8Q84vepvVMUvb1g2mS94NGuPLPao728
                      xfQ8YAu7vChWYTwgnaG8wGrMvOLaGD0WTDk9gK93PBgmJbxUfIM8GG9UPLgPxLweARI9DI7KPAcP
                      tz2okl48xPHbPCKRXj1TXjS9q2ahPYwGmDyVepg9sJOMvaCnVrtOsom9k+CcPX6vCj2A7rw7sKEa
                      PMCPH71AA2+94NnhvKH4iT1TTUG9JBbwPEvWsL1QjX29CAmLvByCA73QU+G7QISDvaIfCT0tmDK9
                      wACavbqLGz2AR+S66CuWvNeolz1KIJC9UooKPVAw4ztHHDe9+icDvXi+u72jjTW9vd1QvSsmqr33
                      TEK94DFovXeVHL3liZc9TjmjvbSgoDxjHnC9+0rEPbI3yr3iDVI90EhTveL7xb3UUJs8XUzJPaoy
                      ej1qclu94JM9vcCCejsSrAk9qpILPRRF9rwojA48FWaJvf7dbT1Zzso9wnZyPXpoDL3v/cM9QpA2
                      PaYGBb2Tk1a9oGTyvEZwbT2gIiC7sLErPEsHyj1j+Cm94GS/u5ACBbyK77a9vqoNPVgSNDxw0JS9
                      QD4nPLjcjjygCF29gLbru+6WqL1QNtU7mipEvWLSIj05WMI9zGnZvAeaH73q6A29oLPUvDVBi71j
                      tsc9EYaxPYze9LyiAKa98TqxPSB+/Luhj7o92zmZPbu/pT0ovkS83yTDvQcoKL2At407fnFGPYnJ
                      mD2F68S96AoMPMBW3LoQCr69fStIvQzUujx9UGS9E0ZAvYs8or3kNO88J51AvVoPqb2ij4S9wjqS
                      vaxolDxij0g9zx+RPSIBJT1veKg98r4RPbQO5rx5vMM9wONQO9o+Nz1hc4I9h2y9PVftuz2UJbQ8
                      0CJBvKaApb2wreQ7Y6K0vTMNrz3qthg9/c0fvabcdT0maQw9GANSvOqBIL3ygW09smELPcu7qj1s
                      7sO8QnFsPWvutr0Ag1e6NUiHvQDG6DrACEu7I0mmPYBiuzpCRzo90Jh2PCMNUb0Qrzk88Dw9vQBb
                      P7xSZS09uuGuvSBXgDyAHt076FA1vHJXKj2CMGc9+pM9vfHMoD3ioEc9QN9uvQU3tj34KIq9Fu9Y
                      PXTQ1DxgOTy9NObMPJYXPz2JxLg9AEYSO+smtT0ycB09/f+vPS15rr0A5Zq8ZpoVPXi6hr1ozzM8
                      t13AvUCnwL0Arp25EB43vHp6d704DsO9cC5ZvBjWeDyQsKm9o35JvTCqJL3jhkS9Vp5/PYEGyD2Y
                      FJW9YFaBPICZ1ruLCYw9UokqPSmuqD2q7Ma95TmuvQAQCjxu+lE9jJuLvFHfmT161za9CNvvvIMU
                      pL04o7I8rIqUPJDAFzyQR2S82c6WPegkn73A7Su7T3SNPQjMsr1g5c+76IBKvMYMTT0Gp0A90G4W
                      vZs8mT22hBA9YJH6OwB4UrrME928gIUrvABBZ71651w9OsGHvX9tiT22hxA9aXTJPfqvTD0t21e9
                      Fg41PfT+2LzSwmY9L0CEPalUwj1OoYa9ihEgPQwv4jxwXxg8EoVJPUbFEz21c6M9ayGSvUd1cr2o
                      BZK847tHvUy1sjzszNE8zAmQvAMnkL0o17M8wDL6OtD/yjvAljK7kA4hPOgNADzoFn68QRitPY4g
                      Tz2Altq6Q6CaPQCHB72OewM94KiOve83kD0AzHI7dqysvQaoCT2wIK69o9xcvQBHoDvmNXc9o13A
                      ve18vT01aZA911W5PcCl0rzEodw8IImtO9TjrDx3b6Q9DldwPSm+kD26Oqq98p4LPVudpj3EyvY8
                      7k6RvT6nJT0AKIS93WQmvdFngD3z+W69oEthvYBfJL3qcDi9ZkcfPf2Duj2qqZS9Up8lPVymB73j
                      k2G9dMXFPDSWjjyttTa9KZuIPZBuUzwdIsK9ANhmuKuAoT2gGZy7LN7oPNwf8TwZf5c9FjE1Pf0W
                      rL3aQ729dArOPGAAEbt5kKE9R5i6vQKTLj2w7W68gT+QPUAEvLwBH8I9bsxoPWh0zL14vsM8JzeF
                      PSTYg70Af3S98rS+vWBazrxwxyu96S2PPZdGIb2Soay9ClMqvUlBjj3ogUw8qJjGvFR45zwtd5s9
                      bBuhvCnxiT0O0iI9Ib7IPcgEmb2nRj+9DVKoPTWjvT0S85e952GaPWIqGD1qcSY9oI+evNmKrT1S
                      x3U9N2jIvbACvjstmKk9YOCfO31CpT2wwv27WwqlvWA8PjtLQ6i9pjtiPTDBqztqFZC9iP6+PCg6
                      bbywmHi9Ki83vSCq5bxYqaO82l3LvcxVvLwRsrE9zq1HPRqamr2OzY+9YCHEvfD8dzwYAeW85124
                      vb6ALD06uK+9tQqSPdYXpb21jpy9X+TDPSWlgD0mBxQ9IIK6vap6bD2wCZ29Y7rEvZ2MqL0AGLk4
                      Lt1ePYpjY73wKU+8WlypvcoXOz27Eqy9bbE/vYHPiD0KsGY91kwoPaj3ArwAJEO8hqZ2PcCiz7qA
                      csc8DjA2Pchb6bxxu4U9MOitvafrfL2hi4Y9WlBYPcAaKb3SMUw97EzjPMwnmLzpxpE9WvVvPbBU
                      hrvo+We8+UGhPQx7mTwCkBM9YfnBPexc8bx2bTc9LKGnPGo3Ub1A56M8VLOSvKAm/LzvcaI9l6Oo
                      PbKaNT0tV6+9yKPnvKAFwDwNuW29oSzEPZC7HDzf+LO9bdQnvU2sOb360Ue9m1rJPbGhoj2tL7m9
                      8p6AvSlzlD2B6JA96TCZPbK0lb2dVp89ykFKvVEQxj05Tqc9P7ayPeRzgL1Tcpw9YvGkvTplyr36
                      1GC9ETe8PcC8Ejvmfwa9cMIPPFv3uL0+2zc96IuevOw85LwqdmY97I/8PAODPb1Z56E98UefPaVh
                      gD1txb49LNjKPEb3Vz3mfGc9u72IPZhkDLwMleo8fhtHPdFfrz2zuT29+8fKvSPzPL0WuEo9EAsc
                      PL2PUb16mwy9jET5PBAdq73ArOG6gNaTvRCQeb0z0lO9CrymvcZJfj3Par49AIxjPCzD0Dxgw8q8
                      0GfNu7QwgTx8K4S9KZ6lPbaABz1mow49DBzPvCdupz3YEqG9F/6rPQJ7Oj2Kx4O9uLOYvVJkXz0q
                      Dri9kB88vADKrLqXfya9A8hJvarpo724x7u81LH7vJfzqD10D/W8G1nJPXBuoL0OvJW9PbxhvYAm
                      p7vA0zS8xpgCvYmApT2pHcQ9YwGtvYBMf70VxbK9tBPQvNBejbtCOrG9KMSRPDHtnT2worQ7cBNM
                      PNjvqby6lya9AGWGvQowUb198oU9/xuHPQX2vb0oG8E8QD9wO9eoIr2Khxa9mPGFvTJKgr2ZwYA9
                      cQa4PRY7ir0OV6u9rLffvLugkz2cy+s86rh8vbCaxr1KMVy9NI/ovEDKTrsrIIM92d25PVtdv72A
                      z7m7WiA4vaKwyL3HjMK9p0NPvUpndL10b8k8XWmBPRzg6DwDV8a9jwacPWA9+bx0Kag86IrOvO9B
                      rj1DUkS9YxynPZT6DL2A5So8CQ+XPYDiCLqg0fq79KIYvTnWrD2WA3Y99ilWPUju3byTskm9AAlx
                      vEmkyz2aZZK9XuwQPZB1ALxsbg29Y7nKvYOgJL3iqVI9wH+6vRC7Wr0pkJY9zlOdvRTln7yy5DY9
                      f9WGPZKhir1Uk9s8QHzjvFStxLyyVCI92PeLPCsVtD3o6vC8PoRVPdUipL3Ckzo98GdgvMPFiT07
                      EKm9aDuQvKEPoj0AJsM81H3WPCyxibyg+h29AKtLOvIfET0u5WA9QKe9up3nlD3mQIe9ZuJgPdj3
                      m72SuHk9AOV1vMxWmbyt+bI9YFhOO1CeGLwKmS89uoM6veguEzxBCoM9jEn9vFh2vLwMxYu86KTV
                      vNgDCTxDj8i9xH4XvYLAYj1UJp68veKkvQcqdb0T9Fq9BeK5vWbmDz10Tva8AEkIOhhcob0jrYc9
                      Q2+kvZgUZjyg46G88JhBPJO4U70SFQs9kTCdPf2/Yr1l8449eqQkPZDdLjywr6C7Hb1xvaPRlL2+
                      Nws9OPqcvMjzvL3nsHG9C8i4PdPqVL3pY5I9YJY7vaDyFr11RJw9GO5fPJKHWD3XkcG99fKNPYCB
                      iboC4yM9bMCRPLdjUb2CLCk9qIWQPMByyTqCTgI9qhUBvfRlBb0ohNy8glNtPXmRvD36YRQ90BNm
                      vZCgS7z6RGK9srR1PQFFwj0KmLy9TKyHve4hXj0yQHE98AYCvB+Zrr0ACzM7cYyTPbhj6bzUbb68
                      MoqrvZuvob0ED9Y8UMtkvQANYjtzqka9QYWhPbydi703DGe9wB6cukWXoz0zp1u9ANb9O0AjOL0P
                      RI89aBrovHsPp71jeMk9F5bGvepOOr2YKxs8sLcSPLkHqj1Y1Dm8wOEOOxVvoj04hra900TEvdIf
                      cj2Yfh88YNQqvbSv+7yYGty8JdGKvcPtoT33KEG90+OlPburnj0j1Xm9YP1Ru6nkmT1d+oU9soVC
                      PUMUG72d6La9gOUIPCLMoL3oxhY81lMaPZwy3DwggWG99AOcPHolSr0X96s9bfm0veA857t9JU29
                      7feVPQA2cDw3Dak9YvxoPZRutLz2XIe9Asp+PYoGTb17+Za9yjRrPdG3nT0P65U9krAkPQl1tT1i
                      mVM9vdJSvfEFnj1AXn487DTVPNDthr3hhMM9WPEePJgVdLzF1q49Tjp5PZh1rTysAJ+8DIvsPOhd
                      tDx3G0a9/a8ave8ds71yCGo9ImA0PcqXrr0wCP87EPsbvXxy2jxCqRs9cZDMPSxJmLx+jUo99/oq
                      vUQeEb101Pu8PaSBPXCxEr08XhO97EmMvKDRqbyn+ju9LyejPYIjaz2nGke9CdKUPQAglDoQdyk8
                      zcOxvap9jr3oiPK8/doovQhzmzxSQaS9MNu0vSo4xb3g7hq9ry2wPZJoSz2pEog91NKZvJQ/q7xt
                      7qK9s/6kvSGkkj382P08kHsSvK6jdT0A02y7J5CLPZDnHb2UrsK8CpRUvdHYrj3HAiC9QHdUPBDf
                      SbxpsJ09gd+xPbJ2wb0jyL89hZ+gvfCpS73zL569QHIeOwz1+7x6LkY9kICTvRbKVD1RAYI9ZBPX
                      PFRgkzy16LI9s1jGPZApbLxm9KO9wa++PS4BNz1AD1U8rR6evX2oJ70G22Q9QmsmPQBAITeAYL87
                      dDDVPJ5idD0dUk29qhEzvVNgmz0c3808dO6FPKUnpr01naC9+eOIPWT95jybM7k95PUKva2Fmj0V
                      04S9dL78PP9cvT23Wb49zDPqPABghDsYQqm86NgWvOLhAT0GLgq9rpGavZBRB73Qtla8F/UgvS1j
                      xL1njsY9ab27PbO9ob2wCCk8F6fGPXddUb1sxr88JvAUPQLPyb2F4JC9We2OPdAQb703+ia9crtE
                      PVDRFL3u2YG9kgwBPQSf/zxtaSS9ES2/PfKjzL3qjzw93ZlGvepHKr0CgD49AfKoPeqFfL3lzci9
                      zZKIPbuBqb0AAOE6qLC+vEDaQbtAs629Ya+QPcPTkD2ScIS9qJlvPBP+lz0YqWy82Jf1vCNQQb36
                      dMa9SiZwvTCXCb3YfIO9wMEBvUslzL22ggi9fcqMvQIflL1QNVm9CpdfvXi3kL1iZ3g9jcMhvQ1K
                      L71L+qs9MKmhuxTchr36xw89Cq5+vS4ADD00gOS8jTsfvfEWyT0wNzQ806+8PeNOKL23bra9CUar
                      PQRL7jwfXYI97UTKvcWZoL1QE6q7WNWJPABWLTwiYGg90OvIO60kpr09NHe9FBeJPKlWwz2mtF49
                      gKnVuypwdr0qtEs9kjSmvdNPHb0jiDe9OPShvEp7CD2drVu9JkeUvcIPZz1Kd6e9wMg3PNXfqT10
                      uOK8rEaQvIYbbj2iqVk9XOUJvQhYljwp6MQ9g7l7vacNYb24Ws+8AuhjPR2mwj2l74S9hEruPGBJ
                      A7uQhXW8QrwnPaFGnD3tRrc9xJDwPCISWT2Me4K80NodPMCDHb0gZ5s8OFCzvQSS9TydHZC9kKck
                      vFNejD2prcw9FtWNvbR6uDz34bQ9bJcUvRMzYL06QFg9kEIPvEJrFj18T988znk+PQIchb1nF1q9
                      YHaOPFN3Or14RNW8fRvCPV1lg70MMbK8Wh01PepLk73A4eK8gk9GPVJKcD04opi8k8qyvWpfID1s
                      AYW9BbyrPQdLsz06o2U9w79AvWj6prz9tVK9/CrYPApUfL0aGqu9JdXKPbyv2jxC4Fw9kF8NvIBx
                      KbrOcxI90BaiOwrEVD0gD4e7bLDePD28mL0aOS69iXnMPYiJ27yyvEQ9tP/DPICGpjpdgY29oHXW
                      vLh1kL1qbQ29veJrvbWomT2elgU9V46cPWGTwj2kjhG9Q1kovforO73cqwq9ajpsPb3WZr0AOnK8
                      oupUPbo0kL0pYpk9mjMXvcuNvj3hb589c/CVvRAipb0go+e7d1I3vQzxrLw3n7o9NFakvFkmoj1F
                      0JM9PodXPY16n72466e98WiEPbF2qz0nD0C9LGGKPOidDDyD9iy9URG7PRGTgD2AE5U616ZNvbgN
                      6bxPnLa9NmIrPfOGLL2SRJC9jUpMvcgG1LwQlUc8gFOsvbChgzs/mIk9eMSrvIf1Sb3JZ6E90Hgx
                      PN8twr1acba9QBA3vLqTXr1wJLy9eWmzPR29lL2eaEU9yKKMvdhrg7yHvj69QjMTPcDxR7s/f8C9
                      QCgwPFSm9LyK58e9ijtavZtdjz3MH948+JmRvW1EYr38q4G9kPokvZADBDzIoYy8wJM7PK1ger0Z
                      T4Q9UVC5PfSr6bwQqRS9wBKIupBCX70MKBG9DGQQvVife7wh8Kg9uLipPO0gT73Ps7a9QDl9PHZH
                      q72w7oK7cLZLvNogV73+OTM9IETcO3Whnr1uQAY9NLvePBzGC72D6nq9ACMXujobEj0dfsg9e2uo
                      vZi1DDx4hbe8k8WovXk5wT3Q20+8skPFvc0wpL3Q0qe9HCnQPCDey7vYKIu9iskRPQxf8TziDHQ9
                      Qrx5PSkVrT1j4G299qh+PQCNaDwDY4A9pd+0vSAijzxU0s28rSczvacDpD1KiBG9irK/vaDYersU
                      wI48qKWfPPUmtj113IU9t/nBvYbOdT1MqME85y5FvQ0Ie72wacM7sPqkOyihOryzz5U9P6m6vRdF
                      yj0YM0o8yu6Xvc1LxT20NBO9o0SpvRcTWL3QFIE7/UfGvdDT9zsA6Ta6xLHaPLPyuD0oa4+9bDqV
                      PEuEs73jLm698VS+PTPahj0ABGU6UAcyPOrLPL0bd7Q9d0WQPb3owL2QFsu9k2mAPWgyL7weDGc9
                      U8O5PbTrE72JYr89Y2SAPSC2uzzAByg7GffJPYYGTz1hRY09DUyPvS7ZAD1gBhy7qHa4PIMPur2F
                      HMI9GlhkPU38Pb32PjY9gvQkPVqiML3/0MK9vQasvZg8nryhN6w9UM27u5YULj3E1u08Ub+sPQAB
                      JbwoeZO9VxdGveJLYj0SfV49wl6vvbjX1rwIQqu8oBCSvReUKr0j0E69MJagvUDRyb27Op09M5G9
                      vSrCEL0AnO264VyiPZgrur2t5sc9xpMRvWDFWruki+w8XazEPVP5V725+LE9KkhcveKewr0MD8e8
                      dAGMvD2VvT3AsDk8ADBSuivYjL1YlXs8ZF7xPADg/zjZEr895rhiPSGAiz1i6pG9MFUVPBhDCDwe
                      7Ao9YZidPQLcHD0IpsQ8Agt3PYFwjz0vbqs93KECveJ6ID0FQK491D/KPGrYa71E+NU8I+K4vct1
                      vD1eR1A9N9g0vYCAwrxEsNM8cAFiPEjuwL0VKp09lFC3PMZZbz2UY/+88V24PQCenbyjZDm9Jrg0
                      PcI1bT2P6J49mGiivP3lab3+iIy9iVqEPT3KQ70MqZy88q9MPWj+VzwIkMk8cEmqvVDhg7ua5U89
                      qlBNPTIvAT2HE229AEODOaCp+bsn2q09+rcFPYPcjb103v+8ZciRve9xoD0jYz+97CGDPHJBmL1a
                      diw9cXufPdBQubvk9+o8aiBZPYpbbL3A+mS7f2anPZC0KLyU4IU8GIEjPC/3iz0DupA9D2u8Pb2J
                      Zb2G9Rc9YVCCPRCVVLxb+ZG9QEvwOo1qPr3dj5c9qmh+vQudpT1IU/68qIqwvOnwqj0ApvQ6/H/b
                      PIBHTbzd4lm9pCriPHDxTbyeoXY9BnyivYqYOz0gY8475J/rPGpsIz3udI69Rn50PbqjUL2ghrU8
                      1GWevKHnhz1BSo49Hux1PcN6NL2HELG9E9e4PQS9Eb3ABnw70cvCPTAHmzv7+ME9iU6SPS1rqL3Q
                      Bvg7bDq7PIoqxb3gIx+9zp9fPcCWITvCQhs9IHojvVDfgDuY+j+8DhFMPRV/lb2o0hA8oJTYvCDd
                      /juJNKE9whRYPacAub3oy7Q8mGy/PCnjiT3X00G9NNzLPEBiFr15WIQ9GHaXPMvTuL31RrC9ACfR
                      vDXajD0wL6Y7mkFqvTQ187yw0YS7kNdUPOLpdD1Qk0Y83nAmPQeXH73GlWo9wBI2u3hkgbww4wa9
                      oJ5mvRipVTyq3Ci9k5ScPepTED0MH768oNErvbKgCT1beMW91xojvXEJiz2l95S9QIlTPPQ7uLwi
                      nri9M6GPvWASiDtTXKY9oHZSvYCCpbrWFKG9aCIsPGJWsL0Yhpk89rYxPXajJz23bIY9qKsSPIw+
                      gbwQimg8sEtvvMCr2rxwEWM8nZN6vf79aT1QGzO9yjQuPXKbsr1uJYW9QDAxuwd0Ir26Rw89smw7
                      PS1vlD0BP8Y9AqpHPYL0Yj02lam95YeTPRtBkL0F7KY9YqhzPSFpgz1hcbE9GmITvZP8tb2Nar29
                      gGraOkC+jL2otsC8Ey7HPRGwrD0AMsS7YG6FvQdNGr2aU1o9SXCQPQpdEz2XvbS9XtwWPdCSYLzf
                      68U9ACZZPJGfgD0SMmg94MyrPFICcT1D9Wa9KyKWvVtklb29Vqk9UEb5u4Azsrog9qe70LhWPEIy
                      kL03tIE9WKVWPPBNOL3o7fO8GL8VvE3qhz2a0QC9ZJD7POnRpj3RKMc9yt04Pdkclj0tClO9Gy3A
                      vTReqbxovMu89HGyPAlWrz0mxhO9RIWEvUdHqz242aK9gjiRvStryj2kjfk8RKXgPCi1hrwomxQ8
                      /ucyPT2QjL2sWr68ULCTOxMVPL3QcsY7N5RhvYDhazqOsWg9yXOCPckKtj3bJ5M96HxsvNI2Cz3U
                      Uog8MEdQPAoyGT3S0Ug9fYnHPdQ5vLzAwA87hsAbPbrOWz2ahXc9UNHgOyKlDT0GGAU9GLqZvIcG
                      nD0JDMU9VDP7vADc7TtYGwY8umsaPbsfuD1g97i72pBEPZQ4yjwSJE89uscOPYRW7jwQ5Tq9BzCg
                      PTDV1TupNow9YJzMuwCdHb3YXYa9CGmSvTQxhTzrs5+9z6rDvaf4OL0ZdZs9G9iuPQDuibtsj5o8
                      UIoSvDsgvb1I8tC8epWqvWQC2DwbzKk9ABtLPFB0ADwn1IU9gz1Mve2dr72ojMS99WWEPX3PrL1o
                      a1q8CucrPQCHjTtiSk09iJjDvTKXED2AQMA66L09vMZTGz3sj4g8kkYMPXrpJT0UF+k8e326vWuG
                      x72gAa47nSWjPfv8rT20O4m9WNNnvHL/Ez1QgfE7mDzAvTTY/DyeQpW9GJPDveIdUz0ALGC8ey6Q
                      vZeHe72yLys92kp+PcG8tj1CPAI95LjNPGIuVT2gxq29k4+zPfBCnb21rL490C0bvWDXqjvV57u9
                      WEG1vQz//zwgmtW8mIiBvaAOT7tsWes8037APXWqnL0ntDG9PSqTvXhFj7ysFqo8MEr1O2KyAT0F
                      Hqu9AFZrvO/SrT0u7J69ABOmOxc5Yr2Cr4W9Yk6+vSzHtryJko89ereLvSlOnz0otOy8bYtmvah7
                      qb1aW3o9JngTPT9Jt7168a29EK6zvVTT4bzaqca9bNHIvLS2nDxoYqS8gKyJupiXMbyIUuC8l8+l
                      PWhfh7wyNAQ9oKN5vdL9Gj1zSbw9tyVVvUwDxTzY6AW8gGe+vEFMsT33ZoY90IrAOxsAlj0zCJA9
                      uKWOPIA08jttCSq9ont1PdFItD2ixrG96M+PvShIrTwC/EM911W8PTqbF71GzDQ9Y/PEPYBnvTqM
                      XLe81WG8PVSksbzin4K9rl1MPeDQwTtw7oe9ktU9PcDE8Lpo/Cs8PBvNPFCCSjx+RW89p3UyveDL
                      cL0K91u9z8O5PUItAj1gfuE7cgo3PcCqx71Dvo09SCykvRggwjxAw0q8BY+KPcy4hL32IAs9FV2J
                      PQbwLz1sHM88l3x+vaJERz3Zt8U9AB1LuwdJyz1VUa89wOoFvH+hvz3yKgM9LOCiPFLnET2HuMS9
                      Iaq6PUKWdz0AzVu62MZKPPRp7zwYdwU8yL6NvNWouD3Ve7I9hnZLPeispLz8yd08obvDPU0vLr3/
                      0rM9e3OiPWALrL20CBK9xlAGvXOYNr29E1O9qHx1vEDVB7stJ0O9AOlCvBI5UT0D8k+9lfuXPbG/
                      rT2QBVw8zJvAvGeIoT0bPZA9py9jvVaxiL14tJ88qpN2PTrXfL35y4894HivvJ0isz2Lmo09iKjd
                      vJf1Ur1EFN48Y0m4vVBUG70ytHo9gnxOPTqnZz2qRDq9eZOWPYCJ7rtqO0Q97bCbPbgrprw+lFc9
                      Uo4DPehVT7xAegW9mPi/vdnjoz1P58C9GfaXPYCe4Tvz05C9QHZrOwy2Ab1grr47RAzaPNgIurwF
                      1I09igxDvRirP7yn8z298CNVvZMadb1gRzu7yDvKvR3Mq70odji810VSvTQ3A73IHcu9NtORvbIP
                      Ij2WaSQ9LImivNh5zrxoSiy8PZtIvQBYb7zA/mo7QjW1vX1RHL2C0mE9YM31O0lEhj2Mbpe87N3q
                      vFbvjb1SejA91dSCvU9lqD0I8aS87TGOPXWruD3RJIg96DpxvEzqg73P7qY9rf25vZhodrzCsmY9
                      4iIIPWxBBb2vvqY92IRrvGbLfz0sQIi9sPbOu4hqmzwQkY+91nsTPUv7sb3zBMM9K9iePYBxVDx9
                      l7g9sTGuPd0Mf729z8s99HiMvbHCwj1a8qO9bJHoPGkioT3CGzc9euMjvYLZFD2OqFc9EoQ+PcLa
                      dT1gtoi83+iaPaxe/LyA8Gi85KrTPGCH7ruxn7o9TnFHPUEAmT1L2KQ9IKHCu6v+kL2pUZE9UOlW
                      vAvrlD1isSI9bUxyvf41MD2EtwC99/eyPd3yI70Y2Mk8UL1WvN+EvL0d2b09sIexO7Z1CD3YY7I8
                      7jUXPf1mqz02iBA9AKJqPF1Jsb2IO6M8wyCJPVLfw70aoV69qo9IvUDtgrrBRJk96dabPfQnn7wD
                      4pm9Ac2NPRPDmr3RpZ49Lk8CPbobq73WXBK9UEGTvYz3hrwwnWa83y6zPcKTtb2gxrw7EL8lPAc1
                      Ib2kiM88rAvCPIBFyLx6ahm9ACcDPBiKPjyn3qk90Gs9vXC9P70FFJU9rsuUvSjWhr3bgKC948LE
                      vTqfFj0j38c9qQ2NPaK9AT2g1fE7gBlIPMJoBD3SFys9ryOoPerHTD0pA7Y96MfXvBKeOD2fK8I9
                      0viAvcecxT3uD189Ez9LvXDwUDwiEDo92PZQPLBUrbsAM26907AqvbwL0jzRdK89KF59PIruHL17
                      6Z29QDNUO+5NoL0DQyS9L++/vSidiDyM5968Y9uivYKaUj3NSp89oHG+PDA6GTyFIMO9YOMtO0Ax
                      n72fMbc9zlFIPfRiFr0taF696CiHvexcojyg/7u9KEihvOAY7zumMkE9P9GKPUaAGT0E2wK9KAEY
                      vPYNrL2AFIc8hm6JvYARqDoohLS9WmtnPaA6WTtRg8E9NNG1PDeztL3cr4i9sMLLu2VppT2A6iK9
                      obm7PcdfvL2yWC09Suo3PcBdQb1tVVy96okBPc66or351rg9Ns+LvTJkBD24YLi9yiclPWtJmr0R
                      lsY96zmRPXFjuT0uRCs9vVQ8vagGpjxY+ky8zzeRPYboVT0ijh496fK9PUBMI7uUxK08rFjFPAfG
                      Or0ABGY5AqbDvUvQmT3gvcC8VH7+vLrzdL2+yjc9YUyiPd35nb0QRxc8rKyavFX4qj0Qwkq9cD0w
                      vMMFIb3KXg69GMIJPEDyPzuooIy9f7WyvVoFQr3ThY49MW2SPXDVIDydOH29LACLvep4YL3SfzE9
                      6LGnPIAy7jo3wna90OzZuwAq47yR6sE9f1mhPbKQn71QSnY8p5+CPVPqx71QoBQ8aMO5va+Rvz3n
                      qWS92A2AvYLKCz0tmE29+gpyvdK7WD3T2L+94JotvTJzFz2dW3q9QG9evGmBij0rTbe96L+svIjI
                      sDwcF9c8+MyxPFiNW7ywzhC8lHLdPMclzL12Mmg9wHEMveWNlT2Dyru9By/GvWq5EL0o+EA8gwa+
                      ParhRT1jBaO90AlPPAAfLDrwR3s8Zh6IvZhC67z0/pO800tovYwppjy8ptU8IjjLvUSV5DxyTI29
                      0ucYPZjPHrw+3kI95m86PY5Mhb2QG0S9VTSlPV4yq72zNDe9EhcPPYo2Oj1MNrE8OM27PG0KTL1k
                      /dA8ZYeuPYdCrr3An2U7AvWLvcyIrLwwal085qyNvWMdUL2RF6E9IMqevBIJvr0u+0c9LNicvCKI
                      Tj1oiQk8U4RcvbgqsLyYjRE8GClzvLBNgztAt6G9frIxPXBFZTwp+o89gks8PYDnQ7zXeiK9OUqM
                      PVZLFT0Ctca9ovpfPbTzlLyGA2Y9NaOavdcRvD1UML28IUnIPYDLXrzgbLs8kDZ4PK5ZFz0aeUc9
                      dF3zvLSck7zJwJo9SyCdPRnDtD21Zpg96kIAvRFhiT2DB6+9cJEfvO3Uc71y+5K9J3c8vQyu4zwd
                      iyS9fiiRvVBS8zsArNS4zECEvSt9qb1Bqco9wNQ4vMxNp7xkj+Y8wK0qPJ0Iyz2g4os8dDa0PPOf
                      UL0ABwu9Z1l/vXSDzjyetDE9S8KLPQhGkjy1Nqo99NC7PH0WoT1OSpC9DhhBPQDrUrwg90K9aFem
                      vHc3er1ABwu9Us8MPSCsrr2gar+9wBY3O7InGD398r29bKXjPIoVDD3ejBE9sqdjPVoUPL0idqW9
                      ikplvSAP2bszzXC9NyGVPXmeyT3RrKA9DGDAvG8Ds734fvy8gbzAPXNQZr0alXA9PnE1PfuLqD1R
                      k6E9wIxGO5UZgb2tP5w9cnOSvedXtb1K4oa9Eh4dPfMMkb2w+6G9jxq9vWgrrzzEfdE88Dxjvc1J
                      zL0l+q69U5GLPSmMsD3lUoG92MmGPPPgwr0CiA49kh5JPc34kb0RjrQ9sL5lvQTO7zzrwLq9XL3S
                      PLLsPj3WB529lXmOvRFvxz2i3pW9T6OMPXhqvrzyvKS9EBpRvVj0qjzYMy28qCgePKV7u71UsRG9
                      /WWLvY+RiT0Snbu9AkVIPTpeD702FBm9jIawvDNjxz2I9p+9P/KsvdolWT1osau8PeSivQAEmjpR
                      kLw97cyyPQLoJT1oNo29wpiIvWsBnr1gB2C9OggGvWAMGr1qGXS91A6LPBCHBrywoo87RbGXvUrB
                      bL1JVKM9WKpWvCLgBz3gLK084NiUvTr5Kj2X7r89rIvAPIBVwzoX3Tu97dWdPZHyjj0kBg29ylsA
                      vWqMOz0a2Ji98tZIPeBMsDwq8TA9gJ05vINmYr0oW328ZGb6PBizu70Koym98uUfPXPnGb2QL4m9
                      hX2/Pf38uz3oriG8Jv8UvSjC8Lxt77m9O+nLvTYgcD0q5is91gB8PWDtUjuahwi90OyTuzRy7Dyo
                      njo8UFVePK3OQ704a669COuPvB07qz1wZ3g8U9aUvV1Rnj3Y5Sy8nXUrvcCMEjzYpui8Agg3PdK1
                      SD0eqVk9BkUWvfTPlrwJtMo9fUc3vSA2a72VLL69WPhLvGPZZr0thqi9dgSfvTGEnD1Rc7A9VDbC
                      PKjQYLwtlIa9AHe4O1Dxwb20gOg8T8WFPWInej3b5bq9wCSzPHMYrr1RZYo9InhCPQINsb1QyqK9
                      dBD5vDAr1js9WUC9mYanPcVYvD3Yf5K8Gjh0Pd9Uoj10ZKy8cdDCPQDvGLsMU8q8wrpRPUUKoz2p
                      CYM9W5aqPWekNb1oBmq8TB2lvFSiB72XgWq9+1nKPTPRyj0XgCy9kL0yvSLXmb0wQ4Q75TK1vTfP
                      mz0wr8W938aEPaA2RDv7uYQ9wIOJvObQnb3DXkO94vSXvdpinL2i4Qg98KxlPIQM/jzgZxu9gJUQ
                      Ovh4hb24or08vuxRPUbhBj1W6KK9iiQxvc52hb2a3hy9AcnBPXIiyb1NHcu9AEtSPAB1FDyzAMm9
                      i8OvPfTiqrxgLHq7OnNTPfIpND2Q4qq9x6XEvVA9vbvGvAy9+oW9veZtcD3efnI9m+a4vbPZV70w
                      pkm8bFfbvPJ5Rz2ajzq9xXC7PWDWEzvYJ4Y8yOuFvZDHQL0AsRi8jV5yvWACQ7siVJK9UqtrPfOY
                      T73BHr094uyavVCEpzs0D4U8WwrCvWDxsr2DdUS9G3PFvb8YwT1wyW69AVWdPfoxf72g8Si7x8y5
                      vVmEtj3x8Yo9R6ocvSA4yzyAzNS8dGyZPKDaVr3/uL09ImEBPa9Wu72AOY+74OAevZCKVLzyU289
                      R4jLvZD9ejywsYS9TF+rvNZkFD1sm6E8xnZTPexFqzzr0as9+uo4PW1qI71CM5K9gBONuwCPLL23
                      sbq9B9hQvQN1cL2dXLM9qnaZvYe8ML0gk3+9Uu56PQC2hzniMTA9Q4guvcJbPz2gdGe7gIuuPGVf
                      xL3k9xS9Rd6QPYCTSTzhE409pDbbPDooDj1djSW9iCyBvWVqyj3knuQ8FTuCvV02ib1MYeG8DWuo
                      PRDbY73Aeua8NCioPHU6lb2d1iG9d+SsvUAp3LxAja26BdiFvchAgr0hmMU9OfKpPYraED2YvIK9
                      Iu9HPXJrmL1mxaK9WtG2vQRf8zwM7K08GHM5PF7JXT3Agvq63WcgvZ3zhD3D8JW9d3B+vVhlwL0w
                      6VW99ltuPUA3Y73zUcA9nj6NvU3WgT00wbk89LPXvJkRwD3gUU690lNNPUDfMb2lisW9R/NZvbBr
                      9rtsz/68k9qHPVPEx72aZsy9OHKtPExd4TxYVEW8lYKRPU1zuD3KHyc92PM2PGI/PD1VC4w9UP7L
                      OxaPET0jSHK9gUO/PeDg6btGBRG98YiKPYhJrTyRwsU9ynZavep8br0Agpy5lAK6vHiL2LzgwZK9
                      oHBkvSmTwj256aQ9oenKPQBG/zluwX09JloiPXbRor2Tmxq9g/PHvfNBqL0y76W9smtfPcAi1ry9
                      EMg9FC2JPIx+zjzqr0e9ASfBPUB0hzwCbb29fRzMPcXMo70yjJ29TKD0vJh+Cbxs+5C80gB0Pcxw
                      izyIzfS8oMOOvPgXhDwNN7i9rVG/vVCBorszzH+9WPHJPLQlnrwTJoo98+qwvUqzH71i22U9HlgE
                      Pez96TzA5iK7upUwPcUMyL3ts3a91zBhvci4wb3yMpS98HEIPAFWkD3MUYg8LngzPUk3tT3xyro9
                      mtmMvf4XpL09dZE9ALv3vD6gIz2r4KE9kJZFvbusmr3NqpS9qm43PRACWzwDycM9AMrwOzBaVrzS
                      ODs9oyyJPcAxXjyi7FI93fKlPc0JzD09fFi9NQymPVonU71khtg8+H+XvHS4+Lw8h/Q8c15IvSiC
                      bTzQy669GE2QvSgsTTy+cCk9gD4QvYmglD3AUaQ8Fw9tvTFllT3rurM9Gmu6vXjPqrw5W609lltc
                      PafSxz12SIm92L54vCOduD3AtzO7kh90PcA/CTzvHKM9eEKfPI3OjD0MNZo8Z+O1PWQD2DxdtXe9
                      4KrHvajdzbzqe7K9uK6ovbcqrb0n6MS9zAyhvObuAb2QeVA8AHjQOOhhnL0oD6k8CX+gPfSSgTzm
                      kYC9c6qivf0/mL09NlO9iBOdPOJYID0q8z89Ppd6PZDvY7zWS349qDjMvZg3xrw1Zpe9MZyuPSeg
                      iD11jrM9qJv5vBwWjL2deIa92oE2vUrnrL2tzaG9NxNzvSjSwbxgi7K7oYSlPXYOgL2i5lg9Rp9a
                      PbDUOb1YroA8cru5vYq8tb0z9ly9z8eaPdCCNDzSYD09zWHDPROtI72mum49wHReu7UbpT2qbJm9
                      C0WXvUArgTq1V7A9b5WtvWwK3Lz58sA9vq+YvSnKgj06FU49YHpJvYRL4Txydkk9tUmpPQbaDr3y
                      MLi9wGCeOhE1kD0uxDE9tP0FvaSf1zwAfG07wEtRPMD0vrqArSU68120vV4sND3l1b294DQUvS1M
                      vr3TIB29FF2WvMdUwb3i0lM9IBeGvdDal72Q0w+9a3OcvWwm77z8/Ow8S+yHPaW0qT0sSuY8Xksm
                      PWDWubtmHxK9noJ7PQqHH711XKi9hB0QvdIwej2QnQc8OucQPdjFnbzj3Jq9IopuPfOyt70TcUK9
                      Ha0bvaA4r7yK/Yu9wYSvPSyO6Ty6niw9D8iiPWFHmj378LU9IpgvPYeyZ73Fx7W9j7mePQ9Tsr1n
                      +la9+4urPXCESLwUXvG8oqIyPWBhRDuR15w9WJQsPCAvsb2lhKO9Pf3APZzcDr3Awpo8z/CAPVbJ
                      g70GC1Q99hAHPSpZmL2gt9o7iwnGPWijKDxMDPy8UNT1O4L8Sj3jv5a9TceePdDXG7wUJgG90HYz
                      vWMAub0BCrc9LDXfPGCFuLvVprm9kgNaPUe8qD3C8am9U3B8vV9Rxj1li6y9bJCLvXB1dzzCiBg9
                      uyjLPTRogzwIqaE8ylmDvY6JXz2wm3W8z0WNPchxtr3f+8e9PQm6veyDwLzMS/A8E+Svvd+syT1v
                      haM9tLnmvG39mT0w6og7Jx+TPQDia7wm8Do9VHfPvJCrbjxggZG7yGCWvJiMgL3iTUI9Q0OMPeBN
                      /rsiFCY9BDb2PO2Tgb1qB8S9N5KbPZDnCjy2omc9UkRKPYH3wj3A87I8UC8EvcVGmj3pc8I96ugZ
                      PTdBLL2gIrs72XTCPVr2Ur0gJE294Qa2PaRq8jyg/0W7HRJVvcLXPz1/cLo9BH/TPNSTFb3sz808
                      QGWovOtckT2s/8a86H+1PGBE/LvGcUw9VxNKvVhInDya3we9OXyAPQ6dQD3jXTO9LrNXPRfrXL0o
                      8rA8EL1CvBO1S73wvgg84j0dPQ/HmT0AaMS4glEdPdHByj3UEf483cPKvYWspD1Akca9MthdPW5f
                      fD2QDS68IXC7PSgdRjyn88M9YFGsPA5qRj0jnVG9v2iNPby69DwAqMK87qqEvWpJIj1it2o98OCm
                      vZSvoLw+ins9CW6cPYDLr701Qoe97hqbvV5KDz2WegI9rqgSPbBKwbtoToa8Ga2dPZ25ob0MPrk8
                      wp3EvR99wz26fZy9sFGpu5wN7TwV4aI9DVtjvUOovr3GaJG9ricYPeIwaj2wxq27SlopvffhuT0s
                      Yb48HgkvPS1Vlr35YaQ9kEjKveexQL0ga8k7IHqKu/gXvrwUjue87keovVjCobzmeE09QB5+uyYw
                      mb29Bi29KkZ8Pe29i71J9oA9mdfHPSDFeb3u1gA96vaSvcofKT32QRe9LNWHPCC5hjuwwCU8zvKb
                      vYuniT3iPkA99XGEPfWXrD1pmZQ9YJcKvbSP2Ty9wkG956CJPZZhEj0138C9t9ujPYk3rT1CfmU9
                      9ZeJvZvboj1YEo+8TDHUPM1Fiz2vI8y9otF/PVBdOrxY9Ms8wLM9vBKqGT10P9y8jWa9vQjKnDwA
                      hAa8FvCUvRSXu7xbX6m9m3SSPdnCrD3qiqS90Lzau7kErD1Nbnm9IGCLvYkLiT1EARO9xTjCvVK7
                      Cj1d/MM9owyvvZilILxd+ZS9FNTgvK2pNL39l7E9l9U/vXkrqz1jj5C9TqYTPR1OSb0wFh+96JeA
                      PMClDjxOIYq93qVcPSayKT3mz0c9M9GYPQ45Uz0+MJy9c1qhvSy5mDwAuqw5dImqPIhDujzWzWg9
                      wIk+u8oENz3i8K+9MXrLPWBcojzEd9M8mFjIPCHTxj3xBY89gJ+nO8BnHjvAWnW9M3isvbCiJL26
                      0UE9myuOPSJRTz0tkki9rYZBve69GT2U8bu8FE3uPMJYAz1cmRC98HVuPBWPsb1z/G29U5F9vTZF
                      DD2G73w9Pdm+PQXcur2s7eC8aSnAPTApdTyqCEc9qGXOvKH0nz25nJI9uYG0PcG/tz1FsJy9wIs3
                      O06xLz2ixy09oK8jO9DMVb0iRsu9Uhe0vRg1ZrwYpm88eVbIPbAD/TvqHnE9r47LPQB7S7tXUsW9
                      BgFMPYy15zx5taM9kia6vaPQvz2g6f+8mN0gPKsUnb0YNqo8U2uzvY9Zw73HO4g92gJ9PUOAqL2g
                      XR+9nNvkPNDNqDvzIsK9sA65vcAdMLtgvVa9VbnJvTMxrL1SyUA9HpanvRLfMj1QdEM8h+w4vaj9
                      T7xgYge9mlUfvSpLXj39LX+9Qb+HPQA+hr2h7qg9aEQ9vOpqor2AhfE6QPc9vJO8hD35tIg90FvW
                      O+CJar0oOFS87LqAPMKaZj2EVQa9YW+NPfAvEzzn0K29iHG6POQ7E72iHHA9QeSqPcVMp710Zoa9
                      kGl4PPXurD3X4Hi98ES6vTE4rD3qbiy9RiIqPfNHzD10y4o8E2euPTC1pr20Sxe9IO+VvDFOiT2A
                      Ov46WD69vTANhruo36e8pzfBvUomE73S85K9fxSOPShU5LyqwA+9QAnBvb39vD1kAwi9k2NZvQDk
                      NTxuRDM9+NLHPL9Pqj0gdIk78BaFvWs+kT0mSyw9xG4TvSAgprsjUmC9gPCtutjirr1THZy9AC1L
                      u/fhlD1HUcm9TlMIPVOVG71Os4i9guvFvRvIp73fkcm9AFyXuqA6iTt0O6e8rTxrvRBaXL1AK8q6
                      lburPVr+CL3gWpW7see4PcKwDD0gmoa7gjIxPb3gmT0fgKE9M8K6PeglHLxdeqe9UD44PI9wiT3G
                      HZu9NIaYvByBGb1qA6m9IMeGO043Fj1LScG94W3FPYnpkT0KYLW9+06mPR2bdr2YKGk88GuWvZEJ
                      iD0ADfw54E6rPJvxxj1WPnc9xSK1vbZjbj06F6q9VwwovXuAm71b7be9kTvJPSgJNbzSSL69mC1y
                      PGLTTz0YnqM8zDcNvWMEzD0IB5u9KG6svAA1DrwqjSO9oUuOPWmLoz0eX4a9XGPQPLdpt724TNC8
                      sG9VvLjyvTxYWAS8CGi0PPR2iDzGHYK9I7GePQDzzju+4jg96hA1PaBhlrzqvxS9qHSSPJoYEr2g
                      KHC78uBxPV8YpT0wA+A7aR2UPQ3yfL2Zlo09MOyjO1DBgjstRBy94NyAuzEpvz39z7G9Ik0DPeb1
                      Zj2yKnE9W4a/PU7MET22boK9hzadPaBweDuAHJA6HlV7PZRkmLyhiJk9NtJRPfZzEj0ANPC8BbKs
                      vcgds7xhIJE92NPAPIxQ5rzyECo9pllYPeZIIz2mAS09Nn4BvWj4hb0AyI28UP5lvc0XYb2ZGbE9
                      kP9yPCPjrz1rIba9+wOcPYkMuT2Mfb+8CvF2Pc7KOj0w9z48wBa2vIAwa73zISW9Wl5IvUX9wz1A
                      wVc7yQanPWgQ/7wQWUA8Av61vVViuz2SHXQ9Nk4nPaPvPb2ARyG8VDubvGXFvb2gCTI74oRdPejG
                      pbxKdLq9/MffPBbCXD0IPLy9e76ovY3MpT3Rta49J2QyvdCHob0vdci9xF/zPJrJaD2uAwk9tY6h
                      PRIPBz1jFj69GbqbPRh/SzxqkMW9gJw0vDQLwzxpdcI98n6VvVQt6zzSDWU9SfSvPVAtf73iI429
                      i3irPbsemb2r1q49oFS7PLz37Dws5Jw80Kmvvad6QL1DYpS9rEcOvYyfljwshoG8aMGWvZR09rx+
                      2QE9u3O/PR2xPb1YA6G82QbBPea4fj3UAZY8BEjnPOOYkb24Scq8YF0Ru8xZDL1qR429nSgwvaS1
                      +zzdS8E9NRuNPbuRtT0FfpA93vR5PWDS6buQI1I8KCf2vNnXgT12mI69QNceO0pSAL2g6gy9Wqpx
                      PaDJojsVgaO9yFXTvJljgD2gjgq9ggxZPXfXdb0I9po8t4GFPZItVT3NRL69MU2zPbMotj0adSy9
                      YOwvO4EYrz0AcQa8ALDuOcGOwj0Yu5A8+sUoPac5X72LjK09Hf65vYkonz2zM589YNGkvcABMztD
                      eo495IvqPM3Tir3tEqy9XiCdvcqfrb0wb1y9oDvHvaBPbLs75ME9/F/nPB5NFz2FiYU9rUpSvfEy
                      nj0DkmG9hdqSvUpJez12o4K9rHipvFrpBL2oOpk8AjkjPQCcOzrowlw8Oi4ZvUD6bzuAclE63fuy
                      vfqCs72rD469y+GQPbDOnzujHKY9YGOpu8u+yz0Hd3q9TWClvUA4g7wTmKU9myqUPc04wD1FoLE9
                      UrO4vUdzX73OPoG9KRqUPawwxjzCPxc9/q45PYbsqL1TDae9kKd7verqEj21k4M9GvSSvR21k73m
                      6W499F6FvS4Bcj1Hn1a9chJ+PZCyGzyCSmE9BAPmPAWJlT34Jps8APwCPN1Xor3pPo890PxhvQD4
                      LrsULbc8A3PBvQdpuj1PV7a9SrhBvWhGBTwGXxi9OghAPYTqhr1C2A89+D6SPH7nmr1lBKC9mD+Y
                      vArwBr0gkZ48I20ivXt7wD0AXZ85HUGnPYooO71j61C915t3vcz6+zxzsLA9aT2mPaglgDwVOsO9
                      Y/a7vaalWD19y2e9MKQpvQ0svT26zom9d8OWPdCt1buYLKO9ZBr+PMCiVDwo+FQ8IFzNu7Q7Db1H
                      z8m9QPEDvFDnSDzEqvI8kXfDPaQ53DzgOzi9LAfBPOzpuTxQmUQ8yGyEPCIFVT3ja8Q9YP9wvWon
                      iL1QliS8jJaNPKNvkj06dSu9IMmKvFDZpr24gKy8gl8yPfKuTT03rmi9VK3BvFnexz0QYXu94tmy
                      vdi8s70muKm9UsZ4PWocLD2MVsI8RkRtPSKrvr3YwqU8ADYfvWrxb72YlLS8gEMOvEp+Vb0CFgs9
                      mm5WPct5lL1Q7q278TqQPbT+xrxQ18u94WS6PWpbRT3z8E+9pazKvT3vOb1ImPi8oDqGu4DCwbrx
                      xIg9t1GEPYCMzbvB25I92JeFvF4fAj2jdLg9gi8HPWAwTb1YIUO8QAxfO9hSYry9L2K9UGWJvRQl
                      3jyQwWQ85iMxPXqChr3XNZ09AG/XOxQLAr11pr493a5vvbpSOL2kBgK9wB1dO8BBPLt6awI9QI0g
                      u1o6FD2HXSa9aLe+POJ9Az04gMQ83Gz8PMJpXT32cp692eqPPQLmdj3JkMw9AANiOlqBj731scE9
                      QvULPQAYCrsAagk5AA6Ru8PIGb2t6rW9kumuvRB7abwASUE87rEJPR4XBD1LT8a9gKkNPNixsL1b
                      4Mo9fTCKvdZQST3oh6o8YoSavfJPUD0aHnK9x7R7vfR+m7xxz7Y9oqIwPU6ODz2M8LM8PZF/vQEB
                      jD2Zmos9gOTKPD7gAj1HX4A9ogEcPYoos72RTa49NbKhPcq5ZT3yoGY9KPANvADIlL1/O7K9rYaB
                      vU2TO70A02M7c/i0vc28oD02HWA9UHfiu7CAjjtFp4q92vYNPYqKfb1qSWG9DBGVvIChoTxULtu8
                      xl40PZx+1TxJ/KA9p0JBvQB/NjxABju8mbOMPdA6QryCKB89VGi8vNASort2lVI9pd+LvWnEhj2g
                      Any9A9y7PbBSUDyoSwM8iFGePOTD6TyYepk82j/LvWHbyz0BvaI9AA3GO8eqcb0A46a8xuZJPTvP
                      mL0+eGY9TE7uPHT2zjxgJze9rH+UPGrgMr2D0cs9rauLPVLUYD0hcYM9oJ3eu/BsO71Y6IK9Kkhp
                      PXjK8bxbPKg9XRlevYg/gr24/v68TqZmPYCRO7zqhqO9CgyLvSKHwL3K6BG9jjcAPUbbGz2c3IC9
                      wpaYvUKXDT1lH5w9aIFvvNjMlb3f04M9oyh9vYrjab1UEL08ugUgPSxz2zz8e/k8gokkPdCXfLyA
                      /QG8kmsTPbVxvr12+Jy9aiwwPeYRIz39aqC9NnaTvbB+WjwtqZO9PdeFPZKLGD3Q+9q7iLqvvIA7
                      sjxSaAY9LlwnPVuruL07U4290iahvQBVZr0AaMe9rLHzvNs8lj2nzrI9YzqovQwmqjxSR4S9ku9B
                      PdZrJT0ipjc9d1qsPSI9zL2qrxS9krcYPYBTwLulnca99V6mvcCwZzvBvbY9Wg0OPcN9Vb3mBGM9
                      sHZkPDCLCLwC7xA9yg0fvXJbgb0AxVy93wCUPRwlFb3qNki94lDKvX49h72kafw8zQN/vbNCTr3s
                      0uK8mTOiPdC/R73ismg9h2unPcM4sz3Ulfq8KW2ePf47DT1BXbU94z2JPSkTyz1JpaU95kqpvalS
                      iz16XQq9koM1PUCtOrzBJJE9B7oqvY05mD0ASzG6oVmcPa2Iar2gQcu7rEuDvNu1v71YX6a8YCbp
                      vIBfHb0n6sQ9Yzd2veCLqzuwtd877pR4Pf2/tT364hC9RhhoPXcAHL29TMq9TJf8PBQ4x7zqrx09
                      aMN5vGIAWT1PSIg9sCyzO+ntyD3SoaK9gO7tvNn3kj0G6yk9ddagvUowcz0bb6y9epHAvVhVbbxK
                      6io9hFCLvQhcuLxirLO95jURPSgour0lu5y9Gfy5PSiaxTydhUu99w/IvWoCA72rF5s9Y9yqPaj+
                      1bwwZQS8sqg3PU8mqT0+ioy9iaGvPWEQiD29qW290x0nvbKXGT2YgSy8ACjCvZCSLTzQZtu7zNP1
                      vFHNgT0boaU9giwEPYr2Qz2AUOI7nsooPa2OPr2e8wc9qVWHPZLnFz3BgoM9aZy6PWYNEz2MMbK8
                      NPcQvWPHlr0k0Po8gKn2OpjX/ryA2aO9b1+xPWBRCruYFp28IKasvaeKIr0+fY298KWevRKCJT00
                      WJ+8lC0RvVISlb0z8rM97NvyPBEXtT027Fs95ILoPNPEpr02Tqa9kFxUva14H70AlVQ61WuLvcpe
                      BL0NvCi9ZqBzPcB1nL14hsy8y7WTPVhCHzxA6qC8ciZbPdD5HzzNe5W9GO3tvJjBMjz5iJE9HYaH
                      vUOJWr1Jt4U9g35pvZd1vT1HmY49ZdnCvZjtvrzwv3I8lLv1vLBlwjsAWpS6LymOPf68fj1jQr69
                      +3+GPbqlvL2H6Gy9AAytPDyq6jxgepS75LHRPGbhcz0A3Ri9TWZAvUOIIb1AcPq8IEPCvUi2hDyg
                      YGa7De6XvYmwmj3sNoe8kZKsPTfkJL1KAmI9MKRRPLn8pz1MLBG9asqwvTocQT36xTG9860jvSnz
                      oj2jg3S96O5tPBrYET2U1p48cWKZPeNGnj0t06q94TOHPWOlpr3o5i88aa2SPch1ob03QIQ951aH
                      Pc76Tz0CAIq97qZvPbnPoT3g0Ig86GyzvdkRyD3C7xk9BhxkPXs8uL3MF+88StM4PfsXjD1b3Lu9
                      rglePbHXnD3hXcw96Bn0vGrpWD0YyPK8UIGgO+RT0jxgdJa8wafIPVCHPb1S/UA951sjvTwxCr1j
                      CFi95xNqveT+2DzWQQ2943tCvfnjoj0c0Ay9TpkgPbF5nz3xmsU9AUibPcLXdz2Y1io8OmDIveHO
                      vT2Ebu48hT6aPcO0sj2oFqm9CJbJvGAIg7sVQoy91Gi3PLFpjz0ArD86T16XPRCMbrwwkKY7YdKT
                      Pc7TUz0Aur85Ouw8vYZZAL1yeoW9ZDIDveyq5jxhJLA9AJg2uzqlAL3T7MM99qcCvVimo73AHiO7
                      aiZhvagoGLwXhaM9dF3qvKB0WTtyGT49+oEQvQDj3LlARxQ7R2J1vRDhPDxgLvy7A4+jvfCEGzz2
                      ERM9OMyuPDnDmj2r4qQ9yJrbvJTo9LwJHIQ96JIvPAYtRT00lpo8jJS0PF1FjL2muUY97PjePD63
                      Uj2YzYQ8P96EPRFOtj3wyg48E8OSPTAIJjy0UsO8TX/BPbK+Pz2YC0O8UD7dO/mVnj2sgso8wHQh
                      uw/Ohj0pfcs9VgUoPXcqsj2rbcm9aFWTvXAWlL0dtGm9qpoLPRZ8m70Mn4G8xYqrPdriA70gppC9
                      KgsbvVzdAb0wt8a7UG1yvYA16roDuCC9GY6hPYngkz0M4oC8aC9IvKAObr3hhYk9rwiMPUqxKL0I
                      LpM8EFajvfMWfr3UBOC8GBT+vJUApb3bF8m9lWShvac5mz2LioE9bbXFPVjR/bztBam9+DnLvVKW
                      Yz3iLFc94XfDPa7wgb02N6e9Z3cvvaiiBjxQgHa9yaTDPaVktT2c0to83/q4PQn/xD1dIJ29gPLS
                      uwAAyL23xKs99ogZvRC6ob0MV++8EosbPXSh/Dy6KDU9tsdnPVclSb0SyJ69tgZbPePOoD0wrOs7
                      hlMVPeK5aj0BJI49521kvaz89Dxs1vU8GLRQvLQE6jwbxoE9ef/JPRDDULxA5m471Hf9vLH5rj3a
                      9wQ9eQyaPSCD3buvJYQ97tNUPQBYlrygi8m8TVilPRVDgL3uUIm9UkkcPVlVuD2rzcO9zsdJPXIM
                      nb3ZwYk9gTG1PQEJrT2U+Ik8DDigPFDluDtSDJy90EhzvRdUoT1KFRi9DLSRPNnbuT3pLaE99IXr
                      POSgzTwWZ3w9PtyLvYAOYr3wgzW9dFHbvMzEzzza83C9uBGLPICOLTrgXZQ88/m5ve3SLr0agAY9
                      axeHPUDElb29zL49/LUEvXAtcLxiV249DuU5PQB+YLwQfWo8IUuHPYCC2DonAZM9BjKBvfDWy73w
                      fGc84IqmvM1gqD1qd8i9UNwuPO+QsT2wI5K9oDFHu7K8Rz1BUaU91BeDPEtNtb3UE4Y87RyUvcjw
                      rrzdxJE9BVO+vbBdLbzaMlu9Dt9SPcz9wzwAGX8615FMvfo0Tb1As0A7wJkAvHdlub2qd2+9MCBz
                      veTNAr2lg7S9pH0NvVEzyz1Yvme8DvQrPVPZsT0Rxas9RO8QvRpAWj0s4O08ihUkvZg5Y7zqUJW9
                      WRaZPVpQJz2po7Q90qc2Pai0RbxetqC9vgqQvY2WKb291iO9yk56vUIsvr3O9j89692yveIjMD1O
                      mQQ9Oj8pvbDbyzto/I284HSPvNK2ib0sVLA8gHOuu6gbwr0MNNy8hyUlvSCKpryUFgi99wC5PdES
                      mT1/MZY99DeDvDetvD2S1Ym9vUNfvSr3tr1Re8A9sD4EPCAnjb3OfRM9wDRGOzbZIz2Yn668YGLn
                      u9c4rz3ye4u9wnMWPcD2ojyAX4s6vSQxvdAIuTs04IY86uNbvdPFN70jqqm9pyvHPQL2kr2Mw9c8
                      jhZnPQDaWbsdHHO9bfuKPSo/JL0p+5E978azPfI/eT1260I9kCETvMuOoL0AOsa5MDk4vMoabL00
                      ntO8hPoKvde7jD3K3oq9UB+3vXBAd722zCQ9w284vZT5szw1ELC90IlGvKvHqr20VN48EwCQPdJ0
                      Qj2Mb+k8tJqKvE4CBD16dme9OqZWva5nKD30JKg8dZSkvXPKrz3etgU9uITcvOAB/7wWmB89Srpp
                      Pbgfv72s08g8DF3hvKBCGLsYiYQ88HADvMMXtD0V+rc9QZauPYc+OL2MhQ+9/XA2vZzfhr0pjak9
                      GrYqPa4ROj2pVa09kRmiPeZbfz0MRaE8P1KOPdgPwb3PgLg9WHyFvSyXmzzSNFk9CFqRvae/tD1J
                      +b49N5G9PZgBrrwAun47A4qfvQB4bjyBtrk9WI5lPEuWur2Ykg08I7W/PQ/hrj39F129UONEvBg7
                      z7wACUu66DPIvHIWSj338Ui9B1dKvfBVELwagVc9beMgvR3Rgb38hA29JZXEveODkD0KSQc9YMiy
                      PGC4L7tR2Ig9XbtsvUNYlb2I7qk8VHTbPGUlsD0APte58wPGvdBjirut4B294UiTPRkzoD1LS409
                      cMFIvCLOJj099nO9WYzMPUuNgz3KLZO93powPcYYeD1d0zO9JxmmPSjwnbxKNH+9KkAavXJgAT23
                      FZE9PuZtPQwb+byTa2G9QtKYvcLwXz0UB6Y8sNtmvPAGJbzgtxG9GlwMPfInHD0w2ja8cfKmPaAy
                      cjvbj6S9aPypPCgwWDyTKze9UqZUPY0/kb3Xm0K9WEbevLAtBjyz9aO9KDWZvUOSQr3liKe9jMP7
                      PKMvbb3TkLq9DcqUvZaGTz1oQJ08qByaPN36dL1oKWs82SWoPUh307xptZg9sGSnO1B+arwoUbW9
                      hnsOvSK3Lj17KpK9QPugPED5RjyAaMo7QiqbvTpRSL0NGVy92YLLPRQJib2RmqA9+GKePOsbkz39
                      pGG90p80PX0Wl71AYy28wMJSvbDTnzv8lgK9WHRpPNoEPb1JLKw9YQ26PXrpRj1wfC29arl5vVk4
                      hT34I5G9S1SVvbDe07svJcO9oFvaOyYbCr2Mnd68E7thvewc/bw+1Iu9KslsvUrMDj0u+EI9cUSu
                      PRaRpr03gca9spCsvSUog72Ch4G9iPHtvGNYeL0CeDA9ICitvR6gSD3a1by9IICZvKLeTj2xsqs9
                      g/ZMvVXGjD2Al5s8ckBoPZhaa7z596U9LZM7vdDMJjwL1L09IMSpOwDQ0ztKtQK9sByRvQ7lfz1D
                      xq29I/+wPUDjPTwgA/6742hUvbpobr0SCwg9sk5dPXY4Rz24Q7k83TEyvXtTpb0V7KU9igkyPZC8
                      aLzacZ+9MFSBvW7bIT35lss9AF1ju1iOJbye5Xo9Y3VIvSBr0ju+5qC9jTCKvduoor09yG29XVAk
                      vRRgh709ciG9uIayvXTr+LxRMKc9JmhuPUwqgTzqk8K9g3evvaFgwT2sM+u8TnCZveoZVD3jYqw9
                      R80tvRoqHT1WBEs9bDUGvR0Jrz1A+hG7k8yWPRPIc70YBSC8NZOAvehhITwLGI69YCg8u8C5VLz3
                      i0C96K1WPApiXT1zGqw9zLPCPMgXwDzpRog9EHu0vSqFtb0Sh1k9Y82VvTAPPr0jUTG94scxPSgF
                      ZzwAT2W9cc6oPeBRkrwRo5U9kI4VPOiKOLzhMrA9aP1FPLfRjT1gJ3k7Ewiovbc9nj3EzAm9bpEV
                      PT3aqb1N9669oEPwvIjnvb0pvr09UKUAPNBMYLwAvBS7YBOGO5LDaj3/H749ZOP6PLGngj29bSa9
                      o0mlvUCQDbynW629J9iKPS2EuT0A4IC5P9icPazvqLzxc649kONzPE0NWL1Cnmk9FZG+Pb1Qsj2W
                      iiw9YzJdvbT/4DwRM5496sJ5vaP/lL2gU8I7fUyfPZo2bz3HOZ89XW5yvbBoVjzPaIk9LG3gPMo2
                      bz1EueE8v7OvvSbYVD3lqp09pTqJvdGatj3qxwc9MFW2u2NEPL2duCK97vpGPZAaYTxs9oA8IbG5
                      Pbj7jb0B7LI9UHqKO1n5qT3kPPw8xdXBvUdyd73nFrG9QthmPSeJyj2OOpi9S8y+vbcNQL0AN0+9
                      8vw3PWBCHTtNdVq9gDeaOoVMt73ttGG9okOtvetlvD1MAfw8zOeWvIdar71OxaK9MeSVPQerfb24
                      g8K8IESwO3beJj2UVao8koJvPTO8tD1n5Vq9+eWMPaGdvj2gd7O7oJjKu6Xjpz0zpre9KrVtPaHD
                      hD0AKpq6Pfa/PW1tpz0K5K+9mI8CvEdbUr0aKKO9DPYFvfp7LT1A+lm7eHHHPAjckrxgoIC9lAyC
                      vXLGFj13FLM9xZmfvV8Ktj1xVpU9Hz+6vXf5yz0n9z69zu+FvaeklD3g9ek722uavZQ2/7yJxpg9
                      L3K+PQe0qD1VGZk9w51dvdTfhb3hwZM9DD2EPNEayj12zCQ9wJY7uxgt4bwIvM+8w34kvT2bHr0Q
                      D2u8U4VJvTiItjyfwpw9BnAdPXTXmDzCb7m9CGv3vBiQhTwRpbc9NKGDvDICDD3SJFo9M38avcRx
                      +jwE9xe9uPPovDwozzwEKeU8oBGyvMrqCL0hYMc92KifvDA/lL3Aeyg8BgFMPYCf5rxNKcu9oN2I
                      vHHzrT0+UxE9dCCiPN3qMr3H7rO9h0BUvSPJab1oD9q82P/tvLhBwryP2L69Z8E1vTkssz02SXk9
                      cHxnvUBjQbxVo6c9+KbAPIhhpjwnFVK9WG6svTCCSLxACSO9EUmuPZr9i71UyLC8+j9MvUVfzL3H
                      wh29rGagvGP7r72I0O28RXPEPSxL7jybBao9eG2nvLCqdjxQpyk8h8GdPeA8jTsH3ye9YC2WvEBe
                      W7tK96m9cqloPZdqsz0D4cS9J0u4Pf0Kp70whsw7sEgevI8wkj0KBCY9OG6OvP0JyL1AyLo8Wx2k
                      PYBz4brL86q94J7YOwCrtDveun89gobDvdUipD0pTJ898j4HPQcBrr1ZI449gPeaPHBXm70CKGo9
                      FhE5PTBRNrxR55I9EqMhPVAM6Tu1cZ89gL+wupGVoz340r29xuotPbePOr391p89e1OwvfV7lD1e
                      a109FECHvNp8vr3LAIg9VxyPPfLClL19OrI9cKDCvRe0X72Ggz09pyadPdXWt70APBs6wIpUvAAx
                      c7sMRfi8+DP6vMyg3DyaXT+9MsZuPdD5ITzudCM92DVHPHlZpz127wA9Ct9+PaAdirywqrW70N0a
                      vIoJQL1osB28AnFMPYDLkrqm4S49mNI+vCgvcrwXkLE9umpBPUdVUL3oIRs8QNNUu4DAELxRZMo9
                      HKDqPHdfMb3weHq8wNMKPOuvwb3KXrW9oFGRPK7PfD1FZqo9aIS+PJIPXz3OeZ299JqIvZio7ryY
                      z7g8WifCvRO+yT1+Lay9GKuHPICVML3Xp7Y9WSOTPdD1UL2gseq82K4BvEJlJj2Ik4480uZ/PaVW
                      i70gnrG8pTCIPdRgybzo7Z28AEEkO3M7yb3ojku8oqBUPXPLlD0wkuC7VHXBPOiPybxvk669UGuz
                      OwCGljwwv947nU2OPd4cIT3DF8u9hRSBvatLjz13M1a9KcmPPdd/kD1gnSK7pn+IvRA8CjzouWu8
                      jAWgvEpzor0oiSu8b/LJve01mL26Pzy90INZvT/dx70we4i9ajJZvdlPyT1sup+8Ut5fPbLSXj0Y
                      T+C88BsOvMrCfb2HYn+9/9ajPe1Fh73mtwG9iKW1vW1IUL1yl7q9z6KvPVhIGTyA6gC6WKE2vGB1
                      Nzvk0uE8aEhGPJ2YIb0kPRi9+sUPvaMCkz33f6I92GC+vAGdiT2ZZcw9c22PPcIUPD3qzwM9CgvE
                      vVjPSzzQKLK74mkmPaAp8Lt3lry9oLa7O2C6JrtQMYy7VQ2pvez7lbzCshg9GBYTvHh49bwUQ9Q8
                      ahc7vc7LAj3ga867Mx+GPXDSMrzJ0Zk9PFmGvTATFrwtjIo9VtKZvegYMTw7B8i9qMu3vZGUuD3I
                      58a9dGwFvRDYEjyMuKy89lpIPTjJgjxUnNm8UCcVPLrSyL3gnqC9XZGBPUBQPb2jysQ9DSg8vYkH
                      mz2WEAY9UBNEvNBWZb3iPV49xuYOvTE4sD1Yici9RCj3PLQg7jwH7EG9MleGvQDrsbkipmo9wO1w
                      vGiYsjyCmlA9xqxzPTpDb72qMye9LBa0POxAuDyT3r+9x75RvTJFdT2GXwe9Dm0WPTCyKjyJmoU9
                      OeamPai6BzwXV8e9zQ3EPSPMbL0g3cs7W+i8vdDLwb3syxS9XRGCvQRn8jziQzY9OynAvUyo1zze
                      b529WfWhPZAQArx3Pak9nlaMvcQAzTzDhpw91UfFPa2lyj1XfWm9akWbvU/Yur2nvjK9oy2xPfIE
                      mb0ZObY9+EDCPCOnvz2gwjW9yG+wPJG0vT0m/ga9KMmWvY12Lb3gT647tVTCvVicGzwiLmI9lame
                      vZAiAr1+RQc98Ht2vHFtoD20Fp+8osF7PTyx5zz9p2a99ZSKvfcxuD0Akdm7tnGnvZd6zD2o5pK8
                      JvA2PSqgW70QwCe9smYAPURhir0o0AK8A7+RPR3BRL3ZMrE9Z2m1PZdbTL1PkIo9rpJTPQNHVr3Y
                      sAm8ai89PQ2chr1YNbW9gNnYutj8LLwq5lI9IwtOvZIbLD3g/Ky7IB5MvUCbqbzAZku8j9+9vcNS
                      pb0Q4CK8hm50PVApmrtgD1k7CdKxPcfIUL3CbEk9AO1rvKZYeT0y9IW9iFmZvU7bYT3gd588WDgR
                      PH9Imz33rjW9AAgbvPuvhz39uII9ol9rPU41XD13t269EqYVPXKsEz39lGC9EReoPQB1LTqdLsa9
                      gBKpuws4rb0CPkg9sbafPS7snL3Vqpe97rJZPUtgwb2zmn697KWiPFsSlb3jrbU9IR6FPbtCkT2a
                      43s9iJblvCB0jjyw1O+7mPunvdrjEj0uun09LJq5PODcGb05yYM9dFqdPADiVDvon8O9EspRPaWo
                      rj3xu4s9KNI6PCf0sj2Yjqm8UAfrOyeUfL1plZE9wZWlPZVFxL2goJq9D5mLPVDFLDzqs5K9RBmC
                      vcVKxT1cyAS9/lVMPXprKb3YRYO936HHvRiAZLy68Ak9vRc4vWPOqz0d45U9ylq3vaIJTD1VaYy9
                      xx+PPfxqg71NWCC9dNzavDpUbr3M9No8AlHIvTpvFb09cTq9I2UvvWOnwL1rYKQ9HeucvRCgEjxi
                      LwM9iFGjvL23gL1ijEU9kLMOPMA3bzyWJF09ijgZPcADFrw/pKY9qok7PdC/vbvoCtG8VM2DPEIa
                      Ej0i7sm9EH1zvVmzoD1wAyQ8Zyq0PRBPIjxdH6s9ABVCPACgnzfBJMY9mTaRPWrOG71aYT69hoOF
                      vYz/0ryZOso9AHQlumAcnru+xYq9KymvvfdLL72duS29BgGHvd6qjb0bHLQ9hkB5PT30ar3t1hu9
                      72yIPZo7nL0EbOU8QzjMvcPsxz1Yi/S8KMWYPLl8ij0Ljpk90422PaDTRbvEUg+9AXmjPY+WlD2M
                      Ed88R0B3vd6kh71QKJ07QK0DvLq8gL019aU9gn4gPZQ/tLwg8YC9GDfBvBUPwT36yyi9brIkPSbb
                      RT0MYfU8WqAHvXDQbzychIu9yS+wPZjeUDzU2fe8gdeJPeyXi7wAJ0m6NiEXPfXSqr1kFBG92q1h
                      PRYWCb0rDpm95N/qPPkNiT2hLI09BnciPXGHwT31/7690h8FPYZEUz3AAKK8vfYtvandwT2ABzw8
                      p+Agvbl1oz3tjaS9AHxlvAoQPz3AS+u8XkGHvf4kXD1CCFc9jwbDvegTabwfzcK9NhBGPdh1FrzA
                      Dp087DLsPHZHn72dIYg96s8APWBV8bzB94w9Pn2fvWJCOz3j8Vi9F0NGvf9oxr0Y9Ya9bqxvPaPK
                      Xb2y0Sk9OslHvXIikL0A1Wa98ffLPciXzrz6qTs9NHupPCDabr1y1B89ENKVvaKecj1FAoQ9eg9K
                      vZaSPz09/sc90eGMPSK2OD3A5JO8+FykPBqEf726zzs9/JIHvZOicL2Yujq84PX6vHMHar3IXIC9
                      BJrrPPgjgLwwhga8yllLPTnilz2AQWQ8RYyUPRFPqj3Jn409qM/LPMcnjj3o1w28El1DPZOgmz11
                      TpO97k2PvdHFpj3aklW9IxWnvfZDjL2q7X09GJgLPAJWXT1QTCK9PlN2PRQKzLw3Zb+9AJe8uzIu
                      GD2+eGE9dgMcPZg74rxGNno9x2i/vSiIlryRb4c9blNgPcJAVj3/I629iD+9vQcwzL0QKwM8mPqB
                      vJgRFrzA/SW9MriavXCINLxQJ2W8LEW1vCZ5oL2evlM9udLBPThRiLzoor68qG7JvaAOFb23pLU9
                      kfONPQD2VDsQ/Wy92MYSPGx5AL1eLxM9UPOBO47afT11wYG9QBOsPO7sNj2AZeS8GCsgvCCdjDzO
                      YQg9uu1gvbvtkD3wWw69MSurPZ7jID1gOyK9qwGPPROYLL0H9sc9o+2lPfHHiT1uS049WJZzvBgx
                      nDxhe709fgh2PdCHvb1w+QW873OrPTkwtj3exW89gHmhOyLKzL1gn4i72jFzPX0HoD29D3O99BjH
                      vChllDxH5C29+o5pvXEblD1Q3J678H1zvJCojr1l2ZE9AitWPVZ8l73a1g894E+5PF62gr3gW429
                      gCAUPJR/wzxhFZ09k2tyvZbCob24o7C9ky0jvWmshD1gKa+9slqjvTc0lj2AwgG9838gvewDzzwv
                      FMY943WKPcLMDz0gpn+9cHEsPFCLaLzJbLc9vgVMPQCOHr3TisO9epyavaaSlb068xo9sSaSPVO7
                      jr0N+VS9wJSQvW0xhD1zNDC9klW1vao3Sz3Qsiy83S+EPaVcpL2wgwi89IGPvIDJSb1gmNY7qkgn
                      Pd3IuT0dyb89oxNsvaLKfz0ZgsE9ChB7vUlPsj0ie3Y92eKEPQQGEr1AOw08wfmRPfajED2AsqA8
                      +sIQvWFzgT1ZNrM92v6SvQq6az1K42G95V65vcIsyr3GrS89sJQsPIBttLwgzLI7X2muPREJjz23
                      HcW9AMbTuXHwkz2M5N88gEyAurDGfTzcAfc8oPhNu+qTt725N5s9QPv5OnWFwr3dAsg9CJSDPHSJ
                      4jygHN87qUyfPSAWuTsA4Nw7AMeAPAtZxD2Q1ho80pMFPWK5gb0TT0i9gKnpOso+ob3z2I49zglG
                      PQCWkrxM2bW89NT9vIqhKL3M59i8UNUEPN1Kbr0Da1m9JbeJPagY/rxygaq98BkSPIBzWjzrSKY9
                      z2CuvZf6yb3AFQY8OktgPVF6tD1S61M9PlGRvSDvlDtCTRM9cMESvZ69RD1QJBg8gX+4PV8Avz2q
                      J0k9ezaVveqEVb0nMSa9k0iavQ7SFT2eZoa9+uVTPXKElr1+JV49gP6Xums0gD1LXbK90lwsPdiK
                      zrwQiBe8m4G0vab2EL38Avg8iKHJPEiLvb1UVom9hMiKvQpVez2YKWq88h2bvbeXnj2Fn8q9sBYM
                      PLvEjz1AACi8QyE0vYZlh73GCBm9z0ihPdfMdL3wc0G9ggJpPWCvOru2aAe9K0CrPcDiNzsCkW89
                      foMpPbDLfDyDPJu9AMeAPADsb7qOBQQ9Po0mPYiFkbyoc9K8gIcsvNjth71oY6Y8sCF3ve7EZT24
                      t7m82/eZPUNxqz37jYU9cxSovXhTyLwqCSy9QNglvP23fr3omJc8yPCCvECnOjutdp+9AGNLO5+B
                      vr0wNGm9wuCTvf70XD2c4d88Ssx0vXHFxz3NgKA9OFfWvKMyqj18cg69gii+vQpXLb2Y1q08MKto
                      PPO+yj3oNYK8oOUNOxGokT1yh1A97mmfvfCLpb2oYoW9NuIVvWvTrb3sGf88pAfUPCLnv71QjCm8
                      bPSAvUxJurxtpCi98sB7PfSCqjyrhre9w1HFPbmQyD2toFq9wKI8vISR4zxVsbs9mJUfvPbjFT3Y
                      TlY8HYu2PW9Emj3qomg9jCz4vJEZrT0ZJpQ9YiyMvYD3Yr0E/908aD+hvZtIkz3i9A4912fEvcDI
                      nbqwTV29kHpbvKCusrwPU7g9V7x+vWidczyohsS9x72SPYdtxr0gybo87e7APa+QqT36F4G9aEQU
                      PKyc77yhzYQ9IHv2O5rOgb0Syl89YC7LPDBEITy3rXS9tvlrPe9AoD3tqMk90rIFPQB3qr3DHcY9
                      TEXdvJaRLz3kHs88NP7CvMVNyb3qBTU9mF+jvKShzjxQBV6812qxPcCleL3gtwa9mi4aPdOAXL2j
                      k5A9126iPc1Jpj2otjg8kF5zvQoOhL19doW97F2JPFKlED3YNUq8b2m/PUE/vj3oa2G8HbStvUDf
                      yzxX1TS97qQFPSA0hzyRdMM9FrqMvdiAi7zivHc9TGy+vJJNMj1NyKW91JyavByv+jyBbpY94lxW
                      PUuoq70UKZC8x6uhPbOlU71ySjo9BzEdvV2Knz0hq8g9MjWbvZDYtL0F96+9xKfbPACGATtY32Q8
                      25uoPdTUkbxAWqk8tv4RPdD8OLyaXGo9erYNvfIXPT2giCO91D68PECWf7uQtpy9B801vUg99byz
                      jzm9ENV7va0dhj24bqe8EGOuvakQoj3RxaE9lIX6PETv+DzgfYg7Eze9PZroTT36ORC9mc+ePdRC
                      07wwRNe7Z+XIPfOgHr1ChZu9aHb4vIpqpL3qYlg9gO8svIyLFb2F7pU9YfqIPTDhjr2g7Oc7NCqt
                      PMA/Njt4w+u80BOjOxvunD1YTYI8YAHFOzIcHD2qPBI9oNIBu51msT07pbW96b6QPZPTab1SM2E9
                      sATru1C56Du/sMC98YurPfpjVj3oTNa87jB9PeZ8DD04TJ29+KaTvSdPr73o2UC8K6fEvZCNaLwm
                      yKe9MC9MPNpRrr1Qkg68VbyKPQw6hb2YvMS8kIeDvc2Xkr3tSiS9oLGDPNDsaL2aBDw9LOyevHfW
                      a70eJxs9ihciPb72BD3g6I+8e+OlPd2xsj0KIki98LlCPLRAk7wUd5C8AjZmPdeZv73p6ss9PoB2
                      PQgAwbziQyM9Sz2SvVCd/Lv1S6E9AKCYO+zggLxjB7+9qvU0vaGgrz2YwN68Qmd4PTdCsL2xirY9
                      8MNkPAnouT1jera9M5lUvV5oTT11e8e9gO+tuqR95jyXo7s9o2WhPVDUIDxVLsu9O4qrvRj8nb0U
                      TJe8DSVfvTi7l7zI4si9AIAiOkYwk71iRRc9aHSsPDN/uD1L88M9LCqCvTRW5Dx7mZs9UP0hvSYR
                      l71NFoW9IC9jvbWHg718lOg8WtczvQubjD2ikjQ91WOjPWwrhDydzo69ts2SvbPRpz15Nrc9rgI8
                      PTj6g7wB5L49o11zvUWckr0YM7q9GM18vFOcdr0W4TE9QW23PbAD/ruvWqY9Ed6rPbZmXT1Eq908
                      SWW4PcMEn73T17u9QEtcvBJ4Nj2A7688jC3mPGpkqb2K0Ly9mp4lvfaFpL0Dey+9M2S4PZA0Cjxs
                      aPs8debLPUDRoTwYGw28Q9otvQ4APD2f86o986p4vS+Puj0DJZs9EM6MvRRtq7wFsLQ9sDoqvMML
                      kr1h9cc9sOyBvWA1K7sKTAQ9WoK2vZQfB73WbWo9IqIwPeKwND3dwX69hQ+mvTeBtb0AbKy9dET1
                      vHnSwT0A+aq7PbqOPYYFBL2hlLM9Y0fKPS8fiz1lGrI95wNGvQKnPz2j0ss91PDYPHqjZj2BgpQ9
                      Usqrvc2iU72LhIg9v1GFPQ43Wz282/88i/TEPbUKgr2JiIY97LK1PA+Kvr1Mn/68j/+rPaCOOLtd
                      7409LRR0vUHyrT1ADUu90LZGvHYXdz3Y+3w8kmmivXoRMT0AeVI72oJHvbLtPj1lpqm9FjhePYSr
                      2zxH5oE9AkVgPezQqjwN8Jo9wBc/vIiV+7zn1Yo9YC/9u8wpsLyWroO9ChUxPcws5zwaGUa9+ELZ
                      vAPtxr3ltZw9NK6mPOkbxz1oR+C8yQ2MPfjvnzwCPwY9c0+ivQfyt72Q4jI8mR+DPY94rb3WNZa9
                      AN5uvTjkwL1zUj+9dYuKvbphXz1KXB49x6i8PaKbST1RxoM9vbAhvZlVmD3+GEY9YYu6Pcd1Kb0r
                      S4+9qAQlPP1Er73QWAY89zWaPZZjWz0oMzS8vjmUvezbvLzIjci8Lm+LvejRHLzD8xq9DWkovVT9
                      nbxrhsU90vmSvbMxgD39Px+9fYhgvaSpgr0NJMa9S+q9Pdexrz1Kvp+9k6edvXQSAb0zlDS9JNPz
                      PF0Bnz0A4si9AgK4vcQBgL2055Y8Jr2nvfC9hL3qmR+99Nr1vNkDyj2APvQ6GOGCvLFJmj30bow8
                      rtwdPUh91ryyz189ovEkPfpegL0om6W9crdKPehwyb04DJs8TeYhvY1NNL2tO0q9I8wpvQBqvbpb
                      6789Db0+vdckxb2ll6s9EKw3PMD4e7twYze9mMQGPNKmDD3+V3g90y6sve4Bjb26u4291dixPZCT
                      qr0B5JY9Y+9CvS1pzD0oyEG8U2lEvWgGxbyiJ4i99CTbPFrNxL3gYc47NEjCPGpPBr1iybK9R2l6
                      vXuJxL0XFLE9AJM5uyeQX70greK78lM7PaBzwL2CxEA9DaGOPYmAkz1SQZe9o+GzvVUjxz2JeoI9
                      aso0PVduyb0NA0a9cMpwvYSW7zwQZA48UrFGPTNBKL2TF1y9yKaSvTknsD207YA8AERlOU46az2I
                      5ae9o1PIvR7rJz3MTfS8ytItPXnFxz07KaE97J6jvLwpAL3uS3Q91kd1PYAxEjpTXLM93u1HPQwJ
                      lrxS5jA9NkN6Pe+3yD0+UY29KnAJPVPXxr2wOHu8bdHGvTIIPz0zzUC9YvYRPdRDs7x+fQc9qKJL
                      PMArYL1s74Y8VYSUPYIucT1pyoI9MT6jPUOgUb3XN3i9BM7UPDN2M713hlS97x6RPSjzsbyg8V67
                      p0tAvRjPWrwYek282IfnvCL7gr1vXsi90PO7u8LreT00D9s89b6hvdN/aL3iECs9PRNtva43Nz0o
                      Y5q9gIKnvELZWD3wPFM88S3DPZR7v7yg0UG7mohFvdoSWj2wee+74HHcuwwn6jwAwL85RM7MPAD4
                      2TowWau7g3Y1vYqUNj1AsY+8Pj+BvZo9Jr3xeak9WKSZvWBFsDsBc4E9YqIxPcDIhTqgxZU7GVak
                      PYhKmr1KKEs9MW+OPe1hiT30LeI8N9i7vfjkrLw7rsU9AgKuveqJBb0o4q88OuhevUulq70O+qq9
                      n6mTPZWlpr1oLPO8GHsjvBPusr1D2Uu990+KPSapPD0gPMu7lmERvcEakj294x29fjSjvaKFCz0s
                      Gro8ipgevQ52Ij0W7Vk9cvewvVOikb2YW6e9sU6XPTqdvL0S4WA9+k9sPeCRor3FxpG9t6a5vVzS
                      8TyiEww9DauTvXbRJT0bHbC9gF+bvWASDDvQQDa9RHwNvTOhML3wOHQ8MoiXvT5tjb2+NHQ9zBbA
                      PL1yw72o8lS81j8ePTpFK73iwbO9oH5GvcV/qD1FAq+9Wbq/PYC06buwgfE7zSDIPeQ8F73Ii4o8
                      kW6sPaAneLvohLs8e1uNvTAaFjyo00C84zyYvd0+K70yx7K9w2qWPZrAFD3ZT449LXFZvf6OYT00
                      j4G9YG2fvYVMrj0qWQq9oMvJu/BAZDxx2Is9uuNnPXo8Mb09Ezq9zSNDvZOVfr26z4W90I5qvLZo
                      jL3efGI9lTKHPT2nV71oo0G87CKQPD14hj04boa8QHctvKOWUr16hl69A7WtPUoxRr3pJZA9E+Yc
                      vWa7UT0IIPa8rieXvSUHsD1H34E9EvgLPYhjoDya9WM9Z+qYPbXowb3isbe94/vJPfeQc71oicc8
                      AK7JOUNOlz2s3xO94IWtPNLKzL2Ar+g6asWAvdyCgr0Bibs9dAuiPAamOz1A7B+9YJlKO0lmsz1o
                      ypO8Du5dPQK1dz0ydZi9SplePaEPgz0WrJS9uwy8vaYCRj3oFBS84GujvYT78zwSfQE9+uhwvesJ
                      xr2Axts6OuIqvZhBMLxivHU9rNyqPHuqwr2C/FY9wAIVu9OavL0DNX29QwwxvcGpsz1o4Go8Vx2e
                      PZuUuL066Ce96MXTvACmGLlBu5k9EP9vvFa8Qj2TqES9pc+lvTBEhLsAqQO7377MPWBf2buICqs8
                      ePqSvKRahL3nBW69fqOSvSwLE73ZLKc9yjJAvWAdIrtY6Fw82TXGPUYGkL0AJfg7sFDBO8NGgj0g
                      BJK9HjGTvVMKub3CXnM9yi9nPXDdPb0Aaas7oNOgO+acBL39/Ta9piMXvX37Kr1YY7I8jBXvvFIC
                      BD2T8Za9ZQ6yPWe4Mr1HNx+9YrcCPei2mjx6Q1M9wKNWvTYiej2qxza9T1mBPQBhZ71wNzy9AL3Z
                      vAkFvz2ky4W9yc2IPShWbzy2RFE9XUa0PSMQnb3wfYu9Q1VovXNLk72Qdk69ioIWPQz65jzYPBg8
                      8JohvBpZdb0bfLW9Kj5OvXr4Sr1JAZQ9mK6yvKMvpb17cMm9o6WdveKuEz2UW+C8/jsdPdkyoD12
                      JAw9bF+aPMfATr0tUnC9HoZtPb2wR72TwLS9pWWdPVxv5Tw468G8cq9KPYlolD1yPBE9wCYGPKx1
                      yjzowK48gPCZOgE3gT3I/Lq81EQOvegRuL2TWZi9rM8OvUDztbyyn2Y9j3PIvUMTjr0etEA9j3a7
                      vbQUhjyYpsY8S9DEvcrPEj1wgE48J2a4vROXlj0ASXK9lKGOPDrFMj0gy4E7KKDVvEe7mT1S/E09
                      0vJ+PaCz4DteVR090Hp5vGffyT1YDK+89NiQvGLJwr0e5AI9TDiIvIZWNj2bwo69zqaDvRI2bj2i
                      iS49ADlbu+Adjztp/JA9fhBTPUF1jj1dEMK9nQeLPeoAdz20boG9z9qePXbkjL1ZY8U9AGo5vRi6
                      LzyV1Jq9QLhbvKVIj71OWA09QOnYOmfAYL1Adhk8NaS1vWBscTugXi29fD3lPBMKK71T4mC9/dK6
                      vbdtv70YcDy8EpIxPUq4LD2Ab6A8Tdh5vZ03tb2nvbu99ELnvCAAmzyd68U9XwmpPfJtnb2Cxyc9
                      ArdLPZuJpb30coO8NjiTvetBvz1LzK+9K3C3vQq6cL3H4Me9FfSEvYuNjr332iG9IghOPam/jz3p
                      Brk9oTiEPYBUp7vY3Qs8xjV0Pajhfrx4uoE8KPy4PMfPGb1YIMM8whdsPa8iuz1jFJo9FIi3PHfa
                      Jb0h37g9zG72vGUuob2QQBq9WMJ8PCFgpj3hp5M94BhGvdAFADw68ou90pgVPcTlzzxs0/m8e8XC
                      ve3iab2rBYE9R3V5vQkSmz3Hsre9mlYqvcb7mb3jBcS91Kv4PIJEjL3AfmC8ylt7PcoDc70pOqU9
                      Gt4tPbDYh70e8ls9yohIPaVBkD0K2Iy9KYOpPQBg2Ld0m448KrFlvVyx5jwTWK69oGuEPLwWzjyy
                      WSc9vjAJPfJbdD3w0ji9Pdx6veA/ob3AZvg6oqEtPQH0oD0sY9s8ItCNvQD/8rts4L+81F4AvV8j
                      lT0i4iM9mtAjvdS6mLy4HMC9wNDWvCA4Hb0gBwG99iJnPUmPxD2Kbi69XBuDvUVSkz3QnyW80NSg
                      uzXPnz373ao9sqA4PQD/LbtOXFA9G0PMvSxD7LwRfKk9w9OwvbjOlr0lNrC9CPycvKIXDj0u8Vg9
                      Lf8zvQYSPD3YxAq8vtRDPdAFfbyVz6C9EHk4PEkBnT33+7095B6LvQJbJj1ABzY70HfPO0tGwj1H
                      uHy9z+yePSxByDyBRYA9pJgTvTF/mD300KS8MWSmPUXzwT0gSsI7EggmPYBhDzpurZ+9AHY+Ocr6
                      x73dBqA9ANBGvVIgWz1Af3+85SuSvQcqpT1puK49E+KgvZD9kb3rhss9gMiOvNDhJb3NACW9bPeK
                      vA2gnr26oVS9Wu5IPSt1vr1OV4G9+1rAvUBsijwwN1+9Ok+gvUTIB72jD7k9ftdCPZmBsD1g00q7
                      YHzou7NoxL1Cw6G9X7q2vdGpwD0KBEk9A3c8vf8wtD2Ye308ohMMPRrsWD1jpzu99u8IPcdXHb1Y
                      gBC8IxrJveJ+RT1Y5Ju9sASJu4jayLyfyrS9SzGnPRFztz1o+gC88KIMPMilor25/7E9Ixyhvaqb
                      tL1Fvp09K0G1vZDaazyc/fg8oe+sPcTB5Tw3Hky99CCMvLC6fzzQTqS9tSK3vcxy2rz2jJq9PhaX
                      vUiAur0GCJ69wIW0PJMUmr3wBCq8MOmIOwfnYr3oRMW8tYqPPYBZsjvBvpQ9QHUGO4q/Tr0aGJy9
                      wBeoPIcBxr2EJtQ8Ix/APeUCwj3T+La9mIxCvNhslr3yXBo9yQCqPWizu7wA3Um7qGpCPDljlT2r
                      Lpe9n1WqPaiujbyAMTe6DlYEPQDz9bmkauw8zLS1vHnWmD2Uvdq8rOyKvSVou73jUKA9YOg1Oysw
                      mj1gmRk7RncPvZiRpzzkLAK9OISxvKgqXTwhnpU9QPimvXESvT0gz8O7bnWKvQgvob0BV5E9sN8U
                      vHoueD1KRoy99biEPb6lh7260CI9eYjLPQB0bbsmwZO9N13BveUEtL1kw9w88rJ8PWCghDyha5U9
                      W5ydvUCLqL0Atu07gHNbvGcQVL0s8Ji8oAgdvUZyfz2A8Iy8UTafPQbFcz01Rsg98FQkvACZJDoA
                      vg47Q+M0vftusT23VSK98Ko3vVi+UbxRMqk9+CeoPDyJ9jyoBbM8gzqXPe0ceL0goL+8zCHfPKzi
                      9LxUSJA8xkejvcDYnbw0s4u934XKvUDlZrv/qoQ95jN3PVM/or1cOeM8ZBnVPHE4yD2N8qM9DdiV
                      PaC9oLyXTJM9wImKPAhk9Lx458e8MGB1PNDG8LvgLro8nc18vRDGWDy6NCI9AqkBPZ2fhD2dq5C9
                      SuPGvc0/ZL3J3r09fxy4PSjATTxoOqe82Ye4Pbqhh734n7m9FTqZvfkLhj00WxO95vgqPfPvQL0n
                      JGu9aLenvfN3Rb2uiKO9rvp1PQ1YgD04cLS89DOXPDWNyD2UGsm8pNf9PPf3tj04Lc28uFOvvFC9
                      HryuCoK9+0OJPaWruT3jyj+9ADj1OuC8RL0Rq4E9UxudvcBaazvVTJQ9ZViuvaM/Ir1w+Gq9ysg1
                      vWwWkLyHjsO9YNWPPG1Rnj3Q8d47osRmPVgOm73Npq49+ByjPCpKXD0fL4A9K4OgvQCUnb2Cq0U9
                      1KGoPEvFvb3CQ4S9ch9NPWiKeLxtqU+9xsmUvXVwqT32iZW9ABjLvNBCvDsuJHc9p1uaPRfoQr1i
                      20U9AIqWuuUViz1ZI6c90x+qPQOvuz3dcre9M5NvvVDedDxPj8M98NlQvQQF2zzokVo88omFvbSl
                      2TwXmja9lt9cPVk7sT2MyAW9CR+DPY5+GT0ugGY9ISO/PfJBaj0ntlS9R+0jvXdbzL1xtZQ9NOO6
                      vL8Igj3qRhs9hpp8PW21YL0b6ag9X9bFvaIzWz3sIuI8wIN5u72dJb0thrc9JWK/vScts73gW7Y8
                      lGYZvRCdur02h2U9GACTPMSA0Dyv5sM9duCPvfRpiLz1jsQ90B49vfXYsT1rocm9SiIyPXAHY72i
                      Fig9ux7CPYGEoj3d6Mc9Jl4CvY2Ier3hxKA9oFmpO5oDRT1Aq1s8LxvAPe56Zz2VMog9tMvLPDDt
                      Sjwo+RU8RWmzvW1FNb0MafU8BPrXPCLiLz0OwXA9pzs1vfruMb3KFlA9Zyw9vcaLAr1Qa3k8GJvl
                      vBfCsT0A1WC8ekXCvWBZLjtYScE8EHg9vGj/PzyUvvu8onsdPQX9tr2iVFA9omwUPXjDoryLVp29
                      yByhvK2nNr3MtLi80nUKPSCGnTzJA4Q9uznGvUfMVr3wqW28NQWmvVZ+Bb1RKIo9gGPKvTmzvz0n
                      Wco9t72UPSg0YDw7/5Q9jnRkPUThzDwagh49mvo1vQjZ3Lww+k+9AL1nu+Dczbu4I+W8M/3KvZPz
                      kr0BLsk9396MPf3wn72g7Au9gOOjO1CqUr1w01M8sK1+vLZnir0eT6K9VFrhPBKuTj3IcPW84H1b
                      vWhkrDxBm8I90NTgu3kbkD2wiB88CDXAvEAFJjuDy729UJIwvJXdy70A5G+7QEdMvQGOxD2Pk7A9
                      EtauvYAbPjyAqdq8cfagPWMwxz0lU6e9SBbDvIjCz7ywDZ87jbW1vZCle7zQ1cA7oLTsvL6vgb1C
                      5qG97yHGPTOAxj1tkUS9Ct4BvbAeUDxq8jm9sNb5O1QewLwOaDA9YoYoPQC+hbyhwsY9lTbHPV3e
                      nr0HAck9UussPag5obz0GYm9RuV4PfmotD1wusO9YHSPPNqvGb1mmx094yONPSlisD1Km2q9oY2D
                      PXpSPj1Y2y08gJAMvCXtqD2JRKc9yjNbvSIcTD3QTy+8TO6HvdKNSj26EI+9DD79PDuTqb1CpFs9
                      gKewve62Iz2AI+06FGjSvDoYZ73or4M87H+rvELXDT3YCYO8sGshvJDORb2jjXa9fTKfPWJ+Gj3E
                      Xv08fTPKPTFSxT0VGq29n4aIPbm8sj0qqkI9O1rBPSl8jj2mtBO9Iq1APahBuryw7ja9QOSvvP27
                      xz0AWYO8AG7MOumkhT2Tncu9vGn+PBBifL3Nv7Y9YCebvKz25zyY3n08rTo1vWw6pbx9xJS9sMQc
                      PGBc0Lz6pkc93YmwPfAJZL0wr+q7AC3DvGlauj1jPXa9DDoPvQDReDyeWl89YOP1O4xlGb3MCaM8
                      kxqmPbDa0TsgUdS7oDl/u1fbsj2iwwQ9TaPDPdC/47uoJ6U8QNhLO5S6+rw2q3U9FN4WvTvBnr1p
                      dak9IPSOPFacpb2WYk89W0iAPTO6lT08JBe9tF6lvKzHk7xSHSU9qpsSPSNRvz1SC1o9jFK4PLJ8
                      ur3ATt46EDBdvGDUpLuYpCs8AL2sOZpcdb2IEbi8+g6LvRn2qz3CIwQ93ic2PU4TKz1LWsA9IPyJ
                      O9N3pL1/RYA9QLFQu8AOHbt3Aa290FeEvdlbxT1ArIG8UqlYPROBnD1x25I9jRSEvcNMiz2Aa7M7
                      Ei4aPZ+Poj0Drny9lfG9vV3zIr3lcJ69v6OMPQp2Bz0Je6U9PXl1vQ3yr704p468EF5TvWPEnb1Q
                      0NG7IhJYPVqwRj2gecu8wzktvYCVErxgiKs7kvNXPRCTfjxbyK+92mtSvRKNTT0uwYO9AKEZvEUL
                      yz0JvcU9WAxYvCaLpL0Ahiu9+cOnPSYqcj2Sigc9sigYPWHiwD2NzmO9whsnPfGWtT28FvE8wDvy
                      vDHisT0VfKS94Oe0vLBzRrwQ2LK9XcDHPcBTxTwK2JW9GHV0vGpFEb2KxQG98EhivBBVPL3b3a49
                      h6fMPXdBWr2AWV06YKbBvOvJpT1206O9c7x4vbcrUb1sQtk8AIN8ukCzMjuGeDQ9w3qzPXiFkbyF
                      gMO9aotBPdDeXr3Y4oK9wNGwPJR5sryy0Hc9/dvDPTl0mD1j86K94diGPce2Qb3Y6XI80JauvcQE
                      4TyyWgI9ngtgPaZgVT29Rkq9d5KqPWa+PD2AfRY8BkyNvcOMV71AbZi6MzhGvcd3hj0wTn08oU2F
                      PZgClL119ru950GEPQBRHbt1uL29AFT/O7CKJrxQgZC92NXSvHHKpD3jWr49cnGYvZAJcDzVGrc9
                      R16tPRLnUT0m3XQ97Fq5PAxx9rxAFZK9WE9WPGIjej3Uvta88l0TPaNoqr3QOcw7Tu0yPSzgnTyH
                      1Ua9V8DJvd8uij16y0O9GC2evdqLAr1AwKu9UDEePIAu97y6fxg9SaCnPZ2kNb2AEp474bKYPUyh
                      wrygvwa71k6evfoTDj0nYVe98HVSvWxfwzyKhhG94iYVPfKKvb3gaHy94OLGOzLMSD3ABMW6BZq3
                      vTBJmb3j2Dq9sUa0PUy+x7zQccG9AKKpvW2FcL2Z7p49X+LHvQBFgbuKkhE9WxWXPdLQqr3f1sA9
                      CDepvFAbnzswyLC74HOxO20Cjj2Li4Y9YyZcvSBfqDw+pgY9LM2/vEOkKb3sS608ECdovW5Paz0S
                      Ijg9STK5PUxWwjySq629/j0xPQainL1oGcm9yJaZPHCZHL1rtoE9sHhdPGhruzxDwqY9COTDvOyB
                      gbwjSJs9wmR/Pb0oU72N3Fu9YIMnvZ8+wD04x6i8rVFzvah/y7yauWq9X3aEPaDTnDuN/pi925iN
                      vSgDILzEcoC93T2qPUBzGL2NMIU9AF1avWMJoz1K+FI9Yj5fPSBIpDwHOcQ9IvaCvepfBb1gyb88
                      GhVcPY2Snb1i/aC926awvVgcLbwsOuQ8gHSiuyhhQLwQ8ju9As+OvdMvvj3f0bI9KMJbPOzNpLzU
                      ZeA8vW09veQhhL1YFhe8tuFPPYAScL1jFbW9DUq6vZdkYL0GnRi9IBJYvXK4Nz3TUMW9OPTQvNo0
                      YT2Ok4i9rAfxvADOSbwaEIe9kAUrvIBUUDwDq6G90DaLO/DHazyMp6M8bb29PcBEYjyNXIE9gLuv
                      PEh9r7xNvX+9Z/JpvQpIIj0XeHi98LB9vINuV73i/EI9pDv8PO7BYT2K0BK9aK5IPNraO71xPLw9
                      zwuaPRXqh73gl6u7gNj5vEBuGLyKLz89V2OmPYAM2bp+voi9Ujg7PVBC77vOAnw9SA3pvNiiYzxG
                      Cjk9XnQGPQACkDnH0my9tfGFPaxM6ryjEKW99bi1vTYdKj2OOzI9Ou2XvQBBOTvDnFu98bfEPVBk
                      ezwiPxA9PfifPRTM5DwDVri9KI+7PCUsjz1WpAU92LsVvNKLq73pJr89IBySvNCqcrxabLK9jHKn
                      PJ9grb0AKGW7z5yLPcBYqbyqbjS9mmqmvULhdD3jI6S9AuxNPU1Sf73UEgW9SDO8vQDPUjxoZ508
                      QxqUPYDP0rorNo49QSe6PZegyL1J+pM9g96TPSeRJr3iVww9NCTovGJGED3K77q9GbemPVryrr3q
                      8LK9uuVcPcu3wL2WU1g9MyHEPW17Nb3M8s488vQKPRGNyD3pN7g9SMv5vGDdJbtCIxo9Qx2vvdnk
                      rD1qzVE9crygvYDomL2ggoQ8zKGsPGgC+LwcC9E8I0nFPc7mib0AvOy6+r9rPVgbvjxAX6i9ADiL
                      Ou+hvb2Y5yw8RYO3PTAwBLzq3A099Xq0PRm7kj13wDK9Yr5dPTtxrj0gYA+97dkmvYDpNb3AG0I7
                      UnQFPfApMLxoBoS8tlBTPaDwAjtwDDw8wK+IPDB/STyTM4U9Oo07PUv9kL0RI5k9cTC9PQ4dSD1o
                      obs8zJqcPCE5yz2I86A84GGAO/SbF72Ad8c6aHSvPMX3rz0wcZO9nFX2PBAvNLyoDFI82eOrPQCt
                      tTvAQ1286PZ2PBrBaj1uSGM9gLnTuuJUKj0btrs9Q3iVPcjI3bx6AHM9hZGGvRI3Pz279re9B1y/
                      PWWIvj3CNo+9oJIyvYtQhT2o2mG8+wOnvYoas73hh4c9qpqJvTDjZ7ycC+I8oF7OO2mZrj2o2LC8
                      OGC1vJh2gr2A7qU6mtt1PcoHHL2ovnc8I5p1vXmziz11L5G9MHK5vXEgyz2SpKS97Q+ePVV/rj0I
                      oO68qFpvPDA7kL2AWI+9gO3/uiCPHL0adbO9IghgPR0BTL0AZ2Y8Z/CxvXCycb0DzGi998VzvbCT
                      mbuyFEc9Kl2AvTG4oT3ODWA9Vv98PTgnqrwyDk89eiA2vaV9gL3WLg49aEVivFQU5TxQBp+7EiEp
                      PaCKb72RkKA9jAXpvACA5jnTNHm9kIZ7vChhgzyq2WO9dAm6POCVpzv76La9lM7avIKqOz3A0DE8
                      xzscvWeJt72TuHq9JIwKvbqufb0oNbC9g/DEvUSY/zxWmay98M0IvKJAej3VsZi9GHp7vPN4rj1K
                      H3+9GWe2PV3kwr26kHI9rq8DPXs/tr0S6Gg9LpRdPbCDhjtvlcw9wkJOPYiW4bzVF4c9mrBWPQI1
                      Cz0nW3a9sI2gu3L4Tj1kOPk8eUC1PXneqT0oeX08ApJxPSM2ab0+oho9aJdiPC/unT1ATR27MZim
                      PamLjD0AEGC5AIQaOlOgL72iYQU9QPAhPFmOuT1AKzI7JWqpvS7ocj3xw749KLsVvEYJJD2At8I6
                      hvMJPSScib2q9zO9AAehuxDGpr3Adq06B25XvQAotzqAbTY6mmSGvVy0ib3bsb29gzdtvUwi/DyY
                      VX08wEDIOs54fz0w3d+7BauSvQL9sb0dDKS9yNi2vBNlyz292sG9rjYwPeGTzD2Vboq9xQervSbM
                      Zj3csoq9/PvpPHLlcD2tQBu9TG/3vJo+Nj18Fgu9iTivPUSmgL2iUoS9iPLdvKeDxL1g+bm9qJjG
                      POgQSrxx/Ks95LHjPBKwFz0Q4iG9SlZ0vetvrL136cW9Bi5uPTGTuD1K/4K9DQ45vZm6vj1gzbo8
                      ACOpu+BgmDsT/rk9MNOYu7DBf71gRRk7oqE4PVFRoT2DUcW9oKFvvUyqsLzd6ok9nv0GPf8VqT2X
                      y1u9TAzXPAdkiz03KSy9Y4Fpvc49fj2nICe9vSFcvbuxqr11FqC9dRC6vey217zSWQI9WglEvcSQ
                      /TxS5z89K5XCPfc3qz0qPgy9wm1IPcD3uTxQVkI8R0tFvdrcEj2oap+950A1vayU6zwS6Gk9NkKO
                      vddDIL13GH298PhfvWUIxb3aTBQ9mN+HvIL+YT3AF1i72sgVPTVhnL2SJxM90OcNvT4EKz30zJ68
                      ypWyvUfxVr0JNsY99rwNvfBjE7x/3pY9UK6qO6lrkD3MSIi9MBBAPGONaL0JjMY9bMuzvLCYvb3O
                      MV49L12wvZDhOL1KcEM9bUmJvTyv6DwAhlO9KslmvaDyqruAQWi8BeuhvY0lVr2DrIo9OCTLPADA
                      8jtotA68zYqkPYKfOz2JQ709uZuDPQwS9LwoA7K8hde2PUwJtbzl5qO9BZumvbDtBb1HaCS986Jx
                      vbE3lj0p/rE99GjDvCywwLyTIKk9YGyBO4LOID1AFZg6KvpyvQO6mD3QYCG8IvybvX8YtL24AZa8
                      9sA+Pf09X70x8Lw9oLi8u6zHi73j7aI9dB+LvGi0wL11Opa9s8iQvb53dj03XFu9GAO3vBBXVLyU
                      guk8yLWPPPV5jj3AaA694PGrvKJQGz1UVuO8nHsNvdDdCjwgafO72BGtvNlYpj1BbpE9AMWAu6db
                      iz3U04M8ysIKvYrxtr0Oe5i9gt69vb8vkz0g3sE7Zjg1PRBYRLwQTQW8DTl3vWgEGLyou3q8BzTL
                      PTJuh737xa29WAQPPLJ/h721/YW9wPrQvDiU/7w3xWe96RaePSxjpDzyXLa9sRyGPcqeJD24XaA8
                      Qt6fvdC4Tbyatoi9wAKROhbWAr1iQxg9cqciPTcVtb1PGKQ9WhZKvT5cjb2DEKM90ERavQDsUTwN
                      F4q9OMTEPACIxTy9Try9UJlnvKcSu70BEYc9QohPPU03qD19kze9t/q/PXKtAj3333G9tLyEveBd
                      G71mNEk9lCrcPEDnDzygIck7gJXguqAIG7vJa5k9g3+APfIeED3ASmE81KPCPL3cd713Kcc9FJAB
                      vVdGWr15B6E92I8+PNOjjj1nMby9Kg0xPRiKhL1KH0q9wCOKvTmyuD3aO8a94IPJPNxt2DyTlsC9
                      Wm84PSHPpz3qY189wHaavZlflj2RZoM9aMe0PPOcjT3PHb69oggXPYahID2k5Pg8gOqnu2BmojsC
                      jFQ9Y+8gvaP+sT0iJXA9hbKXvbAwajzPTsW9mNKpvGCwgb0AjmE8srE0PQD2pjuVRLm9wpi3vVD/
                      wrv/LYo9aQqDPYBDu7u4boi8IzOjvYBr+7vwxlU86PKuPEDACbzAM+28GKoTPHdtkz0Ylgg8gO1R
                      vGDd8DvQOTq8agEvPWOsGb2eIDY99NTZvAlnrj0m4KC9ONOzvS17qL3Qqcy9wNN/OyBqmL3swqi8
                      WL+kvLyqh70BM6Q9MCdJPC1+mL0jjT29If2oPYqMwr33/UG9B4HLPSDm8jtpHZM9M0ZAvfASdjwL
                      YrE9BoqdvULWxb1+hAU9LLn+vFz+GL2g9MO99hqpvWvthz3a0xm92sGIvWAUSTtQeFG9TgaVvWC1
                      TL0doIK9geCWPRgLozwUdYM8qM1RvGNHpL2YAHm84Hi3PEsxjr1gMBy92G3nvGaAjL1wxie8uAPC
                      vQ3psb1uymw980eyPTptK73272E99/9qvdDC0LvqjEo9+lVEPfRJsLwvfsw9Y8VEvUDNmDw0W6+8
                      c8fHPXj/gjy1acm97f4xvSgTxzyaMYW9C5epPQBwpzlYFri8vWoqvbBHXbyMige9O1++PdoNKT1n
                      q2u9CpkHPXKSp72shI286EJ5vK36SL2A/NI6tV/BPYXtlr0Qvo+9IDiSPG3Pg70AwGg4d84cveCn
                      /7yIJsi8q3mjPcz4Br2XZ8U97F/MvKqqDD2Augu6LhctPbHkjz1AFiS9lAWfvEeIL723T7E9VLay
                      PEjuqr2Ug/G8GOXIvZw+2zw2tnw96CONvPFyhj3SnG09AJixOq2TvL2+2oe9wLM7PGiDWLyx4q49
                      jF66vF7Qgr0yBaa9x6GkPSY8C73QrTe9uGKqvVhkoL0A4Uu9GF8+PFSs1rxMzp08wMPLPGBCt71k
                      Ito8Q+povcKntL0/h5o9v4i8PcCVRzzAtpO9wLgJPABTiDxAllG7CiIdPUnqgz398229/f2sPeez
                      W72+d389jn4MPSaVbD3TxZy9s0WVvYMFsr00u4Q8isubvdA4kb2Gq1o9jZN8vSDvozyiY3w9xqgr
                      PbAt0runIrY9H2LDvVBHR70ShoW9cuZ4PXARpb0xCYY90BS5vQAF4bxsaAC9ZxTFPQAswrggTLM8
                      l2Syvb+pwr27AcS9oOMsu/JAjb2enoC9QNaGvV/5mD1AnEW8OuMAPUavEz2OzSY9dkdbPYDqAb1A
                      Uhm7M03DPZT+nTyrYbC9JqsIvYuVgD0j7Lg9n4m0vfkdoD1gdqu83hoIPbI2bz0w48a96RKcPYiJ
                      yDyMYpg8LeKwvQq0AT0I9Oe8WvJnvWxgBL2S8G898lRGPeQS7DwQeYm9WwC+vWAInTyjTrQ9EjRW
                      PQNenL0lkJw9qZK/PSsNx71j1sW9UXGiPWgomb0IQPC8RtCkvZS6vbwCGBU94++sPRRjmzwaNms9
                      4y+oPfD2a71wTl28ANFmOy0Mnb20NhO9AE6UuntPkb3YHE28JfycvWp+Pb367bm9GA6vvI1GfL3P
                      Crc9e9auvX3Err02U049vm44PbLLk73ALNC8ol5rPbDtWr3NQi+9FokhPcJzvr2js4+99EWlvEDw
                      JrtA5gw79HmovGSP9jwn3Ua9JfaXvbensD3NM4w9/5uIPVKOXD2WKy89fsJ8PbpVbD0QgAG9gFFf
                      OuroKj3RgbI96m3LvVoZcb3yXQQ9oC8TO5rwir31TJa9V7krvfqpCL0s0688W6KOvXtBor1i9HQ9
                      I38nvVgIbrxAz/K60XikPcDMKrsEjPI8YoeJvWidx7zawEU9bKu/PHze0zw0YsG8lh5LPZM6Tb0N
                      D4S9OfKtPYDX7ryJPYI92Xm+PXHLgT3S7n095/1svSIykb0ED/U82Dl3POpqWL3QQQW9gG2nPFDu
                      sLty7TA96qAOvZhEULyAOPC69psdPWW5kD0e7x49W5K+PQA2f71SUUs9MFGIvWrnkr2Bk549AFFH
                      vVifoLwPDq+9U63AvSLZhb2TcG+9MCYgvagoP7xAe4K94Cb8O4gpw7z3HH69INR4vc20fL3wiSo8
                      xgQEPSOWT701Oau94c6jPXrFTD28EhW9oJEjO9jCs7xGvqy9ULnCvYHfuT3dc6M9CO6evLAXGDzM
                      cNY8aH+0vW0oX71DA8a9+o4MvQpnv70U45Y8JwNkvQBJ9LvgwLY8ZUG+PXTZt7yC7cK9xVCCPcIm
                      PT0W0au9GOBfPLRUxrysbrS87lM1PUBDrTyuXEQ9ncvHvTavZT00zZi86FJSvNxn6Dz2oBW9AFYl
                      uSHemD1WRwK91jyUvdPBnD0GDXI9wOxFO4fGTb1Dmaw9OYeFPXLHtb2P+ba9bASRvAYJib3kNwe9
                      ZAH8PKmokj3gB6274EuYu4TDFr3927e9AKNZujC9VLxisVU9hILTPFenwT2gR+U7hHL/PIVSgL3S
                      /TE9MGgQvYHMwj0IpZw8CPyevDeKhT2ARDO8rjtEPYc8yz3AgU87NTmKPeUJy72QHFw8MKOLvfa0
                      Dz3gPyC96iUhPY99s72Qe229ClNnPbbvNz1dRpq9mAKxvTNvkL2AGQM6EKZSvLgxm72gX8I7k6qt
                      vQEXvT0QU1A8e2WsPb7ecj3CjIG9VBzSvHvgrj3i2gk9QwacveVst73Q0527+6qWPSmjrj030Ig9
                      LM4IvdjLOryjqsS9mQO4PfAgkL1C7H893l54PQD/yLuA5oY6zAyRvCDVhzziyHg9NkaUvabJXz12
                      xi8909ZevSihdLwAbKe8rh0nPSQIB73gf7U7sqFKPQjvkbzS+Ju97OcTvaCCebvVpoE9gORSvKF5
                      sz3bm789AJ/su0aiLj1I54I86FmfvZQS2DzY4Da8AL+CvDp5lr0AFUS8RhkNPQADSTqjgKk9mCWj
                      vPtLyD22+yQ9V+N2vX/Clz0y53o9GAyPvKzz0bwUHfG8wuZvPaucsr0sZeo81IL8vCBejjxXprI9
                      71qdPUAWIjxKHmC9XZSxPVG2kT1jZpi9SRW0PYqjIT14EIE8wBqNvJsBpL1SqLi9JKTWPKwMmDx4
                      aYe8wrvBvUb1LD2W5jg9jsNnPTRZzbzy94C9mlstPSy7Ar3xMqk9Mt4RPYBF07uWHxg9APj6vGME
                      mz0QADG9B6RsvQAmqznC7DM9KByiPFjqQDyx84s9yviKvU/xvT3PJZk9QwacPWpVXj3LYqM9VaWP
                      PZf8Gb145Zu8A8DKPQzp0DwYcIW9V1fHvQgivjxUwpK8Q5KkPbXMgL2Kw8G9EmItPfHwlT1DiKI9
                      Lm5CPaCtHzuffKQ9OqUbPfgj07xAXYm8A1ONPbAeSb2wTdw70MhyPPJfhb0wtVK9DRcdvazbwrww
                      oVC9yr0KPcwOuLxAHy+9zNjmvLAYUbxGpEU9JfCmvW1wmL3zyps9EaabPbrqaL3gX8W8A6KdPUo/
                      Lj0Esfw8ADlXu2w3F73cLIu95VuePe25vr2goHi70oi1vVrznr2ZNck9l79AvbJxUj264T49peiJ
                      ve0yQL0yvg49SL79vNCNkb0jsx29wNesPHKJFT1AOBu78pYJPYAbg7o6UEU9QBYDPNaZi73Szhw9
                      1Mz7vKDSJ70ZiMw9xOblPM0ANr2QCAm9VQehPVhuMjyTQV29QLcyvWCrh7ulk8E9mc6uPQBTuLke
                      MoC9xVrFvYDIBTzNS1q9c+U4vW7Tnr2X7j+9i72QPQPBvb3CDA49TbI9vdKqST2m8kI9sisFPTiY
                      oLws8N08NjuZvUFapT1yFDw9avGrvVqWHz2KG6G9mJ0zvL6BdD0rQJ09HQi3vQBvCb3o9g88mK9P
                      vBb8Xj1ad2y9kpRsPWxRsjzlz6+96JDGPKrfW73AnKs8lZq1vYo2Gb2TfCK92sVZPU4Oo71U+P68
                      5KHRPJSfBL3c39w8L3i1vZP/mb0A99E7I92IPUAIl71P4Ma9NznHPYEWrD2JkrM9XR83vWhjVrzQ
                      rxE8kBt/vWl6oz2tLsK9BLoTvdL9Vj1W03M9zK+8PEoapr2wY+u7Itg2Pe0/UL3AYu68ebfMPQZ/
                      TD0XSMG9KOeGvQ0dYb3wRiU8oipRPeAZxL1bDMM94rg3Pf71GD3IFqg8mLvuvMKNBz0eQGE9Mtcm
                      Pbh4yr3BXpc9qCHWvNbtTj2QSB48GMIKPCVZv73CRjM9T2mrPevqyz0wJba9IxUyvS0zfb1k4vA8
                      ILrqOwt+kD0YXbS8cE9TvdBIQDxA/486rhIEPQ3Ttb1KwoC9os1QPUqqED1AXHy7HOjiPEqXTL2G
                      lqC9oGePuwPbX73IeoK9yPazvVUzoz2S96K92Fm/vW7DZT3zCCu9ICLzO+q4WT2ASA29saDLPZJI
                      DD1j7GK9kG8CvMeuhz2U9+88RWuLPU98kT3T35K9mvtZPUK1yr2thju9wJBnO8fOwr1qsyC9IsEN
                      PURM+DxfooQ9uk1HPQCjhzuuLBM9vqh9PaiknTy44eO8bb2xPSZvgb0Q+2+88JM3vfAOVDyN+sS9
                      TkobPcwH9Dz11sQ9ZCfYPEDunL2I+oA8AK8oPC2oyj0A9ui8qllYvWAKMbu5dKg9hHWDvTqDtr0z
                      52e9fcBCvUgh7rxyAAs98MaUvaX9q73us5K90NhCvSBViDyqjGs9LDHrPGd1iD253cM9d4eAPdCa
                      hDtUspa80kq6vSDnobyQore9vdeOvfCEPb0ccuA8avR3PTjAgbzAxIy9VvJPPaKRw70+Thc999WX
                      PdC4OryR27c95/eIPYcByj2eU1w9gMRlvcVVjz0lOLk9RNzOPOI9iL2yjXI9ePWMvSWKp72SnTE9
                      +kGOvcMLvD1y1HQ9gBcdPHMZP71Mm4q96MzivJjr57wA4RC7FqQMvZhGITylCqG9I1C6vQOttT3U
                      L568VLrwPEpvpL0fpcu90BP8u9PaW709GDy9OIi1PHTnxbwSRcy9kgIXPZKvAj2AvOq70IEgvOjF
                      QzxoGp48mlEyPSjiNrxFxrm9Ji5gPTp6xr06ZCc9FDzEPG3NlL0y5aO9jp0OPSHapD04gZI8Bgpg
                      PbnPij15sKA96ut8PY28qT1hobg9sgJRPXmfnj3671g9UTWdPeMgX72Icau9Vn0VvcbHUz3Sh0s9
                      BL79PNOnsj3d+ry94vvFvbP/l71tlyG91hhJPUfMt72Cv4G9TAXFvFhui73g8ZI8miVGPYAJprpi
                      /zE9GFrdvPcoT70K2n49s0bKvc2Ox73Q+3W8ahejvZS8jTxyo5C9B5ioPZNQxj23rnm9LzTIPVBR
                      vjsju6c9SXaxPWBn8LujoHq9U7h0vaASlbwgN/s7EXeBPXhSo7yntCC9yGXVvMgexTz1Mbi9YExV
                      vSDRV716fDQ9ZiYpPXqBMb0NomO9LMj2vFhIQ7wS4Ya9ECAjvOrpE702+CU9LNiDvMrRH72HLyu9
                      qC+HvSgBCLwXxKI9rQwuvWjGjb3Q+A+9oaGhPXPod708gYy9jzWkPaDuPjuwhns8pKcJvaK1fD2/
                      hsq9WHguPLBEXr1IiKW8POGHvZctkT0S9CM9tD3TPB7Iqr2mDZi97TeJPcI7FT3xFLg9UKP3OwKn
                      oL0qtwk9RM3bPIpbZT1f+ay9AyDBvedWNL2A8JK8qqAXPQRl1Dzo51y8au+GvcmqnD0AJsO85IAP
                      veB+vr1MBMq8pEbqPCj147zTzKe9Sc+JPVEmuT0HMSi9l5ZKvaBZAruhz5U9wrcgPRg5ELxByMs9
                      0AbQu6gNm7yNoz29WYPMPcV8tr2aDkm9QnzMvT3TxD1rcJ49I3qzvbCVpr1c4vE8+hqqvYKPET0j
                      P4+9IHyfuyDfz7z1v8w9dqwkPeVCoz2EqN08MAa6vVi7OLxgh4Y795SJPeL5VD2PsrW9UtaCvdLY
                      Hz3QiJe7gLKwuwDBDDvaEMi9F4pAvWnSlz0JrqU9YnA4PeK9aj0E6RW9ow2tPfR367yA8aS7HWBX
                      vYkQij29Aym9UK/KuxAYyb1Kvqi9EJGFvWAYNLuApYE7SxLHvan2xT2gEVS7x0nFPboOPr15kp89
                      EBhovcM9mT1rmba9NBL6vH1sJr0QLWy9dKXgPM7Zl70fUre9/K0EvSBUp7zTaWO9LETpPIExrT3z
                      acm9rpsUPRR81jyIUcE88OWuvbTNgjx+N1Y9YFW+vJgdE7zmxoO9VKuDvHohjb1mnhA9sECJvTg4
                      jjwvr7W9kolTPZ0BNb3ULIo8KuFzvWDI+TsadB69Hfa5PS90vD3s+aU8Jx+GPUD8Fbwgu6q7YmAB
                      PYlthD1sqt08YHk6O0Y+OT1xGsE9q7SYPaxzrLyUhtq8rcanPdJzfz1oxZe9ILKSvEjxmbzA8gK9
                      rByuPBerOL0wpVK8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNTEwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyOTAwNTEwNHEBYS5kAAAAAAAAAEwkqjwMEay8ZPPyPND9yjueOGs9iuZcPSRQ6TzQmRG8
                      NbC8PTZAF70tb0m9QthfPSgEfrzCriA9mLxivPExvD0SQau9e9WYPRhmBzxIl9G8Pv6pvYC2uLt3
                      dsm9+I6YPK0NHb1fS8E9XFn/PGpZGj1g10A7qqcWPdUpyL2Ydbc8rNiNvLj8kb1UVvG8EDkBvLBt
                      sLsCqwc9YK48vYOtUL3g3sq7FYu0PfECvj2txme9EP4MvQwhwLwATnC8dNuZvEwHujxIdqo8pMbt
                      PPb+KD1oIQS8sCmYvVKDID39/6k9sPCNvRi3fzygEKy8EKskPJpBXD3e13M95jg3PW3ecr0ArgO8
                      1jSQvWD0D7vlG589p3WYPbCAbzxYSRE84MGCPITjBr0AyKS6CqqivT3lsD041Z48MAtCvMAK4Trq
                      JX693yvFvTCSBr0yw5i94gO5vf75qr24koG8F25DvcTA+Tw+Hhs9mhWlvdgIETz+YYy9Qeq9PWjH
                      tzyUj5A8RpEVPRjyubxltaK9YRXBPVBZDb0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNTE4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyOTAwNTE4NHEBYS5kAAAAAAAAALexu73khoq93/SVPWjQKTyHYqc9OQGrPYBDE71jB3S9
                      MKH+u4KIlL2ItKy8YE/9vM8yyL26DhY9LPq1vAi0qrxAmFS8qYumPfjBgb3lwL89+J7jvCGQoT2A
                      Z6A8P+miPTGFqD3YP8y8Uot8PUDeSrz5LYo94NXSux5TPz34ZMy9aMesPEKGmL2AEw28PYd9vQ4T
                      OT2SSFE9HxKHPXFdiz19UGm9esdrPX1kYL05hbY9bgYVPY2fij0qwMW9RIEJvfqagb3c6oi9eptW
                      PUfyxz04YZ+8Opc3vbozML0qXSy9EJy3vQbiTT2XiXS9ANG1vPSu9TwvuJg95z0ovSWMqD2iI1E9
                      95y0vfcZQ73HJGe9AFx5vTOHtz1/6KI9Y8+APbOlnj0SRX89mMOHva0kpb16LAA9kKQ7PHcjbr0m
                      qRa9132hPeQ44zyiEGs9NlwYvSvcgj3YsXQ8wpE7PbKLHD39FZa9vuZrPeJxPz1XJJg9of3APS3f
                      Q739vFC9g50ivVjlzrzwySG9jPbRvHi3ijw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyOTAwNTI2NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyOTAwNTI2NHEBYS4BAAAAAAAAAGj1h7w=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        e+XZO+bUHjyBNDY8gTQ2PBWA6TviR/87NIsKPDSLCjxAtK47MhvWO/oCGDz6Ahg8QLSuOzIb1jv6
        Ahg8+gIYPFdXVTya8YA8iYGXPImBlzwoEBY8524fPFrIaDxayGg8K9IHPOFIDTzyL1M88i9TPCvS
        BzzhSA088i9TPPIvUzyTwU88zZqnPMUttDzFLbQ8vvNEPECiSjybl6Q8m5ekPO+iCTypQBI8OXh5
        PDl4eTzvogk8qUASPDl4eTw5eHk8k8FPPM2apzzFLbQ8xS20PL7zRDxAoko8m5ekPJuXpDzvogk8
        qUASPDl4eTw5eHk876IJPKlAEjw5eHk8OXh5PGLrpDuFP2I7ijlFO4o5RTsG5pk7mcSMO4ewgTuH
        sIE7VLHNO8LWpzsUZmw7FGZsO1SxzTvC1qc7FGZsOxRmbDvYcCg7V1gLOw0w7ToNMO064XdvO/pk
        YTt+Xxo7fl8aOxhKhDvfWH47oSgqO6EoKjsYSoQ731h+O6EoKjuhKCo7C/gsO8pn1jpaccc6WnHH
        OhN1NjtmVzE7YlTaOmJU2jpii4I7ILV1OwsMEDsLDBA7YouCOyC1dTsLDBA7CwwQOwv4LDvKZ9Y6
        WnHHOlpxxzoTdTY7ZlcxO2JU2jpiVNo6YouCOyC1dTsLDBA7CwwQO2KLgjsgtXU7CwwQOwsMEDs=
