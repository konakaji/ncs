N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODgzOTM0NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTg4MzkzNDRxAWEuhAMAAAAAAAA7IWq+0yeavnoNTz6XdZE+CGKhvkCx/z0g2TO9lpg1
                      vptnoD537JG+Al5XPuvTlj4AYmq+vEnivVoPqL7GFFe+xJb5PY0glT4e8h6+AK8tPQpgfj7QtbM8
                      JhV2PiBRHD300ao95w6nvstOkb4UgYg9qBuOvtDjDb69NZ0+YHluvNyCj76+vBU+888FvsQrqL2a
                      dgM+0GsRPt5RXD6IJ1a+3rySvkyRkj0M4Is9dpIDPt6XDD7Q8t+95vpiPlUdjD6z2Wq+enGQvrB4
                      uDwsbeU9DE6pva68bT5OvX8+fKf/PYmuoj7xaoc+CCtFPRy14j1Cdl0+u8ylvjtyB77g0jG+YIx7
                      PXCRCL7DSVi+bMKZvQmkgT52IxW+tshuvtYQr702WpK+chIxPkC0rbtLFQO+WrVkPqM8VL4Qbqs8
                      tTGaPkDugD38/4g94yFSvkjuZL1874A9uK1WPZTuoL6uKnY+yFKIvoiiNj1gSoq9iotoPpibX70a
                      9ms+tG2GvTA8wr1mlZ2+JE//PR/MjT6uZIe+eCYuvZAp8L1g5lW+WvYrPs6gG77H2Y8+ULBKvuYo
                      bj4ygJC+6stRPgDUhTpAiDE9gGrfvOOLF76HV5++695Hvr4dk76qNE0+ICwNPoZUBT4e2T8+kkMS
                      Plxuor5ycIG+FITmPVrqIT6dj5o+ODAPPZAYyr3geiq8K8ZwvhvFO74u05u++gI1Pmsfnr7CORU+
                      2b6fPgCAfDqUd8Q91tjEvWaUT75UmZq+cCUaPirIUj7bF0u+MAaDvSLwnL7rPZs+YPVbvOh9pL67
                      6Q6+eqSPvpBKpT1Y/hq9WwuGPhKuYT6osCC+kMakvJJJcD46Bhs+WJFmPYMUIb7NzI8+Bf6CPshi
                      K72D6YQ+ATqIPn2vgz4Kc1I++DUaPRuSqL6ak2c+y12iPsjeUj0SyAg+pAqDPb6Yar49ZZ8+Fsw8
                      vi4lar5QEcM8uKtrvvY5Cb6A95i8gLMivMu8Pb7hD40+pv05vrx2qb2AdRe9a6GaPjxWr70iL0o+
                      9pHKvaBrgr28rPu9/lQ0Ps4GGb7+0nA+4BJHPcC6aj3CMng+WWqMPgCzGzxG4H6+UvZXPnAWgD3r
                      sTm+kxWGPnI+Yj4yQUg+DFeuPXZDG77OwDQ+oNF4vRY/or47jWe+ZsosPmiUYb1AQLu8ECwivgmN
                      mT5SrgQ+Njgzvqbjub2lBYw+/qUpvgTrgT0YfUI9POnkPbxl4j2UuZm9sIWDPBTW7j1uhkE+RJ6G
                      vrRl5T2ARMM8xoKUvvfmnL6S4SU+vrIHviyThr2EWrc9W3RDvrwThb0sjcM9wjxDPlBenD1a9pS+
                      gE/EPEjKar17m4s+VhoivoDORL0qXmo+C39IvphcBD2MW769jjeiviGenT5Al9K9QFYqPcs5Fr5W
                      2E0+AAuVPCDNEz05fYU+GKxdvRMiij7sL5e+OEhTvQcjoD5YSRQ9APpDPRPsWb427+293FPKvQDx
                      pbrC3AY+rG2lvgL/Zj5AKgQ9EC2APYioCL4KZQ4+Jr0Svn4zKb5wiK69ITmAPgiBbr0D26S+gNON
                      vIihMr0AdnY8nOLcPbCJiL61WqU+fq+RvrNgBr6gzf69QJDsPJAFjL5sudo94FNevYLaVz66UYu+
                      nNq8PWjfJ77gUly8ILEAviB5P7w854m9oNSivv4Aez5kb4O9wHX9O+hCXL2WpnO+4N5+vCAUeryA
                      ENe9rg1UvifZkL4KzVQ++OUSvYgucb5Sa3k+ICkkvQNGV761KoI+W4sXviwGpT3wIa692mVePsuZ
                      Ib7vlYc+TXeRPgBV0rsuxWc+dq68vYb6+b0Ot2Y+6y0XvrAglLwkNZU94LnoPXyOx70ONQi+aJZD
                      vgA9lb5/1o8+DGGcPQyBgz3gazg84GZKvTBburyj4pM+0J+JPF7KWj5A/3E9jvRlvgbHSb76oYG+
                      UD/+PLxhvz2yjYG+wNFpvWPaCL6EjsU95PPYPUyDr73AL9S9K+OkPgoBo75NTqk+8M9svsJ1Lj6u
                      cTU+2PYOvXxjnb1gCwO89mpivvfykD6ye4S+bxyTPqDDIb3MRam+xuTVvb07gT6sY+y9IOcKvJIc
                      kL5f+5Q+KBYpvabqEb5+5G++EEKMPKOlEb5kb6M92LkxvfbQXj6KPoi+PDfBvUA6uTvrs4I+gJMA
                      uybWWz5Z854+VtEqProEaj6gKrk9qreDvhiuJr3nEpE+2uRUPv1giT5caZQ96MQ+vpDyzbzWp3Y+
                      pOeePXAulzyuugQ+Njqovv6xGT5A6qO92R6OPkCntzuJcYQ+AEynO+Bztb2KaJW+7LrlvSC+Q73D
                      cSi+ZPKVvandgT5C+Y2+4KJePA1Rjj4GCOy98FOUPT0hkz7o3i6+7DCYvhiobT0j6Y6+/NP8vTBr
                      mb4C7QY+NALFPXp2UT5I6Cq+0xInvpu8mj4LXSa+NsbFveSxgr5eaDg+7o9jPprzRT7E+Y+9GnGj
                      vtVTiT4RHpA+4htIPjjbLr14RXs9mF1avdBXiT3rQyG+ftVQPkA+Hr6guCK8jFydPaBnOD2grzO+
                      FiMvPvyWvD3NbYg+YMApvMbBd74RVIw+UJQyvlyK3L0yPR4+fD3NPZOEJb5C5D0+WF2mvkGSlz5s
                      OJq93EaxvUxjzD2ulCO+er6UvgBpor6Qk6+9OzdTvgAQrjm7pF2+VtEjvgD3hTz4nlg9tp+dvpcN
                      qb6AAXg8WNacvtkDpD7AXCQ9y/RGvqKyor5jqW6+EsBPPhQZpr1c4/g9GA9PvejYa74wimW+YVyK
                      PqCdZj3ey2m+oNAwPUw8oL1uzUO+eCd6vSXYlD6qnB4+es8VPioVfj5Ifja9cdyIPsNdTL7gh2a+
                      4DOSvXjMSL7lHYs+irmivppikL6yUF8+ududPprfmL4KF2I+oAWhvaraOD5WyCe+tzucvmYjpL68
                      VtU97WiKPsDcqDwsqNW9G7yEPkRfjz3Mx/29ISGDPg6GA74Guia+QDmFPIEznj6mGe69ruiovmxA
                      ib2TUgS+sOegvhk2kz5ieCw+q6lovlyq0T0uZ6a+xmwZPsDplLzja6S+oKcqPggkFL0eh3M+KA4R
                      vVXChD742Bk+MC2RvGhDl766SEo+i8R9vsSemb0Al5K+4I/JvV6xW74Q3ZC9OCwqvoBaFj04eGq9
                      +z4pvnjZHL5uZVc+wN/sPBNLoz4W78O9iBkTPm1RjT4XVJ6+liAAPqG3kD7oz169gN9HPJz+5b1M
                      Gtk9II7lPa1zhT4sHM09GnhgPt7XnL4oCjy+qY+aPuCQcr4Apxy+qm9xPiIDo75o43k9g0U9vmTa
                      tz2MYaY9zl2WvjDyszwoVHc99m1BPuBuLT2A6Vq++TyEPpZnPD4Qr+M9nOOgPdqdk76QjE++a2JJ
                      vuzDhz2m3fm908yHPoAP0z14XVi+rtqSvkjXEb0CRgM+BYuePixH771cb/S9HOyevvZ1vL1jFAe+
                      Y5R/vqBcSzxu4EA+cLM3vgAg57nw7Jo9DB26vf7rXL5zZAa+QIeivkAQ0jvgqX+9trQ+Pki3JT5Y
                      blC++NZ2PbC5zryVPqo+C7miPkbZv70mZAw+C+KMvvvbo7542i6+AAy4OUyBlL5Ggwo+7hdovheZ
                      g75Csmk+qNAOPoJvXz4Or1G+s70KvpDhAj5yGTY+cFi4PISZ6T0kc4q+PAHSvQK0XD6WijW+8CbK
                      vKDVcr58Ttm993SkvlCdhDzs3oe90GK1PaIGHz6qHyA+NCqAvgFZqj7IJU+9ZwCOviA87b0ODHC+
                      gKzTve9agL5ocjM9fDiyPR+njT4Akhg7RgQGPoVNmT4mjbe9/vd5Pvz9vr0YuDS9DhE0PsI/Iz5e
                      XGW+aIYWvhLtXj4MRYO9aNciPQC7a76a7HY+Wc+JPktVW77+zCq+HGKuve7ZVj7ABz2+yDwXPQb3
                      Pr7pqp8+NFvuPdBTLL5A1Ge+Ev9UPhZQYT76mqC+ZnpXPkfTjr5WqSC+EsFTPuKVFj6SpS0+AMMh
                      vUYfRb7ifA0+DrJ4vsD7XL4wztC8UJCevMCKnjuAGlc8LEqgvngLBD0QTxu+cqYsPmBUHL7gsqe+
                      ZO6mvYdjnb6ofH29lHulvjJljb4enlG+AJoBPL4Ba74ne4i+7p1zvgc5hT78rOI9NoH4vehXQT0I
                      Okk9OIpgvu5gaj5gKBI8KSGYPqi1qL6gnVE9lz6gvrGhkz4ik2o+EOGtPKFWhD7ghSG8m2F2vo4L
                      Fz7+Plk+wMq4u3gXlL60Nfs9jJy2PWRruj3L7IU+tPiYPaCexD3I1gC9ppZyPtoodT6Asrc9Egen
                      vvzHj74zQYo+5P6GvZA8o72+ZV2+Ab+HPtumo76AAA09eFIvvaimU73gJma9ch46PgjgZb39sYI+
                      e451viBCoL6iLkY++UODPlieAb6w0PO9wMT2vY0fij741Fu+dDeZvQBD2TpuTHS+2S2NPpwxuL0W
                      fXK+KCgQvXDS/L0YZmS+yPYgPcwLyT3BDIY+xD6GPYAZGL4nBaa+nM6LPYBAijy8Vfu9wgw/PmoQ
                      Iz6Ocy2+px+mvp7XkL5oXFo9ZLiRvaCTi75Qc5g9/YmIPuCPjr7aFHY+kCeEvQBH6L2bEDa+r5qL
                      vpInFj5QGcQ80FWmPauehT4G8Tw+8SCMPqWeiT7JZZo+fHyCPYC/Or2SskA+4HQxPCqOWz4AVyk9
                      PbumPt6rZD44pUY9vMnRPesQWb5rnmK+19CJPr5ckr5gmee95Ie6PSNdiz42lFa+Gms3Po+pir5o
                      iBY9SZqWPuCiCb4erwS+AJcivLY8Kj7lupU+0jBQPsMOEb4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODg0MDc4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODg0MDc4NHEBYS5kAAAAAAAAAGzzoj0fYKq+baWoPiqsXz57pCK+iFddvloCLj5gQBc+
                      B/qlPskVij5QxXy+6oJSPsi0db2PJaO+7t0TvsYpWj4Neak+WXSnPj2Mlj6kmpa9T2COvlrJfD6z
                      YoU+4JMUPeAfAb5Yd4y+FgGivvAyij1bhKS+diDbvdJbST6gLJi9HAWQPQbmZr45sZE+QyY9vpJt
                      CT4bVzG+eGVpvloFWT4bFim+cGrXvDo1PT5w1KW9kMeFvMQZ1D1AW569zjBGPmIGQT7AvbW7XEyl
                      vvx27T0Iraa+8ETCvDjrOb4QSR8+0EvZPbDigT3Drxq+YJYWPQC96LzgYx28NrYFPoAiFT25UKI+
                      ord7PrsSnT5GiHa+Okk0Pm7vkL7W7jY+hS2gPgIHfT66IIy+QF/UPQApGT7gsK69dvIePsvuOr6G
                      7aq9J46hvkM2pj5Qvoe+yxU1vrbtXb4qCWs++5uDvuUPlz679pg+mz5wvjs0Ir6Y9hM90jgSPpVt
                      pT5SlIO+6aOMPmBCAj3TCoS+ywEAvtrGST4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODgzOTAyNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTg4MzkwMjRxAWEuECcAAAAAAADosEE8jH/qvLCFSbxt2Gq99UCCPXl0gT3gpLG82O2m
                      PGoRNj1yyxQ9mpFLvdj80byMa+e849y3PSBhpryIWpw8QIQnOwLTjL32tTQ9GF2PvFhgcTwS2Ro9
                      rCjgvGc2uD3wWx29yuxTvbAbgbvKHkk9oLqIPA0VIL0AuK28NK+gPBiQ1bzGBgy9nfPGPVhOob0e
                      Hio96IgDPH1IRr2szIs84MWTvWyqkzyQizK8mdW+PQLpPD2+Vou9P/K4vax/lDztgLQ9KEgWvMuz
                      m72U9tS89TiFPTqibb1sjQK9jjlYPTkIkj0AgWe6euJvPRdRhD0MQK+8VJXxvIP8V731LJO9ifPF
                      PeDdYr2rqJW9MiMxPZN1XL3Awyu7Cd69PRgEQDwx+JQ9eCCJPEGPnT0ibAI9CGf4vPAGUr2MAq68
                      UO2ZvUMqxj24gs685dXIvVi7yTz1oaU9RcCLvYhYxryWQlI9VztPvYjowDyy4xo9iy7GvYDmSzpQ
                      rz48Ny5Ivcwz4DyheLU9clS5vUTPDb2ARwq8eAipvTLdVD29KcQ9drVBPbP5Hb0lGY+97UdxvYYC
                      Sj1Zy4899GPZvGgv07z2Yzc9Rs6AvWAHZrvG94G9wJ1zO4x/gLxAyFA7D++WPT3Ytz0NesQ9lAvk
                      PDLKIT0uQ5C9G2KWPWhkJbxu8zI9+zCUvYDMcLzAGu06VUyuvafbuj0xM5c9iCyIPAKKkr1a8W29
                      ouwwPaD+vbuBU8Y9vr1UPeNikb0dHC+9YZecPSTJ+zwpFLQ9PZa/vdozWj1Yds28MJp7PDixkzxS
                      6pG9vYqXPb+eiz3adUM9QdqqPcN5mz3j6Mq9nfvFvdg2wDyyo3E90wCfPeqdH72gwgM71qoBPXO9
                      Yb0ySF89B98kvUs8vL2zmj69phNmPRCtb7ytKS+9AEUTvFDfo7uaZoy9LOGrvPJinr30Tfw8uY+c
                      PbNRLr1NH4c9F3eGPbVyxr0G7GI9ojCbvTgns73NrZC9QpS5vYc+tD3KKxe9dbyLPYYwGD1oNR88
                      DFKQPIqXQL0pc409dLPkvKV4kT2wYiE8BIPkPFovk73vOLM9lwJZvScvKL2mXoS9I2uOPf9Rgj09
                      6Lc9t7C6Pe2Ve70fwqY9tmgnPYLDhb24GMS9gwiHPaCdrjt/JJ49XAaKvbK4Gz1yEE49MAHKO0BJ
                      GTxgd708zfB5vU/tkz23ALo9ME7Au3bZEr2Dq5a9snHEvZ9ujT0sI7q80gg/PfNoW70dfJu9KJiD
                      vACMkTuadms9YKqxvIDcrLq+bpS9YEm7vEBlLjsghf87GQmkPZBUm71zBGC9KId5vH2Qpb1AcjI7
                      hUGpvS4wTz01T7E9YnNGPQjXjzym9Sc9IO/OO8PgQL27Lcq9ppgIvUrqfz3aSaq94kPJvbZFUj2C
                      KTs9yuFavYPdUr0QSCw88/ijPXe1sD3gVKW76u0APQoNUD1FKZg9gOCePHmfmz178sQ9ioNNvar/
                      QL31JKa9gciiPX8ojD0i4Eg9LB78vG2hor0Ac548stQMPTFwpT1gWbm71Ye0PQMdur1QTQm87C/h
                      PCPTj70/IMu9oNMmO/TNxLzwwlC9MoYMPVNfOr2a+bm9M0mlvU7KnL2Iy8W9wHE5uzoJRT13hLq9
                      7RW8PYWUhD1Oa6K9zUejPSBjTr3psZc9qFxNPBl0xT2F0cK95mswPT1jHr08xwi9E2p9vaAqozxA
                      2bq8wqwUPagYjTztyJG9CCqLvZMlxL0ZecU9AI/GvQ7aj72qdXw9GJGlvEAODjxx2Ko9OnuxvWIn
                      Zz09S7M9+KzDPMyT8Lygmj27zWmVPRACUrxyJyk9IrSVveDYmTxFqYk9OtVSvRbhq72bw6a9joGJ
                      vRiqor2Sja+9cqw6Pdiux714opq8qhdxvRwSC70b8cG92d2BPQK5o70oXE48qL5CvD2VtD2+Bng9
                      VC4SvdgIqbwcy+o80Ip2vYU1hr33m7A9AO7EPFD6R71Ap1+8alJVvYaRkb0XbDe9M4mcPRa5CL0m
                      wI+924i+PXciwz1EsO88cE0dPBr8ob2wcoC94mK1vTqqNr1porA9arxlvVCCCzyWX1Y9gHjOO4Dm
                      eDqgP4G8/fWzvfxP3zxl7Yq9MKsQPC50TD1moQO9pLDxPLJpvL3Usqc8sKPkO7AP9zvoRMQ8VjlN
                      PcjlhDwxH6099E2zvP1grD3AKiG80npZPRHStz0w4P07qT+APbovfL3gi12905ijPWgUojwAvu86
                      YAc8OyaGp71gyTa9lJmuvL55ej1qcBC9oOHpvPhLqjya6Ra9CU+NPVacob12cwS9trmrvbD4Ub0I
                      MNa8djSFvcOeyL0ZAKA9Bt5IPXZ2LT3AVAO8OlBQPRYvKz1+Tzo9Ikk9PdKKVz296lu904eqPZ6N
                      Gz1dGoe9cR6BPYgjp706jy29HdpdvSC2BL30YZU8gGRbvI/aoz3d9C+9+kwEPQA0TbpA98O84uVn
                      PdDKcbyQzii8AClIPC5EEj2yZnc9OGSsPG16Jb1ocIS8wEMFO+UDiT26BcO9pU65vejuFDxIcJE8
                      WshPvdgi4by6my09ImwvPYNJlL2Ug+A8oUysPWBsSjta3K6952SEPU28iT3as3I94UuFPQePsr3b
                      ZYI90MhnPB6wfT1wJVq9ned7vfLtCT3WHDE9UH6tu3nJpT1LaI69NWOcvT1JHb3lqoQ9XaevvbcK
                      kD0YQX88ANxMvaCdgDxopT489JyDvBWcjj2sYPO8ANRhOeB4gbvNilm9CfKlPd8ohT232GG9l9q0
                      vRQckbwWjzc9TSSwPVYzHj0Sx009ui1NPe8nyT0N6L89/ZXEPegVyb3nPbk9vbVOvasSqT2yubW9
                      QM82OwCJjL0G+F09blQrPQKDQT2FS7o9KZq7PQ7MJz1DRLO96t0uPYMnTL3u0YS9x1MnvTq4f70r
                      QLi99ranva7Zk72Lk6U9vbaDPUOsq73wPC08lw15vdifNDyUwci8v9C6vTURpj3AAai9jVAhvSAc
                      hTz1+pE9gLHUOhLBwL2V1Iy9wKCYOtA5bjw618i9Aig3PVhEdbxgscO7gCvFuoD03rvMmfk83Yi5
                      vZgtL7xMk7i8qntGPU6bRz2T96W9+qhNPdpxTL1O+KO9dxHJvV7yWD0ZKYA9jiGsvWDpb71qBpu9
                      OEmgvUJqWz3Auha8kOKCvSBHhLxQCs27FQu9PTfIjj0EWvo8Io55PRNJhT03uFW9mE1IPKj++Lxw
                      6Le9Kvh3vcyR3byW1049d6i+vT5Obz0A4/m86NyuPPNyor3AOnG9YG2Ku414Sr3ZtKw9Cq43PfcQ
                      hT2YXVu8aLtvvM8Yrz039lO9Y+TJPS5eFD0p+489yBuivRCoWjwA0z29SoCBvUbUB72aa3M9bksv
                      PdlExD1xMYs9WECYvSCe7bz3nrG9OI6CPCj0NTyLQrO9uHKnPHPDlL1YQB08uSmzPXcKpz3qFXI9
                      5xxVvTrZfr1ymzA9xiSJvQCp97zJNZc9NyEgvZO5v72UZYe9R68+vTYMMT1nQSG9ZbWLvUjvkryQ
                      n008GLmZvPdYnz2Ps7u9gGWOOkBsNDtY3KC9lPWzPKMjRr3lzK29ckwbPVS2+bwjE7y9wXu/PYA7
                      ZrzjaaK9AEzAPMLKWz3AmxG7eh4UvVivGryYe5G8fo1rPYyYzjxwcBW9zOuFvMW3qj3nCLw95OcF
                      vTqsCD3AeoG9Yv95PajWlr3ga548aD2HvRiivr22LRk9B+u6vewk5LwAx507BqNQPRrIKz3KFxs9
                      LxK1vfKHZz0M6Ae9OpI0vX5hSD03OH+9Uls8PcPnhT0w2eK7ZlwmPZBaxL1C88S9y32NPXCpg737
                      jYA9zO2XPDzoC720grM8LGrZvGwbEr3NSyi9mhDIveJSv72gif67nUWDvYBx5buwDUc8+oGbvW/p
                      yr3gUIS7jlQJPe4MaT1Q2/Y7qSe1Pc/Wwr0k0/E8gDvquhfQa73g9967Z3SZPe10Hr3Q0j48ERjA
                      PShiTzxyUSs9PPPRPPMpQ707XqK9ChWIvXuBu70bIZy9SqAWvfJNbz3KQ2y98DoavIAV4TvdKZ+9
                      oLmtu+NANr0YN7G8A+qOPQLfi735UcE9wMgLuzBGgDshwYs9ogJDPbiRor314p69YmslPbACZDyd
                      lHS9p3hRvdJ7Rz12dIS9zLW2vJDNVLy66gq9HLOCvRfRVb1garO7NYekvZINHT06BGs9DJDOvEy1
                      7rwU54O80LRbPAB+djuAkbc8HOzNPJhfsryHM3S9hX/FvXbzfT0AdKK8eCCcvWfaJL20z4k8QLMn
                      PHJaWD2oe3M8105UvU5eNj0o9tS8U3+vvf9ft71SXFs9gLNzvXD0VbzWCQA9IoWcvQNFzL1QqGY8
                      ko4GPZtolb21YIY9KkgjvXX7mb0wQAs8RfuGvQDQvbwHqFC9YF9YuwCuyTlCm7i9fwKwvYtGqD30
                      svC8VH/xvFQkkrwA42Q7kINSvSkWyz2Qsz08t96sveg2Kzzdr6+9bO74vBoesr1QMIU7pg1TPVR3
                      2rxgDqe8/v8JPVlAsD1s/dK8wJwOuz6wdT0YZLa94zaOPRkAqT3ubYG9oi3CvS1imD1ilRs9MqId
                      PUyC3rxt3WW9oDPtvMD1mrxdrCm98ziUvYYeCL0qiQ29jGqWPPjEwDz575c9QLyevPOxKr2Bk8w9
                      8XOwPayx3rwRLcI9JCzgPAChGDxSwHU97GHgvPiEqL1EANY89MwTvYsljT1B9LM9wEazvOTW1DyC
                      myM9DMjfPF1RZb2Xx1e9h8XKvaj0ZbzAznm9NLPMPABG5zkAX7y7QBOZOkj1gr0uX0Q92XG9PVcD
                      H724IZa8pi0hPVrNP709Jya99OTDvIC2vbya9Yy909pcvcBQWDsVioO9kxawvXd4I72S6H89QpNe
                      PVx1FL11RKY92ntfPfCVRLwSgno93RqZvYdmM72H5Gq9piU5PXSZxTxom8A8Qu2YvT3msb2mkmA9
                      MLQrvSiXfjyK1lG9ZBvaPOAz2Tvn0bw99CvKPNPiGr0AdXa8zdSQveDmqrwy4Gc9opUePdbWYT0G
                      Eo692BgxvC37XL1bvZU9XR+HvZdPN70CDEQ9uoMqPQCEnjqUI608pWy9vWDCPTsUjte86JmivCg3
                      p7xIy7g8YOnjvL6hPT2FaLa9KA73vFTLtTw4eZK8NdyXPeWuy7130SS9bA6HvaBCljtHCoQ9RAnP
                      PP6zAT1ZL4w9PkeovUlguz17qao98C8EPJ6TFT0D6Y+9CSSfPbm5tz0YecW92ebBPQv5iT3oWn48
                      apVnvd9Zwr1A3jm8NRGRPbEykT3SbF896P8gPJvniT2QFjK8DLa9PPCGeL05AYQ95yuaPXoNLz3j
                      p6C9ILQevRfGuL3Tcok9G4e1vXoneL3uJZy9DMAKvXuetD0WIZC9meGsPWO0gj1PkJ09c2ehPchq
                      mTxAcKI8HbBCvTRN6zydB4K9As6kvVAHpjtVubC9aGXGvJheFbzUY5w8sTC9PaU1hD33L4U9HvKA
                      vX3Lqb3m+G09eqAOPYQC2zxeKWk9CEm2vBigDLyQq0y96FeFvMP+Xb3YoTq8iia/vSL/Wz0lmJO9
                      l6gevdpAKj0MJpO8qsBXPSBX0Tush4G8q+OJPU0WxD3A5cI8wtJ5PcbnPj27NpG9UJjKvZBcmr0A
                      9Lg6rGO/PLqaDD3Q2+87IrFtPb65eD2j5Mo9ADPZOVoHIb2JLqE90IBlvOKqDT2Y1QO8VhmVvU3Z
                      wz2Del69/vaLvZglPbyoxN+8P87Iva0gd73Iocu9AA8Evfmojj1ZUqA9r1zAvbu7lr3b4o+9PJ/t
                      PMZ6Dz3ll5s9cPRTvD6TNT1N9Mm92mN0PemioD1+uU09wJXlvK3QNr3mk4i900HEPTA6jbtzIyW9
                      TKCKPKBGo7wghY08YK6xvQAp1Lxk6uo8i8+0PRioMTxP7bW9oBkmvbJGv70rWaq9VH2IvdhjhrxM
                      8+e8wqkCPe2qUb3pSKE9TKmqPD6nNj0APiQ8wGB2uyLxfz3JnLY9o+aIPSMDv70mAzY9xTiVveD1
                      hbxgOr88O3aFPYBQUL0YY+28aA0gvG2Iqj2abUE9gkoRPbSc+DwDhFe98nCFvUbNqr07s749cVuv
                      PSq5Qj2A7aW6cSuXPV28iL0oZlS8KhYzPQHnuT3e9mY90QOXPXGbnT31iaU9iRiCPY1jNb2XTqw9
                      wKAKO9Yym7163FK9cf2MPYAlPLyLFIY9QtIXPUreVT1iLUs9AAJzPKASsr1Ke2U9+OG0vc/wr73A
                      TKG8rqx8PVpsFT0HF3O9M87KPSqiNj0jlb49FsxZPX6knr3Yl36800QnvRYzdz1KaTE9NeGgPUmW
                      yz1+l049rFvMvABZZTwp8Z49MzEuvegu6byjvMs9mMvxvIpmBz2EJ/w8HFD9PLTx8rzERN08qhxx
                      vTe4eb27ccK9eHfMvG2Akz2Q4QS9Et9RPdCHr71u/zY9ptMIPRfddr0gzbU70jOyvdI8Iz0Q67y9
                      qB5VPDUZtj0OPRk9sye7vd0Lbr0Ae6S8QBlyvdC1rbvdlWG97c+rvbeLwD2mNKC9gE4VvdJIED0X
                      Zp49bGTkvH7koL2on3Q82bajPSJ/DD0788A9QGpPu2C0AbuEpfQ8/mRqPcrvbr26iXC9E5y3vcNY
                      Tr0yJTg94IW/u+DRrLvyaj09VBybvGCJNzvaXGQ9qsXFvTCWMjywt8u7dEfdvIPHhj02pTs9BFr+
                      PERU/zwvtcU9ZCoPvR3daL1SlHw9MLIbve0bZL3KQSM9n1iOPSJOVz3s8ri8iHO6PHKrKj1K0H69
                      Y2KiPWgLsLzmKXE9SGyHvMhnvDzQrZs70j2tvZPCML2u5pi9vQm2PYiGuTy2K6C9kPoaPJ1aTb2r
                      NJ29K463PZqdfz13Wr+9PY4avWEAwD2uOG896QPLPbgtsLxYHsQ8cjA3PdOsRb30EaI8PU6CvWy2
                      kLwYg7i8eIqvvOcndL3o2sy81h2JvcRWzjzcuoS9gEepOlxm/Tytc5O9gDjiu0FNyj3+GFU9gLHU
                      vPi4yjyDlTS92vk1ve4sFD3Y0Vk84I8VvcKtXz3Llas9gxGevXK6u73BLKo9ACMivRnmrT2HMEK9
                      4CDaO8f4LL3AS1u9kKocvEDdur13vVK9wPquuih+c7wgiME7kNFwPHbnZT0ax2U9bD/QvAdqNL0L
                      NMQ9UwKkPSayQT3mdAs9dam9vbWEt71SIW89yeedPRLWqL3cpu88DWhBvWubvL0CHEM9zqSovcZ8
                      qr02MQS9spxVPSjmRDx6Rzy9/stwPc1+jr3iK4C9XiKBva27Xr3DHCy9paygvaAEnbw61mW98nYs
                      PdgetLzZ1I099oeCvRGBoj3TJb+9EkYdPUAN2Lxsp9e8gjYlPWNfRL3ifgk9Ii9rPZctL70mSHA9
                      zNOwPEcNZr2ed469gOpCvV4fpr2g+pm7WD5RPK5mST1jpXy96DaNPNAMk73EyxS9sGSmvcZMaD2X
                      /K491LwEvTDI0Lvgnqm8oP52u+j4lzyQPEK9sN/WOwexVb1go167UAE1PHeNyT1oeae9aE6ZvFNL
                      wT1esDY9rTiPvT4sKj1tmyG9oAaAuyU2rz2AP5g67UKJPYw657zgfFa9QmueveNLmT3GWw297f2x
                      vR5Xj71KUkK9QOVjvbKVHz2fOoU9etgXPTMCSL1wPXy9AqdnPbpgoL2AdiO96Y+VPYB/JLwDiKS9
                      I4dFvWCvlr0hkZw9ur+hvWfHRL3MNcY8YCTZOygubjwqNz09sliAvSBmWb3YLgy8wmkTPUD2erzp
                      YrM9jeY7va50VT1o1YO9wnxOPeUfjL2H4jW938y/PdAPu73t/bq9A+quvX34Zb03Ask9VHffPNDs
                      lb3Cc4S9AKILO3nuoj0SpLO9DzWzPZ/bjT2aDnY98BWNvfOgNL3epAg9gG+VOno7db1QCb699LnC
                      vFDshruZ1qc9YJhLvdBUZr0CX3U9cVDMPTCXLLw6eZ29/e2Bva9Upj1g0a27+46PPRRdj7xqzWQ9
                      GVKHPQIVSj0BdYA9lXK5vYBvqzv1wZ69y/WXvYz1k7wAmJY5CE7KPJxeEb0MoMg8Qm0OPZbMF71V
                      34E9LYerPQ4qKj2AqIi6nxTFvSdqjz24isO90ME7vWiewbyNiMg9ZzdrvQXxqr1NJ4k9ZeGZPfeC
                      rb3gqJa9A8uTvaAxZLucmOs8NxKRPTzTzTyWOh49FUqPvcxvkrxQ7r69AFaLPPQ40TyqqJ29tJar
                      PKcGOr0C1BI9sBopvfwUDb3u32Q9wDDvOiCY5bvQuMa74DvOu7JiSz2NvFO92B8MvNXDzL3kD+48
                      rB3WPEDqhbxOOoO9CI+LPCDHsrujvi69kT7FPQPTYL1dc4e9nTErvRTC07ziIjo9mTjKPXiqhrwq
                      OzO9IBbBPIDvHTwGhzA9jMHMPBcRd70ykYm9kfyBPSpTDL0JKoc9wIZbvExJsLwwRo+7IGOxvLAx
                      cL0p4LQ9PpsJPQfutD2guTe9P8HEvcr5f70oCv28wv8dPYCssb3YSby9hDTmPEgQhr2eooW9Yq1d
                      PRcjvz1QxTa8E1KnPUxKubzQK9C7AB0xOokzwD3m1Zy9H66yPdWkxr0lpsu9MOiBu4CGIjx4V8E8
                      dxaxPfgimb3QJs875zE4va2ivj2KEw690oDCvQ5tWj1tRpw9APzwO5CtP7yUnuQ8MCK+u3Uwh70v
                      +aE9BPzaPK3yxD2Rmsc93y6tPYAxkzuKhcO98AEuPPLzND114pw9w3wevUDJRL2W+Eo9QB5xO1hj
                      IjyO3i096XKwPYiOxb3Zeo89j1qMPWYrkL2XapE9h7MdvfA2Yb1S5n89Mi4YPewfx7y1opA9kXCg
                      PUNjjD1K6Ww94djHPbu4qr1YIE+8BcaIPf27tz0AeX68EB1yvUd4O73CJwE9wH6APDBxKTyQ5Gi9
                      ZcqePYqHqL1Ori89/aGkPV9Whj2Amhc82hppPeYiej15sp898qDJvVRtGL0J+rI9PX5mvcY+Bj2b
                      2Jy9tKPKPABhbLrQSnE8u06APYB79rtX+E6990dAvQ7uIj3sVKO8UHBhvedASL2K6HU92pEtPWLy
                      mb0okk88s1uWvQAt87w5M789UZCsPfOvW70tzYw9sCFvvV0QHb15J5w9AXGMPYPGx71gxHW7rZZf
                      vSnhkz0TszC9liAYvcHRoj0Hn0m9khhFPRCrPLy2jys9jXmTPasho704Oq88UogTPWAXbjuXDyi9
                      O9C0PXK3aD1gHmK9Ey3MPUDxEjsTpLm93gcwPReqT704F4C8PaE0vTCYg7tdq1q9yCWmvLoMKb1w
                      nUq89sUIvTPjQb1ivWo94gmTvR38KL2Q+wy9m7aAPb94pT2wv8m9liRZPWoznr1THLe9w1smvUEA
                      iD2Dtqm9TzecPcMnx720vQ29U0mTPdjKEjxhxMw9qlszvaA/77wBb609ggs2Pcr/gr2Ag/O8gnxy
                      PV/bjT3CTkQ9wJRWvWWhjj3AsO+6QKxnu/QH5Ty66yK96PlaPD5gdj19MHe9rD2ePAB+FDu7t449
                      2PS+vbN+qb0yNAk99xfCPdTgir0NEWO9YC3YOzp2gL0+MSk9KFTKvSpLVT00voO9bd0pvWJ+Kz0A
                      KWy9Gs8bPSAY8TtzXV29M6GTPZKnAD1AogC9oD1KO2AWzbyToHa9GAtKPGxruLzHO7g9ZweJPT2J
                      HL3gcR+98q2qvc0rtL3/tIE9U5mlPdfHrr2YGfa8ALK+vBgkxr0SjF090lVwPf1HgT2xIsM9404i
                      vTDTiL2mx6i9oEGwvRixgDykFuw8ektGvTafOD231489ILXhvCpaNz2zV469lFD4vNdwyr0u8oC9
                      J+KSPTgHnjyraKY90z4gvbMrqT2K3mu95HfiPKWbh71QYIG9ykZLvTDIf70NEaU9kpFiPcDPvL1t
                      crc9MG/lO3Rd7Lw03Mw8amaAvR76YD2I5MK811TEvUrmeb3tpJm9KTmpPUDuFjs0toS8BuVxPSar
                      k72y9To9k51RvUaRMD33om69tj9HPblxgD3w9wO8WhV9vd5rYD35C4w9d0KhPRu9wD1Tk7c9tzxs
                      vVB3tLuAKoK9ZmQEPRoFJ704XoE8rBkCvQYPg70Vrsu97ZgqvT7Hq70KT3i9riUwPSyAhzzwjCo8
                      rC0UvSg8nb02LHU9oAo7vbRSB702zmw9UF1KvPFuwj02CVg9saWAPdvft7368TE9iAumvTdYar11
                      t4s9BWynPQAmlLqU+Ym9DY+SvbKmYD0almu9I6shvRo+Xb3yUsS9O8yRPaFwsj1AMV29+7aqvYme
                      uT1YmaA8UFLqu6AK2LxWNwm94jozPdWNmz3hYrA9aFpdvGXdpj1SfCM9RJcDvYwN2jzYUiM8ewKf
                      vdAPaDysof88pvQGPYRi5zxSuZe9021/vSjrgL3QquQ7gCT5O0D2jLxo3k48HvsfPUD1kzwaqEG9
                      fG33PPwc/Dw9F2O9+TStPYqAJ73WQEw9cMpMvfjopzxgIY27qGxMPNTM3ryCZ5K9bRMwvZ+sgD3b
                      9Yo9GbKkPbgwmTzAZMa94rJrPX2mHL0Xlhu9Lr5DPYCJfjq7Qse9bl8ZPRQh+LygogE7wCU8PM3x
                      jj1N1l29trSqvTEywD0cCdI8YFbEPKrzNr0wvbU71CekPNmgjD2p2JU9UOEHvOhGtTz02s68yvsE
                      vRp9DL36J1o9MhJ4PaokML2S24a9gL1dvWDAgzyB6pU9WMzCPMKVSz1ClDM9ehOXval1qj0QZSA8
                      wReJPXDbFDzMk7u8g1adPSp3Ub2y5Wg97dGdPSdiiz1UoPs88JyVvRkykD0y0MW9As94PXCNODw6
                      E1C9ClJWPb/ihD2bHaI9muc3PVKxcj3JdMg996xSvef3Kb34n8m8nvVuPd23J73wHWK8Uv9cPVDK
                      R7x3Z7O9o1o1vbBPqruC0xk9vadsvRpQEb2jDY09GTKnPZ+Lyb2R18Q9OhZ9PXg9pbzwlJG9JEbe
                      PK1uv71p5409zSaPvb1Fj72wJR28d+Y+vXrzMz2STXw98NQRvf3RnL0NeIQ9w7m0vVz5Fb2goe07
                      Ap7CvXn0gj1gA+K7AeCzPU1WwL1omt68wF9cPMA7R7xjYSa9KEYyPCxR5bxM1qm8EuIePTKTaj1t
                      Dye9AJdsOrhvyLwipi89dcGRPbyA7jwHPDO9DXgwvZp0DL3wGzQ85VCoPZHQxz3Kjnc9YEviO3b4
                      XD2gHCm7gKNHvdZAIz2HqKY9t9YqvfjdjrwAr4i9DjEEPdr1Er1goVg73BTrPODEzTuxc4k9YD6d
                      vLJ2ET3dZbQ9KRXKPbnUij2Vd4091CeJvD0xpb1NXEC9/x6CPUBiYLyYKLk8YAzAO4lXiT0jTSy9
                      ouQ7PfqISr2H2ZA9iTrAPQXUjT0hibs9GHOovaT10TywO4O7QJm2OgZVZD1V/Ku9gJzCun3YoD03
                      w4w9vGkEvTBiajwwSvS76aOdPYBCtDrNMz293pNBPSoHQ73HvbY9ZSOgvR5gHD0rCpM9Hb9bvfv8
                      iz1dUXC9Y2tzveFZgz10hYm8TV2tvXkniz1YExE8gEAjvXIvPz0CRnQ91s4SPcjHpr2B1qE9IOyh
                      vdCnpTt9d5W9gOvJuvdXvD3eTSk9kGQgvARiAb3wrBO8TSmWvdxSB71GbEk9jKPKPAQcBL3td549
                      MC0DvVkHgT0M+uw80LS/u9rbvb3hbZM9mZiKPdSZ0jyReL49IpWOvblbij3bF7Y9oCp9O8h3mbxX
                      v1W9Xic0PdBXq7tqB209VYuJvRefHb3arwC9wl/GvSp9V73i4HE90CL7u8ByMjsOcVE9AnQZPaWq
                      yD1scLE8ABkEuoACtr3IxLK8DIEMveN8Pr3XlJU9Ay07vQe+x71gDAm7LhMtPUCcVjwm0nY9Xy6e
                      PUCPrDyQnHC9mnRqveayAL2s7N+8qWnFPbgXnLy6oBY992tAvcq3dD0uTXc9UCg3vHXQvL2edU89
                      RtkEvVXWvj07xJw9dhUHvWJlGz0KbGc911u+PZ1nsr26GWK9kGhtvLV9pj0q1MG9x3WzvZkfuT1Q
                      B+E7kb+YPbSE2zxbGIs9Wk1WvcBFMDwQNlW9AEAIvRdZv72kNwC96iiavZ6LCD1KCn89nlYAPYy2
                      0rxUR6g88G4dvLDnSr23/nq9N3JlvcDkOr2AV2K8P2nCPS4nVj1YQSu8MPIqvWCjgLuTRsi93WUf
                      vZIsFz0nWle9dhY2PUAeVzwS9UM9YixxPV+Pjz1zbLM9qLpYPKC1a72YAp29sAs6PGCFx7yzWXO9
                      x+Ijvdr7ir2b+8o9GBSuveAxszyUooA8UwxmvTuYm72wHvg70o3AvQDTp7ynq3i9lLkHvfaOSz1A
                      r3S8upBePUk+tT2gzDE7SeaCPaUon70+nVE96LVfvAhl2Lz07cA8sJZGvLRp17ySdY29KDVcPFYa
                      E71I0rM8ioFbPUfNOL3H+Ko9Y+IqvWC6+jvQozK978quvdioXjw+ZZG9N7/EPRAVE734Mo28IRXA
                      PSg/vzz+igI90N0jPD2EbL02GAe9VLfYvCzA4rxFO6a9oGntO7+Jmj15aas9QWuaPWgXBLyt1ZG9
                      5sliPV7sMT33xV+9A6SQvcnPuT2oI6m9tHGkPMqjIL2gbBk7s4yiPaiw8Lwo0xU8AIsvu/RSpDyA
                      QeE7fKj4PNAP5juwacI7JbiXvY1gf711wYS9Cx+cPcfXs72KGLO9WMydvHqjq714WKS80OWYO7yK
                      hr372qW96/rJPXK4Tz1LrMA9c3i8PXQmxjyvlIA99gukve6VmL10SsE8R1+LPTgO2ryRdrg9HGMI
                      vSQDzTw2uA+9KCT3vHB2x73gQC29uqd6vSjEp7zWcE49oMI+uyLQEj2onWm8k7aLPaj8ZrzgV7u9
                      dfzKvVc8ij0Ub8o8oQO6PZbDF70w/WO9X+qLPeJrJz148q88yLrevFIwZj0AAKW7AF0yunhg/bwE
                      ltM8tz5LvQBNtLnQWHW8p5jGvfS69TxsqNO8gGoavEAb2Tp4LKC94VSJPW1BiT2ehyc9iNe7vVcv
                      xb3yS5a9oMyRuyiiijzteKU9AASnvG5jXj3wgrK9QDB5O+YtMj0JE6I9BLOAvWW/wT1gIqK7MOBA
                      vLdMxb2gp/i7gEHOvA1tfb1d6ck9VEquvN19T70wI529WGSVvT+MwT0wjia8WPFePEu5mL0vp4I9
                      oOpLu71ElD1KNVM9448uvcB4uLzYNge80nYbPVAPsLvO5089sMVcvdE6nz24r5w8kBU6vZlFgT3d
                      /b89cM0BvdL+Kz2NDJc9naFrver/XD0NErk9orLDvSDprL2fOao9IH2tPBLOcj3He1i91HzVvJC7
                      Lry23RG9NEuOvDdSur0Ap/47jInyPMIZaz2P6qU9vQ+NPbBDmzs0r6M8kv9QPTlyrD1/f649rco2
                      vVRN5LyAwcq86CP7vNBpr7s594A9oG7quzDD5ru3pbi9gimuvVosKb1qhzy9DGgNvcYvlr2Y5j88
                      WHohPGm8wj0ayje9F2DBPRiB5bwurxM9Pj4iPdSs5jxM1p089nwpPZBtD730gYo83bXDPV4MPT0l
                      ar094ww+vcBYADvc5808UzwdvZDaD71wYwK9DmlqPbnIqj0ypww9yETnvDItaD22DZ69sfaNPbja
                      wb0tKYi9PlVHPbhL7bwX+029Q/gcvUeKcL3gJyq9L7KxvVL+ND0dF4M92h81PVNxRb2Aq+e62lkd
                      vXCBIDwqfgq9isanvZCvCLw+VGE9cDNvvLaPWz2/DI8934GSPXiOu7wdVa89YHv7vPDrG7yjvWi9
                      tnwVvbHuhz1au469vraHvfpHyb0kKOA8oNkhuwAYHbyhuqs9IvBcPSKOVD0bPYs9djFSPbDpijvq
                      FFY9YZGLPRRNmrwAIce7R1itPUBuCr1Yhra9kW2HPQyOGL2ahoa9nt4WPV48AD3EGBe9aOksvID9
                      p7tQfF29pBzlPG4qmL1Baqk92N7EPI6odD3dwZU9arOuvbSJojzO+mg9dIO7vOnYpT2AXWk6Tbyz
                      vSS/zTwTkX2947NXvdMdyj1AFhG8Oo9NPdoBdz2T5MU9jJUVvdTDrLyYE6E894M3vWxDvzzt3Wa9
                      H1WQPSpBcD3gTv87V+ZMvfCfL7xAvZy994++PQiThDxsesG86FO0vJEbiD1Uoga9zMSOvMU3jT3P
                      M5096LzAPMi+wL0zWaO9a52aPafAO73J2cs9GOAzPCEZlT1si5A8X4W4vaBduDwAN6Q8Gt5vvcB7
                      urx1LaI9Y5qZvbKKMD32Q6u9qVaFPSUAsT0XhcU9fF/nPPhhg72wTC29Am4BPXltkT1g3ve7Vzgy
                      vceWrb39O1+94mh9PYZeGb3xOIA9+iFvvd+yoD3a7lG94HmevQh5/bykCxC99igRPdA9zjtodj88
                      wEs9vIQyhr0okz28QyuFPf5cLz3rR689VPKzPE/zjT3jJyW9wASJuvv8mr2u5gA9JSaCvQ94gz0w
                      Y5G7cuhnPWDOtjyIf+y8xT2fPbKujL3xm8I9nwKhPaZdEj1AEZa6E5KPveeJqD3ybl89jMWrvNDR
                      Kr3Jn8I9AFIWuwwO6rzrAam9VIsMvSLvVj3iVm49hPr1PNbQlL0jScI9wCZyu8/GlT0Lbci9RVbI
                      vYzvE70Rlss9nd+2PYlyhD0o6Hu8SRyGPYJfEj3H3aU9CSSwPWAXwb0a+WC9D0WDPYYSJj16OTC9
                      2IxuPG5CRz1/WrU9JRCcPc0cUr146aq9ZN3NPOx75LxIpd+88ZmwPQoptb30OOK8gGzUu1qGk70Y
                      laa8oBO3PEbepb0sDri8wtbKvZVUur060jo9skK5vV3gpD03vp893p+ovayTBr3CZmw9htt5PUza
                      lDzSAyo97fxfvUNzjD3S0cu9AaygPUlziD0AaJq6KSmZPQOdq73pY7891ipuPehWnr3xsMQ90JeL
                      veb5Fj1UvZ08Db5wvTtwkz0YBGe8gBmlvRCGbDzADKc60A1iPHRPkzygNzW7iHTHPF3cWb1UQ9g8
                      PjajvTh8hDyHo4Q9c2azPQBmtDw4css8o20nvW5+pL03/F+9dq1LPXrJTD3gIqm8mqVJPVWdvz1d
                      HCG9gAZvOvVSvz3stfk8RAcUvWPqNL2IzaW882nKPWBMIL2F2b697N6cvIe4IL2CzsC94EmMvXr4
                      Az00zIk8tRXEvbbZDz0xyLo9oqpoPQkOhz0Q2aa9lK6HvJDBI7yWpVE9U3qgvWtHoz0WZww9sk4w
                      PVsVzD3ORy49TkIMPUL4Aj3dwrK9YFKtvcB+oTpMooS9WUWoPV9Ntz066Me9ux3HPaPvOr0r0KK9
                      +g1RPYqYH72YKaK9WE3KveJCHj0Y8kA88hQRPd2kgr2YqEI8Fg9QPe2MR714CKs8ZoI+PdJBOj23
                      w0G9Uv59PeDBU715dIQ9+shoPRtnlD3fCcq9FOgHvXTbyrxAZ7W92j0yPYLHNj2zW5e93U+3PWBG
                      wL34OY+9WBFwPLOev71Y1pa9TdsdvbC0+ruXVim9huIwPXesJ72mRBY9eKyCvBLsHj0xooI9/MsS
                      vRmgtz0uapK9ihlMPVogIj2bo8c9ip9hvQys47xwyx+9be68PS0nP70S+r69gLoHupd4cL3g0Uu9
                      1lJVPaAqL72wgxu9XUZRvSxsyDyotLk8+gANvXlQxT3uCgQ90jIrPWo7wr3wc6294up7PRPhuj2y
                      Ri89QbrMPQOCGr1gFJa8dDPdPLq/Nz1aM8C9072YPUjXs7w1I7W9tk0LvQcDcb1X1Cq988x5vR1J
                      nT2q/h89WpVMveyWgb3AXVw7ndZQvSCmL73oz9e8GhgEvSKftb2JdKo9tzpvvcCk4brEheU8APqp
                      vAB/YDygP9i80DiDvWqlk73bzpo96ma6vQA/rb0O3hE91rs+PcAnIzzoUaS9aeWPPcLEfD3XVSK9
                      EtfJvQBOnTo3YDy9iQ2ePV0wdr0Yoru84OmdvOL2nL2MCt08EcmwPdiVvb2sCvy86E0LvJqRcr1e
                      VQ49SHqwvWAS0rzy9Ak9Kks7vSlssT3X+Jw9yj0evQBa7boAXEo5lOL8vK1Amz3l8Jy9Nf6yPbpK
                      O72w2sO71MyCPD02lz1WtAG9wJVovYvYw73geaK903RrvRarCL0IAri99ig6PVIMKj1w9AY8DNie
                      vBjSfDxn3LY9mkwEPRkCtj1iV0Y95hQKvUpZlr2NVok9aKgBPMq3Ur1sP928ehYIPfAHd7wyMn89
                      It0lPbAap73SgGg93UOqvYCxFb3quiU9lseLvcHxxj0iylI9ys8AvcAkITtAf/e6lR6ovTi0wr2/
                      EK69YYyPPb07a70FNrq9uMehvWNsw70dgH69IncPPVUrij3onom82LyQvchrsL0mFxs9NhaAvTLF
                      aD3trHK945CWvTaOGj0iBAo9LPzGPGg8bDwria89ujE0PYBQr70GqKO93UiEvaKbCD0XAYU9FY+v
                      PQDkPrmstwa9zbawvUgEjL3Nssi9F+c/vYPcw71BfrE9mtNpPTRfwrzWjxe9xx7DvQpNc70o7Xk8
                      AL9DO33qtj1K6Fw9oMSGvYMssj0zhzK9oMFcOyj0lL2S3L+9UbijPSy/5DzMH4q9oJDkvLycAb2U
                      nYw8sN5YvJ3IbL3aVSU96pVvPVZBAr1xUYw9llt9PdMzkL2Ycqq9gpckPcHYpT2K0GW9Mt0WPW1Q
                      qT1oDIG9guQnPWPMRb0y6yo9ktwFPe8/uD2C5lc9Kq1TvRMLoj1iax09QiKOvYd2nj1Ak788tL/1
                      vM5Fm70rYpE9sC5jvYCOR72NEiK9Av+wvSLruL0guCy9t9PFPYSr6zygOJc7zV20vcBkGruAats7
                      2DqePJ2iVb0dSWm9g9MhvXu9tL0iax89cEiMvXJ9Rz0yU1U9oPqePAjXy70xJ5I91HOdPNtVsr3M
                      5RG9bUOIvfqKTz0Ew/s8ZfuSPS3pkD2IiZg8DJbhPDAqajwXb2G96Hk+PCLTFD3RsL89B30gvd3N
                      Nb2tOL49HSfDPbIZkb0wQVG8/eWmvT7xeD2wvUi9THTmvCL3XD2AEQW6iMPTvLAw5LvKlVS90CNz
                      vVBSVrwkHPc8rCPbvHOabL2MGsO85nOgvSDw77s2oGk9Pl+fvabmHD1rBrS91otPPUAKGLzfi5I9
                      sJb6O0CgZzy1r5y9NDLyPBCmLbxWJBS9PnoJPWBRxrugg2a91tZhPRNLv70NyVa93HfVPK25or3n
                      iGi95s5qPVR827ytKqA99g4KvbRtpzxBIMQ9c7SrPQudnT0ds509gKCevY0XT70aJwc9UL2OveiN
                      7rwAszy7gD/QupACa72Nv0W98LAkPOKvID3rIsM98ClrvbqmDr1QVTS8YO6Nu/r4JL1gxI877k2Y
                      vd3sqr3Q+bU7aVeGPerETb0gYf289C3PvKPqLb2ahH09W2+fvUCfGzu7/q099ai/PeUTlz3A2F27
                      QMZgPFCgKzyvTLe9sqaGvToHO71skYK9ArllPQPSrr3zQsS98CgtvTJ9Oz1sOcE80+qiPeJtUT1R
                      6rY9OvgsPZLSvL0HIZA9wICEOilVgz2VJcM9VT2SPReMQb0GqqK9qhNwPdiPXbx434S9v+nFvc8p
                      sD0AxDq6LS6XPVLaaD1QQyg8Pam8PZOXyL0Ap3w8nciZPRpdLT233z69YNvEPHrry73ySDY9zl06
                      PWChzrzW6k09lIOjPPfgHr3MH+k8vvUnPUm2sj2gUzK7vuQzPVv+mT3AWbg8wl5JPZMdUr0bYLu9
                      76eOPVorh7090li9uu4GvZ6iMz0BGrU9E2iSvVbZaj2IJaE8k7KzPacjtj1HcJU9AqUpPWp0ob1A
                      hF+855fGPWtajj0vxK09qMopvKCXFjs538c9JlEdPcnIhD1g9zG95d6cPS3axD0Taba9Tp1/PdLf
                      rL13rsY9JmJhPZ/7sT34mbG8dTKcvcCu1DrdSrO9CCGvvCYWBT0ccvY8oACXvMZ5XT0AcK+5MFeV
                      O9Z+Mj1oC5O8n9ywPXRpqTzSVEI9fsMvPdqvpb1Ew808zOejPC4ZGz0zspo9vm0CPZa1Jz3yu7i9
                      GxaSPQA3ur2A8yU8Il/GvYUpnz3I8/S8vjQQPTCQlLuAAKa6z5ytvSBjgbstt8m9aKRXvHhCvryQ
                      1zm8yRirPQcisj1S9Qs9icmXPdJdMj3SPww9dk90PWxc2TzY33q8ADh9uqL1Zz2Gr2o9UIUtvZKK
                      az1Avmk86Py0vDBNJzxQvTk8CoU5PRkFwz0mWoG9xjdYPTyY2jzrs789MEPwuxjKZjwojIw8+NnH
                      vKjMmL0Qnpu9QE5IvEA6XL37iao9gPKlvNnHwz1nQ2a9CEipPFW2uj3mmC89QKAXO2qfIj1SYVs9
                      6KzFPKhHkTxdeYo9QHw3uykCrj3NOWq9wh0lPYD+jTvBZ4w9Y4u5PRpVBT3oOI+8TTmiPRcHoz0k
                      JN48U2cavTAzuL3pb4Q9bYBovdKRBz3DCq69MGK5u13nZL2wQY+74HG8vDPZhT39EzW90VWbPU0n
                      yj1XeK291CSfPJ2Sib3qhVo9IKCRvbPdpj3eN2I9GGEbvIJcHT2p76I97tRdPRy0FL1g6us7u0uf
                      vTqBYj0OEGc9gNctvEJHHD1MFIC99E3kvOmqiT2osoO9EOynvWijj720v/O8cvS/vQ38w71U3+I8
                      L8a2vaBJ27s6YlU9qIDcvOVUy70GzBS9iHeDvG68XT0KfxG9Y6invdOdJL0tISG9QOaQvNdZyL39
                      8JA9/lmrvZAvLL1U0u+8dIuFvXTIhzxKebG9Ui1mPS4eqL0RSZU9D1qpPaNVdr1daWa9MN/zO6+/
                      pT06VCQ9nba0PQBFtbtR8a49vkORvfb0Cz297W698Z2UPW2XlD1E4948TnchPTo3aT2ZEr89AkxK
                      PcamaT05Z8g9zPUSvQAGo7qiwWI9onIlPagHSjzavSA9LlFjPUx4F70wHxs86G9QPPG3yz20nZ+8
                      PuJgPahbbLy1saG9mMmyPAXRmL2tusM93yi0vdHMlj1ERPE88ss6PTCqUbyw8qm9xFfxPBBUVDxL
                      tJ09zkE7PcioiLwRSb49hPnMPNpFYj3IFqK8KJGqvdAMZ72zIR29MsVePflDpD0BZqE9ivVdPfzQ
                      4DwKuEG9AG5ZvGSbi72QIGA8oDLgO+/gyT0Anhk8Sn4uvaLzlr1gcwK7jPmYPLcgrj1aaEA9xR3C
                      PaIlmL2XNaY9MCHlO6Czazt/TbA96UWmPZhCuDwoszA8NGWOPAqULz2Au3I8dNLVPEk4mz3Deas9
                      SL6gvGS50TzAIhI8qS6ePXkVuj3SNlk9AFcLOsXOsr0bUZs9O7+GPTAarzt9UIi9LfB9vb0HpL2q
                      Tw09kUq/PUKYGD07jJa9GoRqvUKZYj2UPq885y0nvWCvmb348Lm8++uMvToNwb1+IaK9fi2ivfDt
                      v73V7YI9eoOAvVliwD0xJq49hTCsPa2Dgb0Ac3C6gD7luhMFjz2S6ry9UCODO/BXG7znUIM9iIuE
                      vDwnAb2+Umo9py3GPQioir2Ytri8oMzAOwVAuL3oPWK8QCXGPGCUsjtE/fU83ymGPR7naT0AGKi4
                      EkMePea6Hz2oWtu8OQzHPVKWAT3Kj8q9N7fDPYQSDL3OWp+91slLPYAFXLyDBsM95Sa/PXoDO72c
                      SNA8OGjYvGArezvQDoq79GmQvLDOQr0bIro98rdyPegCHjxhq6Y9sAj8uwCJGzsAh5k7+PKtvbFe
                      nD1A56m8sPX4u83WlL2WMmA9w6ofvcCgtDxhw4A9isFxPTB8a7ygPnS77myBvaOlRL3++qK92UiU
                      PZ2+uj3ReqA9wH9nu1NHdb3p0L09aFkpvEBder19orS9PmkgPcjGjLwUAoo8pqcwPdPiu72B+q49
                      twZdvQPZbr0gkY29UFAnvOhiPTyDjcA9AMr3u1IFl71NnV298MU5vIBOWrxsXJK8QKGeugXnjb0/
                      Mca9CohsPTnVjT0rtpU9bimivb3dmr2kMew8eGeTvFBJCjyj1Ca9mqaavY5Ti709hpg9wNHsvECk
                      or2aOxG9ZlEvPQR6i70A3hA7J0JHvS2vsr0CqDQ9IPzJvdVDhD1W1wK94V+jPex0tzwBb7Q9cYKW
                      PYI8RD3NKY+9TZqmPSuepz3SU2891owDvRoBEj1AkZQ8UsI4PecgX73HZii90uh5PXChdjzyPHg9
                      QLNgvOsqpb0NHaC9e9+MPbBs17u3R1S95G+MvWwnm7zotLY8UJNlPLpGzL0nPTq9FnMrPdAqxL1Q
                      JRe9dU3APd5nPT1z+Zi9gEn7OgBvZzoMdtO83xyfPUYnbT04Oei8XnIOPWBetDwAnA47dtWmvUYg
                      jr3e9Ro9Bs1sPQjMkb0XY5g9zH3TvMw84TyXAcQ9EjMvPTqeKD34Loy8xY7HPSCjHr0YdDQ86InM
                      PKoXAj14Psu8ImFOPetxkT2Ko0I9ILWSu8Mwoj3Sqx89KPqWvGj6SbwX3hq9+MvMvdBDJ70dxoy9
                      P6y2PWArkL2gSl87NfbHPQj0uL31MIm9VAsKveIKgb1qVF09FtZTPciBk7023BE98hwkPYwS1Lw+
                      oz09hlMwPTCM9TsrQI697AEDva3wX72+55S9qaaMPQACVLvMkKm80yUyvUAa5LzHox297e0+vYx2
                      vrzQpJG7j2m+PaBjIzsAEUS6AIDTuXxP2DwqBYq9VbjLPTbeUz0AKuG7te2+veBjsbyoUQW8OcKW
                      Pc1HJ71ktgG9s2uYPYm5lD2wDlK9MTGWPdcOpD1iaFk9MTjMPQfrpj3tDH69cx+UvWEhwT2h2aE9
                      UN/Xu1SkyjxmBBM9WtxdPQx3gjxjjbK9si4xPdC2kr1Y+8q8gnx9Pd1qRr3AdW+7ABCQO9jgxr2t
                      YoU9oIfFvEfQR7306oS8EgtkPUDfkL2960i92Hq6PHLcHT27zLU9ZPL/PNBKtDseDyc9JtdLPZSw
                      5zwIFMe89NiTPPtKjb1eN1M9fZAhvWXCir1zqsG9KHssvFr8hr0AmU69g8WmvRunxb0gtZs8kJZk
                      vOb5g73neow9QjwtPXN2RL3j/5K9DXGfPbzxFL2C0zY9c/Y+vTBA8zuNcJK9gb6NPQCE7TvRZ6k9
                      aiu5vdaYXz1YJzO8BxEtvWBRurxM/YA8PWmjPeRO2jzOABY9dGDevE83jD2fn449qhMMvS4OlL2A
                      15M7eSiLPQLsZT0nU7o9EvotPcaIRD1s3YW8UvcBPWK+Bz0AT2c6xpdEPXqsJj0gLbE7jcasPYl9
                      yz3GmxI9YjtbPWgYUjwiCpW9vVDJvZBkH7x9eJG9qgkDvYD787wY5Ds8IspHPQxAsTxgZVW91PzR
                      vFzeBb0UPRC9zkw5PUolaD1ySXc9APA3PNUuxT3oQQG8+mByvfoLET2y6Hc9IUiCPQLcAj1asZK9
                      Dr4EPZ6gVD0KfmO9LjhpPbDRKjy0RZq8xmRMPShIyDyAiY+76omQvaMpLL2f+ay9INCPO423u72f
                      xIs9TGy+vA5Zir3Gg6W9uSmqPQDFZLpuj309GE0tPEB0xjySVwM9rQhnvZ+wqT2AdiY8Kp6fvYGT
                      gT0Dyca9AlSHvR25ob1TvYA9E2e8PWxPnLwaUjY9VjcEPX3Xiz1SRVc9DZhWvcBilb0AIOC7alY2
                      vVj7e7wqtiC9oGZQO/3LjD24yo+8jRCivbm5hj0Xabq9cBpZvUjrgLz9zny9sjdfPfibiTy6VCq9
                      wCVSu8bmmb21PJW99EqIvCCOnrxwdEG8wBzUOqVZi71lS4S9YldAPdc5M72iOjQ9Mo1oPf9NpD3a
                      qnY9gDBUvGjoJbxgoE67SmXCvYAuoDu3/6894hrBvVasGL0GGnY9TVuNPZ7/Pj0dtI49gg1OPTBJ
                      ATxgsT67U2C7vYLhSj2ovME8ENdrvLN1aL2gY7W8IpcCPfdfkz2YjQE84N/uuwLeVj2V3qa9XIbk
                      PDAvrTvFf5k9BnWhvZKCsr0AmL84rdWQvVsisb1164O9tgsLvUGJvz0ADqk5a8XGPYq9R72LfrQ9
                      Gq+5vZSY3ry2BlU9qPCIPIPraL0TsbY9J5FpvbQ83byxyK099XaXvXCeib3tcKS9PAf6PBjYP7ww
                      mec7AIcevFr5PD2QCCq88ZiLPYM9fb0+W0s9yCSgPMrqY71V5KG9YgNgPeopfr2ieDU91gUmPRrX
                      hr2SxTE9b6u9vcwGubzAJLq9ikOUveDpvDxPqcu9pyWtPa8TuT1gmK07QIecuqpBWD3bD4M9mJUf
                      vCeLO73Kkk69kPI8vFvklz0D8jy9mGx8vCCPrDuA2Dq94Hqlu5ihPzz7I6k9wmKCvUC/krzqMMi9
                      2CbtvMy8trz8XdU8ks+dvQJkob0c+tc8IFjWvC1ftT3ofoe80Cu9O0U7tz0a20C9jrh4PfJtlr3g
                      rGC9jbS/vdcvmD0xz8E9/SWRPWJIur3DgXG94GvpO4cXRL0l8bK99wNQvZ60JT0jel+9a6mXPeqX
                      DT1ow629BHLuPAblIj2sfYm8K/CqvUq9JT3JG5U9ZOfNPChMob3idlg9ukArvQDyyTmACNW754KT
                      PZJ5CT09hk29ikRTPQCoZztwPRK9cnlbPTh0uLw7NMK9S/ukPUTm+TxoV968+v9lvYDGJbyRvYU9
                      DoAmPbIjfT10toK98L2EvQ0Db70CFWA9NhAJPdjGEbzO4F09YK4rvTjXh71mJQI9BTaWvavLtb1x
                      JJw9jnRmPQtPiz0FP5y9MDGnOyJfcj3BNKM92/GsvW8LqD03jyC92X6GPSS4DL1Ip5K8XisoPf6z
                      fD25m7g90Vq8PVDpeTz1xr69IZPEPRgOqrwQ4iS9IDjYvCj3czwU+YU8zuUuPYuQxr20Hhi9NajK
                      PRXOvD3EUu88VFrqPG/Ouz2gyIm7sIGfO3Q2pDw40ZC93fpDvfnrlD0wmK878HoVvKzrpLzh54Y9
                      AOrAu9qAZz0Cfjs9GH9yPCDe27uwOkC8EFPDvXQdh7yW/UY9BP3hPFT39LwAn8G7ko0xPdg5FTzV
                      crk9AOUqu2jEqjzSbUs90FMfvQf9lD2ujT094MeTPNjmRbxpJLo9oPpaOx/Tt72amhs9cE6xvWWu
                      zD2gA4e9UJCLuzM2Qb1ugDM9BV+FPcDia7z/BMS914i9PRjNY7zsWgC9N6OCPYDXnDqgn+u87YQo
                      vXz9zzybz4+97YdWvbZDo72eVBc9I/sevQhtyjy12cu96wqavaKoSD2YsDu8zP2RPDg3/7xYUxq8
                      a5SgvUJdEj0a3T49nkervaVIg72eDRE9KIw9vKO2Ib160E09o9lcvSpefr1x2ZU9zOLMPLghhbx6
                      O1I9exidvavMxL1s65c8dqgMvfk0jj0f16U9+mqvvRQFrrxYkIy8Y3ynPSxhh70wbAW8lniEvVYY
                      hr2KXmO95n9RPTZ7ir1n1W+9jFbevDgKrzylZ5C9fcRLvephDL2TRrK93xO9Pe/iiz10N/+8mFCx
                      vQDQ8Lr8/hG97Yc/vXDIOr11Qrw9xkR7PWfeP73Uy5U8Bb64PXsjwr2gPLu9mMxuPHK9Zz1rOY49
                      3AkZvcrxJz24bYi9sBIWvFaLnb3QOIW7kyCnPbdlKr0oDo08vk+VvaUVx73R68E92BGbPAo7RT1g
                      NN284Lm+vOjMm7yjBMQ9YF0zux4xET0Alq05dB37PDC3Gb3qNCi9GgeIvbcOij0miKm9j3mvPQBT
                      B7tA9re8MlR1PZj6qDymKl89mDmovWbfBD1YhO68JUiFvfJBor0MTdu8C6bLvXiOrbwwwR+9AWHF
                      PTlzsT0wwsq9t35SvTJeMz2ji7E9BR2qPaD/rbzfqZI9kFktPPyRB70ngcu96NpwvIBtar0ija69
                      0IFYvBboET34Rp28bVmUvcLpMD12aR09Oie0vWwyiry29Ra9tDuUPGIgdD3dGXW9nxekPYvyxD2K
                      wbK9F9fBPVSMyTyMJ4w8GZSsPUElhD312Yu9dtYDvcFhuz2UCIK9umddvdfRbr1USLS8IETVvKIp
                      WT24X5E8CK2tvbfxrr2JDKI9BB2DvWpVTT36BTe9RkALPdBn9rugSae7VVG9PTX/lz0rfsw9nKPy
                      PJutvT1HACG9+CTivGBnlrz91JM9yEmHPLUfnz0xSYQ9a1LCPRR1w7xoyIm9SzqTPUZNfT3H31i9
                      TZk7vUjys7zY5oc8gGyTO+tFtL0FMZy92P9OPKgyljweD2E9ObWGPaJKjL2xdMg9qcWqPWOOTL2I
                      5KQ8/N3YPFzi2DwICso80AWNvVpWUj1L3Ic9KB1MPPCvIjyGoDQ9InUBPaAwwryfFb+9aKxgPJSz
                      qLygVE47Zq6qvWABujxnZUS92CeJvQATTbx4rIO9WH1yPDBm9rvMKJg8LHkOvehhsL1/1cm991FN
                      vX+lgD3wLBa9wKN8vaDWUL0rwa49M5iUPdvulL3CPjA9BRKzvR0xir0S0hk91AL5vGBLr7sA3CI5
                      2GEIPPC8Mb1s67o8IgYxPUpXTb1fjcY92DRNPGeueb3RkpI9YIPyuzqMML0qdMK98jUePVbenb2l
                      aZc9qWi2PcB8VjwKPq+9Dk4wPYI9fT0v9Lo9+cyKPeH8vT0XzrE99My4vH5+gL2aPFO9w1C7PSD0
                      Bb21X4C91sAOPfk/ij07xcC9lTGqPZkTlD3C2T896MwJPO2tvb1HYTi9KxGfvTB2nDvSF6G9HDzq
                      PIPmM71TWUm9B9CJPdgagzym/Ym9sM6MvaJAur0gd547UA6BO06FRD1HW329gOquO0xR3Ty18Ju9
                      LYyYPYBo+DqMIds8irE5vao3HD2IV5+9PQNRvTZVOD1d4zK9UCovvXEYnT0zn7a96t0NPQvEm70X
                      zyS9gHnlulA3gzsGQBM9Q6bCPW1OJb07sYw9Qo3KvWqTg71VH5S9+peVvbObIb28fBa90/SVPYr+
                      sL3MB4y98qFvPWLuYz1o9DK8Q6PCvYpvab0z/bA9UvlGPRtLxT1AeMq8X+68vUcWNr39IWO9PRWv
                      PVvaw72lYZo9fQlrvVjV+rz9M4O9gkQaPQnoij0YDaa91CHjvGA/or2xNLw9AHYku5M4oj1RmoU9
                      1FiMvKy1uDxg9Ne7O+S+PfyUGb3FDL49QbirPdV5o72gDqi8J8uTPbrCy70o+Py8sDctvUBIBDzA
                      9FM7GA7bvBnvoD0qlVi9iXuePWqyIr1B8oU9Thp7PcCFabugbIm7Lv4EPTqEY73g6Yo7ONrhvNvQ
                      wT298Zi9lJGyPOi/NjxnnYU9k9u3vfE5gz1ehEs9HoyGvbbNJj1yq1U9TGe0PMCpUL1LV609yeGb
                      PT5WFD2xcpQ9umpovdNKS71gxIW7Gu0SPTDAKDx+fYC9h8A2vf1Uur3uyRI9MvQjPWirQbxzAZU9
                      DvIZPXllgD0igoa9dLKmvCzDxrzC5HI9ELqVvRV8mr1gmMs7oVy7PcLhez0jCii9inRmPV2VaL0A
                      o788Uk96PTCiDbwikGQ96KagPDD2iLsVzcW9mHYgvOjV4rwUHZE8gPdOPKKkHD0EB9Q8sOoFvStq
                      nD2B4Ic991SIPUX9hb2NvIC9ZLjcPGCET7ssa9g8uNOUveztyrzOvlE9l1O5vUJKfT2WZKG9BUzK
                      PUCkiTwLJaM9Gvi3veTYGL0QPiO9/L/OPNckXr3AiMA61tIfPSAWj7tKKwC9IHKqu/IiBT1gpOS8
                      /X8evWiRCLw6qhU9UFaHu2jZHjySG4K9GE5oPEsFxj27z6E90QOWPRBEv730vO68jkVQPXBZs71k
                      VNI8DAb7PF1vrj2Nza09B8JbvbBEkLsDBkS9gEqdvcpsOD0ncXW9MgIBPTJPZz04RKC90wMyvaCJ
                      tLxsnPM8IHrHu4JUST2g+yi70wiLPTNcjr0YfMk8GrNxvXqjRD1Y0R88zYe5Pak/qD3zB2y9a7Cl
                      vag5ObxNa7e9wzIeva2lqD0kmoq9C1mPvRdsOL2g0k29RSS7PRKRKz2fDZI9qL6kvTITZT0UMOe8
                      Y3xuvUAYr7xTP4I93Y3IPUMmxD2iNsO95usJvcLIVD2D07s9GqV+vQSLgL0cd9I8FEeFPDYPkb3D
                      E6a906YpvaBGvLviXw09EKJHvO3qRL1A2PW8reJMvVFIqD0N8IA9WEAlPGwfhjwYaFG8nP3MPN1d
                      or0gi9i7fq9vPeFNhj3IcZo8YOooO6p5TT0CIGU97M+7vFbVbj1zsWy9AOD8OGKhFj2Q+2y94XPH
                      PY+Rtj03JsM9G7GYvUrWMT3QCay7ihk9Pc9zwb3yVFY9wmQjPSiefDxgkL47YFXZvCaIB71AbOq8
                      k5/GPaRn7TyrIaK9l4UaveCxljwMDO48QtpHPUBUMbt0M6W8AOZiOziAsr3pnI89I2OmvTSD07yA
                      lxK980snvaJtej0Qqka8NF7fPPABdbxkDvo8dUmuvezJpzw6bVg9MLQ1vQBjAbxga2Q73o5pPaBa
                      DbueSKW9lp0EvRIJaj0AkK85YAQ1veG+kj2KCzg9bz27vWCk4Lw+C5W9I8KYvQCUpzj37LE9dB+r
                      PHutoT0oWAm8nZKxPdLoyb3ziCu9ANUKuuhAlb3uHhY9eOebPJrSlr1nDpU9Ju9oPXBubLyw66A7
                      aK27PDg3yL21JJQ9yjOxvUaWfD1I64O8FFPNvHTQlbyWYwM9jYgkvfNjSr1ypVI9QEunvcDDF713
                      A7+9TK65vN4CcT1aETs9GEHjvEfqdL1U38A8kJyDve0Et73r/r29FxKuveJNez1AcDA7wwgbveep
                      qz1gQZ+88FS+vZthsb2AZ9I6gEsFPOBG+DtWTx49cC5SvTuatj3cm/I8UigjPcO+jr0IU7g82mVz
                      vU65GT3Pfro9xvZrPZjMSDyWej09PidNPSi+M7whI5Q9RKGFvWoINz1glVM7AlPGvapzXr2ykjc9
                      uRCIPaVhtT27naU9lkQYPbtKrL1oZRI8LU+fPYVvpL22CQk909LFPa1qdr20a+q8I36Vvaf8uD2X
                      fhy9IDiNu/qFcj16jEg9unW5veKuaz0UX+y8wEVYvapllL0TdqG9vM3WPLcGHL2RgsI9oFn9vO+C
                      yT3cJAG9RjegveDdh7vQkW487bY9veA09zt24xo9urByvSkVrz1yflY9JYiivT7laT2YCEM8jLrt
                      vEwQq7wKFUw9EKy5vQBderzEFBm94drCPTCtxzuAZra7BS2dvc7jDz2vIcw9Q0J/vTo6E73aLg49
                      aCFCPCIumr0ovWg8OGrFvFkGqj0oJ769rGjePH1AeL19PoS9YeyzPQFzrT3PYZM9+ksiPY5phL2T
                      7Gy9Kq0KPYi8xTwTkFO9sLqgvdqqor1YgMM8ntNaPbAK6zv9po29JHbqPDaDIj3G0lA9sL0MvbQs
                      9bwfe4s9PpoMPcMYKr0o9KW8zu4YPfgfhr0bvJK9IHoRvfAnWLwAQCm7O3SUPQ4jq72EBug8ioZB
                      PT45Ej0AXU29gZqSPVktsz3s0Kq8wIFmO64WVz1sIZK8z9K6PV3WrL2283s9QCYmvEfSNr1spo88
                      Z5O5PXlKsD1DsZO9yjqEvRRCDL3/LYk9KRq4PfKAFT1s3548Pa25vYEExT1fPbm9+t9qPapZAr19
                      hqW96BpOPMkSrT1glVa7uATAvZW9zD1AYnu7li8BvQrkNT3QQ4g7MOq3u6dAtL3bMbg9//eyvSAl
                      njsupQc90v4FPUAFZbxY0kW8OgTJvfbadT2VFpM9twSwvSfga70/bq29IBjBPEP+rz3IU4q9TGyb
                      vOhlgjzdM0W9l5wgvUJcGD2jLDe95NntPBcZa71Xam+9jIqtPHrLBT0dlY49ErS+vcpJJT2rOpC9
                      tA2YvNh2sDwjpq89UmhOPdhIrb3tGHa9skBsPdpQHb3UJr48eOD6vOwKuzw7Z7E9YrB1PbMYsT1K
                      1Ie9rCPsvPrRS71g7AA7RbyGPTtthT0UJ7G8VGazvOiLcrx1j7u9etJTvbRJyzzAkKm9AF7UO/v7
                      nb3AvlW96LUnvHLDv707op092HljvLBrAryCUHg98ARhvKvUhj1QFA29/rBzPcb/dj1xs449Ztih
                      vVOVj73GbUE9p8tYvVCiqL1QTX28Kl9AvQ3Hxr1ABgK9LfGAPdoMCz0uQpO9WPVnvNt+p70HdDG9
                      nsA3PfdAoj1MwqK8VcOCvZuNlb1ow2a8IilEPbX8qD3geaS7oul3PXsZsb1yS2Q9nCvsPKofkL3i
                      q8K95ei0PSLkdT1B44k9AWeZPYAzujyY5WI86Ev9vJLrNT0AXXo64l4ePQAmrTl6xxc9l4mnPSiP
                      57yoWc28QWHHPULXhr36Z3098M1EPF2Wuj3nlJw96DFCPPW7h73y2no9RgelvdBxzzusMRC9MIj7
                      uyj2xDxzfZU90Lvmu+bFqL3socm8ANDfu+wEgrwAvJQ8UYWuPZ1Epz0zR3O9PSF2vZpsGT0iZF09
                      fVZbvSq3or3YA6y8YaSjPUcMPL1QpZA7sIKuOxerU72C3Cg95anMPdK+DD0D50S9Ja2ZvXZoIj05
                      ga095Cz5PJS9kbwYLDw8wERpvecvUb3mzoW9TLaVPCV6s739ZXu90PrBvWhrjr1gTJs8HMrjPNgt
                      pDzbGaw9dFTjvGsgpj3N/D29SWGePRbbp70ACpO8Zr2cvZICGD34oMY8sMibu4ljxj16ISy90NCn
                      uwCWcbxDD4I9Af+VPeeLYr2AsB294UKxPcuQsL1gnuG7wKKGvdmYuz3wN1o8mAcbvKDPnzulbaK9
                      vjFNPcDrqTxnG5I94rR7PVBMm73ad3m9SFq+vcC1Obt6qmw9OkpUvc0pyb2lMpA9JUmBPdCxWDzW
                      MjA9VMmBvGC/ljwQHmG9723CvQ7UWz0prIU9QJtKPA9eyj1j2i69YrsZPdYGMz3akrm9zNcWvVmZ
                      gz1w84K9OKGuvMFokT0gm4O90Ao9PFYAjr0r86W9DVxWvQ5mET2j8j+9z5WTPdIoOD0QTE+9FHSE
                      vdA/fbwxG5E9AO1ZutgpJby7PZK9smIpPaDYyzyWJJW9c7KfvZpvnL0BwZY9MDaAO3UXpD1+eJm9
                      2FBGPGOJwr0AfOm78FhGvRkGtD0ELPA8seevPSYdl71d/1u9KjZwvc4DET3og1u8DjOqvY6vGz14
                      ve283SGKvdSe7rzKUJq925GcvS+UjD0uFls9lICrvDdHqD0Mq9Q8GSjIPWBTcrvsku88viufvR+0
                      vb1svqY8hWu9vYPdML3gLOO78qkQPU4YkL0z7sC99xmFPV6ZfT1kSYq9UkrDvbY4o70aTli9wG1P
                      PJSZxzw7dY69TT1fvZK+Uj0JWYU9svR9PbQ+mzw0Zai8ihMdvQ88xj3Kcke9zGkMvaCpzL0WVwK9
                      jMKePN3Npb3H0bS9AMLduSAkpLssTYq9gQWkPYC5kDrCKmc9KgNcPaotVz0qzxc9ZBj1PHgsx7wQ
                      5sq94q8uPX5pdj3pLoI9UeaJPZA9c7xXana9EaKWPQg3r73DBIU9c2SXvXTfiL3WdR09S3qSvWyZ
                      8zwjhKK9WgBxPYCMgTtBh6I9gI3NOsckhD3iMp69QtpmPfpOvL1/mrS9s7wavVAVJTylso294LJX
                      vVx2C703Uba9x1w6vZgvZDzw9Qk8q1SIPaBBRb2oiJW9jSWmPf+bsL3buZ29sI+xvQdzbL0D87c9
                      4CeUPBV2mT1boJ09MNE5ve3ZlT1CCIa99HSAPG67qL1zepU9WsENvYAwQL2B0bc9UOz2u4AOwzqD
                      Nie9GA+EvSDgG72o9u+8gLyyPNr/Rj3oFiM8jj4KPUPEsT2Qz0Y8g0K1vZOJnT3SMYC9GbWfPaBv
                      v7wzv4+9GOc0vNOhdr0onhm85h8AvaEClz1/zaM9tbGtvTMPRL3zdni9Zb61vUngyz3NBLe9iD/R
                      vACn3zvslBi9Yvl7PcXEn70OtyY9lGSuPBSvg7y07dM8ezenPcx0x7yQ20+8iKjAvYI5Gz1aRY+9
                      Vj1QPQATmTm++jU9oGSmvYYDBb1xD4o9DMS2vNlNsT1+zpu9AAAEORBjSL3AOda8IhWQvVIggL32
                      AzI9wxivPYpbST1HIca9NPeEvSyXgDzdcym95Ej9PNClsTvs2MA8UJCYO/6HHj1xCMY9osYKPWAg
                      rDyGWzY9EGZyvPLfRz0qpjq9aqBFvbh0xTyKf3E9kE4svNTNF70ri4M9K2jIPR0unT04W/q8YKtv
                      uy6NPD0u7lU90P6Ru7V5qr2FRMm9EOtOPMRB0jz04Q69Om9GPbBOWjzAXSQ73tllPV5cbz368ye9
                      ePqevCL8Xj1ktN08zXOPvQ08b71S3Fo9FAblvDG6xD2gNNG7f3STPehmkDzieMe92GMevLrgMj2w
                      sxK8UrYJPShJH7ygwx69NmpCPRebTb14a4q90k1SPdYfdj2BQr4930SNPQBEaLwB+MA98WqCPVht
                      Wrwj16c99LHavKY3ob2pnK49jmF7PXrSqr2wTYG9d85mvbqRi72wEHs8gPxOPAxQA731iLS9nLES
                      vSynwLwf1ru93jwDPWOZyD3QoMU7ok8rPUkDuj1zHrO90q6avZSt4LxQBBW9LrmOvem6yT0YAwy8
                      wASePBCIWzw81Qe9U++VPQLtDj0gSZA8d3BWvXSKkLy7hqA93aykPcpMNr1KQqG9pj9gPUDvxjyk
                      C4a9ALjZOwoPur1gDZc7luypvUCChLyj8Ze9uDaXvJvRmj1gWIC9oJATuwr3o72vBqM9aPqdvbmm
                      wT1Tv449mwqnPQAIVjovVcU9SDGgPDPZrD2DoDq96Sm+PdCWJ72K6Bc9/DAHvRKfUz00P6k8AP1T
                      PEKZUD0dFY29IA7sO2gpsb3AsZk8SJeAPKqjsL1cNOo8wIk/vKhZCLxgjqa8OFesvVOZrb2yjA09
                      QHeovQDY1bvAGxk7ZghYPXKOur12ipC9cnYAPZNUwL0yjpy9AtvKvdr1Hr1YnVq8kLDBvfLkxr3e
                      cJC9jUZDvTB1VDxwR329MUexPbsKxL3g+ME8dZy9ve1dPr3gd3i986C0PSNSTL0guYW7jM8FvSpJ
                      jr3vv4w9iPejvVTg9bwVer69sFA+vKasF72Ah7k6Su62vcW1yr1ImKA8oy+lveg5B7ysSsA88E5f
                      vZZzcz39OVW92J/JvRM4XL1oqa681GTtPGqGN71QKrq9VSi1PbCRTby/ccE9kUG/PR1fQL1hX649
                      kAFdPPtPiz3jYq69upnDvb1BkD2gkGk7mHkzvIC+Dzx1oMg9+LPovLePpz2ANxq8RW29PSV3oL2w
                      UC68896EPVgqdjxoBXa8nc2NvW/5xz066rm9MFbFvYpiQT1i9aS9UkYUPTAdaL2pwaE9ErdoPbZN
                      ez2gDc27sBp3vFGCgT317oK9nLiGvbJIl70QwTU8gDOxvbi6t72U6vc8hhBnPQB5Xzyjg7i9q4rC
                      Pfvjsz0ME9w80uoqPZxO8DywvBG9/lk5PT75Qz0wlWG8oZvHPaCzXDsw32S801NFvU9gzD2Acve6
                      8A65vVRp7ryjUrM9QLc4O6jXnb2I/se93PXQPAr7nb390KK9wYbKPbECuT3C8W89/QiJPThOljzT
                      Nli9qM5TvNjjHTxgjii7mOQyPJI6cT0pfMU90GaFO+3wc71twLS9QEAXvX14Ir0HW7c9saGPPZb6
                      Hz0zxlW9SFKbPAB+njm8/c08m5CWvQCOBb1Ru7w9ukU1vXBqZbwntY09M9OVvXRm7DzYj2Q8ocfD
                      PXESiD0S6zM9NrlVPUw/0ryZX6g9OG6APHSbhL0wjIU7+vtDvfix8byxLcc976WePVqKwb2xSYE9
                      5TGWPS7yID1Ch3Y9kPw8vLvXyD3A9Aa8GtpBvZKoOT3HVU69In9APYBLXrwggqO92XmNPa28iD3d
                      Bcu9sHUyvOChjbvpX6o9zNz4PADX3TuoQsa9wPxzPMDTQbsABIM8IrhgPaewtT2ij6W9bCzqvIvQ
                      uz1nv8K97nVmPSKpMT3USbq8BKH5PCopkL0AFyQ6aKNkPMDQGjzEzf88LODQPDrJZb0yyC49l9pb
                      vS02wT2AjHW9o/FovYKKPD0pGcM94A30uxPOnL1gj9K7TAXUPLcJzL3oybO9DDsIvbKDx71MEIW8
                      gfyaPZDFfzxHYoI9zJGBPFmTvT0SXkg9QOnEPMFXlT3yDxY90McaPFcWxz2inSo92gtuvcRr2Tzw
                      Z2y96ic0vQWPvD2Ageu7GGKWPDCr7rtGKw89WLEZvNBDGb3TJD+92HIuPHCiHrx0oes8yvKHvZ1K
                      eb2A7JC9zexmvdKeYj2KyR49ADPauSqDhb2vU8e97Ma4PJSo6DzjcCS9WLMWPBqgQr1wiwW9cDqo
                      vePvmj3sFf88yJmCPKgDUzywGhe8thUrPSUnnL0yjFc9APEgOnGzqz2wcjS8wLoOOzkFlT38GIu9
                      ZAblPDJjaz1oZti8mNa7vCRs5jy088M8UO2ZO4mvgD1I2K6923aevRu9jb1SYWY9GNK7vcDVILtM
                      7768ax+0Pc6bWD1SiUE93gAGPRZ1p71xU7o9QJu+OvmemD1on+G8O5PBPS3GL71Abk+9UL/Euw7C
                      ib2cKQO9wM6TOoqhOT3O9RQ9GoE/PTSIgb16vTA9kCipvfeCjT29bIs99H7tvIxCgrxHvXG9k+ps
                      vdl0vD2BN7k92uuovVQMibyaeh69dJCYPCiRVrwa/DO9gEuQOp0NHL0IqqM8hZu2PVdbsL2wH5q9
                      E/aJPcAU0zqY/Ma8jY+jPQI5LT0nUYo9UR+GPfh7iL2psro9aE8jvFQP0Dy6h0S9sUClPY1xsj1o
                      sJS8peO2PYAB1rqAHkW9AOwrPE6eWT3+hxM98D9ZvICZATqWdwO92o5FPbsCsT31LMQ9mtwTvSx5
                      57wAJH47IUeXPTa0Rz0PGbW9GmA0PUCeYDvgvPE7jh0aPQP6Q73Ntrq9QDe6ult3j71EOdQ83zjB
                      vQBY/rpg2d28vOPsPFJ6Qz2fTZA9UCkOPACmATzAk5i9tmyXvRe3pT31xK89oPIkO7BMYTzNOUi9
                      I3nHvUm4lj0Afze9gty1vbBrPbwhObc9ZLzXPKeXpj19Soe9Lc2avRIjMD1o7HE8UM0LvUoiWL1v
                      aZY9xlNQPdC1FjyMkIw8uTGfPerzLr1GFRc9iO6OPAAMcbq4W5S8NIK/PNjXYDzwULK95+S8vXI9
                      rb3cEg+9AKVWvUK2YT3j8a09UP6GO9rmZr3YCOq8IGfVu0A4EryuvxQ9Wbi3PUlZgj2oLFy8xpkv
                      PfARF71J6Yo9C7vAPUpXRT0xXIE98tsmPSfUXr3UtdG8MgtpPdX4m71pdJI9wsF+PS6NBj20FtA8
                      f+e6Pdealj0b5Mo9w3awvdnjhz1t9ii9/9+5vVi7CDzIc+C8QPZUvSlUmD1sGta8wDY0vA5jST02
                      rhQ9nqRrPTGvyD13jL895xw4vUBIpDxa/gq9cnhbPRAkqr2UDvW86iSPvb3TjD2MK9A8X/evPc95
                      oj0rDZo96D7KvOeaLb1nOI89CcyNPdavnr1hzoo96HnJPGh+3rzSLY29uklOvUVxiT0ROLw9lV/M
                      vWKALD006868SnDFvWoqQb2AINW8YFQlO1A8gL3Ij/685/uxPWg3UbyErv08JW6WPaQq6zyCbqq9
                      feghve0PdL0e4ZC9gJWPulRr9Lzh6YY9SIiRvZB4Vrz6wgu9sHByveSt3DyynhU9FEgBvetHnz1x
                      sMY9/VKYvf1/wz3dkcW9RfeKPebOJT0z9Ru9FgCsvewzl7z0gcq8R6i3vbBbAb0agiG9iVKFPb2C
                      tj2MjYS9WoSrvR0pjr1Zi4g91ybAPcUOu71gTsK90iJ8PUPWJb0Qn2M8N4wivTNkRr3zcXi9k2eb
                      veyWmTxrAJq9s7DBvZLWVz35kJ898+yTvRh+JTyxWcw9Dc5Xvdlmjz2DxW296PCovI3Kfb2tVzG9
                      9SWavbPjer2g6t+7mHobPLKlCD09RCS9JEjRPGBC6LxFRaW9zErpvKcEKr030DW9+gVgPfiiobwA
                      UJ07Ru1uPdrCx71bqse9KMsuPFaDZD1oiAQ8wwnCvRpRQj2Ao5298Ia6vWJtUj1w5Ay9cTG7PWjh
                      kDyID4i96Bi2PBjBC7y+nwY99P6fPG4HYj0wrTY8AG4NuxL+ND06/Aw9DHyNvCy/tLwU8d081sur
                      vQC5ojxG8oK9uZKfPQD/4bzATFw7tb2qPXhbwTyA/4s7yeaFPWxWAL0mqkk9rcyXvdEMjT2IT7i8
                      lpQYPa3Dab1ocS+8ADL1u9C6PDzFKaw9LgeavboNS70ZGI49H2TFvRS17TwA/Ua7gNqFu/WBrT17
                      HaW9pRWCPSA4ortnSJE9eHOOPInksT2lu4g96buDPWYZHz3DSGm9qfq9Pdo4L71FKMa9MFutvarq
                      A70hXIQ9To5OPSa5VD2Afco76JN6PCooa72IRMS81vehvaxd8bwAlRg8ap4nPeAzqDuqMme93XRM
                      vXG9yz0XcWm9SbKZPWSdDb2E5wm91n0OPaZjqL3Yeb+8QBnQulcOnz37I5Q9aZWtPXc1ij1QBSK9
                      G3mbvZtijj2OY4a9DhFJPdQKvLwwFBG89EfhvAKyLD2zypS9/vxAPegwdTzAQnc8Hmg1PWI1cD1w
                      GHe9DHCUvFfXb72+ngw9dtsDvaLWUT1Insy9xs8QPXbVFr38VA29Su11PZjEizx7i4k9EdeePdO/
                      nz1ANse8QFpAvFdxOL3RBaU9fROFPSseiz2ovsa8ZNr1PJZ0ND2azyW9C9yZvV5zbj3S7EY9gv9o
                      PfAaHLzn4iW9gMuBPBjjeTwV3MS9bGCLPHJZiL0A1Gm9FzWUPTCRFTyM6fC8+lIDPWI3sb2uLkE9
                      3QeuvSjHg7xFisc98cmAPUw7/7zii7i9YRirPdh3Yrwoirc8qvs2vVBkXzy5e4k9Cu82vaCN6DtC
                      +YG9Oo6BvYrFmb0grro7rVi2PUrAf71wa1S9aynFvSL2MD1XkoA96POpvKBaWDt65cO90VyXPVFt
                      kz0drb09/v0UPRdPHr3YnEA8UGboO8pUyr2ArxK92JSPvI2uO72yNlI9ABsQvPK3Xj0fQJw9z6a8
                      PQAvBzzEogu9ppSpvQNIO71SNns9wTGvPULbMj3GnWw9KCEzvM5Vk70AVL07WEEUPPfRSL2YqYM8
                      IOdjvWsxkT3TtqW9wExlvVgdNrwpFsY9zbiUPZAuBr2DRI+9DK6FvSiRBzxdyse9bswRPUcYXL1t
                      7Vm9mxGwPWoWJr11aqK9spQjPdBNsLvCREc9sk12PYB7gDw61Uk9UWmbPThR77wsQYu9/fyvvadv
                      xD3HtpA9o89qvc1nyz2zWzO9ReKPvVgQEDzftqA94jhDPR5Yp7183fY8/zqZPfr+Pj2L2pu9DGqq
                      PH3Gn705eYs9XjiKvXeLxj2omJ48cYO7PRC2hr3eX349tnwYvXfakz0MydS82N7kvDA+qr1UIri8
                      TCUVvaUzp719sZK9zv4jPWAvOb3XqcG9lZyUvfraCb3F5ca9RYWYvVD5iruV0JO9xXTGPfIdiL2n
                      uly9EXOGPTeuTb3oQ8E8IjPCveRc5jzA0QG9wEfovIikqL1KtiO9yudkvW52CT1gjnk7MMQTPIp1
                      ZD1C1hg9aoVoPZ8uiT11Pa29IKGNPCptfb1IL8i81E6wvKpEST2waiC9gHibOuA0nryTQTO9t8bC
                      vVAVzrv956O9qAEwPB9omT1AGdO64yuGPbq/kL3ypl49mAyWPNj3yrwgmRC9xNUKvTRznTyrk7K9
                      AN03O9AHv7297JE9rdWqPTBJCTyA6Fy8x3mqPaVOqz2M/JO8YNnBPHa1KD1Y7Us8AkyBvUhUmb0A
                      lm68cAo0vEqIGT2wLHe9KrJsPZvTiz1uP4u9zfjJPdJ2Hz3Uv+q8AISdOpN3WL3ivEM9gCJ9PEjT
                      5byaUxi9uDyPPJAlF71iySw9WrgmPfGRmz0oWaC9oKrXOwePsb0AAKi1mc65PdSgCb25+549AEyS
                      uqSP4jzjysi9AOD5uL4zor1o3pe8Ri8GPaikxL2xbps92FROvLrXO71Lj8I9KeSUPa6zgL0GslM9
                      xUm0vRBGDjwaCTy9gB0aPBjO9bwptYg9BUW3vdiiO7yUY6m8wIOQPOKBJz3SiVI9feKzPQDU7Djy
                      7SA9YXWzPXDNJrwAEDs4awWNPW77BD3lKsC98lAKPcAeXbvyCnU9Vy8wvdTvxrzQZR+9UFc3vJGn
                      yj2QA2y9id28PXA/Wr1AEkq9FolsPcaWAD3sz5K8sqm0vYCmnrzg+ZC74s2LvSDcw70jlMO90DY7
                      vCibhb10Xc+86AD0vEBXjLq+sQ899DWQPE3ugD20MoW9O9fAvdqVmb1y1GU9BbG/vZC2jL14VoK9
                      6KpMPFDmOrz+qEA9rR6KPTl2iT1OBD09Tt8TPZDeAbygRV67qiN4PfW5lb26Kxs96InGvQNpmr0C
                      Ni89/rtUPXSErrzgnPG8gIJwPIbEn70trkO9XgNePZ81oD3Y6Ia9AwK2PSYqB73lgI495wJ3va59
                      ST1gbAI7sAi8u2I2bj0oSF4852vJPa1/kL0UYcE8IKaZO762ID3j9MQ9qCOmvdBsfLxnJZ49VV+B
                      PayGu7y7Q6S94GC1O2jFi701rLy9wAaAPAIvMz3BOoE9lM+GvQBdpDkTDyG9EU64PY+Ttz0ofxY8
                      8r02PYVUkb2YEyK8ksI2PXj+p7zj6CC90tJsPWfLwb0+VR09F32WPWYuRD0olwy8k7vGPRhWSzwU
                      +fq8FzmaPWCmjDyo6Qo8oPAqvZhAyTwwJ1u9NB/QvBrMM70Hhje9AELFuivorb0icZu9H/i8vTQr
                      jTwMJYS9wLcPvJ3CPL2oR3s8jRBDvWGYqT0X4CC9UlHFvfDwGL0AvDW84AKmvOV2y72NCpY9I9a+
                      vQtGwT1kJYi92gAkvWKEST1AycG84qZPPVrLNT2WoWY99shnPVJzOj2IFMC9VdnHPaL8lr2ISLM8
                      VOedPOPXd73XlsK9mtMTvSC7kDswupu7KL5cPMvOjz3Yzbi8DPqqPDkNwD3pbqc9fb+0PSZdMj3F
                      osA94UynPRGDyj2/P7G9G1mlPdpZVj2W9Rg9v6u6vRIvlr3qjHi9KNyhvdKPcz1AWXe9YDPuO858
                      FD3/Lq09pXetvRsipr3Ag4m8SKfgvL81rj1gBXK99k2dvTVEgj1YMF48b1LFvSDF4zuge4+8UC0a
                      vUCaJjvb6qg9gCuKu7AuYTyDUC293HQHvd1Drb1AQja8P36KPbRCGb3Kpmg90OXLO3jWub3M/4w8
                      ij9SvfxU5DxSCAI9ZbKOvRTOhjwoAzW8+mMKPVbSIz2Fjse9gO90PIOBT70Q35y9BqdMPTqKG713
                      dcK9VOrGvF6EIj3tnIy91w1dveiL6bzYY6E8oCj3uyJgXj0xxIo9piGPvUyprrxA++u6sPdaPMYr
                      BL2Qujg84gEqPfTAirzMZuO8ipprPWM6cL1N68u9cIdZvDAU6LuxE6Y9mhK3vbDlGL1M06U8mhEj
                      vcZtpr3durg9gjbIvehNgL2KWCI9CL6Kvei/djzH+1W9t3eePTuXvb2dfco9TdvFPYCvszwDuGS9
                      1n9NPQbWcj0o0XC8dl43Pb36hz1wd6W97oxoPZjJerxMmPy8sNSdOyfkrb2s84c8rpYzPRq4m73A
                      tIu87XaAPfD1W7zXArI9MeioPV0wTb15D7U9bNqMPICNkTxCVLi9QLWAPAAcAjlHtYs9aCL3vCSL
                      8DxZ0as95QGKvSuPsz1Au/68QAbevGTr3jzF95096kKJvZDLYDxA/5i8NgaQvWCEwLtAGzK8sLSU
                      u+qpIr1XDDW9dBPjPCPcsz1RvJU9tOuAvQxk4LyJBL09Gg6svVIdbj0EVRS9x3GwPRhttzwtvKm9
                      2IESvMrSEL0EXf08qNEzPDD+zLteqS09CnbJvfjih70YidS8MO3Su1Mhoz1LQcU9VMTiPNCmar0k
                      WYq9J0VPvcC4Xbx31Hy9wLDXutLxIz3TKZe9HjyJvagrSDziy3Q9KXWJPSGojz2T/yK90kwmPVYY
                      MD0qamI9ok5oPTBA3LuZoY09cCMtPIDBTTygqBO9sDwyvFdDVL1S4F89IvA7PTTNhr3A4N+8o6BK
                      vaG+uD0k8vg8Hq5fPSjmgbybma69KP5fPFu1wz16ycy9c205vagMR7yWZB49ChAbPfCTF70NjWS9
                      P4DFPdwX6Tw0Mv28HqsPPXRAszw5ecM9+Du7vCAD3bwSDUI9lLbFvGjh0LwdSma9GAihvbZ0CD0i
                      +SU96JGWvELNTD0YwIm88ZulPcbeGD3muSg9OGjEvGiRazyiP2M9ILquPHiDhL16YUm9MgdPPZsa
                      vT1yNk49aN+rvD1NI71z76A91OrHvMMEnz2iraC95CruPAcIub2NRLg992B8vQA5XTrpgZw9Pf2x
                      PXoZuL3gnPW8AXfJPVAIwDuAbH28prgBvdg4g71CUxE9LVVivcT06Dx4o4a9qfCFPcvrkj349dm8
                      bsSOveBkLr3AQ5c8wTeEPWC8tb2gBpG8oyVIvUBpJ71ISou8Tf6GvfiHyjyFSq69uDa/vOoTxL1e
                      X2g9ABpgPB8Iu73Ahsi60PkWPFjeUbwUCPe8rVOwPd2DWL0UPeK8X3i4PdlXwT2S7RM9YPPBvEVs
                      w70AuXM74l8ePQBBbLyajzA9NVSevfq2sr2yvyI9lEKQPOicn70AUUq82FUgvIjRo7wc6948mIqR
                      vIrZg71QHnq9trIBPVjQrL11/p09U+WiPWvljL1nIo89TJTOvO0fV73gGDO93cZkvbhb1by4LJW9
                      ZRuRvZ91v73NG8Q9sskzPYLMSz2W6Uw9mSi2Pb52Iz1hs6Q9tDUFvfHQpD0GWIG9WMd2PHD4XLxc
                      zIG9+CzDvQBYarp4ove8oFAHvdDGrb3xNIE9L4ajPd3WKL2WTAQ9YMI8O28npz20RIi8pRGjvQcf
                      db1x/Z09ffSEvQDd6bvABLy9MLXJvVzm/zxXEb09sv7HvaiKvTyKaQC9KNetPIx4Ab0DhD29aAUa
                      PNqRQj36d3C92KrzvNxp8Dw1Gb09gEKmOndWrr2Fe4g9QApWvFcwjD1CaJO9kEGzvZDmMLyox4S8
                      TbJHvcLBBT0IPYm9J999vWxL1zwgMRa9GB3fvF6mAz2AmNK8J7trvaqWn71rHo09WGgbvPdcrb13
                      T1C9euGvva5Yp732dAG9HDUJvWB50jsMPu88epkCPTbmnb2Y7RG8Ii8sPVjwULxbs609ykNnPeYz
                      Br3Vo7i92Dx0vNn9nT2HK8o94FLqO96oaz1AMke8s8jMPSya+zzALZY8ZpA+PbDgATyk+t880CeF
                      OxM2gj3MOak8MkwOPeIbiL0AU745aCZlPGEOpT31fqm9FFTZvP/oub23bi+9UKdzvHvprL3wsay9
                      QVeUPXlQsD0H9yK99JuUvKgevLzdwCy9clF7Pe/exj3wexC9gJ5UPIBq/zugXB+7RgZpPev+rT22
                      aIe9ihd9vam1lT26Sis9+iitvUQZ/Tyg6j47qcaEPRZbaT0AJG65eup1PSvHl70sII48ZQmsvd0p
                      mD0IXcG9z8C/vZ0zjz1oE6E8wDZPu36paT1y5qG9IKdUvav1rL1DelW9/du1vQJOZz2mcB896ASo
                      PKASkzvV8o4994EkvVb2Ez1Npne9rvIfPelOjz0AJHy5OrUPPVjXgLwyDsy9VS2tvXarkr062ka9
                      G+ahvbcwVr0SNm09gF1XvbPOy70pb7c9ywPGvbRIt7yg8nO7Pkw5PVF5ij3AHs+8GCGnvPChaTyG
                      RIO9ryHBPVBZCzzVHYM9/8ucPUoejr35Kro9SkMKPaDESzvoHay8N+xnvcIlmr1QFm08AOOOvLPx
                      ob3VCZ+9EAgyveoZcT0sPw+946GSvcCo4rzYwiM8KNXkvFiGLDygSrk8X1WTPYjyyDwAM4o7dEfT
                      PLVfub3mqDU9k9iQPag6EzyYwSM8vgAUPT0Utj0Bdps9U6bHPd0/db3Jz7A9yd2qPd6+gL2yXca9
                      Ll2fvSPgxb3Bt5s9aKzFPFolBb1zGH294N3xOwAWvruBt7M9/xS1vaeQJL1AX3o8AGyvuD74Pz3F
                      5KO9ULv8uxQMnDwDnU69JMDePPVou71Nv5A9LLqdvFOOfb0ta0G9mO+mvQUgjL3aDDg9YLWvuwS9
                      9TztFHO9mPuvvEDTJbtn82i96rKQvR0AkD3gfaW9eE+PvRt8jT1QgYc7NmyMvQDEQLudfqg9TIP9
                      vOmajj2GMQq96N+1PKPskb1L2cC9zabEvYzohDwAIoe6XQSovQB7oDtgWj47iX3MPYZ2rL3qBXM9
                      YoY0PSMNkL0axp290Oe+u+yv5DyjoLS93R4yvQDZcDozppC9lFKyvCYFED2wzCq8ACq0vGAFDjug
                      91i7+UXLPU5ri72CEZi9UCibO+2cTL0w6Wy9wEaLulTT5LwuaWI93IkJvUDzk72Mg7m8ELIxveyk
                      ljyVQ7u9WkMhPc6mLz0aqqK9De+ovUc5sj1ax1K9YI37vBj0DTwiZDs9GG+svWKyTD31XMo9EDF9
                      vMKNg724+c285eqQPdXkjz2uyRU9kF9QvCABKb0sEOa8zUGbPdzy+Ty9Doe9g1CbvUWdhr1KBCC9
                      93k5vWBtibyYfQQ8KLnXvKD3nbzywXA9QMOougvewz3NFTS9YlOkvQiZlTzCkCM9ILxYveBXFL2A
                      MNq6ApA5PfExkz2wlUi8ALl7Ouj0CDzgBtm76MCXvAzE0jy9gYc90GlavDvuyz0Qk1U8cHJnvGHa
                      gz1VYYE940G3PfLnKT29OsA9UElHPP5ODj1AxuK8+7KxvQhDgTy8bQ+9IzS6PQxp7jx8HwG9eyW4
                      vXSlCr0xmMI9nvQkPcYan72AbOM6APLwu6Khor2Adp29AHo+uWzQ2TwaYkc9dwuAPcKWx739TGy9
                      ugxPvUegyj2AfpC6N2AwvUPGl73Qq6I7tNLlvCkfkj3w1hi8UoY9PTDIP7x6uRI9aOiSvDQ3rLww
                      2Iu9wCc1O8CrO7vw6x48ha+DPbkoyD2qmWu9ttgTvQTW7TwaST+9oj5mPaZLRD04LcY8gIifOoo0
                      gb1Wxxe9ALOxu9S4zLyQKAE8Bd/FPQ3Cyb29M62993kkvYCG4Lql44O9Iy5rvcDNQTvweFW9GvfJ
                      vUj4x7wSJru9bXJmvQWlv72aQbi9YKb5vEcQVL3Th4s9TPeLvX5wYD0S7BM9LWiPvTgb/bzo+rS9
                      rLqvvO71iL0yeno9gIJVPADiOr1yKwI9XXqHvUftyb3yC2w9Q7+PvWC55Dv9Wni9f52UPWUKxT0d
                      XUK9LWVCvaRi7jyMFNW8V6J9vf6Dqr15V649cK3CvUzA1Lx9NsS9eKqgPD3xRL2y1Qg9lMScvJDe
                      KTxDZqE9LbaYPfQajrwAukm7A/pVvZGYtj3zGMk9ihdlvX3eUL1Ulao84zxYvVsDwb0rA7i9KCnT
                      vNB69jvQ/Hk8jXbEvRrxEj3rW769B3acPZkPij3wrS08arZFPdDIzbvvMK29IKGpvQx7xzywS7O9
                      eh0evYXcn708GBK92E1IPIQq0Ty4GJa82C30vM3CeL0NiFy9nlWKvQC7m7stLGu9Sb3MPYaGgL0w
                      kZe7QajMPToCIL0p1Yw9rM/6PCCujzshtIQ9zW2MvejJbDx3xqw91I+nvIC6DLxhd4E9X3C0PU6o
                      XD0YSN28vh+rvTA8i71Yxrs8IAmBPFenjj3ynci9uPGcPNozf73jSiS9FWOXPasppb36DF89gHvn
                      OqAAM7t3DZE9gN2UOmjyPDxhSp09wIy1uu7qFD22AEY9uzCrPTSlgrwBf6A9LlIcPTHcsz3d2VK9
                      UHzyO3jLmTwXl4A9DsagvTa+lL0gWKk8YpoMPVrnUT2YYae85zuuPfxE3DztBbM9KHSqPNK3Wz0a
                      XbK9aJKDvdAq5zutf1G969qlvSBi/ju1g749vXprvZAQDrwwDGO8SWiVPYHywz1Wygm9GGFgPAjQ
                      mzyn8Cu9PrscPWKLMj0AnSk7ehmzvbAG2rvYRny8sOGtu64tMD0MtNA84Fz9OwMQm70NN3W90B/0
                      u6Zyl72iFGY9si86PUPMub2AXD08OrVZvRujrL2Nqi69qLAxPHrMCz2Xc7s9CTiWPSjejDwQNHi8
                      OVyDPWqfGb2gb2+9ZlYhPfS15LzzBT+9Mp1ZPQNlrr0mOgA9T/HAPQvEub3N8D29YNrgvJKNcz37
                      35Q9gobCvQw7wTwFSJa99ptoPRiGwbysGsQ8MGnzO58Mur22HCA9JTKFPWuVrr2/yMa9MSKTPSjt
                      tr04VYE88JkivHA6ob0XWa09wst5PSWCoL0wI2m994+GPcPTkT0SEoe9wDyhOo4MWj0Tm8G99F/c
                      vMEVnj0iXw49FK2MvMhSqjz0fce863mPvTQeszxCxC09XnRpPZAzxb0lWZi9rKzwvNiWTjwfX7E9
                      yFSfvHSE0Tzyl2w9EDYWvDRAD700+P88zAqDPH4XhL3jE6S9W6W6PcaXgr0AJKK6/qIZPS3Pkr0w
                      UY2981pBva1nsz1Ie4C8ZUXMvb38wz2k0Im9wHYtO4DSojz11K89USicPTKXy70nMqs9og0kPXkU
                      qT0p/YE9vkBTPRCTab1wGRw8gtBiPQAbRrusJaI8g0GyPQu5hT0E8fE8ccK1PR1WT73ZWpE9ANDd
                      OwocHb2huZE9AAoPu2dimT1k8eA8+rfGvUDiODzDO1y9E8q4vfMXoj2bBI+96cDFPQNylr2R5Mo9
                      8txgPaCgibtDubQ9RUexvRq4Uz3JwZg9BJT4PI0ogz0MJ4a8cJZ+vbLDqb16L3g9NVGfvZh8RrwA
                      mzS742DDPRXvq71FF5K9QK8wvcNDtL0H6709zXawvb9TyD2WohW9NkeMvfeNZL02DVo9Te6LvT0I
                      qz01+rq91o9PPdyKFr0gyci92ZOOPSNAxL2myTk9HQ1mvVCImb2+6Fg9SjlhvVgjc7xqkho9Yocg
                      PTQm/LwMUpc8cI1dvMAsnDwQxgM8t6RXvSLKMT0o5rw8KjO4vfSK9Dxjl2W9GaWUPShKY7zhcZY9
                      +reWvT/3mD3qs1K97yC3vWJxFj1hbsw9xBUMvfk6pD2B/L49wAmhvQ3Er70gyLk7aqQrPViEGrzQ
                      vTY8LaWOPfOEPb1BLLU9iKudvS8+xT2jdI09rSyFPRohKb0+DAA9RTDJvZuCzD1KrFO9aD+vvbMa
                      qL275pc953bHvW3skb1+nCE9qmp8vZDsN739Iay9DKjRPBxV7jz3JrG9SvZMvRB6qb2z1yi9rDXX
                      PPg0gbwvcLU9gHQmPItlrz000ZY8V0OSPVBXVLyrl5O9+BqGvNnKuD1dtEO9wixzPSq5Wb2AL4+7
                      dZ2KPWLkLj3yTXs9cqXCvQ1Qgb1jr729Ft8GvYBQrLsAEZa8KFU8vONTv72LE6C9kAl8vUdGkT3T
                      sFm9KiASPeyzgr1op268UKj/Ox+Qjj0T0FC98g1dPZ1uV72biJo9fRpBveQnE71INrS8rUyXPUDQ
                      Tr2gSLS90N40vcO7Ub0tqTK9AleHvUiR07wA5Nm7ENphveFDxT0dFo09EBUaPMxGCL1dijK9UzCo
                      ve3bWb0oIFi8aBakvc2qoT26Rxy9N75YvWDPQr2s/vq8gK5xOrLOp73ieyE9TODGvApBy73C3G09
                      Sx7HPROcOr1aMiG9qA0pvKD7uTuzlam9U4hivbSs7rwgReW7anqrvcAgKLvScXU9oCyvPGVdlD0A
                      GG66UDZxvQpLB70Qf108veYqvdgrHjwA7m275MrrPG2fhb2BqMw9b/iBPdaBXz0ZEqY9ZCHkPPR6
                      9zwn54U9+qpNvTDQ2rsIGMo8svuivahkury4icy8agMHPU0ng72T7Ea9kJXEvWiz5rwAMKe64sJg
                      PdRIhzz+CTc92jQ2vYcIOb3FNqc9ozphvbPzrb1eNqC9d/J+ve6dWT3o3w08YAPuvA8iiT2g6Mm8
                      dHePPMAgWDyhhZU9HEz3PFAP6bvl7rS9JwdjvUqeCT0oZ7O9okVlPUBA+ryFPLq9S6jMvcWKjL1x
                      YoY9aAHYvIAOj7yGGDo9EvgiPZXDij0NdJA9TH+hvMDWuzwTX7a9y1/KPWWPk72a+gc92XrIPQkd
                      kT3ADx47RrcSPTMtsr3Axok8fCYBvapAqb0GRzM9K7y7vVgt7rzSDTg96A4kvGfWuj25U6Q9qg2S
                      vV7FMj26lHo9/UivvWM9xj2AMU489A6qvLN+vb1tR2y9sKIDvVgXtDz3Iki9zBrTvBaCqr09P5i9
                      PlgaPZTDizwh77g9FIDoPMCi8rr+rAk98SK5PbDgdjwzdK89cMV3PPrZjr3S5yo9IPKsvaBA+by7
                      QbU9KaSpPTNVpb3/p6w9reh+vbLSaz2AzSC681srve0bbb0t7KY9+pAGvXDRBDxrJ5e9UII6vTSs
                      szxtl0G9ZTbDvRIufz1LgZu9zvWHvdjNJLwCJDQ9U4gzvaBAwbzQww08w3u0vUWNsL24J6a8UEoJ
                      PCOBdr0gD7S8jmpmPSjpBbzK2g4908dCvf2FiT1YGCW8XQa0PWg4DrxhnLs9YNoqOyopS71CZWs9
                      3DjPPODGxTzQtsi9L7u0veKDeT18g+M87NC8PP4jdT08J9Y82HVsvAv/qj11zZE9YP6XvBBylr1U
                      yKY8SEyoPEtXrD1e+Vs9FHLCPLcKlj1bbJi9gETqO7McY73nikC9HAfjPHlqkD0dL7U99GiMvXjw
                      ir09NTK9ADZeO8ACy7xl5pA9h99hvc9+vT2gAZG74oBBPYxT+zzwCp69+TmYPVc8Vb2Thli9XlYe
                      PQS47zyDHos9iAfEPEKwDj32PQY9Ab6lPTTaizyq1sK9FJvxvIi2sjzHXS696ai6PW8YxD1hS5c9
                      it6evYy+vryj0Yk9AHe0vTiPlrxAEgG7iPfcvPUBwr2Aqu28RxizvYqWn71tpsK963K0PSrdRz3Y
                      CyE8Mq+jvYDyy7srb5u9gBECOjLyGz0yXHs9GS6YPT+ktr0GEQe93Z5tvYWOnr2XWq+9oCgKO4x2
                      rjwitn49wOpgPCLrkb0+0R49DDadvPfDer3ocFo869+fPd36lj3svdO89G/OPHozQT0XKym9IM7C
                      vTuoxz1+pRw9wtEJPfGmij1iM5q9/XLKPTA3w7s65Yi9ePXovOPXXL0g2Yw7JqOEvTu6wj1KjKa9
                      mSXKPeDN8rwZ1cU9Utc2Pe4nMz3GW4G9MDUOPPBBWjxwgpW9hxdPvTBe6DsDo2u9pAHyPAuckz3c
                      ZNo8IKbBu7FWtD3wrxM8QXG1PXtyor26tFG9zjc9Pd4rAT3Uou280vCbvbEXqj0+9Hk9VE+GvEz2
                      hbyWWgU9essPPf5VED1FvY099/F+vQsfjb0CYDk9DDzTvF05f70tlcS9gyMsvfvHnT0wGya9stcq
                      PZbBnb3Omj891E2NPECP27y3xsg9VPXuvLYPFj3+QhM9IgYVPXs5gD0yx5m9w6mlvTDrf7xbtaI9
                      8ISBvWgkXbxUURK9pX+8vai2HTz8mxW9svlVPTZbbD0XaYw9yTTKPdwm5DxrdIY9PkAjPRdFgT0A
                      d+S7d6tjvRhpnDwVbrm9J7FbveZ0Dj3elWs9ykxVvTIycz3ixTI9gqcZPUa7Cr3kcBG97l8WPXPx
                      p72QPJC9lsqRvZ3zUr2kNNo8zI3/PK2IG70ewKS9GMYQPE7pgL2KjKu98XSRPbjQwDwA4i69oC0g
                      vXrNib3ojqe803XLPbAmfbxaEQ69VGiSPNiuX7yglqQ8Cn6NvSouvL0ESeI8cLEOvDvPiT16L1o9
                      4zdZvVomaz30jKm82vgpPb4Fjb1w5xW9uMCePGvTmL3TpLY9UMv7u9pfOz2AWhu6UA7Eu+q6YT2s
                      tJw86FAhPDkDwz2gQjo7J5i4PXUMx70ddq29mHg+PEDq9rwyV7q90FtivCRLgb1dJGq9p5xHvaDm
                      sbth+Zc99De8PCgNiTyBCoU94a+fPTOpY70YMyw8TFutPG1hLr1dK6Q9Sm17PWq8GT1Y7zg8QPy/
                      vSx97DwK6BM90EXlO16aLz1a7GK9jclKvWmfwD1HKFG9C2WPPR2ufr1vd7S9t9itPfStE70WRxI9
                      CrUwPRhAgrzoYYK8Sy+9vaxiyrzRaJc9tBzsPLCFiTsd7oO9iIeLPIfWPb3gS488kIckvU3vj71/
                      OMc96C3svPPgJL2AYT48JajJPQqqIr0aJQW95ETfPCo/OD2Apf6860nCPeIUPD1CJTY9gOzzugBM
                      krvsq8W8mOXWvNJlm7140+q8EgF9PRLxST3SXBk9NGClPKyz2jyU/+E8yGP6vNTs/7xANnk8wu4P
                      PXZfj72Ajro8gm9YPVCHMb0rZpw9KfioPdRt1byQnCO8n5GoPWpqx72TC8W9LPmYPCCrvDzQ/OS7
                      ujexvW2qP71IaYq8gnCOvRh7ULxTpiy9gkMiPQDPCbv6+BS9fpmdvczn5DxSQMe9qhdEvVtjpj3S
                      9Ew9MADeuygZObzkdYW98cTCPa7/ej2EENM8PT6LvVhitL1/OZ89oMQ4vfiEw7ypZ6s9ykRyPQAL
                      kb1VXbI9ANOZu0Dzo71i/jE9wKZkvCDRN70aNBI9+HnSvBpBXj0wXgm8F2JovSr8QT1Jsq89hWal
                      PY9euz3QehW8rQhLvfDXebytfcq9b8CtvVecPb3CEwc9vTGkPeOouD3UWaa8srJ7PXT4qzy1O4O9
                      PS5evYixxbxi4BE9+n2SvRIlmL3gh6C8eIT1vDfHur1gMMk7SoVjvSoLfz1SwZS9+nc2PTDYab1v
                      9Zk94GTBuy6mkr0u/Gg9cle0vXpwMj2ykYW9wp5ePZpuLj3luZS9WiAWPaBKyTuWzlg91lmOvWi/
                      SDxj4Li9Qci3PWhnWTxanrW9r8SBPeZUWj1aP1K9bgMjPS3Be70oNR+8asXJvdMxVL19g5E9mdW7
                      Pfb7Dr2qLkK9o1NtvY2Sfr2QKUo8geXIPevboL0dcrq9Wj8UvRTkhzxrwr292HWgPOCFyjyo6hC8
                      O8ylvZAkNrwkvtY8AKauvHrtKL3eh3s9aYOGPcvKkr0z/7o9H6C9PbuBrj0MvfE8ESnAPYiBlLwC
                      o2k9AuRpPSonkb06Fmg93daQPRKPET2pYcM9T+mjPfgKqzwywKC96vWRvcG1nD05occ9XtkbPaFK
                      jD1A6wm8jJ/qvBPKyr3YEO680XCgPX5WbT2wibW7tkanvZKSJD1rYbQ9OMukvIDQiLotK12958yK
                      PWDA0btAS+O8g/WyvRnOrT1ouwE8CG3PvLNBJr1qejo9wHXxvNixLrxwwzm8kfiTPbZ3gb1LkZg9
                      07ievZ4kSz3Ruog9iE+VvZL6fz1Sq0I9bdtWvXFMhT3ovBM82rN5veCHmzvNXVC9uc2WPdohRD1t
                      uoy9UJJYPMtvtb2ccQW9Qkw/Pduqlr0wURK9HiI0PeK9XD1Cj249AA2luygBMzyNSHi92G6SvL24
                      nz1QwHe84HrZvEBF9zqmrA49mEOnvauVub3JvMw9J3a7PUMiHb1iirO9yF2zPMDM6LyAO8a8EP0Y
                      vKqXlL3w0EU8huxFPbK0Aj0FH7w9ZzTIvbPWlr1IypC9h/YcvYxY77wYwLG9AMCZODSa4TzczIq9
                      aNi/vQL4HD0Kv8u9/ulzPd2PMb10+NO8IZOlPWiTt7wihca9zWqXvUFqoz2uSCs9ao4QPUKuIz2V
                      2oa96tqSvYI9pL32pDg9fznFvSgoaDzjCCS9E46VvZJ6dD1HCce9QrB5PbLRMz3gerK7wOK8vGY/
                      Ij0AW168wYS7PVMHwb0VwIu9AHCsO24FQj16qnI9lFWlvOekzL269GI9dnMAPd5END1DM489wNQO
                      uxgIbzyYf4I8IG9IvTDmnjswts47BbOMPUZGVT0ALFM7ABsSOg5vXz3ChHw9mLbtvKWXuT3ywkQ9
                      cPKKvey82Dz6N2O9osdUPatVrb245KK86DIQvCI2xL3dLKU9Ixpnva8btr14EYm8UMk+vQByDTu4
                      7ps8l3+PPUjlk73dWE+9Y/6MPeXYpL3u1yM9wyahPdpLCD1ZJMQ9D4W9PQCnYDqFP4+9gP/Fu8I4
                      Wz3LQY89+7+oPUBumbxQRYi9NgsKvfWKhr0gxGi96Gf+vLHtvj04pam8rr13PYGgqj2SwX89uu5n
                      PaYdA72YkwS89ggHvXDBHr1W/S89UGynOyR/2zx70ac9wJSBPHBjYL3sy8A8UJl5vCo8Bb1Iz768
                      wKSDujLCUD2iblw9cI5Xvaq5Rj3TNJ09mIo6PHIjVj1mZk09ab+GPa5RED2tXIy9eB2fvGIHLT1w
                      ZXy8iYaAPQfkvr3tLEG9PxuZPeSN0zxKFy492FR1vG2KoD11t6a9ALiZO5Omd70o3jM8NjKjvYM5
                      lz2Qccm9LGaHvGhUcbwAgP66nVptvU0TKb2GGAE9AER7umCO8DtrY6w95m4VvaKnCj0w5tC7CYWK
                      PRTb3bzKjiq9gB6NPGQwAb16bq29ww2dvRTB9zxd/7q9hlgJvUpOeL1gMmK9DICWvF5haz3vELg9
                      q6KSvZQapDwfDb+9eqROPXm1oz2wf6k7BejHvZAmKrxARZG8bxesPU47qr1owCq8rtQuPc0smz0X
                      +UO9CEa4vdC5c7ygsnc7gFkQOv25Nr0ApCi7Aie1vRSgijzwlgu9p9OqPdDsB72SdjI9hGzyPMJ8
                      AT3GZQk9YARmvaDZqztgr7K9d98ovbyXC70Tyao920yuvejbT7xgIho7kNUEvSlUnT0Qv2M8bkGZ
                      vRF4tD3OKRM9sF3AvVK8Rz2wTZe7e1WmPRmexz3s3+28yx3IvStYwz3Er9k8iEuYvEzGyrwAKca8
                      EGCPvWJGQz1xoqU9MamVPfJ2Wz2BPbM9Q9rBPQjigb06nL+9ny2ZPQiC0rwYtEw8oqqdvVABWL3T
                      9pI92CVzPN4Qqb1YQXS84xNNvZQV+bzFmb89qDkLPFrUWL2XGU+9/1HHvUbWIj2A9cg7NvSJvXNL
                      kz1HAlG97edivYAR9LuAo6q8xHL9PPJdiL06/wk9T5q6vThToL2aDY29wghbPSwQ6Lww+ii92O06
                      POMJmr0AbCY5A+pTvUy/mzzotcy98Nc8vPQKzrzNYoA92JpwPOj+ybwMiJw84bqfPeDW/LzHZZw9
                      lqUSPV44Lj1EGxO9865QvVwU5DwCYRM9UF1/PEdplz3AsXK8Zwu1PfIhBT0FKra9wH7svHbUXD1E
                      1vg8wHMovCNNwj2DKbo9HqJMPQzHtrzok0Q8QpQWPXKFlb13bqA9h52yvT3Vdb3U58g8gD3Burg8
                      rTwGZkY9uhhpvWEuyz3W4Fs9IuSYvYpJWL2wb4m9KHk1PCwb5jzehzE9PeqTPRodiL1aK6e9lZqD
                      vYDEPzyN8DS98MIHPIC2rr1AuTa8QNhBu68Tyz15e7w9LvEiPUvprz0YgC+8hIj6PDX2rb342Z+9
                      DldtPRihx71oraS8l4aaPYWhgz0YvBS8wERTOxIbWD1QWBq834GvvZFEjD1ofr69oKz3vKp1bL1m
                      Xxw9fZHBPSw/qbyALZA7jTdhvbRM5LwwZSE8bPv3PKzkgjzJMpw9AfO+PQCkKboxkbM9yPGDvcZX
                      Tj30XLY8UAHxu+7rjL3y6zo9QDq2vNA5d72QdLK9X420vbQ46Dwsotq8aI/8vEAQubysjqo8TQym
                      PU28rz1gKp680YLIPaAyTjv0LtG8wHQvvGa8TD0IjKG88joqPeKlGT1gGAq74so7PWZEhb3pPbo9
                      KLFIPJiesb2wp6o7AEAHOy67Yz1tVTa9OgsRPQ1prD2Aric6NpFsPYxw4Ly7XY49O4eYPeHInT2M
                      PvG8xgUEPWfXLL063a69kIkgPKlIrz3Ykgm8BTGEveDR1zvclIa90HE7vRbhoL10nfU8WCUavExs
                      0DwAcN67gPYPuiY9KD0ApBE5itFIPcsjuT1Kb4C9MidbPYvwmr2Mb768IChYvcCwhDp51YY963ml
                      vZU1g72zUbg9AAx6OhsusD1gFMy7uT6oPVbylL0Fmcy9KscRPQKqMj1ft669c/ZqvXDDy72wByg8
                      N+TIvaltrD19pWi9gkdsPZKDt73iFKe9S8mlvTCBmr3ll6692HWuvKyYh7w2uhw9yX6sPe1Zjr3N
                      woc9qIO/PIfDfL01fp89JliYvTCxyLsAJt05UG3VOxhNj72RU6g9lHXLPECCnL0QGTC8Y2ZUvUAf
                      5bw43Im8TEaLPEu7lr34msI8nSWPPTRphr2Agm+6J7W3vffKkT1ZN649IvJKPeADhDzXQK+9ZbHC
                      vR1ulT12Exg9p1ksvRjDhDxiamw9D7aTPSoEQD0To5g9ey7CvZ2Tvj34q5W8U3s9vSBBoTsLgI29
                      ALusOSv/lj1DMB+9V//CvRLVVj0gWo48wP32vPKmZz2jsKa9nLqFvV2pdr2yO3Q94GaevRG6mj3b
                      UZG9LedvvX8csD074cE9GBROPFC2OLy0Kga9cK4GvVw9FL0wOjG8oVq+PXdfiT2w0oe7zLTVPP9f
                      xL2igCk9MHx0POfZIr1oUOe80i5nPWAbd73661I9yonFvQA5OjwOKjg9h+V7vSzCwjyN9ES9AA53
                      vcBNKL3Hmq69kT6uPVsbiT2ZeZk94xa1vfOTsL3g/cu86YeFPTeLxr06Tn49ZkktPfAwNTy424q9
                      eqNxve/xwb2Quwm9V44svXa8Rj0W0oS9Y0BHvVaoDT1lh8G9lC2VvHRCs7zhR5s94Pryu9Qx5ryR
                      4so96FHAvXoZBj2AN4U8uJqIvK+Ftb2A5Zg8yo0HvfcaQr2gQrm8IXCQPUcJyj2o4oS8nFzxPNib
                      QjyQOza8zICuvJAPLTxAV748KOaTvfJYv71QACG8EO6Ovf/SxT0WPQU9ak6mvRE9lD1qcgE9ADwF
                      uatNtz1zxT69sx2Rvd06oL1tzji90E9pPEkXsD0ykyc9k1HJPQBh+Lwwdp87AD4RvXoiMz1HEzy9
                      vfp2vQqUZr36ahm9zJvVvD3TYr3o+QE8YB0lO7PMnL2QqgK9P2LCvayKFr0qaZy94Nkmvca7ez3L
                      x669v4mSPSmowT0Y4cg8AAc8PJEhrD0IhYU8WyurvYcvc73c1vQ8sKaBu3iPsryFvqW93N/MPIdV
                      tz0ApDU8cvxmPQovEb3AzHq9gjR4PatWx72Ui+68LOqDPAcgw73AJMC8pOvUPJKzCT3vL4g9F19g
                      vbCRjb2FHY29AM03vJdmfb1QWF68wFcPvSD3szxwpWS8MA+NO/7MQD2aBMq96KygvNidor3nSlW9
                      Cu4LvWx6/rzuqCw9ORzAPZUYp73gs6W9GsZzvQCEBbtDyF69Qa+vPVgLlL2+dxE9jGUIvZesnD2e
                      U1I9EKUavQGeqj1+8ko9+V/DPTqTe70OZVk9yXOYPR4ddT069DK90EGzu8D0gb1d2F+9cyQxvRd8
                      nD2WAhi9YFQAO8A4N7w2uiQ9tACwPJCCPzxzyaQ9mj9ZPRysAL36uS+9ggarvb1+o73AI6e8YE0G
                      O4Dzsr20AtG80CoDvQccPL1y6k090D8CvRsCxj3+jQY9G4i0vd8fsj0jjFO9lXSXPTrjBz1tKDO9
                      2STFPR2ywL2yI8a90wyjPfH1mD1NxMU9WAUuPAualz3tL6W9E5VyvT0xyT0YXOy8huuPvSfrtj16
                      SQ+9mUy1Pcf4sj2cEYG9LjKLvbTM1jy6s6q9cFZ/veCcYr0Rj409lqMNPQ7jIj2ZgJk9DPrbvFRi
                      ibzYK368mJYnPE+Cyb1WlQa9xLrcPHMNX72TScS9Be6gPdNQML0E7g292gkLvUO3V70gjyW9m5eD
                      PXKjxL0CJk49GFpcvBvruj3AyUi7M0FgvdTcAL0WyHk9iiMAPTDm7jsYFIW9ooFuPaBC2LyS4BQ9
                      2mACvXItIj0d4rA9g05pvWZKi71pkLg90NYMvIokXb3UX7+8YLKWPGNPQL2eg3U9cABivfQxg73Y
                      TLO8SsxwvcH9oD2AJQy6pgk2PQd+X73oinO8E2h6vabVfT1+FBg98up3PThZqjzdEX29NQvKPdHR
                      kj1g4Ya7WFxHPPcjbb154oU9JiSavUxkgjxgjA67JpUXvbYbVz09E8M912YevQPAxL2WoSw9Vt1K
                      Pff8HL0JvZI9wKZFu6imj7zGnqi9sIplvTXDv73gMva71PTzvI49BD1yIEM9UuhVPSjL9byA8Hm8
                      aBXtvMAsMTt90Zq9wjtFPRwKBL0sjLC88LeVvcD1Xjzgeoc8wBgHuzuGtr1QiWK99m1aPbDNGLyV
                      L8G9yqNdvTh6pr2YNLE8YAnPO9KNfz2S9Ju9aK0lPOLQST24gpK8ubuYPS2Jrb3yVyg9QDsUu0CI
                      pjy4P968YvYzPaXVrD1p4rQ9/USRPSwUhry9SDq9gP4IvHPKWb0dqai9EHmWvQksxD2UitQ8wH9a
                      vYP4mz0PnMU9OHCdvaK3yb0FTrS9DV91vYJLFT27qMo9p5KGPd2fmT2aT6W9dO6cvIGpnT2HHsi9
                      mk5+PbDCrTvsrd+8dFXhPGjZprwckRO9LpwZPdfDjD2YT6+8vS27PVizMDzA8fW8kv5DPXFLpT1q
                      oQ+97lKjvQPihj3O5Hw9nvoNPdGjkD2YZQu8YBFDvVLtfT1ZQoY9xHLQPCItZT2Imo69gPlqusAd
                      XrsAf0q64OCUO5CILzzMr7O8qwmavXI0rr2z2pa9aAUiPA4bcz2g1147DEkCvcDklbzXQCe9QPgX
                      PLJLQT1sXp+8gDy4ugC2NLmoETO8gOXMO+gWXrxOd3M9FE+rPNXbkz0lSpg9uMmvvdvsvj0GJ2U9
                      WM+pvQiX3LwyCMe9gFeDu4VBx71iCTY9wFy0uuBXj73wVqu9WlZSvbawLT2gEKC75RTFPVAhursw
                      cFI8XpsHPbeJVr2XpTS9CgzFvSARrjttU7E9yNnDvUtdrz1kd9E84EaJvX3dib2YM6a91gyCvZ4l
                      DD3MlMC8tCSQvPrpSz05XZc9lH2dvHs6lD13mlK9O5vMvabgpr0A+2+9gGKQO08bnD1QgKA73bOz
                      PVAN4btQfBG9IdyVPei3ezzpTrU94/ifPaXVxz30F968E5yLPdrwpr39aMC9nHwRvYAukLpDeKO9
                      aG2NvTCCLTwYVYG88iW4vW5PYz1hopw9rAbCPBD9HryHuXO9psJFPUZUaT3JXsc9MDttvGDFkbyV
                      PsA9BETzPEqFJj3UCOK87jhuPQA6e7zANRO9d1PAPQARGjoRJcU94K/+uwD8oTsAV5o8AFJnvbBi
                      Eb12TwC90PqWvfeOTL3fsYk94vJjPUXarL3pfMQ9f7mvPRQnFr2yxxo9GAm5vcAeB7wglnu92AJj
                      vHB9AzxiUQk9+xKevYLnj70cPec8ULQCvWw3nrw6oXs9QZqqPZjafLw65Tc9sNZJPBSECr33q589
                      6M3ivDBQfryCzFs9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODgzOTQyNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODgzOTQyNHEBYS5kAAAAAAAAALlJgz3xo7M9MTyoPWjVJbxg3iC9q0SsvXx53zxY5LO8
                      aqk0PTgTxDzp+Ys9QIBBPLe+Hr3g9NK7mstEPYGUxD3Ucge96Fb7vJJ/aD1wXio8+sgCPZijpr0w
                      aOI7MvO4vVhhEjwQvFi9X4ugPYDv9jvAHDY8UPKJvbrySz0AA+o5uDqsvWCsyr1Tnim9gL5EOjKl
                      vr2uFEA9oKCUu2yiuTyYrGA8IDSSvexhyzzaDbu9YPAsvYZAjb1DxJS9Iu4bPVumlD2CYTs9Sn8A
                      PV3Gx70E4vM8QHYUPFujnz1gKMY77Mf4PEqlVj2eUio9IFFcvaBLnDtgHJ294n8kPQ51n70wgpa9
                      80g3vQAclDy6nUa9AoHKvUManL2BuIo9Nr1CPd3ieb1DJqk9sPP8O3ixnrwsdKo81RXJPccpSr0o
                      vbW9/WBbvSZ+jr3iJgU96vqivTlchj1YYWy87cSVPaD1h716jxY9EPY+vQ6DCD1SOEc9sxSOPQBa
                      QTtR0Lc9NEfcvK14vD0A/km8shxVPVdUJ70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODg0MDMwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODg0MDMwNHEBYS5kAAAAAAAAAAO2Hb0Tzr69DVCMvRAcGzxShVY9Ym2RvXYhSj3T2ME9
                      9F+mPC7bQz2wwEm8q32YPdIwyr3ZXbA9SrQKvUCTgzpgJWU7YL3TvNd8Pb2IOOW8ZporPTt0r73Y
                      L4A86kAKPTBKyLswt947vr2Qvfq8w726PQg9gbKxPd5xJz3CXjs9w62XPTBxYL113sc9gns7PSKn
                      n71w4HE8+MmbvOIoyr1VrIW9pphZPWDrib047MQ8tKaiPIibmrxWAyA9obOXPWZ5lL3APy+8P4qM
                      Pcahl70b8q09xPYOvR1Mi72tDGi9TX+gPb1Lnj0HUqc926XBvVcGuD0hMY89gICoOgh3yLwQpRe8
                      gKeIujBLMb0T4Bm9QUPIPeNEeb0SSUI99rgbPaafnr1AUzI79h0dPZWLjr39pay9TPypPKFhlz27
                      S5G9xgmovVnrmT1yx6K9tPn0vNTXvDxVWoG9mx2TvdHAyj1oipU89ok5PVLvrr1/3Kk93Z3EPRSh
                      hTwAWVo6Z1wzvSAHnryymiM9jTmbPSj3ATw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExODg0MDk0NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExODg0MDk0NHEBYS4BAAAAAAAAAOjBELw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
        - 1
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        pK0DPG4jYzzVXh481V4ePFdg6ju7Nic87dDbO+3Q2zspk4g78O/3Oz4Bozs+AaM7KZOIO/Dv9zs+
        AaM7PgGjO5dPvzvSvBU8F84RPBfOETwpL8Y7ogI6POyUBjzslAY8Xzx8O1q/EzyyC6w7sgusO188
        fDtavxM8sgusO7ILrDtpeqk7SogBPKggzTuoIM07fmiEO82O5DtM+7o7TPu6OyYkSjsLcMU7k56J
        O5OeiTsmJEo7C3DFO5OeiTuTnok7aXqpO0qIATyoIM07qCDNO35ohDvNjuQ7TPu6O0z7ujsmJEo7
        C3DFO5OeiTuTnok7JiRKOwtwxTuTnok7k56JO+pX1DvXM3Y7942wO/eNsDtvme47mTenO1xn/jtc
        Z/47+rpMPJWM4TvviCs874grPPq6TDyVjOE774grPO+IKzymJxI8xbu6OxjFvzsYxb87BRYNPNtR
        ljsrw887K8PPO5W0XTyuP707WoUiPFqFIjyVtF08rj+9O1qFIjxahSI8qPskPHvc1zt2Twg8dk8I
        PEQsUzxprPQ784kVPPOJFTz+Uoo8l54NPCgtSzwoLUs8/lKKPJeeDTwoLUs8KC1LPKj7JDx73Nc7
        dk8IPHZPCDxELFM8aaz0O/OJFTzziRU8/lKKPJeeDTwoLUs8KC1LPP5SijyXng08KC1LPCgtSzw=
