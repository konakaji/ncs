N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDIwMDQzMnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDQyMDA0MzJxAWEuhAMAAAAAAAA4lxM+hEmnPQAHtLueSDs+ABWwvSIMQT6hwqA+ep4v
                      Pni9Ab5L85y+0PePvJ7Qeb5oMgu9YPtPPATojz2+mmc+g/Yfvhp/h74ENoK+htFVPjJrbz4zmzu+
                      ndmXPvwwqL4Bp5A+4PzlvWBzOryqBx0+UMnxPRCTj77Gfzc+PO2jvjubQL7OQEI+fAWHvhXkpT4g
                      GmG9c0BQvlO6Db6QLPI91ivtvRYjsr1u1RM+IMXyvazip742gK+9GbCiPuqBTT4oilu+bZudPpr5
                      Aj6MAJO+G0g2vqIoGj5urXk+9D+avvhCO778+Pu9+ttQPpT66z22CxY+u9UhvvBehr22je29EqN1
                      Pmb3aj4E6YC+qgNAPjYxOL7W/Nm9MJPBPThqXj2QzP684bGBPgRlhr2+Gwa+ki8rPibcCj6yqVg+
                      ODIMPsAAXD0yd6G+VjkePsPBkr5+twK+uNolvqDpGb7APie+HADIvQJSm75dcJw+x0aiPiYOG74q
                      U2g+sPGnvnJSZD4AGEy8Y9M7voOtE75AxdA9mJ0rvsgolr5YvkG+PLTgPYMmjj5M/JE9/j4kvgBR
                      C73ADi897mUXPkg0lb4sI6C9KMt9PS2ZgD5Q/ce8sK8ovtDxl72UgbQ9wFIGvfAKr70mGwG+4FN/
                      vWBJT76m9c29DqJfPiSuj76kn+09+FyTvly00D0wiSq+E1iOvkBbSD3KFWI+M1kDvvoGlr4A+Pq9
                      oEYcPMSzpz1gPMS969CmPv5KfL6e3A2+IyB8vpAmqz0mcHe+ECqIvZ5vK76AzD2+1E7APUAzQj1Y
                      Rlm+RvntvQzu0D0zvRO+H6eEvqBzNz2CdW8+c2p9vnimHT7W6nS+II4FvZ7LZb5qQRU+4KoXvPkp
                      kj7YNKe+6iRBPrLaLT72HkK+QB35vWCBkD1SHFI+uJY2vggdG71AIR49aKsFPRpUUD6gel09GKcL
                      PQSJib5gdka8IFkAPYOYmr4SlIi+yLMLPSE/hD5mG7G9Zi6Rvtkpij68wLQ92PZFvXu3jL4WvLu9
                      yshlPtqcXz6smYa9xpEdvnOJkb4gQr09kY6VPqRhtT3oCRI+/oVQPibCPz4lmZo+mq1wPiyBkb6A
                      IYC+tOTbPV9lnr72piK+XFSKvQCXjbvwsk2+1Gj5PQbO+70qeXE+YCjQvfZmnL4QrE++wC9XPZSi
                      1z1A6e68ONo1PcsrJL4sL6C+qX6oPpJWND6bbV2++3AYvqawWT4KLzk+4G0YPR4ih758YLs9BpIr
                      PuCeEr0Mduo9wzNDviAMfbzQeY68pGaPvqVWgT7Q7M88DlpsPiLoaz4O0gs+Ef+SPuJYbT7JSYs+
                      oPKJPX2Ihj4QgV++aeCDPqyuj75G8W6+7kRaPgL2qL6mCzI+3nOUvthoMT2JbJE+sN0vvh7tUb7+
                      Q3q+G/1DvrCncb5zG22+pKjKPfbsAL4pZZ0+h8SEvp6Dd74jO1q+SC5PvTgzJT4G1MO9YCgzvZih
                      Ub6wt+c9mGF3vRvkNL5A7Fe+FuTAvbDMp75oEzS+4CsTvaRF5T3QHOA8wL25O0JoZz4AtIo5wLru
                      PeCIIbzA/aK8sFuGvhAut70O+x2++BoQPoY1ID5Mdrs9VhZqvhb0Fb6iOG4+wDExvdyI3T3rrXq+
                      0C7iPUBC1rz4pQY944owvpSmpr1wXNm8YAU3vLX8kz4IoyC++pcVPmGfnT6gIdQ9u/B+vvcsiz5m
                      BM29ELTHvXcijj7iS18+atpYPuskhj5gpVe9Rn4DPtzJgb1K/ww+CphjPmYzEj5YNAk+4CUBvBoy
                      gr5WCeW9yI6avhiGaj1yA30+h4OQPsBrYb6iJHQ+S3JvvugoUT3gHmu+edSXPuqPSD6Ivwk9iNpw
                      vvAnir4Z4o0+03Z6vryvpj1QdsE8YWaEPuzAtD2AKtk8+RGMPoCIvbwwP949AF6PvmhBk76QL16+
                      tnXPvTuJDr6e+KO+OKhJvgDiVrpm5bm9kFSIvtzW7r1sPsY9jsYDPpY6Tj62fXe+qusxPrBQkjzE
                      hL09EyFxvkCmL74i7V8+HQmAPlyR+z24fJO+4BOTvlO6Vr7o7Rm9kB6PvFgPMr5ofx4+7wWIvu5b
                      nr6qmRw+29t1vsM7E774vgy+JramvnZONz5IfBc+tneHvnB1Cj7gwGe+uN1IveSH7T1h0J8+u3SU
                      viC5vr3g7GM8DEXdPVAW6b0Jn4g+DGn1vWhWRr6moxU+bj0XvgG/nD5SJTc+/QaZPrwdgL383769
                      FllBvkjzfr6gWFq8McmZPmbHGj7St3Q+1lMLPpi0BD6e1Hm+FNidvvD53jylv4w+UPDSvGtsgj6r
                      LAq+8AZavpZNdb74/3C+CUGhPjzHvD04Glu+bB+9vXDEQ74go6K9anGAvpBYnD3tJ54+fCDPPdAq
                      jDxYrai+DIHRPUTTzz2gNDA8nL6AvlLCfj7ylyc+8gdmPmBuK7zAts+7AFT4PcDDzDuToYc+x+GG
                      PmD1YDwAb3++1GSPPeKTbD5m7wE+uzkYvnxe6D1ezVu+bJWmvcoZSj5g1Zi9HgFdvt7UZT5KAzA+
                      xFrgPWjVjL5A+p++CNhMvkD0x7uShXQ+rMPHvRDZuLwABss95HebvuqzaD7H+aM+CNumvqPhgr7X
                      DZQ+MSKSPi0ljj5+ei4+qJQ1vZDT67ya2pO+Px2YPrqej74YmVO+juh9voDvPz1ozz691HaGPZu/
                      kb5Mhpk9FBqHva77SD5MB5g9AHf2uzeAkr7G/yy+DktdPoaXST7zS5A+eo2PvkDADj6FBaY+cH/5
                      PbRWhL0GPdi9sfqjPgNaV75o6BS9+PaBvlYBLT5Y9yA+bnqKvorcMD5WqV4+8TKDPigzjr7ca6o9
                      zeKjPiocZD6Q4+e86DcmPXiRJD5A6QA9An2hvmAORbzwnrC84MqDPWLgCT6SAxE+0Gm/vNc+qT6G
                      m0W+8sI6PkAc37yg1g48GuhNPtC/izyCcpa+wt9QPhFVgT47dE6+uLckPlAZjL1WPbS9+yIyvgFn
                      qD7UyqQ9fB2bvg7odT6gmK89rC2BvfjDGr7Wt4C+Fhc5PhakMb7GYHw+z7OpPgh3ab0wOl6+oL8B
                      PiL/Qz4AIK87QHsHvRQVoj22zqu9rlUYPsAphr7YFzQ9IOROvlKkkb6mpB0+TM6kvvy4sT1wvD++
                      UGK/PUB8hj30iN49UKOkvIDUa7yq13Y+MJ+Evpi9ab4Ab0e83sVZPohTHD7GYy2+U24KvmYzx712
                      Ity9SCyNvp4zmr529RK+bqUoPtCky7wFLKU+Vu6qvXi6Nj2snpa9YRCaPsu+c74A2uG71ngJvksI
                      Jr5x1aM+3lM4vuw/vD0A3pQ7IJUHvmNZiL7hh5o+s4BHvkD4AD00CK89oNZEPDzF4z3bnm6+uqte
                      PpmIkj4FNqM+hEqAvThgCL0IHYa+yPIKvR1bhD4Ast69EH3ePMz6tj1IIxM9ANUzPQwc6b25v6Y+
                      IJi/vXa3Mj4UB5y+gG07PBCdgr1mLkI+YFlSvBR5hj3QFSo+Qp+RviqsjL7wXri9OKpFPUbESL5D
                      AUe+1zSfPq5GLT4Oyki+CDB4vWZvab4YnmO+tvRVvsImIj7xm5g+fKPQPfNRa76QmcY9oHlQPSIx
                      Bz5pKYY+qGUGPS5oo76wVuY9oL1KvVefg77O9hU+qtGpvmivir6ouTa9wlJUPmJxJT5ozHe95gdw
                      PoB5IT3SoC4+KAupvuDjLT0wRtc9RmnhvWLYcj4Rjo8+LL6TvUx2zb028O69auJMPtiBST2spoS+
                      cZCkPuKreD7qO2E+ollQPn6bUT4A9lC7fvRqPjWAkT7eXTC+4LWfvpCOnLwY5gw+1FyBPXLJJT5C
                      Dl8+LCi+vcBAQb4AOi27wFmQvZDR2r1YySQ9kCLpvE2Vlj67Wnq+U0hbvrGejj6qCJW+MPSgvRAK
                      qDwMl9g9lAbkPU5vR76oBaW+mDR7PTIYMz4oR3E9PgQTvpzDvr2Cugs++E8+vtZZpL6RPI8+husi
                      vgyx1T34fy096PZJvVYRTr4YSRy9xuCzvcgJHT0D5hq+BmYIPq+bnT72caW+fP6Qvhqzhb6d0pg+
                      elFyPlY2lr6Mh8+97iNLviG0hD5uili+ILYRPpa9GD6AzPy9Kx5Ovgg6RL6WfAs+4BH7vc/uoT52
                      DH2+sHzPvRCOhr4O+EA+wBhcPeBMUr7R9aQ+5MrHPYBY171QCRE+zB2lPQBYRjm7/l2+xobavdjr
                      i7525KC+HlWZvuZi5b37Ihy+CHlevjab0b1UMa89Hc6aPnLtUj5zBZq+QJOqvnDm8j0Luii+4daC
                      PrtUdb4r7l+++wKqPgBLU74o3h09JvptvoxmmL7jSYM+rF+ivhuEAr6EA5K+iPOEvsjKiL72WT0+
                      Ygg9PkrFlr5TUjW+NoCrvcA/BL0z/iO+3K2ovlK3WT6AsNI9Ps0pvqAjqL0+O5S+ZsdPvj5QRj5W
                      cFU+CIYlPTgWIT5A4ro7PKuSvvy5yL0W9U8+DTeNPmDftT1g80m8Wv6cvhYUBb5Iy0U9m8IlvqCQ
                      NjzA/Sm9iM4VPVTtkL4+xIq+fjJIvhETgT6jrkK+jJOSvsDPyj0Wdqm+ltcBvjLIMz6U/to9PZ+U
                      PgD+nLtX0qc+5GSbPbYsvr2YOmO9AOKQvR6Cnb5w7xs+MHsRPnqgVz4W3T4+iAt2vby9p72r/ac+
                      DDTkPcA0dr1x540+kBWnPPLwPT7WHnS+cGPmvHCpJb5ALoY8y7mpviCLF72RuoI+1K6ivUCNvz1t
                      vKk+UwegvgCRdjw8xr+9GySZvl4xUL5/yoI+IEUaPmLGMD4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDE4NDkxMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NDE4NDkxMnEBYS5kAAAAAAAAALAwNb7Ut6W9QH7lPZbmVb4QmZs9KHcePYywor38IJk9
                      gI6qvVAD+z2ANcG8nqkIvqhhKL32zVs+gCRJvIAnZryDQzK+7qp5Pgy/l76Z7oU+YLhTPOcgoj78
                      eM69/jCcvs6CHz4A6dW6xNuEvVx7pr3qm1U+Sk12Pjsifr5ge2499sDpvaogLj48bqi9AIU+PHNv
                      TL6o3ma+82MJvvhiBT47gVG+YIRBvsASzL2pnYQ+rU+QPl0dnz5ojky+JK+ivkieRL6t8oo+pvlP
                      PqOhmz5w8tk8+LY1vUBjFz1ODCa+RnUOvmYJwr3PtIe+gC+ePSDrqL2g0S89LACvvfAk+zzmmzw+
                      JvGavrvUPr5W0EM+AGzMPLakzb3g+j68gGqNPUR6m74YaGC93J7rPfCUnb1VY5Q+ALg0OqQMhD1z
                      gIE+uwKmvpSd0D2mZ2U+TBXjvZsmqr74RRY9iGZnPXD3+DwzpWO+gHZ1PLAk6j0mXVu+jESLPRi0
                      Gr3IFUa+CthtPgD3sbvgbBY+DhVLPgCH1Ls=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDIwMDUxMnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDQyMDA1MTJxAWEuECcAAAAAAACFisE9wNOtvLhYo7yqdW69FTi+PYB/zTrQcSA84Obq
                      OxaNNz0ML4W8SBijvT17PL2AhBa9aoQ5vaeAjD0CrpW9zS1PvSDAlb0KSQA9gG+UvdyD0jwmfg09
                      YBSwvXrSHb37wsA9B/OQPYgt5LxiPkM9l9swvU43nL07m7q94x3CvbC9aL0Nv429Ti0hPYwG1Tz1
                      GMG9mNbVvNSs2LztNcA9P7qtPXn0iz2Qcnu84S7FPQBfDDraZDM9q/qTvaBS6DttFKk9y2S8PSKi
                      KT2jT2y9e0LLPUy/5LyQODg8QLFlvWrDWz2Yuio8Emx3PS+Qub15+pg9QjgwPYvHoj182+M8LQp8
                      vWNSGr2lzIi98MWXvbp7Dj2jKa09A6K4vVjlFzyhoI0926CEPcAQpryhS6o91sQ1PYB3xL1JKcs9
                      0JwEvDCPETwnkCC9YWmvPXYwCT0qABw9PV6YvZpUsb0CZ6m9zci6vUzK7LyaMTq9Up5fPTDINLzQ
                      USQ84qAvPWYhZz1Mbwe9CKa5vEHyoT0IKdG8cKGmvWVTpD0QDQ88omivvfCQfb3z0609AGVNvfdW
                      Lr3zD6q90BpAvO3zsr3YOUy8445WvaeFvD2BGqU9qKvmvMQDAr0mLwO9Q6EbvbfZvj3Cb0w9wUaS
                      PYNJwL1k3v48JXaGvXiO2Lw4c5S9gL65vec1mD3okco89crCPdK3NT1lUZ69RhUvPf1Al72GfQk9
                      FbaBvcVBn73A4pu9FgAcPbJpTT2myR09x/qLPWpeQj0EbYi9qe6jPWrXSb0ggqm9wyDIvTAoe7x/
                      c8U92Lp0PHGkuD233129E4aSvSB/eb0YHcy9VeKivZMrqj3gblS94vpyPSjosb2aup29yOL9vLAf
                      u7uJb6Q9ADR4OXcbLb0YVF68oBmuu7ghlr2Ufda8qt1FPYNTnb0adS49ETSWPdiEqzxM+9i8h2a9
                      PbQkuDzixz89SC2CvJCtCL0sD7O8RplBPQDalzyyUcC9w0yPPYxEjDywW+O7UukUPde6tz3Ykau8
                      88GRPQtMnb2Zmsw9rfeEvU44ET08voe97qM/PdW5m710ypw8QEsiPPumpb2Wfp69hKLvPACdSL12
                      LXo9XQMdvUAODry2GjA9JtlZPcP9tz2qha29FUytvSCSw73KRCQ9AEtBve6KVT2ALU66+7K/PUO1
                      zD0UAcO8r7mJPdRG2Tw+lRM9pW6OPWhKVjyokI883yXJvYI2Vj0Ab4m7keaUPXRQqTxbAqw9PZ0e
                      vRPmfr3YCYm9LR20PXV7wr2jrI49uT2aPYOOPr14z8Y8c/eQvdEjrz3f5KU9XDzjPMJaYT0N+Me9
                      Mvq/vdSfCr1wxW29GBnBvCm5yz17uJO92ZSsPUiYh71AlEe8ZG6CvahAs7yWVmQ9SjiGvah8GTzk
                      jIK9wF/MvCC+2ryT6Jc9ou8CPWA2bjsv2bC9lq9wPbyA0TzJB789IbiAPRL+Bz3HQR29fk1sPVNw
                      jj30Rr28T3mtvaBAvLsm/5W9aR+hPeBfmbst9pq9phhjPQD1ZTpR+LA9JOvQPKopn71CeQ89sIPE
                      uwD0zLo6qVi9yeqyPfLWWz2A7ck65E+HvWAf77sCIbq9uWu6PYinsbzImpS8sCYJPPStuzxdVrI9
                      c9dOvWB90LvSPSQ9CjYavQLLHT1CnwY9IAjAPAnLij2AOAM8KDX3vKRN3zx4Ebq9DBnavOcYuD1m
                      MgM9odG3PRj5mbx5VaU9M2eXvR1hcr15D5Q91eHKPTepab3EMNU8YCHpvLTfx7zHd4A9WWLEPdCz
                      SLwgQHW9goFcPbrOfr0Zn8I9zCjFPG1KS70lM7e9ktsrPaapET0YB/S8WGwrPJ1bVb09yiu9MJqm
                      vWzUpzwtna69r/HHvS9yvz2OyYm9TIyzvP6oej2umSY9uDafvMbLAj1KFQO9iLatvNZBQj2YvlQ8
                      maqhPRwNBL0wAIC929jAvZQG6DwtzzC9wEg/O0APKrsyWQw9cqZhPZQayTwARI69PYjIvdrufT3m
                      RGE9hN7dPE65TD0mfIm9Ol0fPS22mD1/YsA9uMquvGdFSL3YQ7A86PmjPB7PaT1yi5y92JILvDCU
                      bb126j49kY6FPZyDEL1sd7O8MM7hu7gIgL264Wc9Je+cvQV4pr2a+3O9bICCvRqZPb00Y6G8wC4z
                      O6oDHT2Y0Ai8MgBNPZT3nTxI/qa8vYOdvR2Ptz1Afmy9QMuCPID8Jb1I7sS9xnufvZhEqb1ivVw9
                      3QY0vUAUTL20KtK86KCXvaeBd71KliE9gr+pvWJQfj24F5+8M/86vc4GKD0abww9EJwOvBJlPT2A
                      47+72O8WvChVeLwgE4a7QBHpurPVb73oXDY87czLPZM/ML0jkaG9Ipg6PTByPrwkrM08nAEUvUoJ
                      PD3AMjC7MZaPPfC7mb1OCCQ9IF1FvVpHRb3JxqM9Eqs0PYOCJL1tuLQ9ODK/PO7lhr0Gwo+9LMKI
                      PEzLuTwo/xi8mJTOvFBqsjuoXci9x8A7vUKSaT1YVbC8GqgcPZELwD2Gr5e9BoYwPWvBub30MRG9
                      NsYuPeninT1VcJC9QEd1vPectj372pg9dKT7PKDrlDxM4988VKeLvFLIFz0oywI8pZSIvVaJND0b
                      D5Q9ALUdPCBUMb32OYe9OI6QvDgqgr0UKw69J7q9vdg/TDxIl+q88AgYPBkYyD1SY389m2vLPZLf
                      Aj2hmIk9Vop0PUQ3g70Z9ZI9+nENPW35or2K5jI9IAqQvRZ0RD1cYfk8E1i0PTnTtD0DQcc9q0em
                      PWj/VjzC4sW9l/ojvUKYRT0A1iw8TEXDPIoVM70wyt67oIpEOwDsrTyAxK07LWs0vX6Dlr0196M9
                      wfi9PQl1tj1QfmA8t1NvvZ6tir1yAUA9AL0lvFQ88jzQfAq8NETaPGkAuT3AwQO7E4qePTT6E70F
                      pK699iwLPRoWh70wkbs7grh0PSyBxzxAvZW9GtNnPUKsMT1wS3m8OLz6vMp5ob3qG6m9FXiIvUWz
                      sT2AQ4W6AM1tutAUWrznBx29br5fPY2Rcb1Pga29bXievS3zuL3JerQ90CAbPMBNi7znS5E9YABA
                      u3Qp57wSfqu9w4NNvaDbg7y3dqA9wCBHPMCbVTt+VQw9sOZzvMzG+rzwgGe9u+GvvcLhMj0BIY09
                      zULJPXBHZ72nO3e9yTWBPdgsE7yEIP48ogUyPejcMDzAUS084S+bPXjCgb0iHrq9MDVqPBToxrx2
                      N3c98Lm9vc9Ztj2oP0O8kOcDvaryOD0Yy2682JmEvI5rJD0wg/m7/fvFvabri70ai209AJMEPECK
                      n72AgJS7sGGtu3pLSD2w/Xc82VKLPaBUbb2nPCK9UJX7OzCcrb0oZRY8MiMfPUANLb2wUyM8Ihcw
                      PaChW7sadpm9k2+tPSLuJT0KRF09gEydvM1Vuj0sJII8mFSXvEvHyb29xJG9Bu8VPdN+Q70GgBW9
                      U96tPfKIMz10qK28Pi80PUDoFTxD6zS9oFFVu4BUKrwwmJM7ikZWvdj7eLyCure98wecvSuAuj3e
                      rKe9SuIYvS7FBT3ofue8zLrMPGCHVL0xdKw9ACZTOVRqujy4RZW9IODhu6AThTsJBbw9+VbFPUjb
                      uL1Azb468w1FvcIzFz0f05M9FhkUvWICPj0scge97TbEPWG4uj3Sqk09gotNPdcPPL3H1jm9lbOX
                      PbbeED1oT6G8h6WRPa3Ki70uG5+9o+NfvfFXsD2bBKc9IDzVvDqaMr3+cDU90l0sPVrxvr31b5S9
                      kWOHPfClarxoZr692tBSPWIZsr0aaGk9NMgPvRRAwjzopMe8QBbJvTiGujzgc3O9kBtgvYjRk7wA
                      Cpq568KWvVvuur1wkjE8XZu4vZJFdz3Dn8g9WOCNPHAeJ7y3U4c9Itx5PWnWvD0nW7M9q8ihvcLB
                      QT3wLY69WCVPvLAiyb1g1LK9NcWdPS1Peb1YdS08OsmzvaCorTsmoGs93tyGvdqGMT2ysTI98XOm
                      PToXkb1G5io9bjmFvYcEvL3ARa88bTSHPT11mr1AGcS9CX/GPTGcsj3MedO8AFCntyLDLD01jZ49
                      ytOfvQCn7bsWbFc97qCFvRegUb1iZbq9FSORPQxw2bzq7389yplQvZQfozy3zmy9OQe9PcBdOTsK
                      foa9KupoPcXOyr1QZBq9KAKovQ2lub3oZkQ8mtRLveQv1jwyTbO9/T7AvZHLlj3H8SO9WYyyPSrz
                      N73wECk8UMp4vJVQh700Hfe8lducvQwFGb1ZIr892YOvPeDIjL10F7q86+mYPSq1q718BdY8nUOs
                      vffFtL3a2RO9mL7JPAmaxj0Abpm7I8FVvWJ4VT2AADi90LRsvI2Fkz2D3Ve901OwPbgggL2VV7i9
                      sA6/vQp+ur2UK5k8Ja+tPUCWKLzyBC49S3a7vY3OVL17ece9xZW9vbjOvTxjV2+9RF3yPN21ib2g
                      4ku9xhpSPYjjjb0iLKO9JGjbPAAVhru6XRu9Skugvc3EnT3jv4A99NYGvYP0wj1fj6U9rKL6vLCL
                      Cjzicz89sBsfvc1wyL0MVxa9I+civRk2tD3zZKA9+vRwPX0jc71gN9W7DImiPJH2rz05ebQ92EnL
                      PLELwT3sTqa8GH+qvBAKhr2sZ6S8PQ6CvbB1/jugZPq8PXUlvfILKD0AQbm7TFO5PP1xvT39FZU9
                      +/+6PVoqY73Ya7M8iPebPDhjqr1U4aG8hmhBPcbTDz1FiYu9AMHmvN46rL2A+pe8yyPBPdJgMj0Y
                      VjQ8Kw6WPUDuTTyRUas9Cj4cvQAsGL2MZvG8KOsQPLA0BDyD9Z29aNZgPLJ3Aj2weoG99JGKvaQZ
                      +jxA17y62JXtvFAC9TvfVLa9PSGJvVcqVb0WVjo91Hv5vHDfB7wU0e+8gNUNvTdKpj3GVaq9sNFX
                      vWfbmT1dc4Q9GK4xvMoPJT0WC1Q9KMXBPFAWnzsAaV29CCG4vbekpz2JFZo9+w+8PWeGM72Ah9c7
                      E7/AvZ38db1C0GE9kh4BPVIaOj17Ya49Ip1vPWS7zjzA0XA7EH9SvHScg72wwna8qEQtvJISFT3C
                      8aC9AFyivA1Umr2yhUw9YGBNvSeVIr2w2Q+9iRuQPXPzvb3ggsQ8MkRrPdaBjL2fIIE93ce6PaDp
                      Br21vbU9FolxPYCTtryQw5+9ZODwPEGdoT0mPlI9aNkaPAgitr3n3LQ9dqA1Pba7Az0KzaW9h9od
                      vZ+vyL3Sib29MEiNu2JiAz3SHhw9nw2JPRAUkL3o8LE8Sx++vYagh72hAZM9KvIBve1KoT3N3cA9
                      nx+nPX+4pD3198o9aqwAvXgp1ryAB8u7ftI+PWwGwrylAbo9wik/PSxfEL26RyU94zZPvZeryj3j
                      JZI9Cx2PvSulzL2NOsc92uC6vQMHiT0AQ627stOcvSjl/Lz5/LA9ojNZPQH7gT20X928GmZUvQcd
                      TL3YTzU8W16qPRizXTwA4OG4uIbavAm6sz222oy94KD6O0+xpj1mNWE9UV62PRB/OTwAbqo71lgD
                      vWvqhj34i5s8odujPVdvuD3MZ9c8xc+gvQQU8jxAmli9U3QmvUgsgjx8zP08GIaJPGHghz02dQO9
                      pFnlPGTH+jwN+Xq9VyG2vYBRnLtaPD89esJrPbDcVjzrPr89mgxgveFSoT1Itbq8jlhmPVCPmDtQ
                      faq9ZODfPKCfDrvQHl+9YxHIPWVNij0feIw9RiV5PUTWir2q5U+97ym1vXhnsbzQmca9KBDKvbRh
                      /LzK8jM9KG+TPDnSnj2gmgK91EbKvJB3LzyAM7a7zY2tvQpSbD1EQ4y9bNTTvOqcUT0sjYi8981D
                      vSVdjb0Slw09EI6XvXCAUDyAjua6KKqEvCp9SL1Tub094fm1PZ8Bqj14N7q8YMWCO9Rs/jys2PK8
                      1ZK6vcCupTy+Aaa9MRqLPVwKi71SW5S9AR+EPZTPn7xD2Hy90ZWhPYMHmD1hopA90j0bPWiEyL0l
                      nLU9PXKAPbZTND1wllm9S6y+PUIhMz1pwrs9GIpZvAEotT17qsG9FVK2vT+Ikj3QqEq90oCFvcDs
                      xrwwbzc8OcS3PVOykb1Md7I8qEemvBL6BD29lIu99gapvaryUb2Aznu88DxZvWCQkLwbK5E9CAiU
                      vLCN0ruIr6+852JEvYBTCTzJbsE9FbqavdcoxD1YCRO8teeJPZ4Zpb2WDDM9tlYwPXtsm71YYoO8
                      mtU0vTSUgL3YVzU8QCW0uhEvrj0yncK9591Bva49AT2Cmwo901SwvTdZJ70g9NS8jK2qvJRv6LwU
                      O7m8AOC+uAZ9qr1avsm9gFUAOsnFpz2gLtm8ILSYO8y3qLyjp509+TS9PTN1IL1ejCM9CBeuPB3J
                      nb0DsyC90A2puyBmkrvehV494ossPVjeM7xq3j89Ciy7vVOXSr1gsB47u5uNvcpqdL1mw3I9qkMZ
                      PQoJyr3EBvk8ZBfgPJwdAb1oZXu86ExUvEA+NDsMmJK8gG8rvKE8iz13Wqs9Gi0CvdSnv7xbd7O9
                      xuqHvdDkwjvQWkC8YyHMvTpMfL0Y1eC87ZhgvZgX2LzpQY89EhlzPUcxWL13oLC9LHTiPGgUljzw
                      0VO8RvKqvdOjkj3jr3+96nJMPTY9EL2AyTC84KenPP39hj1Gr3k9zwqzvVilObyAx1298EuXvQLQ
                      Kj0iumU9z1OpPcCErjp5X6w9XnkqPWT5FL09+kS9H6zDvWu9w70dfcQ98aWqPdWCtL3K9x699Bfh
                      vMLHKD1qrTu9Q4JSvdLJrL3xVLU9lo82PWElyj3Q9dw7IqN5PSe8ML3EoM88oIDfvEv+yb03pLo9
                      Wzm5vXm0lT0Z8oE9gNLtO1jmlTyYrpe9ezKxvfQfAL0wvgW8wPcavTBKu7uAC4G7tnhyPQCLKbuo
                      JQE87YbFPfFauD34YIy9nXi4PX5Cfz3iTgU900xDvcjzwDx3x6U9C6asPfNLxz2wP6a9zCKzvKBM
                      F72+0TQ9gmsJPUokST3KzSK9z/m2PTLnFD2tFrY9aJXXvLTVorzKnAW9zEauvImFlj2hz8A9eqoE
                      vazbkDxgMv28MeG1PWX/nD2xC6U9sLAYvWvisb0wXvi7ArgmPVprRT0KrQw9YY6BPetvlz2NMrE9
                      MOkivacZZr1OB2E9mejLPTZQRT1YqQW8qOmsvExTv7zwCRC85gFkPYBpXbyH98e9EybKvaBTBL2g
                      otK8huttPWBJJ70ZapM9PjJrPWAuT7tz7cm9vT20PVQKmbw34a49UixUPQZaIz3dMRq95lKMvbSk
                      sjwX6Wa9SDvsvKxylLzAKRI839PDvVgRXTzUspC8HtNMPRkMkD1iL3A9mBINvIimwbwpNLs9SHKj
                      POaKDj2yFj09phA0PY4kej1k6Ps869afvS6Sqr1YgY68IOiDO6lpvD2ak0s9+jAKvWhkmLwbdqQ9
                      C5GZPQCWSjswlii8wNVDuyifNzzIE669PkhqPSv0hj2qjls9JLbRPABV17kD2ya92H5OvIt2oz26
                      x6S9OeLBPf6ecz2Upoc8+kd0PVU0tr3N+EC9MIpYvb2HKL2FEIi9Gt8XPfGxwj2abYG9AqcbPVJI
                      gL2E9g69UphrPaBanTxmvgW9TkcCPSOjlj22LhO9VkMcPbrknL3ibFs9rTh3vSj+VbyyAsK9ggA4
                      PdmTgj30ovK8AYy8PSMNhD2A4Ns6S9OXvRA4Kr3WTnc9+DePPKgqVLw9zKo9wPhivNB3fjxsl/S8
                      QEs1u788pT0xLoI9YBFAu0BIV70Ygha8tG/SvAmRxj0Yc3G8gJiAvYegLr2ADsG92GBcvEHgij2R
                      UYQ9wNq7vNBXDTzwr0M8ek2JvTQrgrzAMis8da61vWG4pT0BR7A9IKPFvRNiSb2D47g9ksPJvYAh
                      DbxAZXm9aGqVvCTo8zzEGhO93tZsPXALvb2XPb89GVmHPW1alj168yc9Uo5OPSCKtjwx9oE9z6TA
                      vXOjNr34y8i9qMqgPOhsPbyDdz+9u7G4Pf9jrr1o4r28Wz/GPd31Qb1+0Ts9ULmJu4frZL0ECPM8
                      qP3hvNLPCz1HIIc9AMBJt81ayT04ifG874+GPZJZKj0iZx89zg8SPdUCsL2gPUo7UNaxvddViT3m
                      zBo968KsPZ07nL1QaxM8lYXJvaCZCDvkJuA80h2qvZjkY7ylkaq92kc8PVoUdb2w0Ui9JquUvZQz
                      Cb0qGEc9rN+mvCodkL2726E9gx2uPT2Our0isHY9hwy1PbXuhz2l1oO9JLzOPFj7+rxzB7a9jNTQ
                      PNlgjD2qOgM9ewW2PYpYtL2A39S7WPnVvNJNTz27XKE9W1SqvdBuTLwpaq09g2a+vbPpwb2AkOy6
                      RWWqvWNMHL274Yy9+gg9PQDWcb2B2609KKMLPCAV+LzYM4U8yU+BPTiCxb3Akzw8sGz/O1JMNT1c
                      ZBW9EOYFPHH3wT0OViU9wllIPYA+oLooXrO8KIxMvH2vsz0KH149eO3WvIUQtr1QNO+7+olivTMx
                      sL1A6KW9rd+1vTGgnj2aQBU9vnmMvezsqzwD4CW9r3q4PanumT0AEu25AK5LvFO4cL3g8bk8oBaG
                      u17bZz1tk1O9tFqCPNC0uzsApCi7uFPkvFLWTT30m8y8gNKEPFT3kTzA1iQ7TXRBvelwqj3Qsn48
                      sNC0u4ALfL0Eetc8Jrx/PfAcT71q5GI9wkK8vY2wHr0/MbM9gMh+vZsMmr0d5I09ZeGnPQf2YL3o
                      YZQ8NxQ5vaVVq71175W9TPnDPDp1Gb2s+I88upk2Pa25S70ARRq7woYOPfdHZL1LerK95BH5PJ6U
                      hb0KHFM92FAmPOJPq71SbiY9EaTDPeJGkr2SHD09moF6vQO7V70YRqM87GnwvOwt+bwJWck9wSiW
                      PcD+gDpQQoC9YwuzvW+iiT3MFYO9er1ZPQW7xD0JJIQ9PzayvexWgjwAAIs1sL/wO6HQuj1gFRu7
                      u4q+vWBaRL2A1JY7ICGBvUJJVz3evJS9wKrDPAJrcT018YQ9oveIvd4zZj2KyoW9LXeRPY1+Lb0I
                      wsW9xU2dvVrqmb2gwh69aMwwvLbnMz2wpbq9EOgMvP06b709JCC9gDiiveA7ur08rfM8LT1Ivdqc
                      Or0A2p85d8nMPV8Otr3+xXc9wJZtuwB+Fb0TRCG9uGC+vWhY1rzlypW9iiJdvRDQUjxd3yu96Eyb
                      PPUkvT3g3Fy9sK3Mvchfwb1WzIO9zzmdPcIHZz0oXRu8X2+0vXSaBb0Cg1c94B/tu9gHKLzg16i8
                      YGo+O04efD3aDTg9gPG/ugw00zxl7689XSYnvd4Gn70z77G9Hs9MPUBgLjsm7IG90SqvPRb9GL35
                      H609pySJPasShz36/mK9CALIvDD3HbxKizc9RxK3vbnCyT3rs7A9h4Ybvf27lT3Y5n686CaxvMpz
                      Hz0Uto48wJ3LPNoeSb2ufoO9wHZYPOaGZj3SScW9PJaMvXvFub1wunI8KCQgPKrncj1oEho84PyA
                      PK91rr3Wu1w9klxrPZklvT0tn2m9sJorPFpGYz3QRz+8LHsBvZtdkD2YzKq9OjEkvSCbOr1sq8k8
                      Yv4hPTICtb0oYyE82II/vE7Fbj2HOrC9LTmNPT58CT2wL6y9q8O/PQYOMz1XnrI9QjCgvdnquT1u
                      qxk9WBBgPDwV6zwj2yS9sdKLPemPkD3Ls8e9jCyBvSccZL0wC+e79ACVPJ37Sb3lu5C9MICgO9AQ
                      +7vQeN07EUOrPcfXw71CJMO99HqCvI8juT2cHe48wc6LPSr/NL1DL6E9t3GAPWblSj3AXaA8uu5z
                      vdCAuLtiVDA9WGWNPJ5+Vj22BDQ97r4RPTCEojuQVni9YnpOPZDOSjytu4S9RAjuPF4jFj1NOqK9
                      aS+GPaKgZj1H60m9QaekPX3jjr0z7MQ9J2W0Pb5rqL3k9948cfq6PRKUAj3nRYY9CIiAvegRtTyg
                      SgC7mF2bvNtgoz0o//a8KvwHvclhoD0z2Um9QJeqvAA8LDpnDpc9F5cvvTxeib0tvWy9l147vQyl
                      Dr1ANxO88n1EPUD2UTxMOPa8spgdPYvlmj1A0di68F8pPOBRQr1XcyO97B3jPKj0ijxeGlg9BnMC
                      PeVwlb0RV7s9hZOxPSNNH73s4bc8i7KZvXQcAb22fxo9AInjOwuCmL3NnnK9KAyYvVBClLs0lJY8
                      YCYBu6umrr3ZuYQ9F5mrPSYOkL2G30w98e7FPWb9Gj02XiE9Tpk2PRbKSj2gOQG7cvRNPStVxz0U
                      0Lg8oBcAu+Kalr1QhMQ70SC4PXqHST2qfWC9Ah+NvUradT2M9ZM8hm8ZvYc5lD2J8sM9c/nKvQAc
                      Qr1Fn5y9P0+4vcPEub3FxYe9aYSFPfmYnD3CwkI9FLIMvcY9Bz0ADhC7KlZsvWp8sb3/T7u9dGCx
                      vMoyrb3el5G9rY6KveAnwrt4JpE8wcPBPQCEXznd2Eq94DnDOxVuvT06hTg9VK6IvZaahL22fA49
                      g58bvZsxkb37ZLu9TTOXveCrkrw22ys936O8vVMEZ73AW6i8dH6LvGV6ur1wyGw8gHGmvOOBHb02
                      hh09CzGvvSxjmzwogZ68aAHCvKvplj1Xk4o9kLMlvKpXXz1KZkQ9/ntyPWywxby6xlG9GxeLPacL
                      Jr1SGxI90q5iPTtIj72BIsg9AGHDPKopR70944a9MKA6vDhXuLzUwLy813kyvRiQl7wzeL29+jlE
                      PWgxoDzzUZm9lBbyPACnGDxq2Ce9TKWHvNqaZz0IeIU8P0i6vQiv5by0ivs8f22RPdxJ3Ty0F808
                      bZwivcGWwj1QGFE8QFxkuxOpjT2udn09YtMaPaB6q736ES+9cjXAvQcssb2QmQa9okg7PR8zv70M
                      WYS8GsstPTdCij0C/yU9YHuHveUhhD0YBVw8yMTmvFrQdb0KXEW9QHW0OgDe+LvwKlW8tGHivMjU
                      ojxD8yq9j2W3PYXlhz1WNl09itV8vUN/r72gArw8xpeNvXFOtj1M+xi9k8ZrvUAHhDx4YLG8yKnk
                      vEkXvD2SPIi9qRPHPddlML2ED/s8prw5PX2bNL3LCby9gCJTvMRb2DwQz328APmWvQAFhTmYpiY8
                      4g85PRClaL0KTp6995B7vT2agj1wUmq9LWy1vUwMvDwxPMc975uUPYKncz2Hcx29/fB0vThdnb3q
                      nUw9avOzvSTT7jyvu5k9KGp1PNEUlz2Hyok97Yo6vbEFjz2kfhe9YaGnPV7RCj2zVX2975WoPWxv
                      /TwDMZW9ylYCPcg5mbxph4A9eeOpPX+hnD0B8KQ9AG8fu2ZCej2KTF89PHzWPLDEpLvAR3G8AFrR
                      u2AAmDvwFQw8yjQKvRoMW71LF6i9ExDMvcr/Nr0AeAo6gxy7vXkUiz0na1C9rcCPPR/2rD0A0+u8
                      ACyZOmj6o7xSWDc9QFRxvR1Hqj1YQg28MH1ovMBwHb02Mmo9iPOPPAaWQD0GFCE9ImB/PbADdbyw
                      3P87K0elPQOJxz0Y1i+8yWSxPRhNtDxo5Dk8OSqrPQ5mGD1oLmG8nCPjPBCMQLysb+I8rGiGPJBd
                      L7wAE++8NEfPPJA/QL3th3K9Mhg1Pde6hT2e5k498J9vPMvfkr1+OJK99X2DPc1Ndb1ekhA9Qkw4
                      PRirlTynHXW9wPL2OvCOSLxwjTk8UiAVPTZ6A72qj769WHyRvILWmr1oKca9yhA9vcknhD0u0gE9
                      MprCvRv7ur0SbFc9J8mHPVQtnTzAH4m9ajYxPYLONT0MHfQ8qtoyvauqvz0QSS+9qPI1PD/tlD0o
                      3QQ8s6G9PcDwi707tb894L7IuxDUR73Yxsk8Xkc4PY6ihb0GGwW9AC7OubVkxD1cpek8/DsVvbYG
                      lL1imyI9lSmPvajb/bzgeu+7lUyNPSje5rw/8bk92haLvWDeATug2QO7YOtvu0h/mL1g5BW7wI9x
                      u1Dw0LvVN769x6/JPdAiVL1APpU8mJS5PCgdJDxow6M8+6yePXie5rwMToy98iskPe/rhz3lSYM9
                      qLypvcG5qj0YbJm8dhWkvUa0Kz2uO0Q9TNXdPESD2Txg+TW91vyJvUTf5Tzj4Ci9wvgyPf3/wL2Q
                      elW9iPGxPNpwMz0gw+e7YICLvd2alL1A7JO8iK6svXpgF70Yqyg84BmMO1FsvT3fhqQ9cLwZvGOB
                      Gr2oUic8fBTdPKfgT72igSQ9FtEfPSIoLD0+ah89TYQ/vc1RyL20P488olR8PQEujj1D8b69o/xP
                      vb4vZj1BZpE9YJmePHS9qDweMzA9enZHPQV1qr39gye9QwCjPXcDVL0KhEU9WRuEPXnUgT2gy7W7
                      5sQNvayy1zygsvW7R+jGPbpnAb1S6iA9UlR4PaWDyD34sNi8ko8nPQDAxL2L1rI9NeiKPaQV/zwP
                      DMe90CBSPJkdrT0nxZE9uhVTPSqTAT2w6369c5ZgvRJSAD2+zh49uFSVPGB4Cbvu+5+9tvR6PdRJ
                      0ryi4DY9mPWmvKzl67w0Hc08JKzbPI1qjD3uxys9gF4qPMzylbwYOZm9gJjMOlt+vj0TMqy91VSc
                      Pc5vJT0A8388cCFXPFiPoL3gsg+9CFOZvKBWN73qU329XHftPIU+lL1lgsG9IIfyuyHJjz2wFiG9
                      NwgkveLZYj308Kk8AIKhOcpeXz1QTY29YPWBO2txoL0wRQO9GFO+vftGqT2TwGe9kXGfPQihw71s
                      bNw8MC9gvKD2wzzzPKe9WtsUPRLucz2AnsC68fi0Pb1RN731lKy90N7AuzUgor1Acau8tcusPc42
                      bT2AcPo6tMiNvPvYoL0EAfo8ofeYPY63PT3KLyq987NhvRcztb2mKXY90PlVvHootL0oETG8SsRW
                      PauAtT0r7ZY9LtSnvZKlHD3V+7M9s49JvWYuQz21mI89MZSIPaNuaL34x7O8sD2QvVkjrT0A0RC6
                      Z8PMvQD0TbtAlxe9+FD2vAFzpT11K8q9JhwgPdA8HL28ihS97/7CPWCo47wwmqY7IsRIPaDrSL1n
                      x0K973e1PZ4iWT2P/La9RxN6vUSF2jxAJ/06OlkCvXtwpz3AeLK69Sy/PRX5xL3UypM8qLOqPAAi
                      Lrv2zEM9GieIvViAYDzKune9OvnJvWU+iT3U/c48n6CzvffCer16tAE9yVmJPVNBnj1ckAy9UOuZ
                      O6dAs70jIVa9gDpxvUDBCr0LUZa9TPyivFA80bsMmoC81BvyvLAqTbwAvGy5GKWIPCCPv739pL49
                      hW+zvcjux7x5hsA9Gv9/vUDOf73NyZe9xg91PXoiOj0GMgA9ZG39PCGCvj2Aq/w6pVGJPYqYKD3J
                      B8k91wjFPR2LkT3w8Q68HQt1vUWniz1oWHS8+o1hPfJBXT0V15i9sSmHPZTqkzwKYBI9wjMTPeJb
                      WT3hmIE9ov0/PaV7gD11Dbc9AMbFu7ctKL2wkce9MJuxva7tYj2A6lg6HMgYvQ3Nnb2oapu8wF+N
                      vUqhHb3/86M9AFn7OzUAwz0NyoU9gN+EPClCiz1gLzI73YmJPb+PgT3icgQ9LJ+zvNRfhDyX/a29
                      V0VRvVngoz1SfLm9F/FuvRA7e7xhFI09AGM9OkwBmTwQA1E8IMS/vLDnWDxAnES819c9vUL+RT3Q
                      7j88zvSdvXTQlbwKYIG9ukobvcgTvL23hKI9ZyGwvV6NST20lNc8sXuYPYBybrxgtZs7VOkTvVVr
                      jT2tBze96GI1vNfRfr1m7XQ9272WvWJRAT3xcJs90n8ePWwB77zg1uy7KueYvQI7OT09lMC9KCjG
                      vFW4xr2wWds7Pay2PdX/x730Kde8wI9hO3Seh7xgGvC7Cj6/vVDFRDw9bh69S8ySvYD2+bwAD0y9
                      WmIiPfKcez1meH490II4PHQ9w7ywUOs7ABdOu+rwdL0YUQ48ejMbPWrAUz0WzAa9deXIPa3Joz1h
                      EsE9wPF6u9j4ZDzQQno8cz+wvbrpKD2i70U947BQvQDS7ztHwq+9RX6MPYBCjbx9cCi9euEwPfzt
                      2TwXf8M9hoB6PcBdDjxg+zW9eSipPad4fb1CBU49iSOGPR0smb0Agps8lOCuPADETrlSeX097GmM
                      vFn5rj3oYlW8RTepvepHfL3gdbs8wg4VPfLsPD2gqbU8GtiWvWiBoDxC4rO9AqVRPQA7i7sQjmq9
                      cE03vKMFWr0Y0zO8IPKquzaVPT3r0sO9OUa6PWAlTTuCy7W9EPVcPGBfqTwrjb49mqwIvXdXeb1Q
                      xso7wfiKPVDAJzzC51c9U069vZquZr2NWJe9rDznvBLUm70Lb5e9cHEevbSuljxAUBu9MQGMPcQC
                      /zytj2i9fUkkvf42Gz3qCa69oEyivJT86TxgWzW7mox2vaBEnDxCv5i9JjZYPVa7Bj3Y/gm8UDEd
                      vTjc8rz+eTQ9m9K9PVkUwT36F1g9JcWlPd/Qrz2AgeW7ilsAvWxS/7y0HxO914tEvVPILr0gyda7
                      i8qTPZkStD004vS8jcWtveUkxD0wb9y7E4ySvVo1Tr2OWB09032NvWg0rDzqFSq94kQDPfAPVzxb
                      e5I9GK5XPNjNr71NKZs9hbClvc92mD2HPR29AE1Fu2KvSj3abmE9WZiKPTaYbD1Mobq8oiggPVLh
                      TT1NoFm91Jf+vA5kLD3QtZa9xvNsPXfuyL0j/KU9BHrrPNBSv7uQY0G9x9KbPV1Iib2/r769B3Gw
                      vQDszbv4rIU84P+UvCHXqz3YK6a9qvqlvR4RWj0Fd5o90CcNPLgOsryxVqY9up8LPa7HfT3YRA88
                      4nojPbfyT73Q4yS9owrKvcflwT0GD3o9+KftvJN7tr2e2IK976uzvchOrjzdgcE9c56BPei0jrwK
                      AlG9MSCSPYo6OD1M3o88ZfGevQoZHj2b86M9ygcivXO3k7099SG9h3LEPYBwyLrORkc9iAm9PNSI
                      rjz7eZC9KPYuPKrxq70gSsY8N/NfvYS9Ab0aC0e9GIUzvMCN0bxqdxE9fTa6PbhYmr2YTye80sY+
                      PV0FYr1PTLE90cCJPXNsxD10ht08cejAPVYMk73wgHO9z/a4vaAwy70rp7G9YW6cPeD/PL16ZFg9
                      LNDrvPqIGz2B9L097XonvYCAeL0o8Hm8cNhmvV21n734f7w8lNudPKq0wr2kzdk8oCyZvWAZtTsL
                      foM9+cyHPR1Pvj20ft48uPiBPHrWG71wn3m9xtBJPQBriTvTPaY9QBN2PEdnzD3gLoO8fjiJvZQT
                      2zwA4Dy5ZM3lPBNfsT1gDio74s5mPaY+Pz0Ajb25usoNvc2Hc72w5JG7mzG9PbEAsz1UkYa8mihu
                      Pbp+E72avEk9YHhCu7iTxzzAWjy77L+DvKBZSbvbLKA9RwKxPaX5y70SLEo9JpBfPbKVbD1qyDe9
                      8hocPWA9FTtdB7K94POfvVoUWz2JjpQ9APOTO9XZuD0t9oo9E6wfvQAFMrtWZRW9ElefvTOXkr2I
                      Yo+9AOX5u4C+pLrUp9G8cGwOvH3DoT2akmo9EBO4vSylwDwdSHK9Lba8PQkznz2Anbu76eK/PYj8
                      g73BqMM9fWS+vZrHe70jjIE9Xr+AvdMlYr24N9u8kPaEvVJdJT10DbU8uGrDvTCVC7yQExM8qNwE
                      PJPDSL3tPbC9Ol8uvXK+Kz1A8D68rZ8zveLpIj1RAqg9QFduOzDxZr2Irpu8OdmPPaycujx08Au9
                      LQakvc30iD2I/Iu8iBajvT29l72j/Tq947TLvYB877qWoFE9gDTTvDKdoL3AnB+9OvlsPd1kHL39
                      y5a9QK+XOgAFoLnOFG89s97IvSe6kT3o4Rw8gPEwPHIMUT1hDqw9CbKJPeMcwr3ADi07BvErPTZM
                      B72CUzQ9NxuBPQTVhr14jK083d2jPVQzwbzq6UK94s05PeD0M72v2se9VnZWPSD4NL3qWiC9Z1K+
                      vfOkPr3heYY9GJxBPGCCOr2gDFw7NqYDveX4gT1aS669YYPIPbCJ5TvgOGm9LxCvPUAPVbvJ7JA9
                      gERbvfZAkr2Qd5+9/NntPH/Xgz0AlpQ5+l5Nvajqb7xQ7p+9iyCnPV7wID06pqy9ZzOaPfUVub2t
                      pjy9mDYsPLOJij0ma0E9lfSbvQ3Heb0w58u9en2VvZ49MD3dxog9UtVoPdZsVz3ojHq8AFaKPCH1
                      yT0i0gw9ahl3vR7UeT0Ll6s9wIrEuohTrLyAyG69ACbbOu2xq71PDJ89t7hNvXxI1DzoaHW8kPZd
                      vVBRwb2i1WI9zHbKvPZTpb3yxU09pmCAvQNLvb33Biq9AFfkO0rawr0K9Ti9XcCovVBzHLzFya29
                      wrJ9PahWhjySowE9fBPqPNiSrLy1bLi9IOkPvWOzyL0Yx+y8IAzHu4qhEz2hrb49HT6FPQahfz0w
                      7ww8B7rJPRDDWr2Zc4A9S/CFPZhOSjxd9aI9YO5uu5K7BD3QaUm9wE96vFseyD2NiSm9xHjePHcO
                      pj2G/g090befPWGevT3CvEo9gNJjvAOsY72C6DY9wLmxvBW4mr3oFQ88QFx/PCgNtr17nYg94DMG
                      vbakND1nTso9mCZAPI6cdT2KGhK9qFGbvG7hRT0Oij89HTdLvf4xPj0nblu98ciPPZkywj0bnrW9
                      OxzBva0/eL0oE++817hqvQA3IzqAZpc6MMl+vcMey73Zn5o9QQunPfP+fr1QWUu98Yy2PUo/PD2b
                      Z5C9MFVGvJ5tq733gpc9y8S/PdqUED3ykjA9ADPJOZOmrj0tBcM913afPYDZgb24x4U8PF71PADe
                      oDtBEYI9dWeNvVAsVzyuOnE9d1OyvTg5sDxr3Mo9UjBOPeH+lz1g90E7TJCYPJqbpL3g3t28SPK7
                      vD0IK70oDbI8nm9OPbiKrL3tFjK9UGx3vaDUMTsbp6S985yqPTAYiL3TP7K9gDyrPIq2rb2mQio9
                      wO2YvKuEjz3DMKU9oWnKPaD5STs//7k9wXylPXcgUL05sMY96BtbPJhwg7wA1vC5IrpRPYJjAT0t
                      0sW9sGVBvNQHmrxmZBM9zOrmvChYfLxgbR69UA+Lu16fXz1wYFG9wAOIvVBumbs6BVE9d6w0vTaC
                      Pj3nS8u9D5PHPUabKT2nNLo9F2QqvaDfrzvPIZQ9icOcPaOcJL0asQ09LPSRPECkV7sAUKU8LkZA
                      PfMYsz0ee4K92Jt/vLU8ir0Q5Qy8dH2EPONoJL0ADuK8BY21PYD+STroPlE8n8jGPWd5L722Jhk9
                      aPKsvNLdcT3nmcc9iroxPV0KlT0A7Ma9WroxPeY8pr1Tda09R6c+vbNDlr0Ssms98dufPcMtWb29
                      kn29kGJPvLf0LL2AuJK8IF3DO4L+Bj0XqcW9lptVPYLNED0HkzC9ebqHPebgGz1N4j29sp4aPXCH
                      abywqjK9sfe4PeZjQD0TXJk9oIlGOyxchr0rmoY9pmwMPTISsr1gWLo79oAzPQACmrt6ngA9v12A
                      PZoMa70qx0u9Ow3DPWi5cbw41Kw8e4iNvaImZj2h3aI9MriyvZQs8zwV56E9HU55vcih4LxKbxW9
                      MLPGO4D3xDwY1Qq8oM7xu/KOQz16Ry099+A5vSDp97tqyHk9IfqWPe2xRr1g5iw7O4XAvd6QTT1A
                      qrE8cLKYvWMlqz3afYy9kFR3vHhj4LxU+5E8il1ePcCVk73oaEa8ruh4PZgsmDyAQg66AFKAuem+
                      jD1S6DI9MPBkvB6Eir0QFUW9nb3JvTCIn7soioi9t0WNPQgm5LyYvUs8GrV1vciVtL2Ulco8F126
                      PcAxHbuIB7y9GjZHPaDbu7zESAe9pND1PC09k73N7ke93q48PU/Gyr1y2Rk99jdwPeha/7xCxYO9
                      03hJvXAbObyYXho8UROoPSfcnz22y4696CWFvWaZfT3WLjs9dDDAPEMmL73e3GM9xKbsPODNl7vS
                      Rwo98JiSvR17uD1YMrG8r+quPTG4gT1iSoK94YipPVaGeD2zHEW9sFVWPGp8AL3UJuk8owXLPaia
                      l70FyKk9hz2+PZvJsD3AG3i8QL9bu6CiejsA4Ew7M0qLPRBILL2KTD496xCZvfrSSr0QWLC9ewy2
                      PUp4Tz1qNF09GSCpPeYnWj0aOSA94ym4PWVts73iFhw9aLJPvArci72ro7q9PmGHvQD+YDtQQiE8
                      kNspvLCqljsAE188IePFPbrnWr33HsQ9aL0SvJRo3TwLWKs9louKvYVDk72wUWQ86wKnPbz5Cb1k
                      k/E8LBGovB0JQ722wI29Djd0PSOxrL32ZWY91mAPvdZFSj3CZxk960KSPUAJwjqV86e9AHb0ul6Y
                      rL3KDF89k7hJva+dvj2Hy1u9fPTPPAYmBr1qWSu99h1JPWhlpr2w4H69SbaQPcBwW71AM029m92i
                      PUBQu71gnzs7WOjmvNMrwj3qfKK9XTrFPY3qyj0X3G+9TJnrvFAjhb3yz4C9e6aXPXAuRb3KPiG9
                      V7yQPbPza72Qy5W9AWG4Pblmnj3AXhq8qfTFPY4mPD2kFwq9QgQLPZcmqD2Az7W90zafvUlzyz2M
                      Xo88uQa5Peicj7wlC4Y90q5GPYrFNb1Usds88ku4vYstnb1Pary9eI2GPDFHvD2SAsK9MNzSuyim
                      k72DnGS97Om9PBKdIj2HfL09huaqvf74RT1WCQG9ONenvK3Jkr1iBSs9yhiOvRImRD3QO0y9KwrB
                      vXS6Fr2pOsM91DbXPH1LpT1wG7y9qC+wvPC0RzygK8O7MUqtPXQh7jyAxn86UKVGvfraYr0bHqM9
                      zW68PVIMPj0Rqcc9lEPSvLNryD0UgQm9QBxWu+N9Lr0SkEc95mR0PSisMLx1wqc97a1bvROaXr1D
                      GIs9dH67vIAixjwPvIA9B9u1vXgVvLyvacm9YFvRvDr0AT0LsYs99Y6KvbHywT0XHiO9q72gPYNe
                      vL16zLG9ALsCPBZAcj1VDYu9CmLCvSxygLzn5iW9FyUgvWNHSL27Ose9pc6WPaCshzwghOW8/f2a
                      PZhJgbwKgWU9d6gzvRiJXjw3nZs9rrwjPcIopr3WEGs9lUG0PUcfVL3Un8k8/paZvdhesb3PO6I9
                      42BkvW26Tb36C0s9UDx5vaa7JD0Y7028/QS6vYfES70Xaac9w62XPUxVizySQA895UW/vVWls71X
                      TGK9QBAHvX/jwb1gD6A8VAzMvOSs2zzB8ME9VPqTPHZpYD2mMSs90vi0vUAWT73SSVg9ANlaO9eG
                      ZL3H97g9ismUvdhQUDywiVM8uo99PWMikz3AsX27mgQDPTqTJD2oiXW8wDCoukBZ2rqf0a+9ZK/m
                      PB23NL1yMMK9owWvPdBM3Tt6lEW9wvKsvUmshT1BLqM9YT+lPQj6kr0GunQ9itwBveAH2jsNXR69
                      7EGLvQBJozzQU627k1OuverrUD0gtvU7Qup/PWeqPL0g4Oy8xAnVPADQV7zPla89rGfVPNj5aDxY
                      wbC8f7SfPe85pz2wk0W9gJU3vbZNfz0lQau9UibBvU0Osr0aQ1u9EDw9POm1uj0j6a29qE+sPMLX
                      mr2efDk9k5DAvVILFj1AlGE77QewPSIZFD2YnLg8NvscPVh7pL2IYs68Sqt0PZLmMD3gIMq8e6bK
                      vVbSVD22ozI9xvl3Pbh1p73Ay3o8JsijvcoWxb0UOts8MhhoPahvDTwA2Cm4Mt90Pfgzrr2lwpA9
                      psdzPb10ab1SZ8q9/bB+vbS73DzhMYY9x504vUaOjr3dHVO9/Zh1vQv+s72+JzE9wNOAvHKKfD3o
                      pGO8gFE/upixWbzadXc9RgEKvVA1AL2zOIw9KIezvbR5k7xez5G9+BeLvGimCLwBg409inwbvd2R
                      ob2QTjE8o/h3vVGDnz1vgYE95ZK+vR4Em72D2si9omuyvcYyUj0ApVG6ABH2O9iw2ryS+wQ9UeeF
                      PawdkLwoxba8GhmSvQDQfThuKT090qpRPZ8jur0DgrS9KixXvYo0HD2Fr5y9Ej5kPRxwBr1+nW89
                      wiRfPajtwTz93T+9YzxxvRdiYr36rHM9TOKIvJeImD1YXW+8reBPvcvckL36yis9iwrGvUpBPD3p
                      LY89oPDBveL9Cz29KqA9UZeBPdDcab1Jkrk9PXo/vQy21DxRaZM9bOHFPICwrr2oJ288x+jFvSvb
                      oz0Hw0a9JoBwPZTw67ySfgQ9UUq3PUXQsb1VAKm9y7a4vXqCUj3zMBq96LD8vPTfsjyeMUI9ersN
                      vWdHQ71ANpE8fplBPeXnnD1jl8a9aAxxPDBit7sM8eW89e2uPbpIYj0oDcI8kKVJveDRHL3QaZ07
                      SYWSPZpzfL3gvOa8etouPTIBNz1WqTY9oACmPPih1ryAjWq8ZQKNvQP9yL3ZmYU98e6gPZgHoL2q
                      bKi98gZbPZxZ5DzIhOu83S3MPWowND0l7JU94KWNO5IqOD2ABe68Jf6pvbAPIL0MEog84L9+vSiD
                      sb3G2VE9GD4YvFwuh70Ttnu9HyO0vSLFdT0VosK9LdFSvWlmyj1ghb08AKWVua9kxj1ALE29Z/6D
                      PSiOyry9e4A9DC+3vGdwy71UC/Y8z7iUPTtyqD1TC5y9S5S0PcsFlj2Z6Ic9hIj8PNju9Lzob0g8
                      kBYevGL2dz2Raqs9bSR5vWC7ZjtvF8m9j+q/PU6llL1lO8a96AHBvNSxprxgmEq7qEE0PGKJvL1t
                      MrM923PDPaggfDxhIag9sMdBvLVlr71A5eK8oMk7uy40kb0iLDE9jZUfvYiMt7yQQIS92h9hvbZL
                      qr3+iWY9KFE0vNZ7kb37Bbs95BH6PPa8Xz0U8p0809k4vWA4Czu6qx+9WFWuvQI6Lj2MNuQ8gzu1
                      vepZcL2STDs94FiuvQJGWj1GfAI9rbRQveAvLL2oVGs8u7SgPRD2N7xgKBk7+LGTvcKWOT3t1rq9
                      vksTPWpqUr3Dl8g9gkqivRUJiD0Yd+u8rK8EvUt5sj3d5C+9mp5OPWCVyrzNbJC9pMX6POuTk732
                      ET899GaBvbreLT3J6MI9e7jJPeoghr2mSmc9i+jFvTkEnj0oI4M8UqUZPZBNIzyi5kI9TZurPbDO
                      EL2flYQ9ALOSvFntyj3anhi9hbu+vWv1uL0e1Y29AZ7GPUZwOz0HIU69gMqcvNA47zsoFQG843Z9
                      vcy59jy4OYC8UHRxPFS3zzwPnr090+m2PaEUuz0Ot6m96AwLvHh4yzzs8JE8WLu1PKD1qLxgH+o7
                      R6GlPTAgoDvQ8Tc8dpkEPX5KjL20zfs8WNv9vEA7qTqo3Za9ewemPQzFsrx5Bbk9MBqVO0jvjb02
                      Fjw9YhVDPZV7xz13lcc9858yvafwPb1wURC8CtcqvQpkbb3WeV49GOQovCqILb0aE1Y9oNkDu33h
                      vb07NJW9cjEAPYtUoT1VSKO9uv/Ivcx1Cb23n2W9dhENPW1Vvr2j1VG9IG2zO1FBvz2gp8g7HJzt
                      PHycAb0KYw090v45PcWchb2Cxl09s8KIPWrge713lrG9MIgzvCV8nj33GzG91FKOvMVyuz00QRS9
                      /S6BvRj2LTw3ZMK9epc1PQSfE70AUPM5UaCXPUADGrzQshS86A5sPMjWgzz5VJw9sm1pPfBgFbzW
                      4HQ9ygxPPWBzQTtuH3o9quwivWEJxT1YcJC8+jsfPVANTb3XpjK9K7qZPQsdy70A5Zm5YEZCvSWY
                      vT0wRte7dKb6vJwf4Dwt2Hq9Y6GtPXJ6y72QEAg8frskPfnPtT3zLFy9aJkIPGliuD2RMb49o14q
                      vXVBjj2AzJY7Q6GoveApur0wOSo8INgtvSixtLwpKIY9+HPwvI4Zg70AKIa4ykIhvQlIkD1o6wY8
                      83tNvcvOuD0ztTW91gEFPXi2s72Alji6GLKhvIk1yz1vwbW9xqNRPb8ckT2jFTO9iAybvPBJLr2c
                      Z+U8l1/EvZDlpL36JHG9X+qYPRlLoj2tRbk9jaaMvXjguTxz41G9YOvJvWK9RD36uH29sM/ju6K6
                      vb0h77o9uAqyvB9Npz2YKCW8WQyrPTKSLD0SSUU9nbiTvY0gvr3PB8q9FcyFvV/Jxr3dfRq9Cht/
                      vU0ybL1oXn68pHDkPA+HtD14QI28QLgOvY7QVj1avJm9gAv2umc8mT03U5w91sAJPfQp/7yQj0O9
                      fUFavQpByL0Xia29dNOmPMJMaz1AyiK79OfQvNezjj114b49f9uDPcQy5DwP9Zo92B55PPdhwj0S
                      i089Fr46PX/zvb0ruMi9OrVsPZN6pj0QBJe9E2hlvXM3Kr2ge/w7oFylvUc6Xb2jsD29lBLzPLNC
                      xj3uxCU94O7dO+7YPj2ht8w97sGove3Wij3AN1Q8q2S7PVLCi73pu8E9D2eYPbRgwLyCvGI9jEq+
                      PEnYnT3N+1W9ul6TvexI6DxSghk9SuEwvYBQsr1TpDy9gMK/PGMSsz2pGqs9Awk/vTkvgT085Oo8
                      2HXKvCLjxb1m5Eg9x/gdvULmej3+Jx89KfmLPUNxxT3AlPE6IBmiu2Prmr2lZoW92uFLPTQm2Lwb
                      Grg9FwKmPXebij1ekqK9E/S6vbVPqb1mM5G97IqXvABENbtK2hE9gN4dPLAauL0Iq8M8F8wfvY5s
                      Hz0ZSak9wABcvV4NGz2UVpo8ceiIPe2/b718Pe88+EGdvKbDBD3GuxQ9QBy5PL4kAj0JKLU9a0bF
                      PafViz3tT6w9GHzYvHB/fTzTkr+9wChWvCLiUD2YT5y8WGa0PCbpob1d+Xu94+w7vcim5bxQ8Z69
                      oPi6u5gPwb0KoZO9p7axPX3Jar2j4os9ekVnveGOij2XGsW9ReOZPV4rND3B6sU9qqQDvVh+TLxo
                      oGe8dE2pPCkohD1FJIw96Gt6vMqakL0gXsg8XGbTPNAzVzywCZU7mOZ4PGP4yT3oK2G8AI9ouqAd
                      HjsNhCO9kSWnPcjbnTytOJ69K0aLPSrZxr39NkW9vAgTveKhMz0g5j+9M+s6vax5tTyy8UE9KCV3
                      vKocsr29KrE9N9Y+vdC3yzsYw1Y8fgVUPXlWwT3JtKU9/6OvvUzp6TzARha9HXVHvaebdb2ozXA8
                      4xOmvay4njyAi228tAeDPDir6bzweWy8YlAWPUzJojyNeiy9DpmcvYfKoz3j8MQ9tzCvvY0sh72J
                      b5w9mQuUPYfxLL2Noh29H6bDvS5VXT0lcZ49jpFKPSJyCT3aQX09IO1XvZYUYD0SPGs9kxiYvcDq
                      yDy0LLI83RpevUD+cTvMv5Y8qq1GPWBMk73lRYQ92MNHPMbNBz33Fq69dsIUvRp5er3ukD49bEyh
                      vEdHV73YD/y8GvIRPUAweLwANMu7Of+zPQBGibwsR+y8KKmYvRWHvL0S0Xc9LrOsvYwDo7yuLYG9
                      O/qBPWYxZD2xprY9r2LKvcMOUL0Q6xe8AcuFPWLtbD0APq+5+cekPTWpqj2aiwk9aKo0PIARyLra
                      +r29T7mwPVlkiz0Raoo9wzubPeLrcD3iWRo9i9mrPYppeD2dbKO9XQhYvb2tVr1KZYu9aJmbvS14
                      Yb3aYMG91P2KPNyHg70q3289E1VIvRJFWT2AB5M6MQ++PQmchT2I3Ia9JlVPPZjcVrwYmaa8QM4P
                      vB+4vT1lQLM9BQm/vVZsDD2Q9X+8r/y5vU7lqb2aSHQ92GbTvDpUC73s6ag8Wv8uvZbKez22wWo9
                      eH+lPHh+r7xE1QK93YKAvfrXt71baps9+q8iPeccf70YPce8umVAvcB6wrrdppK9Ohp4vczNwjwS
                      JxA9AAscvCgGr7x94Mi9mnd3PQga9rxc1Q29AzfBvSoQAT0xfb49CxnDPWAbfTs1c5m9ZLjtPCL1
                      Hj1TeSy97QkmvSKCfT3nAr09l/B9vSnmpj2r3p+9X1e7veGMnD0D5Tu91JPrvCChqLvIFYs82Q2I
                      PZJ7QD04/ey8UgYyPcAlvLyZGLg9F39fvSCsqTzpnMg912LDvTU/oz0Ax2G6OjkTPfJQcT3mQRo9
                      cD5vvA1Fwj3zcY29cth5PbrwTz3n3cK9UpkcPeY8PT22cWg9IPZ2vTAED7yAPxW9doIePdLQZz25
                      4oY9yggtPYhvv7zz9aC90Ru/PTD0zjugWJK82DHTvDDOMTyRKrM97CbUPH2eV73pbqs9R66ZPWD8
                      dTtJirk9gwi/PcevLb0g7Kg7oIGevYyjwbwgR4y7EwizPTz6Dr1BcJY9WD6CvOhpYrwA0h297NOh
                      vC6RKz1Hd6I9wBpjvWGprz0dEVC9gJKbOwsfiz1Ed+489Zi5vQbSID03u8e9jKemPLP7wD3sHIc8
                      ohl7PaWPl73ga428e/WSvWLJWz38/gO91yNkvVSrF71tl5C9IYmxPZ6aXT0t00O9IG5NvWQnEL2g
                      MsW7Kb3KPUwKs7xr4qa9+CHEPFDUhrs/YMq9DQMzvX1eur1H31e97oV+PfyOGL2dyxq96Ma4PGDF
                      oDulLok9olFtPcwvujwMH6w8KCqVvFQDF73rAcS9i0COvbomVb2XGLE9MOPau9Z/Pj2qZno9Gscy
                      veQ94Dz/K6I9TCPQPAAIrzxyYAI9ICBNvUDWRjxDJos9EXCcPXwP3DwONmM90shmPeIklL3MYNC8
                      2IOqvTVnt70tVpS90QeFPVgDw70Ip8c8fFLUPFrPor2YWgm8KtV8vcAALDzWXE09jPe8vGBryLug
                      2YI7Mdq2PZC2FjwwS3u9Q5vAPY3Pu702Mh89qLjivM17iz3O5X493jk5PWcgmj2xPrE9jvSnvSwi
                      0zy3z2e9OKDAPDFWiD3RHpA9WmJlvQByarxMce28DKS3vA/Plz3z0Vu9DMkAvca3TD2AkoO7t8Rg
                      vUNFkr2rZ4498IoIvNhqQDxIA769TEbSPPq0R72tXZE9NZKiPUIuID1Fw6Q9f8HFvQ9BtL2ll5I9
                      yOGzvRCZCr2j+C29fyGkPcDusbxAl1M8VaeMvaspyT0cC+48gMHSumire7y4NsW94+CZPYqINL3j
                      Eag95+OwPQKyNj1J0oU9UDAzvfgYtzywc9w7RDDiPMulsL0KPwU9GEEDPEmvuD2zrb29mv9xPQo2
                      w71sp8U8c1I3vQi0gb1sb/o8cJNdvWArGb0H9069Ja+IvWm+jT2MqtM80K5IvFefqT1uBEU9a0ak
                      PX2Cpj31wby9NjVCPQPexj0nlTS96IkgPLBXkrswNCK9I/zAPV0oNr2ucno9TuVVPXAOazwQ6WY8
                      glonPTfZJL3YTFC84D2IPLKeIT1CGTE9WMtjvLhewL20t/y8o3JkvXApdzzocXa8m4qcPdhSkjyA
                      cZ+88NwDvBBzIbxsG6I8+oNAvRsctr0g0wm9FCOEvMTT0jyQW1G88HpSvV18uL29SWe9uAWevOAO
                      krvn6Jg9/IXWPC2Qlr0inn89zIfJPBI6MD2a6m09fcImvYAnwbu63XE9YKJgu+rgNj0M/Pc8SXe7
                      PZI+Bj2CYUI97aVhvfDaGr3IkKa9MrBSPUL6j72trYk94IvdO0bXDb3oONO8OipnvXdAQL0i+ho9
                      CCq5PBpsoL2Sgyg9OoKCvSTh/jwASic5qjsavcJ1WD39ZIa9EmIxPdIxDj2yG309gO9mvVBlR7yK
                      Dh89I52bPZ2hOr14+pm9OoHBvdyM8TxQrMw7UjIZPT71hb3Iqda8wSiuPdNZsj3IN4C9W3q3PYNl
                      uj0QI0s8IzWgPVqsvL15KcQ9aL1PPPvbwL1N7mW9EhcXPcgLtr3Kgg09Qj95PcCDwL1AXQi7G7m8
                      Pb5rIz10i+u8nuOTvQGwtD3QO6G9d4eOPVDCM73iHBY9sVqKPRAetL1ioAk9R/2tPQxP+LweoSc9
                      VuAuPcYNlr2cGOY8sDwovcAz1LwsbA29n7nBvd8cr71TG2q9OrEWvQLyKT2MrZK8ulhHvTKeVD1S
                      lhY9DXaIPQAlPTvQ75e7OTiiPXtxwD3UM988qBuJvOAWy7shNbE9quCdvZ6oiL2wQLu7sKyEu8CA
                      Obv3Zm699j+NvQBBa7vmUUc9jC/zvFa4BD2kedc88qUoPdq9pb22YI69EE8VvRCRObwUpMS8UKhC
                      vQCdmTncSIi9qkAOPQ+Vu716BSq9QEipPOdyaL3s8Ny80MhyvFoyfj0QxAo8bLCDPJaZPj3GPzk9
                      25+4PdF4uT2t/8K9Nc+XvdDTtLugPl07yj8TvaDMmTsqCoq9pUPFPXHDpj29QoO9tEf+vM3mK735
                      JL89x6mPPXiw2bzgW5K7Bd+XPfGqpT2xkrc98+2BPSJrNj0q8FY96FycPFqTOL3w6GW9miJ5PYeS
                      Ob1IHea8SfC5PVgLOTyH2229QzSqvcBanrqkEtk8W5mZvZCRbbzNtnm96LkzPOBx5LxqtSc9IDWC
                      u5AQGjzmKiQ9wskQPeo1O71uIh49ihKRvUmEvT0Qtqe9eRGRPSymzTw3I6A9kDd0vHb2m73ovGq8
                      QFAOvVT5+DzUE4i8KNEsPMDMtrxbzsA9b/XIPYK0Cj0ANvO8YSS4PQChrDyEnPI8DEKdPO0Rhb1A
                      dje8uh5pPQ46Hz1L64M9zAkEvYBUOr2zqRu90Cykva1KJb1YaAc8mZHFPUTGib2Roqo98HJYvJVo
                      uL2otSM8Wsm9vdGryD2KCYa9wJ+ivF72OD1AXa+9wJFNu4w6iL1akTI9eLWbPMAdkjwI0/O8slZG
                      PXBwe7zASlQ7v1i3vY0TS73DuGi9qpoBPQZAFL1a1Ce9yiYwPQxen7wh08E9sDbAO4KYPD3gvs+7
                      LzqzvVFhuT0Pabs98W2NPfwTC700QMa82kACvcw4hjyoC6y9mW6KPUBOf71GPEQ9UynIvQ4uo73g
                      L4+899q0vWSP4zzgT+W8VZCoPbCRT71nhG+9bZY4vV2sP71YxWe8UNh2vKOCnb1CH0g9h0WMPZTs
                      wTza70M90NW6u73WuT1w/Vk8OpNjPThevL2g4ua8aHPUvHy02zxyaCI9PryZvYByhLugNHG9AQnE
                      PWA0Xb2WSRk9vlsSPQAcvjvByJk9rDHYPBchtr3aw3K94HQ1vSKhub3QwGG9GAAxvNBiW7ydQGC9
                      Y/OcPQC1rLusHOW8ubi5PYzBFr1Am1C7eb2CPbf5yT0ezaO92DYRPNCQmL2IIsO8YC5lO5ium7xF
                      84w9WHI7PCDPizuqk2G9iuNoPfMecL00Ev08GPXIvdZ/QT1UEK88hSCVvaC0q7tQny29XSaNvaR7
                      Ar2ATQU62zq7PchU6bzgDba91OoJvTfKR70QFyg8/RW1PZISt71TQ1y9G8zGvf2VNL3kjQe92L4R
                      vM0MqL24Q/+8gAjLOzTE37yxso49vFcAvSEpuT3yVis9dkqrvTH0mD102ZA8JqFMPfDiiL3N8sQ9
                      Z/gfvXhkl71gNdk7GCs4vEDrxjo8uNM8LEnaPEChEzzFmsW9SCuoPDpofz3jjoQ9mwXFvfKgDD1o
                      iAi85uxHPQIJYT1mSQ+9eca5PYMLfb1v18e91GyovLq0V71dHTG9SgMwvXGvjD1B+oA9wY+VPa3E
                      vb0A9qc6mrUKvbK1WD2O46G98+XGPTLKrL0enZ+9oOsSvdAfIr2mdA69cTC0PYfMsD0U9II8bn+P
                      vaXfyb143vy8RYm/PeLkJD0ohi48iDD2vIe8H707Bqe9EjQxPTRHgr31bq+9dnAhPaj/ODywgjA8
                      ALc6O3APML3KXXQ9fBLUPEyEnbwgpvW8hvUMvVqLAz0q8VQ9aFRtPA28bb3df5S9IFqNPNB6obsQ
                      xF+9ASq7PdOTQr0icZm9wFQFvcB+X7udkR29omNVPXNXWL36Vx29oHODvTHKkz3FHoe92vgXPcD1
                      KLvd8a29hP76PIATTb39AoQ9Z6xkvVUqsD2RdYE9666VPePKkr0G1mc9iE2OvdEooz39Lss9Na2Y
                      PaDlYb14HbW9ApZ5PfBMDjxSC729WaGLPTV0i730RYu9vc2QvaO0tb0wrZc7yCivPJSHurzozK29
                      CRzBPYfRjD3AtQu7vmKIvXDJZ7xw7xM8m0GuPdAbbb2ohGs8QhkaPfkMjD1q8SU96eSmPSwim7wn
                      Iyy98Ze6PdiSszw787A946iwPbqaST1Iseq8sktMPazFyTxXpXe9GCVVPEBQJbwXeJ89HDziPGGu
                      vj1qkoq9gO4nOuIlbT3AFug6emVGPaJQOD2wwiS91BkAvbRq4zzabFe9KgASPbRPvLzmpXE91tkP
                      PZiyrr25ScQ9JMIYvQWnlD2Rs7s9t6odvabsHD0U9fa8VBOhPJWNhD1vDZY9RksMPbkApz2DHMo9
                      HLKKvegMJjyguZC7xreevaJnRz0nlG+9VO2Bvew5+jwDClm9gNyvvSxVqDwdlrq9tHGZvOqeUz0L
                      Oqa96C6GvEDgOzxaMgq9EkIqPTeDyz1hrpA9urstvWBkQb20XdM8wI++PF09Or0Tl6+9oPPovLvd
                      uj2+u6a9wOADO2gKw70ARPQ7bDeUPJcGvr0jepA9rQyHPdQ/rrwSuzY9IDGzO/qaWD2dGye9gPJJ
                      vPeBuj00rN68+9+EPVMpp70AiJs6qvoePTeGkj3PpsI9oFnUO6reC735tbo9ar41PbepMr2b47Y9
                      0+xJvT2Rjz2SEQc97Wd1vQDrbrpBQMo92UaPPSa4pr0aTWI9mqYlvXVSuj0rO729qnpvPQJ2aT25
                      fak93Zy2PRJkFz3KXVG9e4SdvWnsrT1gC6S9JQS9vS60dj2DXa69MQGWPR/yuT1hG589V0S0vewg
                      p7yi1VI9Gi0zPXXHmb3cyug8ip0RvRmcoj0AW5Y7QJpEvOCyjruG4KO9Qk1aPSavqr2YuCg8Py6B
                      PVi4nzz31X29kDVKvBgNnbzUBp48NtAJPZuyqj00iMW84rtOPQDd6Tvm4YG988OkPfBzHbxH0IU9
                      ExejPUCIqryDtZe9NroTPaip3LzZIqM9hmZWPaKxMT2GwjI9N44svf7+Fj2Cc0U9Yj4SPTF8sD2q
                      tzO9LzvKPdhZAjxSYWU9L8W5veBY4jvRo5s9UujBvaBBkbx5FaM9kc63Pe6qCj0AtVs7HZVgvbCV
                      1Duo1FW8YVWtPYaUAT34BJo8Qp18Pecie71ohdi8cmYZPe1/tz3pmoc9bBjdvLB8Pb0YLLG8geCP
                      PQgqwb13vFm9UIDLu0Papj2WNVM9/NDMPHdorz3sg4I8XfybvdT6qbwjs2O9BcC3PZ0hnz1NWaS9
                      EWzJPbLoOT2tw8q9wO2TvCUZvj1NiaS9T6WGPXCecTyTssw9wOwoO6rjTD07Wq+9hoFLPfPioj0K
                      jiC9SLrBPM0IU72ByJI9AotFPauWmD1mGEo9gPnPulWFjT3JIaU9RS+IvUpKur0gcaG7XSJBvdgT
                      DTxsLvc83XGIvYvRpz3CLTU9EzE1vSC6Ur16Io29DazFPWCOhDtXID29KVuIPQ7kWD0wGdA7hU67
                      vSbreT09DbC9aTuJPS/0tz07RbO9gJXoOj10tj2ADT+9wuscPdCIqL3g57W7AIQ2vRl9nT2gRGm7
                      qC0VPL2RYL0j4b69KMVRPIDE3zvjFrQ9v9aFPaCe3Ts42fC8KL6RvCwK5jxuZFw9hNGLvUDf/rqi
                      6D0916q5vXNeoD1GNHE9x9d0vQBjZToDX8M9AM8XvHcJJL1a6HC90DemvclLpj0BWpo92oVrvfRh
                      F70ZeL09qrQVvfvJl71Al1a72YupPQ1Mkz0iHo29IDeHO4Aiq7qAnc28KAVRPILMkb3Mdsy8TXKr
                      vZtspD099rm9U0hWvV2gkz0QKb+9ScmHPZEMoz2E8we9/6OhPWnSsD0WmJW9/UHKvVCwj7stFFG9
                      58uwvW65IT2CQca9KCjjvISR1jxuORo96MNhPKyugzz6FzU9EsK9vfGKjz16ySQ9Ak1GPYwRubwo
                      CfG89KnKPPcCPb1YjsS9wSiSPTg83byG3WA9ThlwPZcRJ71jyGS9gDcDvLL8dT2mg2E98m6pveie
                      /bxnx7Q9TQGRvYqWMz1UBNi8wHlyPNPiOL0FxKy95sUPvcCUUL03rzO98DZmvZobZ72oQjg8YGmX
                      PFNZiT2YUJG87GuYPBKtfj0USNQ8f/DFvaZ6Xj2zuY49OkppvXdHqj13yyO99Nu4vNWzyb1UPtg8
                      AxQbvTTRsDyCUcO9pq1BPXY0FD0ARwk6F9VfvYylnbwhs8M9MPZyvZB8FLz6J729lbLKPcCGgL2I
                      ute8tKgWvQADO7sAIOe88cmKPYIvHj26bsu9yT2OPU64ZD3CmQM9gJtovGAXxb3lqLC9UBFTPLVJ
                      jL117sY98dScPQCAQjnGBzw9ovwUPearCD0QpDC9AMj0u0ciV71A6DC9U+00vWAKcL2DxMu9h8xE
                      vUW4xT3AGCu9dOHVvE/smD308rK8iFjNvF5TKD3wGke8x5NrvYoBl70owd28LZRHvZC5A72Imbm8
                      qAoUPLR6l7yOloK94JOVvU3IMb34+sC8lOzZvAIiCD3t9aA9SMiyvFbVFb34poK813C2PR+mxT1o
                      8wW8ak4SPeXyo72qWcu9DrmsvdpZNj1pqJA9WDH/vEGlxD0AoMy8omxMPcW9nL16MEc9t9GSPYCO
                      kroVT7s9YomYvXo6xL1xD7w9KP20vNqxbL1YbpS9VSSBvU2bL72ud0o9Wr9zPbbLm73zgTm9wB7H
                      vehAIrxBz8k9kvuOvYLnBT1opWG84MGYPEDip7xAXo69qNEzPDDoxrtV5rO97VyDPVAtlTvBLrk9
                      LxOmPQzDzbyMwqc848nKvXRd87wSXTo9oLntvACEKro0/ME86FkcvABEu7yGQSk90NyHvYyA4zxw
                      o2q8tTq6vcLfIz0gmPu8r2C7vUKlUT1K/Jm9e+u0PWVRnD1OozQ9AsRHPQB0jbxYSnk88vA0PVSn
                      97xwvGK8f0DDvdBrwTsSxzU9UFxovPCRsr3eTT09BldNPZsLnz39iiq9jSJmvS71Cz1QFMy9AH3d
                      uWjGDrxAPZA8rIKKvGY+az2QgZG9sCZdvVq4Yr1Pt7C9QTCQPc2aQr2yVgw9tNT2PPlnkD2rv629
                      ADAJOOIyOz2GaDY9glRBPZOcGb1CFWU9sx9lvbo+Qb0uaWE9cAxuPMwA6jxUg4e8DOuZPMPwTb3L
                      HpG9CFWqvFJyLj3CQGw9cCB1vWY/dz3+2Y296GZOPICWoLvYYeu87JUTvRx+2TzsEri8AEAgO4vi
                      kz1aRSC9L7nFvZM/yz1njLQ985xTvT/2xT2g94Y8oEzJOzDCiztn+Mu93cmIvdO7H70AzkI8rzG8
                      vXrRV71zf3O9GFcRvCUBvz1XJMU9KbCrPahIxzydIbs92WyHPWIrAj32YBa9SFDMvcrPk73wqws8
                      jqVCPRpVaL0gL6g7JuV0PVnLvD0g5L28l9StveSE4DyX3cg9MOCfuyV/rD2gc0m995qrPfRXwLyM
                      Z908vjBCPXaTOj2qgSC9ndZFvTwA/jzBu649squAveeHsr0zSWO9gPZTvLCwkzvCUkY9WjAfvaTo
                      +DwWwio9DSglvTV4tz1aQGI9TulkPZhqcDwMNqW8WNVYPCEjyD0YB8k8Q8e6vWhiBjzTUjy9ok6y
                      vVQV1byivlY9iuXHvaDgdr3L97A9eAvMvHFRyD395jW9egIEPYiQoDwQkXu857tdvXRJuTzQ1Eu9
                      gEDGOswn3zzMwdO8WtkqPReJR71m7xO94lxUPUiSz7wQkT88LQaTvUwo7jzI0769YL3cvBd+R71W
                      Tqe9YJOivLRPyzymyiY9+bnLPWblDD1QrAg8AsXDvaDv77xTPlq9cKUnvbClXDwMKYE8gHEHPLGC
                      rD0AqAa4qphave3dfL2qdGe9gB0mvABapjtAq5o6DqtlPTbBPz0AItQ7yBqKPOYHhr063TK9V+Sh
                      PRBDWL1Hz4g9E1++PW9mtj3D43q9w+akvZiUqrxFmce9yfnLPUBLWbv8Jvc87EftvO9MsL2NK3S9
                      0mxrPSzUizyVA5u9Kf6KPRr8D72i7g892iUAPdqpYD2NIzq9908qvTA7gr0Avbo8xRarPa31f70I
                      kqg82DuxvRQWpTz+SXI94mAhPdnUwj0NjbK9jGcWvdCsB7zu2I+9kv1CPdiKBTzjwp89iPf5vP1z
                      TL1NJMG9gGNMPMDLXjwbEpK9ImYAPcHPmD3ydAg9LG77vLkCmD1GNJy9XzqvPYB77rtju7U9Ey45
                      veMFf71tm5I9OPmdvHo3g70tf1K9HPoSvRifB7z0W/k88xQnvSx62LwF74o94I6jO5NrQ72iXEI9
                      AL+SPIB/djyw/p07cKcLvNCT37sA85M5m9W+vQMNMr34h+y8nvd8Pfofy73ThZi9VuwmPfRt7rwt
                      gK49FaDKvb+atz0+KZ+9GamYPWDHRL3sys08NJfWPKCY5juQDlS8KNIcPJYXVT0NpIK9jPqZPCyD
                      1jzA4bE8quUqvf7iGz2YNYQ8FDOqPCn/jz36njA9yrgvPQ3PWr0iKCM9NJzlPJjkZzyqJS69sAN5
                      vKiWEzxsJ/+8uIynPH5gp70e21g96P0mvEYAHD0A/FO8phKYvZ2Kgb39eDi9gvyfvfo+fr1EQfw8
                      kOYZPNh0k7xQZAQ8ul6DveGKkD2RlrQ9kg1yPWDKc72Olkg9AnqFvR3Jnr0ybjY9eozJvW2dxr0a
                      mwI9SkFvPfZYCr0KMxg9+AvAPLrnX72Tt6U9QD3BPIKdeT2EI4G9b161vZGOuj3QAva7FqcLvSDO
                      tzy6OWu91p5sPeHTlT3w8VO8wGE7uyhnI7ywI0O98KoaPBSOwDznciq95C7YPJLzND1I5Jq9hdqY
                      vaCaQ70mBZG9umu2vehxVryyzwg9rlkZPQqBLD3+cay9NW2avc4IFT2uWKu9sHFGvemsoD0AiMa9
                      BpEhPUJ3aD238mK93jEnPRg9b7zMDNK8CJmRvJvIjb2IGLG9uy2VvZLbZj2/3rU9tNuJPHyxDb2S
                      W4m9QJXbusBkRbvJh6U9NCHDPMBTxL1ImsO9apoAPatcyT1AaAa8bJPGPK1euT0XyL49EPWgvYMX
                      tr02Xxm9WJwWPM1Dkz0lc6c9olAnPVdMRr0rj409gJEOuprov70gaae9CBbFvPq8J70VvpI9KGzF
                      vANkmz35q6E9zI2fvKpkfT0jF1e96/fGPYCH/rsmsoO9QngEPR9Nrr1AJbu88DN/vdRgq7xRzsE9
                      7Qe3PYjeyjwsdoC8qvBEvaH+hz2FjI89OOLAvTD8lbs6TUm9gHFOuoJeLz3TsMi9z2zJPRa/MD0o
                      mWY85vynvc0XNb1olRs8sICDvV07nj1Ty5q9EGJtve1DiT3CrLi9Dm1tPcAlDTw587w9Z0C0vSNA
                      Ub1AWfI6kxO+PRpEt70Feoq9VAyfPKw8B70w0UE8trVnPTxy5Tz5zq89Yma2veURtb2+ch89xgAL
                      vcBSgroNEii9gNK/uqZAo70Saic90DMWPLRhojxTuXK9exzIvdYAob3QNAk8UIjRuz2xhD26Pl29
                      nX+BvXQqqLxIwLY8AJD8OQa/RD1wj8m91xXDPaAzgzz48Ji8g8iXPQ7xq706zgk98j9MPf3xZr2d
                      7am90xayvexrmTzFKJI9JpUEPah4SDxY7So8miOjvYetIr0QIyM8bTGmPfXpob2qp369Hv96PYBz
                      h7qgAmM7wKBZvQSz3zz2jkQ9hzahPbFOqT3Me6O8iayhPcgvw7yoQxm8o2KEPcqskr2HGiC97FTS
                      PCJHub3CnLu9gMS6u9kvgD1tUFu9OwiWPYn1tz0AQr+5nZmHPfKRsL3QKOk7fdeYPdAOeDzCGRI9
                      fmuYvR4lHT0le5I9wvt9PZcLvb07xLc9UMSRvQ+lqj0biaC9SE6LvAy8gjwAB3Q8EBgAvUBJB71r
                      LpS9NP6QvO/2wz13jm+9Ys7IvXDKFL1Jv4c9U991vYtgzD1RdZ09UjE/PUg1hL3oNh08ykG4vWoy
                      lb3OyCw9SLvgvPG3ij0hLrk94HHWO3R7xTym1Qg9x5SxvWOSN72HBF+9pq8CvSQ90Dz1Uq+9hY+/
                      Pee6xz0+UpW9zhk1PQDyqr16Y1a9Qyxuvf3avL2wbzi9pm4JvWD/YbuydyQ99GybvHCqD719P6Q9
                      uQCnPQH0gz0wqpu9wCqcujlXhT3dn5O9AEoFPJ6fHj3YcMy9pPQPvX2liz0Fd4e94vCZvQAJWTzk
                      kQO91b2gvRiAyrz+1k89EkKkvWUfjr283Nc8veK3vTNyqz0zOLM94G+ku6aXVT3wtAM8I8GqveMh
                      Zb2wLWq9EJNVPNjz97xsqcI82hYyPR4Klb0e9aq9RxYqvevjuT2zNEa9kNBZvMVwsj2iYTs9Q+M/
                      vfW6qL20U6I8FK/XPMBsSbtM1Ne8WOGAvKWVhr0UQ7u8VpU4PSGMrj1g1DS7WISLPODFkjxZSKc9
                      ck5MPUqKvr2g92G9taWvvW6eUT3hu5c95qUrPVcELr2Ao5w82pdevRjOijzyGiY96vxXva6lmb0V
                      u529QCU8u4CupjxkW+s8JcSGPQ5Gp70S03U9lW2mvVXSmz1ysQ09t8WqPYJjDj0Q7km9SPXEvYAB
                      Qrpq+yY98jZ2PVj94bz164m9ALChuVhGiTx25lM98LplPMCc5ry912i9QNHFvbDUjTvF2Ka9k8JD
                      vep0BD0SwsW9QC8LvTZPh71AeHe7C2nCPTj4/bzIe4S8NvZcPfyIBL2ACtG62hgBvehyuDzyXjQ9
                      aLxhPPGGrz2X0Dq9OlMBvamRqz3xnI09R+CVPcD8qL0Um8U8C/mZPcpQKT3Zip49dqubvaCttjwA
                      TXW8ZX6WPdSml7z/g4Q9+s4CPT/dmT17kpu9sJvyu0C7gjwS9AY9lBW/PKDB4DtKC3G9qLmIPOHD
                      lj1qCkG9aItLvNIHYj0hDsk9aq5jPSB6kLuK0Rm9siNVPZL+AD3oJQA8AAaOPJYNDL2oYeu82NjQ
                      vEdDrj3hVo890DKevQ77KT207ts8d4emPbDFybvYHqs8+wvBPfB+M71HIq+95MQTvU1KP73weku8
                      xgM0PXvNwz2DZCm9P8GVPdBGiLtYLcs8vi0LPSifyTxXKLm97UOkvUgQjrySOHw9YaCFPQZ/aT2C
                      GnA991+JPRSvn7z5iZk94FaIu9G2ij0yBHQ9cDYxvGElpD3RSak9QF8GvAgGjr2PlLK9IKmpvBQ8
                      lbwaSyU9iDiRPLDDZjybpa49Y0PAvXhrj71Atag6xhgEPUVZgb0b/5E9AMRLOQdxPb1nllW9HS5s
                      vZaYXT3S24e9YCdcOwCmwjrPasO9UlhxPdWYrz16vUq9YPOOO6h8BzyIrLu8Y8ySPRmNpj39Rzq9
                      QONEvADrxLyZpIg9DlhCPcooe72M85I8tmqevbvPqb0nLHK9wIzTOsQei70N2L+9bY7FPYAd/zr6
                      /qq96DaTPAdQiT3wWsG9U2S3vYdypT1QnF29o9cavUIWdj1pNMc9n9vKPfBMs70ywHI902NavVMX
                      Or00era8k3eyPW3wQr21kZQ9AG3pvAz547zItMA8aAbrvGMrPL1TQp29ADcwu4vJqL2QCEA80FYr
                      vABkMzpUgha9snhFPUl5jT2w+G086dnCPbDL7LvX7KU9AFinOZi7QDxF3sI9ijQdPeiM3LyTeyu9
                      uVGmPRIIVT3gLq48AO4VuwvYj72rmcm9cdiyPYtryL1qnpq92Eu2vRj2tTxdlTK90HSqOyHbjz0a
                      hGa9CceOPfNenz02TTc9mxWhPQqoRT1R+aM90GJ5vF8thD1AjYY6wCF6vRg2qzzN/lK99YKlPZvK
                      yz3QcaS9Ag51PTBlaTwZEb89eYORPfJZeT3hsa89XiEdPeJMDD1j+GK9MPZ0vRIoRz3vE6w9DeTD
                      vfdVIb3QMkU8UNVDPGrFLz0wnJG7MMIhvZEwmj2j0a096LuwvY1xTL09IWy9VV2KvZhty7wAM3q8
                      UDjru5r5Hb1R0pc9dsqFvTVJmj0aGVA9ABxuOTobor39BK09Myp5vT9cwj3QTrC7d9qMPYP0p70C
                      GSI92eWXPcjrtr15k6498AdxvDAsAzyogS68qEuIveClnb0Ag7Q78CdWPOmFnD3MJdq8whtxPd4s
                      FD2sBaS8NbKTPdA6P73AqCs8UpuDvTLTIT1QEeI717apPZP2dr3zdKW9sv8aPdC7N7xg1Xe9I8ko
                      vXT9vTxfGYY9WuMCPVDewb39q7A98JkmvN1UjD3ifFQ9R2+8Pdayh70ciQa9l3ocvejot7xgV167
                      1DYVvTByGDwzu5A9DqgnPR87uT3nqTm9oHCCOz6bSD1wXEu8MLgMvCKxFz0lcYM9YgjGvfVZoD0f
                      t8M9sKmOu7vym73lY8c9vuI0PZicyTx20mI9UktCPaQtDr33BUC9TjIkPTe/vD2A9sI7QHCOvGr6
                      dD1+Hpy9yn90vdANgL3t1VW97ND9vAAEZDliXVw9spFEPdCCcbzQQCy8/bO2PVMxKL2e2py9CG+O
                      vFRmurzx5YQ9HdF8vSv3hD1BuIs939GfPbZkob2YZqc86MBdvEBJujxmRBw9t40avQCgpDpKVl+9
                      RXWuvStxvr1QgZk7iHWTPOk8hD3CmBA9sb6pPVL4tr2fX7q9Zo6UvYy0lTwQyDG9/bXCvRMheb1G
                      RBk9wKs7vMwk0bzH2p09rrMSPZYwjb1UFei8x2C7veKIQT2A6ew7P0uoPQLteD2HiLs9fvKkvUBF
                      BzzOOWw9w6CevaBS3rsZj4Y9FbmGvZpIZD3X0y29WGOmPKYdlr3KUEc9pRa0PWBU2bzZg4c9md2t
                      PW/XsT3F7Ie9IaW9PS3trT03abq9oLXlvABg0bwwMjE83cKyvSbkCr0oCxQ8/E+GvZJ8ED2Kxye9
                      4vTBvaKjcT0AhU08empJvQVhwD1623G91InUvK47fD1mBQc989uwvX6xDj0W+Ag9bnKsvWB9kLwA
                      G0i6IbmqPeHewz18qNA8xcSJvez0+7w4oYw8LMgSvSCdnLsGdUk9rniZvTA4vbtbZLu9rX14vVra
                      Gj0u7hI9h4CtPRJ0TT3g9VC9vYcuvb0UzL1K90Y9KWGjPQNouL2L0Ig9H+/IvVk1iT1ImYY87jcx
                      PehnczzqU2W9cLsHvRbRZj2KIwC968zGPfDWNbzq+EW9dGHfPN72QD2aVSw9KLypvWPpYL2tUak9
                      NsVnPVXzhb2UfN+8dB3rvID4lLrna5A9bHjXPEDoyL2AAkG6bF2CvP/rlT2o87697hkzPYVJiz0T
                      q6m9Aq2+vWBj7ruqxH29tu0AvZl6yj0Ca0c9JAjwPPXSrT0YqK48KJtPPAMqnL3y+DU9YA2/vQMC
                      VL2ogca96FhHPCBVqzugHAU7aNwxPOi6rL0CAFo9apwfPWzpwrx0M6w8wKwvveIOqr0j98M9gDpj
                      PFOCJr3XiTe94MKJPHrqKb1xv489bceLPYDbJb1ePy09IAjBvX+Ikj3A0AW8OJCLvfPEGr3QGzk8
                      di8OvU0fj72gS6g7BHDcPB8Xxz3uMpG9irYKPXA4iL09VoM9M4E2vUB5M7tinQk9FTGRPaLwXD1Q
                      kQw8UJlPvaD2oL0nInq9Qgw4PVOter3Ywgm82qQ5PadLUL2b0rE9LfKUvUCHWb0jdX69vvhaPQSH
                      5Tx/M5A9U96/vZolZ71QU627Uq0dPSLaWT3Q4aq7QGcKPEDxOzxeeAE9FA6oPGYpiL1sA5S80EP7
                      O0S71jwb5au9gASivQmNxz1gFlQ7AH+5PL7bp71jVDm9gOI9OgDQczqkGge97l8OPcTC+TymDFM9
                      xLTXPG3ZVr1RWaU9nU2SvZU5kr0AyOI5J6IovSAy1budq4e9zezIvYiGwry6Nba9dhmVvSMJUb1A
                      h4+6k6N3vcNygD1f94s9w8zCPQCSubulFbc9QBPHvQ19pD2W0hA9mIyMvHvXsr06NgU9sjCwveq+
                      Jb0F8rO9rFAMvdAwwTtYs6O9+dyVPQlhij3yjzo96pQ+PSC51zsNPVK9YEXdvPSWBb1AE4269mVN
                      PTZgET326Ya9lHTfvEion7xQt7A76U7BPRhqyTwqBce99embPVCpwjvxP6M9qAT8vIPdQb2w+Ci8
                      +f+/PTiZ87zKmmA9sLgrvYmWxj25j4Y9TGrGvCkzsz2Wc6K9kq8NPQGLyT3X7Io9ADYXuflRjz3/
                      na+9h9uhPYPrVL1U9fK8GAOCvF5noL1KMcG9ggZsPUiYgTw6UFm9sNQTvYBcAbwAGBk44xHCPXPA
                      fL3jnFm9kc+5PVA3R71axIm9VEWIvEjj9Lx6ACA9QMY4PNfMpT0EHPI8Sr9hPUwfnDzA2os8ndRF
                      vUiCzrwA4Og3yAbMvPKItr1IF6m8Y40dvYc0sj1nmLG9aPMCPLffUb1UixS9AHgBOmmEtz0SQDw9
                      e0a4PQCDMDuQniU8wtYqPYtNtj1k9BC9QKiovK7MaD1CGZ29GNIWPGR9h71+EZe99CeAvL02L72a
                      clC9s3BKvVYCDL2AeV88HET4PEOGSb16p1c9V5dcvaXjgT1z3Sm9AcOoPThg9bxQOky9sKtrPEwD
                      tzzIqaW8AlEiPV6VVj0t7SS92fq6PWkFoj2ZpL49dmgkPbl6kT3Gth89isp+vf4ShL16VW89Zycn
                      vbWEqL0vacm9YoNiPXS1zDygxtu8qW+9PX12Sb3jEkq9rj+OvaDvHb201ZW8hVa1PWG1nD3gxf+8
                      fSyyvSJ6v70chdc8cFmZvWYdNz27pYA9IlUxPcTZzzxK7m49yX20PfJrPz36yCo9EmsePcCtG7uQ
                      lQm9RtB5Pd07Yr0o2wu8oDF8O4jVo70AtjC8cqwoPQCQRDmFcZi9MZ/MPQ7dGT2J7Ys9eS64PYud
                      uz3uuHw9YMdkO7iqzL0DQie96bitPWAYkTtjc7s9YDcjO0d2TL04bL88IAT+vHA4XDxAvOC8Z4eS
                      PWNPr704It681MrtPOpDyL2DHLa9i3SRvX5/g73tmGK9giJUPe+yuD1dhGW9E2OkPebxQT1DOra9
                      aFejvSybnryoCde8UmEzPfvgvb0jtV69AED+vMDlFjvfGKs9LH2JvKIXnr0gY8I7Ob6hPc1axz3s
                      tqG8YF2aPDohWT1QTvg76zfIPXV3p73gtLs85WrAPXF1uj2Odjk96CaVPNAhi73THZO9ZamGvUHM
                      mj0F/Jo9bS+AvRiXMTyAl8k8HvwhPQRIEr3aa329gL5GurrHOz3nnB+9ZxhCvVFYnj2K/4i9TEau
                      vAYDFz14Vba9TBIDvZR0/rzinDM9qvYZPfWCjr2msBK9jIPCPAAHHDoZ38M9YFWYO5girr0wtl28
                      HAnwPDL1HD0Aykg5FaedvaZvq73PNqg9AJsUO3YOZD22nmM9DZ1gvdIEHD3Q2Vu9aYvLPcfIer0L
                      kMy9JpZEPRInCz1SMHQ9sNkSvBodc716k189JVWCPYceR73Tlso9jB/lvLAcSjwgeY67m/OMPVDU
                      frzgA8e98bekPWAMwr2KAjA9DsWMvRg2bbyALcw6YBICu4PQvD2u2xM9h/0evaonXr1+SWk94CJN
                      vdOfjz2hqMA9cnlCPWm2kz0AXC483dyBPQMvjT0AII67Kvk9PWepPb1qtGY92eC5PdOVqr2X82q9
                      KHWwPG7DND3dyqi9DG6pPBKZLj0AkAC7AhsePYYrDz3IYaW8qPHqvKZzZz0IdtW8oFKJu6D5f7ta
                      ELm9UPQ/vPjNubydYkC98C4ivY63BD1njjq9Yjx7PXp9tb3rGss9AOL7u2iQbDwE5NU8sCEZPC4Y
                      dz3IbJk86xPLvRj7O7zpk7o9ntwAPcqwAb32XZ29fY5AvdddKb0UPY08qJ5MvCrbYT0I6ai94owU
                      PcCZ07zKLWI9FbCMvZaYWj37aak9FLXePNi5NzwH1VG9zyK3vYasjr2d0bU9ZMPUPDjnxb2FAaI9
                      4Gr+vMTy/jytxjK9sOx2vGjnKTy3E3W9qEAGPMxXoLy02ow8xpBaPTOrvz2AIZ+9QLCNPFisRTzC
                      iT89M32lPayKzbwYxkC8rb2zPaDbODv4fp68Pr+rvffxK72wGcu9Ap0pPWn4oz365wG9QHgHPANI
                      yz2odk884CP5uy0qo71t+6W9W4i3vYDWpDy+nAI9ffi5vdR0pDx0MfO89BGKvdK0Kz0wTIg7DNy6
                      POCUi7wzYHW96by8Pc1Pub3A1zy8kp6lve1qrT1FbZM9iKOuvI7sfT1d+Li9cv5vPdoWYT2Ts6Q9
                      2E03PD5Ti70GZIS9iZOXPYPLlL2YAhy8EDw1vB0ny70FNZC90/ArvRQHjL2SMlE9bDqnvCjAV7yx
                      X6Y9IB6nu7TWgbwAnhc7iPmxvJturj3KZAw98k5QPbw2g71nLR69dpBVPbGEnz14dsq9zRSAvV2P
                      qz3a0FM9POEHvWpHTL1w6H+8z8G9PX+Qyb2RLps9AQmuPTRFpLyAWM28FUKyPX4yBj1s6/G8NrkR
                      vSORrb29FF+9WDBYvOyDBr2+VBc9hbqhvVwX5Dxw4Xi8oPTsuxojcj3j3GW9+tEWPZILKj1oMY08
                      01XIvbKksL3gXC29bDjzPHBVW71F6aa9TY6SvSpbOb00Vt48KquVvW01Zb1tKcY9lP/cvMcYPb0K
                      zGE98N1zPPCiH71kggm9ZlUsPWAGGb1i+WM9gOXfvLe0mj3g67q9el3BvSBR7ztKs1i9vVmXPajR
                      FzwyHns9pO4VvZTbCr1JxpI91iOYveDhy7xWyg890DBjPKpFL72BYZM9QgCZvRHQnj1SwDI9ivwc
                      vUABKDx09JC8zXy9vSFCwj1RL6w9J0FzvZiXs7yzmky9DWGMvUWujz2AFLw7kFMCPIBjRrx5kqU9
                      rPPcvJCDYbxQsSC9lGrLPLDIALxYF7C9ANz7OgCSQzy/Zq89AQ+RPS73nL3QnA28RK7ePBsVwb0q
                      WDm9hZ/GvZJLSj0Lq4A9AEpguX9aqT1/V4c9OFPEvHCLA71CRWE9rDS/vJVMnT33RoU9od3IPUbR
                      Iz3ymhY90JpXvGIDWT3CmTY9wFGNvKhbrr0qMD890Bl0vXKBHT3iBgc9EwclvQCsObtEBg69mV6S
                      PZ1Uwb2M4vg8HrFhPdHDgT1di2q9qa68PSSm3jzXzUu9OHCxPBMuTr2Snpe9AJjgOtpwcT3g/Lg7
                      7QOWPds5lb0uRys91zusPb+ixb3y8Cg9QJ2iOpntmD0g1VO9k/WqvROXf72Qqh28Lj8nPcyDkDyU
                      4JU8MJSNvZiK/7zqkDK9HilrPYK2Aj2gXjK9uMi5PNrnJ70Kxyk908XBPbvTs71WaH49BFvTPArT
                      Mb0/Ysg98PvAvTd2rz3Stoa9w066PdZ7fj1RMrc9vtEhPZOec70AZRe6BWSlvaJ0OD3qeXw9P0+R
                      Pahw27ziQyI9iESbPOMlxr3jrhy9rz+7vcBTs7y/P4c96OcZPKi5FbyYO6I8zEfFvIj5xLy0x968
                      wcjHPbbdLT0RiI89gJKKOgmNwz2YCp+8IJ3iO1xLiL1q1Rm9EC8bvUAEDrz8FIq9qXecPTibz7xa
                      TlK9dHmBPBnByD3zt449TLkMvYQb/zxApoO8qKFevI3MoD1DVVO9R3CqPecRxj0iZoe9/pkhPYSJ
                      9zzy8Go9lYOOvVLmfD1YRa+8qNAjPADbkTuyXmM9qN7ZvIDlMbrWTwQ9wJjYukD/UTt7CLM9Zr5v
                      PdauCz0ACiI5AKjyu6KZyr0Fkai9jVa0vcBOszydDMc9d9ZTvXAVVb25u5g9cq4GPW/EmT1447S8
                      gH2DPAsttz3o+Uq8t/+oPciMu73ZAKw9sGYzvPdMUr3cMdc8QJJbu190xr2Xnro92AgMvJR48Lw5
                      no49iH/Lvfo/Tj0KUXQ9vdCgPdB15DsU2om82AIXvPKqWj1CaKe9dQeivSCXgTsOlZW9x86dPUeM
                      wj26D6C9sQ+APVF8nT2pPrg9YQCePbs7v73A40s8f0GvvX0Jf73pXI09AJSEOKBfr7xJk7s9ZI0A
                      vctqrz0QQ2u8Nxa5PaDt97voYrK8OG/KvM7fED3A+Bo8mGydvQBJcbuyl049aiR2PXQykzzICIQ8
                      GTe/Pf65ET1LQbi91vppPY4FeD1pd4M9HZWmPWmOyD0VScY9zUJPvX12sb26qGk9uvlJPVAnYLyA
                      aEy9QN67PGBWLb1964490t0XPd+0qT1QL5K9HLjvPNhKUTyquHs9YeOLPdqbTD2duZ694mwBPYWN
                      rL1dk4c9qDdmPBaTJj3w6k+9OdC7PVLNLD26Vce985khvV+qxr1g9pC81JDoPMmLqz1M19s8ghxd
                      PeJ1Oz3l4JM96ocTPSton72GVhA9gembPaBDt7vJdbI9ENUQPEgEkzyAzEU8ikZbPbBpor2HcIQ9
                      kLHGvRnOyz0Fc7e9zJr+vNxVAb3KcXU9YWuGPZqIVr1g4J07q5SrvR7cq7366ka9DGO3PKelNb35
                      Bck9suVFPRbdpr3IwJA86iLCvSHzoD3xxr49dFiXvEdWyb0ym0E9AidYPayvwLyw8fe7TOSYPMJN
                      Vj3hUIs9Y5RqvdS3wTyqpRy93Kz0PN6jST1qI8S9MisxPcJRTT2Ajm29nndUPZoTlL2YLNi8RRu7
                      vaNFHr2YEHq80BotvejjBLyMFvG857FZvdAFf73Egtg8oWe4Pewvkry0gLo8cGAyvEEqjD0pYsQ9
                      FtuXvbmxrT22XC89AM7BvUTSir0s/rC85dy8PcDl/rzEBO08F4G3vVB0Mjx9yoQ9qNgIPHk7vz3c
                      UgW9wLJKu0BkF7vwuxG84mpgPVgtA7y0xYK8utCHvcDLhLwp2bk9MPb9uwzxzTzMH4k8XLbrPMzS
                      jrwkCfA8w3e6PZojeD0Xkr09PswYPYLCx71UoRi9yoAJvUeTlj2onLy8SxyovdKwVD1OhCY9IKJu
                      vbI1ED09xoE9QTedPREXhT0sLoU8rjlAPYPBJb0iQBQ9zXScvTt1mD1525k9jweuvdKXHT2tMY89
                      mL4mPAfQU73Aj0o71oMWvfAmNb3YOBa8GpNKPTCatjteG30955UpvXJiED0iC4S9sJ4ovQDg+Dgl
                      p8g94phrPZgGCLxirEM9cixWPQDB/TuRX5s9RG/zPCM3IL09i8Q98h51PdUtjr1Np6098Hucvari
                      T7045qe8OEDVvNuAyT1srfe8IHNDvTqUib0NF5Q9T96vPVAnnztAbOO8GrA8vYXLij2v5Ig9LA2J
                      vEHgrz0D6Em94xyaPZF7lz0Q6ye9ZpyNvd5BQT2g0UM75tByPddvvD0D+8G9KBU3PFIlSD0oMZm8
                      x+u5vXVMxz3BD8g9YAkWu32qkb1eBnE9iBqkPEI6HD2IjYY8jHnYvPTeg7zyqGg9E+hZvU1Scr27
                      OaQ9iN/xvI9yoT3DWb+9vx3CPaNNmj2wUhy9syqbPUO4U735ccc9jsFPPa3bHL3QitY7LC+4vHAr
                      UL3Uu4m9ioNdvdISdz3Byco9CDKsvdiYqTym+A09RELaPElGrz1NYSe94L66OxRL9zwbBZS9XaMv
                      vfRs0Lz5wJk9ckFJPZK0Wj1qF7u9sCMTvbncgD1MleA8XTvBPTcvpT2tayi9twkavdsDqL2KJa69
                      tjMhPTDUBjzNlKS9NnWcvWe6yj23VDq9gODVuiwvgrwAfle8gJTvusBmFr178Ze9MuYLPQFdkz2Y
                      c2W8kmU8PaH/iT3NU7+9tdmzPS6aLD1jPVi9N+LBvQDimDoA9Fg7UxrHvaIxBz16TBA9Nx5nvdXx
                      qT2JFb89jOr2PLK/XT3wvn88hUu5vewNxLzC0Ro9EgIzPbBAd736bFC9kgNyPaMHy71frIE9oDK9
                      PDKfOj1ylxU9lLa8vLFvwD3DHie9UKqSO4P7Ir2WRCU9B2tNveTTCb1A9I28S/aZPT+alj3iWVo9
                      4O3vO4JsLj1YgK69wGf0vJjEWTwawy09sl5sPQB1ZDrRq6E9A7/CPegtzrzO9o29OAiXvcDaUbsA
                      7rE62y+ZvVk5gD1Qk3c8V3uyPSJSpL0uBaa9YgYSPfq6aL38tNU8ypvAvYCpqb2sado82rBpvcCl
                      wr3DM8S9QElCvZLxJD3JCYw9gscHPXT73bwsEpg8zkNyPQ1iQL3wknG8T8vEPUDv4DoTso89Cmmp
                      vfIiob310Ik9eVmOPWPGqr1RQ6k9Pg6JvVD2Nr2of1K8sDkePACskb1Gc1o9xdDFPQsDjz3gw4a7
                      n/OGPbKOwL3Tx8Q9y2CYPRazoL2rzsu9oAKWPDD52Ltneh+9IJiKvADAP723YB+90zmgvVR/hbxo
                      Q6E8DdJivUDsGTucVfc8wy1cvWX6jb3gucw8sr8APSz127wnPIY9rb+HvcDqlrwPDrw9m2KtvShQ
                      dbwAZ768KGJPPADalbrWeik9D5CrPb3Ld70rzLw9d4rGPR16y70X2G+9KFoCPAB7Z7z8SuY8bF3O
                      vGhRpL14lZC9U35uvec/xT2YDKY8C5COvYYTgL3ddlO9oIXtvABm8LlD+ly9njZePcmyjj1jyI49
                      C1a4PUB2Qb3Ynoy9lde4vYAF/bz26j094bCSPVinnjw3DcA9Spxjvb5mbz356aY9UyqSPXHInD0Z
                      D8s9sJGMu0DXkjq0qAu9LI6fPFAG2ruZ66Y97cxTvdU4qL0ge/M7om8gPWOvtD2woic8GxGTPSFp
                      mz3ARcq9Tda+vZoUN70yNy096Bf3vHNtx71QuTm9+BqwPNhLrbzpHLo9sHqlO0Qf6TwjZJc9mBqT
                      PKh2MjxjnHi9xOnnPKxZwzzCpjc9R1a7varGd71YGha8DKuNPH5CDj0xYJ49VZS4PYxEiLykDuQ8
                      yvYtPWAg5Dt9e0W9EC4wvUt9lT1AzD+7VNeEPF/ZuD0l8oc9kL0mvDmnhT13b7i9cTWPPfTU47wW
                      dRM9gErvO8Yklb0SS1g9R/fIPXjEzDzSDo+9CjpUvXIrQT3S6TY96dGoPeNXjT3AXHm7p4NfvSiH
                      kjyY9GE8ufuEPTBZGr0MppU86FcaPO1lnj1ToMa9YfKVPXB7HTwNEyK98HJdvDAYdLx+EpC9FyyF
                      PRMZyr2wfOU7uLzGvX7smr0Iz4I8qKS5vX2YkT3EZOM8yoHGveHUkT0M/PM8EspbPRqjMD2NgUW9
                      lb+jvR54fj2ObJm9aJU8PCgNOjxgH9M7Pd+4vcrHML0aPmi9MtkHPRKyVz2tBLY9ELgsvEyv8LwW
                      hIe9EFBuvW92nj3uAgU9Z4klvYD44Lp1i7q9gMywOyAFlLzAkwe9Yr4BPVAaRb0qv4i9iG+avbeY
                      vb1Ow0E9WxHAvVBSxzuU4cI8GW6pPf/ty71Awwm9DPiSPNJSLj0rXI09NaOMPdrSaT19QoG92Oet
                      vUAgr7zXLnO977jDvb2lq73L0Iw94Qe3PcDvV7wqBCY98g+4vWEnzD1OoKi9mLe3vQDlEDp9bGK9
                      OIKJvQCSeLt0B648l+KDPXqUlL0qJTi9MADMvWzYqTymWoK9U/HJPQ9noD2oV5m8UHedu8wVgbz+
                      rp29IEX9vKXKgz0fop09R9SmPcLXlr0eqFg9KFGxvDNxR72eBlM9XXjMPUwU47ymhGA98fK3Pf3a
                      er374rO9Vw5jvQRO6DyADog8ILWQO1A4Vjzo4B08Rg4OPdLMfD3pkMU9pEnUPIskuj3Z+p498OoQ
                      vblTmz3M6v280Me5O+Cdq7xvdsC98kIZPXWfnD1Jb6E9tAWfvK9dnD1AvFO92ZuVPVZhHD0FMKy9
                      UGpwPKqiYT3e2Fo9qKyKvXcRJL2tKka959p3vbKCCD2wp0e9KosAvXNTVL3dirE95IP7PPUCgz1W
                      OKe9QCxGvQBCsrni+iU9d4aHPa/uyz1gzPm7YMoeO+v8wT24KsK8w29XvfJ9aT3f9qg9okZQPUrg
                      DT04kLM8fAoIvfqMR72ii1c9lO7zvBe6rz30NxW9eYmYPVM4oL0AOyC8EjZlPcRQ2TwgLbI7oKMz
                      uwDyZTvRZZU98589vbBHKTyAKuW7yJWZvRqQVz1Qx+K7tyalPdBidTxIh748j5O4vV/cqT1E2uw8
                      UBikvddgkz3SUmY9YMwHvbDv/rvXXXO9eI2nPEAuN7yETBW95W6nPTUDqD1LCaU92mYsvRTv3zwj
                      33y9ACiSO2BYXr2mhZe9om1BPWlWwD3wWRa8ei5hvUuyuj3wdiS8aGp5PGPjnb3LPce9m6+wvSfg
                      yr0CrQE9hEyBvZLmbj0g4507sPY/vebxZj2Aw8K6rPOFPChrgL1L+7+9gGb3uuyvkjyAuvY7Ogt3
                      vUoZar2oWPK8e1mjvb20qD1qFUa946g9vRqlor0llL89SBufvTbQPT0Bz8o9UIpHPKjjC7xksv88
                      IEqHvPG8nz2Ef+c82NKPPJenVb2WlAe9SPa5vH4pDT0YPX280Hzwu65Qnr0A3Xk7LVc1vVAafbwq
                      GRE99AnMPFXFir31UY49yoepvSAUk7ux1sc9UlqyvdCkFbxtTHC9oMcvvVjXnLxAqqc8qBONvdjH
                      gjwS+1o9TCQBvQDDnTxT2UO9pROtPUrPSb3irR49hH/lPPQguDyqwyo9attHvaiGGrxeR4q9kH5D
                      PONCf712cBM9sloePX0Dmr2RC5M9SXeWPUSrAL3SqX09x6GGPeiOcDybvaA9cn5GPbIZCz2lO8A9
                      k0qYvfCSw73S71Y9LNPGvINBjr0OPCA9/uGbvbRFhbyCrFY9BH0RvcDemDz3ap09RPLkPN3Fv70N
                      KJK9ePrGvEDxIjt3qLK9GgStvX0ZO73qfre9oJyRvIUquD2AINy6WPaCPBAbeb3EhNw8Lo8KPaz4
                      1zxrucU9p2OvPSqPbL03EGi9WPrKvUMFlz11J8Q9qbmvPY+Qwr3QPnm9QTmEPZVxij1kVO88+QPH
                      PVG5qj1QfSo8NJnmvE3shD2Ave+8cIw4vRPhHL0s0uO8D+e6vaD6CLs6AEU9UgZKPUkHyj2tLoa9
                      o8a9Paiuk71Y3jQ84JVOvbJDJz07f509I+egvXjPqTygaAy9yhE+PW1NWr045oA8d/u0vZl+lz1a
                      qoG97TuEPYDmAr0HoGO9Elc2PcpXjr1ywUc9gAPHvaCNSTvQYkW8B2Y2vZghA7yI6+q8AcahPSZa
                      lL0oV2w8EJt8vbrmm71jd4M9ceWZPQ5fez2ST3I9Z+nAPa/jrj0J5cg9kMOZvV5rfj2TTrs97GYM
                      vfT84bz2emk9I0XHveeMsT0YRb48nwO2PYMzmD3ns6I96C+bvOD8tL2YEam8YLCXPLzv0jwa/jU9
                      tmExPQdGcr28Ats8+DjfvEiIvDwBmrA9aFbGvUBt5zouKmQ9UZyyPdS5tLx6PDw9cv5DPaBtor0W
                      k1c9KAFuPOz/ozxZ65k9KK4NPLOuMb0dIjK9k+kjveHtoj1V6Z+9Et0/PTe/oT0efy49DX1xvc5y
                      PT3A7qM6jQXDPSjwkr1gXbK8rrh9PehuajzLR8u9XXdsvV3CmL00Ktc8OOS9vPAVFrx1JZi9mLj5
                      vONJcL1ahVU9NESqPIhgk7xS3Bc9eqOlvaHpgD3ynHg9zwLHPc7jgL3mxzw98dK7PYX8kb1GvAE9
                      KTO1PU3oVr0B7J49QPhdvfcyvr2MFs28DFanPOjd87xebio9ExmRvd4WFj17H8m9Q212vXvOyT3U
                      4IC9hEvePI7NJD24TYa86hxnvcgUrL1zt8M9WCcAvDbQYT2anpS9zMPaPE9vu73d0aC9Pu4jPSFI
                      lT3koBO9NmgGPd/8wT1AIEM8FmmpvfgUrL2oY+q8sdKaPfWckr3CMng9sBkpvVqqxr30oc68EAYO
                      PHrEND3AEbq9fRyfPXYPbT3Z/sc9usBkvVBQsrsNhHy97GDBvNDbu71F6Ky99JKDvQBmwDllc7G9
                      sRWAPRj94LyM4tW8rI2RvNMMsT2WyHk9wIq9OlYQCT1r76E90OG2vbT2oTxQflg8AF3sO9iHFTxY
                      igs84KHOO9mWwT1k1uE8WOOfvYTTCL3NZKs9xj1XPdKEnL06KAk9lELCvAKaED3Cc1Y9WCxXPO/2
                      yb2jU2O9EhQuPe7Jaj0v7bc9Bzd2vYMJWb3o6YO8dHrjPCLxVT3mVRc9QKocu+VAlb1BaYQ9b2DF
                      vdVUvL271aO9FPeSPKYOUj2wExu9MqifvdBk87sqiTG9Fk4LvSq3Ur3GkxI9/VBCvTKwJD2Umd68
                      Iu1hPUKqOz2NOju9o9m0vRgYULy66Xu9CPSsvQCZt7vJS709soKevWPpH70AZnE5YLjmu2AjwjwA
                      BE+5ZmwzPer2Az172LM9N5XCPYGFiT0S/wI92H3YvFoNQT0udam9hjl3PaO/tr2Q9VC8oRiIPerF
                      Yb0wkzS95sgJvYBoF73sURW9QIOBvFcsVL1W2AE97EL+PMZAYj3Oaxo9nVXMPYJfOD3A6Iq6CHrC
                      PASt8TwtUq2918yvvQ5AKD0guIC9isJ7PbtUoT2SEwg97BfPvAsUuj0gTK+9utZXvWBDV7sAxyg7
                      IeODPQACx7mlLog9SlUWvdjy3bx4FrK8Z6ovvfL9JD3+9jw90Jl1vUCitzxHorQ95GAVvczVmjwU
                      Cuu859JzvYAKSLqjxJo99XuTPVEhyD3O8xg9s6Sfvbr2or1WYhw9f8WxPTCLWb17uMY9Uk9LPUlT
                      uz195YA9+ES6vZL1UT0577c9xaKmvUD+K71NDL89VEvrPAAKxjuH2Yo9sKBUPBiuXzwAwGM4Mzch
                      vX7DSD2KJhq9EIfDvb1flD03t4Y9415Dvfb3PT39AF69yGWXPH/IrT2UW548XuYbPXvhlj1ubm09
                      kFJKPPA5hr0ghru8rCOFPBRVojycAdA8JUazvXVorb0Wyzg9WZebPRCFTrwu/BE9uEDFvLg9tTw0
                      X7Q8FOiJvE34sL3QH9i7soxDPQCq5DtyaUk9HdtPvRnpqz2smrg8eoIcPZawQj3bsqY9xbaKvXDE
                      WzxiXMW9mQKCPcA/F7sM2+68cMGzveDHxTugU8y7TMmjPFzy2TysLfO8aF9svP1/rr26a8a99DX2
                      PDq6QL1A3ng7aEsNPAgcjjz9Cpm9cLaKvS2CgD0uK2c9aGmSvdgsmzyf3r294w63PUHZlj3ZRa09
                      etYJvQNXnL2g0IG7ALmUvRBLdrxWW2k9Cp4NvTIhh72Wx1s9gFW8vNU6nT3jkF29TbK5vSBTYr2+
                      fxw9Jg0Wvfj4xb23e8s9QAcFOyimYzwTPYw9Jz6QPSMxjT3OoFY9kPkfvCJTWj3rPJe9ObiXPX7V
                      KT2MjeO8escpPeC4Jb3FeIi9QLxau9BLFr1WKGk9TQBLvWAbgTzZz4Q9/ap1vTunqL267AU9G8GE
                      PckRyT2BW7E9DlWjvdDYxb0gDKa9AvgXPc4FCT0xmKQ9jRK7PZqMIz2nRUW9HOUKvRrMnb2rZLG9
                      YIcwu40JPr2BVpQ9sMbDvXszjz1RWsg965SNPfDtb7zRPbI9UDgEveBGjb23PGa91E2JvVrpCr3Z
                      hss9aMCKPB7FdT0pJbc9gVq5PaD66DsISci9krsePZuUjb0atHS9+koIPXqXGL2RRJ89LQRxvaOT
                      Lb1J4os9bV2CPTWdlj2woiC8HZu6vahi37zshQW9rEnpPEarQj3OKis9QpuDvcAX3Lyec5m9uz2v
                      Pb1epj0Azcc770iXPaMbU70Uxc+8k90/vViKnjzGuqS9+j9qvViT87xy8xo9mAf4vI/OnD0+hFg9
                      LC/PPB48UD3U+he9FF+KvcCXzrxUnO28vFzwPFi1hrz3kkm9Vbm+vSI9UT0T5q29l5ZWvajXfbzU
                      LLa8d1uvPQc/tL2inlE9MFtsvFilwbx83oK9G1KpPVkDwT1Y24K9/tQ2PThAsr2ygLW9Qzu5PTvK
                      u70ilGg9QDhYuzaGej19zim9F9hZvV2Mor1y8FY9a4y0Pe7JHT3vUZE9CuM4PSgahr2NYMc9GMiJ
                      vS6oNj3Ivse9kHxhPH3/Wb3UEpU8rfNhvYBEKb2g10+7oEnPO0Gniz1OtJO9HVrFvVgxF7yjDaC9
                      SLDTvI9Dyr0UD5+8qrEGvX6jfT2bicg9APTAOJb8i73V0as9UXSkPc8svb3VeYw9/3DEvTD8T7zA
                      m9O8okoYPVs4pj2OVyQ9pVqZvaCTXzvFtcq9wjcpPVtwyL1h5LM9EItnPEqfb70DG8a9IOUDvVhS
                      x7zHSie9kEgKPJvupz2dgFW90EuSu+iknzyA0Me7rWo9vTEPyj3N0ZI9r2CNPXctHL0S2W491h6h
                      vaevGb1MLIQ8sL7fO2k9gj3drKy9SBjzvHOdtb0Qxni81k83PWZQTT3RpoQ92hZ+vXZ+Pz0QdE68
                      Po6svaivPDw290s9QhoDPaCKbDu6JVO9hw1yvZyR6DzQL3C8dFGnvHVHkD0A+Fe8oAWGveCrgTsG
                      fzc94RuAPdihYLy2TSI9xfCRPZzmCL34Jao8cP0ZvXfIS71gZ907faEgvQq/tr3yIxc9cBExvJX2
                      vj1zC6e9txmaPTConbvzQac9Lae0PaBZIL016qE9NFaFPC6Bkr3RScU9Wpp0vfA6bzzoiZI8xoF3
                      PabHfj2U4+U8N3YwvcGAyD0TQWG9tT6iPTbfEb2A8rm7GRa9PZiq3byIDo88E4KxPdtmqD1C8Ug9
                      8IF2PIRXEr3nS7Q9LaGbvbjdwrzzI3+95MzNPJq2fr3ExRG9mQ6PPdpRT72mixc9drdSPVm8wj3x
                      xJI9ho0vPTCaAb2YqzO8IavBPai1nDxsO4y84MDpO2xAvrzdUoS9rbIjvdDWWb2awiQ9sPmLvYCh
                      bbqyG4m9QAIOvYFryj2hmJU9+wWpvcpFMD20Oqa8fmItPekgoz20Jfm8k3yrPYxRprxYTRu8PSyd
                      PWwBBb0YPXk8Mj55PeGwnz2o82y8emyivfJ7x70oQWQ8aWiIPcC1L73z46e9YEUMO63+ub3gR4K7
                      UgRcPb0uQL1tax69gMlNOpNUj73aNIO9oPjyuyh1ezyZnb09gHTPvCmIrT1b/Io9FtujvUbmYD1i
                      ExM9qa+GPQywFL0Q6g282p5DPVBRljttd6G9Dj5xPe94w702V0s91DXlPMVKwb1ZVYs9i+aBPb/i
                      uT1g2Ys8cee4PUB0P7zV0p69lj5bPWAHIru/5Le9AhEXPc1wPr1wv7a9+kgavUCPuL21NqK9dPzf
                      PGDujDvnrLy9/htVPWj2jDwBork9WlRbPQtSsD0BYKg9Y1BvvaXGpr36Zxw9t7Revautpb2/18S9
                      dlWcveRi0jwQnCW8hH3WPATZC72KAbq9xuYEPbtJmD2OWks9oDB1vSoXk717Q7Q9Dk5MPWLRNT2L
                      L5s9sjY3PXhevDxDBHy99q59PaAP8bz+KZe9WBKDvR7gh73KtEA9mAanvEHKyT0sRPC8CJHAPFgV
                      rDzQ0RK8dFy5vLHBnD1J/Yk9D7XGvUHKuT1lzoe9P0arPfB8AzzYMR88SlxzPaAQCLsYcMc8OirG
                      vZHZjj2c6RG9RSufPUQo5Tz/1as9hKDZPNpZCj0QqlM87GCPvDixhDwlHam9Zt5JPVvbjz3X02+9
                      YE/VOypBSL0dfKk9QHR2PNCptbsoIAe8kW6xPYrxHD3Ad1O8IJe3vdAh8bugaSg7iiEfPSNiPL2z
                      ZGC96iISPcrRHr2Rm5Y93eVIvW6XXT0Yy688NXLIPcHQtz0MO9Y8jnGKvXNKab3wigS9LDTpvADs
                      ELyeK1A9I52hvTBZCDxAUjM8SG/OvGjBRjwiS1g90HXVO0hTk7yAb547j46NPXLRMD0gMp+90ADU
                      O28pmz2Uh7Q8AC99PGwtsTxQcwC9D+6PPepoH72oScq84DMVvWCiqb1oF0c8gEoRvOJsLD1Ag1Y8
                      1OqqvEk0oz2PZKk9C7jIPSnanD3bwII9wGB7uyr7j73hJ689RsUYPfe9Nr0YFUS84fiAPcKsdT3d
                      xaC9MFyCO5Q6nLxWWYy9zGGdvAPKSr1Qo6G7KscpPVQY+jwUxM089CQRvQSy0TwYCDi8lISBvSjb
                      uL0AVPq6kNYhPG18zL2vTrs9tUiaPZCiu72GZR89MPlHvP62Vz04y8E8g0fLvWq0dr2o8KY8AEW+
                      OTZ4nL2R/709AaOMPRjDqzz2czk9O3yQPfrQBr2ga7g8UlZuPdi/jrye9XA9EnuMvfKgMT2YAhq8
                      +hAuPb3uuL1XI8s90Hz7u8aaEL3vwIs9INl5vbrlV70T4XW94NzbvJ1fQb00Hc+8j/m5PTIWdT0w
                      c427mP11vCCwOb3YASg8PdhnvUKFWT1bnas9MfS8PRb0pr2RULo9eWDLPWNXwb0wW4K97rBMPaCQ
                      Jzurm7M9jY2cPaoqXj0unFg9RGIRvVE4jD0Iq9W80MRyvZgpqzxWjFM9mn8SvdjKAjxtkqy9N/qZ
                      PUoiVD0RhLM9aLk3vHTk1Dzgk3q9XQnFvSAWgDsU7qc8MJCZvXd1jz1AUCi9qtIKPbK1ED0AesE7
                      cB1BPEg/hTxyNxI9XgQUPQAzETvkEdo8cDWkvbCiOr275MA9RIvQPGlzoD14A6S9wP5kO+4ZBT3g
                      hOy77Ey6PPljxT3UpOm83ZigvWc5nD1SF0s9M8m6vYNHeb2Ut6G8yOiVvEqaBL07YJi9bH6RPFNO
                      tL2w1ZO74mCOvbLfKz0nLre9IwI/vYIaDz0iqlM9Px2gPX6xVj3Fcbm9Y86PvQCFvTyTyFu9jEiA
                      PEjajTz2SXA9OLS7vaNCoT34IdS8XUIgvXCaJzziO7y92p9oPV3RgL2EGts8QjBjPTuFw73NBje9
                      CbufPe6ArL1ua1o9XqgxPUqbFT0al5O9yn6AvcDwMbtkyQi9hjsDvSg13by3sMk9eWqrPTYTJz3w
                      tyu8gNRjvZaXhb3ALYo8vXCCvbcuX70AmIk65m0HPZJYPD0Bsaw9owSlPYCzar1UHYS9GY6kPf41
                      ID24GbE8UqgFPZbQYj3ZpcM9VXyTPb2mor2o1oA8wOFmuxhRgzzI87+8eM2DvXI5tL2jrcS9Qwu9
                      vUBtv7r0UgC9itlaPYBXrjsGwwU97spaPbK/hb2wHCQ80m58Pf15Yb1Rq6w9oYmxPSHfuz1NH8u9
                      B/u6Pb0GmT2zVbu9sZqRPRA+tb2dnkm9C2+1vfmbrj0VhMo9iH//vBc6f73wXG29yhVHPShwDjwd
                      xDS9inR8vTehvb3ieGw9poZJPXKyyr10UuO8MMW4vcmyij0GilI9gHE5PBCnwr3OJQo9i1yovXo2
                      ET3Qxfy7dXG+vXkrsj29OBy9jK3SPIDcdDxwm5K9/QTGPf36ar2X1zK9wWOwPSgTHLxbmba9wCAT
                      u/WKjL1BBsM9OmI2vVCM7TvqGnI9kPI6PDCf+rvH5Vu9786IPfu5oz03/TW92iNbPf4vZD17A6Y9
                      UFy5u0BeQ7zX6SK98fWHPWDKkbvUKMg88uAQPZGIhz2c5AG9HUmHvZrnTT08qs08zUuIvfD+TDxZ
                      ML89ABZWuX75Az04jNq8zHPAPPglhjylOqG9OJOKPHATcb16Kho9OpBJvfTyyDzBtp09IicoPYDW
                      hrq6hlk93x3CPRbwaT31bau98pYCPTnyyT1HL729ioSOvYalDD2zzym9n6DKPQ09tj0abQE9kyTM
                      vWBBRTuYNl88BTu8Pc0+mL2zW6I9JqZbPQKCRj2sfvQ8zfVHvfdslj2MEMI8ZWKgvaeTYr1a5o+9
                      wsBRPXKqNz0TQco9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDIwMDU5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NDIwMDU5MnEBYS5kAAAAAAAAAEiP7bzCKFI9sZOFPUzKlrzQ3zk816DGPaHhvD0g3vm8
                      oFe+vOVQlL0W8j09AFcOvWg/ADwcxOc85fSgPdLSj72IhJG873ypPaiwRDzXjW+9FLmhPOi9iL3n
                      pHS9GqCXvcRT2zzPd6A9r1+YPZ5MGD12E3E9RI/UPDohSL2z4q69gDuRu2ALDLs7PME9EeWMPeDG
                      vjuUu/Q82tWqveDvsDzaVz29ai0YvSOvTb0gha+8WRPBPWrJIr3qP1s9FhR+PcD+4zrqsU69gE3k
                      u++ZyD0Alok5XOnpPADobbvBxMk9YHzhvCB+a73yh1g91wNDvQeLfL2Ir6O8DpYbPQyxrLwydw09
                      r7CYPdKMSD3P9pc9DEv2PPEIij3sQug8DJPIPIj5wbza5Ek9ulMsPYOXdb3GaxY9gnluPfBaNzzZ
                      14I9R5+RPRQ/sDxo+Aw8Zr5SPXozTz3d+6k9GPEKvN7xIj2Mfp28CRWNPSAULb0Q8mS8Ig8FPWlR
                      kD2jIFy9CiCivSpqp7127Qa9U693vcIrCD0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDIwMDY3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NDIwMDY3MnEBYS5kAAAAAAAAANBjcDyRXKw9idiJPYCWvb1NmrU9I5axPVB3UDzw83i8
                      2FA1vHIYCz0Sl4W9o6iZPYsktz0sfoc8C5yuvaf9yT0Bu8Q9c8SUPaLePD3pKMM9zRFUvSeCsj3X
                      lZs9JFL2PMK8RT01S4y9bTPEPeLFOj3ikbm96NylvG2iqj3aoBa9UOphvIlNkD3rxpS9/iktPaZj
                      gL3ibkI91+qkPdCQKrweFgc9AMB2uTJVJj3XzVa9UqREPS20ab2kKA29MrJhPdfEnT1oM3W8QHir
                      PDM4vj03zSm9bMiovATJ4jynUHS9Sj5XPeDCA71QEeU7fQkxvW2IyL0Ah7y74vkMPRSf77wmFV09
                      IL2ou6IEND0ESe88Mv+HvWAqBLtLOMi90M1pvG4fq732VgO9TDCLPNZHl720AZI8cjDHvQB7xTyh
                      g6896A7LvCeQcb16Yhu9AOioOcULjj2dRYc9kAEbvZA8W7yEANM8xh6kvcH/hj301pO82rAMvcjZ
                      x7yYSUu8wFs+vcppW72oKgE8QD+fvev5hD0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0NDIwMDc1MnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0NDIwMDc1MnEBYS4BAAAAAAAAAPT+B70=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        9GA9POByITxMUyA8TFMgPBqjIjziwBY8OSEMPDkhDDygIlU8iVEIPN/a0jvf2tI7oCJVPIlRCDzf
        2tI739rSO2kmCDwgY9E7NbO2OzWztjtaLbA7TTypO8MRYjvDEWI7LGAMPGatpzv+TWo7/k1qOyxg
        DDxmrac7/k1qO/5Najtm+hg8hgnWO4NKpTuDSqU7fdoAPP1puzuRJcI7kSXCO5yhOTyJ89Q7Cjmr
        Owo5qzucoTk8ifPUOwo5qzsKOas7ZvoYPIYJ1juDSqU7g0qlO33aADz9abs7kSXCO5ElwjucoTk8
        ifPUOwo5qzsKOas7nKE5PInz1DsKOas7CjmrO3+fmDu3BrM71Ue0O9VHtDvUt7E7M7q/O0VDzjtF
        Q847gZyHO5MH1DvxEwk88RMJPIGchzuTB9Q78RMJPPETCTy8StQ77gkKPMczHjzHMx48Qg8kPPfJ
        KjyFtH88hbR/PMbmzTtDYCw8vbd2PL23djzG5s07Q2AsPL23djy9t3Y8bPC8OzYKBzxW3S48Vt0u
        PDhQ4DsYORo88t8UPPLfFDxBtJs7fboHPIPOKDyDzig8QbSbO326BzyDzig8g84oPGzwvDs2Cgc8
        Vt0uPFbdLjw4UOA7GDkaPPLfFDzy3xQ8QbSbO326BzyDzig8g84oPEG0mzt9ugc8g84oPIPOKDw=
