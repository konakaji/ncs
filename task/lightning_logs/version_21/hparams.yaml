N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1Njg2NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxODI2NTY4NjRxAWEuhAMAAAAAAADNiaE+FpAsPqD9h757rwy+YEf0vZ0QkT4sg509iFcH
                      vTnjmT4jQX++ulhYPlFEgj7bzF++onRHPu3Flz7UIP49dthQvtAAJz7oy3G+UACZvuClYb3vHqM+
                      c52TPoClojyoYgg+OmOavjosAT7AygA9mAZ7vmbkar4wBqA8pNb1PaB+rb26rT8+Cw+ZPgw9lz3g
                      szi8GBaivgoVVj4d94Q+1mn8vSRKuj1ebAW+2J8mvVAaNr7svpG9rHGuvdBy7jzbrqA+MMbnvRIU
                      ZT58UP69WjJtPoIiRT6sfKW+k5d6vqYtJL5ipoG+2LCKvqK/h76JUZs+MJY5vsgFID2854i9EM+V
                      vOBHJ72OkDe+cPfXPRDRk70m9RG+AAmKPJOjc75Auhy9YDsoPEBN8ryCg1Y+wPypO2hwQb12ife9
                      IA9mvdahb767MyO+KX6SPqtKhz7QIRw+Jm2nvq5rir6h64I+k5ZLvsOtYL4gSE29LkgEPoS9pz2A
                      YCy9XOWkvv+xob7Mrty9UnRnPmxZhL5ws7c8bndMPgCea7sQy8g84DFPPOBkwb0INku9zjALvncP
                      qT4YXQo+gLVaO5pnGT5sQsw9rYGiPsh+Y76+JZy+PgpJvpCEjryY6EC+JjMQvsRPgb0ARMI9qP4L
                      vQ0imz4BHII+MRGGPlCI1j3OW1q+Om2EvuDqGD6yy00+gpo1PhDVOb78ds29J2KlvnNNar7cDeC9
                      BWiWPuaB6r2w3Pa8ZtPKvcmHpD4XPZy+AB0WPYpRaz5A/aO+nb6QPlzyhL1YmQe+NOLNPXXloD5A
                      vne+vIG/vQgQWz2wLNK88yNRvr4HIL4OdJ6+IuZlPuD5Az3YmYu+yVmqPjy5kb20RaW9ShFTPuAH
                      HzytdKY+KxY6vi14kD6+xiQ+b+6hPjhAWr0/6KI+IFoxvb61Az6+Fjw+yvxJPoEDgD5Uq/A9E/Ro
                      voDWmDxmOaO+Ju8fvpv0Pr7CQUw+Kmaevry+lz1U1dA9bZ6TPiD3PL1WPra9kN+OvoJVTz7aung+
                      XMSZvVbnNL5m9yA+i86kviDXAz6APe49h9mNvrAytrz2zrm9WreUvjJ8ej6zbT++aCgcvpnamD7O
                      3E8+IJBuvTDFSb7Kf6e+7nRLPuZBaj4SAzc+GmBNPhwh0L02TuC9KcmaPiKMZD7go2G8o5khvnBX
                      w71gSm++wmEjPmC2fjxpKpI+5WOPPgCAIrjYpyO9l86pvlyE/D3AERQ9QssbPtCc473CXVE+4IgZ
                      vC5xhb6iMi0+ACFIvRSEir6TrZu+ppzBvcgKfD1gMGc9fPKSvYDqZTvzMZk+YE8WvS7rnr6mPZG+
                      Z0ipPt8Cqj4A9e07rCGNvu+Zp75fWZg+eHpSvoTjzz3rrlS+KpsuPui3FL2g/gK8+w+VPgAwW7sk
                      9NA9IAQ0vU5VL7721kY+4GtXvWOyWb6Aslq73Dz0vRkSjD4YPy49gOr4vW4dOz5M69c9zJrmPTgB
                      fD2oBo6+SotTPgZU8r0ImQM+Ll07PsjZOL1O4yY+0L/VPWqgQT6XBY++oH1EPXr8lL6fFJy+7kdB
                      PqxVwL1GvV2+iFx6PW+DlD7f+ZK+wgRyPiS2kL6B3Ik+6oeMvkwVhr5A/Is7yIFevTz4lj38rPU9
                      2MchPjq3RD5g4jm9ckuovsoRUz4oMSw92A4IvgB85zselkw+3rEdPgo0gL4m2ni+9iCdvslDjD5g
                      vGq8YLMAPPTJgr2GYtO9I1WjPrIAn76wExy+VaiePsAqnjzhwos+QGaqvECRzDxcv6K9RoBOvuXu
                      pD6SHnU+Ast6PiDY7b1m5jC+Wl4UPkJXAT7KSVI+DPv8vfD23jxLbxO+XCO8vbP8C76YPWg9uCEU
                      PkwXv71wQrO8ipcMPlseU75sP6O9mBYCPv9mmT7/+ak+UAP/vA6Wd77alFk+6DM+PYz5jL32N0++
                      HD3AvZulcb6Kukg+69VNvqr5Mj67qGS+KIlHvjDKHL4woPI8sJHWPeJyHz4AWsK8fWulPlTAoj0k
                      O8Y9Gw9QvtnNgT6mdwG+0DiZvgyUzr0gY4++QfuRPlO0O76Ae5W9gMN3vn/NlL7+DyM+x/mQvgMV
                      Nr4gHN89GA+hvrDIRr6ZO5Q+eHwBPr57SD41uoA+ErknPmBmED2wIBE+GoJGPmZbTD4A2A45CEEJ
                      Pvz2h75o6Bg9wf+nPuuehz6gli28yF88vriFKD0AvPY58YCEPnS0ir1aoyM+poelvpRlgz3TqZM+
                      Plw8Pq7Zcr4+8HA+2Dx3vYAB2TzIpIe+IxEhvhCb7jzQRpS9srhIPkD+3zwg8BM8LCXNvc67KL4Q
                      F7c9R5qXvmZ1j75BKZ8+YJt2vLj8e76bXB++WTKVPlLfbj5AL5W9CTudPrWijz760GU+POabvUrU
                      Oz7mQq69S5Z7vmE1gD5Uipy9lpuVvsCDtLwbnSC+YFtsvf6Uqr6eIAy+oBYBPVDiq71AgGe+yLdX
                      vsokmL57CDS+oVmKPi6eID4gkSY+q2ClvpYdST6AR+G9rr0qPnyZr73eAhu+YC5YvYKkBD4AAKU5
                      oKNtvEAYGD2OU0U+sxYJviiXFD2GBzs+gJuvvOC5Gzybz2K+QLbXvWwPwb3LTwW+3CaOPTSCuz1m
                      QRk+++09vth+ED0bkXa+9mVovgrpor7tW6o+Bqbzva7sYD7SszM+U3ZTvoeanb6tvJU+gCN9vDpR
                      mr5QJ568uplQPgCeITuaAGA+uzIHvvKSYT5l4YE+5xiVvqhvBr1WTCw+D32oPlaa8b0rcoQ+8Djk
                      vLvzm76gT4k9bNrtvdB6sj177Qa+UBPdvaJPPz7ApZU7tiUXvjwS4D0wuYa+zPO9vQIRUz6K6ys+
                      AAWPu4AVnjxgi3e+YOJqPChqBL4mRLG9ABHdPYCGJj4AeZ286EsuPeQ8vj2wrMk8OqQ4PuB62T1w
                      3ug81MTzPQDyRT0Y/Qo+xfqLPo3/gT7AEdU9GP57vfQDnz1g3CC+1oW9vSY6tb1cAZq+OBhHvnp/
                      l77APbA9mzNjvustf74jAi2+ANLOO8CM6L1cA6y9Jvh1viIDjb7Vaac+zEmRvpgcOj3m+16+YZyS
                      PvA64T1EDZy9E7iZPkB8aL3Ivma9uB8lvoBobrsgKlC8OrY+Pg/xmT50nbk9u7ikvivGKL4xJY8+
                      /M6FveBfGD01T6Y+AFTNu6Q3lT22gkQ+iY2dPnxvnb5Oele+7B79PcK6dz5g+3i95cmcPk5dXL4Q
                      DPc8WvilvgC2erq56ok+KF0yPbbkgL7TLDG+zvZlvshwbr50Ipi+9mdfPhYNR76AvR67YBu6vdDI
                      pD1ggxA9KGIPvmZGaT7A1F29gmGRvlKFcj7GJBW+PMyDvpQaoL5AqYU9S7AFvihUGL21xac+gIId
                      vGMhc75Fjo8+RoaXvrR4lL3Mabc9WjA4PtivUr6mmkO+GEAjvs9CiT4iIGs+oF5NPR1WjD6g7Hg8
                      fFKhvlvCNL7inIa+4TWDPq9Jk75SZpq+uBVQPXizi76AD+U9MhwzPvO9lz5/JqW+I08Pvux8xj1w
                      h22+wN+QOyjmo77HQJM+xrKpvirQPT6QiG2+VGOovhCZ9b2Mn5K+TI6OvbHAkz6wqx++I6mpPtgx
                      BT4APlw82GV1PbOiqD4w16q8iuhSPma6Fb6mYkg+AN3Fu4XRiT4UpoO+iFQ1PZ9Nqr7ksfI9KHhG
                      PS8hp76a45++eGlSPWyN9r3aYC4+pnjdveZrnr5w79W8mIMzvUBoUz3Ae9I70Ldnvtmlpj6TUSu+
                      iJNJvSPYob5g6je9tL22PWwLnT2sT4S9WAhnvrmCmD4A9bo7E0iOPjYlEz4KNzc+UIWwPNx9mr1e
                      1Em+Ps8QPj4Mqr74zEY9zKG+Pdl+oD6hYqc+JsBQPrj1Q73AnJG+uCkSPcjUeD1YJF091TOLPgLi
                      gb44oGS+OxMcvi9LoT4K5m8+kAbhPJN3kb6AZJA9gPdDvuxiuD0j5Yc+duLWvQCIODnbSn++ocGd
                      PpZ4U75cqsQ90ESHPNtmP74jQj2+yQSAPvgKUb08g6Q92LdxvcMXgj5IXka++sNtPsB/urxDa02+
                      eKd2vYgSLL48Os49gCJuvhuakj7boKK+WAIlvWVcoz6+Dl6+ZDjbPdvrQb6m1BY+ANQKvhY4jL6e
                      y5G+KMZOPYihDz6WGRU+EkZLPkD3Gr54gRM9yE9jPcwpsz1sMPu9JoEMvqDKYr6maw2+wECHO+rX
                      cD4GEdm94MB/PWDPVL0AHOG6+gA9Po9Sgj463So+LKTIvUorfT6MoNu9I+c1vlwS6D2KHZ2+jO/L
                      Pap4bD6gq5y+QOSbPBNSYL6DfKO+ZGavPYjgDD7ILVa96to/PgB+DbsgDvG9dhyKvs9Yib5RWIM+
                      2XmbPv3Wgz62HH++rGWmPXfBnT52ude9wHcBvUbXRz6Q/3C+O+cCvh21lj6TjlS+6go+PnrRnr7g
                      Nn48oBhvvZMAJL649X09IOBQvspcTj7UXMI91NadvQDtk7q2/ES+POm9PTWuqD79hJw+DJ25PbCW
                      v73WRx2+w6+XvtCfpb2Azuq9yiY3PnoUjL6WE4e+yEhgvniTKz0FBIY+wC4vvYCyfL4L112+RtJO
                      PjrnVT4KAX0+N7GbPooMYT6/25s+9+mKPkgkQT1DknS+mqFqPvDHlb2oSSY9esYXPljaBD0/OIo+
                      djJgvm6PCT6W/RU+CcCjPrrkg75gTQE9aHhwvUljoj5C5So+y71AvpQG7z3+52G+CNcJPSbBIj44
                      iXm+m5RKvlInDT78pt+9gmYQPoBbcjz0iL49zjqXvhd2gT4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1NjM4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MjY1NjM4NHEBYS5kAAAAAAAAAPAf+TxwzcM8EKKCPfyapz1U4qe93EnvPUD3Pb2AmoA9
                      AldtPtR8vz1zz5u+ly+GvgAwXbs6uEc+gIh9vAiETT2uM0k+gNQoPuwwh72mbng+kMhVvjRf9z0C
                      Hj8+AvQmPgIRfz7ykww+E+GcvhTb6j3dZYQ+tk1hPtiOJD5oEjo9TjxWvrCFojzAJLq9aHQLPcBW
                      zT0lMJE+thpsvqCGWr0AYco6cCW9vIq+BT4Xf6M+u9ePPs/+jj4+H1i+2rqPvu3njT7gn1a+8KYM
                      vn6QFb70MZO++vNOPrRK4D1oO6C+AKpgu9gccL0AkYU9s1whvvZ44r2wuIC8gDwbPO6AD74wuZy+
                      A8KpvhCN+b0gBPe9AhdWProVjr491J0+Brn7vWCYIzxorje+wgk8Pttmkr7Jh5M+yJIxvoiOS704
                      K2G+DROkPtXykD4jlXW+O39NvpY1t72HU4q+MzB9vv5lSz4wAMo8DDbZvSAeWLyIcYe+009Wvh6U
                      Xb4AaqM8bloEvuIsYz7oJja9kNAcPtKtHD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1NTc0NHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxODI2NTU3NDRxAWEuECcAAAAAAAB1B6K9MG3bOxPLvr0YDgY8pqybvWDLNr26sHy9Zwq4
                      vUcyHL3wiLK9o9Zyvcpbjr1Njmi9fbu8vYB8qjrEAfg8PtkhPcpyFb1FCK690kcbPeWdkD3yQyQ9
                      soYpPQSY2TyO3XA9ESWqPRIxKD2wqJI72keQvYAJi72mUCw9oE81vTrkk710lc08bQ+CPd0Itz2w
                      V/c7SrJjvZbDAL0yoV49ItcLPbCw37vLYMc9qwHLvagXUzwAdb25UogsPXoETr2t3Wu9qEE0POrF
                      N732YxG9rtlNPeJ6LD0g3pE7wS+wPXZNCD2V95e9lF28PAB2Xrnykwo919IhvcvSur3185u9T1/I
                      PaBR2Ls7dsa9rsyovQ3LNr25cK09WiRVPdVnn72CJD099KOGPEAcrjxAesO9oISau1FNwz0Trn69
                      5e+evaihnbyAEkK9WNYuvFmGkT047oS8Lc1lvRQN0jywc2i8duuivUbVRj3oTz68IIKhu6tSjj1p
                      n8k9I1s8vQK+Ez3VyZ49BxZhvXeVQ71g6lY7sLafu0yqqjxs/9u8XoJfPR2DsT3Ae0o76nQ2PbNM
                      cb2oNig80LhsPA3ESr1f4cm9XoGjvZjdszwIP6o8eixOPYa4QD2AzgU6FqQEvfPIvT3NOJq9VYSR
                      PQDwQ71oItK8ihC0vYA95jqLc609GJT5vKO5cL3yQ3A9Oi9aPcDYWLzbV7w9ZkGivbafCT1Q0mm8
                      FiSEvb3/hj3QtEw89jQQPeZ3Sj2xWsA9DJ3svGLxWT0A1bO51MnyPPz6Fr0+K6C9lXOBvVDTBb2h
                      4II9kv0OPUpoOT1Jqr49IOKevHi43LyxuJU9MVioPbl2uz0ApfM76iVDPaFmoT2njKI9so9pPbR3
                      Bb07eJW9yuNTvWjsvb1Yg6G8PsNKPagneTyPa8C9UE08veTM8jyMiai8jIqSPP0LLr3tnyu9bSKC
                      vX3YXL1QFn69GApyPNhOdbzWewI99xykPesYkT1DiXa92OaMvQ85pj0ATz07FJz7vC0IYb3O3wg9
                      UFlcvIDdib3N6K29AFqjvINLf72d9Ig9IErKPO5MJz0i9U89UAdzvN2IlD0gMH+9FSzEvYyT77wA
                      7ea7iwKDPVC9DTz6IwU930bJPZoFXr3gWqI8ADx7u6Zeqr1Q6t27QLQnvX0fPL3Tc0u9mIWHPBNW
                      Xb0BzLs9RllvPWb+Zz1Atlc7qEusvdjSQjz75pa9oKm4PFj9dDxCVnY9E/PKPUBKKbwVr589iECu
                      va44MD3C5BE9oHj6u1fqwT3Aes46x4XMPew1nDySd1896GxkvEBIYbuOTRA9SNbvvDa8C71YDze8
                      8IZXvfPWtz1p/rI9WIl8PAysjrwAA1k8y0SOvWDN2rtNJaG9Q5otvaeSQb34v4k8V6qPPVhepb1G
                      ywK9FhiWvTdwtr0gpIs7aI3JvJt8uD0hZMU9IRzDPQ22wr1dvVO9Qzu6vVfCJL3NNWO9PVilPY6e
                      or3Dumu9OtJovbP1rL2BRMI9xQS0vfOrUb3luLg9dhs4PaL/FD1GIYC9z6++vRIEt73WXyk9cF50
                      PKKUx72wXGg8k9ZSvRpde73y4Fw9Z3gxvUeupT1Ld6o9SCCQvA4BUj0G56e9rLuRPOKFAz0RHaI9
                      opEUPRBWRjxAPWc7ugN1vZRIuTxTMl+94ROQPTqXxb12VQ49Dv97PeBWsrxZ9so9J4Q6vZDIa7yd
                      HZS92FC7vOKdaD2dlF+9VKK9vE3Cjr1AfBQ78RmTPa96tD03v8C9DXguvVaIKT1eo4y9AKgEO1Qv
                      6zzHxHG9gDXTvGAx6byuMlM9cigHPYUti71i5zY9gIHQO8c+bb3gxcg8g06TPToUCj0QMmE8kyM8
                      vVDtQzyotpi9pK3lPPD8Ar0AZQO8qnYZvZ6uLT3tnrE90BLCu/AYPTw0YLG8jTxhvbAtWL3Q5ei7
                      7BrgvFZyRj2Wcwm9tRiQvaUCn70Ags07qO2fPMQS8zyMFIK9UicKPUKCNz3g36u92HpOvKAturvU
                      gZ+8+em1Par+jr1CsH49t6dKvRHYkT1VDpa9UpHCvZ87nj0R1oc9CduvPTlClT2HcCq9/WorvRKT
                      RT0WEX89tGaivOCmer0nOki9SOG2vEDYo7yYBxC8MEvUuwplZr0Gizc9WCOrPNArDTw3V269oDj/
                      u+tSjr1wlb69YAAxvW02ZL0iujU9lmhrPQA7wjszOUS9Ql+MvQKaej1buZw9x/JpvfI/Tz3MFhi9
                      C37IveiD0byS8Bg9IEjbu5N9ML06XCc9rH3fvEMpR73qZEe91429vXrBID0AEfC7oLMYO5SYCL3Q
                      TiO9dI2mvHjvkTz4noe8yTS7Pf3wJL2OAzw9Ny68PZVazD1prYY9YICUu1Be3bvTY6c9HCwSvdru
                      d71CdiA9ROjQPJ10b70zu569sumPvfahAL2gal67r6aSPSZTOj2UqOe8iLSKPC3iiz0EPu484W/E
                      PZQki715FKc9r1W6PRB8AjxgQL69g9KxvUwE7rwBpKI9JYLFPQANLTsavHw9KBbRvNA26DuKV1O9
                      IhIrPfsmq71Wg0g9PTNbvcrIHj00dII8uIDCvVAD2bvAUTQ7jDnZPDkPgT3AjMw60sk9PR3/hz3s
                      NsQ8hP4OvZTE2bzOCSs94003vWI/kb1GDlg9CoGYvUzy37xNppE9uRWmPWjvjrxSuby9RX6svX2w
                      hr0qjXQ99FKCvGiIWrwAHFc7Qqx5PQ86yz26zBC9i4GQPSrdS72eqCM9uE3JvcDDiLy7ka49jb5z
                      vSDt+TtjOcI9vdGJPV2UOb3IrKc8Hr6mvV3GKr1xJ6E9YAehvALgkr0A7d05TFWdvDFrmj1SSUE9
                      9bukPcAjCbzZaoM9fbMmvXa8Jz1oHES8DKfVPOGOkT0popQ94Gq5O0CDl70T2sU9I9eqPXabgr1n
                      vpM9guprPW10Nr1915O91HS6PI6mp72Silg9uD6+PEc4Qr0yEYC9i6aUPVBcOLwQxhg8MLZFvIxE
                      wbyKF169gIlzPJNVIL2XTG+90/yrPYINWT0oBbE8YG0Gu5a3UT05FbE9zEf7PF7PSz30ft+8WEwB
                      vN7hdj0UzAy9DiBCPVLUej3xVsE9NMrNvPdRtL3CcXI9doJJPZiaoL0Zv4c9TAW6PP3vbr1gBDs7
                      Kkm0vULdXj2XcB69KuIDPSoOVj1Z9cg9MMC5OzeSkT15gsY9wsXHvWoQXL0yJp69gIvqOuz0nTwY
                      Bx88563APa2JJL3kswS9+n8lPUeejj2XisA9Fci3PSB/g7yquB49pn1GPViwxL23Waw9zfVJvYBx
                      B7ooAak8oEQku8I+TT35IoY9bLqTPLS+ljwgncE74ayUPRXohT1gZSO96mWnvTDOqLsuRVg9UHxa
                      vLR9ib10qeS8stYBPSo7Oz15VY89KjxOvbHBxD3IQ4c8pgyevVBn4bt5/8I9+u9FPdN3xT0BS6M9
                      lJoKveI/nb3sAwW9dx5NvSAlgLvtG5a9WDiUvEV1iT1jdju9YJSsvfQl4Lz5Abw9wFwavD3mvj1a
                      iBQ9/Rtsveb2h720B/q8OvLHvV15dr1Ay2k8kMwpvcoEX70AFA67eP2DPLJMKT1JkIs9IsczPRbA
                      Wj1Uvqc8YIWRvbBKm7uP87o9WgNDvdNvSL2ACJ46IqBTPXPdHb0vpK+9FOoGvXcWwT1gK/E7jhee
                      vcLURj1AsBk8YLd0O9C+ZzxDBca9/cF5vbQoo7wZucc9ndS3PcAkwzxkWdc8Vw5HvTbkQD1W6IG9
                      p58gvU6Qqb3K7J+96HnAPKsHnL1IHKo8YAKBvagaFLx0U6g8Q/fFvaCA+rvOAx09jH61vMLvTT3r
                      p5893t2kvR9xvD3XLG29wCpVO6B0C7t375c9ABbUOjAAKr2oNMq8QCMIva5Fpr05/JU9oEC3O9uR
                      tj2g2E69NO2kvHDEUb0YiHi8THn+PDa1CL0ypmU9QM3QOp+TvD1iM6K9Sko0vcd/Zb0+O0c994hQ
                      vYCssTqgBw876biZPQJ4l71up4m921K3vWC3JzuuCJG9woAMPTW6oL1XY8w94uRUPcAIXjsw4Si9
                      WLOnvHKlv71Y+LC87LmHvZ/oiT3SGVg9ZzqcPWA2YzsHq069/fBLvQv0t72d1z69UHhfvPJrJz00
                      Q4q95e21vVondT3ZZ4s9oALKvHsMpL0m+y89WJwzPCHDkT10EpC8QUScPayw07xdNXC9oK3PuwIU
                      ez1Z3bI9KrQOPUZOAL3+qRA9Vwo3vfL/Tz2G71E9IEO4vczSCb2gqAu7J3mdPYqOab2DKZ09TZ2l
                      PQCEnzri+zI9TYjAvfuowb1+i1Q9Mp9vPfRYqLz50b49o6Vnve/0gz2AaUA8RwczvQfNwb2z8MK9
                      tvmivT5wcz2gcYS9rD0NvUPRlT3jgbq9UPJlPH5YMz15zbY9AIBEPLASFbwdwoS9eaqxPcyJ8LyY
                      nI48MgU1PdLUvr2p/Lw9r3GhPZjCh7xodsw8vc2mPXnGuj2iDmc9yP2VPCAG+TvaO1W92+SAPW9+
                      sb3gE4s7KOg4vEzBxDxsbKc8a4O3vWVsy73PvaY9QAk6O8gOlr24VP68ZpdiPYGXgD1yszs9t4ZI
                      valTrj0CHAg91ZytvQgxmLzDGMa9uhojvTRN+TwRtII9wFcsO3NdNr0U6sm8Jr+RvUCFbDz6XCC9
                      dnCQvd24Z71ut4W9M3qNvUkpsj3DJ8A94EYdvRHiyT0KbgK9GmwMPZCkcjyAEIA6AfSKPc2mHb3j
                      oqK919NEvQ3YIb3Ckxo9NGeJvYwMhr1ICf68jbiHPcAuxTo/NsO9+LOPvVIlIj0aGwa99FnSvII8
                      IT0Z9ZM9ipgdPX8dsT1gCsK8CjBgvbmuwT0zaro9/Q99vYpRb722h4u94i9KPTrwRz1Qxd47LDmc
                      PP4BKz2YPQ28tT6UPTG7rD3IU4C8mEbHPGC1KrtTAZ89wNzbuiqGfb22OqG981pfvc07wb2giHm9
                      eC3YvMDhcTue2zs9LaeUvaCbTjsAmnu9yU6xPcuNmD3qxIO9gDgcPIk+mj2ghks7ipwiPVi8rbzB
                      LcA96c2kPc/tmD0sX+m8AEeoO43pTL2Ue8q8cKFovCacIj19x6C9AHxQuiJ/SD01YMo9SomVvVAN
                      fL23L7c9LJexvOBTyjzwkXG8gIcOPOTAh72a7Xw9KDmpvYnakT1eNR49kdCmPX3EJL3Z6409/OLO
                      PNA20DsCVSI9LUgwvfLgKT0wZCe8r3KiPU6Pp70CtHw99wqePRiHRTwAijq7gz22PWh0oLzw5DU8
                      zD4WvXmXrj0HeCe9gO3KvOahir3UndY8eEeSvVTvkDxLA6U9WLsAvKaIKT2/WYg9mx6dPdoXlb3u
                      um49+lpBPUpndL0eXk0975K5vUdIa71y0Ew9mv+UvaNhMb2Sh0g9LIvkPDrxK71n3qY99N61PF+P
                      uT2wni88gDPwOib4pb0wYSa96Dc6PCabqb3AV0m79C6+vOIBk72ucy09/xS8vYGRkD2hNow9wGiO
                      PKCjBbswT5+73Q2HvS7mXD11rqw9gn18PXiIijxGAGY9oA63PFuhkL3gK9+7ym8CvWjUQTzYDv28
                      yUe2PfCqg73tK2i9OJSqvSKlZD16YXy96De7vcY4Hj2yCoe9rleavZR3mTzASn29oi5/PSsdkT2A
                      RTK8LEHrvIvaoT2sA/i8Ov1cPbW+tz3duYS9qYmjPVf5Hb0AECW9UDF0PIUQtz3GNGk9mWbCPeB4
                      zLztsS69jcCiPSgdQjxEXvk8ln+GvbDIQTxqnES9aZ+TPUAThDrxFMw9FWDDvVViub3Hzru9Qeec
                      PaKyaD0tfco94DqMOwDcDLpslu88s52hPb0RhD1eOic9qAusvNQ00zwgZOM7RvgTvXt0j72R4bw9
                      iusvPeEqrz0ztqK9jLThPJRYqTygCu67g7m8vQRU/jwFt5G9Rs2TvShSmjzFCZW9CKeVPBcUGr30
                      ZZS8ndV+vQDpRDqHLMM9YLituw/1nj1Eatg89pBVPRZpYT0drYy9zsUEPR0anz2gRyS9TzSLPRf8
                      t719gm+9NIDXvHLtCj3XsLg93d+qvXyM/zxo4bG9INqBPHAsjr3AYEY8fsN3PZOesD2OeS890FwZ
                      vb2vgL1YLFS80NgovFRl1bygR0g7yOOkPFV9rb3sv9S8Blc5PYiCwbyhIJQ9B8vMvUCVi72QOcm9
                      MPwOvdhkyjwAtKw4aJjIvUrjxr1X48a9d/eoPRTypTyZ5qI9x/ezPWB7tjvWNJC9UDrvO8X1pb2Y
                      gci8AGzFOiLsAT3isSw97ddLvf/jr736F6m9LTLBPUXXpr3aERy9lg8BvehXsb0DpMu91xxbvYql
                      bT3MGey8RRGsPRTUgL0Tx6U9kL13vXjGury6yFg9C4qKPZeaZL0yOm09LJvFvKIxLT1+oC09DLLQ
                      PIFzpD1d03+9YHLGvcucpT0Cs1U94aGFPSaXMj1SRWc9VmeUvW5HXT3CRGM9EkZJPQrDaT1QVj68
                      59pWvZugmr12JWA9Rx+4PTB3Ir2Dy4I9wp0iPZAzVr0GFSU9xk+nvbTw2zzX0SG9ssEEPaA8w7xC
                      wSU9UB8lPMrkvL30UoS8DKvNPA4fFj1wXZ29sJcrvTBUD72O35K9EWCbPeCfuDvp1rE9irsIPbLC
                      iL02bmk9M4cevVCBMbyFaLG9aqhNPdreZj1Y/2A8zQSpvYRJ1Tx8uuI8DPGEvYJQZj3yhYK9PFIG
                      vQlplD16Bi89YET9O8lmwT0cCe88h7qWPRKUDT1Q3qG7sLB7PEbYMz12mJO9jADEPOPyt71A6h27
                      oFbsvPJ8Ij1W1KC9anUcvQoUMj2oC3M8wigtPdKeez1E2uk8CIypPOBluztqIky95IiFvazizjyT
                      uCu9Ve2KvbLNl71dgku9PWxivcBY2LwIiKK8zSqsvSDPnTsBrb891HuUvMDjF7yAKkW9AxNXvTCl
                      1Dtpi5o98Rq0PR9Dqz3i2Qk9Wem3PdhDnjy6AWa9xzyQPaofIj1zoGG9crgcPUbWlb1Tpp29lGyB
                      vW5lCz3Yc4e9KFXTvCDu0TuBjo49KvnCvQhXsjzwezW9GFxOPMAmVL1tSGC9ocyuPbfUjj1Cs0c9
                      IGeGvb+2lj30Noy8AN7OuUW2xL0nzRu9IMcYvcDzrrzCplQ9sBiMu/Csvb3Y/5S8ALY+uwGKnD1U
                      eJM88N0BvVKpPj0weIi7LNy0PCib67zLXpA9iHDevFDu4DsiyYW9YjlDPbsVnz1g9sG81eC5PQrQ
                      qb2KoAg9AF4zu478TD0tkJI9IP6NO8KnIz2oUKQ8EoMUPeDhSL3ha5U940xLvc/Qrb0O7Hg9CZWM
                      PeyTmrzo5w+86uuVvfOqqj2zlri9ivdTvb1rh73QU5Y7HN+Lvf82u73FTJE9Kv5oPa+bwD0A8CM4
                      bmImPZb0DD3uhVI92CYGvPuzkr0tLIc92EzrvLTphTxP25093VidvWJzWz10l5m8feSbvcOler0g
                      hLW7neCwvXuGxD3AZP869aKMvZJ6OD0KDVq9ADnEvKevwL1QETy9tIOAvYLdWj3rLrG92NkjPLNJ
                      d71olYu8cSmTPVg9RbwwSEW92COnvHIVFz3PZ6+99oCqvfCAKL2+C0s9EHQSPJAWYTylXIG955nM
                      vcAus73KKRq9HdCQvRpveT1OIlg9vd+XPeBSijuKOTA9IcCbPY4ZZT2g9oK9GL6UPH4CED2+Zmw9
                      +Ij2vFBNK73Aejm8TeFivVPSoj3IWJ48sIDMuwJgLT3e1UU9YAJduwCNZzoADpw6vXizvS3+nL2E
                      SAy9gxyoPTO8Gr0dkBu9QKi0PHgupbxnqSW9WKDIvCg4bbwwoaA7IMHeu+CtHb23L0691uSWvZcP
                      kT1+4Rg9eTvMPS1dkr0Ymwu8Yk4dPeVWp70zirc9WPlNvMdFbb3w9iO87jgZPWSK1TyQH2m9QidZ
                      PS/Ftj1OFiA9oNyYO3ShhL39fMs9vUpWvdPunj3KcpO9A5K2PWzzyDw0deG86E4bvPIgXD1YjCm8
                      o2VTvSiOfbzTh4k9qy3JPb4Fj72OSqC9v+qnPQFAkz0RpJM9R4FHvcLrXz2+rCE9rPDKvACA3jp+
                      P3o9WdDLPTRyqDwPBYk9ngWGvccfOr36wiY96NUePGu1oz008Ne8cJ1ZvVCLQrz9S8S9AIzsuMRr
                      Bb3jOsm9SNiZvLD8Jr1P2bg96KKYPCAg2ztmikE99rZ2PVihAzwDOiO9msd8vTcktr3nx2e90LEC
                      vegeKbxglkW9f2S5PUqHgr0Za4I9EDEovc3foT19eS69xvwfPVJdZD1buJO9Yu88Pe6ipb2OsCQ9
                      2du5PcBsxLoAYcK9YZy0PVHKyz3es4a9IdiZPVTv2Dy6sDC9iVubPYA2irzUgM28uo4OvS0BNL1T
                      n8Q9+dS5PRiNrLx4v469Iog6PYCTh7vzq3O99UfEPcJ1Cz2v8KU9jsaZvdNuQL1Mq768kyS/PbYy
                      WT1mOaG9evQlvYgMyryDLpI9c3RxvdorQ71YQAG8ADKePNI+pb0xEqI9KEQUPMUsqb14JuW8R1Uf
                      vcADZbwv/5w9wLcoOyKJwL09vpS9a2qJPbbalb0jbcW9KAhkPK6DGD1YFN28O8LLvTCsdDxvUb69
                      M6RBvYNTsb0nWLQ9hM4QvbNwHL1jdZI9V281vbqZbT24SNK80TC6PdAZXDwouUG8YERjvfb/h73A
                      Bwo7Dn4xPeAzk73u74G9ae+KPeXiuz3ttpA9kDB7vaA7ibsgAge9wFBwu5rCKL11sJA955gyvcAq
                      0TqAqGI8yBH5vMYDn73nT2S9YDiwuyKBKD09sbw9qixkPSe4Nb3sQIq9ZDfhPFG4rT1auhA9Duw6
                      Pc4Gcz0ueBo9Ur14PRQv4bxDp4k9vS+CPeBqWL0frIY9qIJ+vI6UPz0z9jO9aHSBPKCDlDvnbqY9
                      DMMLvTC+Rjw/ZMi9gYK6PcCQSL0US8e8ZBPbPMIEjb1CU7C9aZiVPUChUrtdCKQ9ngYfPUN6x73t
                      Bow9GE8APLbuez32ZGI9gtbDvRtBrL2dm8I9s6pJvTZcdj2zy8E9MIWYu/v8xb3A/be8IFOzPDim
                      mL2jqBm98odUPf6PNT3abyE9wvtYPaOadr0fy7i9pY+9vQrbY73Ut9G8bQBLvf4gmr2QDrO95J6J
                      vRg/bbzJs4g9u32PvYgmhb3VXrs9MPG1vVDDUjwA0NY6QTaqPcskrj3TZ4k9IVeLPewygr283Ok8
                      eJKJPKybxTwT68I9gaO3PcD2ir1YAaS8qHKBPGEwxj1d9WO98PQvPBg3rTwAoVM71OHNPJvbpD0w
                      h7a9KvRnPUpacD1XBsA9GRbJPSjVoL2K7Ao92Hi9vMAjILzxrsc945WDPWgnor2K95O9HdVmvdBB
                      ADwkOPc80biJPbemXr0k7gu9thQXvXuavj2ABQg8+J2gvZiqjTwQVy+9IvSjveLVcT2rY5U9gEkI
                      va/IiD2SPEg9KJJcvOjLHLyfPLe9ok+zvRMTN72bBbW9WieOvdDQ/7swITg8Jw8pvZnjnz3D6aa9
                      MLadO5KOTj3QLJE7NaXKvZNRlr1qmRo9sKubO4cIw70Qr4690w66vWjgH7wgK+K7PfpavUGGkj2K
                      gce9kkddPQhDizw6NDk9WPKevBKYaj30S/W8L9DBPSMXZL1xr8Y9iD+3PADKbTviPUk9opApPbhh
                      27x3J3S9KLhJvOpdXj2wYxQ8WN2zvSpnZD2I+LI8ULgqPO7pUj3rBZa9y26uPZ5cl70pcJ49Lf6e
                      PYUJxb3o7tO8gOrbvNKBNj26NS49BYm3vfPJtT3+UYe9ipI2vdBZizvacQW9gKSqvSqTNr2oUnM8
                      wFh7vFvElD2yuic98fuqPdFRiD124mI9o+JYvcCmhTwNoWu9qFqvvNV/h72OWV09VqEzPY7rl71k
                      p+A8sOKdO5QW7TzixIK9PK0YvaAOhTxIw4c8Lmx6PQNFvD0YJ1E83dNsvarSBL0ih8W9RAoQvaCL
                      IzvA0qG9V7RmvRwt0Dwz76A97N72vBFkuT1gW8i9iLqIPJD+Cr2OGEA9cm18PZUxxr0zY229camM
                      PXSL5rw00J68UGIaPBpolr1+dlU90IkzvN5TGz3osp29tHyiPNsjo73oB7a9jAHVvEB8G7tCs3w9
                      71e0vQBrFLtSvZO9SLGZvCWnqz1E2OY8Ly/JvTHLpz0lc7s9NxEfvR6xdD22tYi9iAGWvb2kgr0w
                      w+m7oHYcu6AnMzuowV48pAzPPB3Gdr1tGD+92zuSPd1moj0/1rg9zbCNvWDPEL26JyU9acuqPbeY
                      ZL1B7cc9gI+vutD8UTw056+8Gzq9PSnygj0PcMY9+kAEPdLgwr3a5MW9YdLFPR5lcj34KYw8lJEG
                      vUdSML2ozfS8oO61vc1ILr2MopE8AMQouwTx3zwYkqW8WoMDPfIfZD0zfb298+omvcWBkL2vQ8E9
                      7qcvPUBiczzwWSE8M+yxPXQbszzYlGK8gAmLuwC/YztSlCI9FCGYvDl3pj3S9xg9wpRAPVC0m72q
                      KZO9FMWPvCCuhTs4QKW8qLzCvPa5mr1W5Sg9AJM1O5hLR7wKWCY98AQjvRtQqz0qny49KpwpvZAa
                      Ozyb8KK97PmBvF56AT047Y29HiQuPV5bIT1CQBQ9WjgTvYBmRbwbRLq9pFTZPJYYGj3f/b69oKrO
                      vMO2mz0A8AU5OQ69PV3Our3jwJi9MNMzPHpfQ71AqbA60SCTPcW9jb3jgD+90C53PPINMT0KxVY9
                      3cCavfI2Tj06+nW943OvPRDNdLzL07C9QkBIPc7mo729m5+9nTusvWGagT2DGkq9bJOsvBuaiz1B
                      +qI9hH/4PMcMnD13ep09UuZiPbBxZb1oNyc8qGgovIBit7xoqqO9Sg02PdYWGb2Y/d+8kIIxvPD4
                      bTyAqNg7V3GdPfd/yj3sURC96htHPU6/Tz2fwsG9KE4wvAfYJ70nEIU9fIHNPNNipL075qq96mtl
                      vXRFiDw2NAI9Bw24PeiBRDxgM8a8vSrFvQAEhbowTXk8WOYIvBSJqzx5LcE9gBs8vQBGhb2giFO9
                      HSNVvZFXuj2gr6Y8QPpuvf3flj1p+Mk9Q1E6vfC0IDxAgmm7cAYTvQAhDDvRj6g917UjvfAaZr3t
                      1h29ALv7Oey7jLyw7Jm9MqlXPfLWaD2Xi8M9TXMuvVDxk70DEUm9AKwgPOspxj0MIri8rSKWvaas
                      EL2C1pu9CJKjPACL0DkA9h08EkQnPRhmJDzYM+28m3i1PdfBSL1mjQc9UMS7uzh3wbzaZEu9wlko
                      PQBBMDozcJo9K4m7PcA+eDvNCJA9W0vKvWr7Eb11E5E9gga2vYYkjL2s1bI8p0lOvQCWKTmhGsI9
                      K/CFPRpgbL2wX469STSdPUd4mj2Aiye88sGLvR4FYz2tS5Q9fMHdPBSbkLwYyZa8wF9mO0sjvr3c
                      1P08oJRiu+0ZlL0VVsc9BfuDvbCIib1A3iY7LLKKPEJOPT1MKKg82IRXPPr1FL1ZG409MC0+vJoD
                      w73Eadk8s1usvR0Stj26IFQ9qv2uvaOFxz2gAxg7EiCcvSjHkDx9eGG9zRaevcEcqz2wiC68s5a9
                      PaT9zDxXIMy96v07PeBQgbx9eIA9wbuLPZaBLj2DsTa9sCozvZNfwz2Ikpu91c6WPYjTpbxx/Js9
                      UXq/PVNNjz1QYjY86JzwvKAcF7ts/NQ8+/a/PexmvDw27jM9cG1OPOedbr3xvLU90HrBvZAyBDxO
                      vho9a2nDPRB6Abywf2m8PXqTvVlCgz2gNKA7rDbdPKwrtDzet4e9sLlOvaz52ryJpqg9PxCVPVE6
                      oT0ZDJo9KLqvPF7nFT2teLu9aHYtvITDjL0gqrK9GiN0PWooTj1i+g89vWw+vTWhhD2sW/m8Sihk
                      vYoKTj3/Faw9+d2KPYBFIboj9X69sJj6OwB4rzrOKZq9g6+NPYW2wT3gy5i9SWOAPX7FTD3IusK8
                      1Jb1PLJBYj0tuLE9KLkFPGqHOD1ghKE7uFaEvHiTgzzwiw086SLMPbQRCb0rR6G90G5gvAJAVj2n
                      YzC9MJPgu1dViD2YeXM8KTO+PUAEA7yAels85ryrvYZ0Hz0dQym9TSe1PZ7HYj3Uxac8YAjivBat
                      EL1lB6W9Rt1gPaAbP72lEag9IZ2VPUT/D70XE6I9VWiJvZlumj24hru9AHcXO7MyXb3CTF09fhNe
                      PTBDfL2oZmG89rCSveNUiT3yHkM9+kYdvQAiVjxo0Kc8MWCkPZiW67w3oiS9ntwkPcU+mL01t8k9
                      zF0Gvao5or2YPDW8kEVwvYUuiL30f468mqi8vV26oj1H37O98FQnvczx+jxTGV69/CnSPFKYET2A
                      A/m8gPHmOhMEP71DAaU9bHrgvHN/jT0uHY29dupyPeCkiL1I5a29wLx+u1DbWr2KNQ89LgM1PWB8
                      SLtzLJs9LDODvQBM6LtT5h29OamIPcC8Cb0ObTo9UuM6PctYvz2bf409gBorvTyiF72MvYu87Utb
                      vSo5Wr3347M9+Bm+PI20ir3HPn29p1F9veM5rL3wkwK86Jh6vLDWP7yqbB49eK+cvDNwsD3w+Xm9
                      gIy6vMDLv7zDFC+902UwvRgFZLygZQ69chhkPRaVg722/Hw9vRPLvQP+Pb1yWhw94YeDPYDcn7oA
                      a3U7KrlhvXRNh73Zlbw94BNZvQIPfj2XOl29srw6PdDCFL0XkJQ96MhTvE28lb05nbE9ck1JPYAw
                      YDzmNRi9EMkbPBaGEz0HNZg9ehG7vaIkID3YJLA8xYyvPYuhwz3ivDw9QicOPQCa+bzwFcy9txEj
                      vUgvwrzyw4G9lB+RPOeXvz2ob3m8I5J1vfdYmj0Q1qS9sFrkuzlqpT2FB8A9tEP4POCfa71K1IO9
                      ka6TPVAn7LsiQBM9NkFWPWDW3bwivRs9bDrOPFBTXb24WYy8IkWWvVs+wL1VMrW92MbMvMkMvT1Q
                      RNU755NHvR2LuT1iMyo90MChO9AeerwoK5S9C56vvVRXy7yAMN06Qu9ePcSA6DzWYn49TbtZvWNl
                      Z73z0IQ9i5+WPSKOKT3EMNo8m+udvcrIwL1gO0I7F96zPYSD7jz3LXa9EE4VvCSlzzzjFC6992zC
                      PUGZkz2MJ588kARivStVlj0w8VG9Nn4jPUCsxjywGIG7kL0XPFCy5buaQFi9QAQrPBA0TbzGbga9
                      uPDTvEi9nr1Ygh+86g2wvUwV7jzGSoy9VrkqPb8XtD2AFQg80PV7veAZv7sHyKg9+I32vOhIM7zj
                      vZg9M7p0vSjUVTz0D7g8oaC2PZbGJD1BsI0907mAPYaXBD2gMG+94S2hPclhuT0VyY093qILPTBr
                      dLwtEjK9ktp2PSzU+LxMqKs84J7AvbFomz2MB4m8zXylvcWvq707qsS95RObvXknlD1oY008MFzW
                      Owu4tj2qm469ikclPc7Olb2yNnI9Xci5vQ5Sn70flsc9ILClu8Mmuz0N6Hq9QJ4jvV+ulD2LoZo9
                      9jxsPVnrlj1zJiG9gxnAPSBi+bxePZO9+rcUvYSu8zyA0TU6hTuqvQhgwzwI56s80EzHO4r0i71w
                      UUe92N2DPOx+5Tzzuh+9dBquvCrIBj2wvBm9i6qnPei3HTxC70U9rbvMvVbRlb2hzsQ9aIHHPEpA
                      aj3d8x69eLPRvLCX2btez6S92JkHvN1ha71CAQc9zw6NPUxE/LzNecS9uPfRvHy1A70A+2y7J+2K
                      PcRFFr1BzaI9lya3PdaDNj3zY2O9zKC3vLt0pL2zNV29QNABvVorw70fAbo9Aw6ZvRcCtT2gzOC8
                      oEIdOyg2rLzKMSM9DWZGvUnpjD0NHYm9gIIZvaq9Cj34RYM8YKSdu+BTEr1gWYO94OTFO0Cj67wQ
                      dkm9QhI9PbHkoD2qoae94LomvSPnv73nYbM9lqRgPTwe5DxkOxi9GTKkPc0CH70m0Y69Ky3IvTg3
                      rrwlmKk9AJkKuygNKrxDxni9EA0AvFfvY72a/Je9GKVpvFCTH7wrnrW94BOVu50Wx72J5cE9YtRU
                      PdXtpz2qDjg96IJFPBISVT24aqS8aa/LPedVfb0g6tg701Y4vZlyhj0A4P05oG5zu7i7j7zY0Jc8
                      OSKVPUrGGj3ovbO8BDIHvV56pr0ghqO7fH0ZvcCedzvhWZw97Ab8vIA1abyGJTQ9JyrJvbJIOz2o
                      nW+8zuWLvdA2Yr29KSe9M2Q3vR5HCz1AbAW9Ms1fPRiIM7xIjsi8Uo4rPaBa9buLPpO9zcDCPXD2
                      o71Y07S8Z/givdOsWr2tJma9fkEVPXXgkT1gX/27R5YavfvahD0H5Kk9SjmDvcCMp7qSZa29Sh4J
                      PWQB8jwzfp49pqYQveHQhz20J8Q8EMo6vKYRfj1qX6K9BBPUPCqBFj2MCY883bO6PdA5Gr1Xgjm9
                      2tsLvW6WWD3LTqQ9YntxPXnAlT3QVGu9oO4LO71xkD0Mp5e8IOmAvTWAgT3MV4A8ALfgu7R7/7wu
                      YZe9GYSBPbAu+LtiGQo9mQegPSIkhL0weTO9D1SQPdDXM7wAtr67GHWtvOiAi7ySXwc9DJnovOxZ
                      27wA5LU7GxWovXO0Wb2QF068X3SrPZa+E70anWo9gceqPWOca70fS7Q9LV6OvaDiRLurn5y90J1A
                      veNjar3tcDK9vw2EPbcsnD0oY1A8UB8VvWjbqDx9S4m9YKslvRUHn70KdAy9Awy/PVf7Y71plrY9
                      ANVdOuhwjL0i7jg9u8y/vW4pDj20X4S8UjBUPWBHlrsQyQo8QPO7ujBH6jv5Opc98MyYvWY7FL2j
                      l0q9ACcQOgBuCb15sq89XaGsvbK8ZD2Veam9qA6mvK7mAj3ayhQ9+gYkPfn1kD0yngA9E5fBPUm9
                      pz3wpF+9sr+MvTLTGj1DO4+9YMUuO/Rc5LxA8Uw80hVfPTjTnrxwqgc8gLU2vTAdJjzVJKg9iOul
                      vSgw6byGwzU9d+pYvROCKb02Tyg94hYUPUAgeDuKE2w9gH0wukFLnD0iEwg9+YnMPXSFiTzydHo9
                      dJKePAydsrxmvx49w6cpvYT01DwEP/A84tqdvW7tJj1nSX69WgwKPYVokT3bx5U9Dv2JvcoLEL2E
                      VQS9PugDPeBUxzyg1g67BisEvWqUFj3oESQ8FgAXveMhlr0zHpe9nW5HvXMQvj0LYag93lxWPZre
                      o70ixmE9QM+bvEqqMj3yV2E9wMOhvPcdnT0+Kl498DxnvQBbhLzO7YC9LVadvVoDmb0KmX090JqP
                      O8UEub2tokK9oBF4OwBKVbkAZvQ6gF+Eu4c3Vr2MhMy814O2vSC7Xr1QzDQ8w71FvXrFDj2AyZU8
                      mhNyvbqro72wOgS8DVihvdze+TwQGj69UIIsPK35k70ARCA5SNaAvVhRn7xqCjc99BC+PIXbg70A
                      IuQ7eKPpvDe8H72pGrA9wkoaPdeDuD1vEbm9lJOQPFRduLxbQZg9D522PWqidT2dFpk9qD8nvBZJ
                      mr00wo+83KQDvVDrmL0wlZw72qNlPa5eBz29U5E9tpIIPRLjOD24n5+9cenIPaDpejvmgWw9I1ak
                      vZ0Crz0KcQa9m6LAvctkkr2iD3w9iva1vRh8fDwNJRq9P+DJvbjKj729uKg9eA6ivNexxD2ft7e9
                      MEJsPHDwFLyE49c8XYJDvbI4Yj1/MYo9eoWtvaO4yj3i15+92vlkPSZ1Tz2oJF886IeNvUjbl706
                      VD69fVqePTDgJ7xSHnE9CRWlPSjkq73KWDc9QF/hunCwmL0zvau9sFbeu1gINrzMCZs8qOGwvPAT
                      jr0DaKI9bjyZvcC0e7sgr8e8J0hMvREppz0At8o8vQyJvX/oiT2Wsko9ESyiPcxy0jwwEpG9WNwt
                      vKWCir2nTas9YG4dO+L8Cz0bGZ09qudgPYBV7bvHHbE9gKXMvdjSXLx8sQS9T9qmPaDSBbttssC9
                      kG20vTx0Br1S6FA90/GOvWjakrwCq8i9hcWBvYuJvj1vf8W9+hgrvTlhhj3Yak88JFjbPI72ED2A
                      Fbe9U44wvT2if73+VD898L6QvQV4oz35f6Q92ArJvV4+Lz16XXY9E2dJvRpChL3wGh6812JRvQa4
                      n70HqoQ9CFOPPKMtRL2TIUa9uBmuvfq2ML2MDfu8rMTJPJkbyD0wXiS9DuAwPTWslr2Qpp69DGTi
                      POPMlr3AHE07/Q03vXcUUL0ETvA86Ye2PUDAkTz9FJK9GGfAPChLADwFCcS9MCQuvTDFuL2w/Qa9
                      6xPMvVy34TyOWIG97qyMvU7fnb15A6A9OVKSPYAywjtyv1E9GOp8vH0Xw70ONSI9TYchvbTi1ryA
                      2+O662XHPSYHGD0WWgm9YKIVuzHIxj1w4K69YHSnvSY4GL3Kf6G9ocXDPVCGer2dwL+9sODlO/lZ
                      iD2YYJS8CTGGPYpYGj1HRUq9ZDHYPA2Gr724Kui8topePWXexT0VXbM920jCvUbdFT1OXw49V/2P
                      PWKNCT3wvyu9zJnhPAAIBbxGixQ9tUOsvXJ1Nz27vsa9WO6GPOlEuT3K3DO9AFRlvecWZb1WYHY9
                      IIPlvLB3hL3wZSc8+DKBveKyAj2rOpk9h7ilPadCUr1xubQ9+ukmPcXqmj3qfEI9fb5uvQIYfj3E
                      vuM8KHzavNFSjj2hP7o90Ez4O83MSL0zKkG9wnk8PVA7DLy2Wgq9s+JivSAD6bys/rg8GhR5PZMD
                      sT00wxi9xMqDvepUUL2wsVQ8MBCdvZgWgDwAqQK8d/KLPRUVxj26mMm9KqqJva2Cmb2t5ba9wAqG
                      PKTq9zxgaVu9ojAKPZVbrb29Bn29q8aNveJ5UD0ND5g9gxSkPYC01LroOCq8JQyZvbjalLzAm2+8
                      4K+/vB5LAz3YBpW94BO+vbMbpT0Ng6i9Z8civRiNYjzmuqy9Cic3vRpCUL3oHg88LtltPdAUgb2o
                      +7m9KK/FvCCOtL2kfv08sPuRuxbCBj0QGQO9Wx+pPcvJjb0SYU09jOzkPGAkob0wpfw71H2MvNAO
                      Fjy3IrA9Hj8dPcAiIrzPMMI9dcmfvZpjVb23isi9jKjOvLjasLxi1hY9UIPvu2paaz3pnso94H+7
                      vADfszsycw89WmpYvYA68DowSBi8JfbDPYUxpz0TDjy9uVHMPQ8Suz2yKqu9UGmbOwpQQj3Auru9
                      43tmvbC51DsH+2e92GiMvH2emL0lF7w9bDODPMr+cD0+TRA9FG3BvJonNr2QOKC9M91/vf3Hvz2C
                      8lU94lIFPUQPCb3AxK06Jm8+PeD9Eb0fWpQ92sYHvQceLL19GI89e0SKPa34c70iRzU97ZisveJM
                      y70YDUi8fcS7vTF4mj0AAEQ5LBqtPNDzqjv+IVI913S5vaj4A7zS6UM9o+q7vTWwhr1AgyK9c7zM
                      vTXDiz2eu4m9MC1lvVQGnjyomE88PQ85vYHDvz39Jlq98nCnvY4nAT2C12o9MO24O6wR07xoaLq8
                      gEBVPCvHnr3A0J29HisePdLZgr0lVYw9DfWwvWgavDyydWM9QoNuPRiddDzQwyS8I2G+PXCHEjwR
                      TJY91MqkPFBmTrzsStW8aG1fPFj5BTwEGBG9FRCkvcacAj3pr8Y9wNQyPJCTF7zQNDK8dzWuPdIV
                      Zj0afnK9UgQXPSATgL2a4iA9MN38u7HshT2rI8g90FPKvV2SJ70LWpI9Gyy8Pb19Hr1pELs9gsxc
                      PXlcsT0F5JI99ttuPQCHmL0hKpE9AOOjvR7QQj26OgA9gL2SujKRdD34Zpy9oksyPToAUD3k8dU8
                      FoYGPR+QmT0gwaS8pTevPRvHqD1gVO47i9XEPaBmyb1xNJc9sNanvZG1oz349MU8IHDXuygXQLw+
                      wBM9T721PcFknD0wEHq9oPmWvMDaHzwF2MK9oBRivZ10W72wEFC9DYomvX18O70C1Ug9KPhyPPV8
                      hr3K7Gc9u8rEvbTXtDwGvhA9fYKSvat2uj2zbKI94jZ7Pd7qUD0ANru7XC7zPOBgnTwg3pk8qIY2
                      PAcYr70h6bU9WKdHPMsPrb1g2nM76nwgvYBSIr1AFYq8jiUBPX11e72wWqK9WCqcvACYhjz01o68
                      n+m0Pd2ppT0AOJo5D3S/Pdg/ob07Op69qBeIPNNZYr0A4Hg8Khy0vXLMAD2om308VUGyvTAwMDyD
                      k3u9JOXZPIeVmT0tU6a9sQOLPcBHO7xAK9u6LQ2xPYIgKz0wDFm9AOqlubCFKr1GWkY9Ql06PU2T
                      X70ij4e9gHvjvCSWgr3STAM9NR+APUAeSTs7r7494QCzPcCWeDyA9AW9XZfIPS1cf72RWrY9dptD
                      PfXerz3gWo27sVSMPSTW7TzfMrQ96CKTPOhstDzAjs+6uAWvvDYQWT3jvqQ9ALLIu1BC3btNiHe9
                      UPVrvArwYj3aRye9MswZPcM4xD3nqlK9BnKLvcT26Tz4uJi8NGOTvLCgdLzjGJU9bGDqPMjMm7wM
                      qPa8iYaYPYvWoD0AOus5F+LAvXfDJr0AwP841MazPN3+kL16eiw9gLCyvACCpDmVepc9ouSqvSgP
                      XLwjUI09o9cevXCVfb004JE8IMe/ux26KL3xCpg9MjJmPeh1iLwMkKC8oR6oPYIfCD2Z7qw9dkkN
                      PRg5zL30rMS8JNz0PJQipbwQ/i+9iodpPc9bvT1TfC29ObCHPY9vxb09c5K90hi9vdASCTy+63g9
                      damUvZwVCL2gHSW7ADC4Oyg6vDywF0A8s++UPRjHJrxFgLm9hjtxPexTqLx9u8G9/0/FvdF1lz3M
                      Lv28oSymPSDvhbziCZ29ica2PdG3yT1A+hu9/l4QPdAq5zu8Qhe9Kp4VvYVOmL3voa29bZGhvSvy
                      gz2jYow9Lb8yvaq0VT1w6VO8qtWOvcKFJD0DiqE9l6y/vbix/byae349iC7CvYkpyT3l8qW9DYix
                      PX7bCD1tQJA9QA1POygJMzzqf2i9Mp+rvahqALxNAbE9BqaLveiTmrxRKaQ9MAhXvYBetLtRr8Q9
                      PShrvfi97LzzjUu9tT7DvWiHlzybTK29TTWrPYSa2zzwX0e8aM9EPJvRxT2rOa09ymQMveIinL19
                      5Cm9SxeTvdDLJL1jD4A9/AABvSCDhzvwfbe9WEK3vQorFD1YXgw8BLXgPPZwND3YJSa8fnZPPeq+
                      Wr1IyYK9SbO1PTiAgL2WSSk9yG6CvECWTjw6Zyu9TPqTPCLor72o0Li9NHwAvc5UCz1AgeG6KqF6
                      PQBqWDxA/1q7ACPMOw4JED3o1GK8tw2VPTVfsD2NJlu9XlBKPVJan72o2l68HcZZvcqeez30T968
                      eBuJPKPbP71dfWu9oIVpvSyzoLwbSMC9wIlnu6Gjjz0HMMQ9MJnDO+c3gj2sZsA8YD3FO9fGuj0N
                      XLQ9o92dPWhIp7xgUfq7ADg/O4r5d71a7L+9MxKjPcrSkr1F9rC9TcShvVUtvz3grLG8ekhMPV95
                      rD0RO7w9MtHIvbN5v724M7o8ysizvRKqq73Kcy096c+gPTlIwz2QXh29KM24vMxLyjyAW2g8KOoB
                      vGS24TwLea89tGWfPLooab2CAIy9JuBgPQJReD1qTH+9xzeAPcdHIr3Aynu7ACCNuUSq5jy40/W8
                      GfGMPZD5ETz6tl09L5++vUbmfz0virO9OgFAvXp1vr231sW9UlkNPVS6vLyxhqA9jInGvKCxvLtb
                      D8e9sMdYPBjMPbxgy687QNB+vJBDIDxggAM7SB7yvPOqrb0iRqi9I0dKveh6tjzUc8Y8oAbGu/Ue
                      vL2HlLe94AKFvf5gmr0QVAA8Rk0EPVcudb3983G9INGSPNnxlD00p5s8z9SbPTBtsL1sh6e8oqcs
                      PbC7vTuq3ji96DKZvdAWijte9lE94Po3vULVUj3H8Wu9+mN4PY8kmT2fEsG9GmI0PXvNwr0Qd2u8
                      Yi0TPUAawzxT1Dq9t5WyPZJZBD0RWII9WzXLPbiMlL3IDIW8gd2oPXAZbL0an2K9My9OvUJ/rb2n
                      4UK9QVymPQWoxr0794A9mNiFPAArrzuoCkO8M8Vsvbpjv73NSak97MmBvaJjOT0KF0k9AQeuPbDe
                      6ruCS249dl9APZkZoD39zb+9mjCVvQkHrj2eY4O9okJdPb65k710P4M8MSnFPZY1Sj0aomS9ACbK
                      uYOjgz21YLu9LcmJvegpMzym7Bk9drYOPTC2xr1cF/s8ezCDPRj/DjxHSrK9DaqlPQwTjLwACYe8
                      7N/GPMgbj7xsCKK8sH+KO5hYdzzUmYa8Kql+PXONwL2UV6+8LyyfPerOD73WKAk9y5KLPeKxHT22
                      fRQ9rogbPTDhdDyI9eu8jMiKveCU+DuXv3K9441Hva0igr1wI0U8SLeKPOZHFD02eYu9DPbSPGZT
                      mr2yIWw9mY/DPZk/uD18qwO9ZmAAvfS07jwenGA9FFyEvbP+rz1P7ag98hYxPWVNx71Yoms83e2I
                      vc5scz0hlMQ90E0Vve/ovb3464A8wBRrvZCqNzwZWbU9h4MkvVRl6Tw9h1C94T6lPUWKl72uRwo9
                      aM2ZvYA3vr3CxlI9usCDvVG0nj0K8iK953GwPe9KkT1ALS47wUmLPYYMfD1jUUu96pohPa1tpL3l
                      2Zs9mCw4PGNzdb10QaA8UrMjPanktz3I4aS9IRS+PdUXlj2O0DQ9pcGUvUfxbr3A48Q8BkxVPYqs
                      r70KxHM9TuWZvYpypL2YLJk8CTKePQCI/TqLsKk9WFlWvBSbkTw1P8Q9PSE9vRUquj1FS7e9oAJv
                      O1CvlDvmeRs9uissvRgI77wdWqQ9gsxbPRAVPjxCHDw9MOm4O7frrz2Btoo91SCQPWu0n71AW2c8
                      DKK4vJsPyz1gQOE7vX+iPYDMp7xAOWW8CBG3PKDykDvuMqW9E/AavZwmzTy+t3w9jHa4vL7mkr3o
                      wdm8faCpvVEijD1LQ4k9wQnAPQoCRb1VlKC9jFDcPIYxAj0iNUQ9bllePS1wVL2Nznq9j7+OPUun
                      lD2w0K+9A7dnvSzcpbz6sD29KKIsPBnusj1guQm7LVWXveFCiD12zYu9nCmGvViuCDztWa29/JCI
                      var9SL0d+SC9mixNvagdYjwg/Tm9p5eCPRnewT2i8FQ9c20cvcZJjb37Ab09I8rIPQZmSD3Xs4U9
                      QBlpvSZyGL3K3xI9S867vWYITD2gOl47Le1NvdC8+DvvMcm9zkOOvZP5Or10Kfa8sa24PewTxLzY
                      5ge8KjV3PXR/rbwUp5o8jm2UvdSakDzMHpS8YAqbvZBrM7wqYbi9kKdxPJ0hnD16tnO9OQG+Pbbe
                      l70IIMq8oJYDvQDHtruAFtC8AHlYOlMVzD1009C87PQJvapWcb0gSb+7Ks+zvXGMgD3M4bM8DYuL
                      PbJxWj2w/6U7CaqOPULlRD0YrwM84tJLPTDdtjvWKjg9QczIPWQz8jxajG09Z06zPcB7CbthYIo9
                      DB64PGN+Q71WEiI9S5SQvWTO/jwYdHW8gHxyPB8etr0KH5a9e66BPQADyrssM7o8stYvPXjf/bwG
                      dBo9AGBbN2KaSz2+8Rc9f4uZPcB7nbw+XW49hy3GPVLIeD3/vb69wWmfPR5RMD3ohg28CMvIPACl
                      /Dlao1W9TRCWPRgiJDzwoCq946BcvcKDej3A7Qy72qunvW24sz1CBry9N7VUvRPCj70aCJm9eHHC
                      vdL6Xj2A4Xs8o9t2vWgxYDyXRki9T8mZPdM7Sr0U8qA8gjY8PT4/BD09zbs9UH2hO4n3xj0n98A9
                      CTSLPbZnPj0BVL49RVGvPVAKszu4sLm9Rj4VvZlxlj1TV1e9ypN8Pa6BdT2on208imw6PThAizxZ
                      18I96EmevaD//jucnYO9mkfLvYbfAD2CdnM9pOHXPA1sor079q09oE4BvYspyD1SJkg9JumivexQ
                      hr3RxZo9bFapPH7/fj0AqLW813K5PSQD8jwy02E9bmohPTNvbb3xmLM9EXqyPWABB70CVBU9Ejcp
                      PfCQGjykA9c89Ra4vRcXkT1K27u9HXiZPSHOxD2Q83W8SjcWvVinlr3YmKu9WVHCPcB42ryqlcu9
                      K1m5vWdAJL3Ai/K8HpAYPfq6fb1Y/ra8zMr4vBayEb3SLW09kbilPYoTYL1yLEU9NQG3vZMOLb23
                      aps9yGC/vTAVjDuiUzo9gMT/uj11or0jOTm9hxNzvWDL17vssIe9GwCqvcBbtTx2sgm9YDKGPDCv
                      +DtBxLk9XkwsPdf0mj2GvxU9AoFuPdDlWrwRi6897kFBPRQsgLw6B0s9IKmqvKOnfb0S7Ts9owp3
                      vUoitr0SURU9YAFUuzA/brzSMkQ9cG9RvGipY7y9+Hm951dnvWbhSz2p7Kg9AOjJu/+Zlz3iuls9
                      M69VvZeSM71Ss0Q9aEO9vPa/qL0iFLK9JJv4PNlQgD3N93+9xzCMPTe4vb0Al2+8SDnLvOI0VT2b
                      m4A9oi1rPTq2FT1QJxO9Xe4xveSW7TzHnDe9/mhnPeL9ZD1ip7y9mORmvFgHlDwjdck9u0WcPf9l
                      nD0wyD88gM1fOhEmkj06GFE9CPeWPLOpJb2nNaA9YBaEPFeUWb1E6fM8ukOXvf0cGr1oImO880Cd
                      PWp/kL24Ubg8d6BpvZRJpryl2ca98d+OPZ7GKj3XDLs9Kv0NvYBywrywyfe7QBRdux2Jw710f4S8
                      aSfJPVGvsj3qVFq990bLvb+OjT1K5ka9kAUCvNeOQL2dY5w9mAu1vBhkz7wK/EM9gylEvWUJkD0A
                      AEe8ApcjPSDF+LwcDvk8kqMWPYJIWz24To48C4OcveJjhr2TEWC9oEHju8DGdbuw21q92vZ2PUDr
                      MDwq6hG91U6IvagltLxIrve8pVCPvRjeyrzI2qy8X223PZgwkzwWVgI9MXnDPXKgcj3dtF69cI+j
                      verfUL33ZYc9mPZuPPJkAj2QKQY8wPdQu9Q/pTwsRda8BZqxvR2cwT0qJ3C948lqvQA1Q7xAHAS9
                      enl9PTCnILzQi4c7x3mdPe2VtD2wA129MEDCvbTehb3iaL69APY3PCGrpj3w3W88CuQ9vRiNILxg
                      Pq879WW4Pdj9oTzvG4o9kJ7IvRvcuL2LNce9NUTDvSZ2C70iv1g9jFiivKDNe7vdhSS9cXSuPVB7
                      GrzMham88HQMvRG7hD2iZCI9BJbpPAnfuT2faps9oHalvOurkr0ohHy80qkdPei1NrwARFG8eAT/
                      vNTqp7wix209fDHvPO2+Qb1ljL+9xrl4PQckMr3Aw2S86T6kPcCKeb2SLcW9p1Zfvbo3Kr1s/QW9
                      EgFKPTDxxbsOS6G90oM6PaBkCzsA5Rq9nZ0vvTBdATwctOk8CkZhPUylhL2t9Zk9V74wveJUwb0S
                      AFY9fFHtPDNJxD1e/2Q98fu7PRFqqz1ouMy8NQ6MvcihorwAfcM5SEe4vVh0fbxXwq296/22Pd1U
                      wD3gx/E7s+PJvSDk4LtLOYw9Wb/LPTDcXbyf+o89Nv0zPYqmHr00Zv48NvCnvUITj72dkUO9WRSD
                      Pc/mpD173709YM6EPPbAor0jaqS9lulKPWQ7/jzKdW09GgaWvQ6LIz0AJ2O7wBfBPPVxiL2gJvu8
                      FCTDPDB0dzytbLE9LKyHvVfSXL3XcCa9rqQmPShCCbxPLIM9vZiDvQ5YeD1d7Cy9EC19PGAhAbsY
                      ggA8VJOCPDu9pD26uS69afWqPQCGHrkRe709FhdXPRhvuL2d5qM9bd2CPXAhS710dqA8Jp0bPaKw
                      Aj1o9Eo8GEHRvKqler3Myo+88zmRPcLyYz3ZMYE9rAzcPN9+u72SAik900SQPRewpD3Q0bS9Hctp
                      vePuVL3eRTQ9uLeuvYD887rQ0sC7l6G2PYKsEj0G/kk9SHDzvJgZVzxVJLc9sqRdPUZYGz1G64i9
                      FigMvamdlj2GOKa9pe6UPaD717uw4d47lWe+veCLR73ojLM8fFHuPELxFj2oKNO8Qp91PVh+jjyy
                      00Y9qn0Cvf0nWr19yC29CX6GPeu/sr1Tk7m9f9q1PcLpXT3AT86822bKvSUdnD14Pt28cwSqvVoJ
                      lL388Ok8aFqJvQCauTsA4By71PEEvcyA1Ly/tY89X3zEPXP0xD2zn6S9JbSLvdg4x7xqs0w9FN6y
                      vLjopryR0sE9iD6SvUDbfju63qq956obvWMDfL2MzrA85R3LvcV+lD34k9y8lLXQvGBD/Ls+d1s9
                      8Kx4vHrorr1hh8s9RpBzPSKUGT1o/8S9UDUUvLB4+Lu28H49MSOmPXAAHLxsTK08Ww65PUDkpjxc
                      QAW99H+Fved0yD3appe9SKDCvM+fsT0AVtk5sauZPWDF5LvywGE9psekvZ7oFj1HY8e9GCBCvH6u
                      lb1QiAw8LbdUvTh86ryAr9o6kj4IPc8FgD0PRrs9IEWeu+VYgD30McE8ym0kPRr3Rr3TF8G9YCDB
                      O7CGw716xXY90QioPQyZ4jxEYd08oPoQvRC1BjytWZa9t3NAvWr+HD2MAIm9YA26u725eb2b+Z89
                      syuCPaglL7yCIqi9XpwUPX0XUb0qRBI9GKolvCAFyr3Au167/p9aPYBD5DsoGAq8xrlsPQDgZDtt
                      azK9hHn3PJSiszxnXbS9+hdKvSAk3ruiT0M9SQujPa0soT25Xpw908pTvbCY0Lt8oNI8ICriu/iv
                      obwA8rm9Ba60PSOnjD11+sC9G+G/vYyXpDya4LC9r+CvPSpfy73XhTm9VHzXPO5qFT3Yp729aci1
                      PZoyT73QnLC7/e+LPbY1Fb2A51o89K8BvUDjNLxq7Em980tFvbgwiL3gITy9t8S/vd3+Pb1QrKG9
                      2hdGPWMUpz0rTae9adG6PbXwkb3Fjrc92G0UvND9Vr3GYhE9be+JvRRgCb11z7g96FLCvX0xOr2j
                      YTq9AmQvPYRWzTw/pqE9kiBqPRjkUTwXbmO90u9+PTbnQD2v3K09M8eTPdS287zjTpW9NN8VvZNb
                      hj3l/Iy9ruY+PWCTW7u4bo+81P/TPD7NfD0qi0o99pChvZu/yL0/LMo9eB+3vWg7XTzt6p+9tLn1
                      vNdnTr1AR1O8fzvEvcCFpDyyT1g9NKLgvAYirL0KCA49ugWuvSCNvrto/0M8QCNIOyleoz3sguE8
                      9HLWvOf4vT0SWwg9iaDMPap6b70QhBa9Eo5DPXgnvbxAnXS7YONyuwDwLLpY1mq8KvxevRirLzzB
                      hsQ9HelHvUZwC723cJc9qOibvHboIj2KJCY9PNrnPLJOTD02OV09NVuHvbksgj2YrrE8b6jDPcrK
                      jr1l6Mi9AJ7gO7X5xb1AzXy8aOEpvMDYwrpiCA898P0KPB01rb3GFGI9mMSdPLN9JL2gqRm7aHvK
                      veya/7x0uf+85Cf4PJrBPb03dco9AKlBO3VNx70e5hU9qJxAvMKztL2wP5E7MlUfPRbsCr3hdqg9
                      eipNPTQwnzyONAw9JsyivblprD1QH9W7iGuHPO2AkL2zVj+9+iFEvdDVnDtoMAS8KDxqvC5xND3D
                      fbM9GodEvXDgKDx9VYq9PwW0vfNLhj02ZxA9/emxvSxtljwj5Y29EyduvcqHWj1IZ8a91MDHPA1d
                      R70GlTw9IyLLvWypyLybKbk9cLciPDBVNTyYrCM8BuhaPZkEiD2u2oy9Jt0XvbMZML1aSXs9ADfh
                      vGO3tD0yH1U9G8qHPdghpr1397I9zdeVvbSwrLziALW9k0y2PdbMFz1MNKw86COjvZcSJ71Cz009
                      zlEPPZiXSbwzF4k9qFwJPPQwyTzQWUM8Ux5nvXBCYTzYBJO86uZwvZ3Vsr0wqug7gbiEPQgkkDw1
                      soq9gBa+ujG/vz1oyH88zIynvDAJTzzwD8a9odKaPYgbiL1g7kq7gMmbunaxLj2UsfE8kNh6PMrS
                      HD1TCmG9kyZzvZgW6rySTKy9jKHxvNCZ+juSJ1k9zOTfvEBYKztY7EO8jCauvBJ6Sj2eYDM90jqa
                      vZyDD72s0dg8NM6RPI6oAj0jc8a9ANupuei+fzyqn3w9/WPCPaBUgrzJu7U906S6vUAVrTyLico9
                      XMaGvcAarb3qZxG9iJq5veHelj0hZ8M9XkhcPftilT3RHck9NwFuvWAeSL06/Gc9WHOmvDIZDT1q
                      t8a9MeePPcy9gr0KumG9Rj2aveiWhjx5q649x8Z5vUyK1zyrS5Y9r7K3PZBUQrz3g409AEduO63V
                      uz3O/aC95wGxPRKTYT2QNq694AlrvQDwzrsih3I9s6qyvUjQ2Ly3BVi9IMv2O+yh0TwAVgk8GIv4
                      vIglxzz50ZU9Nvc6PS0Eo702fmg96ko/velZuz2aFAQ9kSSePaOWTb2Xlxu9odirPdZrJD0CJkA9
                      k/ytveg2vLygIrM7Zl1vPYAli7tVOaC9ZYSIPe2Cgj0hjbI9ng6qvVrEPD1gURK75ZqAPfKnnL2G
                      Cpe9OIDVvPS+CL1woLa9PM/fPMDUiL2k0RW9wyu3PVG+yz2Uf5W86ifBvS1zh739phm98JSavdTY
                      pTzWuWI9INiZPMlctz1yhBw90cu7PWH4qT1oQle8DPTzvKO6yr24D8m88lAkPbidwjy2bkU9UDFU
                      PPSawDyMisa8XwW5PbrafL0wcTW9HSdtveKMOj2Smry9gMZZPGvgsT25YbM9EuYhPUk9sj0Q/5y9
                      hreOvT3FnD0ANlw5M4mxPSSq7DwdoVS9AMLzubicnr3YA5O9+i5Hvdeanz0Firg9sOpMvbffV73R
                      DcA9eDj5vI1Frb0+v4+9km5vPSDBwr2gSIQ7GH/bvKCairz+Okw9eOufPLrLJb26+iw9qv4ZPf2O
                      iL0oXpo8oF+GO8Q3/zw3JWC9RxQyvcRSD712wZO9/SqUvfd7wz3dIyG9dmMCPWjrlr1xN4E9ccSM
                      PeLFYz2gzpU86XDCPWD1g71FksS9nkanvSouKL1jVrS9QLeEPHBCETwAgfO7gK3CPKWzmT0hQp09
                      NliivRLILz0CKq69vb2lvXJbYj3vr8e9UFaQvUGpuT2ZILQ9R+YZvaAZ9bwQlIG99HvIvM3wYr1j
                      TDC9nw28Pc5wMz3lf4g9uCfcvBPldb10MaU8YM5nvUKoub381fA8iJz3vF05sL3gGI28yslCvcCn
                      Sb0aksO9BsMFPVv0nL1Apjy9/YclvbFrsD0K8CS9+GyJPK+jjT3eagA9AFURvPcJs70+Vyg90nYQ
                      PQCPe7zA6gA8TSJYvQPuG7082oG9tLoXveIWlr37S5U9IY6MPTAqer0dSaa9xfievYRF/Dx8OgO9
                      MJZzvUyb7rwGzBI9m/OUvZARZLz2S2U9+zmgPSfCOL3A1Hc7nSq9PaLAWj2o/1U8h+KaPTDrcrzQ
                      bKK9cCMVPChfM7wMDNY8yaSxPRMVtz0Oplo9crazvdY0BD1iwmM9bDvVvFBj67tyysG9GAdrPCB6
                      TL2tvIK9LahrvSAiqbzpg749YN/7vIDdyjzmuhO9hnQXPWA8MDsiTCg9BQ6tPaD53LxVc5S9mbyd
                      PcfWqj0gpZu8AIi9OUCFADvtSja9wBlIPOy4lbyAuks8UmRQPYsItT1It6M8MBIWPK3Jcb3Y0jO8
                      6J+7vUPDlj1gwRI72bSKPZ1CYb2JuJA9oCSKPCfHuz1YZla8oDSEvNKCJD3eOUE9kokmPbwg0Tw5
                      XrQ9K8vBPZMxor0Aig050Crwu+DMb70Ey/Q89JYDvRfRkj0DpTu92LA4PEwogDxShRc99wfDvTBq
                      O73wuBo8Vy/AvRFCyz1q1TM9+ktBvaBPvTyhzIw9w+N+vUPXwj2gOgW9EDIsvKdsjD0A9EC5ICaY
                      PJS0Er0Iu5e9wAzCveAwD73D2Kc9OMWxvPAIWbxKT3K9HbOPPdyX8DyI0KC8xC/OPFSk4bxF5bq9
                      ergSPZYYMj0Svhc9QtZJPRSMprxM/Yy8VN8IvVcbdr10Bak8poGjvb4ieD2BXbk9DHPfvD77RT3S
                      1QI9cGtSvA3Iwj0lTqK9isIuvdexwT0CDG89oAlou4B59DuRmbw9YWaCPVqeJr142pM8A8NWvaD1
                      Mru46KY8CeO0Pb3KU724oKS8mDVQPOA8wTuJIMQ9nrUbPdBicDyHGrQ94HgovVVipL10TcC8AMZE
                      Of3Ycb3yeXI9ANMCu9Hnnz2jiJe9wIBuPADoN7wiDbm9002uPQNMQr0+iCM9BtVDPSZ9WD049aa8
                      OJ/avDYEob0UQRG9nU4cvVhpC7zLX6w9lVmZvSQdir1AUAU8J/m+PeIELz36sWS9Z0iaPSgTCbzw
                      LHq9BlaRve4LFD19YJq9jp8mPah+y71r5sq9HeFivXhU/Lyme3U9QgBtPcAYNrts7IY8qvxdPVzS
                      gb2AooW7sGU4vR0vHb2YbWW8DBzbPIJKED30ohW9UE/WO0HlqD1OWiA9gLPOvPfoWb1gvLQ86y6/
                      vVKreD0Ltss9ASGhPTRWEb1hKoI9AOdNuwB/MLzTn029XmhPPaigO7yFs5S9wAZxvGYdfD2/wMW9
                      4v88PYMrQr3mems93kBYPXkPxz1ft5U9w4ygvR8Nxj2gmpy7sGRJPCriab1OzEQ988KmvUEPrD1D
                      gCK9WNUHPJjclr1ufR09iVTBPXAkcTyUyrw8LUOevTCuHrzZj4k9xpmMvRILs73MWYk8QnmhvcoV
                      Qj1Xgla9wuBkPfxm4zwgz987MrxaPVleij3Yyzc8sce3PSYDFL2eakY9UWS2Pb7Ogb2YWpA8YOkp
                      uySj8TyAit+70jJ0PR1xvD3FUbs9R9pGvb24Gb2x6b89o6BFvfS+zzzjpZu9ZNKBvWPUSr1rCqE9
                      YfHLPf/qiz3ohYI8chWJvQuDrT21dbs9QEfvul0jKL3n7Fy9QUyHPcNjor2ioD09VncUPaI/TT06
                      R0+9wKHbvCyZhb0dLW69V8xhvUetgD2YnLe9N5eHPWrqST1Ikb69KjJyvQgalbw+Q2I99lIYPVBy
                      KrwidQ49PWPMPdoOxb0tNcA9YCLNuyT/8TznIVO9iqaAvYD197utaWG9UN0xvQUxm73D2za9BHX5
                      PEoEMb06Tpm9nwCoPXmguT0ylZ69kLCuvUgQvr3KYze9gNH4utpta72NFbe9sdqjPRrYCb3YPgU8
                      x4nDPbZILj3Ndsc9LW6zvQMmJ70aJVC9du9dPah6SLyADnu8NiEZPdMGNL2qkko9x2XKvawIvbxM
                      Y6+8QsgoPffmoT00Z/U8FzU4vYz0yjwILYU8dOT3vECP6bqNDCW95zaOPVOEbL0FXIo9NryDvYjS
                      jL2jOcc96E/gvCI0PT1voqw9OkUyvf2SIb20rhe9OsqqvXZSDL2fUcG9dILtvJUgkj0Q8Se9fWxQ
                      ve4Njb1JXIQ95EEPvUKxm73oxea8Sfi0PTolY72oEHo8eH3BPJpPaz0OTam9wTyxPV05fr0A05G7
                      mNeyvQmZvz24wsA8whRTPWpqAT2qLUK9puMBvWCeObv31GW9IMa+vVFNnz2ly6i9klKqvU5JWz0S
                      N1A9YJ+evPyD2TzXtjG9zLkQvfiQiLyg+p67Dqt1PeX9yb3AEua6lQPIvWK0Nz1qC1Q9V0spvb0K
                      gr0Y07M8ooJePVi6o73+kJW97OubvACuEbxA4Dq9xZWuvZ3ZV71CY0Q9ZL7xPKB5lDwydTc9IvYX
                      PSAl8btK6jE9++LBPYVOjz2hj8s9OrNfvd0RH70Z2a89VXq2PSD8tDw2u3w9SZO+PdhweTyS1R49
                      hMHrPI/Xtz10uOC8QIVcPAAPcLtq3Co9APAJvAXUnL1TPlK9SrRDvUAIojwUA6w8CiJQPVDxy7u5
                      zMI9/VxCvb2syb1JJ5E9hrZaPVBe57vJvKU9narEvRbnnL0+Ug894trDvezL4zz7Sbe9T9aZPf0P
                      o702iG09skAYPXBfVbyAYgm8ctIbPYnKrz3CXT49DIMOvajCmjylPMU9JX2/PVdbSL3Nwbk9qC3/
                      vDM9Kr3SkMq9KkNKPSocUb0hUYk9+NyjvYH9tD0+TAQ9Q25dveM2o71ahTY9cHUHvEZ/MT1AtDi8
                      RPmDvYRE3jzKjmG9a76vvZdqqz1QMV69wrt4PWA8rb3S7Do98wCvvZi4lrwwoq27m2y7PagIazyk
                      98887AmQPKWKmb2gMvu7qzeKPROmPL1eZSY9hFmAvairIjzJd7Y90K2Ru1B8rDsnXKY9s6NGvZ6P
                      qb2HiCC96HRKvNBkWjwyq8W9LHMNvUxnoTyygKS9orCwvRPYjL29+ku9wwWmvYAZ/TvCRgo9hCLt
                      PHYbGD1x5qs9uIuBvICuWzy3vFG912C7vdBOwDtwzw68AMeuPLreMr1SnWQ9lHmmvCw72rzPmYg9
                      /yKgPc70qr3gs/u7ahaSvUqZUb2Jrbo9mAt1vJPfQb1ggdm8QC5uvZM6yz0GgJ+9YEOJvOcwnT0S
                      bLS91hcBPWjzabwkevc8cqlDPUAUhzxtr649dcm3vf1No71oJuq8QF5+vaAzSr1tg749TBOiPKom
                      BL1rvZu9nxG4PYLsm70R7JA9c5uVPWd8rz0Yu5M8aKu1POZSBj1ghzg7xW2SvSgVZjwBCYM97R3C
                      vQLEcT2Co2s9oFqBvBmBlT2gGrU7aFWXvSPumb2babM98N5BPPiDlr18JBm9ALCat+p5V73eqGw9
                      xJXVPEjcr7ygvAI7bLfwPFilWzxZrsE92F83vCgPyLwajUC94K7qO8sbwL1FL6S9aGFTvJhTpLyJ
                      48Y9F2ibPTBu4TvqWGK95pVAPU+olz2rloY9YOgwvWd/rj2gv4m9hqJlPbqdLD3sL5Y8dD3cvFgd
                      1bzH4k697TZtvRtYx71CLjo9qXWtPfVUlz1XLDy9dE+/PNe6vT0CORI9QHZuO46DYz2ZQoM9sMUN
                      vdenjT2nHLu96IROvPPpur3giok7WZuHPU4fo727WK49HixQPQ8cwL2YjF68yWCSPY1xWb3q8Wg9
                      0w8tvf6gk73HIss9PPz5PMCnCr0y83g9/JMRvbC/cb1GBj49ioklvdsfp73oEg0842t2vYJXTT2J
                      PKY9rZC9PTIrTD0JX4Q9+JjGPBh9jL0qSA49AE6+vNCQUL3u6mY90q0oPVl7kT3S8z89LAUDvcns
                      sD1UovK89HK3vHuKwb2L95U9QGWvOkJHaz1Cf4y94CnUvCu+x71gttA7IEWHvQDDNjooWOy8QzZm
                      vQMhkT0kQgC9oz+cPYBQ7bxhC7o90C4yvSHztT3weWs8bJC5POHjvD2ckvs8IxlQvWowXj3lYZO9
                      Fx5QvfOLS70CjWM9FfiKPfaWFr39Goq9a0WYPR5RVj3qxIy9hFbNPCVawj05j5o9p7VZvUz1Bb0J
                      3sQ9t54cvUB6FLtUKZQ8EsoKPdpyRT236ac999ysPf/twD1wPWO8YcqxPWvkxz2g7d677BXSvBdO
                      tL3oI5u9XTjEPeMGqD36VjY9iRKiPawZ1Lz93o+9ez3AvfKFs730dPs8AHg9PD5bAT2AKWG6HYBt
                      vW2Djb2odYe84EisO7P4bb33Smy94L2Fu1jtMLyC0WM9hqaavcphu72AGnS87Ga1vJXSwb19AT69
                      zk9APbMRXb1xerg9E7S8vbBCjLu9prm9SFeKvC3YvT2D4R+97yabPZAjaL3Y5t+8YOPoO+BakTvt
                      rIk9xt8QPdd1e721Po+9+BGIvKtZjz2SLAs9LwiDPYKfJD0oKaG8w8svvRjIY7xnrVO98Gk3vU8A
                      lz3Qgde7EiUgPeWzrz2RD6M9IplVPf2HKL0BmsI93Ua1vU1GnT0ErQ69gOmsu1UPvL02RE89zZJG
                      vUBrgzx/SrC991SjPZKSSj04bPG88F9mvCphCb2oemC8eC+4PII3Uz1sU7E86kR5PRgeO7ynYrw9
                      1PWaPMCeDrvyGCA9QHD/vJ8+nT0qcCM9ExbCvbbkfz2S5Ky9hvkFPeDAjzzXAE29kth0PVHIkj0A
                      oRy9OyuUPfqTMr2OtH094L1IvUf2rL3tyL+9NvoKvahW8byH2sU94Pudu+XDrT3yjRY9yQiMPY1H
                      Jr0SiBc9JF3/PIb7OD0EmhW9Y9ecPcDGq7zkweU8F1zGvQndpT0wqz+9tXTBvWAk+jv11IW9QcWX
                      PSwcuzyA1pA8VfmFPdb7Qz3IPZO8eOiUPJJ7UT2M8ee8AHmxPIFXsj2sU9a8lAncPGLcqr0CobS9
                      irgqvYKJKj08A/A8lIWtvDJFkL1Kg8m9He6HvUL3az2CpjY9SFTGvVo7Gz1YPZM8wgUIPTQ5/DwA
                      eG48UX6TPeIgJT0UT/48qAFcPAhesDwzJ2S9uLWZPFioh7xjcWW9slc7PUK6Uj0AKoK98NpCvD0G
                      QL2CBWU90PkGvKWzhr0iRDk9v/OvPSodbL1Arwu95qtPPYBEkbrXs6U9MPY7vbJwYD04C/u8yD2h
                      vfLQi70oM8S9A1OmPVF2pz3eiyk9Yyw1vcDBXbyyfAg9+cy7PWcKbb1X4Vm9oyWSvWaWQz2BPYM9
                      4Hr5vBcPy737r8u9SsIRPUB6HzvYL3G8upMyPWxE5Dxo44+94G8WvVMcrD14goq8SVWbPQgOs72g
                      +pG7WL6HvZLTcT1axJO9qgcgPSp2r70Y1uK8TZ15vfhimbw485C8dCPHPOjCRDzuxjs9ohBTPQAf
                      qDzsKb68Bms0PV7CBj3APw29zT1nvZAAVr0ACyw8tmRMPdMZpL2gPdO8832gPW1XQL3i5BU9tyO4
                      vSpitL3AhvA6gLV9vVZEXz3yRzY9TSqiPTBUv70SniA92vVtPRGGmz1y9m497A6CvQEytj0Htrw9
                      jXWFvWB0tL0Mc9c8gCeDPAD4JDo/aci9Mn5vPRnzpj1pOow9gB/qvMZeHT0YgAY8HtE5Pfryvb0T
                      ere91mN6Pd27rr2VwIw912iqPZHgsD3D/529Fp15PQy/zTwglcU7kTDCPRLEmb1gnGS7V4ZyvZep
                      pD32+Uw9jVqOPaeQS72iK2A9Vp5XPbpeXj0obYC8TcqLvfvZj71Clg89ikuEvYXajT30BgK9SPqh
                      vACmnjkauyK9EHs1PL9Qqz0F+Iu93wC1Pdjp+7w30sc9GgO4vaChFLvABMc8p3VwvQw5/7wri609
                      AD0pOhKzWD0A/EK57ca3vS4mFD1WnQ09sMJJPJk4oD2nv3e9MOK9vXHlsj0SMW89Qh8vPQaahr3r
                      LYg9Q0SJPYBu+DqatnW9AIYnOa3bOr244r08VOWtPJWRmD1SYAs9dJTJvM2Nor0gSZG9qbCzPS03
                      nz0oPCA8HSitvQB3abthwJU9gkAsPUQZE71sE4C9y66cPap2lL2Ax648NVvIPaeBub2nVI49oniq
                      vZNiuj2KbRA9KmlIvXIRID1t18G9LBLTvA2lhD2J84g9SGGFvLJzQj1gK8I8kSCxPdBMEL2wnTK8
                      EMU2vOw01jxtjUO9JUaTvTK5JT3naLq9YGFeO7BUCjwDmJY9AI5Suwobrr1Jp5M9EiMpPYfxgz1n
                      naY9L4uxPT9NuT3MvMo8CqZUvTZAOT1SNDE9gJm+vBblWj1gMKO9P5HHPZiql716OzY9gMzTOnBu
                      B71A1FG9IJa8PErOXz1YVoy9wKDGPMAseLwIv/a8/sSqvVCBtruYdJu912bHPeohOj0Fg8i9+sSt
                      vURL8TxQ4jy8troTPRQi2bxZ1Zg9AJALuV4UMT3tpsI9YnRZPbH+kj3Ucf48oktSPWJvXz0v3rW9
                      qCJdvNQUvLzPxoY9Q6o2vUd8t706Zxs9vXRrvdBQYbwi8iA9gAWIvaqKi734Drg89ZGzPTdGtj1O
                      R0c9kyIavf1nXr1i2pK9EiohPbCC+zs9eZ+9s9F0vS3+rb1qqoW9w5WKPYBT9bs7J6I9Ek5DPXi5
                      vzyKzFK90Am6Oz6RQD2NBoG9SP6kPJl6vz3wLD485FfzPGDXrDsA8E67KU6WPaAxxjvwC088IIiL
                      vc6MJz0pyog93fWRPWc9Mr1cB4i9gEKrOm4ENz0AxEc8CICrvLm8wT3y+Ck9adCnPbERmj3oZdi8
                      4O3pOwCYQDstvaw9BhgEvfrPXL1aynU9AJCNvOZYIj11ELa9Up8aPVDogb1QwZI7BZOpPW3pf71z
                      wac9JrsoPRBFK7xiEH49ybqsPSwWkbzATx68Qt8tPQAaEbmwOPe7kBNNvQrCTj1KLQm9YIHCPL2q
                      yj2KWSq9uSzKPQyA87yYdoQ8B3evPTVWvj33WWG9qae4PdDJeL0TyrO9gqIpPaqQYr1iz1M9Lfac
                      Pd3Dur2/Wcs9E5UevSKtET0mF4m948KPvWIwLz2OMwQ9M+26vSc4rr16iIG9owSwPf9nlD20gw69
                      t/O8PYcdNb3oR7i9IgSuvXDwabyUkfe8uMKFvRgqo7zQvOw7AMDvOua6g71RmLA9+oJNPWCT8rxQ
                      wso7UM+Uu/1brb0kKuA857cvvY8PjT3z1rU90FHCO5tzij2zKnq9UUSTPQDi2TuA5mS94MqSvZld
                      pj37QKA9w6yuPeEMoT0VhZo9/l5pPfaFCz2X5X29ap0nvf0Sbb2dxJU9M784vWeTxT38i4S937DL
                      vYnniz0zJLY9wOpXvFL8lb3pkMI99ypfvZ3mUb24nqM8+Y+2PffWtb3q3Wm9kXavPQCNgr10rOk8
                      gDsAvIDK9bu2iHA9UJxTvCiiFjxJMYQ9Q9MkvYvXvb3Vb6K9MGuwO41DkD1YlYK9I2W+vaIGzL1T
                      JE69CBervEocJr3gIDm94ZGmPS8Wyb0U4wO9P13EvcAfb73haY09CH+LvcAcLDzZN7k96ikUPUAR
                      4rodJB69olLEvfr8Yj2zqDW9217CvSkshz0e2hk9WsQjPSz4GL1QGkg8qv+6vZiDojzhPJw9nC7m
                      PC2Yqr2gXKK8uT+BPdrlYL3wLXi9oKBlvTAZ3rsXRlm9gOa4O5A8ub3Pu4g9uhPJvZfYc71QTqu9
                      fZCTvaH4uT1FD6u9IIg4vaAnizvf7Lc9spwPPURm+jwZlYY9wSiuPfGCwz0ALNc6I3eePe97nD0c
                      5uw8eWasPfLaFz3QQTC9smxvPao8HL2y3AA9HmWivQJqZz0Bvbs9om5TPcqOaL1ahjK9nxa5PaTM
                      4TxAhkw7Zq0GvbBPrjv7ja29AEBUOlcMPr3pp5A9aDTKvWh4szx63lY9KhxIPX0Zt73qUTk9OrA/
                      PfCEbLyQDC886KuYPH0ye73WzBS9bc+2PWBikr3Z/qY9JDPyPCn1sT1iMXk96qNuPY4TRD1kZPw8
                      QP2wvW2FjL2IPIi8lxi/vQwjnbwX7Mq9NttDPSeyjD2mvxW9+Ym2PViOMbyJyMY9jupEPZsFjD0A
                      gwG9xm8QvXq9Gj0ANI29iVyKPV8ylz1YmZu8cJOevemfgT1kiuc8YB6svUAXyzqAjrg8Dem7vY6R
                      Oj2CMlo9AmCCvd3oXb3EHek8RJrcPJo0qr3AVjY79SCMvT59Fj1MMsc8cmlfPQCAuTyq7Ly9YFg8
                      vXCVXDz3u509+Hz1vPPTfL1NOqe9QrnKvfiFmLy24p29RFEXvUYnp71tKYC9Y5mOveiYNDxLUok9
                      55ssvVBKLb0CjSw9OnRGvRaYFb3qDju9UzrHvZreFD1AxUk7YMnPvB6kBT1iGgg9mbKsPUC6ADwg
                      dZ478rBCPQBpObwGoQG9jJmsvEC7LDwaNMq92zCVvYnFlD2oENy8omyGvbEKij0SRA898k4UPdo9
                      FD1rsrS9GE9aPFCTtbtIhLS9Yw4kvS/dxb2fQpQ9AMu9PLD7Pr3sCLu8ALg1Oro2XD0sU8c85pQk
                      PYAj0ToA6Ru9W0PKPV3SrL3Du8K9/EjNPGhY/rxNAJO92nxgvVbVDr1SqyI9uukXvferQb2YDno8
                      TAfPvLd/R72Qp2a8oKkmvZD5Xjxl66C9dy1mvd9suT0KP1w9BrUIPUBehjwnaJs94xd2vVrAcb1w
                      7Fm9zS+/vZTv8zzQsyC9ybSAPSCQ+byJYp892hJiPQLJnL2m/pi94hgiPWLVND2lYLI9aFy+vE/I
                      tz3kHdg87ihoPWynxbzkQug8YG1qOyd/fb3hLrg90JV5POpmbD0iyI+9/jKqvV3ugb20tas8DjSJ
                      va4jnb3yDbe9fN3wPCcGsb3ob7I8YJctvfiU0rzDHkO9r9TJPWCORTtdepM9QSmVPWDnyTvaWHQ9
                      oPAKvce9w70YcjQ8yl2HvdDsZDyh65s9EhIlPQCqDzyeaVA9CsBevUE5ij0wC1i9nqckPWCoIbse
                      JYa9DDMHvYHGgj3+Fz09iUWFPUgIqTw6N2g9TGO1PFFmnz1wyiC9XdGQvcyQ7DxR6q09qM6CvdaF
                      JD04e+a8oHlCO0AXyzpqeSi9BNvxPMtbgj2APl29WDghvAEYkT1NS2i9AIwHvbDPPrzIBo48wJq2
                      PKB1dLtjV429gDMxPIDP3TqAosg7DEyvvNBfFzzeWgw9gCrgvKdWrb0Fd4+9nwWzva6jWj0Aoem7
                      iFDpvMAkHjsYYAS8iQWgPQ/erL2tsXG9LtQwPdLBmr0WlSg9jlICPf/wiD1maiA9NFPAPFj0dryt
                      OJc9EZSBPYb3jr0sSoq8mQDKPcHLrD1gopm7GmRovSh9ljwnSr69mm03vVcpvj3rfYc99e2sPZtu
                      iD2qW3c9gMJEvFVNmz1Ld4+9gO/gvBZRqb09y5O92SmBPUXsk72aToy9+h8LvYAZxLyg7HK9hXe7
                      vRvluj3AXDA7WLNcvEBERb0abQ297Z+1vaUUmT10fZc8lmNxPYBDiLwQd1W8DWQyvXiNwDyymHI9
                      IIqtPNDsJ71XjDW9eG2hvZ6mlb1qXUw9oPnRu74lJj3ahGC9sEEbvX0PiL1gjjK9QLHUOtBVXr0N
                      pji9UF7Du2jMsbxLGqg9OuKsvZO/I70QqCu86NqwvGgGaDw2JEU9AFSpuzO6tT3uAgQ9SwazvaWi
                      nj0Am1i895W0vVTIizwowkK8qAegPKhIJzxMBM+8fdW5PeKtaT0wPiA8gzlAvVpkKL1WZkU9MVur
                      PWb4E7228Vs9/dEsvQD5iDvkvIu9vSDHvbktvD1yOUo9o5YdvdBkg726ewu9c7d7vR7sdD2UTIS9
                      OpU6PU23hz0wBIy7kRG5Pc5yKD0GGXU9BcmnPRIOpL0aBHI94gtDPaC9Abt2oYq9We+MPWIdYT3G
                      jGA91aCOPaxp+LxsbeG8NxowvWB1i7uPgrE9KyWyvYFyzD3HuLm9bA6vvE2Llr2AM7S6Osx/vaY/
                      YT2Aulk8xg+qvSBk6rwv/sK9Il2jva2gs71yPAQ949DCvec7WL2KuSq9d+ecPYLrHD3lVrc97Ffz
                      vDDW/DttQLC9JQC+PfAxUzzSspm9Ar96PWWgub3ouRq8ahKxvYDbab1GER89oP6avDnVoT3CZwE9
                      FD3ZPCAOvr2dUx+9lBkNvU8Jyz3sioY8iFG3vT5BMT14uYa80CKcO0e0bL0HBCu9UD5xvdABvLvS
                      /qC9uwKhvQaDlL1QqZQ7RsVOPdATBL1KbXe9YT+NPTCYQL00KPS8SKyzvL3xx72k8+A8YyzJvfCi
                      Uzz2yhg94Me+vJPVlz25lJ49oy2Qvdh8bLzYt0E8VNrfvGb3h70w0cw7B1uGPalfvT3WP6a9gC21
                      OlicubwwnIi7GJuhvZbMlr2Gy4q94j43PYxlFb3kCOA8pXeQPVD/8juaU5292GeePD2nRr3AM769
                      rJKRPGJ5vb0lraS9WPS9PBrhNT2AABy8oNDQu0BytLzALm69fkcFPYIlST2uGjE9oBNTvcCDRb2A
                      Qb480A41PMvOxr3v37U9GLeMPCbZXz3U3sm8wmQvPQExpj2USue8QA47PIAL9zrNr4S9DBCMPJOS
                      X72SpQ09o6CgPZeIT71RPo89ivENPZgsSrxKKhi9oPHrO6jYITx2d1o9cIKlvTDUC713r7g93hVq
                      PZD0Cr1SEGM96ae+PZcZwT2UfhG9icyFPfEshT3OhTI9gIicPF8rwj0iVkA9JvsXvQDgrbprQaK9
                      ACaTvaC5wTtjk6q9ETGuPRWfs70UHqw81C3+PP0mvj0MOLG8QCZDvSDlzryw5427umgbvaKFtL2N
                      G4s9AHQTOlAL2zuoC1Q8skl5PZjWVLwg2Sa9YCJYu0GAhz1/GaY9DUyYvQv8u71sKey8IgdvPUoe
                      Ir0JV5s9zCqhPFVjj70gifi8jFzjvK7HpL2HE4U94I7cu6hTXryi6zE9jfTCPcqSH73Rm789YAIA
                      O/AKRr16X0u92PqdvdZCUj3TPpY9lMGUvBmEwT2Uj668rA/UPGRv1zy6Ii+942CyvTCgUr1+3l49
                      4NWdvbQQ4bwqFjA9sO4RPMCJNb0efFs9NHznvLESrT0CrsK9LZJivQsitT3aOZ+9rg6svROguz2g
                      5D27EuFvPc4Wmb3qNk29qTu7PdiIxDzQ9Xw8YEsUu8FphD2UL8u8rj44PRSziLwu/D49KwqavWug
                      jz1/yo49YFahu6YTAL0JTpM91N2QPOCKVL1nzbq9OscvPbdbwj3N7H29Ab/BPYLnSz3A7HG9kGt0
                      vWCCIjvNRaO9Ivo2PVDCaDwQui29cCtSvaDJkDvTPbm9PmusveDHpLuwDFG8qhgFPcTR0zzQvLK9
                      QLMYvUr3fL0w/f27qBJ9PCAyjjuAV8k8jRhwvZjrJDzw4KS9aR+IPcANIL3NV0i9eZqbPWhly73m
                      DKe9EdihPeCOybsMyw29aHHHvMrYSr1gCzu9hUnLPQAc8rywqQo8+4TJvSfvuz2k7YO98hQ8PZbR
                      h71YYie8fSGVPWVpuj1epY29xhE6PbJdDz3SZzY90LifO+hxFjz0Gcg8dLXrPHIjNz2XurA9LZ6u
                      PZfhJL3gzZ28g56APUKPND0hf6Y9ZbmXPSyJ57xgAnA7IMzYu/Cmyr0VMbk9kCBSvHzVD70CWlE9
                      zoOZvV1Sjj2Mb988mHaGvYDpjry7p7e97TKyPVeFjD0wb487JJuLvWgOBjzxQr49JXmxPY0AM70m
                      LX49AHXZOehlU7wtyqw9yA6cvfataD1W+gg9eJ2evDRp9jwTkrA9+v+ivQXTlT2Oz6q97Cj0PAC6
                      uTnP0ca9pyfBPecjT71HQr+9rcWlPQYnPj2QogA84k8oPRb0RD2566k9WL3FPKhZhDw9tkO9Z0pj
                      vRJTKT2A+Be8pNvPPGXytD11p6u9y6e3Pfo6Gb1w+AK8SisVPZbhZj0TFJi941V4vYwuy7z3One9
                      Ar4kPdCcFbxtWco9CjtXvbQT7TzYYna82P2PvJokYr2wRB+8iAWYvEYdFD2Gd5S9zvcXPf3JhD3u
                      uzw9s+BuvXTJ8DznEFi9AklyPSrEZT3+mFU9eCC8PBABbzxA3sI8qt9jPQCpAToO1oC9TJnqPJTx
                      sDyoy8q99SiXvRD5gb1KaBQ9OvVRveyTizy5JpQ9mux8PYVvhL0i5Gs9dw4avXtWxb2w6jY8YImN
                      vN6Wcj2WWam9lpIRPQ3ZU73ov/W8iKCevfCIrb26iTw988Jevd6zeD09GoU9UqLAvYAXWDwqNAk9
                      8F27vY6Kbz3WjhY90u5uPY7+GT3bxcu9HdqyvdtYpD0Y/vS8DLGfvOjyrLxgK7w7gKeiPJtKw72g
                      IaI8oDtcu12rGr3g6ay8+LmePEAbOLsa6jY96DulvcblBT1gDFs7Kroevdy/hr2sRua8FV+0Pdxj
                      Br2UsN88A8kivZPgrL3C5I+92NstPBWxvL1wrnM8GKhJPBL3JT2kUN48y4WJPXmZwz1aVkG9qsgK
                      PaLRUT2JxqU9/wqyvSC+4rspYMA9Q7pwverjGT0wSIO9LyehPXh+rzzAcQ88U/SXPftekT1oiz88
                      fEQCvdPCpL3Kk7y9AWegPTB2rjt0S/Q8Am9GPSiunryDgEi9dssYPQj5lryBRK09SqQBPd4VUT1m
                      R4C9gRGMPXzL2zyoUxm8EgtxPaOOq73pk5A9kKJIveRI6DzoNbC9Aqo8PZThgjxXLUO9LvJUPeFp
                      gz2wjTo8/FOLvTcaHL1hNKc9wJ7vOhACB7xx6L09wDNJO2E4tD1BGbQ9dylGvRiKrL0ycig9jN/a
                      vDMUrT0AQf87+wDDPUC4fbsAUFY4ayizveXNwb39Z3a9gI8DvTm2wj2nuJI9grN+Pe1oyT1p8bg9
                      lGLsvFuPnb32p4u9xTeSPe6abT03+q69oCTyu0z9izxQsjA8EEYKPFUGpD3rJ6C90O3Yu2Otnr2z
                      aG69BpNuPcIlCT1OK0M9w9ldvRqVUL0K6iE98Pp1vDipnTwoWik8byrCPQ3bOr2Olhc9Ld23PdA+
                      cr3QEIW90pYRPRPirz0Y3GS8Sr5QPTBaq719wsA9YGA2vR0tub2wRhq9n5XHvQ3ncL3bVpk9Unoa
                      PXNmjz0BBcY96o8+PUBqiDzkHt88DTy6PVh0lzwUh7M8blJnPbpQYz2D7589AIldPLSAyjwqpBQ9
                      AKgdOjKEs727O649Yi5nPedwSr2KTLm9eaG1PeFntj2g3AS7Y92MvVhuh71Kuxk9RhqDvU0AaL36
                      JaC9wJGcPPr8hL3puKA9HltxPWB/UzvAXMe6HH3jPFgwJTxAH8k8sLxfvJJcCD2E4vM8ndCUvff8
                      sz0gg1i9xE4FvdeaUb2TDII93SFLvSBVuL2Mlqm83RaOPQB0j7rKfx69ZbSnPfJDy73GjmM93Wi5
                      PbiIpryX1We9APj4uoAKsjvDKDO9d2e5vWLFND2jZUq9F7a2vUlKjz0ExIu9wohOPQTU1TyADC29
                      aHvFvJHzqD321FI9eO+IPMA4iLwWcxO9wPOBvSkpjD2VH469Ltt0PS+jqz2OeIO9HOviPBgzW7z6
                      wje9hBPtPFm3mD2yKhU9TNaWvAfdhz0AyPo4O/+DPUiT2byuQzY9+EaEPFV+gT3ZBsU94cSOPRBU
                      qL27p5y94u2WvQ0bkr140MI8uPLNvKhDFTy1iJ09uP6aPBrQa71gY5K8WPbEPDFCjj1QQVu8hyC1
                      vbPgZ725M7k994m5PfDpbr2h2bI92uKNvcBSvbwA0ow53l+iveqxGb0lsqg9A56gPRrbWz3KqIa9
                      1CDyPMBKHLxvasW9zX1Mvd3swb0lppU9kC0rvZttsT1Q2fE74J2XvHB9JLziv0U9KYuIPVDQK7x6
                      xT09IB/pvMiwtzxUl+Y8lPiDvPqsm72ALRW9A/iMPdxrCL1OZCg9WHAbPGwLqTxYCpe8Dr2Nva9Q
                      xT0hhYE9fZGXPb3gjD2uDRA9FN3LvCeMwL19aGi9Ga6GPUYIBr28Exm9AbTEPbMboz10U+086gJ4
                      vVD4Bb2wBTO8TflDvWCzI7szSI291DwKvZimz7xeM109ikZTvTvTwL2wIAO8dMHjPJUsnb1jjFe9
                      2IFiPGgFb7zCY4u9cD4VvTGSkj3FWKo9AM9qO0T65jylkZm9bBXSvBIRWz1AobE6KzOPvc2BH70a
                      5bS9FCKlvK6sFD34ysi8l4A4vSXDsL3gXAi9l369PTxT0zwK8Ki9e6+0vZfRt71Q6Qq9UcadPfYD
                      Cz0qjsK9MSusPRNCw71s0ZY8nYVdvdidRLyask89ZAwCvQmCoT0f6J49oBN0Ox5UBT2ksRO9caSd
                      Pfdzij0TVo89Kfa+Pdpvy73oFVm8l6VxvQKmOT2alxE97Pf7PKi45LyxIso9fRQzvUCp3rp95Ue9
                      vmAQPacMtL2FzZu9HWepvTOWyT17J7w9J0hCvS7sQD0Yd3C80BxRvInEjj0wjU48euplPZpKmr2c
                      sgC9XwSOPcILsL1X7yy98Z+CPfpOOL3AVJG8V+y9PcIVXT3AUnW9Qa2BPadsoT135Ci9tGnkvKjp
                      n71orqC9WC8APLMBj73naIs9pMoVvYG8uD0F4qA9uEO2vLmctT3O0RE9A8lMvQBg1jk/P629AFPT
                      vGTth72jnY29JU2PPRMear1X4GK9QGQEvPsctT0g4v87kZCDPYfsuj2heog9t896vYzLurwWzkI9
                      gGeeO2CJtbxCWUI9tKPFvLTh1Ly7L4s9LJ7ZPDIzgL0KIS89KzmwvQA7JTzuaDM96HwEvPa/aj16
                      9Ak96uxBvQC2O7vXXHa9XkekvdjCxrxAs4c6mCjJvXNew72978s9wXu+PUEFnz0qnws9WAJ1POK4
                      yr29Y4U9J13EvU1tgL1M05U8h26+PRDJgL1u0JK97QnJPYDglTzcnek8wEtEPLQU6LzP0rO9sIc5
                      PMFclz0U6/Y8EBZBvdZADz3RIsQ9NRGOvbrAXz1AlDi7pwuxPeeTZ716vUg9tlNBPfhgjTzivH89
                      MIdIPMyUzDxteqs9vjKlvZhvdjzAcIW8qHcavMBhijzGtTg9rFazPCI+KT2C2Z29B3ZJvSd9VL3X
                      Ep09Hw69vU+3iz16z209yRewPYGyjj0G+I290jUkPbJfdD1bd609BzGbPTTJxDyQVLa9QnwhPV1Y
                      rL0g0Y47MGgqPOaWFL0bZ589Pf5BvZhLvr2Aw7478RmyPcFIkz2iFBM9gEW/upFUuz1wGx88zagk
                      vcJWPz17Tbo9JzNlvagzWLxu96S9y1/EvSd3pj1l3Iy90GBwvPAgtr1iO3Y9l77EvTCbRzyAypW7
                      4Fi1O3ZkQT2gyR67ZoyivZCydDwQUxI8UzAsvc5Hp73jBqg9qIbRvH8Exz2oeCs8ZoF3PTAIRr1e
                      vGA9tfmxPf6dYj0Cm6m9wjVQPSQBgb1OwKG9bhuEvVi7uDysJhi9mrgVvZRlrjzK5BU9KHQ6PABk
                      m7oYXJ68Q6MvvTn+pz0+AAk9MLh2vRw38Tzp2K49jrWEvasIsb2ZYrk9oMxXvQAEozrATRg7ene2
                      vd6vQT3A9S68qoh/PcCTJTsCg2Q9+yemvXTO7jyoHTI8MGAEvE8Jsz2BsMg9onNmPaiEwTw1a6M9
                      AGxxvIkquj2lQ6A9KjlvvTNuab3FBaC9nfZqvV1bpz0DY4c9UmckPQ6DEj0RAp09AtKYvYO2KL1w
                      l4e9EHlfvFiiHbywqC282FaTvQcJQL1bf609FQ3MPXnAiz3Q9IC9NEW6PAv4mj13XJA9qusaPReV
                      oz02WDQ9BqEAPdpUBz2NUHC9cGtqvVXkjz2gAXq7TrGGvdgfxb3Yf+28ZpusvWMhxb0Sg209iooe
                      vaKdET1iqyI9VGrZvAbYiL1AzCI7TC6cPNM1Qb31JsQ9MMM1vEe4wT1du1u9aFnDvVgpwDwAdMO7
                      tWuQPbJEKz15a6Q97fubvTA5lb305J48LaGYvSUsv71/AqU9jYhEvWc3nT1QPqK9c1zJPVQOkLxd
                      y7O9Dh5JPRfPvj0wlZu7C4eBPfblWj0od8K9ag+2vRi98LytuUK9n/nFvYvCmj1ywBA9sANzvTDU
                      pLuxI5s9OK3HvHrzBj0ZWsU9QWmJPcDRCr0O7hY9ZfG2vctFsD1Xi8u9NyZAvVOphz2ATkA8OvYX
                      vXi5pDwBg8M9UyBYvUwO37wAp3g8RjULPVRDFr3in1c9KFqtPOioajxQI4a78n01PceESr2BDb49
                      szOuPU0ttr2oGe+8OJyMvAVntb039oA9ACTUu4HQtT0XssA9YDFTvUrFLj1d0nG91+65vVlNiz1s
                      geM85Qekve+3kD2AqYY8J2i/PRDWH70w3IW9tJPmvOWsmD0c4uQ82Ne5vOYapb2hI6Q92xWjvUJv
                      IT2Sipe94EqTPLC+/TteO5e9R+BRveLUVz0HnsY96Qa6PSyLi71TWrE9E6sjvaKVFT1LQMY9lmyj
                      vSSk3DzSsGM9bilxPVWAxj3ZbMs9T6uSPQBpjjz/VLq9FDuaPHO4Kb3a6rq9fV2zPeAC5Ls0X9q8
                      ZLrlPLEnhD295Zm93RmKPS91hz2ID4E8IGmHu/HPyj2L8Zq9Wd60PQr8Kr2IkKA8cJcrPKNzxj1P
                      hJg9zNzzPN1dLr1oPsI8impePWCLQL2AyMc6+iQjPYzpmzwA/0M8aBADPG0Rq72Qg1i8NSCivZz0
                      /zxypTw9R82yvTPKM72qFTm9FGKdPDCiTTyXx6I93SJcvVBJXryjycy9DPe5vJUokL1oPnW8eDyY
                      vN9arz1Z4609TMjevAd8qT0AuRI7GZ2VPZLVrb2KH7G9KPeNvTBOxr3Sf2k9lsxoPSZMCz25Lss9
                      UBmHuyYjDr2Uldy8VNoYvWjlUryAssC8GodrPQq6Cr0UzL684yqUvQPHqL1AtF27Ee6iPa6cWz19
                      rrK9tMXOPP8mkj2HMLs9KOmDPEL9GD1PMKw9oH9kvWy3vTxqshI9KIXDvZeYLb0x4K09NwBFvVSg
                      /ryK/le9LochPbHSqT2WJwI9uiN4PZoGZb0Q1XK8QOCVvDFfpT2dsqI9ZIfnPC4nPz1gCvK7DAO6
                      PALbID1NSIo9uCigvABeq73q4nQ9+tl7PW2brr1YTJm8wPJpO0qTur2eH2k9XmmavacNYb3wZyy9
                      6jVaPWgIMDxQYa+9oGxhO4vYoL30YZq8QVq8PQsAt726CJ+9jPSDvaBvKruRYZg9Smp8vVgToLx/
                      h4Q9gFrxOjdiH70S8iQ99iY5PaeegT3LXaQ9eYejPUBTJrsQVEK8MdyePVktwT0qWTC9YMjKPIOd
                      Y739jka9BMjWPHGRgz2BJKA97gkxPYC/Y71Kg6K9WM8/PH6RIT0Ui/k8wCfCPPQMAL0TOq09EkAZ
                      PR27nD3AfrW6ExNgvXHJnj3AJSO8zbFXvaKjt70a5o69HmCQvRciTb2aHSy9tJfePEDfX7suFls9
                      CNDCvOD51jttqLY9oOGdPI8Rwj2hRqA9JnUWPbn8hD2w+mQ8dbCwPW22Sr3MCYm9Yw+YvQDmwTmo
                      3Ec8HyjHPaNPJL3w1T29SMOkvehOl7yhZ8w9BxuKPRaCcz1vesI9AtkaPd33dL2xKII9QsI0PfTp
                      yryw+mC9wOqKup+ulD1Li5q9iC2KvWwSv7xYLWa8SxqgvUdDkz1i1mM9+zCuvf0zrj2i6i89QH0Z
                      PAJiVz25GrM9IC6Pu2wFgrwA0AQ6aFR9PDZudj17ALY9QBurPDWokL3QYYU7p1tQvYCxvr06FU89
                      GvcJvfHerT25TKE94BarvaL8Oz1Shh092rhmvX/4lj3IZL28NdSGvdccJL0zO0u91CTqPGt/wb2o
                      1l48gAyVvS1Fob10LMS8pUisvYX0qb3l5qc9LBfBvELDOz0nbya9BGnuPChuXryiQ2w9YjsRPVEK
                      iT3wmRE8k0p+vWqjNL0jHEu9qD4aPEqQIr0p36g9SNaSvXAQXTzVf4u9DMaXPKSx6zy6Gik9QHcc
                      PAWssr3tFF29Z55bvW5yKT1YuUa8C/6wPUoEXz1gLWG71aenPfuDnr0wpJy7jyXKvZkLyD20goe8
                      xEaHvfXLlL1xJ6090BDRO0fGwD2T1j29Da+QPapzxL37r5I9mAOGPJPynb2glE+91HblvBQhmTwR
                      W8U9JUC9vQeyYL2AZ4O9ftiEvQDLtTwiZ2U93cO2Pej0QDwnn7m93p2hvTNwtD2l9os9UFEXPFJc
                      fT3proI9rYpDvZnZqz0AeD28EGUEvGb/XD1bhKW98oabvcMKkT1YedK8mGQBPEBpT7sihHU9gUqj
                      PXQ95TydWGa9BFXnPBNKuj2wUhm93QqqvWDd7jtN8Ki9YD69POD8lTvms4G98w93va0lK72g4qI8
                      UZbKPQP+lr271I89huEtPXvOwb1iT8u9GhePvWyqyTzt6B+9gIXDvTk3xz1DFEK9clkfPUBzJTvy
                      my09kAZjvHoDIj1Bx7c9AOqoPNwJAr2Sl0I9EZfKPVDYdLzeUKC9/FTvPA0nOr1AG0g8IL7rO+MX
                      eL3Fmoi9YvQvPcHbnD1BDJw9g6aivQDYu7zQRcG9k0ipvZ2ZYL2gyPO8caePPTULzL2mBxS9IHKB
                      u0AJKrxqpLi92U6lPUlNnj1NyaY92E2cPOe8wD3o48a8eKC8vWsjiD3VULQ9xu4SvQYbBD0Qumk8
                      RKvpPJRQ0Lz39ly9UAPyO1zg8DxS6zs9p5rKvd09ir0BVLI9kiRZPeHgoj1zqZ29CHycPNLKcD1G
                      l6C9gB+GvJiYtLyotIm97zCwvYTO+TyZ/qY9lXG8vchbsDz+KXw9wtSpvWhms7xjdlC9wnxbPRx1
                      Ar3toTC9AGZivfQcwbxayaO97QhDvXlRqj0Ydk48/pViPXoVkb2DIZU9YV61Pa2ner3UWO08wHYX
                      vbBJZDxatSq9zCGivAjqizyyjS89+OrfvBb/YD2gpLW72UKQPTgPp7zoIoy854KRPcB49bqKSVa9
                      IFgSvQbXNz0QIi29iFbTvK3tWb2Q3VU8GDMwvKI2fj37pag9ByOaPRqYUj3oqaK9HTZuvZhwWrzq
                      LV69aVvMPeghiLxgOJk7ciBNPchuz7yTvMA9cg06Pc1pwr0AOBe6cERZvODIEL2lYMg9F70+vbCb
                      JjwzqZy9IKOpu6omDD108bo84mZRPeD53LwsqKo8KFfVvJlUqD1NZL09WD9NvPY6GT0qbh497RGN
                      PWAS2bwA73Q7ADWQuxycDb2CInw9QOu5vMD6Ebxy/JC9gPHMu9AQETwCdry9YlByPXQ+nLzHL7Y9
                      LaAzvYsns700d5I88z6gvQ2loj2pl8w99805vQBq97yQb2690BEDPK+Mxr3gc8W8CLyoPOsQx73Q
                      m2a990m3PbZ7Xz2y/gM9IBY9vdvokr3LHsE9dlsFPW4SQT30jps89yotvctqzD2Cb3E9KJsGPPSG
                      zTx4Z508rKCtvNfagz17G669nsYPPeHXmj1Zjsk9spAxPdKzGz2aTXQ9YMbWOzRK+LxU1tm8Odie
                      PQgCjbwAqvq8WHTHvXpjF71ogmG89HT7PKuskb29Yby946xAvQAec7tAOai9suRAPeenub3O0309
                      eZetPchyrbyYn3Q8eAKevOUqgT1AQYM8LYubvVRknTxTm8K90PqeO+ZpDz1Jq5U9KqefvdnEqj0o
                      4w483wm8vaiWW7xIcOS88k+CvUwkv7ygWBE7TKiAvY1viT3CsZO9oiEPPThFgDzy/K+9V7k7vdii
                      x73iMko9BSmkPbfDwj149Yq95k86PVjaoDz2EIO9YLxruyA2ijztC5c9h2xfvQo+cr20z9w8f2Wb
                      PZjOC7wotxy8C7q3vVrGMz0AjHe8mj7KvYvRl73C3AQ9y6LCvcrbjr1CClc9XfaJvUAMuL2gOgY7
                      0v8QPVKlVT3QpVC8lMKUvGy65rxCYLa9IWPJPTS9lrydESG94DDEO6CbnjusnPa879+oPULbGT0o
                      Kpy8L168vUGaxj2OBRA9ZrldPcDL07x4oJi9oArBvTVkgr1VuKu9WPEVPB/+qz3XXrI9deGwPUBQ
                      fzygOMm7uvGJveNPbr3oLGa8+iMbvcGfsD0Y2o29vPERvat8rr2kLds8wPcdveOIoj16Lj894pqz
                      vZ63qL2TR8I91gE5Pe+wxD19kby9sHGpvXjPuDxwqRI8zxm+PSx+szyaEmQ9Sq5nPQMXqD1g55s7
                      APnVu+Ddx7u1fp09p3dzvcXmp71AaE29G1a/vQd7LL3AetS8YNKUvNAHEb3R7cc98Lxivb1iNb0/
                      Dck9yaDCPTCo1ztnX7M9yzWZPTquQb1ne5M9/SbBPc93w73Kgx09edyVPbqRQz3426G8Zw0ivZJw
                      fT1XxVG9vbCNPUqPcr3IxbK8Gs1NPeCj+DscA+s8gPdVPI6zeT11g6O98XqWPVkxhj0MB4k8Qam+
                      PcMRlL24PIa9h1BIvSATt7vHMyy9KwDBPeiYCzyy9AA9+WGjPZhEULwVbbm90udWPYQR0jzzuzu9
                      sXW1Pc87nj0wPgu9atYqPRfzub0AT006vixzPSnarD2uJxQ9oLrgu8CXObxCiw49itFSvcjG5Lxy
                      fXQ96DhNPAAAxTwQ4lM8KJWIvOzjkjztnZG9zM+hPDQb2jzjfZ+9kc+TPRiZ17yqBTK9DRaivdkn
                      lT2RUYw9MPO3vf5WqL1QSAC99KMYvVU9hD06riW9gs+Bve/cgD0IO5C8cNoVvOwnqbyhVYU9b+iN
                      PdzmAb3RqYA9zGmWvAvooD0WdaS9c4LGPSDwkLwANJ29lUmLvdA4qb1TL8k9XfM6vfegfr3jEB29
                      ZeG9Pf3xHr0M/5m84KjvOyKcKz0IVpa9wHY4vXSzFb05QLA93XtDveJ6dz34PtO80kudvfAnrb3y
                      iEY9DXWJvUDzzbohSMY99uCRvcCymb1MdKy8NuNDPbs4jr2Curq9+ZO9PayPmLw8tts8QLHTurOM
                      LL0TLUy99diTvfB8KLzs4vu8gpuHvT0GXL2KGSc9nfKhPVjmz7zuGjs9AkBaPcBLWL3Q4yi8+i8T
                      vReKVb3QY6O7QMu9va4OkL0JzZg9L/7BPeBnuDvYafy8WaCKPaCB3rsUEfk8diNbPbvdjz1EC+k8
                      RR+/vQFwiT2M1Z68VHrdPKeEyr0nRaI9Tet9vfPQRr2bGbw9UtYXPSChpDv0g7m89HgSvVitvjyA
                      GV29MUqFPYOrkj1137w9zNmwvAfOsj05tqI96Cn4vFGnhj3oKfa8l2+BPUAgODyEetg8+HrSvMc9
                      qD0AQIY8AyuyPWZFF70TR5O9Osg0PepGXr2goHe7kwVPvVNnY73IJPm8hbGfPdKTQz0SsHA95vI6
                      PYByObq4FcC8eusuvRN5vD3Vl7S9slVHPTCZLzxn3069dP3uvJj2tzyDup498ictPfn0oT19waM9
                      ras0veiqmDxIEYM8QJlAvCCttr0AQL27HQy1vZWnmz29ozC93fDIPQLbxr2ALPa6SEacvEDEsb0Q
                      clm9m7+OvQrycz19Eh+9LE7qPKZgQD0+IwU9AuhVPfXusL0EfeY8ErtKPdDobLxDk5m9ZHr0PPDu
                      n72F8569dgdjPRq2M73jn7C9x5qQPaCRer3iNAg9gqJOPfk+yj0TesG9yA+CvNQHrzzw4ws8FdCx
                      PTr8CT0tbm297vM0PcGKqT3+7kU9STiZPa3KI73wzhu90gd+PTgqwzz+mKe9K163PeLaaz3IZKq8
                      QksgPQDkVju6lE29TPnIPEpdiL0h6rc93iZSPWiPObxAIjU86u1lvfXRwj01DZo91mpiPTASf73g
                      J807R9y/PYLnIT1MCLs84oU7PTWqhD1ASm48tXmQvUAArL3uBVg9YGD4u0K5FD2GXoC9yI6wPFDg
                      wb39lGa9tJmBPKCyLTthcYc9e+WDPVoZPr2q6FE9eHqDvWA2tLybV6A9kI5vvY0/zD1lSKk9zAeT
                      PDCVZbwe+io98d2WPdj8Fzy+hT893Qw+veVdvT0UKuu8SRmhPRjTLTwwctm7txWyPRbqD71lPIw9
                      gh9NPU3ihj06lL+984GTvWOFqb3R8Z09iG6OveNEqr3fqKk97GfrvIIASj3kGRa9UEn9O1uBsr0l
                      OrA9ZNPSPFF/gj32khQ9xnNZPb39Yb0di4M9XeTAvZeKKr36IIi9lQSzvWB1HjuQQWa9RKD7PJAf
                      vL2n9Ei9AIMiuoCvkbvA9IM8MOrpO7BnfLwAbFU5RtyIvUB1FLvj4ES9qm8yPYCWrTz9/Z49twnB
                      PQCDtDyfV5E9sJmAvSbUXT1C16m9dP6SvCDdgztyKGg9j6OuPRB9Rrzgn8S9sCOYO0NCb70mEI+9
                      zFLuvKoUaD2vrpQ9ka6oPVeQgT0ZY7M9XogcPQlPlT2ynVk9QrNfPWBQ9LyC6Ek9UxOtPVmbrj37
                      9bW9XDrtPGrKIL3YMYA88yAvvSsiuz0NoIU9QNNyvYAwdDw5ALU987qnPR/Mgz2Mzrc8LA/DvADg
                      /7mYkIi8NlGGvVcHSb0GAjI94Oxfvb7TPD2LBJ09SumSvWzttDxZI4A9cDoxvZjheLxzsqS9qPCF
                      PNkSjj0la7q9yLKUvChpszz6Mkk9KDSsvSPmu73jb1i9eaDCPbQ/ir3AHPO6k2KPPeLTBT2AyWk6
                      +AO4vFRk67yOFam9EwCmPe4Ggr2oUZQ80rgoPQAZQryNLS29QOgbO8dJur2UKRK9OTCsPYnbjD00
                      LQC9vtSgvQCSBTyYIHE8Slp7PRUZtj17A4Y99GihvDJdBj3A1yG9B6GiPV2GKr1A/mm96DcgPMnG
                      jD1Qlna8ktw7PXFDiD0yrpe9sGuqu5hwiTxR9rA9pEf/PKZoDj1B1cI9SpB9vXV0wz1WtVY9t+21
                      PcDDqbzYFkg8x3ObPbDlob0Asja8vWO5PaBr8Lu4ure90fy2PYQS7zxehIu942STPQCzODwgbbo7
                      9OmZPCbQND0oP5y8MILwO8ZFTz22sws96plSPePfl70Y8Bg8b7u5vRDgdr1yaS49Hbq0vWmshT3y
                      mSI9OjOevV0Ujb2KIUi9EsVIPRP/rz2wbR+8Ueu6PbomJb1YxMq88nE4Pbl1oj0rGMK9gGCRuhcE
                      hj1XvlK9cPQFvXnzvj1oVuy8KMO2vXj+orx/Z7W9QD7OvNCWw71LxrG9bS5KveDRsLuC71E9uz+P
                      PZW9uD0Zlso9yLKEPBgiUTyQzWi8Y5SnvVhRGTyiGWs9kLRGvEbwlb3ACEm87qoNPeJSPD1tN1q9
                      Ieq8Pa7QEj26Z0M9sXmzPRACVLx+DV49asQtvUCTkb19ISi90HKMu4S36jwd8MG9Ris+PaCFTL35
                      WbM95RzHPUDnyr2XfzW9nRVivZgMkr1zWag90PUrPNfRjD3qa469EPQIvL5Mm71AxnG8TU5gvUTF
                      CL2Mr6+8+cCdPbCksDvQbIy9kD86vEDmcDu0X8G8ASqyPdJZSz2+whQ9kvMEPe2oOb1tkJu9kPyr
                      vaUWqT3NlS29C26/vT0im72jbmS9eA/uvB03UL2M77w84sgcPVD6Wb1VPrM9sNMjvR2twD0x1p09
                      8L53vMplKT3YmqW8KMXfvDIZWj0YCKu8oHTMvbenTr00ONA8jCzRvM1aMr2CF469kEdDPLOdwT3g
                      4NG8AM6SOhzxgL0CkMi9HativVdcPb1AI8y8rFytvOYncj0wmzc8atVVvSslwD3QP529VNGYvNNM
                      yD0MBde8kFfFvZ3ZG73AYEo7nWdpvbAAirtA+h27w3vMvat8wz2qn7W9u2ucvc0khj3fJMQ9wigm
                      PQ2JYb30Y8o8jD4CvcPHjD0MVe48RQG3PSzt4zzoysm8b/60Pb1NM71tY8E9wF0PvIx18jy+1Sk9
                      rDa8vDAjJDzYGZa9pqoIvWW+lz2YRau8cEg5vdDjOrzirWs9wNP4vNgblrxFL6Q9MGs5vdZAkr2j
                      3JO9lPDuvICnpTxgIL27tYWLvexyybwosIK9ANEwu6kFqD2oyTE8cOlPPCgJxr3wNS88z/yvPYDm
                      DjymOUg9ygMuPdTApjzTvUO9ACUNujFaoj1oCn68WPKmvMTm2Dx2/Yu9kts1Pf01Ob0OxxI9YCHH
                      uy+qtb1g8s28CkI/PYYaLT1iWF89wye5var+OD2AhOA7ASazPUVBmj3xnMs9xWy+PYB7wrowaG+9
                      qD+kvbQBqzzCGo693XZHvRTJlbzyCrG9SWeYPUWhuT0BRoU90PVJvGrrfD2B7Yk9JqyAvWAqmL27
                      M6A9gCN5vHhd+ryA8Kw72/PFvcANBLuQLW69cMcHPJAVVTwqZnA9GHp4PD5BfT2af5+9U1GYPWL+
                      nb0wYOW74J+VPFjm9LzYQ108cMUYvAC5QrzwNDU8ccG2PVWytb0tYVu9QOiNvfmTwj2YG7c8kleN
                      vedFO72o66a91D7QPOgq9bzrzbm9kvQOPbNYOr0iuMq9mHaEPNjW8rzRwKE9r5jIPaGjoz2jusO9
                      KhMePQzplrxSgl09XpN7PbA7iL3aiVM945FrvXawAz0xE4M9Km5aPScwgT331l29YoUDPYgDxr37
                      CoY9+1itvSTz+jxK+0W9Wr9NvfPgv72spO88QAdBu4IJTz2yFiE9Qn+1vVXoxb2CS2098fusPSNs
                      TL1+yws9KBanvQ7WXz1zmq89fvIdPbBIkzuf+IE94WDKPTDDx72X7n6952fHvRFunD2zJVu9GiBp
                      vTEfoz1wbXS9qlogPT2Rpj1jECW9QAY/O6gwg71Y78q9n1WdPf9Yhj10s5Q8yGCdvemavD0s+ZU8
                      H7rKPeAItjv9USm9mPVLPFDjazyNzsI9RUC5PdopfT3YEDa8NQyEPeAksDxfhIU9+vVpvbBIjjvr
                      9pO9AADhOZcetj2wimW8GsonPZjAvjwYKpi9WukCPXeNxz3YMCU8gNEqvYDEo7xOoaa9wAyYugzt
                      9DyO0D891UafvRwLAL3Qg+a7MkgdPUAoE725eoY9R3JDvbaxEb3CxhU99sKZvQhVwb3VM8E9RsMc
                      PSimO7yCXCM96CfbvE3DPr0sKvK8YD48O2iD3rxStFc9xErkPKB/pbx++Ac9/rpvPQBQ3jsYcLm8
                      XHnxPDF+qD32azw9qHnavEIFdj2p/rI9btNWPaSajL0NnoI9PrNePcO+ub3G7kc9pDkXvb2esb2L
                      Xbm9ggdNPeCdhb3jRJs9APZJvOjwBDxbp7w94d6kPdRO1bxMAJq8aG+yvGIbLz1Ee/E8kMYYvac4
                      lz0YdRK8UrkjPRCUir1yxoG9h5PBPfadBj0tpcy9zggiPTlEhD2pb8U9EBl1PLSSDL1ivQg9yAez
                      PGMFob1oRaO8MAA+PA4vOD02BZK93/vDPSssxz0qycO95Q6rPczLFb2IcLs84syqvT0Mtj0Vkru9
                      YCaqvICn5jpo4is8aPW+vXWBjD0HLpY98J1DvLheory7hqk9fbHEvRhZTjwX6oM9aACSvcFJjT0m
                      0Wc9hqmDvZrVYb13nY49VIrOPEsuyj2B3bw9zc1hvQCW/ruoyiw8AO+RvPLpyb1T05q9M6ygPWi8
                      1LxCV2M9/Si/PT5hCT2gmaM7WHo4vAAxFDrd3mu93k2pvVgNYTz1UsA9xXmRPYA/orwY9Ja91jIx
                      PRRM7LzAhgA7AZSoPWAk57zoGpa9drZBPcAAy70wulW8PyK9vVDHFL0S9y49ScOkPZvLzL0AgGa4
                      667DPRB4Hb2oWpQ8F1rDPQCLWbzg7RO9VJnTvPqEML1RtJ49IJfJPHDfmb1C1se9elpSva3frj1p
                      R4o9gKu0OjTmoDwvvcm9VPr6PPfsXL06DU090YqaPVsphj3AwpC9G9XFPYjYoDyozEO8RNoEvRrV
                      Dj1AZGw8YJEbOyAA/rwWkGM9OiRjvYCFErwCdi890SW4PWb3cT1cO/M8tzOVPWh6jrxN9jy95Ojn
                      PAapfD2Ajfq6Iod3PcAJMDvvfKI96JF0vFTpxLwgZ6a79YCAve9mhD3zmn690JlZvMBBtbwDw8C9
                      Wo3Jvbkchj0jX6g9CG21PEisnDxC/UQ9BmNHPbdXVL1wQXM8vPb/PAGAtj2y3lM9Ow3EvQv4kD3g
                      RPe8uC7JPHXNhr2BSbc98q9SPdiKCrykJQi95oMAvaOpU70muay9By2zvZh3nb26fD694pAbPefk
                      Yr02sjM9sH5MPFRDozwDK6S9CeSwPRdZqj2AK3+8o/WVPdMCcb22GEc9lanCPZGgtD3Qla27XYlJ
                      vWC+br2gtbK8sBmru9Rm/jzqn5C9YsE3Pe1/lr0ALsi6mFGmvDrAkr1GTUI96Hd2PDQt6zzziDm9
                      +GKCvHyl+Tx6VI69
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1NjU0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MjY1NjU0NHEBYS5kAAAAAAAAADefsr1KW0U9sHYIvLT11rwyLUI9+Q2fPQtAoj0srcS8
                      R0VfvWxC8by6elm9qROUPUh6mjyadUk9MYuKPR1krr1AA+Q6TISovIHJuT2UzRi9DPnuvLL6QT0o
                      GFm8tQyuPamulT1UN+g88EOxvWeqYr3XhIA9kzfFPYkzgz1VKqu94QLHPebonL29hFK9wkkrPRih
                      ADwFxJM92gapvZJEND3YxJ08+W+SPTrFNL39eJ89vbPGPfR0przK3oq9d3q4vagofzxEq+48hB4F
                      vUY0GD3NIBy948w3vWgShjxLape9gKK+vU2cuj3S9LW9YNZcOwCoGTgnZHO9X7q3PV8TlD0YC2k8
                      MSafPRjmJbze9n89YEFovRLlHT0gE/a8mCCyPJvDn71y/iY9wixnPTL0OT3iNSw9alukvdgIqbzB
                      QJU9+36LPVWYtT00yNa8IKS3uysVt71UL7U84WezPUgU8rw4o8i8pl1FPYDV3LpziFG93RmIveLu
                      IT22NF09Bn5jPSm5tT05zME9aE6pvYDeDbw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1Njc4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MjY1Njc4NHEBYS5kAAAAAAAAALoYVz1qGMK9hc/EvRJEKj0RdrY9guAuPfOAuL1q8J+9
                      IxGzvWhGHzwz5ow9BjoQPa0Rkr1QGd27APZ2vOYiQD3DMjm9QuqdvSd1er1sAv28Yk0sPR7WaT3d
                      xVe9widbPdfHVL3wWrS9FlALPdoDCL0NBE69WKlBPAY9F70oJrS8bkYvPQAdBTpPmMY9QB+oOrCu
                      SLyy3iI9ECBRPNWdyz1gMX27gtM/PUNNfL2XRyu9QAO4POBZuL0oIJW8FYe+vZLCaz2w04Q7M6m+
                      vfqOwb3Aimw8qYCPPaA2F7vlwoo9phNAPWglbbzS5SA9XU8nvb31hz1oEmI8OfikPYWyo72wOlq8
                      0hxmPd6DFz0VoJu99Wy1vRnfyD28yYm98JR2vTMFmj0jlsy99lgWPchYir2Dsru9U5WSvQdBTb0d
                      usQ913VGvbBSujsHbq+90eiVPQnihD0X+p09VyCJPVS2gLyuFYO9LackvYfDqT0o7yY8OuI6vaCV
                      Irv4xIA8YNNdvZTKpLyIF8Q8xsA0PS4Vdz0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MjY1NjYyNHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MjY1NjYyNHEBYS4BAAAAAAAAAKyF8Tw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        so0JOyykHTsRExM7ERMTO1VEGDtWH0k7Er4tOxK+LTuWxCI7w25OO3WAXjt1gF47lsQiO8NuTjt1
        gF47dYBeO0kpmjv6i807pGviO6Rr4js8a3g7MsqGO1LakjtS2pI7x7SJO49tqztVFQA8VRUAPMe0
        iTuPbas7VRUAPFUVADw9ato7bBgIPJn4FjyZ+BY8yhfSO7Fm5DsVneE7FZ3hOzyl8js/fiQ8ZY07
        PGWNOzw8pfI7P34kPGWNOzxljTs8PWraO2wYCDyZ+BY8mfgWPMoX0juxZuQ7FZ3hOxWd4Ts8pfI7
        P34kPGWNOzxljTs8PKXyOz9+JDxljTs8ZY07PO7Esjw7/Zs8TTKnPE0ypzyzfqE88od0PIOIjTyD
        iI08eROXPKI9bjzzCF088whdPHkTlzyiPW488whdPPMIXTyvgh88fkTvO6A12TugNdk7i/lFPEdv
        Njzpcic86XInPDKSMjyzcQ88rvy/O678vzsykjI8s3EPPK78vzuu/L87uCvhOz+vtDuP4aI7j+Gi
        OxEX6jttU9c7fvzZO3782Ttzr8o7132VO6QcgzukHIM7c6/KO9d9lTukHIM7pByDO7gr4Ts/r7Q7
        j+GiO4/hojsRF+o7bVPXO3782Tt+/Nk7c6/KO9d9lTukHIM7pByDO3OvyjvXfZU7pByDO6Qcgzs=
