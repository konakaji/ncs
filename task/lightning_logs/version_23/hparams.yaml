N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjMyMHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzIxNjIzMjBxAWEuhAMAAAAAAABCFzY+KDhlvnnllj5iuhI+TEPnvVJnEz4gFIq+CrN8
                      PnPsUr47hg++g4EbvgI+dj4AQOq8zAe1Pc6mYL5gule8oDo8vGLEqb6yUDc+YMAaPj0xij7/fKY+
                      AG2vu1lVoT42squ9PQagPq7sU77Adly9BioePjxmtj0400E9N1iaPoTe/z2QzZa8ttAiPia4370m
                      2lG+g1aLPhw+gr5j+h6+ii9qPk/Sp75QS1S+42KWPhr8Gj6x0o4+6DCKvtChAb6D3my+j6eRvogt
                      Yz3hUo0+NA6lPRM4qL442HG+bBfWvWJDor6TL6E++PBvPR6iSD4gvW48NO+PvmpOoL6eLza+OGJ0
                      PdZ3Qr5fepQ+shNjPr7Ugr4Q/OY8GmQzPnRh5D0eUyK+4K0yvWaeCb66H6e+AKpFvPPfNr76STM+
                      +laLvgysgj2AClS8QIMsvXqKMD4AezA8ADg2u6DxaT1La6I+kAPCvbBW0LwzYh2+wCbcPdZtAT7I
                      oDY9iJhyvQ7xCL4AEKO4QM20PTtyNb6/D5S+7MixvRSm7z0+GCu+63Covnxz+r2bNSa+gy0TvtRT
                      wD2A/3K+sA22PDhEFT3WVyk+9ObKPQV+qT5ATbE9NsSkvinxiz4Y7zS+5YKjPoCZwT3IlDC+asYt
                      PvR8+D0ct7m9CKOGvrDAVb5dqag+19SKvuh+gL5Yo0Y90IfkvdbPXz7AspW8S9cfvsjvbb7wlv+9
                      iA0dPWbT2r2UdLM9CCsIvR/nkj4FRqc+8yqdPmJRGT4L1H2+iMBJvfy4yr3SFGc+GHxqvqirA75S
                      aiQ+yiIhPmRQjL1UIM89QKjOPeqCWT5rPai+MbyHPmDUBzxQbwW+evM0PvA3nr0ArKu7o209vtoa
                      TT4Cf0s+QcWbPoAfHr3aU5u+crJwPqjFDj5AVxU+hvdBvlCLqr4eJyM+BLuLvfacOD7ChGI+S3ya
                      Ppyks71C2RQ+0hKCvjAC1j3LAgC+0y6hPl2Mkz7UsZq93GqAPUiqYr3qXTY+7B+mPTtEdL7W/s69
                      1uEwvkjiTD3skps9I5oRvspxDT5yeWs+OLWDvpDRvr1Q7O89QJFFvU8EpT6I7iG+0hJnPhDg272b
                      DZG+zkpgPlR+jL5Q46a+DO/NPYiEUz3r5CW+sKGpvIBODb0KoXg+Mg9jPiA9Qj3YQ0G9G86QPrWk
                      hT47+4c+F6SiPsu7gD5QFfu8VqITvgD5kDugq/s9R8mnPixPmz2gMCU+w/6ivsZB1r1QWeU9zupN
                      Ptpgg75QyDu+IOg4vXHUlT6a5m4+mlw2PjZdCb5uwUc+UGIiPh69Ur4wFSS+ALzqPVDh2L02gdG9
                      TJ+Zvo9elr6Yv3E9YFH5Pau8jL4qopm+chqOvlisI73wLW2+dkTlvcgMhb5GYMm9S+F3vlL1kL4D
                      9WS+2PlqPYIQRT6mhs29uP5zvgf9p77wawm+4PHsvUfBm75mQiy+0oldPgpBID6vw54+GOtWvbA0
                      5b3+ACO+mPNMPV/klz7guWC+CAEEPRLlVz7zvp6+k6KMvmtHQr4Agfm8xp09Pu7QUT7An/O8TnKR
                      vg3unz7Q7ZO9CJh1vmpkmb4CYQ8+2tRtPsTxkj2q1zI+JBT1Paj1M70uSBg+o8aHvuA7PjyzfUW+
                      cqZvPooYor7shu69StRZPrTD2T3ieUg+xoEwPuDAHzw4zke98HYvvgCjtz1gLGm9UEfXPeAcuz0S
                      +Qk+84VYvihldL1+nFE+QKcOPnAMQL7eUS4+WpJTPph7M71sloS98NvKvXAczT0WxHo+KAh4vrxZ
                      5r0WIwG+IAChPXiSDj0fZKm+VCenvYrdHj6oLCo+JnrfvdifIb4AIFe7ell0Pm7AFj5e8XU+JoSN
                      vgDA/j0A/ia6Jg59PgLedD72pQo+TlAGPmMykb4Asbk7CKxXPWDGVTxCXXc+Y52EPoCjnb3Akbc8
                      G8JNvmDVVjz2GHI+woJrPgD5nLsAWHq9hyqivoTJk77oNF+9MxuYvsA4rby8KJO9WosTPlSSkL3i
                      ayE+J4SivghTdD18qpA9i9V1viDJOL0g8m480E+qPXZpUz7zKBS+68wsvhyrgL1kWKW+l8eFPgvA
                      Rr6WScS9qmtsPjjBJD42pM69H7WkPoD8pL6A0ze8jMe1PVitAr4gpGe9PI+BPUC+V74cx9Y9xpsd
                      vvkehD4AdTi+Ng9/vnIRGD5DdEu+yDUWvhLMOj4zMnu+YhBIPohFKr4krqo9GudVPjcamz4YWDW9
                      aM15PU7jLD6PraA+3n6ivgiVFj4QtO49MK/wPHDz9b02x4W+tg1/PgIiOz7QvL8925qAPqCUHb2p
                      SZo+31CUPvBj/T1TvWq+ZFKnPXDq7jywdoy+cNjQPAbVLz64Yxm9+tJWPm5cRb5GPgS+elFlPrJt
                      YD6Wbam+Wz6qPuMho74yVZe+nuBSPsZ7Nj62OWs+oFVsvAD/ejzt1YU+FxubPjjtUL5Aap07QFY9
                      vVgsGr5g+7w9u3SNvrL+Pj6el2e+Q5tAvkIDDj6oOZi+k0d7vgAk1D0QDbI88I6BvDrZBz7I3ys9
                      l3mFvrtzpT51xYQ+QO7Ju4I7KT52SS8+lBGPvdC/1r0EYKE9wCywPTAM4T10U4O+DyCTPlAMm71A
                      Mio98MeBPSOplT7EEaW9wUulPgBSVj22/le+txWCvtAHrz2s65+9aCNQPaPPT76AFFY8gFVEviiz
                      bz2geTm+0NTkPedUhr4iNWc+kIuSvvrTfD4g0p69mOlHvacolr7Q27m8EAEtvqpFfj7Rmpk+mcuY
                      Pk64ZT6gJnW8FrpzPgI3qr5m75a+kKCfvcR/oD1n1os+IMpRvoCiYbvO+Za+UjB1PvWqnj5AHIo8
                      uyUZvmAyoT3jQ1O+qD8SPgCAeLfyxjU+IH3cvZ7mSD6eQRI+Tid0PkBrwz2sB4w9CJtfvQA2djv+
                      64m+fw2qvmZjTT5wWca9ADlQvuxd4D02nta9yicAPlyBmz1I5QQ+oPdnPMc/p76MrZy+Uxktvk4r
                      m77QsZk8ADcyvoZPF76/sYM+DqtCvnOfgj7Qxgs+5AqSvnTihT3Qqf48u92Zvg+rhT6WZka+WgQs
                      Pi2blj52hZS+kH7dvcK6m767Npy+OS+jPvIUFz5CYYG+0J71PNDxoTzz8ym+Do8lPmCYRj3AnaS8
                      wFVrPVh0H73AC709kFvBvYoDPT4ArRi8E+mOvks4Lb4men6+4MdZvgBTib5cDpm9EHe7PBvcmr7E
                      4Jg9Q/GHvhkohz684cK9+iiIvpBFoD3w5c49+8F6vpzror5wLfG8JjsmvqqoQj4WGlY+gA3ovHCo
                      3DxQfeC9U19TvkP+lr6MZqc9LDmVvhgkMb5bqpw+PupCPoQzlL7QA7e94LtOPH7mAj4IiJ6+ynJb
                      PoAwDjvrXWS+bro9vrjvbj3r8Z6+siAYPt4CKj4xfKI+gNQ2viirU70kPtM9+BpFPaaH7r2KeEc+
                      /BP6PVU+oj7+8EY+28JYvmRonr1dWZI+6FoSvVYJyb2Zsps+DGKIvTiPEL4LK0++6eaYPns3m77t
                      5Z8+MvqHvs26mT7kT5i+gLfYvfzZjL7uIWO++MA/vaDEET4mtwW+Iw8pvrgDT70r/Du+QCAyvuDZ
                      RL27L40+zEjAvXoUWT6+bms+xq0OPpCcib2zigK+/qBVvogrGj4UfMM9drWgvuIjXj5d7Zc+Xsp5
                      PljPTr7rmEC+pJHpPfOedr6wT3C+EOeQvkgWWj1SuEU+oGusvWXYkT44Thu+EJCpvLLHRj5gqna+
                      vPWCvimUiD6A0XI7MI6YviI1UT5AxMc9aFAAvuYKGD6Ahl2+6jJpPjQ+i76g08a9dWGZPoQApT1l
                      VJ0+CH41veb2dD7MS6a+u6x8vsZCEL7UQ9E9WIMuvrungL5M1o89S3ioPusCPL4sMZE9prt6vrxQ
                      jz2g42c8EBjUvASqgb6Awyk8oFIyPGDni73Nq4Q+OHZHvcTLnT1gLl2+ZoMIPu7kF76y9EA+wrBD
                      PoDoCbw7c4G+fLjwPc9/qT4B3Io+U/wdvvBLGL640BU9DQ2fPtAD1b0JO50+JX2aPkb1RD4ki9E9
                      +QyDPtLGbT6w//w8iBlyvbZTXj7AMrC8hEfbPXrrhL6Fe6k+xuarvU0pnD5Qsfq9U7Oovr2alT4Q
                      Yti87ASSPTC2EL51JJo+1r9VvmwNur0gsnC97VCLPv7PLD4AYCI5UvIDPnSY1z1otR6+qNBGvr48
                      cT7m4Xg+6lJ7PhT/iL0qFXk+kjRTPuosbz7wIqW8Bpocvm3pkD5ytnQ+eEAQvnCQ77z1TZE+ekU3
                      PujcFr0guIA9oII3vYjYEz1GjjI+GNlrvaya/T3uxA8+Ml9qPhLzBT4qaGo+enGjviRZkb2utmy+
                      czmCvqVloD75j4Y+7AW6PdApsj1+gKi+OJ9VvRM9RL464QM+W7JOvnIAOT7A9LG9IObdPSBcEDzG
                      dmO+VqkiPk1jnz4w9M68xu8tvjh5nb4i0YK+M8p6vmb+qb4YyXC97LfNPYcHkr4tD6c+2WCfPlgm
                      NL0NpqM+PBTfPR7GXz6YGx4++2BQvqjyG742pJa+4otLPlhBXL7AmuU7gGxWvVMTM76bbUq+LUuW
                      Pm8aoD6oe0U9qLp5vUSY9z0IlTa9W3WPvhZ7Rb6AaeM9VRWOPlxJqD3UKsY9o02lvlZO0737lZc+
                      WqV7PqC6Gz1TZgK+hEiQvdgJgb4Lr6K+/GylvXoOLT4qPTc+FAejPZBWAD4TvpK+0C2bPKNbO76c
                      rbO9DLXBPcNlWL6YRg09UN3KPNCy1D0mvcG9cG9XvlVsoT4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjQwMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MjE2MjQwMHEBYS5kAAAAAAAAANYx7b2KOBA+dG6GvqCoxz3C4Gc+YL5svojOPb3CrSw+
                      qFoVvVKmRD5B8ak+4b2LPohEEz0gkx09KxELvs0nhT7hp40+jrh5Pp0jhD5rPxS+RVOlPuDPJTzb
                      DKO+IHZEvcbO7b1Iez6919iSPlIqUz7p0p0+tQKPPm48Jj7uLBW+DA6CPWMIDr5APFU99mUFPuC+
                      mL7gHH2+2AWYvgZtaD4gthe8ghEHPmMupb700989UNyQvdRS/D1yEEc+VKiMPcCoXT1Lto++oFu+
                      PfCvgz1hbJ8+QH6JO3O2LL7NX50+V+mgvm78Qj5eWj2+Yw6EPoa87b2ICS29ALa3PABI0rvDcqm+
                      QPyxu2BqITyAGmA7wm6nvkz4xL2EI46+FKyXvazD3j2Z8Yk+Q7epvgCtwTs2hMG9OMwnvqMloz4E
                      kam+JlQcviwtkr4IEkq9IwMzvpD9nL3eaRG+e18DvlKCAz72CBI+nF+nvrL6fD4ITWs9kBrMvZyl
                      vz0KuWo+niI2Pvybj77Ymiy9fCK1vagHd70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjQ4MHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzIxNjI0ODBxAWEuECcAAAAAAAAgRAi9RyG/PcqcK70sNoO9UmoUPdoEyr3wyWA8hN7Z
                      PNNgkz3ZQ6o9xvsYPZCCEDy21Eo9k4GevWv/vT3gEa88QLBbOxNVhT3oaG+8cRjKPeLYwr1t4Cy9
                      jNLZvDKdcj0SlF49YrVGPdo+cr1Yhnc8IF2Fu7SKyTywkCy85452vRg+vbyC5iw9cQ2wPTjh5Lzg
                      grI8ceTBPUUGiz04RMG9TO6gPPKAMT1ZKKI9P1ejPRqATb3lV5q9OzSjPTBAp7sAVwo6pgQQPdop
                      Mr1J6JA9Sk58PbCYabwAjCG8/hUOPVBcML0gCtW8ohJVPdDN67u0csA883J1vZqkDL3/esE9KjAE
                      vbRQojw0LpU8dZq9PRnZwj3hlbk9dLuvvIqcB72bU7u9oSikPcBCwLxNIMG9Z8Y/vUbKdD1LALw9
                      mKihPB6RNz18lw69mERZvD7ekL1BvZE9egp9vYfJSb2zI6Q9aiZGPQfsLL2o3U68t22lPQLGkb25
                      r5w9MxeMPWBz7Dtn2T+9Ut4mPYS3/TzyCb+9AEquOeSx5DyQck28qx6LPdL+ED0NIVK9YPHiO8Bj
                      B7yQ0n08QLRYvcS+7DwbloM9+iRrvZEAnT3w7a296OBzvEI7Sj0awpq9XWNdvcBIEjvgZQu9idep
                      PRZzmL0oiKW9IPvIvMB8nL34ZLc8cY6VPSqvZr39uxm9AMGYvOOSwb3a9Zm9PcybvTe1qT0AVkK9
                      tfu+vT0LLr1974A9o1vLPVjqeTwey0c9bCjwPNpZOr0OZJe9AG6CO98olT1Odig9OtslvVQ7sjx0
                      HaG8gLRmvAziu7wniGO9mNj4vFWHrL3gLpa8kBx5PDRm1Txitk09WP+MPBCtrb3iDSI9LCWEvRpB
                      dz3R0KY90Kg/vCWgkj1Q6ki8UiQlPV7ZST16e7K9Yg80PcPysT2obo28pOrdPNd/wL0CLIO9QJcb
                      uwIVID31PqC9FROBvX2EgD0nQak9yi5DvdHixT0oNAS8jzKaPZBkZ73GSWs9jeC5PS0HpD353sk9
                      EJtyvdjjfjwpL5g9jb6jvSFolj0Yasu8DTLMvWLdIz0AQpm9PsmUvZ66UD2M5s+8wmYSPWxAurxA
                      k8c6ALEMPD5gST0rl7+9IfSmPYidsLz0btQ8sN0dPCr3dL2IUo08fETPPPznBL27y7W9CsCOvaKr
                      Kj39VFq9XVwzveefc72icaC9oDFavX3HP72AYWG96t5yPQ3lVL2TMXW9gYO8PZ74dz1sRwW9WBSN
                      vaesyL2LgcQ9CVHHPdhjzLwxOqw9MEW9vYx/17zKJBo9QCoeu2k0nD3dubw9ABkiu/MSyb2Gemg9
                      5zjBvbwB8jxStUs9AWnJPQblAD2Axkq8AmszPf7VMj1N0Tu9Z9d3vYtPxr2MXZk8o0G6vVdmuT0d
                      0cK9oy25PTTHlry0Mba8+La2vXkAsD05u5E9LiUGPQrVM720UfG8SxWbvXo4e70bY7i9YQeHPSCA
                      xzxTW7W9cL4kveBK6TtIcrq9AdG/PUoUDL2A47M68XGtPdDmYTzSXgs9kk+AvcvKmT0jZKS9d3Zd
                      vZYDbD3kgtc8jFWJvNSL5TzAINW6cPiovco2Yz3olU+8dzUhvQKkxb0g0r07Ro2Svdm5oz3vn7u9
                      vnRnPbANsDsqHZ+9WxrKPWAaFbunyCS9GEXovBoaFz05L789Ayi1PQBHJDwBRL89ik0+vUGkuT30
                      meS8XGgIvcBbFrvw6SS8wIgKvdN4e72RHIs9ypOEveTKC70YUnm86IETPE+0gz2P3LG9r03HvSwz
                      jrxTpkG9tJXivPaTNT0/jMO9oHrWvICVwbxyoVY96HIVvMD4p73DqZg9KnRnPYAjXb3ozsu8oUXB
                      PZaJRj2QLLG9gHSSurcwaL3o2J88MGOBO8JdFz2Q3jQ87sYQPUXNhz1sf8+8Mu2HvX9cyL0hGag9
                      1J6/PDP+K707wrY9QOTwvHL+Oj3QFgu9zS5/vTCuj70j1ju9p9asvTM6Mb2e2DU95rdAPTgAnbwm
                      RQw9LLTmvCiCG7zYV5m9qnRKPZE7wD1MKv28AHDHOVFoij0YmSO8sloLPbJ2Jj3pKIQ9yzS+veGs
                      uD0MA7w8qqMKPUsYwj2gcLa94rg6PSi8K7zRKrA91qOjvYIZYT2svYq9kM58PNICbT1CsxE9qGo5
                      vNKQID0QzI+9DniWvYzgu7wqmX69VR2KPaxogLxXbXW9Pa+ePRP0Or2Ukc28DP2gvIJFnr3Y7sa8
                      KpoxveKTQj3iLzI9gI0hPEBvdLxYiFy8gP7GPOB1t73lX7U95HiIveofYr0sNKc8KEGxvMoEp70o
                      9IY8wu51PTB8pb2wqe671kAWPToBPD0Y2cO9cJtFvQaZLD23DXO9WgdYPSC/GL3G3w494mhNPVjK
                      gTxtIYc9RsFJPQU6lz1KTqK9bg+hvS/ovD04eb48xgIJPXMXw70MLLq8v4i/vX1SpT2Vvsa98vyW
                      vVYpUT3ysVk9MaqWPdDTSjwZgZA9AEADPBLNkb06wn29AEC6Or79m72QmEW9WHxYPL4PKT0ohhk8
                      LauFPUfSfL0dVia9UHDbu/qTlL1ozqq882nMPRftX70fIKM9gOblukFujT3QLY47GEpkvOXCvL1/
                      spI9ZykwvaJxID1wUl48WHaOvVLWGT2wjDq8qB6BvQAg4zrqwmQ9keC+PSq1R70rCo09Alk/PZgZ
                      EjyadI+976KoPb2ZgL1YEYG81MSyPMCPgzyMNLG8OMLKPIriMT1QM5c7WCkWPEDHqDykfto8+sSk
                      vRhQrzws+fi8skE1PRQ2yTyHxrc9eITIvNaMJT2Tg0m9KA9zPKis1bwW4S091BSzPC+Urb3g6CC9
                      oMHDPHjMtLzCFQY9Wt1ivTl6sz0pV6I9HB+AveDA8TsJWL49zMPbPP2dLL3AT569wAmGPHq2rb20
                      X9e8Cu6jvVGIjz3xjcs9UJcqPDr4Mr0gAcm7sNZcvLDpCL1X90K9nCnTPAXnq72wu4M7P0TBPWBP
                      U7t4Rbo8XXksvTu9lj17DqA9NHANvU4pjb1VCbY9APLVO4emkj0wm0W8gNUTOpTq9zzqQTi9KN7P
                      vHpxHb3jGG29mMqnPAAcLrogeF29SR+iPWQq6DwKv569LlgQPTNWXL1YNSo89s0LPXq8Hz30dgC9
                      cVqXPfSv1bygO4K7lZGuvaApGbtUSLm8S46SvdpSVT29BpU9fs48PfA5vL2jQSi9gNfHOzB1wjsv
                      dos9AZGTPZ2YuT1jRJm9czaHPXAWBzy1Aa49tnwkPXJOwb3t6y69lIrEvBp/bL1oi8M8QD2zvYA9
                      M7wyQFc9h6hbvRCtKbz4g7+8fam1vQCtn70FQpi9KlJePVoaoL3Vzrw9ka6vPSLnZj3gnk+9cIh/
                      vDUlhb0Zzpw9eYWePcz/t7xahcy9WrtZvZ5cnr0wowI8Al0RPejvT7zIHsW8CbefPVHOjT3wEoS9
                      SrZEPaoJyb254Z89UjdiPU4aKD0AB3Y61XGkvV8wsb007++8vDLjPB6rbz0H77q9xgupvbDzpDtP
                      BKw9QQq4PTaVDD32UwI9sMjGu+hm37zyjUY99SvCvQWqyD2xgrM9EPJbPC0AiT3A/r46YHkBO7Rw
                      g7y0++a8wTzAPTIbAz0dgoO9SryavSA42zssE7w8EGyuvQgJsb3nu0u9AFY5uRl7hD1tjsk9CJKT
                      vSi9jTzYPZ69oPS9O23usz3kTgW9AHClvOCNszvCJqa9g8nCPbCGq7tmjiM9R7nLvTS7vDzYrQ48
                      WEtjPDoSCr03N229vQycPSpsvb0M//68NCbyPFCfvLseu3o93aVPvQOskj0Ph8i9GJAQvOE5uj3o
                      BJq9FM3HvDjm3LznnU29bOqyPKCIjzyA9V86BfyXPf52RT1mmJC9/1mbPQidt7zQwI27olqzvegO
                      17yfPbK9FsE9PSwu9zxUyvo8NLTFPGWnkb1YrJC9lxw0vVesIb1CLcy9LSmHPTu2yb1T/0q9J7CE
                      PbKgSj2NNxq948iDPbs1uL04sZG9kD8LvdhifzxSuMS9IhI0Pc5gFD2NRnu9NjdhPUYucz1xrYQ9
                      wFsYvU6lLT1EpRK99MmKvNM9y72U+YC810E2vdW/tb2gtbk88m1TPc4CVz0taFW9U9vLPdTppTxl
                      KYk9o56Yvdwm5jxgDEg7C4qxvW0sKb0fIKo9KOWAvValcz2Amyu8Hz7Mve9vhD0Qczu8QFCsvYl6
                      vT1qc6i9fyGHPVgGz7zfR8O9ejdNPbQLgbxgWhW92AWBPKBk3bsgghC9rZSIPS7bYD1xHsY9gAht
                      vHJHq72eEjs9S2eyvSJIvb2GV4G9NFHuvL1Niz0RQIY904MovaNvZ70RwZg9PfCZPbA+JLyqgnW9
                      0PgVvIDX1btaFVe9qBY7vOnUxD2uoUY9LSnMvTvZrD2mGEo9tETYvIbmMj19Hre9UItIvAplTb3J
                      WYc9vVfJvUSWjL1QRYK9/WCqPQCelDkFlqe9KCOFPLx9Bb08vfM8YrDAvdWxtT1Tb5A9w6GOPaeQ
                      J73AFcG9UJ88vFR+yzxq3Ss9gI8mvE24Gb1FWKS92CmIPMD1bDvJobk9uRGYPSDJzbsEpfQ8eCLp
                      vEBrtjzetGU9Aop3PeisNDzASGG8sGJhveolnb1g92C9WGT5vGuSxb0pwck9gA5gOplkuT3uLyg9
                      wAWnvLxH5TwAoMu7YJ+XvSggub3AYYS9UCGyOwD9h7zAsQs7QN8vvXvWhD06OMq9E1GKPYqmcD2A
                      l1G92Xa7PSsOjT2EuuU8oJpfu1kFlD0HwSW9dpcQPTl1mj1gCsW8aQOnPch1lrzANuC6CarHPQCM
                      X7m2eJ694E6WO5Tqrrx/JYk9UaSRPazXuzxzIbo9HBPyPFtVwz3SuF49AN8AO+xW/zzEAu08lPSN
                      vCDHwjutbrU9RBMXvbsCnT0Tq6Q91IaKvKA1KLtwjDq8THexPO7nhr0L2pc9sq1rPU0vT72+10Q9
                      WohfvYzM4byMsPU89++4vTF1mz3MpaY8wT2WPXcPv70kyf48q9u9vWLZET0YvoM8iMedvexqnTz3
                      Css9wq8tPXIrAT1wYJG9FcWNvYAicr3u2yA9tmcHvWxt8bw45rY8wNaCPNKgSD1UQfW87G/BvH3J
                      n70EI9g8BEnVPAb/Nz2Je4Q9kPFxvdmvwT3to0i9Mo4EPbept70I04C88iZkPfzP2TxQVLO9alh8
                      PTQi5byyMhE9kgdMPWcsvT0ku988yPbBvZqfd70Anbu5uFi3PKAjtb1Tk5A9QASuPDP4TL3w1iq8
                      ZKT3POr4r72mt3U9WYGTPeVzyT2AXOS8Qe2lPYBmtjpASQS9w3hrvQJWOj00V4I8u5bMvYZADr3A
                      V2g7kEsvve8LrT2gcb+9KGh1vLu3jr3StHg9CGCZvNvoiz1AjXW8gHWJPLLByL09pci9zY61vQD3
                      JboYMl08FCPJvJDGLr3JtMY94+2NvUq5NT2YDLG9jMv0PO0HI73oMVc8cNS4vcOflb0OxUM9sNkF
                      vZOGHb3+aXs9TAGFvPgim70zWKA9So1NvQBRLjuVDMW9E2/HvfoDZ72b+8k9k8CbvZQvkzwemxU9
                      Ni51PdASorubNcI9zEmJPMAWyDy6CA89GtcwvUA3BbzlApy9OByVvLgniTzXhao9wJupPFrKw734
                      5tG8UP/3u6yFvzwweSa9n47Avbt9pD0Akty6L7KzvUwW1rzOKqK9+ZCQPbCqpDsyFsu9vVWcvfO2
                      vr1JGrA9ngRqPa0Etr0SHAI9Axc1vUO2qD3Oq3w9IDLUO9bLg73b1IM95aioPbBKNDzan5u9NtCm
                      vXY1Br0g9NO7UNquO20Re73vjLE9+hRSPUI3XT20sbm8pkSdvVT8vTxoLdC8zM3QPJ4uLT06vlk9
                      6iMVPZwwD71UW4m9CUqvPZtayb0jOrc9ZfasPboWzL2vyYg9AL/Mvagu/bwAWoY550/FPYjD1byi
                      QVk9KafLPYBnq7pYuHW89tULPQr0eb1jo6W9TtUmPUCPpDopD8Q9aux+PdgCdby3mYc9YFCYvBhy
                      CjyYsaS91gF3PbhLozytDkC9gxSNveDhV70C0lg9M79zvfdGsT1ATRa8hAv/PDgziLzInaC8izCy
                      PV19gL1gQY67ETmlPQD7zTuo++G8WPebvFsXyj3Q5Lo7mGSFvI0Atz3NQUy9vIvkPKiQyb0bl8s9
                      ScGJPYIPPT0q42i96LPavHNgT70ASyw8nW0nvQECpj26ArW94G7MPAN7Ib0DxnC9AcCdPT0sfL3V
                      Or49i8WbvbBeJLxjrsC9Qsk5Pec7fr2oCsC9SWOpPR3gkT2HU6w9wlxLPV4Fo73jP4c9uB7BvblW
                      pD2ncVq98IwfvVIIGj0wtJq9kTWCPclCij2usEI98I9PvcOWfr2fWcM9NrwEPbIuo72pmos9aHc4
                      POpok723kF6958jJvXr1OD2Ycj68UOfSuxRcrjxzxWu9iCW2PCI7Wj0DYpA9M5x/vRiEGDwXUyO9
                      KNvyvCWLhL3BN4M90Pj8O0iLxL0gOJm90qokPRoInb0wvTE8cQuoPcAg57roPj88IHgxvd08pD3m
                      SDk9FHeQvGgoHjyaiSA96IJ2PDgm9bwKbDy9EvZvPUldyz2IWuu8DEmgvCOhij1ozUI8gIhVPKz7
                      2DzAXBi8lDiAPL67Vj2xYac9TwfKPQwS17xIUYm82GeUvQSc2zw19se9d0i+vVKHCj3QR7476bib
                      PWw167ySBJu90JCRu7fIqD2kgfs8yNifPKLeHj2HyGe9N+8pvVO7O71oBWK8S0+YPUC7fbwMuoI8
                      1ZmBvR5Fo72gNqg7gL+LPJVzxT1iNkU921XBPZh6O7yroJI9/8WEPQaKaD2wLqa76i+AvUzWDL1A
                      +wU7sFxTvIm0iz0AX868atMCPexV9Lwfd7k99GDkPHc4uz13r0C90Aw/vIerG722mY69aHnDPDib
                      wrzyy2w9Au6Wvf0ilj1C4Rg9AD+3PMDJcLyiGV89F2S/PTHAxD1YMBI8Vc67vdkaxD3ARgg8Oqp/
                      vfyyEb0wxpa9sOvXOyb/bz1LpZK9YGc+O+MKjb1KFRA9IHiYO9QZjLxwNhA8sfWYPbNYt709vaG9
                      R98jvcT4/TwGuoe9NdKmvdNKNL3Ya528YKK0u9VolL2koAC9vtCWvSutzL2aIzq9uHHlvCVijr2W
                      HBS9E5pTvYoNTj0bKbk9mBnIvEBzETuVVqq9KLQ/vP4PFj01asY9INGvvVT6urywbVq9YA2vO2au
                      Er1ibGI9EkwUPVi1rrwA7p+94KLauyA5ar0MlPW8muCpvcDtaL0Abuq65/eVPeg/wDzw7Ri9rgKH
                      vRmXpT1z7Wy9WWSHPadawT0WMks9UvF1PZfxer37hMa9ylJivcx9uryoz2M8klZmPRgyQzyoKDu8
                      ACF+PIctlD24Wta8mKTCPDr8kL0wfIG7nrmpva2lp73Fba+9+FWKvLprJj2gkR47vJP4PKHjrz3a
                      jnW9bJvavAjznLyWPgM9ADrluwe9Mr3QTdu7MFNoPMwV5zzj9J29A4uXvdO1tb1wE3a9AK1Ju3Bn
                      YTxzS0S90BgxvcN4uz2w3Za7gANjvXABTrxgDxS9M4CZvbhGqb2jW5u9BnMQPQaWFr1QPu472JC+
                      vSF8yj0ADmq8V+5/vfMflj31fIE9TTR7vQAXXLwFesW94jxIPbaTPD1aU2K9OrTAvVwN1Tw2/Uc9
                      1aefvZ7Lp72g0YI7UHo5PMvFwr3aL049uEyRvYAhcTzSjMe9rjFGPbQXxbxLi4+98lxfPWtIjb20
                      KtM8vk+KvTt4vL2d1bG9tk5jPZyQzjxoBK880MSPvbir2LzVnIG9K0qPvdB1rTt6yVk99L/OPHQE
                      5zyvW4M9AOsDOjA1lTtoXb28AJu1O+AXuzvANPm6Cqc5PUICeD3XrpQ98vBYPQFGuj26aHM9DWdy
                      vVD/S71qNYC9bP6JvM2Fe73AxU+9w/ubvVjNwjx51pI9MpxQPSccQ73u9wY9mkaLvcCVJ7wIJZ48
                      rjhCPa06NL1BpJU9SLyWvZuUtD0iCIS9SM+iPABF/LvzsKK9hrCRvYA31ztKBLW9yGqDPDDQa7z9
                      uCW9ejBnPV0crj3uPj09MKynO4CkQbzAAFW7TvA8PW3YNL2ggX878t/EvbhmxjzK0ns9KIp8vCu7
                      jT0TTqU9Y3DCvZoUF72jjDe9SjoKvUxbuDzHsrE9vsYlPWf6T70jRZA9Y6GAPXINWD3kQwS963ud
                      vblHqj0ISJg8jQBRvQU6yz1lbay9IP6+PKo/YD0u1gI9Q1DLvZf/xz2WqBA9YEo3O+gFrTwpILA9
                      NiYlPXb+nb2etRk9yT6xPUAxa7xARZU6+jsevQ1Vk71g8oa97e6MvVv1rL3qsBs9GXCnPVaOOz0J
                      WMM9aBknvGDb/byAnsE74165vfR4oTyRsJc9sMlEvKXbmD0wdQ68oodsPW24rj20Co68mtIEPQ4V
                      Zz2AxXK84XCLPVNenz0Mn6o8qglQve3UsD0YyEg8aJIOPGIPdj03ET69T2CLPfMLpT2gqF+9DuIj
                      PaBca70AlNA7LWoxvUZ0NT3HebE9rZA/vUuQtb2o5vG8Qi6ZvbDpiDutE7K9/O8NvVMHMr3LXY09
                      hsOfvcBBl70IobC8UOtQvGCETLuw8ki8ACajPKr7Nr0mCBM9AJS+uMARYL2XIXq9f5uNPZFfgD0o
                      TbK9x3JrvUy11jyhqZA9nRBwvV4DTj02U1c9r9y0vVr/AL1pbbk9MDFaPAJ2Sj2nFym90Hy2O6DK
                      Ljvvz7699pQ3PRwBBr1Ckbq9qE8fvBAnFbwMLqc8qe+1Pe9Zur0AGJ08sSuMPVRMF73N8qU9YE2R
                      PF3Leb2yGH49AlspPQx3nTysxpY8ldu5vYBNeTxWhXI9AKKCvRSjzjw6ujg9nMgLvegYTDyFuqU9
                      mMMKvKKNbj0b4J891iURvQg7r70O/kU9IBj9u0jm97wNVqQ9zOezvBSyDr0oHqs8AAD/vFhUDbwY
                      v0M8lXKvPX4FFz0z9Jo9O4uHPTrYbL3rb6890DLau5ZkQT3Ctkw9g6K3PZBlvb0tUHa95aWSPeeb
                      Xb3mU2E9hwUwvaAiu7tD9FG9/StfveDLpDxbxsI9Si15vbZ6Nj2gjKU8VI2bPEJdgL3sm7I8mEbH
                      PFMSbL24kKi8ECchvKYVKz0lJaU9ra3Ivc0Ku70Cj8e9kqU7PW+Str1QoHK9RVHIvTe+I7390WO9
                      0LhlPKjzErx5YLg9S1K6Pdkpgz0k4+E8NpRnPdgEFLzq/aa9puaGvSIQDz2/Pcm92g0XPUST/jxV
                      gqo9sW3JPXs5rL3nNTS91i8WvdDGzrusB4k8bvl6PYKJAT1+Kn09tKKJvAD7czuT6na99Kf9vI0V
                      fb0BmJ49ANbpuqJiSD1wDBW8sSyKPTfdbr1sWoS8nmIjPcD9D72sX688VLGfvCItVT1QNJA7Guk7
                      PR0+Tr3shsa8+MTqvKZ+Wj0XKrk9l2FgvTRulTyg1eS8liOVvUSk5DwiPAM9Vk4LPfaTir3i7XA9
                      lJWgvDIgDT1735U9AAfMvdjkRLz0Xoq9AMkvPL16nT34Dqu85A/iPD1UkD2bNq69dxmJPfBAer2M
                      xNu8xWbHPQk0lz2JK7w9FDr9vBqDZz3wgXS8y1aOvWhAurxwiQ68C6G5PcPFZr1Yw4q82RKIPTbl
                      eT2oCK+8+r5DPQcbvz3bips925mivQ15wz3qtkc9QKYwOwcJZr1Bqpg9A0RuvehRhL1i1EQ9cn1w
                      PQp7Ub3qgSM9qC0dvK52Xz0qhXI9XD3UPLoFf72c5dI848E3vfZiTz3R0LU9ziwePUtZnb1S1bq9
                      YJuVu53mG72k5dE8W+KMvTDdXrzQ3ty7yOiAvCA9gbsOEFY9UCJfPHX7yb2D9sG9YG1bu0Futz1a
                      IcS9GPEOPEKoUT1dAaG9w5CWPQC0YLkHa0m9cO4UvTIqTz1ujpC9StOPvfjltbyG5RU9In8KPWk7
                      sD1qnyI9ykZjPTe1ij1n/B+98J1VvdPrjj06pSu9jNMNvauMsr2K2CI9miYdvZffs734o6q8sP1B
                      vJAUdbwXwEG9AFArPIX3pT16FYy9InZuPdLRs73Ajhq9ul4XPRPtcL1yVl09DA6RvLSZ07wmb429
                      4YqBPfB0EjzQXHu8XYyXvTHXrj1DAr89YnooPWKVPz15DaI9nlRfPaFFoz0yQXM9g6OYPQWTnT06
                      CgC9ekxovWtjsz1z8Sa9QEduvQIzLD2p2pQ9r8LHvQI9Zj1Yq0S8vaQyvXlanT0ysiY9oFA6u7TO
                      lLwhcpY9YDeFOzCcdr1vb6+9QthWPUaWlb0a7ZS9v6WzPfdClj0t9Uu9BRqMvajRobzSciU9emAA
                      PWAx+bvgb/k72cm3PUKRHD3whxm80uONvVImuL1w5SS80jp3PUIFh72gGlG9ozEavVi+8byj3ck9
                      5pIlPcJ9Bj2K/Le9+voNPRMPsb0r0J09+DyfvJAPXTzFUZe9pz1pvehqrb3YQsM8/eavvVgrLTwY
                      87S8WCtvvMs1ur2i/H49/V/MvTokDj2NZbs9eJKUvDBwBDzCC1Q98z+yvf9hxL3t+JY9moU9vYom
                      Ur1w3V48gmFlPaAySr0lKI09bigcPTQlgzzb2pG9FKyovI2Yqr2gg7e8YChXu5JLor2i6aq90OGo
                      O2cXXr0A3yi9hkAHvSV+tr1A0Fu7pjWsvQ4eFD0UI7a8V3GfPYDyOrpghye9YjMJPXAbB7wDx7g9
                      BHLoPJl4oT2QUFG9LUlEvYDfVjwol6y8JXGrPcOKtL1ARTu9kWCGPVNHfL0oaFu8GYylPcDTajxY
                      XkG8cIIzvfBgfDyY7MO9ejohPcrMRL3gJfy86FiVvTdVPL0wuVC87X6xPbI5WT0XMjK9YC/Mu33P
                      Lb1trcg90MDqu1q2iL2yqRI948+0PTfnYL2vAcM9/z2qPcignTzDSrM9cq8RPcHZnT1sNAq9iJub
                      vZW6wz0IBNy8QrAnPboLcT2BZa09YMKjO/5efz3QKJO7hViePYqFGL0gUJ29wgtFPWhjZ7xDHmy9
                      frtsPZhWFLyXDXK915qcPeA3oLtySBA9U3WBPR5pXj2fiJc9bkRKPTDFMbzs3ro8AD08u2CFrruM
                      loa8qB+cPLvrkr0CNUU96VevPfJ3eD3bf8c9MMFHvOKfNj1whri9SBecvCGjnD2Auuw6KJXCPITL
                      /jwARcO7/fc/vSaIOz1QuSG9CR7FPQB/2Tu6oye9sPAHvDRRg7xh98c9glRqPX3zMb0gPei7I6+R
                      PXqsZL0942W9gFLtOybAEL0Q+Be9itY0Parrkb0n47Q99eaWvap8TT2mwY69c4qevbjmtb1MDvQ8
                      wXeWPeu7nT1beIc9mqMaPWDjsL3+GZa9h0yaPRH2nz23BJY9UuEmPUIHRT3QWzQ86I6wPHI0x72A
                      yvM6y0m5verPxb3XxWS9aSWiPb9PtL0eWTc9cRSzPaZtob1Vcbu9EDmIvQdZtD3C/EM9MaiwPei5
                      yrwy7AY9K6ORvSQ30zwAwNm6tM/lvNt6nT1gVsK7KlvIvRT2tbzh9cc9q2GgvSqiaT2UL6O8oMdX
                      vbi+u71/aLI98NldvK3Jab2plJA9J03IPbJzHT2bV629fpSPvdIPDT2Myq88uTKbPVxQ0TyZ/KI9
                      CiqDvfo+D736KU+9cv6XvV2SYL2sFM28OgcJvWs9jD1N9yS9yOKyvKBmxbvMJoG9ADMVu4QQ5jys
                      a5W8gC7uvKCwtDxxXIM9Jv4Avdi4pbx2NAE9PBHZPB2qZr14fq+926+yvYmfrj0W5gM9FlUDvao6
                      A70U38+8h466PVNWZr0iwai9xziYPReMwD2PRMS92gw+vd20gj0MpZs8+SCXPfAjXzySZTw9LQuY
                      PSJ0aT2GIi09wdawPYkFlD3UNwO96c26PSfjgz0h5J09mfm2PRS+vTxuFXY9b8qmPeVQwL06eWi9
                      /tJ/PWuGgj0oJBO8QWuTPWfVO72llp294Y+JPYIbdj0yqbm9VCr+PCBTvr0YmCY8oFKSuxn+gj16
                      9hE9ht91PQP+pj0AG3o6KdOePYMCJ73QrSa8MayPPXOHq73QJ4w7My5ovdiktbwAuma79SuovbdY
                      qj00cPY8FgpzPZ1LRb2Tubg9PQ6gvWxz4bybEKY9XzeuPW6dlb1AIAg7RgGBvf2YpD2w+TW8viRD
                      PQOnvj1gQrA8xfOQPWpgMz0Afg+8rzufPXrhqL3UEMQ8iiB6vXJLLT09WLq94Ce+vYpiTj1J8cQ9
                      YCJ4vVVegb2ov4M87UGHvdcXIb3W32899LXePDjNlb1lOqM90FE8vZrJFL0sDI28RHHkPPKcNj1X
                      zUa9UHElvIjlxLxhNZo9Pk8fPS69XT2AI5G7svy9vbNMjT23OlK9+EKAvdEMuz2SVDA9ECCjvS9g
                      jz3SaLO9GD6ivPFOpT17lsg9eNKNPMkWkD3Ix/m8qYGTPQ+RwT0Q8lK842mrvXV+ib1qs0c95hll
                      PXTBvDzAf5G9h2FkvQRN6DyzfHK9KICPPDtPuL1QlEg8VGi2vP2enz01gro9MAt8vLKSdD3DAYk9
                      k3eYveDhf70KRZ+9Y+NCvYfOHr3S8iw9WpdFPUfjhD3yHQQ9CMPCPCC9Zb2gTR27WGRhvDizvzyi
                      Txs9QG/hOsvRjb1Ceqa9JyS/vVXznz3w7Fm96l8sPZ9jhz3SgS09tCy8vLf5O702okw92pxevX0U
                      OL1Q6FG92/C2PTmGxT3ogrS9ogxsPeKdFj2nGyK9Iy+RPei7N7zTl1K9z9+xPWsbq71g0di7Cxyp
                      PU+7sz1qbi49UB+Nu/QKtrzggPc799VUvcDIBrsAqG24d8ByvSCKprw74LM91+hVvS2gmD1u2gs9
                      69q0vTNPij2nb069xjUnPVBFILz9j7Q90i1CPcywsjw4jKW8eFzGvIh3ob0wsWo8+moJPegb/7xF
                      b4G9PT1NvXIVur25ap89c3iuPYrBbj2w3Ng7hbmOPWTyi73tFaY9QMO5ugnBkz2wqkc81rqXvSgM
                      hTyDMao9no0SPVjpsb2Dzo89KyitPcIVIT3Q69I7q4KWPQBlGrqHSos9iLOlvFf4kj1Ac4u9Ia+X
                      PRh/hzzQJCS8rS2VveZRpL05TaA9Fu4bPXCUKrwjP8q9B1w/vehgazwvNqg9LDXePNiHCDwaSLu9
                      lwFjvaiM07wwpMO98NaIvVNvJr2ZH4E9JjCUvTQ3FL2WfHg9IAj6vExd2zyGTp69EwZ4vcD+4zpO
                      DY693tGkvVANWryAmJ+7hNb1PLrcUb3UDoU8SkmBvbAWFbxi23A9Y7MbvRCLKzxHncW9wETCvDxM
                      B72k2vk8ANS8u4kOqz2Fn4+9M+I1vQYqTT2rKLC9mD8APAAf9Duo2cO8skjMvQ2TIb3Cn4O91o5Q
                      PZhh7byIZ488uaCEPfIcJT0IgIw84OD6vDgOgL2o+a+99V2uPSirmjzLRIs9gDdrPAWvjr3qz1I9
                      Gn12PZivUDzQtuU70BLXO/t0hj3iQU49gFv1vMBxLb1H01G9bkBxPcXhvL19z409XtE/PTDvwb1D
                      GUW92hSuvZhDYryQfAu9ppeevZyhBr3Ma6i8cxqYPVrjHz2oYMu8wFalPFqRVL2g2JU8OtYyvWuI
                      sD3664a9IWGFPanwvz0O7T891hOdvdL8PD1Sa0Q9XQi/veJwMD1wjwu9AP4gvckrgD37X4+9sqFk
                      PbaoTD3+74a9Mt9iPR61aj2GKWM9+0esvYKMiL2WJwc9mJUdvLf6ZL1YNrg8OaGAPRerL71enn89
                      W8DHvYCdGzrIVJ68DYhKvWDKmDz4dpg8WKBEPIB1ZLpXca09UQWuPR2MIb2ymca9yg9fPY8CxD1p
                      BpA97K77vP2hOL3Hn7Y9m+6MPUwRp7zwNlu9I90fvQApojydECi9GGqyPCBQyLwONmw9nvKHvRoJ
                      Rr1S/WI9w52TvVCYEr1ZVoA9bU91vRAKhr1ptIg9VKOKvaCKQL0eoX49AILQvAC3mDsCuyQ9QiGh
                      vfKhSj1dS4E93YWNPRwA3zwN4l69AFBzvZdjmT2Tc509JmEtPWrxQb3YDKO8ARegPVN9ub3Uq6S8
                      TBgYvYALgrxsloe8MXPDPefkhD3wK7a9Q/GaPVXypb32f3g90ESxvf7IKT0anb+9+UCHPWLOsr1O
                      G0g9KAaSPACyZr3grLQ7UrUuPaniwj39HRy9DfiFvVBNFjxg3/O7WrcKPXXDob20XoM8uR2TPWMH
                      Tr3k3dU8RZ3MvQPnLr3AhYm9MGMtvKjojr2+QpK96LkTPF0AXb1Q21G8026HPQLrkr1m1TU9ktJp
                      PX0AmD2JYIk96IVhvB2eoL3g67W9gJQ6vEDEG71QmAe80FDOuyPDnr3MTAi9hcu7va5cFD3lpZS9
                      kzRxvZjWijxQLmi80pcPPd2sxL3UHJq8DAq1vFPgmj3xj649NyLGveynpzwREY89TAsYveiyOTzo
                      nzW8MDGnuxE9hD0k4vc8USqUPchHhb0g3Ga989l/vRmhtT2tVX+9uePIPbM5dL2fHJ09YDMYu1d+
                      wb3A/iI74pATPc5CRD0ezUE9AEB5N5UEjL1W7CE9pH8NvWErpz1xkcM9QDKRvDD2mLuxaaA9KUi5
                      PZl6kT0oO2k8dXObPcCvWbsE2IG9a/eXPc15gb1uH0w9+ksOvQTl0zy2Roa9nJD+PC5zqr1MZOU8
                      MzCrvSgtjzxhnr09FXq5PRagAD0rCKs9APa5u+BXpr24Xoi8sqQFPdDI0btLoIM9HcYZvcI4OD30
                      nss8YMQ3O3n2mT2MEgy9mvh3vVD9urutzoA9IBqYu2DW7LxwkjG8IsA3PcF4yj15rI497ZVyvfhr
                      qbzwaTw8oDHJPP/Yqj1Y0Wi8AMqNO+onwb0J7J49qAqvPNSWibxHzpg9F4VavQIEXD0AYcC9UbuW
                      Pceixr0duh29pIHdPEfkur20EYu9gLPZuye1Or3iZBw9rTKfvbDp4zsdyj29Fwa5vW7eez0aI6a9
                      zYKIvUAhar3i/zk9q8StvRKxcj2C8qS9AJmJvMrZuL0A0ly9CsKOvb2Jiz3IGpi9EXetPerMSb3A
                      rD28wCFgvWA+s7unR1y9WoV/vSYwQT3OX429Lmw3PXoXpL0qe1O9MqMEPdQYvTxVUMc9FqxyPQjU
                      m70ANJ46JTWDvfKXHz2YHWg87cdsvZqav71NZLa92E4mvMBAK7tOtH09bEEAvSpNdr0i6RM9mYm6
                      Pbrgfr2hTMI96BD6vO1Epj2K/kw9tC6yPJdder3FKoS9XZG6PZqJPT3YFT08oJ+TvfN8Mr0C23A9
                      k+GwPe1jdr2oRrc8CbvEPZfbxj38noW9+8HDPQAubjtHN3i9wPFqu6y9p7xu8KG9SPbZvHbcCz2g
                      n4i7BQ6CvUxhjDybx7I9FIbivKYsYz0qnmO9aw+fPXgM9rzr6L89DKeXvNPcgz3aJ3C9kzEsvS8/
                      wT12pzU9po5OPXbPZj2XaWy9EFMGvbAXRr1/+4Q9dybBvX6Wp71ozDA8q5WnvU0Lrj2sWfs8AA/S
                      uxG5oT2F+aS9wlKbvZ1Gs71FsoM9kdqrPbM/sT0CREc95J2EvcSkgb2z50O9BS3HvewywTzTTyy9
                      FDnlvD4OAj0A/307KKGKvf3Zrz2uzUA9+IHevGPEeb2aDg49mI4wvADA7bmnP8y9Jr1fPQAjGToU
                      3qu89d6gPYB1j7zA9hg8wEB+PMLPED2mR3A9MCFevGBxQTuw/g+9DsQiPe1ZxL2H/cQ9bE2MPCA0
                      pDx0k408TP+9PKcrmj0A4qG8QAxivXPXyb2CR7G9R5GAPY/PmD32Jp69YF76O1p6cT3Kzxq9IF23
                      vRUAtb1AN/i6Nb2wPYl+oD1S9xc9ljMzPdWAyz3X9Vi9oVvGPa4nlr2AWpu92t5aPQAGiL06DDc9
                      HX5lvc20Yr2UNqu8MzWaPSLVET3+xHY9ZFvkPAsZwr130Em9J/aVPVMgJL01dMI96jo6Pa1fvD3t
                      hMM9zTm7vd9FzL0Qsyy8bHzMvGB2e7tsDAa9gE0jPCiK+7wVw6I9YRvJPfDeebwg+Je70vG+vQYB
                      nb3ahh69VDKcPDzZg73YrnG8y0vFPRheZrzwP2i9aFayvH1Md71wH068sHhUvXMxkD2BjKU9kaKT
                      PRWEsz1orwc8wKjLvBoOAj3og6+9INaOvUL4dT2Cw3k9Klh3vUp0x72NUDK9HkaivTVxkz1Qk3e9
                      z3eIPXCig71SWys9j6O+PWCOGLtZQJE98LRwPHFzlD0qeSq9cniLvTmmpT0+lpm9ghwWPUwvh71Q
                      7HC9ArARPR0UwD3qExm9AHK2OTy6EL0hbsE9ArWtvWw1urzKNxK9hrosPfcBw73qoVU94P3GO4I8
                      WT0AWJu6QB0DvakKuz3Cblk96DEpPP1Ggz3AWOE6j0GxvT79gL3oAkW8gHsyvdBJKjwiw109vrp6
                      PUp4XT0qe2g9qgqlvbDXcTyDoxy94rimvZxAgb1wi0K9AHqNOh0/vz2nUq09UU+1PeNZyr0DdT+9
                      AiSavV7reT0M4eC8ibmTPbVKwD0MO4e8UpdOPWCCd7vl8re9JnyCvcbWTD2qyLK9hhcBPTmgvT1b
                      PaE9OI6JPFaziL0fiYg9UFLJOyAZp7wy4bq9hyajPaAYhLvSfwo9FjNwPU3BSb3AI7+9zye1PXyx
                      iL294rA9wZuTPVBSKjwi6lU99amwvfBOhL14UIM89Kq3vCp1X71/Wca9lM+gPADDPrtugx09yFbL
                      vEu7jj3LYKc90YC0PWS73zwTdDC90nokPZa9kL1jlry9d4N3vcY5Ej08lNE8wr9WPegOibyOq109
                      KvdOPYymmjy38jK9egKAvafXub13U3W9pQWgPbB0GrxAk/+8z/DGvW86mz1Ybl28F+WpPYAyvTpg
                      aWe9IJTFPLTk3jwG9UI9yKf9vNCgpDsvvK+90gxcPTB2w72gr0470BWbuwJ4Kz1YzBy8SllDPQKh
                      Bj2Es9Y85w+UPYz1xLzwNXO9SGioPDMMZL2VnoS9/psgPbmBlj0o0mW8hRyTPVg7ajz2zCE9Mviy
                      vWw6hryN3G69kjhTPWBov7uvMrK9Kf26PQiRo7w4QNS8jjp+PaICEj1dSXy92fujPQDHbDoCkj09
                      WtpCPbgslLxAIn47AOasvPBfjb1momc9YKgkO4AR3bztt4A9UxiyPY2Bhj1LHZS9VoRpPVp9XL3q
                      LVq9sl40PaDyqDvtPcy9YX+HPfFTqz1I+qk8kBsnPDcEgz0WAEo9AvpwPWuzyD2AI2q8NGyUvLAn
                      /ruYe4G8XoeFvZPYaL171sS9AhYRPc/Dvr1CJTU9bWa1vWCkfDsA8147MtUwPQElkz0o8IY8Uk2J
                      vWIVWD2dpcQ9ydGxPYpsAL3qZyW91nIAPdbChr2YrZK8YIGgu01tkr2AMf06HoGnvUCWdb2CQRo9
                      9GnJvKyC0TzgLq281mdmPTi3qrwoI3y8zFbAvKc6yL1Zi6U9/EvUPDKhhr0A4kQ7K4KXvVCCFr0o
                      cJo8szRavebUDT0HS6o9uqnEvVCVZzxgKMo827KTPduipb2gVYm98GoOvM7XXz0NPJW9NVjMPWP8
                      xL2/hKE9IEZjvVrCWD1qMzi9ihdBvRQ+ojwNTqc9RXmvPWycgbwczeQ85oh1Pcg4ijxwqBC9057I
                      PVJjPD30RfW84AzKuxhudzzqHzE9sPzIvZnTwT3ZRJ496MiKPLeMP71WqoK9IEIsvSt6oT2WuGY9
                      uATDvYoiW71CLhw9yMG3PHDKCjx4YIs8ufODPWqHI70A89o702t8vdCqS7wOtGI9FH0Cvcr9Tz0D
                      grM9w6dbvRU7mL2SsZm9Y2JsvXCZe7zVAsm9GwuTPYCOcr3zuzq9kFMlPJiOKjw0KIG94j+yvX8v
                      pj1g9ba85bCXvUA41LwsYds8wuAzPYjxmbzaRkq9OHydvYppW73QA6292mRHvVhPgDwzKsW96gE6
                      PfDDIr1q5yk9sG6LuwBHzDwMiZa8gMcbvdfxVL0Mwse8FmVaPcMTTL0geDW9gqFzPYCdNzyT9Fy9
                      altDvbZIgb3YlAG8qO00vNCAGzwS8ls94HCrvAACCrxGDpG9WF3YvBRQ0DwdHoU9Kw6PPR3Ilb0q
                      oIi9m1GNvUujxD2S63k9YWjGPWz2ubxw3XS9YIZMO8DKkDqCCYa9brOKvc7OOT2ebAs9shBaPRX9
                      yD0uRBA9QsaJvUGSkT0j5bo9wKAQOxwo4Dxf5rA90G2DvTknvD1zPaa9y0myvcoBlL1ARlq8AI2j
                      PBuTjD3UOYG8yNqfvB2Op72Ci8W9PT0yvVpJvL1ZKcg9l3yOPdDSSbxAAa088sUnPTDILL2lxr29
                      hUSgPaaSCD32c5+91TqTvTS7jTw6zVk93VJIvf/1sr1mKp69qo13vRCrl702pYy9N6/GPQB2orkV
                      MJO9xsUpPfHInj03CU69kuXJvYfob71C/nA9jCD0vOKwCT2MRsA8izy0Pdbydz1MYLE8tx3BvSBJ
                      0jvOX209t2i4Pc0Psz2BGo89H6DHPd0Kkb2gfWe7KGAWvGp8Q70Vw8A9cJw4PIukmb0+FGA9AK1+
                      Oxnlmz22aBG9gX2WPRSS6TzOUQo9jALdPJT8w7wLSZ49VHcDveASX73+SYe9yvR2PYVanj2HW7m9
                      gmdxPYzyFr2gKe28GfeGPb1cbb2Mw/+8aKwSPNY2dz15h609tTOIvU9Ujj1tcze9U0lyvQByrDqR
                      xaM980ajPUM8qz2WUIS9ua+hPUdJfr08jRa95zalPcxiqTwi4m09JpYUvV5olb1SF8K9sC+6vY9t
                      nj0AcVq87olpPSg7Yrz+F6K9tt6YvVA2kbsmoAa9PnB/PRKNLD361a+9aN6rvaIxQj2oL0q8Uyij
                      vVNakD0O1xk9gMqkPANNe70C4zQ94xk8vVi8fryCokg9mTfIPdBbGjwAbKy9gluXvdL0WT3GOS09
                      NL+xvF17lz3SiHE9wE0hO8Bmtr2BScc9AK5eO/UKn73zI0q913zFvQWPuD3NpFW9nN7TPL6CqL0m
                      GDE9aNadvQC0uDsNxrs9S3K0PRrxab2uLI69A1SvvejnTrwHSMU9wCi9Ohjasb2XhGG9xHr1PFgq
                      BLw4q828OFSLvBhY0bxIy428bA2FvKAqWLtYxZQ8yu0GPa26lj1QyGQ8gA4SOpC3Azz9EMK9LauC
                      Pa5Efj1AZQg8irFZvUwW5Txhuq095c2lPR+My71Ma+I8XVx9vbNgkr0xUaA9+eXGPUCr5DrAhmK9
                      0NuTu0U3yr3A/uq8QkPFvbJXh71/obc9DSDGPaiPETw0yv+8OYiTPboyBr3A/Uo7j4S7vSFDxT2x
                      7a49cEsfPOr5Vb0yVC89z6qcPUDHcLvQ+6S9EE5/vJhisr3o65e8W/mnPcrIGL2rA8c9Wdy7PfCh
                      VjwwvRm8x/KLPaDLPL0eLKi9jkmVvfiFn7yZrpA9TilUPVkQrT1MSf+8BGcQvZmlqD2ye2Y9G9+8
                      PcDWqjzfxpo9NMryPBjNtb1FRKy9ueaYPYZ4ND3QO/w7imAkvbNJOb0J08U9gK7cu5eMtL0K+3S9
                      UVfLPeC96bvQep+9l0+pPRk4sj0aQIK9YJtCvRAVPjylsKK9CulVPSm/mT1azwK9ULneOwDFk7mk
                      r+U8SgctvcDtSTuCW2A9yaqoPWz6hbzv0KY9OrlIvdC/vruwqD28Op48PaOQHL3cEdQ8FP/tPAKb
                      MD1f+cq9koF1PeUpxD3gJVu9YuZQPYCAZL0T7Ma9aRKEPUPftz0MhKC80MBjPCrRYj3yygQ9DZsw
                      vaqLMr1CoYu9bAjiPOh1g703HUC9AEC3umDZ4bsJ9po9mB89vOKOej0LcsU9B56hPeB8mTw0HIm8
                      jVnJPYCE2rsg9os85a+vPXCcbTyDYaA96dS4PRYHp71sSYe8gI3rOtIsKD0ynnQ90HR3PFOVsz2X
                      8L49kCBSvbrUaD2QLFG9AGDcOQBJaDv+jiY9QMtevSs5yr3ozZa97KmBPIBgML3AQ6S9AFhPOljl
                      sby+nRg9TAzfvD4wRj36SWY9E8AfvZCMH70A0Gq9KfqNPc0DVL3DiHG9CNL0vLpGAj20H9E8ZMgS
                      vb4tPz3K2wo9wmZzPQqZLD1Et/w8DZ9zvWAU4LziB0E9GRqtPUlSgD08RwC9/W+/vbpnVb3DyHW9
                      Pi+OvQ4+LT07tZO9879CvWl8mj2hI4g96Ic7vJJULj1oori8AP0duyiQgLxykh49DEmevLBMF7zi
                      eGE9acDGPciwqr2wTe272NB+vJP6Ur1QuMS9HdrCvXEHlj0oVXK8AL97PIXPlT3HtMe9nU1ivSNh
                      QL2AdcE80qCPvW42XT0yfnI9ynymvWnIyj0DyIc92L9ivMBonbzungU9QA2EPFtpmb21Ucm9qg1e
                      vYWRpj1kltA8cghZPZhsfrxd86o9gPDwukw01bwn3Bm9qYa2PR6jXT1IpPW88AyMvcDvGTvZ+Zk9
                      YtF+PSP9Nr3oc1M8SSCHPZ0Pd72TKyK9BW+ZPZlVgz3wLFA8OCyMvdJqBT1m9Tg9QgZ6PRX4kj2p
                      bq09LTitPYw3t7x97sm9yd7BPWEZmz3yplQ9StsovaA+oby3mnW9jU9Tvda0Ez04y5C9X7nFPVDu
                      MDyAtn+8vaWTPVRv3jwHRoQ9ULDLu8xvvLxoPaw849o9vX28ML03mly9DSO8PYBRf73RTLQ96ByT
                      PGlEnz3QWya9UDPUO1eMsT1vU6Y94uSFvSBVlbu/a4s9V3KQPXIRJD0AqMY8WLvIvYCkozyEw+w8
                      Wlc1PSMjOL1H0CO9eDKXvHAOfzwJGY89gHOxu1rORz1ioXU9L+y5vRY1Qj0LNq09gFbzu+A0dL1B
                      aL89yqTGvRqnJj1y6F49QtVhPVCkBDxq7xe9OqPMvd5Icz0S3aW92gievVRszzxelgg9ILUSvT98
                      uz3TCSG9ij5ivepzJz3Av2M7LokSPR3MgT1o55y8YHpju639S73Xu2m9rSGIvejYuDzB18E9YArj
                      vAGrkz2UgbO8OqucvRBnLL2dzMG9k35UvZihBbz20m89wEc4vYBv4TqaUWg9OaLGPWzvuDygI7M8
                      WmVsPcLhSz1ABL68zC6Gvbq9Sj3vhLG9WNCuvYd+ur3Gy3w9wHw9O8u+hz0AdPo7YI+Wvdo5Xr3i
                      0ZK9QB02vThf2LwmKQw9EAPKvYBeHTxl1Ms9LFzmPK8wkz2P5qs9aKS1vAV3hb1/M7O9UAfpuw01
                      U70gxN27eweMPWB1Lr1q/B09qDFhPM0VQ708eA69dgUTPXgNgr1YD8O8ikRQPZnUvj2ASz480OSt
                      vcq5xb3IP4w8XJ0JvXr1Gr1vHMG9/bqovWHnwT1YJy288rCsvawuirz6ZFo9rPDnPNroLL1ZopM9
                      eDKsvVDzVr2A9ye8rTIpvQV4tz2BJKE9Olg/PVVKxj233sS9AF9aOzVdlr2ow6Q8ooUbPaM2f73y
                      sE09KOr7vP+MtD0+Cjo9TDaTPCT4zzw0O7g8di5sPYHtkT3A6ee8MFvmuyNVHb1o1ZC9BiBaPZux
                      k705rYk9QHu+PCJZNz29e5+9s9UjvTfDXr0g5Z28ALaHOoTG0DwNH3y9QNtxvPRnwzx7HLu9Ew2X
                      vWVHoD3KoXW9wI+6vRju+7xgMLI7oOZFu7b1i72uaRQ98FIFPDTsrTzYEE08fWWCvSRNBr3g62S9
                      T+bHvY1vXL2eAIu9pDTYPCBWaL0CaDk9iJWivZC0W73x8ME9gBX6O/Mesz2qhg69KdmRPTYxbT3Q
                      3gW8hiKAvar9mr16CRe9E6GfvUorET2Y5dS8XSx6vcCXITubN4Q9Oy+cPbAFfb1oD4W8I9B5vTA2
                      ZrwCc5S9sEHfu8BxLDvj9yC9An6VvSAjhztMg6e8Cg9HPY3ybb2CTyw90BMIvBjjmb3Km429ltdt
                      PWhFMbxOXxo91NyYvJ/8oz2zcaU9VsAGvV8Av70lWKa9EEpSPADtRrwCKrS9pInoPEAGl73xhMY9
                      JIcDvYDno7pYY7K8g7gkvVAr17uMzZO8kjk+PVgQtL2yCm09waXBPZ2Fyz0O66q9MLOYuzSAuLwS
                      HL69F4akPTsgqj2Fja69VuorPWDRSjvY5sg82SfGPb79Oj2YOq88SkprPdD3vLu7urC9QB+xOvTv
                      8zwHi4w9XX+fPU/Awb2Ics68C+m2vbK4UT0anl69/pUIPSmvhD2dLKY9zem8vSAFm70PdcA9WNGg
                      vbT7lbyABQA6TCqKPIaUkb2IzsE8orFkPUgywLz76Km9DHGlvNKHbD0Q7wC8DauhPTKrOT3osTw8
                      gWbHPYDCO71zGX69AjsvPfrqlr28Ngq9g0WmvYDYxDwMeeu8/2irPYy9vrxz5HW9lLEVvZgmwrzA
                      oiG7AjxrPUFBqT0AXS+9cx6nvdmIhz3mUiw9APU2vdJwOz27RsY96BSivf3ur71MgxG9ADDxvJ+2
                      sb2/L549YOv2u8obfL1HmK89Nx0svQZ0cz0A9sU6YYOhPbJYMD2gV8A885zFvXNrer3dN7U9uNaU
                      vDXnnb2dJTK9NBDUvJVYmj1Su1Q98DQxvdEOoT1K5QY9y6XDvVAdsr1YSxc8flJ0PYZcXj0Qfki9
                      GDhZvJjA3LxUyKW8WM6svG+/r73b47y9S6i4vf43eT3MaNw8rPPaPJQKAb36P8y9TYyrvbgqsjxy
                      3As9i0+7vXtkvL3tMr2930W1vdm6zD0gq5a7auglvQCbuTyVprM9DW8ovWMCeb03rMy9QEb9vOCN
                      tLtgHIu8MHjcO/63n72CFD892P3JvZB6xL2+7lk913J+vRA6dDyAIho6HyjGPRDFbTzg2J+8ArhK
                      PdPrkL0m5j09gCvWOwAA1rnIH5K9rm5APVg1zL2/2MM9fgihvXh9wjw495q8SbuhPRiuljy3+8o9
                      5sSkvSGblT0M2gC9ILBcvVByZbyEaNU8pXqoPX3PQ71Mubs89k0LPQqtx73n8ci9LGKrPFL+FD2L
                      ZrI9MjMlPWGbjD2jiku9oABeO3LzkL1SHFo9aTGsPTDtRrwANyK6R9A4veGziz2wfLI7Zks7PQA4
                      7jrydlc9FyGJPVPthD2gKyS9AOEtO5SO2jysfwW9KTWMPf6MdT1S0YK9tM+lPNCqYDzd/5y9/x+J
                      PYAjvbvaY4O9EkaOvXhPgL3ShF89nfkpvdUuxz2tjMw9cipWPYiM/byHG1q9+D7hvKPKfb0DQn29
                      utuMvep+Ob2Gmlg93vscPTS60bw8Dtw82FO0PPLIvb3STEA9JzrEvSbbgb3hOYw9FIGrPNXUgb3A
                      1xQ8sko9PfD0gL2oZcO83/TIvVDoNr3AtjM8EF1/vNdUkj2BJrM9aCiSPEArY7tRrb49wXGdPVEH
                      iD1gtuG89tiTvYTQGL34lpW9Y5hTvcCNIbyS6Km9VObePDVCi71CzKK9Q24mvZ0qgr2kP+c8rZsb
                      vRilXTxon3k8MNpovMjp5LxgTLC9PtN/PUA3GzySm2c94LmDvPNqlb3wfgi9Ry1JvUARJ7v6hX89
                      aL4SvN19H73gjfe8XcnLPaAt7LvAypW9iEeUvaCaxb0jOJO9R1tPvTp8d73ASb88/kIgPQQi8Dz5
                      3a4997OSPcpVCT2C+349TPHjPBL5aT3Ni6q9uRCBPYsllD09G3i9oCCSPBlulj1PF709vv0TPWBT
                      mjxsSew8wFBavLoTIr2CV1w9UPW8vQcKRL0IU7S89LXmvE2Jnz3c8/M8tfi2PZIwJD2Lupg9oKj7
                      u9JhRD1Msei8UG2DO0JZST1SrTY9NDa1PEgzuLwu8T49gDjpOu5Xfz2bYKi9wQyfPQDT67yCT1A9
                      TTKlvcPsPL3Qz308UO5ePPcZyL0z+KI9BBHsPMKgkr04PKy9Sb+WPd1NVL1TDbm9AM7MvNU4iz0A
                      /Da7VXbHPYiribxA2yC8MB2zvUClRDtCwZq9ILHEu+haBrzoYbO96i57PfKGOz3K9UY94IzGPEBe
                      hL2Ah3S8zGzFPIyswjx4bLU8BgNRPTAxm7vTf8w9uJODvRdwZr0iEUQ98zdDvaCoOrs2sZG9sTeH
                      PXjuvbxi55m9G43GvRgBVDxBCKE9kXfMPUjd4bywOsA72haxvd5ClL2WyhW9alsMPW4gfD0zQoo9
                      AICEO6ChFDszDEa9mVOOPa0ywD0t9ps9oIaTPLfbxj0JQqI9k1OAPQJUcD3Q0vG7CkxaPelXvj2h
                      EIA9oC7DO5KErL00/YM8U+BrvVB+oL3di3i9Z7RQvQB93bzQdjo8rZSfPb7vjb3qcBK9yLn5vBNP
                      R73a1h49kOFsvEDFO703Uy+9Zkh5PQBwALukg9o8wHIHvCihFzykYxe9sMvaO0i5vzwKX7G9Kjlr
                      PWdJuT1qDXG9WjTAvRUBnT0sVO+8Q00hvXfSM70Rk4Q9EAwovB3oar00k8a81ILSPOPcpz2mXQW9
                      6G9APMXLlb3Ckg49veSFvX78ZD1Qoie9w7WUvfSqujyGQR09wPhGuzSGgjweAKO9aMGPPNouST11
                      tq09UBTwu6oRCj1KEpG96GfuvN80yr0hWJ09iCWnPIjsyb0rua890FO3O7hom70UGb88Gd7JPQLX
                      ob1gWtO7NtFrPZLBRD1Amzs7AC63PMdphD1+nZK9DFm3PG4WWz24Z8a9KK8lvDtDtL1OZam96kbI
                      vcD4wbqsEL88I9sivViPDTyycFw9cJhovLh4iLwQGxG9QwGEPSrOoL3sFqy8HZytPVx99Ty9SME9
                      ilQrvUjnrb2gZ369XcCrPd7LcD1rHrS9AK9nvNf8mD3CUUA95pyEvYr1Ir2cAYW97s4APXfTdr3+
                      u5a9r7jCPfcnIr0280s9AN7avLLvub02aU09sGpcPPL2ZT21/Iu9YrjIvWJVZj2tCMM9YEKCvGAe
                      c73efwI96KexvBrmfL3WrRo92hHKvTmxhz0qtAy9ysGhvY23VL2TIDS9APruOhHWgj16YC49UKjh
                      u/PGdL0a4x09cCyGvR7mbz1xLLQ9tvZnPTagcD2U+qA8sFg7vWSc1zyoAo88jYWKvRS87jyq4Au9
                      dYHFvcBaNDvwjQc8UDOmvQBXbDoJ8Ls990p0vXYHbz1m2Rs9ksYJPdJORj0A8Wq9vzySPZLGCT0M
                      bes85l00PWipdDxB8589gHknOlcHiz2zu229QJJvvKN9Rb00QNG8tGH6vMGLrj1pZYg9bO26vNhW
                      qb3QBES8MIysvdgJTDyAK3G9cKEqvCjQAjzqiRA9DbsivfFblz31cau92GsHvIzu8ryJs8I9+NDG
                      vJCENLydYMi9bR+JPeBG+TsD9K2940YjvZbBFj2I2r29NteDvTCrgTtqgLG9JCOHvUpycr1iESA9
                      gExEvUkMsz12Ti89APoxOVB54TsXZFa9oCsdO53gk724Kbe9yRvBPayS7zz7Y7w9gL4NvNpsUD2q
                      JZq9ILziO73Coz1QMi28O73MPe9Nvr1bvIE9IW+MPfZXYz2iilQ9XjdJPc1ngL1J8KA94kSfvYJ5
                      wb2M5M48IFdUvTR0uTzNiMy9YKmuvRKtwL31s4K9HhZZPYKpeT3sSY+8oKkyu4T22zygn2+9gRyW
                      PdsFsL1GAEU9sxkgvYB0cb1o6788iN6uvDLTQj19OI+9gBCEOzY8FT1qgEU9YYezPTJUUj0A/yC7
                      5f6JvbpohL1S7pi9h1xIvS7Ecj3QQxq9ekd5PUjSkTzthlm9UIC1vZpRMD3CbLW90sMFPWK5Gj0A
                      O8+8Lf8eveFmuD2NAqw9sEkFvLvCvz3YOZM8Jq0MvXvxsj1i6n09ch4QPYKHBj0MAYQ8JEv6PJ21
                      OL0NFbw9aFvHvC4Mmb3H7KU9wfq+PRPMn73C1CM9sCkTvC5Bqb0oroe8li4ZPTq6PT1OeVs90D9B
                      PIC1brwc6oi9cB5WPG21Y73QyRy9LsQQPZ3swL06o0Y95P3NPIAGTb1Z9LM9T+uZPRVsn73KzSU9
                      4z07vaBxpDvsgIU8WqvHvUpMH71tIY495GzePATd7Dyk//882Y2BPWeIQr1MdRC9xOzoPAiTpbxN
                      v5a9+wKkvZkWkz2XTkS9gMdGPCrKGT2pLYM9lg0Yvcr/K70iLci9yBqXvQ1apL2ymbm9gOahvGKA
                      BT1JHrQ9rImQvDArLzyDOma9H3WtvZM+P714IOm8AJwau0C5F737s6i93+TJPYCqvDrVx4u9P4qk
                      PZVXtT1Z3bU9cD4xvQJ1TD3TIGS9Ig1JPWD3/Ls0bIS9wGcevMCHLbwVSYQ9StMlPVa/ZT0KxV29
                      HbN8vYCOHL1hcKk9Tf2TvagdALyY2Vo8gIe0O2rLGj3oJpu8YxSxPZn5vz0sfMO8oUKEPTK3Ez1A
                      cjE8CG2AvXcjYL03Rsc9rXC8PYp4Iz1oxLO9UK0FPCY1D71p07s9WJxCPLAUYTyUMY68FBTMvEn7
                      lT1zcEK9TfrDve/glz0zv5k9/vRXPRu+pD0LUJo9mwuPvY+Crb3oFgC8hCLoPDJmPT3RQ709Gn6h
                      vXq5bL2B9Y89s8q1vdKtFz0oG2a8iopYva3/Yr2Jd8c9hrwWPT1hiD0AKbM7sBAdvAKrRT0UoaQ8
                      IAG8PNBLFLzmy1s9QGUVvEB1AL0ylzk9mbCXPU76fj263ZG9tyVyvffYWL1gKYc7cC5bvFQ2wbwY
                      ADo8d2K/vdLQlr29uok9l9NKvR68YT2mbIK9onQgPWnkkD3A+lK88FI5PA+TvL0peaE9p/khvY2e
                      kL3TFac9l5xXvbD/gL3pr609wlAEPTBpfb1Udc28GH1hvL2ppb3/L4U9kpoXPV1kPL2gFWa9KaG6
                      PeLnSj3QWPg7PilJPaSDhL3WWUw9Yty2veMFkr1Nf0y9SsUzPaCrZrsqqHY9Q0CRPawf3DxRqK49
                      UGwoPCpRV70fkrS9PulhPbNKdL1tyTu9elNOPSBJh7z+ogY9SdOGPQBgQ7lD1pQ9aXypPenBmT04
                      Lbs8RLT2PAAqvrlYrT28JIKCvT4Jnb2O05W9qGs7PKw03jxpYMM9l8QevShaVbxYj7+8rph6Pb3G
                      g71QBoK7KKD+vCikgzxIf4+8IXamPcNpo73ogSE82FiXPGyv7TwQ4xq8h5+NPb7oQz0A+O27Ylht
                      PUBsvrySKC49oPKNO6p2UL3nOzC9KDFWvPlxuD2ARaa6Ag5PPQvZob2N11C9GfyyPRl/xj0gtfS8
                      5eqCPTRyAL3zJqQ9x71PvZ/5uj1OFjk94g8qPY/VjT2+IA49PJP4PAAokr3s18o8zjF8PSzvvLyU
                      mBm9qLlhvLCO8Lstly29n63KPUe2xD2tMoU9hhAOPTMlM73Q8Yi73zW5PU9YsL1oQW288Ek2vexD
                      pDzA3Du7UwOuPZ3zhr0sio+8AshdPcJUpr3Fn6o9bhtDPXixs7yJ17Y9oJE+OxJiHz3a95O9f5TE
                      PWyzmDxdZbq9YxuAPUjHrTwHCWu9BVORPYDZhDzzc4k9bHzrPGrHrb0EyxW9zmuUvUp+LT1tWDW9
                      cGYKvHSxyzwplbo9jZanvbRUtzwjPCq9skklPUnAhD3G5W899SWJvWCKuzstNLc9hI/mPK6Dbj3Y
                      MYS8wPZzvXjZvb1gG4O9FwVJvSITgb35WqQ9Vy+OPbrVk72ZgYw9AGzQvHVwxb0KiYG94I/zu6Hm
                      yj083tI8gFSpO7XOvr15VqQ9noyjvR6KbT3uwzo9CMzxvPZXg73A/4088rd/Pf3KUb0m1zs9xc/I
                      Pf7CTD2lppq9aAT4vKn6sz1gBSe7TSE4vbpRSr1KyRW9oLlHO0cGf73zFZS9yFaAvfQD3TwSOiM9
                      YWyYPUAvYLvipQ49l3u0vRx55jyI4Ze9FroQPZgaG7xB/7M9QugjPSq8Fz39gTq9QB1YvMDo2rpA
                      n3S89rmSvUDLwzrACee8+njGvXnwnT1VM6W93ViavX0Npr1fWrO9QAZ3PA21oz0vyrI9mFgKvL3z
                      j72AFy88zFENvY5/dj1Du7A9l1B8vb9Tuz1G0mI9TdSSvUd7Zr0QpkS8Z1aCPeeFwj2YQro8hvhw
                      PdLksb364Z69YAPHvezWtLzEnOg8xaCbvQfkrb0AtBO9xshPPcBxYr0kS+A8VV21PWAZrr1qSyK9
                      ooUgPTmXtj1ADHg7p9+DPQBp7Lwgork8YjkePXuSq70Aa1I8ajFMPZpRTT3Ie8S8zGGHvIrJbL3U
                      rem86tlavVADKzxocVg80HJ4vTBLVTzxhbw9rp2jvaNZoj1q9Zi9QJ50vUrQdT0bnKg9K7Sdvdgp
                      a7y5eKg9jHy0POb5IT0QFmW8J2U2vZbPbz0AHxm6ABkhOgDtzbkQLEK8p4PLvcIEj70H3aI973PK
                      PROOs72w+3w8St17vdcYYL16xQ29rOWoPBxsE70DyFK9sEOWvXJ7WT2uBau9O5qkPd7JDD3i/Uw9
                      Da1RvW34nD2GEFs94lt9Pcjbt7wCX2A9c7l9vQDIXr10m9W8gqxtPYO0qb3f4qY9YKtfvTU4lr2M
                      Lag80i1/Pf3bJ73RsqY950+7PcwkqTyjI7M9oG0yuyyblDyYncy9k1Blvcu2wz0Azxc81Ez8PAD+
                      J7ztWFW9oCKQvLTa4rwDjpS92jAQvbCjKzzhfJU9tNL9vEf+Yb1tEFi9MEJjvdlawD2wxRc82xSZ
                      vaB+mruYiB08lNfjvHX1yL1gAOC8e2SJPdpqlL3nKMW97ZRfvWzBEr2KNFO9RU+uPURh6TwVAqM9
                      AkmuvVSx+TzgxK69o62QPfg2yDwArlI8E8u/PRNymb1NtIw9pSSEPXcvrj3AU3K9IGW8u5QqhjwW
                      RRg9GLbMPOk7rz0166S9du4RvWbGfz2xT8w9SYqSPX2YO73APvO8mJ3CvEMUlr0ydWQ9q6/GPd5l
                      Kj2A7Jc7HU7KvYqeYz1zsy29xBARvSwZojxukaq9InZePW5GYz2OPk49SO2IvCdOyT3ARog6IDii
                      vUp9Oz19ZFu9dw5UvcLxBD2Au088vv9RPdAuC73NtkC9p02VPeSeFb0XSLI9oPyIuzMBwL0AzS07
                      gNk+PGr4rL3hCcQ9DUJTvd7iAz0yNQo9wHmevRBzOLxHuMm9WjiivXL9ED1KmnM9hITOPIkypD1g
                      0Xm7UCRNvFRlrbz9+m29ZtxePZPuQL3Qs0w8Gx++vf0luL0QZgI8HpuFvYA7SDwHK4E9eby5PUCq
                      xryiIyk9asc7PW6Mgr0mmVE9ZOfdPGPZnD2/xrQ90yy/Pc1HW70PqbA9FDXvvPfOYb2HrH69IssD
                      PTfetb3eHHo9JEL7PMDQzrqQuBm96jl0PSxWwbzTKKK9UKUyPB6YiL3Yq4m8uUKtPbwA3jyUJIE8
                      leKgvdBhhb2X+De9Oo69vWnFiD29ipi9kz92vdJpGj1SZBw9XBLXPADoa7gI19G8nUbGPdZ1AL3g
                      dtO8AHc1vU9ixD1AAxE7U80avcIxkr3RAbE9ZdmXvRD/NLwNkmG9EPx3vVcsyL1x/JA9wLaIujdO
                      I73GBBg9SPSdvPIkMz0E3eI8W4ClPboxjr1AdXK8SLKYvMg0k7xCKAs9kUqKPbZVk72oA7m9yg82
                      PbB1ZDxIEJK8MxKRPTNRu72A+gM8oKWvu8DePb2wclK9sBx7vLfFTL2isA09L8aTPQDc67oCcpK9
                      hNWBvQCEjzvh0IE9U9u1vTLXdz2UB4a8gpKPvYyODL0abbe99CGZvDj9pryAYbA6AmQhPQMWvj2Y
                      kJS9mNogvCfgKr0Ews48Au1FPf4tGj1CFS49fQdavVkIgT3QfSU8Z8KIPQAAqTsqo6C9YppnPbgN
                      1rzhWo09FtGpvcDawTyH4nu9bw+CPQD7yTvEToK9wA6Bus7dMz3ia2093heQvQ2yWL2OEnw9//my
                      PRVxyD1izh89WNw2POz1nrxu+wY9kvg5PbDeNzxgZ+68sg9zPWBZwLu4U9q8ppANPfDAMDx9s6Q9
                      ll83PY3upL2QTzq9FsUWPWiTOzzGFQ09QERcvWm/mT2jvJc9bnk0PRDkL724zo28UloWPUcMy73C
                      /ai9OB7Bvc6kUj3s3Y68+v6yvQDavzo0coc8xdqhPVDzJr22e5a9+t19vaumiT0grm+9kE0PPOWh
                      k724CMC9oOmPvCZCFb1aQG09xOTjPESF6jz+eEk9MncMPdgAjLywmPo7AP+5vVIeQD0bsbo9gIvP
                      Owp1cz2afCk9uxjMPSJPID1gH2298KEhvQCwU7kaSsG9L6+FPVSGgDw6Pbi9C5iavZR0/7yYkI88
                      7WuxvYpjOz34Ha48TlUGPQqcAr3f/Zo9QHUIvdBCUbxgH9e7NrYQPehXBbzaoa29d1EqvWBPjbw+
                      ZGg9uiU1PdAul7sYSrq8oKcDvbcNX71U/Oi8sNQDvOiCO7yNxkW9yhpqvaLMIj3A7hm7UAo8vdBn
                      prvw2Wa9is2LvZWSrb2+CYy9jObsPCpLYb1AetO8R8OaPQpLQL1HFsK9ETihPc8Mrr0Aj4o8vm6i
                      vViegjwoFOq80yFhvUA4sLxaILe901m6vTHdnD0G2Ra9MuRLPZEWtz3hfpo9wn4APSUGtD2uIpe9
                      gB19PB0dpT1gC4k7mFWbvP19vj03lZ09JktLPdCPeDxQBY+94YaLPQCEMzxfrIw9sAhvvAJscz13
                      p8i9EndZPUUBwT0b/rW9tLCQvK1Mgz1QYMw7UzWhvQogRr3k4Og8DxfJvYUUvL2q4Xo9Vzcfvb0Z
                      Sr1oeno8FvpAPUqYRr3b+pK9rG7zPMu5j73Q6ZY705tMvcpTYr19KFW9bcSBPf0Xr72zsa692W+n
                      PW4vID26hkM94oVQPeJyUj1reJq9QAVrvSGumD3tEmi90sluPcKPfD1AXSY7tGq7PJqUd72MAIE8
                      i/uvvbSCujzAiPi80reAvSTe6jwEgPE8mokgPQB+obtgGvM7FH+9PPgMhzxiQkA9dzBVvQ8xlT2V
                      x5k9fsNdPdr0HD2R0II9yLq+veM3eb3dq8o9R6+2vQAenzy/Q7U94JSnPJT3qLxEMdo8k5OSPe1X
                      YL0AK+O5yuEXPZk6oT0B9bU9HV9fvQBopDovqMA9eyiJPR+UxT1gSQG9Cxm6PQuxj72Pg8y9DWGN
                      vdxiDr14j6e9oIWgO6aYoL3985Y9W/GQPbI8Yj0itHI9XQS9PU6zWT0oXo48S4amPZg+ajxMbZI8
                      gLWmuqARb73o8kO8n6S9vWLHVz0BXMc9qInivF0bG71Awn07mHFzvL+yhD0JL6o9CxW7PcwLhzwy
                      qKW9DI35vOBZBL3SzwQ9WH++vXckvT3HTLe9h6HBvbNdb72ayIy9VuKnvS07vj1kXeU8j1/KvREO
                      kj2iOFI94SGcPYAUk7vgJNY7I3PMPblClT0PYqM9g8OZPYiIszz5z689yJCMvdLwIT2og0Q8Pl2P
                      vdCu/ztYalQ8yCjMvezT2Tw0qrC89N+IPKcdWb2KaUk9lvA6PYforr3AYrw88KKNvZTskLzXRTC9
                      39GjPUB2k70oLXY8FP/OPM5IQj0pDY09kkafvS/YwT0AwJq2nTmkPUhxoTy0kqu87f59vW4JQz2N
                      fEu9eiVDPX9mmT3Mi6y8QFgxPAjlxDwTE6w9Lq2FvUCHj7p1poM9ABycOgBAcjh24RY9eBiIvYt1
                      or1g+ow8zJOovLgWhbz6yzQ9wxqZPXPdkL1scuK8Uzd6veF9yj09wqA90FEbvDeNfb2AOzI8iWmU
                      PcASX73Wj189VoQdPaZ+hb1MINW8UiA2PSPAu71QEh28UGxWvPMYlz3gEZS82P+vPHUGmb0XYDu9
                      8hZkPbL/cT0ACUy8LanKvarhNb3b48e9uW+TPSdZKb2qnRC9Q6qyPdACcb1FDau9fYeNvVA9RLwo
                      WKg8wnRxPez+oLwT3Ha9N1DDPSWJgL3SIkY96r23vTCgxL2sVea8s/drvcodKL1mLVM9cgQ3PRm3
                      yD0UR7o8+rtPvSg8hDxZcr897dSjvZofgL0V44G9x+XIvQD/V7qYODU8x2m2vbprf71CgBk9aAQW
                      vGCvEb30r4w84gdTPWN3jr36l429YjCnvUknsz1vl8i933WaPQgh67xdSYs9HDEGvV5xQj0IypG8
                      +pM2vX6ULT3CIW09DflgvTOWML1u6Ds9GoQMPQAMMzr0X9y8tBG8PJfvmz09zp69bepyvTvZsz2w
                      nwc8Mq88PdCywL3rZMI9Xm0cPcs+mz2YnYq9wPCAumA1m70ALHm6TY91vfz1Br17UZ29MHb1O4Ab
                      PzzrqLg9tjgyPXYqrL3AoBI858Gwvef4rr1Mu708frZWPdhxIjy+3S899GLhvBgdybxjCsq9rDPB
                      vLqBZL2YnXE8wyA4vf1pRr0DJ6491il3PeorqL1mFFg944PAPSCuBr2ig8y9WMnZvNIYp721m4q9
                      E3fLvTSq0bz9EkG9slOXvd0FxT0zPWS9gCs0vEBNRLvALsY6fSh9vYArCjxUf528jOf4vJK+Oj0i
                      KIy93dt3vVD1lL1Nrn29XNQSvaghGDxRjoY9iuEtvfGehj2AtLK9miI5PcAgqzwHJFO9looYvRAA
                      gL3Y4Fg8AWCWPW7jMT0i8Tk9gIO9PGjxyLxzM7S9zrWMvRgJsjzAqUO8Ci1evQBa2zknehu9JdW7
                      vfPXT71SlEA9AGxdPLijxL1pxZY9h3a8PWKVIz1tBCe9NTSoPXLuKD0Ey9g81Ru3PUm1sD2TqlO9
                      APJQOyMrgj3DB5g9QMNGO6LAPD0EStc8TBucvGnrrD0cG+c8nMriPOXTwr0YJ648MGkJPMp9b717
                      7pW9KiSSvaA49TvisZi9uRSEPQsBob17Q8A92MGvvcX5kb2A14s63gRIPXlekD3AbwI8dU2PPesV
                      oz2z95O9n9ifPd5XBz0y1y895UanPdCtZbyF6o+98MiFvSmvyz0qYjI9ikxpvd08mj3JK8I9Ir9j
                      PTasFT0mDFY9VBOAPGJUPD1waLu9dZ6wPfdpsL3nUYU9xaaPPZ42ID1ISog8S/KAPaASxr1A/Bs7
                      VXbHPYRF/zwQQQO96t0QvTBcerwMS/28dOqsPOgZKDyM1/w8+CzEvfDbDzz+rCA9ABhxO2ReE73Y
                      q+28mXO7PYBfJr0YeF487JXVvOD+hTwAy/+5AfGoPcEJrT0C8Gk9WK/tvCNhOb1AuiK87DDLPO+i
                      gj2IZ+a8trAnPSM/qT3FIrO9kJ8iPBPZSb37g8m9DD6FPECwXTuw4Qm9kOdYPHWfkb0KJ6y98pC5
                      vXQ7uby3g8q9lQWBPVeNuT0S21Q9sJA9vVgKPzxAMUa7EMt9PCG8pD0labi9dYa5PfBbSzwAaME6
                      opq8vRSwqjz0arK8xj0VvWBNo7snmr49TloFPTGIxT2aunE9FkIDvXBIM72r1JS9NDj3PHsioL3o
                      E569QMqsvHovHT3QydY7gGinvD0qlT1w1UY8LQ9dvRSj/zwhjJk9s4ZLvUS2+zz+5aO9xwDDvcDV
                      KbygP8Y8ANcFPI2DQb3qwKC9z7vHvcCFgbyOa5S9uP7/vMjNm7yw4jo8aKi4vTKPez0VIbo9YBgi
                      O87jaD3zYsO9EoE8PWHxtD0KBj09G+TLPdgpJzzyBDA9VbmbvcHxvD1ngKU960OaPed5nj1M8uc8
                      vUCCPf9vwD0+uDg9m1u7vYBpHrrKfyS9SsCsvRbGjb1QV2G9ML6cu2De8Dub35K9qr4vvbDvj73Q
                      pp2717XGvQBDQTv2niA9wZDBPSfJPr0ivXQ9ANh5uAomc73RZZM9gm+YvZY2nb0A65q7K2y3PaAS
                      krxVErk94kWJvTAjfL05pK49vWgmveJcvr0yhrC9GIOCvDAOKDzsSOq8o4WkvWVqlj3A+VG9wg1b
                      Pa/IxD3Agn+8AA+lvYOHeb2oyZm9bo0PPd0gcb0adjq9ONnBvXj4x7xN+4k9aQCdPdZim73uhqm9
                      6+mkPRM1jD0YD5a9+CqevE76az3YiMm9Y2a7PbITi72F/Yy9/du8vajT+rws75k8Kxy6PWAiWL3I
                      WMi8pCILvWiePTydaIS9mB7FvWgAi734e+O8FaXLPWbkkb0sr8i84oliPeAwSL203Mo8lCUPvVOj
                      N72ww0S82J4RPLQfwDw+goy9C7/AvVfHoj2w5be7SFuWPKBLRjuDnz69/X2pPa2dmr0JS4I9A0hi
                      vVhNIzy90Lq9oFm9OzrcKr1Y4l+8ldqfvdCSPrz93km9fZDCveDlgzxIuam8bWRPvTgmtL3y4CY9
                      aQCrPRYqLT1bqLu9B/J2vV0Ujz0wObe7EK5TvSlriT3+4KC9LXilvcAzDrx8a9E8/qSOvXb7aj3n
                      wB29QbicPSf0uj36FGm9wJTiOiGxkD3wXi48wF0evVCGR72wgFm8um13PXTb0jxxdo49MyNtvfDV
                      xb2c6/Y8ACwbOdslnL3BVKY96J+1ve5Jdz0TjZq90PStOzMqo71A84u9wMePvKiXkr2H6Ei9Xscf
                      PZxNC70qgxW98KwLvRCzXDwTa5Q9oD69u9Odmz0B0rE9GCcuPDTSjbz3gIA9ne4dvaj1zrxz85M9
                      YEVROygPC7zWYGM9t5ofvUtTjj3JU7A9aEMyvJZqC73xS8g9QsRFPcHHwD2I9Yk8X2OdPdgcbLxg
                      aBw74uo0PZMijT3HvDm9ILDgu6IhYT1lcoA9+O+RvL1gN72oy6y9yyunPYZtir2wpKC7kVyFPZgo
                      tzzLErc93v+GvUDUWbxOAg89KHwZvCA+qDsny6A91X6yve56Cj3HBMe93Wq+PUzbDL1BTbE9ouWK
                      vcCGyjpwvxo8WmV7vbW9yj0ASac8cgW6vc1RLr2gUBu9gJSwO5jpn70wOiK9y/6RPRboBj1Mgu+8
                      xOwIvQx4h70ojSC8tKjovMLSPD2aMou9eUKFPVDiyTuS0Es9N9iYPQVCkb14Nse982IgvXiA0Lyu
                      XEE9LJaoPLrJob0xG4I9+jF+PaBvjL2t0aw9cFkpvKHBkT3OuGQ9Ib3GPViug7zhCqk9DO/3vKRZ
                      8zxzNx29GD8BPOgDxbyw6d47QJtnvQrVW7105cm8qWi4PYfHuL3opyw8WNw8PACPezqUete8JidE
                      Pex1uTwNvUC9pveavUBqvLzk5ou9JVbBvXNBpb1AyTa8jDSJvRhRX7w3UbM9pQuOvYPzmL2Ufre8
                      ePajPKitErxYIJc8cCdaPLdyjD2NQ1C9oTnBPYQw1jz0YNi8VNDvPCF9gT1b8Z09WsxCveu2pL3i
                      fau9mlRxPXVrqj3tg4e9kZLCPawD8jxA2hW9wF5ru1YcGT2Dr569wN72vCgt5LzqylQ9CJW2vNjh
                      DrxXrDG9R6KsPfyr6jy4tso8JSvJvaDcrrzbtIg9YHbMu5O2Lr3q40K9JY3BPdcfNL2wAsi92M6W
                      vKCnUztVeZk9vasrvcQ+5TxbzLa9A6EvvbrsS71jCr49eBKJPHhihrzQr0u8oEF0veDXjDw2+w09
                      y0KDPZOKjj1MK8c82fOIPd3uqz0i2jc9OCeDvPuntr19xrg9RAuBvVHhuD1Zn5U9ELFoPEgVuTxw
                      Qba9Yt5OPQZpDb2HoVy92mpPvcD2v7yWhm09U6ctvbRl+bwgRYW9ZabKPRTgjLy/L6E9sQ2JPV95
                      vD2EjfI8+kadvXdoqD0gUto7ZxUhvaK7Aj3HO2e9wnokPXj827y/xLk9XqifvZdQb72w6ui7TQQi
                      vTv+kb3j3ru9xhVtPeoGcL3mPpi9QIRlO6wqkTyg2HK9Ma6cPUt8pj3aimw9GNeavcJNeD2Y2EQ8
                      sHJTvVRr/Tw9prK98XHKPWOkn71Qt927k4ltvTAEvr0D9lO9Dv0CPeIyOT3tVqq9CnyyvYfdX715
                      IY89zC2MvDxmFr00I/k8gk9rPTNjnj3ie2k9pK3/PP/Cvr1xe6Q9Bu0LPdNDkr05wY0908llvSKd
                      ET1lz7u9mNirvKmemD0/f4E9I9F0vYzXBb1l6Z09/pZ9Pdq4Kb1z3F69BjwNPYzwEr2MEMW8iyia
                      va4cDT1ZFL09jkV+PZTKoTxtoLi9NELCPEoZe72oseO8YDyeOwiSkbwjYDa94joIPYLHub3awAI9
                      /MUDvTCI0zto/7e8gPCbvcVOrT1tiq69AJghOiibGTwPF5898HrLvfcOLr0IDoW99n8uPWf0gz0s
                      gra8oz86vZlTtT2LFb49tJKRPC1tyz22zHg9QwZRvYB8dL2BUIw92/CCPVjaYLyAfmq6+kO2vZmB
                      kj0wH7K7ErAPPaIutL2ILYe9zSk7vdf/rL2sb9W8LRxoveIpdD2zDsG9YBy3vaCO0zv53I09Y8QZ
                      vQAbS73vaLC9bJKDvWi2l7znW8E9JfDBPfDDGbzDPGy9OCWlvANjpb1uDp+9igNJvQVSiL2dMiS9
                      CgyMvcOvpr3sqQe9kP8DPJBeFTwvF4I9tiQZvas5xD1Rqqs9iHOfvOoiWD11H7k9F2+ePeR23jwC
                      RWQ9gKaUu0GjoD2A8+e7+CCOPCxMwLwRmIs9jbOFvSj2frxTbSO9rtAJPeiKDryHuca9oGZbvUtB
                      mj0WIp69SrkwvVPYyj2stvs8rf++vbveyT3oCzi8GuVavd/+rL0AeWk70N25O/5/fD3TwKa9nqmi
                      vZI6LD202de8cQKWPRd9XL325J69empFPZf7sb20U6S8ALQROYrej72gyL87ug0avckNmT3j4bW9
                      FyE3vRdayT1gNkO9LPTDPBDuWjzAkGS8MFFdvQXOjT3QkBi8amMjvbenkT2Ff7w9IngYPfAYBrxn
                      z4s94E2hveBneL2iCEI9wKq9vN7VUz0QEyC9sxEovSb5Yj0hU8U9QhRwPWgKOrxNsIY9jBXgvNoX
                      eb2D85c9QBhruwCORb1A/nK8iPOEvbSgEr1NCE294PiTvYB7TzwrWrm9EvzEvSAe2LyKIia9L6CP
                      PTi+tLwAVH67V2R1vVUZjb1Mf5s8Mkx8PRUvrT1UqxO9VoQFPfBjJTw6ory9l45gvbqpcD1oEZq9
                      ORyWPbA6HbzQvho8ss9RPWsvtz0is7+9bMLkPOsinj0wtJA7EqB8PZhJw7yj5bM98h8wPQ1gVL1Y
                      fIe8LQzKPas+yD1gZbu8/ec3vTK5Pz00wIW8OpuuvZrTYT1gDVU70p6evXaVLz2Drr294FaAPNTQ
                      mbziS8m98QWdPcX1qz0NbB69o60ZvWEWuj2Z2YQ9mNG/vZH+gT0AmVC6bNvVvNI7pL3kbRe9KMAm
                      vAPkjD0mCks9AQ2wPZL7Hj0oWkk8QBCSPABY+DvKGYW9hPoJvbSEnTwsja48UABmvI4Eqr1gLHS7
                      2H+tPLgI6byglLA83eW9vRLBGT2bLcO9BGHoPP3ne72v+LW9xtEJvU0Gb7267I29Q6/LPeXAvj2W
                      bHg9qT+lPcZkRj38MIi9IF42vQdasD0A1u47bIbhvEBf47w2njw9DXeWvYU+qL1mwBQ9aTuYPdLB
                      vb2My5I89C3jPMocdL0Uj9C8RJLzPChJo73hQKI92NKbPGDas7xyXRE9X8fJPfXVlD0gIbM8QKwq
                      vZFwnj1uyEk9CaSMPQD60ryQkjY8Mf2+PTOPrb0RIbc9O/mvPRSRobz9ZMw9ziMNPYDBJrx3oqo9
                      Co4zvThayzyKtyc9Ko6NvfhvljwyNYq9YXWIPQAlbLuWEFs9aqNrPVe0e71CuhI9Lk1ZPcAfTDsw
                      FRo830eoPVNbw72Afpe7Qq9APVDFQrwHqTa9ACCxuq01yr1Kv5i9KscDPRC5Lr0zy1G9llJRPRFJ
                      xz209q+8Hp1LPVicoLzxFKM9Fjk6PQivtTwkiNQ8IXuxPRLcTj2M+Mm8c2uUvZpTMr2Y0ra9weu9
                      PR8huT1zTZo9OhBrPQARFDteJ2c96rU0vReWML1NMV+9LCzoPKTz6Dzg5y29j265Pc1jxr2CdWo9
                      LT9UvaAj6rtA/d86/LTOPDBYQDydB6e9wPlqvEUqr72DtZA9dbzHPVDpE7xoEha8/A4Nve6dRz3b
                      L6s903i0vYAmWjpwkws82lofvTw/6TwSlLC9BlQdPZhrsb1q+lg9m7SyPXBebry921K9Dh0kPawV
                      ubwAOMi8zcdTvcJgGz0QyxO922S8vWJ7ED2CHEo9gkkcPcT43jwC6CY95pIcPVEZyD3yfWg9Si87
                      vXqndz3BQog9QNImuwDr5DuSZqG9MC5qvRgIyTwzC7k9hlUCvcj14LygsmG7Vau3vTecdr36HZO9
                      12wsvanAvj3ANho89ee9PTSNpryF7aA9eei7PcApMjtGm4G9goeIvaJSLD01tsY980aVPYA90rs2
                      9DA9XLfnPLK4bD2KLyo9C16avTtolL1gjLA74sRvPUq5g73qf3S9cLhpvLgIrrz0dxi9aMK/vDgz
                      oL0A+/K8BTiuvaBVqjsfuZE9kHyOvTIXAj27iLY91F3MvBb9ND3zfJw9fcxdvZqcej1oDzA86KCx
                      PNNGtL2RP7M9CBOHvCUGrj13I4M9vZWRvYB6fTyAfDy8BaCsPa6diL23i2u9P3SGPe+tiz1IrL28
                      A/m9PckClD3Cay89K4rJPXqxND3Z5LY9wM6SumUhyD3Klga9jDUUvfeAvz26SDC9OVePPV0ldr0A
                      mgk7LfCXved7bL0zXyi9WiumvaNLZL19Sr49YIV7u2ika7wqGBa9AAxovNJCYz3QS4+7oLpOO1x6
                      6jwwhMk7xbWkPdDOVDyQSyq8Ur4XPULFxb2kuBS9mGHfvBNLqj0LAqU9B+ckvajyrL0Qo72906iC
                      Pfu8qr0QBgy9Tc5tvbrnXb2wsUG9vZmdPW3jjz3I4rK97OTHvLrcJ72AGNw7oDULvSiFibx4l668
                      j++SPTdbjz1Siy49jvNCPazb1zxB1Iw9t9m4PWYMnr0673u90BEBvXtTwr2edmQ9vsZSPShOxr3y
                      Lyo92aSOPU44kL1z0o+983+cveBXk72STbi9gL0ZvCTZ5jzyzLa9WeSxPXArP73oMJm95515vfvR
                      rz3PU5I9jjuVvR42q71hub89Q1OkPaPMUL04sKo8ah5VPZSbDr2dCy69sLrJvf67HT1YeoU8V9Re
                      vbg69rzl9YW9cB/BvYyV/zyOhVk98ueWvUgeszyzhYc9UoEyPcYOF702cj89o3+ePTCbc73y92g9
                      4ND8u+1fJr2m8xO936G5vX14wb0ozoW8pyeDPfSpF73IsrE84r5hPSr4Hb37d5u9wPcGPJQ71zyH
                      lXS98BsYvE0Gtz0uqBk9O3SzPaLIqb3o4Ci88ooFPTKJtL1NzSy98MUAPL81uD0Ehf08/ZuFPVOD
                      ij2gOfY7wF+ZvY0dvT2UOYi8eYfFPRsWyj3LRJI9PQesvbiH0ryjvYk9bc9xvSdMsr0QghW9iBic
                      veoue73mmg+9ZSeevSI3Kj2zASK9fTq+vRR6D70osyU88b7DPVSIrbxgGHo7e3vLPdIKRj0MS748
                      S3+hvfRSxTzYvjS8MKnqO0C1dTskDN88CsSDvS3Zh71ZaLY9xdyWPQwVpLwiNXY9KIDtvIf0Ub1M
                      w968GcywPXuPkr0KJ6C92kJ/vaApQrveZEM96ZPEPf2ocb2Yk5y9h1m5PZ6xo72nJSK9LKL9POVE
                      mj2/yMm9ca6lPTDDyTuwBE+8g2uJPdoyGL2wwM87YGfGvDqYMr1oi/i8Oq5ZPQptcz34Jqi8vpFV
                      PVFsqj0jV7a9uA/DvDsiur3Yyvi81qSPvS5tfj0adia9I6++PV9UxL0vw8U9GmvFvfAVOzyj/KC9
                      GH9cPPsOoD2gtYE86XmiPXoDgL1tg6694hwCPa1huL3oMCy8PdVxvZgekzxl+bo9MPhwvNxi6Ty+
                      m0s9AJqrvRpAB71N68k9Lr5sPRmPwj2s+6M86tGPvfLfeT1wGgS8WyazPbnJrD2X2ku90xR0vbL6
                      LT3gXq+9gG4FPBKaKD3mLXo9Lea4va2+ar1BarE9YHqjPLeioT1ON6K9CqNXPcOBsD1zJ3C9Cgs4
                      vRhvlrzbJ589P1i2Pa1DkT0y4Ag97MCePKVmq70JzJM9LSwfvc5Pj71ErAm9TfjIvVW0n72O7AM9
                      SicnPdaWcj3A9dK8QIJtvMDDJLxHkiK9C6ewPT7cp73o6ac8aq+vvaQV1zzKCY29h3Alvczs5rxA
                      N6q9PeBLvRo9sb3hDpM9TdOoPUAaHzuNLUq9IG+mPLAtPb3aLQa9qbmIPdrARr0SIDs92FfHvMje
                      gLyM0+E8TUhdvaCDJTt8GBK97R6kvSBCkLuA0eW6DGvivD52m73wMLK9ILLCu4xht7ys2Im9RnAZ
                      PbIoGj3pEpg91A+SPB7vLj1KHEO9/SiLPXyS+DyAH/m7w9urvUJWSz09M569MhpVPe9qpD1AOJQ8
                      bTqZPbX2gz3jkRq9ZbecvcB1N7sd6cK9UJb1u75YRj3sHv28BDL1PPMPbL3gcMw7CKmMvBhMuL25
                      faE9ML2mu9S9Er1Xtao9sBpCvBC4QLzD7Di995uDPVDCLb37DbK9+jSsvfHRwD2FFsY94klIPdBs
                      LbymFXw9MDVgPEzWkLxwZJG9E+8avVyM1Dx382m9tLuMPPZVVz2gqxc7rBQMvVwRFb1M04c8UICD
                      Ozya0zz0H6w8PkKdvQWUtT3ICbe8AAd0u8FEoT2gH9+8oHKdOwA0Yzue7JW9ABrJPLCF2jtArAg7
                      Oj81PeBulzuxOqE9AK2TPO4CnL2Lqbg9gNZFOqB04bs4VoW9N0y6PYrtsb0oOSc8serHPd44eD0y
                      YD49QHSyPHwW8TwcCoa9/aYavRKaAj3KHQa9i/rAvWXTur1KMx69Mwy8PWtloD16+Fy94FS/uwAB
                      S7w6wzy9vpEDPajxADyY8V88oFiLvCaWRj0T2p69OvQAvQAjcLrsV9g8OZazPfRT1DyNQIS9lksm
                      PRpzTz0AZ5e80N5pvW38wD0U/bw8GNIEvNWRk70pi8s9b/zBPdL3ob1ohLQ87W9yvZoBPz14wLG8
                      QHB9vJCEML3m2zs9dI3pPPQz/jz61li9+micvUGogT2G1oG9RAXxPBvJyD0thWa9tCLbPCgMu73n
                      tsi962qmvRicAjyg+o87yZuGPahQabzCh7y9cIFIveDynjv8hQG9MxuvvXkatT24/YM8DT7BPSiY
                      fDxa7VA9w0VfvQvrrz0dX529TMboPHY0PD1Aw2E77NbHPEUEqT1ISoK9oDmgvMBJCLyaJX69kuOW
                      vfOukD2Feq69RhqFvQAo3bluSEA9kUKnPZiXP7yjfce9lCrmPDvTmD01xsy9WKJFPLafFL2tt429
                      25uuPeKJSj3ACw076WmsPQv1vb2g4YC7lJDDvK5ZAz0Dq6G9dLUFvS9Gxb34C4Q8CJ2nvQAwWr07
                      rsW9aC3EvLZubj2QgUu8qpkwPRtLt72g9zM7YQySPdhaVTxdI6W9wUOSPZgaqb3wnGm92rFNvegb
                      XryigDU9kHQdvVA6qrsKNXo9xQO2PabJq70w2MQ7AKGyuygfyjykHQK9wOFxO8NKGr1QYNS7ZsIW
                      vRx2/Dwajbu94lgWPcTe/zynPGK9/vNrPdvVyj1dJ26982WrPdCk+Tt+HEg9i0OmPd82zD0DCKO9
                      oAvdvHONwD3XHps9rrITPf3TPr1aViC9HUt5vadNqD0Anvk7XdawvXqtCr3Q2ei7OIuMvadnlD0U
                      m7I8J0Zfvcjiwb1QiCg8EHsZvW36g72+jH49iJCJvb2gq72KbUk9aEJ2PCqVsL2g17A7/lBDPQBQ
                      xTdL4YU9hMzxPEz+grywq1y9UKE6vBTTjrxQj9C7gOCju98hsb2HlTm9ZLTjPKNUWL1cV4G9mNZ5
                      vNDFKTxCRGk9AEC1tsq8Zr0eKUo92mUzvc6RjL0Y+U08rvB+PbBCyzttmLG90udIPdvZhT0Bn8g9
                      4w07vdITWj3KX2K9tLQXvdeelD0rKZe9ewuaPRhnsr2s4oO8UNh7vDPfqL1QykG8UM4gvWhrn7yT
                      l0K9OskSvUiNnr0AfKs6azbMPYy1/jzFvo89ACRbvEC4dLzUr4e9CmdqPeqKVr00zbK8bq8vPYNQ
                      yz1fzq49oCPdvGwH3DwmHQw9CoITPcQNjL0gRx692lZJPWNHZr381Ye9dqFOPSvKjz0dcFO9XYnC
                      PVlYxj3GDw891eaMPen8hD2j0WW9kgsoPdpSP72Y7jo8MhFMPeP1t71QQgs8oHjGu/5BnL0XO5M9
                      QfiGPd6zHz0WGAo98+VLvSFLoj2jYJw9rCilPECpqrzy+5q9Gg+wvSlplD1aPjW9GGcLvCwopzyU
                      29e8CFurvedKSr0IuJu97EiiPIpQcT3wL0i9l6fKva0Aa70AQug7EdDHPRhNfjyiubS9eMCgva0M
                      Vr2LDq+9S1GnvXrca73r7Zc9f8KPPZfsUr1jSiW9iuEWvXgnxzx7jpK9jALIvOuisT358qw9zXKH
                      PUCiMrw0EbE8oM+9PHLeaD1fR509Qm8UPaKfnL14cqq9MtRuPaNwvT29tsk9Cjt3PWQpzTzds6K9
                      9MQXva4Ukr0OvJa9xvsqPcxZgb17S8E9F3R6vagtDzwAzny91+C+vdDIvLtAbbY6+R6DPZY1j717
                      BaW9xW2YvZJxlb3weWO9sFe6u6fssT2gtuc7h4NivboZdT0qWDu9EdjLPXLGAD1EFv48vW7FvdKY
                      WD0CCVY9gBKHuwIuLj0L0Ze9BkugvQxx7zxQW6c7jiYKPTTPojwi0yo9sCupO/Y2Cb2oPZM8ba+3
                      vQxYsLzSPI+9/8bLPYOYmT193IG9Z4u4vUK6sL1wpge8UBYfvYvMmj2tlcG9q4nHveCiqbzpcYc9
                      yNmKvJxT0Dxg1cG92C8sPBrIZr00DA69FLSuPICk6bpK+gI91BcZvYL3OT1b6Ke9dGHQPIJrCj24
                      +7U8NQy6PdrxJz1Y+sI8lVm3vbhBtTyBoLk9IhxTPe8kyz0NK2W9jLXFPADMxr3EgPM8KpZgPcXi
                      tj1DzXO9jEm2vFpOWD2Y0ZC8MKREvcLytr3miAW9LbK7PVu1yD20deI8RnEDvcA8eb1oo0A8TjYK
                      PclagD04Qo69ACQruxCbNb08HAW9/Pb1PNrdv73LD7A9fSVFvQCzszy6o2y93Q1ovX5bEz3QJAi8
                      yhZwvRgbpTzIPpC9kh2jveRTFr1anEe96++iPUYEFb3NM4a9xhCnvVCBpTtXoB29JxcevcyvAb3D
                      17y9qD9jvDSQB71qu8O9eCDRvKjfWDy0cfi8S0ydPYYiHT2D4la96iQlPbH4lz0RcL09NtZUPQPL
                      Gr0bkrK9TPHNvN9It71q9S69+LmnvWUXwz1S4Zq96da7PdRG0zwiDWM9dJT6PNChk7uagkS9OQyb
                      PVamBj1Qa/m7hfWsPXAuA7zA2HK9NKjMPJpFOL0IbJ48UmI0PS00u70sIL28dkNtPeCO4rtBUKI9
                      SiMHPWBbWTsYW6c8W0asPcfEwT0Ig+G81duVPWCESL2oAiM892W2vYhCnrxQ3NW77eqZvbQ8/rx2
                      WjM97BuQvHdXyr0wlgE8dgNiPbmCvT1qHR29YP4EO4jftbzi0yU9gAGNvL1zmb2iNHk9+nURPbub
                      y72g1di8Z7ZyvaLQGD0+3XE9sdDJPTC0mr1JbsY9CMzSvG3FK70M65o81OCQvAB5vTusW908HCDk
                      PIi7szyy6Q891fCPPUCjyLxQeEC9EuEzPbjIuL3V6ME9ttKGvdVTsT3AIg+9E/rDPSXcqD1OHg89
                      QGufOoIIWD1YLCU8YdGBPSBY87wz3kG9bhWnvfTSA72lVpu92IMKPLl5hD2MCp88PSukPbQx67zR
                      eIk9WsROPereB73tFsE951M+vTF8tj0OQR091CqJPOctsL1VZbm9+qS1vf9Jyb3a91U9cD+vvXC+
                      ib3+Enw9uyKqvaJyVz2s9fq8QRmAPWzqgDxNyaM98JBDvfqMAL2zUmy9ClmtvS0Axj2KnGk9zHiz
                      vPfTZb2kptA84NFNveIZBT1oj6M88id3PWBvJL2UoA+9udWQPYJBcD2gdvi7+q20vUB7Qb2oGYG9
                      971pvddxaL19LDm92G4rvOAzvDv+XB89mlpqvRnSnj3aYmW9yMqfvdLiTz3lVLA9boAtPehFkTxL
                      Jqm9wCKMuiOZk714wMU8uMCwvJTkxTwiLUA9K9qLPW2LTb0mP5K9RcCvvU1JS72TO169TxXBPWR4
                      Gb0puJY9QCkuu7ciar2y8hc9IWG7PWo6QD3+v6i9dSKEPa2LnT2A0JK8U/qZPRJAbz3Zmqw9dTbA
                      PZqIMb1AlB88+GeVPFCr27ukudM8rJuEvHOsIb2a9ho9Y120vcjehL1Otjc97vNLPRYMXT2EgdA8
                      B9dVvTY7Hj3DsDW90CINPDDKwTuDAUm9ThFjPREBlD0xMrw9rTlpvRhpgbyz26c9Tj8fPWogYr1A
                      I+S83eMjvbAUcr2AzFW8TNrVvDsviT3qryy9TsIjPRVGtT0Aswk8Sb+1PXA1vb09ZjG9iP2xPCSM
                      6jzImMY8srSAvRoKMD19+IG98DYNPB8Wur0UBqo88rPJvQw0i7z6jlG9Ev9aPTfpxj0A7GA8vHDn
                      PADv5jutrKm97kRtPQ1dOL34Dck8wbmZPSUUkD0T8S694OyYvAHiyj0ZmcQ9woc9PfJoUz0AUqi8
                      WXS6PcAF5rzHikO9nEOFveCexLtyWnc9gsQKPcgPxL1ghIK7fed5vZ7Rlr0sE5A8tNKHvJgHiDw2
                      uyI9Pm6SvTNHdr3AmTq81Ju2PCbzTj3Q2zY8WGk2vIwH+TwdhJO9ytxdvVLWir1F58i9Vil9PXN/
                      jr2qRBI9zMSrPFYeFL31SIg9xyAvvcWYgD0k7dA86JzBvOTF9TyYR/W8e1GcPSgewryqoDq9jJ3E
                      PEDr4bp08aQ8kQ/IPchBsDyuAEY94C1yvdDRwr0SAEg9YIdjO8MryT0xF6I9WSDBPS01k72T5Ua9
                      YOq+vJgh7rz2boy9E/mePaBQ8Luo08i8wHi6OlqceD1zfbk9OtNzPY6jZz3lKre9Yt+YvQ22qb1g
                      U8E72gOXvSjobDyCRVk9AHQmO91rmz0SKlo9KBE/vCDXo7uf/YA90pNPPaBeuLulVJY9n3C4PUYK
                      h72cBAq9HMqEvcL2Fj1s55u8rTpVvRiImzyYjlQ8hgiHveprAj0py8E9YCebvNDaBL02rmg9IGmq
                      PKpFqr2CBQ89YB1ovVTGgL1tL3O9N5nFPVBIw7uBYYs9UFIDPOLZbD0eHw49ltVyPUeMxz1QOxU8
                      b5eEPbDQxrsz5Ji9ADvRO4Ct5Lubh769VDL5vBCqWbxezIC9hjQWvYLsvL2VLpU9giETPUDZqzoy
                      6sm9YFYGO+CFNr3s+oG9sDdBPKXOoD1TdL29ivScvRgJPjzq3j49QnHKvXAoe7wCamc9Hu0cPUGk
                      yj2dzlG9bQXKvTsjr73sEdq8BjB3PWCufDvilam9FhwhPVRHBr3EDNo8gLu8ujgIrr3JSaY9QQid
                      PZif6LyHssc96tclvVonIz0/JcA9YFMHvRwPFL1O0QQ9u0qVPaeirT3ZPos9cOyPve35xT1vXcm9
                      j3SuPXzTF72abBC9+ldtPbBxwTvDlki9O7LFPQBtLLu8Cwu9S2uhvbTUhDxYC8S8rjakvajMs7x5
                      vq89H7+yPUGGmD1eSEE9YLvDO4Gqwj0t6LI92JDdvEQb+TzqvX+9gq0LPSRwCb06ewk9GKpwvK2C
                      Qr3r/7c9QGNDvNmZwT39LbS9WocWvYG8pD0MrOe8KEYFPIUimD2EANU8gMezOp+Our3EYM08wrHA
                      vYqgDj3D4rU9+azJPQAV/jvY9wA84F2qvAtTrL0gw4G9bBSfPP02nz2y54S95LSJvReBr70xOa09
                      o+q5vciYlLwdQMe98+Y/vVOytT1dtXu9BmRyPaXsgr3w8xW9x8AqvXBqbb1t+IY9Gte3vT+Kyj3Q
                      msG9FLCdPAAQwDsncV+92nPBvQG0yj3qJgs9pVO7PerZlr3mx249GPMOvKxht7wj3Ti9oDjpu7MY
                      pL2AFu27APBIvXrbGD1dpKU9wtJfPbUEmL0euoy9Wc6ZPXC4XLzaQIO9wKtFPEArBb0AFWi7PKqB
                      vfAktL1+iRU9cLgCvclziD0t11K9wNtBPEAclr2Am5q9X7K/PfXIgj0OMQc9JCMBvWCIP7vTBK09
                      X1zGPVI+MD04boO9aoh0vdo+cr29Uok9wu9NPRKxkL3Q5ca71/sfvWi+BTwnGDy98JwZvBe4mz1y
                      SQk9D0HFvQJIjr12GaO9mAfYvKpxzL1l5sO9qhRnPTGsqD0i0DY9S+C3PRQ+4jyyyB09QF0nu1xd
                      5DywO6E7qNi6PAsojT0AfPS6wHCpPLNpzD3qh2E9FyJhvWd0wD0meBO9xhZhPS3AJr3x6b49AKFq
                      vE0UU73Gizc9sDaVu3vTtj19K0G91yqoPcI9LD2W6k49AmcHPWDkwr1g/pW8KrZzPXCiN73U+ts8
                      aHe9vDs8zL0suLs8bsWNvVm4yj0oKwu8pRq1vVC/UbwgfJI8EMFpvZgJybyg+NI7K2qZvbXLxj09
                      G0i9WPY4POW/tj1ihiM9HVbIPQ0Oub3Y5rq8Rx6MPUObZb3QTzq9iFatvFLRGT1xoMQ9w4u7vXdn
                      f70a7qa9QF/AvKWnwL1ZiZ49ENZmvO0jd71Y1qW9E7aYPR8wtb0C6F89286cPR2VyL1u1Tg9hfm0
                      vaeJHb139jW9lcmAvUAPQrzAtSm7ss8zPXp+pb3Zj8c9Z5rDvUz6sjxP74M9nXjGvbO9Yr2oswa8
                      1eKjPQ36Q735x5g94MCsuwBQirlpl7I9cqohPaC/fbvgnO672ZuUPQOTtz38t4m9EjEFPdpwbT2s
                      m/48FELnPMByGTwdmTy93q40PcfbOr1e6Q49Snojvcn6tD0QXU+8bTXLvWLaor1gJUG9APO1O5Dv
                      ar3o3qy9gsV+PTxw3jygxpO8wpxpPce2br0S+TE9/0uRPZXDtb3gMa28jEmIverAyb0Xja69AGAK
                      t825b72tQ3S9oBZJvUYdMT1M/IK8cIGPvagqJjzHXnS9lOi1PLQ7h72z55U9aucGveOFZL3AQmm7
                      utsqvSSp7zwNY0+9J1ulPfovKb1t7kW982CPvQqsu71zCiS93vlTPYfwxT0pu8Y94L6wvbAAVTym
                      xyg9AJRjOsIraz3Ip4e8cQyuPW1hu72UOsY89CD7PHNtab0iiQI9GUWtPf7xHz0Awu856FeVvd5y
                      Fj1Kwlm989kovVxW+DzUAr28YDbYu9LVmL0DtVC9CLeQvABDWLwc3vs8I4AjveKyuL3AgOQ6pq91
                      PQAfKTsuYBM97jhxPVuZlD1CYZ29YpgSPWCm17zDjFC9BbabPYqxi72NqaK97mB4PbpHXT2agsu9
                      ljYSPcpUp70txVS9EuQiPWr0GD2AsJO8qxPKvc0mgL0HOoY9WRDFPQCbLbvTJGy932e+veA1+rxU
                      MMi83sJrPcfBNr0/fZQ9jlGZvaQm8Dwp9Ys9d+ocvbAsVTwlYao9wBJ7vTE9pz0s3OW82GYmvFaI
                      XD1AVgC9OOTIvGDGwbv1rcY9nCCHvc4rAD2oLG+8fEAAvVj/A7wBOIg9BxdNvZAMObygX5C7GG2N
                      vCA2mjucEO48PjAhPUfgcL31IrU9ACxyvVM0L72x+cA9E0G5vdBUwjsMkp68lAGHPPfBGb1fAco9
                      emynvXINZD1zUck9VXiyvQBY0bsgMMu7DCPVPCRn3jxJM6I9ebG2PVaHEz2iyxI9gIo6uqDgY7v0
                      Gd+8GmgKPbAnETwCSEA9995DvQXxpz0Gm2o9GGnEvXbNnr1pqrs98FFqvV2Vhb1DhSi99Uq0PWSe
                      9jwFVqO9ufu0PRs+uL3VC4Q99Tikvf4OkL1St2A9KFwDvHMkVL0n91S9aCQ7vM/xvr07eJk9cazI
                      PeYWSj3VdLw9yt3DvbEdkz3ArFe81HyUPBlxpT1Ain+9wA7RuqouI70HhzG9fNmJvR1oZr0fRog9
                      V8mjPUCaxLxRkrE9igN+vRM4mL3idSM9anxIvV9rgj0FmLS9UCWDO4NROL2Enf082KftvC+1yL2Q
                      9Yu9Bd+kPTXKpD2yBUM9CoISvfORPr2ACIE77QGxvW7CYD0Akh+7xB6Bvbjiz7y6+I69l4ayvcK3
                      TT2iymM9Kt7GvX5XnL3inn09uRyiPfQPAL2NJ2S9lc+APY4Xo70/VJw9R5yYPQDbZrqu4YO9ljAD
                      vW05lz27Baa9Zs8VvQLoaT2Y9ci8WOfUvOzN/zwVr8e9aLCOPOpdkr26mUO90LDau6+ckz1Wtx89
                      XsxOPWf/mT3IntO8TVHFPRCaXjyxeJM9AmZFPUidrL1g4pA7adCJPaoDXz2jK329ll5KPWPgpz1y
                      P1o9pZSdPTUvpj1+R1E9ACYQu5SQjjwbLZi9ZFPSPMAoAb0Vxss9wOzhvOAio7y6bkM9QF+vvQyZ
                      +bxlJK49xt2AvXL8mb0ANiM7TIXOPKCtars7tJo9wMM0O0yG9jzDsUa9WyajPR2ff73GIkw9nplN
                      PeE6oz1TA7a9OkKFvTZlfT3P56w96jCJvXTvrjyAVwA8KiYxPR+YgD0KHRc9OoNTvXZagb3mBH49
                      hMH9PA7RNj1M7pI8rcFRvYDEFDzjNas9yiQYPbp7Ir0Kiia9UjlXPdrwPT3YE6m8D33JvaQ81Dxq
                      +Wa9wDpLu95fhb3idUw9AEDRtqdnQb2SmT094DqoPFlksz1IAfS8G7mYPamquj2BVYs934HLvVgA
                      bLw41ac8ROHZPB9qzL1Tz6e9mSSFPUp8I73hC7M9CfipPZhC8rxqs2Q9QOkqPJhofbwOh049KyqV
                      PYA+SbqR7MY92BXMvFQ3/7xQO4G9IDvTvC98iD0dg7g9xnAGPdc9yb1eiUE9epVjPRB/NLzbZcI9
                      Wl9EPfSs4TzmXAw9V+E+vYDGy7ugDmW7E/sdvVpzr72APde84BmVvHmPrj0At1g8s++0PeR5Ar3T
                      nZu9XNP4PBDmWDxjrKA9El1zPcDyEDwYK4Q80hAFPUDTMTzEh+E8ADStvCf0kT0cHu48DKWPvFoI
                      Pz1Fur09JDMYvSd/PL1+A3890+DEPeoSxr2e9WI9OUaOPdANbDxAujc8QFWEvAFmnz2QPgO82D7M
                      vGhbT7z6FA09EvhbPWiKob30jdk8ruB/PYqTNL0qxzC9fBHgPEKYEj1Uqts8gTzDPePRtr1Zybc9
                      E/6fvcJ2x73A/SG81cmjPcpQLD0lC6M9QxO/PajtxbyhEqY9rhSRvYQkBb0r1Zm9BOYJvQyr8LyN
                      XTG9zPH4vGNdsb2deC69EmaMvcJeGj0p1rk9MdPKPe90yz3DNbU9aMKxPFA61Lvoo5S9N/Z9vU/l
                      qz2YNAS8M+OLPSJFqr2JOMo9cOEfvZCtTL066UM9CIORPJp3bD19Gro9IbykPVxMAL3/FMs9oJf+
                      OwyM9Tzy6A49r82TPSj5aDyP5JY9rK/0vBiFOjwoYTU8doJEPZDlH702I0c9UCzfu41Wgz0q/Vy9
                      bAjnvNDJYrzAATo7wB6+vbQzo7xg85m81XGrvRhNYjwjiDO94GmKvGoNJ73Jocw9ADFTverHdj2i
                      55+9fB/fPMmlrD0uCk09stxZPdCPhbvHvK+9M8C2PdhNE7xG2nA9XakzvSl7yj0AFHq8JkMoPYAN
                      irtAe7y6i9fKvQCekrsQ3wS9uFP+vKg5T7wwIaQ7FvwPPSdXlj19e4+9cW6SPZ82sT1F6Ke9ElsE
                      PXYjQD0tw4s9uzqQvXDAd7xg2yg7om8dPViRR7wwGBc8oRiAPeb/AL3dXpu9rT4evT3KUb2M9PG8
                      YF3YvHKmLj0X1Tu9tKi2PLN1sr2HuDq9/8SRPUA0FjsxwKU9gGWtve7dcz1s8P68snhGPdDBZ72o
                      Nzk8eo5CvTHFiT3NF6O92WfEPUKnUD0uF3899p97PbCktjudqMo9QG1OPEK5dD26HEO9aBrOvGRa
                      +zxiRAw9MtxhPYAjirxCW289ghuBvSRN+DxAxW08VbWAvb4DJD1ksAq9fSOJvfgCrjxYgIa8M8+w
                      vYoqYj37Lcq9ggUaPTCR47trzcU9YgNxPaALrDvS5lc9gmVhPSb+aj1IhYe9/8SPPQA4jzultp+9
                      zb+hvTRA8rx7dbS9leiuPcLdMD0EQ+o8p+ZRvf4AZD3Viri98X27PeDDxL1ovZ+84wBUvS2iuD3m
                      LhE9GOKovMfnmz2SaiU9epZhvTJPlL14DoU8wMWyPKgiC7xB85g9cNl3PMC7D7yCB1s9l9+3PSLb
                      cz3Yb0i8il1cvQjW/rwCEca9ku20vSw48LxLLqq9T5CPPagzTrwV6Zq99vVrPe8py71kJ808w0U/
                      vTFHtz1Q2WQ8J/yzvR5EWz0ixzo9ElhBPb8btD1QIdW7IJ67u21Par2BuYU9HsMUPfa3iL0HusM9
                      qoxuvSQZ4TxiMnc9jiCPvSBKiDxoUHI8R9COPa7Bqr2MP4A8rHoUvVsmzD0OGBM9NU6TPd9sub2z
                      3Mi9G6KbPZMSUr1Y4qs8AoScvZh0tTzQ/AQ81hBSPfAtbTyJxaA9Q8k3vex13Lyie3494xhEvQwO
                      9TxlSr094sQQPX1Wgj3sdYu8Q+G3vYIJej21xpY9/aOCPfswyD06WUa9gdypPYy9hjydvaU90A/y
                      O9jVfTwEvfA8aeypPYA7aryUe9G8IoY8Payw8rxsOJu8AaKLPXAJODyNfb69XwS0vc7ZED0dE8Q9
                      OqJSPQFMsj0sM6A8DfPCvaREg72qR029zR4+veXTp73Axqu9/fJsvcSD2jwy5Rg9GDF7POx087wM
                      6Iy8otgvPffdIr0Sjls9gLdBvYXwuD0w1Lu7ALNqvVqlgr0kd+w8WC2ivHgyg7yoogO8jvgsPQyZ
                      A73vzcW9+GX+vOxDubzfAKU9gEqivNC9Pr0wHV08qns9vdvPjT2FcIK9UONsPMwSwrwz3be9AF2F
                      u4BEojz16Yq9FLOTvMiwr7yI9/K8UPSlvRGYmD3wI0O9ett6PSjvVrzJkoo9ME+ZvfDiYbznjMu9
                      QEAzO63puj2uzjI9i2SjPahnazzAonq9nQ+WPUDnhzpXh129RqU/PZcAiT3eACY9qT+TPVT74Dyq
                      bzQ9Tm1BPcsnoT3KdWA9NZW1PdBMabys+8+8s6OVvWyA67x15Mo93vw1Pcjbwr21UJ89RXuJvQNf
                      JL3Wgwe9sKcqvLiGvzyAXrk6tbvGPSWOxj2CKxk9JeyMvYB4urz3bcE9q9iZvRX0n72xVKk9gkxD
                      PVFOsz0g0km97RmTPX58cz1LoZs9g2efvWLnZj3weRG8ANVwOsD1kzy0TIK8dDe9vJixhLz035M8
                      VFqJvCh1RDztRLG9KjB1vXaWDL3y7XI91EuEPGHvwz1QxRu8spFzPRRCl7yKOl+9/xiwvQ3dlb0i
                      oGk9ltxgPVQaDb2jZ7W9vi4UPax81Tzyn6G94mpyPZ2qzD2JRLM9ogEuPRBzIL2iZoy9ticOPYQo
                      +zyQPSu812rAPbBqy7sQaj+8dPq6vOV3ib0asjK9efXHPVgjATxQ6xy90N3CO5RM3zwL2ZU9OTyd
                      PVIqo73uWKO9AlisvVAJZ7xq7Gw9zfzFveTa8TzAkWa8LFnVPMbsEr3ihXY9u0+HPZYig71yGsO9
                      aBkIvJYiSj0lNce92AwGvKVlxj0KCAI9cpJdPSUSt73UwLA8jeunvZ8lt71yyn496P4evBQp5Twg
                      p7m7UBI9PPcTOb0sFLW8QhQOPaP1Ub0+EX09doOhvfwf8zw3UZE9gOoJvfazNT14Abq92PRevEJX
                      XD3j4xm9cBWUvaL/Ij0AQIg80MFRPAAzDjxaCUg9jM7cPGgptTzja8K9WVbHPbTi9Tw5mYM9IosY
                      PagqvzzpRrA9vpEdPWB3DjuRqcE9aGMmvINpcr2/CLM9yOavPJc8UL0OeVo98meivb3Sf736kyW9
                      9NDTPIgEtbzHtDe9C8OzvUhF4rx4Q8K9QmUqPbpVYj2USfa8XudwPaZnWj0y50E9dHffPOP9tr1V
                      wZQ9dcGQPfJ2Yz2AOo06tY6+vSL2mb03k8m9yuS0vegIf7zZrZM9eDS3vb3jsj2QiLi9AMy2uN5B
                      GD1QQRe8GrlbvRfGlT3on7c8A/hMvUZLfj2wcDe8DiKmvRDgcbzgIea7SbCnPX87wz2qAHS9Kixg
                      vXM5mr3iBG89wrOCvWGymD0ytmY9qnaivYDdQ7oSZ3s9M1dqvb1Ntz0NjLW9AAUivFoIfb2F4p29
                      xYmqPcuInb0xO7s93kA0PX05Nr1gJ4c7uRXDPWCw0byn6DG9eM2svJGKwT36mia9yReDPSbJkb0Q
                      VnO8INfzO1jGizxypDI9muIdvbfIKL2SD8O9YADzvNbGgb3Ye7s8AK4yPDGnvz16dnK91xakPcCm
                      azvq6ki9mlcWvXsFpD3yekQ9pqGXvYZ8OD0gyYE7cBNvPOk8yT2Vxbs9dhEDvfLCDj2rI5a90/TJ
                      PcoPD73yusu9oG1KvdvtkT1QrTU8eIfzvBAcxL3QiFk8WBCMPCO5oL2oXsy9yiBBPexUnjyAHHQ8
                      K7/CvcVdt71QLY07+i7MvZrJOz3UJ/C8iOvDPE5pDD0NoMm9RJgPvdp5BL1J0489Up5zPfIofT3A
                      yHe99qI6PTeofr1QLni8ZPj4PG7zNj092Z09ucexPb+ty70lbqM9nTssvfczvr1gf7m7GHP4vOXX
                      mD2AiZU7YjvGveizOTy7eri9anmnvYAuu7q4K6G9sD6xuwqInL3NLHi9gMrLOvrFsL3njZA90Ito
                      vc56pr0YAyW8oKClPCB8izzaOae9EyGUvXC5ZLwSvi49M5eQvbE2hz1Ke2g9LZ05vZBFA7yz6qi9
                      GvsUPXKFyL1sCpQ8/T/HPUJoMz00/IS9W+u3vQLCxr1B5q49PfdXvYG2yj2sFt+8fwnEvZVZjD2A
                      VDe9/qV0PV/2qj09BpA9yfeEPQPYqL3W4wK9SOLCPICwEjwkpO88mXnHPY2HG71AwEe72jMtPUVl
                      j70zqX694CalPOwnCL3UY7y83YakvRJ5Wj2pHrg9cZ6IPSDc8zslHKK9pcaWvV4kOT33XyK9CCiO
                      vRIkvL2Ke7S9x4GxvVd/IL1fs669dNqePLCGDr2iSZ29aoVAvQD0XrsBL6Y9OtQZPahxb7x8heI8
                      mEq3vPInFz3GYwe9VZS4vTN7Yb3w2MW9knYRPfduOb0Q7i08v9qyvcbbjL3iLlE9fusJPb6wCD1n
                      Qr89eHeJPApPRb2P1rC9GIG8PDcFsz0zysM9qTaVPagTq723l5A9YO5iO0Nmij3gkoW9oO5cu0DI
                      ZbyL16+9yeCYPUHmhz2iCxk9sSCmPerfHb0LhrG9KA8gPNDzybvYonO8wkBdPVprLr2AyT28h7hy
                      vSDeyTyw4i69cMtZPFffvz06viO9WN23vOFwlT3yXGc9FJTWPHFVqj2Ae4u92mxxPRKiNj1p+Kc9
                      ILL8u82yh70URtG8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjU2MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MjE2MjU2MHEBYS5kAAAAAAAAALvEsD1tUYG94F2RvE2gtD3+S009LWN9vUw61jyYIEW8
                      vlNyPQDEC7sbKbS9SPemvc1/Wb2iDZS9aroVPRBDJDy0pLY8tBK9PKhjtzz3EKs9vblXvSZGn73M
                      +6C8p+lWvZNRcL3UwdY8oCyBvWLRkL369Iu902mhvRCcQTwQ42o84Mu/O3LgFz0dz2O9uhOIvY5B
                      lr0I8si9jB/nPI5jHD0f56Q94JTxO/Rtw7wRKYs9WjhQPb27H72jE6Y9Ir2RvdAXeL0AOn47LRk7
                      vcqFgL2whj29zaoevXF/nD1qsn49IEiJPIDqcrzo4mu8PRQ9vWe/xL1mpKC9QW6JPYjevTzA9La8
                      lKnVPFLsbj13B5c9ypFivZLiDz1ODlg9z0jMvYZ4QT1Gfjk9o8xZvVaElb3v7a+9n1KoPR2mn705
                      Xaw9Nn0kPcKOYj3Q4bY7aGidvcJDLT1SBaK9incgPS0vmD0uGXE9ZaOjPcDsAzttwlS9qGGMvIBQ
                      oLrQEpi9aZOPPUC9cju6V8C9p/S2PS0HKL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjY0MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MjE2MjY0MHEBYS5kAAAAAAAAAPc6ij3QNEa9dym6PWgE0rwTVki9vZUlvY16Yr2+3VQ9
                      YKQevRHIqz0YSp+9SCeAvZDRbL2xGY49s9nEvahmvzxja5W9gEPgOigso72SJkg9p4CkPWgVyLxF
                      kri9Sfi+PWoLer0tFS69bTE6vV/yyT16/V09E7JBvYgqvrwbp709aDeXvCGRrj2j0G296tVnPdgk
                      tDzR5Zs9+7yJPUN8tr3P1sK9KsyzvYBQhzpBioc9oq5oPS0Fwb0KZX092JU/PKiYGbyHIly9MNix
                      O2g50Lw0exS9AOgXPL4Xgr34EJW9UDjmO221dL3wZyO9shOPvWl6pD0ApaE7qIt/PMhNwrwYHzS8
                      QDm5PHiHkTxrJIU9ACggu6m5oT3Prqc9RS61vUHByz0dYqU9YKZzuzjDs7x9lMe94zq0PQuztD1d
                      JWy9IGafvRrcHr0HJoQ9IKBOvW3+qj0VB7O9GQe2PbvVpT21xKs9vZ2JPYZ+BT04DsC8MFy9u1R1
                      qDxYphI8yoAWvR9Nnz3VxJ09/hmYvb0Rer0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MjE2MjcyMHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MjE2MjcyMHEBYS4BAAAAAAAAAF9SvT0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        yLChOda8IDraEy062hMtOtm0gTmvv3c5YZXpOWGV6Tl02YU50H/YOV+RETpfkRE6dNmFOdB/2Dlf
        kRE6X5EROokWMToR9js6vN7OOrzezjrnAAE6cwjDOV94XTpfeF06DXRIOhopOjo1KpU6NSqVOg10
        SDoaKTo6NSqVOjUqlTraEgo66WT+Oa+tUTqvrVE61AD7OXkbmDkobOE5KGzhOXg/vjlgcKg5ZZv/
        OWWb/zl4P745YHCoOWWb/zllm/852hIKOulk/jmvrVE6r61ROtQA+zl5G5g5KGzhOShs4Tl4P745
        YHCoOWWb/zllm/85eD++OWBwqDllm/85ZZv/OeMOvzzaMEA8+3wyPPt8MjzAK+48UmL5PPdAhDz3
        QIQ8hMzmPKqwjjwhOFQ8IThUPITM5jyqsI48IThUPCE4VDwtci48zFokPPhUlTv4VJU7+3dvPC9l
        njzGfAs8xnwLPLkcGjzD8SU8ChrPOwoazzu5HBo8w/ElPAoazzsKGs875bxfPJvecjzwVBM88FQT
        PI8mdjxuGMs8swqJPLMKiTwSYaI8T2e3PJi3cTyYt3E8EmGiPE9ntzyYt3E8mLdxPOW8Xzyb3nI8
        8FQTPPBUEzyPJnY8bhjLPLMKiTyzCok8EmGiPE9ntzyYt3E8mLdxPBJhojxPZ7c8mLdxPJi3cTw=
