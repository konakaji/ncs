N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg1OTc0NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTE4NTk3NDRxAWEuhAMAAAAAAADlOJ8+iKB7vTAY6D0sQZW9ELSDPRUjjD7O5Ws+AHhw
                      Ol75Ij4DHos+ADPeOnDQkL24mCq9ih45Ph19gj5Z56I+QLnBPXg9Wb33v4y+7BmCvRbGEz5uZhW+
                      3jZXvrD/Er6CFjg+EDDnvXqKMT57Jo2+2HdbPUC0sLxvhII+Oww0vmRehj1hL6Q+/YObPurcKj6U
                      dv89fzilPsBUlT3yv3E+lhVcvtznzD3ohHe9GfmjPgOsZr6b9j++BlG7vSNYUL4Acm67+L9/Pcya
                      qT3CuHY+L/yNPkAiJz0efG++x3CXvmLhOT6cKts9euF2PuBIczwIHAS9QJuBOy58Vr4ksou+jdSO
                      PshsYT1K22s+GG5kvQBsbDzT5Y8+e95kvoaTTL6wZQ++1n62vXKeFz70HZu9SBAVvZujNL6/kJ8+
                      BrwMvl1NmD5wqsA8iKZ0Pcxyrj2gw56+0IgkPtCyrz3YIYa+WuBlPtI3Yj7qN0Y+8ESZvSCsTr5U
                      Jd49696jPrDp1D3H6I6+Xe6APorJaD4KYD8+tnYhvuZP+b0R/JM+kMggPgsfiz5W+uW9tltZPsM+
                      ZL4oOTA9gIUsu5pRcj6gCRW8DDn3vVvEXr44CIC+IrElPlQ1uj2gMEC+EAfNvKyWhz3og2c9j82W
                      PgAPiboAHfc7y7EnvqA3Y74eylW+qkQ+PuhYbT0aiRI+YEkBvch1M77w0tG9UXOKPpK2Mj7AM5K7
                      k5iIPjB/mb3mOGy+by2EPkMzTb5NO5g++NpGPfi4Jr6d8Yg+sYmbPgCgbTr4sVA9KyWevtWMgD6o
                      fDi+qKl9PQp6aD5bfmq+wPbUO+xypz231o6+miZWPgA8bb2xyYk+MgJmPhAbsb1eNDE+EBbKPLD8
                      +r2OQ2Y+YAcRvTq5Nj5HPY2+iEVIPdaHfT5GdKW+ctQ4PkCQzTxYKyQ9JW2HPky/+z0IgI++YF8J
                      vUDWT72peZU+pmxqPrRIyD2IHT694A4dvPjwLr6CsV4+8bOVPgjyLr3Qq5E8UOGevc9Clj78SOY9
                      aEIzvnDtl7xIThW+ZNClPfWchz7Y+k++Xk+bvj7gWL4AF+a97qF7vhC11D2wgam+IM21vaafYr5z
                      Lmu+oPFVPXR2iT32GAO+IKMgPEqfhL7l6ZQ+1LXRPYNUpz6EVYA9tmapvsCIoD1QjeC9MDPGPKpq
                      Uz5bZiy+YCgBPWbMZr7oz22+cyF4vkZnhL5q/VU+RE6ovlhbGj7QLbw8k9iEPl+ZkL6uYyk+5s4v
                      vjAejTx7ECC+kP6YPTxW9z3o1RW9YnVXPnwK8L1gun687QChPlDJXb4GpSE+Bs0fvndPlL7gIF68
                      YK00vDwx6z30aZu9mtg3Ps5uPz4A7vw9JGiZvZDG3LyqVwg+BvX4vW9imb724QM+VmYEPhbvRb64
                      Wh2+ZBGIvk7PNb6iqSc+SugbPmiHFL1OUgu+aslUPlT4gL1AFdk70PzKvSDuVj1CyHU+AGZ1PELX
                      Wj7L7p0+wGkKPjpsXD7WrQY+LgVNPkZGCL7lk4M+kWmnPgDR5b3B1I8+inQ3PgTEqj247T+9Z6Cn
                      vgCKDDoe7ku+THWUvSZ1AT448nm96CcjPTOuUr44cjE9fnMQvpB4pjwDlHy+oAUKvBr8GD5gLhE+
                      zCKZveTxhb6A2cY94H0zPWp0Wj5gkge8OGMfviiTKz07Kpe+apGQvnVXiT42Qdy9G/BzvntHYr6O
                      i1A+SEFmvsRNlr0gUTe+jttVvqPPR74qyFs+V06YPj5ubj5qp24+QIaBvej2WL4oiy2+52aiPjwz
                      uj1VzJ0+CkoQPkL8aT6CvUE+KK0CPvDKvT0gYLc9SxScviZUCj5gy729M3oMvjclm74W7g++QAUV
                      PeSW6T0Ejo6+rxmfvnH/mD5ANec74B5TPOugV75kkaa+bD/GvSJrVz5zX3S+Y+ioPuA1Ib1bs5W+
                      S4FqvvClqD0AuYy+am5tPtqjTD7iYGU+Et2Bvtn6mT5KJFI+9NvHPaC7EL7evR4+nt+gvuDkIbwV
                      sZk+wMPkvdSYlz3ABFG+PiUtvvOMgr7gez+82mBtPvNZL751yZM+HO39PZoaRT5+sFg+DvoHvkS9
                      uD35OpA+gHmiPWjbZ760e949NZeePmxZyz0XSJI+8ICiPFpqMz5UyoA9MOjPvEz2oL6ojiE+ithu
                      Pq54Hb5onjq+uElzvo51Jb78SLW9CMhWvjolpr7Tt5M+8EfMvZOxPr5bKFK+4EF8vlguAT3pyJs+
                      mq4lPsSqor1geSK+/xqJvrFanD4Qoo88IidKPgAdH71bC0e+f2WCPsOOIb4LOZi+Ou6pvgS5hz0y
                      gD4+eTWnPiCEVT1Geu694JTWPbaluL1Lg4I+YpNjPsb9dD676Ti+8NdlvoCQYTyuVoC+Zs9dvpTx
                      mT06rR8+xh5qvtjtZb1D+1G+8CWEvdLhpL4uGXI+oABVPbRw8D3Wv0c+Am2Cvhzp+T0aAWM+ChFr
                      PnjVHT7KlZC+EzATvhiJcr3eZQq+0AqjvBzR7j3IPG6+3MOOvuY9Mb66lU4+77KcvoByjDwCDZu+
                      rlSfvpxKk75dcqQ+eDkVPupgND5C4lg+1o14PohQXr3ZK54+q1+hvq9kkL6NVYA+VPyXvlxurz1A
                      Fkm+tHWwPRqckr7uwHS+YxNFvvjVUr5oa2i+pLCdPdtwiL7vFqa+HNDpPQBlCjxI2iC9e4xVvkYp
                      Kj7MfPa9rEOVvhZWiL50KYM9RnR6PlQd6j1KrEU+kGXnvX7kGT6QbT6+kLJyvlyiqD1zhZc+AF22
                      uwBZYbz2O5u+EZWkPugcW73AwAu+GvuovjBv7j1AVa890FCWPc7UDT6gHiO835GZPn28lj44eSE+
                      cnNOPimGoz66aVE+sCCdvBCYkb5lAYQ+UK+BPY4eir6aBGI+Nw6DviCWQbxeHUY+qo0DPqhuhr5b
                      IxC+eP1/vYDsgrwuooy+wjloPlwe4L3+eE2+QmWFviH/pj4R8Z0+EA2WvRpSib6MxqC9fInoPSPY
                      pr6z1G++rAKRPZPsAb4DSVy+BkGovq9tk75gTSs82D1/vstIc75ns5++znFVvmhkMj2eHmY+iyYj
                      vhQRp76kfvI9QbCHPnAWKb6mBaG+AF7puwMelL5k1469oQaaPuDaczy4WF495nXSvUZ8fj6Dk6C+
                      IOZrvMxu9D1I9jW9lvktvjgkTr0i4Sw+1trHvdz20D2VTKc+DNPEPVVknD6hw6U+BgJYvsy9qj2i
                      Elk+VuGovoMlBb64goy+HU+GPqAqGT7YKEO9Xm0UvkxfqD2YsUq+JoLLvQYRDb7gObq9FPD3PYov
                      Vz7sLtg9tvstPgDeCj38+o+9tK2VPVPklz5A9iO+QI3Auw5LcL5QDaG+1BOdvZ0ehj4gAtq9X+WD
                      vh/rhT4Fkos+boYUPogKaz2BNJg+MFqqveN0ML7A3iK9V12cPgfemj7VyKI+DCCXvuaXCT4YIAU9
                      YBgwvezjqL39KZY+5aeLPnOegr7HLIY+GxF5vmTx/T3oZju+MxOVPsggIz3W7mI+szpevvBoWL4y
                      aCA+IOzvvXwfz70gVTC8MiY8PqXapz42ZBy+YAAaPnK6QD7QCPg8FuFSPthNc77CLmQ+cX2XPvhB
                      VL4OIRM+YIdlPXpkHD62KxO+on5ZPgb+DD5IcTQ9I856vpPGmT4ACHE8s4Z8vrPZp75cIY298ImE
                      vN2QiT5FmJ0+8sGGvsBb/b2g0208jXqlPg4fBL7veaG+PpMgPsiZYb1b0Ty+4vVvPsA9gj3TvRq+
                      YDtHviDWST3mcQO+0nYxPgBLYbzUhoy+fEH7vXzG2T2eaWw+ANIDPtardz48ZJ89NoE+PgIAVT5G
                      9LO9iCNTvWjvY714qhE+q/SEvn6llr6YigW+g+9Kvi5Sa77ayWg+UF+TvoBlxjwYqxe9gEwmvHQt
                      ob3ZrZY+oAr7PfZRUr4qXWg+TJHYveY5YT6SSQI+jtQZPrvUkr6A2nY7QBipvMZhRT7X7Zc+y7Wb
                      vld1mz6xyIU+grIuPoZfvb2jm6k+Fkd9PtBArT3Bl4w+LPTyPbA+/T1a7jg+FkVPviozRz5Hn4Y+
                      4888vnCi771i1Uk+Ql81PrXlmz52/8q9bzefPgYu470pFKQ+ixugPl+chb59vZ0+HmR8PqlZgz5A
                      A9s8ADspvDAO5bxi15K+rMSlPVaSSz7gEZu+ALMWPH7ucz5ofyO+IEz6vevMLL4u+GY+Rd6FPhbN
                      ST41Z6A+jnALvsh6Or5QiZ88bBfgvWj+KT4QXlO+gC1UvW3aqT4qwH8+K4gyvvYI970e40I+TJ3g
                      PRgvmL7w4bK8XG7EvQplTz4QdD2+AABqOSawVz5cYbG9LpKTvj0ZgD6Ow4S+wOuLvBgdCL4jBFO+
                      mrt4PkYlVb72tBc+Pj0hPgAMgLw41HQ9Ts84vgYwKr6Wk46+UOylvYq6Uj6zFHO+Jts4PmzgkT3b
                      SY++nOqQPa+ej76Avgc8dj0yPmwX472AefW8NpcBPoBb1DyoOIi+RovHvSwTmr1AjUE9GJMbvvMZ
                      jb4wTvy9iUeGPmww9D2YViw97JmhvQ6teb4gVB6+jGmRPWCbwD3cwOa9hkdBPiAMNz3AxZe7wMDm
                      PWhsOj0ARAW9A1CgvilPmD6ATbg8QPWNO/C7sTzUa949NhdRvoCrP7xOZHk+XauaPuAQIr6TyHi+
                      1NOWvvZw2b0G2ru9CJmgvqDpUz0tL4I+8/4Hvgwqpr0L/Dq+UI+6PPifEz4GIRq+zp4qPjbwcb5w
                      wta8QDqaO8iEFL69DI4+yD8CvaPGmr4AbRq8gHYCvkAIHj4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg1MjYyNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MTg1MjYyNHEBYS5kAAAAAAAAAHtSWL7eKVI+GC9mPahHpL7uIxi+IPzcvQcshb7o4G89
                      AOCEukLuPD5WtkC+F9ajvlCLnL1A7zy+T+SavuDgPbxmpvK9ja6HPq78VL7h3qA+7hFvPgD5q7tQ
                      0LK8sGeJvTRQpz3g7O69BIuZvYAmKz1svNA9APrzvWhMqr5ORR++t9yDvlY62L0Wpjg+DhFLPr4g
                      Wb7MC/w9ICjmvapJdj7KUyo+GNwOPhYARD6oS2W9hLyavmxrjj1Euoe+Rr+KvtYiNT6AIBU8ZKOi
                      vrqJaT6OzQm+IeePPvO/c74QNby8OBtovpyRnb6OYYi+c2R/vgJHob52lW6+OrJGPnj3P762fey9
                      biBHPrY3mL6cOKq9G3xzvgv+Hb7WgWG+aG4+vfNodb6i/Ye+pqxsPnyW1714WwU+6iSUvlCw4D0T
                      OHa+cMT5vBRplT39sp0+Vq1gPmAYebxQfcy8AC0lPjtAKL7KaF4+OvZIPnofDj6eIg6+bo0XPnSm
                      iL1g2i69ymV/PgMqB74oHnM9blEmPl6DO74=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg1OTgyNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTE4NTk4MjRxAWEuECcAAAAAAADwNio8av2BvfQlEr2y9k09mEwxPNrQST3wgDe9sLWC
                      uzNEab2gfKs7ys2OvT7qNj3kb9w86feGPUCBALzwUj29ULAJPMyAl7z+YYK92kc7PXQdgL3gepG7
                      Y0GgvWkvvT3UjP08/X56veCclTzYoco82zKavar1Yz1rZqq9oEMyOyZAWj0XFMU9r3GtvSf8uL3C
                      RVc91z4vvW1Ea70oEKg81v4SPbATiL2oG0u8EKaZvSjDkb3Yy7A8qHhsPGi1BzxEaA+9W9CYPUD/
                      ijpKBw69tndUPTBMJTxyJq+99d+ZPebrbT0jsIE9aAaJPH3Rbr2UrJk8VKHAvBojHL3yYEg9QFwe
                      vILbub3EMc889OkTveCu5TvgTLI7QAttvYgm+7zalWQ9QbDFPUm1uD1B7aI9mF7MPLQNoDxgwP68
                      faWCvcF6oj1g+gm9GQi6Pd2gpb3iRgY9UHKFvXRz6jyuMKi9+SWCPeE8lT2gCqu9FM/SPFvOlr2A
                      G4S6ZK7iPNiguLz0OPI8yCScPAB3z7s/2YM9rJOevP1Fsj0d0Hy9HILVPDt5mD0MR/k8AFj3OXPS
                      yL0APlo7GIqcvJBqfbwQ5EW8MqYSPUAL37oznYc97XExvSwy4zznXsa9ZEWCvZuVjD0Afsq9JCDe
                      PLW+h72V3L09kcCePSfBQL2HrU29PbFZvf4vdz3QGEW8WBpFvMh5xL2Q1yc8TU6MPfxaFL0AmNe6
                      t+A1vWa3Mj3atXM9gOZHvBA8Cr2AN3G9MGYQvI0ai70ptqk9XrlnPUCAw7wjbDK9kMZ4vazwDb0n
                      fi298DgyvXaIPD2IOKm9wCxavOaWkb3UUJO8As6MvSycgb2TSYw9Y1yyvehtqDyzWsI9/W3MPQwR
                      0rx6UBa9pSaYPWMQjr16QIK9wLmLvaifoTzTZZi9UOWGO/Lgdz1Y0YA8sLAgPPTE27z4l8a86aXA
                      PYB5s7ww5je83aOTPZpjE70Rxo89IT6pPRJ9dz1G0l49k3dRvXpPZ71gh5698rMlPRQ4pbzg4hO9
                      ti8UvegChDxCRy09mamKPd0yjr0Ut+2800dyvcAiUTt18qU9bKi1PBAqWbxgRkq7EnoXPcWwlL0e
                      JBk9GE4BPFrGfL0TZ8W9EPorPNTUgTxglsS8gukmPWBFgrugJrG9eI3ovPAZIDztbrq9yrl7vVDQ
                      oTvASbm9hDPyPLDeKzzAXmG7pAPUPBWjmL2N+IK9doKBvWNmyz2KOby9mbqvPegG/byYEi+8g+Y3
                      vRlNnz1p24s9vfLAPYJKZz0ZTbI92PwJvOBr/Lxqa0A90JkovJeFxT1CaUw96viQveWgpL2XuWq9
                      YayKPZAQNL01r7Q9sFJuvfhny72oQhK8Zo8BPQdEQr0ycgY9tjmjveeFvb1gxki9wRWJPaTL2jwH
                      OKQ9O/uWPZAnGb0ByYI9m7HEvT89kD3k2to83Ue7PcUQpb2gALQ7CEWfPOKxrb2AiUC9xyCAPSVb
                      gL2iT0Y9ZhEWvahNMLwEi/Q8Q8KcvSyjmjyioZe91qpSPSdMxD17Q5+9awqQvYB+1zo9kKO9CsaS
                      vVpiuL3g15O9AFa5uwDobDyoFzq8AGW8O/MweL1wR248WPZCPEITp73gEYe8cnlhPX54Kj1feru9
                      NywnvWP1w73nu7k9CsUDvUdhbL3NgZw9yFDHvAdLG73KCzu9V4ZEvfdkdr0Qy8e9uF2Pvb7inL1z
                      47m9U1CCPZdCgD1en3Q9Eeq3PXWwrT3pics9J945vRruDD0A5as8YDL0vAAjGjoAtwM8MIyZvS4S
                      Sz2aFBY9QNMuO/j1x73A8J88AiQaPRC3xb1CPlw9jZKnvQQl2TyAb648MJR8vcD0nLp7PrK96LyN
                      vTALhjto6Z+9S0mbPYYPq725n8Q9rgpGPXJDLz3N33i9UN2/OzcqO71nYTa9/pOkvVLIAz03eLQ9
                      IESsvTahCb0sQoS8pfeGvXPCPL06QDQ9y0SoPQCTsjnAMHe9GPOTvVXhp70H0LW9spKuve/TtT0o
                      +JK8sLyiO2MpXb3grZC8VBGBvFqJKb3OrZi9Y1tMvR9FnT3QSaC74uG7vdDuDTyOnlI9KbTEPRAJ
                      e7zSvzk91RiYPaICOz3hHaM9MouyvS0GNr30u+48p8m6vWr+eL0eo1o9qrq9vSCKwbwZdpA9+KPK
                      PFILbD0oN6c8zq1OPfZIqr3gz8c8FIefPDOXlL342ao8gP3vO/IYCD1THZg9Khu5vWhkkbxorrM8
                      YcPGPXhM+LyXarY9LdY8vYA7PzxgZL68+pQ2vaL3lb1QG5y9rOALva0pjT0cpew8bH3MPJOwP70d
                      1YK9hK3WPIyVi7zI3r48vm0+PY1NlD2icik9I1rDvTGInj00asA8rdzHvcctxT3jmiO9/2qEPfV6
                      ib2aYx29qk5ovYCaFL2hvIE9js4rPZNnWr1K6Qk9T4eKPSrlUb0lU6M9seORPUMme72o+zW8U4Be
                      vUCqdTuQDFO92RDJPdJadz3mwm49DwaWPUzByrxwpSk8YGuiPAChFzs8wfY8fFL8POD9oL0dgp+9
                      UkdRPQ1hYL3KZIy9ugEwvaaJET0sLrU8DgBnPR4UFT24aoC9Fm4RPZMsyb2MHOG84KvnvAMEtr1Q
                      Jri9CeWaPad+N70MiLU8+9SgPTCRhr1hIro9o/BZvaD1ybty+V89OqGhvYq7o72oXmW87HOFvaCs
                      YLteGwA9071uvbNArb3lzI894u5fPbhCrTzvdoA9AIyGO4AJUjwWl049K2e8vUs+k714nbG9Pk4/
                      PXJKUj2QcCu96pGjvSiHjzwSfJS91LryvECxD7zJaLc9js+BvTKSTT36/4C9drcFvXLmlb1Ctzk9
                      /DP8PMbmib0WFxs9VRCevaklhT0VA4M9Tj8kPYkXgj2hisE9FxUgvSRY+jwUoZi8AGQ9vYBH4bpG
                      gis9sF/zO0COd71Rmso9vVRkvWDokb3RdpE92jdwvSDisLzNALQ9EH5ivLPjNL0dXSS9+PWAPI7X
                      Qj198Is94vE/PVBDmrtXaoQ9BmqKvYrVcb2wAyM8AJWZuxRW3zxHgGi978bJvbjgob2iJis9UIFh
                      PNG0uz2wnEW84LyzPIZDZj143r69emQBveoter1rJbW9bH7svAIBIj0aVBg9PXFGvSPmyr2YCNS8
                      3/CYPdpnCT02NyY9Peu/PUKtvr1o3VU8KENePAyf2LwmM0k9TK4VvYK0lr0y7l499CAOvUqPM72T
                      fJs94Ib4O6gI07wQ4zi8bYx3vVDmUr1QTK+7QaixPah5NDxQQMg7LYPGPVLzWz16MkO9gUKPPYFh
                      iz0lkso9WlJdPTOijr2+xaK9VJGovPFqiz3AzCc8Qk8HPbBF+rsYaC886N5xvGDgLb0wS++7NBbM
                      PJAverwNkWC9jQskvc+Uwr1aPyi9CRykPRLHUz3zu5C9bGvDvKCzg7wStLu9653LvaNOiT2LE6k9
                      7mtyPXBcdDx5R5U9CQuqPdeIqD2xzbo9EiloPQBpwbtgxE694EtzveqdB70+d3g9sDhePOqRL70A
                      eQa8WRW1PenhyD3A+kc8IESPO5CQGrxi5mE9/cQ1vVNNgT2kY888sPNfvPBlGrwiXDI9qMqQPDd3
                      Kr2SKW89LcyHPUBAYLuZbKk9BrIZPVsTtT1yZDM9UT6qPVK0Sz0Kl5C9BIXvPOMOrz3sVpA8muCM
                      vZW6nT3HS4c9sNCXu5hYajzQGgm8bIOMPGA6Db19zFO9kPszPF0nOL3yhC09bmZYPYbpYT1kJP88
                      MrAFPVuJmT0qZW49KicJPWoEeT1BnZw9sPVkPCOmyr1jN3C9QCI8u+lGlT117Z09wkN8PZINor0S
                      fTA9dcSPvaA9kr2uh189y0u3PUtvpr0Bhb096Z/FPZ2EmD2NjX691k8KPclwyj0cOtw8qP7HPHEU
                      oD2Cn8O943xJvYqdx71AW5G87GbbPA3Rnz2ow2w8yvM8vemMjT0WxYC9gH3GPMmghj0ARqw5JS2i
                      PbdLlj24MYu8a7iTPaXKg70sKOu8cv5GPUZ5qL1cIw69sHjzu/vBkD3cCYG9uhNDvQ77MD333IA9
                      KIZFvCzRoDzzFsK9vB7NPAdXW70uaJm9eNKNvb5pBz3rzpa9WT+cPR93w71aY7a93sJuPU8QgD2x
                      a7c9SKGkPImynz0oRje8jCisvDCI7jtDAUy9lNjUvM3OKr36ZmG9JLQCvQD26zkEpBK9lADvvH4e
                      CT3DKac9Ny5uvYLDXz0AMWe6CGuEvIYuCD3yNCo9knYCPcDTczvruZe9g/W8vUxFpTzhpIg9AFgO
                      uoaXqL0ALqk66N1OvHTkrjx1jKM9gO2XuvAaI72EaAC9/bmnvfm1kj0tq5S9yUvIPRIeMj1ClxQ9
                      IbiGPVoiS73XyF69EAiwvWvAqj0wZoO9o+EivYBwj7vOxG09UDxRvVA9zbsAMr474Ba9u3Zhaz2o
                      zwk8M1G5vQF3qj2rSao910tYveP5oj1+wC49hrB8PRWXmz3e9lo9NmABvROwu70a+ni9JKXQPBCU
                      brwAvT07tOKcvB1NRL0QYnK8XgM2PZhUUTzOqhA9w3qTvSi4KDywaWS9UIZLPLOWjT1D1Ee9WWqW
                      PU0+WL1fIba9lNIFvZ/6qT310bM9ms1+veLWET10tMg8mGAIPFRulTz9Pji9IEa1PBo+tb1SFVQ9
                      /bhlvQNcnb1Owng9QOM0POVey71/mpI9VkAIPSeIRr0Moty89nIIvQxgjTzwJFS94DeiOzuljb0K
                      F5S9tOPhPH0yuj3FzKW99qwgPXX9tT1w9xq9Lo4fPRCsZ71AW2k7oE+CPOterz2YiXA8OPmMvR3n
                      jL2Xscw9hF7ZPNpuPD2gAK470PtJvaLHLz0EGRi9RTmjPXDYn726VXA9fam9vXpOib17maI99YLI
                      vTfNs72F1L89Ar8cPZCtBTx9vCq90CeeO77iej0DZkG99wG+PckmnT1heaE9CKWTvcietrwiQq69
                      65KWvSZcST0YpVs8HXEwvZQwxbwC/TE9jWs0vRLEbT04Wva84MCHOwzDrTzALX48qOSUPMWLwr2W
                      hAA9sGeuO9j9Wjz/6ME9kJZZvdAuaLx6Dsy92mO9vXBbqb0Zg4c9k2mkvXitrb1R4ZE9FdeePYjt
                      yryADNU6QMvmvL2dpr1QcII7BpIOPdiBbDx0iK28OJe8PIdEyz2QEjO9IOqqvcxU8jw/VrI9UR+r
                      PZZ+bz2jmHu9WpUivfk3hD1jhpc9sHoNvJAIEr1I1Ky9ko01PcCaaDyw3T28cBRVvM52l73A7MG9
                      dwhpvXoMZT3Q09K7EpJsPV0kdr2zRMu9lAsRvTp7YT3vuZA96jtdPd7Rmr2UO6C8c0NNvUAyr704
                      n8y9AKaxvSw+kDy0Ct+8eN3JPGzoA70gU8a76MUMvCWNuT3sY6+81jWYvd0xZb3Qg1+8chJVPbVw
                      pr349aE8wJCTvS/Pqz0AMxU6piAAvbDZ3btg/CU7BVCdPZ6YhL2jF8w9MGuwu/oyFD06NkQ9WB8d
                      vJ22KL0w4bC9Yqw1PccoUL3Qnny9Qdm0PQlDyT0oD0w8i6yYvc25Ur1vz8c9dvF9PYASGzq3XmG9
                      S8GbvYIxNz0gSMm8kA5LPFhUQDxWbwc9dOEYvTpbFT1NMVO9jQumvXJ7m726NBw941swvVHRuT0J
                      r749mYm8PeB63LvanS69X0KOPZN+XL0U8sy8/GYEvT6flb2uBlc9o4Bqvf61cD1QFtm7thprPXno
                      iz2gtMC9DAj2vAelbL2fi649W33GvaACiDxnujK9KOChvAlPvD2IgYS9QB6kvBWanD2gAqG9NBjV
                      vIcPab1WdBK9M/qqPZD7ULw56Mo9wKz4ugC69LpX5lu9NNvFvNfrrz0N/iq99My+vCpOej32LYG9
                      AD7WOxIoGj2AEgs8CpQHPaNRZL0BF5g96OKAvKhzr7zEp/g82oUnPUyh3zz7Er69tkKFvbb2UT36
                      fAa9/qJaPXjaz7zKWzq9Le98vWNJa72AeYa73SejvVRbjTwFFr49MhA1PYx1/jwwB+O7bM6RPOSb
                      3TzL1p+90BkJPPoMUT3TvaO9Xo2lvaHrhz2SdRo9vsoLPd98rj2xaKM9wLBLvHOXtz3CAUc9TASU
                      PGkzrj1gorU8wOUTvGOMvT0KyAA98JZbvFiTBzzk6Yu9nczIPa30iT0oEAg891txvf5viL1Ad8o6
                      MPMAvcG9lT1YmJ292BPpvMCDvjwqzhs9US6vPUCkOTzKbbq9OceSPRIepb2ypjY9IFqGO2xIDb2B
                      Eps9ZK7OPNKrpL2bPbm9CnCPveBpvbtm8iY9pJzPPEMDiT21pZe9MCu4vXFaxz0ishA9mDiRvBCj
                      lL2Qv2g8whs7PWhV07xzWZC9JZ6nvVItJz2tnsw9wKmlvWxkyrzdGZG9CqKpvTVrpr3A+ug67ZG4
                      PdDCx7vqf2W923uzvfwp6zzWPVA9oP7/O4quLT0XwHu9xhsQvVL9jr0etBg9h6pcvQHxkj2WPio9
                      jQmLPVpvZb1whAq8qit4veKBOD2CxGQ9aqFUvRYjbj1B6ps9j8DBvRXCy70GDxk96t+0vTYQGL2u
                      7mw9DosUPehcmb162wU9zAiCvDD7nrug8Da99hUBvTMQor0A7Q46atw7vXw19jyiy5u93f50verH
                      Q73Amxa9fV2ePfnUrT1aLGw9NkEzPTEUnT1mZBm9AORwOYAm4rpVaYI9TzaGPcCor7qY6UA8WNq+
                      vehQT7z1xZc9B/w2vatWo70Ny129ua2qPXEamj3AKXw8XBXvPISd7Dxgt4I7ovlyPYN7tb3oJ4U8
                      mfeQPaF5jj30w5280HtjvehKXTyotae92QKdPVFcvj1VWcu96zKOvcRY2DzUOfg8Jb6PvcUenb30
                      a8g8FWyUPZTdxbybILU9WSi7PaOXHr3Tecs9QEVnOzK2cz3MCa48Z+GuPciwgrxkDuw8/d40vYD+
                      iDsx9qQ97vxtPaoXlr33Z6E9FJOYvGLuHD2nI1K9zQrDvZh0SbzOkW094OeZO2hM4bwgr429mJBj
                      vMc4wD36DJS9W32bvbDJqr2AUfg7bRFRvaC/V72JUZQ9UsVbPYvfpj0DCUS9uD6WvKCLJzus6r88
                      g0FvvZQXsLzkCfI8xvkSvZQyp7wYi2k8He3KPdGSvT2bisa9DZW2PQKjuL0RgqU9d2GhPeh1y7zG
                      0F099JKRvFzw9TyNGJe9ysdQPcCCU7wJnqw9YsM2PTTj+TwvD7Y9nD3SPEIBPT1uDIO93f8jvTAC
                      +DsIKuK8EKk/PI3luT3INsu9OksGvRanCz3YlL886iswPdDPpL0zsiW9sCxVvXAyEDzTppM9oH5J
                      O0DqQbyRUpc91U+XPTkimD0nS7Q9y9mpvY7rBz3ER/I8Q19gvQCi9jtmWYS92s4fvQD7CTyYCp+9
                      vTmdPaAeAb1XXTG9cLVxvLJyKT30Vpw81vMCPZgJNryZk8I9UptgPfA5c73AkpO6oPCFvFFzlj1q
                      Vje9BJ4LvcCPj7yPE7k99NKAPGfjtr3qpqy9E7/CPYaIXz23Hki9MD1jvTKJVz0/Qra9gOgavEJF
                      s700M5M8xYKGvZ5TDD36qk090NacO33Pkj1yBBI9J7mNPSoOQb1IUIe91ZarvdgZtb3uNn49UnAC
                      PTDl4LswvWm95NwKvQw93Tx4Lfm8ieONPQ8drb06Fke9+opDPdtDvb2YgCG85DMKvcAwVruSCwc9
                      jT4pvbcwuT28ZQC9sHpSPAAVFryYEJQ8AO0LPG38mb2AqxY8LMK7PBJ5xb2J76c9mKx0vICpq716
                      vRK9kFUvPK9MtL2dopi9MEF0vfKNPj0gcaY8FYSlPbuSyr0ABji78jzAvWJVfD03D1q9iqw3PWJE
                      Vj36lVE9okuRvYBH+ryowfm86l/HvR/3vb0fRqc9wvdUPWsFxL31la89buwvPeO8lD10Yd68sJc+
                      PEqqeL3ucX49cy+GPfT6Br1sVMW84PGVO1Kxt72UCN088PEwvADgVDkswfk8JkstPahTzDyUfZu8
                      IoVdPZgyoDybXpw9DODIPJXDsr0Mx4m9eY3FPRLsTD1EJ9I8RGcLvQJlWz1z48s9e6mTvUdZgj2s
                      lfE8YJgsOx0Wqb32I1M9SmN+vS2bb71x8MY9yqaIvUMqyz2wKZq7fdmKvQ2olD2wOKw7zoWMvdlo
                      hD1onao8RcqpvX0jq72AYYO7kw/AvSfclT3o0ZE8XXptvQODZb1onhe8mH2xvEqCID1Vl4e9rHSl
                      PNhB87wKLK698ilmPWPvgT0js2G9GucuvTCowzs8VuA8BSasPW1jTb3KXB69vT3GvfpYy71g9rE8
                      eTW3PamLxz01NL490wjMPR2Rp71idDg9CvcKPYX4kL1Beqs9iCSovaSMzjyi4zc9qglQvaJtrb2D
                      zog9Qn5uPVTxrDw9EsO9At0jPePtp73WNBK98oICPVoJZL2JKsY9dTeRPZC5fr1M/w+98ndiPXS5
                      Bb2GNl49wEeyveULwD2ziUe92FlkPOK9oL3yfI29QI/0upMPkr0AtjK9uUPCPbEOuz3ACzy7WKyC
                      veIAPz2IkoI8o+VovcAtnL3OqjI9HVDBvUDWJbusTeA8pghYPSAzub2g94I7Zu0kPQlvqT1lV6w9
                      d0ddvYNHhT1wzCA8WymtvSb7KT1iBWc9tqogPYbtVT0A6sg6aK7KPDmshT2l7Zk9zLMEvQrsGj2r
                      B8W9MiEIPb0rkb0wHh+8ojslPd3Itj1E/fw8MV/IPSiQQTyeRYO9oKoSO8xE3bzHjpA9QtnKvd2W
                      yz3cQeg8GG5GvLwYCL26U1y95UK/vdD/Lb06Pxc9GOCXPKtfiD1qEMW9HAeDvRUVkr0MId28dh5x
                      PbANAb1GB4W9uxmzvZr0ID3aQwi9KBzovGqmbD2aFYO9wvzKvUK1TT0jAbG9d4ssvfbHXz1V+629
                      E4PHvbDpvr0484a99x5QvcpBVT2Xbck94auiPYrtq71oTCe8jXVfvaTK+zwKXhY9NkEOvVXeib2M
                      5p28KFjJvfL/Vz2X+1m9Gv17vUDrFDudQi69MHMAvKAoDbt3TlG91IXUPJqSQz2dOqa9naTGvUzi
                      wTwddaY9kNa6vWDsujwVLbM97IGnPIeKvT10INU8xxarPSBetr0TmoQ9KPu+vSDNmLxuBqa9eMqb
                      vPD1r70AWPg7silePUAfIzwGpSQ9VkZwPdRW1LyqvYG9yBqMvShlszz0s+A81wtuvVRJkTxwf0g8
                      2BUhvGhNkLyR84g9dQC0PUX/jL0gcaq9YMNHO9gwub1MM628cqE+PV67l70V1pu93Ri+vR5GAj3s
                      Cv68UhiWvQetc701Yrq9F++fPRC1R7xLcqC9MFvDu7hjxLzHvsc9gk2LvernLb0sEOU8Th5vPdhg
                      Mry/xMk9cKsQvP2yqL2gKJy7NDXIPGf2u71QGOo7oPELvZouBL1gOVS9n6aDPc8etT2qubO9d/oh
                      vZWWxD3KHXq9o2tavVsJy72YcIk8OUqLPe3Thj1Az6S92DCHvEarWT2dnF29DJrfPGAq57wjT8I9
                      kOa8vRLKyr1dA3a9gA62O5QWwDwoV2S840qnPRpLWb0WSGg9EbyTPZopYj2CH0E9LSVJvZqJVz2y
                      3jM9P4uLPQ1gNb0S95S9YCGrvQblo72W04e9aL1YvMKDNT0atjQ9KAI+vOZ2E73yEVg9/EX1PCjb
                      fryguKK9ElykvbYkZT3VRqs9CJ+gvPBcT7zoq5k8WKGRvIYhEb3UENI8qAA8PDCiz7syBcu9bgyO
                      vT0fu72hlIM9oOiBPHKNKz35tsQ9MHcPvcpeJD1orsq863PHvd0WZr0T7UC9KKigvciwxjyg7q28
                      U+96vTBvsrvz2bu9gJeNumg8dTw0hNq8AMWmO0BFa7yVc4K92CCcPJIiBT3IcZC8E5ykPVH4oT3B
                      MaE9zL4Wvaa6or0Ur7y8Uy6TvUm2mT00UKA8BGP+PDzMzzyrDrk9MLlfPPdNpj2oHW48rvZTPRBk
                      vb1mGBe9jOfHvI5PrL2cpew8gpIBPanjqT2zDSq9DAOGvKZrCj3gDdW7Xk0uPUDMoLyAO4U8XQq0
                      vQdWrD2taMQ94pgiPai5MrwGow29Wo5xvRuClL1FBoQ9QLc9u5kThD3mbxs9c3O7PVbfVz3fcMG9
                      9uuNvUT7BL3xwbA9ztRcPT48ND29gyK9zt0vPXSSpTxtbHC9idG8PQV3lT0NyZY9bfuUvU+Iu71R
                      c8o9ZT2yvZDRsr3oqig82G60vMhpiLwIRu+8GqdBPUIexr2Ie7e9zybKPbXOrr0dtKE9wfizPaA+
                      3Lz/RYA9sEb+O4yN4jz1xqi9OVqNPQ4GQD1BC5s9sxi4PeybAL3ZNLg9LOGyvOSw3zyZlIE9xt1t
                      PbAI/rukbhK9GPqEvXWMwT3ifAI9FHaGvWEslT0T4ZK9aCuDPBEssT1MT528C+SwvSQp7jxgfFC9
                      zJOPvNvXqj2C7RU9/huGvSO9oz2yf349AgkjPWBkK7tLhKa9PVpUvXMOVb2CSy09fWG7vd5PYz0q
                      8DM9VEDLvDa7Cr2FMoS9FfuSvXZtA72YCTM8wP94u9EKpj2OrJq9qiptvUDSZDvLPcE94itJPVDy
                      n703Y6+9DJXnvMOWc73PYbk9AAsGOvijurxmz5a9g5Qxvbzi8Tyy4gA90InGO6ISWD1hwYI954ou
                      vQjju7y4Doo8M+Z1vbQDgb2RDMI92CIFvF3rnz0M9fg87GiPvIC/jrsg6+A77/rFvbQWwjzQi1W9
                      MoLLvfg5+LzU9pW8rfhrvdASALy+5JW9aJpLPIqUW73MPpC8tTqnvRmLnD2+DB49sfWPPQ3siz1U
                      Ea68oNDJvcEUpT2U0qc8LTR9vdJeYj02Oqa9QI0MvLhxobz6h129DQskvUBGeDyJ54A9drB5PQBb
                      fr0QY1q8HBmDvVoIOj2xlpI9GHJgPD3nqL0j96i9F8BYvZBLPLxeqWk9UPXVu3tfsb1iwJ+9UNTR
                      O44UMT13cpA9LMfyvMv3u70Dw7y9+NK7PE1Iij1OCQ09gJJgvBjiNjwE9xC9ahqWvSpcfT2y3xE9
                      UBw/vIAsoLtgv6q8974wvfDhPDwtGEe9qBKsvI3ckT0eh3E97rervWOUb71Qu+o7/VIkvdNzbL2T
                      +5U9KQLBPQ+9mT3Rgbc9Dxmyve3iTL0e4I+9rKqLvAhQnLybM8c9UFmNuwAhqTvWo6u9re2iPfsw
                      hT029Rk9OM+PvBbGfT3sGOa8m3yQPf23iT3hypE9cwmoPUpfSr3e8FU9aIINvOBisrtAwZq6Rjli
                      PfQbxzwCfAs94N7GO9qBZT0wocq9HKL9PANWwz3YFLu91HL9PHCpfb1gFMy8wqdiPWjJsLwR1Y89
                      mOaHPLjnjr1w+pi9Mpyaveg2QLwlmLw9AEyium/otb2Ee+U8B7lSvazX1LxAG5W9oxOXPVC2aL1g
                      1We9AFKguuiUrLxFkqE94to1PZiEFrzjjJK9MFhuPOSd4TwjuTW9Q37KPSC2/LxsEpK8VcLMvXs0
                      o71EcNU8mJh0PKlljT0yOhQ9lpIyPWJ4ZT2Q4SG9J+8ivS1Vwj2q3wA9RqomPdobWr3AuTu7WjsK
                      vcNhUb3MdNm8662+PbVriD1Udxi9z3GnPUuOrj3AVre6QHVIvK4hSD3m/w29prtRPWPlML1V0ak9
                      LXpqvUyv17yPhcw9sDdqvJBrOL2AkCq8QnK3vZg0mbyQ8gU8MKczvJAPf70adbi9rsBpPYBdv7sA
                      c/A7ojUYPeX/hr00f5e8Dl8+PY4pBz1Hs4c9BbqXvXjzs71ygjc9gA5cvfAxQL1fgLy96Q6pPbK/
                      ST06yA891HGFPHAuUbwfzcC9NdaWPdiveryAMXA8QEWyOnCRLrwoIZ68CoywvYAujTxwzD68gPOO
                      OlntoT2QEj+9PcepPc3xSb1+qUk9usCOvXLHXT1oj7w8eIXBPEcOrD1MkYo8owx8vRrUGz30IoW8
                      kD+NveKck73+hG09DwGkPal/iD0Hn1u94UKSPajMgbxfObK9S36lPbq+lr0MRPY8UjbAvYO7uD3X
                      glC9Lf08vSoGTr04jbO8o5pcvZA1ZrwSrUI9io23vcASlr2Ef4q9KmxBvcxIn7xPsK+92y65vQCR
                      HLrdn8I9pxKwvRwd2TziCmU9Dd9zvQAKdbtAfZo81HnQPODDBr0Y+aq88FYcPKBqAr0AmCq7agZJ
                      vZ5PYj0HbIc9uiV/vYJEZD3MDJO81o4kPYAo2brYGNG8pkRuPWgwTzxUduE8+8mxPepmYz3ATJK8
                      IWeZPTRD9jxYrIg80FnUuyG6vD3owMs85jRKPa3Mer3tMo49M/16vfpWSr3zgHu9ZeqZvUA3dDup
                      OrU9MGriOyUwyz06nEM9k9egPRLbvL1YL6K9DG8LvVTGxbysc9Q8C9yivRSu+ryZtJs9xu+MvUBB
                      CDuvyoE9cD1yvW90gT2dsi29LhcTPcylpTxYeTW8wK/UvAJpcz16DAW9RpKbvee/rT1eo0U9UEu3
                      O31knr3joJU9xzYovdAXu72UWMI8LgKDvSDYljyv6769mP+ovDMaK71u/6m9ikNxvXkxjT3Pb409
                      QqY6PSbZAT3T4UO9zoeVvQqoaT3ca/Y8hfG2vSCG+zt01Ii93clDvWAsPjtQIR28k7NCvdPtsb2R
                      cos9H/68vaBpYL23/kS9zGD6PNA42Dvv1ci9jluevc6dfj3oj3y8iiJGPfOtj71mUVw9lJQNveVE
                      lb0oqXo80mC0vZ3Umz0A4VG8jOzZvEHZlz3Ayii77G74PK7dpL2gKbs8wPCFOqBZmrvwiWm9rj5V
                      PSpmJz0bwYU9v/ixvbz71DxoTyG8fjNlPUDmFL32XGk9zxOsPb5OAj3YgRe8KHqUvFaMDz312Jc9
                      2EAkPHDQY72ySUg9zqWbvaMKub24QqO8rN7dPIByuDwa36e9Uyo0vcgWvzzQij68lBzKvHCAT70I
                      Woi90G95vBnomT202wa9jhUOPeGrjz0KTxM9QD2jOlbAKj3U45E8ANClOunVmz1AuGo7gE6JusKR
                      k73dhzy9/YJQvVD/QjzUt628QDh+Ow2AkT2wMdA7VBjqPCcIpz1G0GA9RIyDvcZqLT0UXwa9JSaR
                      PbqQBj1Yb3S8N62uPZrWar0ojI88ybOcPam4mj1osH88xjsrPU9klD0BH4A9IPOxu4YPQD0gGbi8
                      0b/EPSNMTr0g6468YMyHu4tSrb1F56y97lypvby6Bb3kzes8iw+UvS0HQb03lMS9qr0uPXTWuTxJ
                      K409C0OevfGpkz1Y77e8spMmPS7rGj0KyiK9gj+cvamPmD30Lw29ouZhPcwe3zwTK4Y90xXIvdA6
                      n71gTdU74op9PdBuKzzKxKu9EvpfPfTVtTyCc1o9kNxIPHCQt70Oajw9vfE6vUt+nT0XeYM9+tCp
                      vYBnOzyAxE297HCaPNCCCrx0vaC8uhJwPeJYMj2CChs9sBOMvVK7GT0HH0298gAIPWwJyDzOswQ9
                      JzUbvVBQbbx+K6m98JrMvUwL9rwoTcK8JjdNPd7hXT2sbYw87FXivF/Piz1YVg481NOFvGg+Mzxt
                      kTm9bIn1PFoFer0AsNS3sSqoPRLULT0jeh694EmMvZqdOD01Cos9mhYtvdCN6rtwylm8Ng6KvY1x
                      eb37FZU9ytFpPcd8X73oYkK8QGuwvGDvYbtoHyK8mML8vCttjr3QE6+744U8vW3Bvr1aVUO90nBH
                      PZctZL31W5O9APzCOyTu0zyqC2k91au6PdeuX70BGY09nihXPTObwr2MUQy9l9suvRiDkbyYhH68
                      1VyLvdV3jj1mbVA9cReMPZscpr3QVEm9wkx1PQoSDL0w0yy9dxCPPYZcEr33BWq9SrB2PeJjCD3g
                      0c28cZmiPS/qsD1EtxG9oh0aPaSf/jzMkIW8BwCsPSWLyb3SEVc9ANxwObNXa72UjPW8J3eNPcwa
                      Eb06uRM9lELovPSAq7wy+E894HK2OwgEkbyimkM9gkgkPYSjAL3R7L89bY2vvUIRTj333ia9B2ii
                      PX13rL33RCa9Rg0IPU+Woj3Q83W8BQiZvTquqb1USIa9vMLwPDDyWLzOQ1U9WaKBPYBMybsJLcU9
                      sNCAvZpRMz0z95S9qN1qvGNdXr10s668gG00vDqbvr1zI129uvZIvU1vrr0RK7c91XPFPQbCfz1a
                      6yQ9MjpdPYAWTL0Az2y76GWyvYBy/zpMgZO8EytLvaOcNr0SGEE9wj5SPRDmUjzq4WM9CvSqvcIU
                      FT0YNAc8xnRWPegPkzwZmqY9hw8kvZ0qur1/+aI9MNBRPFsyuD041OW8PZS2PYyiwDx9A5W9MDos
                      vH+qwT0ox5k8pyuUPU4LAT1AIT67OJXLPGEVuz1goh+9wF40uw/ZhD2qEVe9wLFTvbBXJ73KvXU9
                      CULGPSPMvb1KwAk92CS0vbDza70jFJE91GW/vDB+bL2Jeog9VEbHPG3Wcb1YcsG80BopvTpGR701
                      5o49Xx2ZPWj/O7wgeP688O4GvADyW7sq+3O9KBGmvIxo+Dx+mZS9cvtiPddQsr32IwM9KCquvIo7
                      ZL1Fzbc9oPxNO546ED34w/y8MGL/O03JgL3b+sq9LZN8vefarz0jth+9HiwUPXrWBr0v7I49mAPm
                      vJJKaT0ARjK79KCLvZKUQz2PC7W9MkC/vbANlDvb0JI9ar5APWAR97vM4KC8AOEWO/T4qbxj3aO9
                      ch88PfDphL1My/882oBvPTA7pzvKrhe9hmALPdDdkL3Pzba9zooVPbh7m7yAfBy9cyvJvVB0TLzM
                      RBi9VCDzPHKzhr3gS9U7AE7jOgDFBbpH15w9DqIqPRjRJLy125a9gLdVvMOgxj2MHRK99lEDPahW
                      s7zQ4OK7cDxVvaJRTT1YAqe9W0K3PfoQWT0pXqQ9wLg6vBvHtz1VAIQ9U9+qveAIljzwcLW9AVqH
                      PQlinz0/p6+9AJbouRRt17waSrG9YpBVPRdwlz1Mo6I87Xi8PfNtmT11p7u9dOOJvYBDEb3CAZS9
                      cN1gvbwgzjy8rBO9TSI6vRQdlzyhboQ9ZkdDPY1CYL3AX247Rus1PYnJtz1KM4G90ZWxPZqyVL1W
                      rVg9jhdcPYC9xDqyuAc9XVAivcA1Mr0XM3a9MtIDPUqNIj0H24o9gExevUJhQT0HzFC9bMHBvCCL
                      ir305fW8t3WBPZVKyT1AUiO7FViOvewekLwwVa27+5mXvYCHeDxA9Ba9YE1AvRrHyb26XH+90KE4
                      POPjf73DWpi9rITZPDGskT2XaCC95ae0vQA5KroIxIc8QI7APLPjQr2Erug88mASPUBBKjugL9u8
                      sQGNPaOCd70wsJy72HiZvdkcwj39A7I9ROqKvftVsL0Dj7A99m00PUCcITz2jEM9Z9GQPfTPn7xe
                      bRE9qKmrPA+Qx730pPM8RpiKvWLrbz0eDKS9kU+oPaz7CL1rvbs9EBtCPKo1Pj2UaKo8oJoPu8BA
                      gjxTeTy9DeSQvQqrir2ACXk6oh9aPSRZBr0gBqK7dnsvPdpNY73sfek8yf6EPRSQ67wiH0k9RzPH
                      vTgJibwIK+e8wPbOOlumnD1Ad3w8TjZGPagRq73dO6U9UCckPD+jwr0GwqK9q460vXTp9Lwdn2W9
                      8rxSPeAysDtee6m96AUAvIAOXLqkMg69YGWhu42fP71rhKk97PmFvAABFryOqAs9FA3jPIIxpb2I
                      jau90OxuvTdNc72DU5I9ne27vUS50Dyry5a9HHUKvf2omL2gqBO9MoQQPYxVpbw5RsU9sX+6PYBz
                      77tVv5k9iptKPbM6Jb0weRc8Vm2SvRN5I73gbIy8KfK8PXDBDLxN8ag9h6clvZQc6DwgM0y9sVjD
                      Pc4cIT2o6jA8kNd3vAVdwr2SE4S96kFWPT8sx72y0CY9wYSwPSqPNL3Muec8S5vFPaezpj3IkOG8
                      xx4tvQ2Up71GSqe9rOiUPJPexb1Bqbg92nQlPSnYmT1YpqK83Tm6PRFUwz2NJ8A9J3wivQbMJz1S
                      dFk9oHeCvWjnObxTFKS9UbrIPQzy/7zSHn090CiNu8SLFL1wSks8cEsPvRjbZ7xaIwy9M84hvZRN
                      zjxohoe9+Q/MPYJ4yr1mZRY9gAbJvN0uqD0J1LM9DYFivd9txT1wImS9yeWxPR2goD3STHk9kL41
                      PLBiSjxwWCG9NLjuvMxdib1R8qA9Hf6gvYsHkD0Agjq9Cqivvd5UNz3wU308ct1DPTijmL0oa5i9
                      lutEPeJ5ET1sSuC8CgImPXG3hT0zmL099g4RvfcRvr0vl7i97qIDPfTsszzWdxo9dEKePPYgTj3K
                      RE49avNBPeXllz2SXhQ9DcU0vQD68rnJt6M9jAraPNKOGz0ACfG8AXaFPVhV8byz7JK9yVKiPW0x
                      dr0Aj1k6DtxNPSDXCb0xUpM9ZWmRPbuMuj1Aq1c8wL6OPDfqyr0Md4W9zeOdPcBpPLyYaXW8sBPK
                      vYAdoDu6/QY9AqNdPVA1tDsKvMy9skhnPSHypj0wOSC9pDPyPCv8qT1fLYk92UO0PX8Rsj0NO6i9
                      cmOdvdZPBb0ZZ409qmpsPVQDhr1Ambo84kdZPcw3szyJ66096Iy4vMgf0ryW00g9KrNBPcH2kT1w
                      jXa9aBfBvTBqObyiLMa9jBuavIMcrr17WYk9Xqw0PaRU3jwGOxY926iOvVCrBLz9xVO917WxvVAN
                      nzsuCTE9ChdEvSI8cT3gvr+9FIWtvGomUT0Qkic8NNjiPBIgHj11raM9BCfgPBEntj0ETIG9+mMX
                      vYLpw72niIw99FvxvI88lT2A5qc8nJHjPNtXpz3AJgY7ji0WPV7CAj2NybM9JbfEPfOGvb2Ag6I6
                      wVWmPYAdubyuFDc9NFmLvWnxmT1wDw68/RYdvRISvr29Wie9o1KSPclowz0tr8I9wIytvRkazD0V
                      34c9ACuDOwBfnr3gcZ67KCGBvYCpl7yeIxI9PbAtvUD3sLp4i4M801s7vVBsTLyGVpW92Oi6vIgy
                      gzxAULa8aVW3PdiiGDwAi1S6aNXhvGlQwz1JUsg9ADthPMwRpLyw2Ue88AEEvX96y723t7O9imzM
                      vcagCj0yTDY9p0G/PZKeFD0obZ69Cz2RvYCBg70woT08RJ6Fva/8pz1w62C84deNPd0IbL2tFCW9
                      BmEIPTctSL0I4L+9wP3GvVDW9jvdiIk9MAezOy5fpL1dClO9kqNLPQBTADwA/am8AK5qPObhRz2W
                      Gks9AJDsu5R5+rxDxEu9KBfVvKgpJDyAsxE8AIjRu9o6WD2K3ye9YIeBvGXtsL36xgw92G+rvODs
                      9zuY+w48gM0+POjkU7zEBs08JtKXvQNOSb34oLm9Rz+6vWopr71NLcG9AKvHvVMbxz1ZX8M9gK9w
                      vCzTqzwRC40990TCvbhYrb3J8Ls9lILUPNJ/BD2g6J88qNlMPMiW8rwAJRw7cINUve6Bj71Ee+c8
                      SFXtvBCqkL1tkrM9s9JovZBoir2oDW885aahvUQz3zwlTLK9QOsAvfYQDL3AslW9LJW/vB30bL0J
                      YoU9i+2hPSwQ0Lw6dBQ94A/ru4C+87pz2KM9BnAYvUAKg730I4u9MthkPRnWnT0oQAS8LKzXvLYF
                      Sj2Ny8c9Aai5Pbtqjz3e3ae9lMeAPPrSl71gYbI72y3GPaBzpbyYrTO88OAePP3JqL14K6w8PlCa
                      vUJ7PD2qdjq94OqCu2rhq73VUIk9vK2BvcuVlD3AuVS8wue2vWCKojyOk469MSTGPcDhpLxguTi9
                      AGCHuTWLyL1dBaC9AEB9OCjNzryA79m8kQS3Pastpr247ae88CxovX2hyL16GW49oJrJvKpGwL2y
                      gr+96JS/vNEByz0+9S89YnoWPTQzEr0CY009gL7KvNWdzL3UOau8M35YvWt2lr0CNqC9gKZPOgqp
                      bD1AKYs6Mg4JPVMqoz0YLW08EABqvJBmDbyNlnq96FcrvLtDoj0pJ7A9KXOuPQxs5jzqe8e9gG2m
                      O6pRej2EiYK9FWDMvX08b71giaw7YBy9O0JwGD2hE589NN/yvAEllj3dwHa9QL1MPMC9dLzA5Pa6
                      HCyGvRYaHz1lQ7c9NFHPPK9Miz3CWHQ9Kym4PUjHlr05ysY9pl+IvYgikrydOow9Q9GjvdUyyb1y
                      cJy9k4KNvVZIjL0p4Zw9mr18vTA+E7zUgZu8ZVuHvc1so73eoWE9MsqNvRB5zL3jUVO9InEZPcDu
                      cLs1k8u9tU2BvZLSZD0AaEO94z7Dvex+wTy0/vc8uLrEvAB5Mbpt13G9xUeGvbe3a70N4Kq9LqFy
                      PYpuRD0KK2Y9NC7HvOUvzL3U2Ym8TjAvPX3sir0dtSS9Z9VIvcRX1jy9r1G9gL50vLF4lT041ZK9
                      0bGsPczHqryAvN86TvZiPUBRCL1KtXY9ZXvDPVC7jTvwayi9JYWPPczVAr2D5549KECUPFthwT0p
                      asY9HlmNvRArK72gtOa8jGbaPLiG9Lz4BIy9zGi/vIE7lT2+wT49TxyUPT5vHj1ROo89e96UvXXK
                      wT0ASGC60/CiPXWKkT2BH709nShIvdp2X705h789DJGCvfbQVD3NiYu9GmQ7ve8Btb3Atky7xwKb
                      PaKOST3grIa8PhdPPW3rUL2V74o9Or41PfnAsD3RPsU9Gk8CvWM9cr1IiYy85NbcPMoFxL3A6H+7
                      KNS1vX4nKD3aV1u912oqvSjUFLzMwLw8IMCsvYQ12Dy/6bY94lQlPSeKy70MmuY8l1JJvVETkj1a
                      Pce9IBqWPFdIpz3OmyA94GKkO2IdWT0UZsm8k+O5vc4mfz2z4LY9RwWkPcJDQD1GeVU98LRSPMCk
                      rDwRipk914eFPT5hm73Tk7E9A0aOPQcaIb3lt7y9+Kygvdh1gjywMFc8w/66vcPuV73f6549oqJe
                      PWcNy70Y3Ty8TsB/PWxk/7y2M2I9tEiyvKMQxr0HZDW9g9ZYvWCTujs7DKm9sBOSOwAF4rtHz6+9
                      UquGvX80rb2o+zQ8dl59PaBYiL2hEMA9oAJ0vSlvnj2WF4W9ank2PS+sx71QafI7eXevPRfGjj3T
                      Apk9aBG8vIy9uDzDr449VZ62vermHD2s6Yi9nc9JvQAekrxyWhk9rObIPLlQtz2Asia9ACRSO4f/
                      fb13EpU9QZylPaiz9rw5v6Y9bNCBvQwVuzzzVbk9VsBfPZR2uTyGagw93bXCPVQ17TzXZKE9ZvBl
                      PfHZhT3FB7g9EnU1PUMIsr3dDre9XFIZvbJbLz3QETk8pmhnPSlGjz0g3Nk7QAsSvRW7wD236Xa9
                      q32nvebdj71Xqaw9VpsIPaOcYb3p7II9YdKGPdQirrywxlS8GAFJvGBFnL0Qmke9APIPPIQDAr1R
                      zZw9OpA0Pe0Utj3PGJI95T2Dvdp/Lb0WoKi9EvsdPUHiuj0hDbk9bp5DPXfMXb2tmJQ9aOaQvQCq
                      STvYjTM8wsCLvbW0uL0Yvfe8+BOivMomFr3AlTC8tz2ePWBdIzs0oPa8sERCvaJzXT3AFU29sffD
                      PVpqbT24/e+8YJAIuxFyxz16cEq9M3FmvSH7tz29vq69ImygvaEBpT3k7ug8CBWjPMbyMz0ggu67
                      R7QpvcBeSLsvX8e9sMnku32rqz0Y5IM8s20/vTZDUj3Ng4q9OwjMvYWUwD3jmHq9cAY2PLJror2C
                      7Q49LcmRvYCeH73uR4C9Ck1evdh7f7zILYY8m++kPQAFTjyMe928J3OQPblikT2H3Ig9zkWVvV/j
                      wL3L/8C9q8yavVUuq70hPsM9AJQVuSLJMj2OpnA9IKXbvIoUML0AXJs7KEGDPFAiV70am3+9jRIs
                      vRjPgb3ujRI9+mBsvZIhQD2nemy96OgSPPLPTj0HFLs99qZpPaEEuj0R9cQ9Y65lvZGtrD1kieY8
                      SrdAvTH7jT0ATEi8DTuYPTq0X72ODz49EZKkPQ9Usb3OaBM9xsyCvQBKDju+T5q9m7KjPSecO730
                      iPi84MSrOwj74LxggfY7Q5u9PdJjsL3hT7M9WL5VPEopjb3cctg8QEATvdBwuLsmj5O9THPDvLXb
                      x71AgTO9U+myPQGWpj2WxaS9sG6Evej63rzQbGO8rWhavXOww73nMco9x5yYPe5BND0XaTq9DeCg
                      vSfXH71cnuM8NOK+vABbS72UIea81NLfPJAWur0oguy8GD6BvGo+BL2waPS7o/tGvbSjrLysEfC8
                      cO5/vaQ5BL3SE0U9mS2uPYDoQTwA+ky82kAlPSaXjb32Ly09Ac2nPdfstz2Qxx+9I8aUvQtJtL0Z
                      ZqA9OAq+vPmbtj2wjBy8BzdZvQ7kIz0WbDw9TJuPPORe8jxGcE49UGq9O7IMCj11fLI9hXuKvYoi
                      Vz3DKnC9zghJPTIYXj0ap2094GZavdJtk73hisQ93QGevdhXDDzAIRQ8KhhuPVDA07so9qu9r5yz
                      vXphXj1+qz89QUrJPciChb2hpbg9UP3VO/6FpL335Dm9d2TAvf2wTr3YcqI8MKdiPGIar70A4XI7
                      wrZnPUfEQL2r78I9gCYhPMcskD2Y3Jm8mNGvvLByUrwDfWC92HfCvUIMQT1yxzs9ZDznPBAhNTy2
                      3JW9IoZ+PaCDxjsUgJ48pf2uvfzwDL2wdTy83s93PaSB7jzAaAi7AKFcO3ejvT0zoki9KJxEPLSO
                      7TwIHpk8uqUQvTrsBj39+MK9HVZYvY0YnT06SBa9LOTQPDCCi7tUhY684AG9vYDDD71tcX+9h5GW
                      PVhr8rwg0um7DRbDvewz9rxTKkK9roQpPYG+qj3kFwK9tqAePX5sRj3de509ibilPQCICDogSAG9
                      OJ+yvDR2x7ywIr+91G3/vJ3ujL2Yf0y8V2HBve2zRb31qpe9oqe6vVK7wr2Aa2a9qs8uvdj4yrxQ
                      52+9RXu4vYAOMrpDwIg9janIvfthwz3JWKw9OYWhPQ10vz2AWbU61Le0vMczRL2Mehm9mI6tvSa/
                      jb3mt529RUOxvQ8zvD1r0Lc9WkBZPehBVrxIPag8hNruPJF/vD3wID+9WCYWPAASLLtVzok9oDfH
                      vFXyij0oYpS91GyWvIB8Brze4DY9cF8DPNtIx73tJ7W9QKAIO1Ty2Tx55MU9qhrMvZiWozy+NEc9
                      qQ+pPTBSpL09Fza9SaGDPV2wRr2RlIU9gn56PZmXzD3/l5g9QD1Su5MIsz1ha5M9JmI1PbBtL71x
                      Yro96Ib8vAAENbyO2Uw9fK0RvWxvtTx6Dmw9pDbcPACc/zreUCI9St9YvRCaSzxi76e999whvd+d
                      lD0D3TG9Zu9/PRWdvL0YrSO8UNO0vX1ahT2VFaU9hMHZPECNjjpUuZW8duAHPQCaJb39SqU9slt0
                      PToiZb3CtI69n0q3PZzi+jyidk89ULrDO8QO7TwhvJM9PTC8vT3Xir2w4j68zxaaPQHAqD3NEIY9
                      GgYkPQCUJjqA9qS60KI3vL3wm71xJZE9Cr98vZ7Wob3/AIk9JLjNPP0gsL2CyR89dHXrPCD/izts
                      heS85T6sPT2uab3MVBS9IUeSPdv8sT0AGJc4zYmRPUyG/DxgxdO82oMvPQqiPD0atme9sqksPWcs
                      U720X5e8Kfa5PUqctr08VgO9oGEbu3xb3Twn8iu90nZ4PTRiwjxiOT09swu8vUS73zxGPqy9UK6r
                      u6JRKz3wn6O9cvKsvbgCnLxOMpW9yns9PVSVir0g9og70MESvag4NzzHJBq999vGvRIdtL3zj7q9
                      DP/DvKsXt71Dxh69GCKLvXL8i70Eq/I8MFGBu8Z1AT0wmby9ZILVPEZzBr36NR49CvZjvWAUWztf
                      G4w9O9GmvUh58bx6iDQ966uGPeygmDwUYZu8QFd2PNQM0zzZVcU9kfDAPXqCfz1A4Lm8zvinvfKy
                      TT1mVjA91ukJveKhAj0XYss9stOjvfIiAj3VRsm9cCEYve/WtT0omtG8WKyRPABJm7vZb689aW2+
                      PR4zGT3Gi049UjtCPTOBlr2um6K9/auvPd1blb3CHx49wFYWvSZCGT1Uqte84NaHvTCEwDseM6e9
                      1EX5vBd7xL3bbIk9u0KdPbkbsT2+eB09Y3iJPajxp72KAhQ9ACv8vA1Kyr20T5I8yEuIvTcJkj3J
                      4pA9Ebe5PWsZjT1H6T+9OoUNvXAfdL1keN486FpgvIDjZzwOOmM9h1C9vabwAj1WBzk92QelPaXH
                      mL1QowC9DV6qPdBnNTzTv8K9Mm1SPQ6IMj3dw3G90JG8ux+glj0d8IS97vN6PYA91TqJjsQ9xZWU
                      PSC2C70aFn49aNk7PO3THr1i9JW9kEGRvWD03LvfgJs9XtNfPZElnz1TdJ490nHLvVRWkDwhzIc9
                      /sFWPYkQlT0ujEc9vT9TvbO0sT05MZ09wLd6vTf4hz2ov0a8pJjePIDw8Lz+0CA9ArfBvcTLib3Z
                      56M9dG6KPEQOzTx0oNU8MZ++PW5XYz2Hyza9/gSQvainb7wSzHw9AJjxuH83lz3w07u9wIFdu+hA
                      4bzw4AI8TbvAPXTXwTxw4Hm9yO6TPBJdED0FvbU9PW+hPZIreT1hY689kLk0vQjfmLxYhTc8k5wt
                      vV07ZL2i2aK9vUa0PYG7nj1WrzU94wM8vVcALr22hYW9sgiUvXQX2Dz5N4A9klRyPSBk5jsAuV67
                      998mvbSf3Dwu6z89QENIu6ge0ryvAcM9mfazPYzz3zwCbBI9umhAvSVqlb1d+Zg9CqNlPU6Uez0n
                      vHW9sPZFvIzm8jztfq89sLq2vQcMhz1YXQo85hSlvaMiuD3He0K9qtFUvZAGZzxAFUE8ws0vPaAP
                      MTtq6Hs94rIZPbGqkz1rVJ094hkrPYBKwL2hb6Y96MBvPPD/QbxTeMU90g5IPXVdzL2waKG79Dr5
                      vFS4j7yVasW9/KTqPPQQlbwK1bK9tiVmPcHgqT2Qsy28bASyvFOIoL0CRwk90mQRPY8Gsj0Ix508
                      O0WlPaU6xr12dAM9Ize6PZZ/fD322Ze9SGLfvOwDzDyA6Mm9kBZlveJRlL1C0by9N7ukPXOSLL2o
                      IES8OWawPYp/fr197pa9IDTGu6C5lbtyEYS9GCDVvPDUODxg4SM7oKGAu/rgVj3Rm549dMjAPADM
                      6zgJVqk90Cr7O9zsBr23cL29gaSzPZLhVD1ohAK8AFJJvKjXwLxzG6I9a42YvYDjuzzIe469l/My
                      vY7Laz0hWaI965DGvfdOrD2VxZM9sMQvvfGmtT3Tybm9MZ+ZPQ8JsT1iiTA9hdK4PWRk1DzY1bO8
                      7g6WvRm+hj2yJ309AHrZOoijsjy37Ly95dSIvdn0pD2yX7O9WkNLPXUNkr39PY09UG93vCg0VTwu
                      5WY9gAqQusuVv71gRsm7a2jGPX7AJj2UW6q8AHcmvAexL70Y2TA8W7SlPTJOJD3xe8I9xnyYvViD
                      lrwAkxm6AnZ8PQgn0bxhsJo9PreovT7PET3y8lU93cB9vYDuxTsQWxI8ELtsvEBARrvaGz+9E3hG
                      vTyugr1Iqda8AH7cudVLnr09x0u9kPkePIbHdz3ACrG6zMu3vHPulr0iCkM9uwWavbehSb2aC3O9
                      VfydvUCFQLuggbS8V9qEPdgWr70y1QU9MuJ6PSttnj0Cv2o9rOyCvYCSuTswqkq9WRaEPXgxr70b
                      8pO98YKgPTi0sbwqr0Y9BVuOvcWEzD1gA6W9lCSMPKx6q7wNfK+9y8irPchP57yxE5o9N1rHPVSt
                      0TyNIEq9LFHSPFJJFz3oha+9oyhWvWYjQT1lMMs9QUuTPUP5bL3gEaG7N721PUIjZT1Swmc9RshC
                      PagK27xYc4q8hzFxvWYEE72wep87emI3PY5PfT2BKag9UpZhPVfgyr3Fr6g9wJVuvP4zpr2YyFI8
                      MJRWPDhkqb3KFzO9MhJQPTHChD3BhcQ9qkw7PSDjGr24q6c8RA3TPFvsyL3EDfQ8YFP1O+tToz1g
                      Kyu7rZ9jvQAFDjwoL5g8iPL2vAqxOL0wgp+7SS/IPQB6mrsSRlE9MiR6PegDfbxBDKM9hvRlPQ4o
                      ND1QHdA7ZBL7PBABar2oQMA8MFPVO7MvkT1AFY66wAWzvLWTsb0gv4+9WgjKvWq9LD2If4K8MGcs
                      vYm5tj1SzQg98pRTPVihDjx6kSw9KPzAvRQtn7zAuwq9lE/2POAt1LyDvLA9Op0PvdR7xzw9aKg9
                      NgtvPS33YL1D+3+9/GHRPCr9Ir2RP7U9vBraPDA7DTxaWCM9AAeavECKcryoQE882oMevYDqs7tO
                      q309A1ldvUDZfb06HoG9X7PBvVD0B71Mo/E8UeGqPeL2rb009we9FB0RvbJGSj0y5Bc924uyPS+a
                      vD2dM6g94IwYvUZJWD2g9p47sOesuyF4qz1akru9AMklvaB1Ur3XRRq9gEwlvRiiwrwxRZE97Xul
                      vTIdWz0t+Ly9YoYcPV2iZb2wZdg7OvIHPXBlLjwUpKk8V/9CvdgN7byN4y69dN2sPHesrT1pY7s9
                      EGm3vYL/Zj36thU9UQCgPbZiYD2Az6E7XtxYPfx15TxmqA0997w5vdlOhj1qaVy9yJGvPM1th71q
                      UTW9uCHIvYS74zxc4YC9gI2SveBesTy4B7M89NQVvY8FyD3TAbs9UGrWuwBl07l63xc9IWKHPbsd
                      pr35pZ09FuN9PWZRpr1oLvu8/xmVPVocRL2lpo69MEoDvMzwjTw/Vr69LXeMPXyM9TyRh409b5aJ
                      PVeKgj2w91G8gIKOOlc+R71QuV29JgUHvbI9j70XJX29UhqSvXYseD2Jfa49QOeKOjR1zrzAOgo7
                      BXK2PQDl7Tm6VFo9AcigPSf8wb2fBME99MapPM2jx70gO8Q7O2SVvXmFrj0z+lO9oy17vRqAHz2D
                      Ajm9p9AyvWjqIbyztKG9+liHvQNrML1Alsi8utWgvRC+ab1LJaK9tTuavWafHT2PJpk9paapvf/y
                      wz0IaYu8qIRlPCCgortdRa+9KsAnPdoQLz0aMko9WkxbvSDtEb2NdJO98W+5PY30sz38ic88wC1k
                      O/g7pr1YSFq8mtkzPUxhtbxtj5896WirPQBwM7pjh8q91A3pvEAddTy8J4S9Bxsuvdi8rzz5qJA9
                      NA3AvAdxdb0nQa29ctkRPUpEXz1ABi68YlkuPXDtYr2UdJO8AFQgOxrNjr0NLsQ9upEqPRqRp704
                      YaM8uqNEvS7nAT1glcM7qp8nPTT2/zyjDmW9pkwjPUzwxTzrdKy9aPgxvJqjNT0AQ0W7ndWOPak0
                      jz14JeO8oLKPPAYXaz3ARzc7dJyMvcAqwbqDGDy9l4hZvSvUkb0Ilci8Bjk4PZBUBL2Mprw8UPcb
                      vVBruztCCsy9FCOIvPTPn7yq98K9qjsOvaB8BL2oKPm8wnZpPQDvGL3Sh2Y9Ee2JPS/Kwb3eWY69
                      l8NBvX+Tsr0j6MO9QEgCO6ZODD2A1g28CGSqvfCwNryAPRq6CyO8vUyrAr1JOqg9+4ePvdJgi70Y
                      aMS8WPevPGqYIj079Je9ulpRPYVnhT1gSbM7AOZzOThnnDxH/i29I3q4vQBM8ruHa8o982crvZ3c
                      Q73g8fy7AKAdOZDEIb2jET294iuiveJLTD1eFwo96iO+vUh/7rwSKsW9RZiSvXZRVz3oYYu9zSew
                      PVkshD1UadO8pdTGvYMVfL0U0Ym8WmMGPerSEb36DEC9Km9TvTDoDzzKtS09VcizvbCkVL1jHEy9
                      jaIxvRXcyz0qHBe9CsFQPR23TL17iqQ9BhxePQxXiL3gh/g7vm5aPRA1BzyCLQk9+vaavTbMcj1m
                      /qu9crVLPWCZLbvH2la9iLa/PIDj9btjEGG9uI2yPKVrrD3MoJu8C++6vVnMuT0R6YY9k93FPfXl
                      uD3hyb09YCYlvZhKKbw4vqi8J5euPbKvKD0zxpC91leVvZh8e7yAQIq6XJOIva31mD2oIJi8UFNO
                      PJRm3jzX+2W9swBNvf2mkL24UM68poQoPflipz0YRXo8b16PPXlhrz3t0Xa9Tq2gvXofXD3Lccu9
                      sD2yvWClcrsIhOW8aPmrvVCE/LtH6j+9gPxIPGAI6LsyAhY9W8C2PRDKRzzx3L49o6tfvcPYLb2n
                      IBy9Mh8XPYXVmT3s7/K84cu+Pa6xqL0A4Vc8IKSRvaV0gb1Wdg69UmCgvXPYKL2g32W94GGbPCge
                      RrxsDpU8mFWlvNvWtL1w+i88ACNlO70qlb3vIKI9nd+dvQHYqT3GiHg9e4C6PRRfAL3nQbe9zciJ
                      vVQP5TwcfwC9B5kuvfOiHr0n07m9XE/RPI9qwL2f/ZQ9WFYjPELaDT1KyRs9pOX6PNB8B70ppIU9
                      r2KlPbtmwD3aAhe9E8U+vY0YHr14SMi9IwwvvVnClz0Gaay9yYmlPcL/JD2QTgk8ogcJPeylrLyU
                      SYO8lEWUvGkfjj14Pbe8f2+YPYAgJzyS/2M9ozmavYImh72qCpa9XZI3vdcYmT2hq5c9NGT+PNPY
                      oD0JBMg98UahPUCRrL1KBbu98PQYPIYOg70ar629llNGPcD/YL3wyR+8gK1sugDlW7xAqUm8ghdd
                      PdhoNDykUM08EOAGvRGYqz2T9qQ90qJ+PQAo8bnVNok9hb25PSIsNj1WaKq9e3ODPWwFzLzQr5+9
                      yD6JvQJCGj0DHMo9TP+VPKLDmL1enRE9BcuKvRICPj0E4vg8TI2XvFJioL2SGxA9lu1QPWVps72o
                      dL688kwqPRTJgDxtF0a92/6hPZ2PxT1gSCW9+vK5vXKxSj3K3K+96weOPWWexb1A3ia7OOCgvKV2
                      hL11L4O9aF2BPADBtjv24X89weqcPTTR1zzaqS09mitrPdC3sL2R/Ks9tWqJPZMavT39ypq9W7qB
                      Pb8SgD0yQF49gA9LvAKzDj2U3dg8ojlQPZhixb2AkYq9dT6zPQgXpb2Y1i08+K+WPNpKSj0qHXQ9
                      LsdpPaDqezsXEi69rY6pPVAFwLsXJn69OXauPVyZhr37mKC90AfBOzY8TT0QxmE8siciPVL8mL0H
                      FrW9hPnyPJh5KLyYIri9K2iDPXqzMz2Gq2g92mKHvbnVkD0S9kw9oiCSvcJxZD3SI089hCCDvVCF
                      xjsA/LY7iugkvQ6rAT3lOqw9uye7PSEHtD1QskQ8QLtxPJYdfj0Lgsg9OfqePbVjhD37IsA9gO8h
                      PEBGhjxd5Ei9uppCPUpYN72dS409YvkAPUAhKbyAuJc8AFLWOV0wgT1BKqY9XwCgPZBSHr1oKdu8
                      RrERvZt6pj2q6sO9UHcDvYuqiz3KY6O9kuVBPZB0V70MSsM8k6FpvdPlSb0EOtQ8IK+8vBiJ+rwM
                      cu08UP9lvClJjz0Am4E5sLfWu9XukD0oHri8el12vXNUlr2ARPs7ESmbPQqcy72AM/y7AJu0vaGK
                      yD0aSky9SKCGPEsqjb1gLmW7FiBUPYroKb060EU9Rs+Vve/Gtj3Wcom9qn2xvfIHOj1BoYM9yvxE
                      vXaGdT3ybCY9WMKFvFAtsL0o2be9CkYcvVfTtr0t6zC99YievRtnhT1tuLC98wA0vdKNPT1yQ3Q9
                      29iqPVHjmz09XYq94vtWPWgQRryg5au7dLiLvGafDb2+AZW9AAAfOEfvV70DzF+9mOqEvE0Nyr0b
                      w5o9IqSsvagZRjzYpZs8okdYPddqO70nh6w9CfazPSXkrT1nMCu9BDnuPJjqwjzUgqG8AVnMPRPo
                      wj0RQrE9ymiVvfMDP73wUAO8E3C+vbilsLwoixW8vqEUPV24m70esSk96/u+vap/Mj2AuDa9MKLr
                      O6DcmTyMWYK9qjAVvbiyuL25+qo9eW6DPaAZ+jvU4tM8JpZPPQbqFj15Upw97wzHPf2fGr0AwEk5
                      m9yePfEHkj3QTWi8E8KvvQLMDT3tAq09Xu9tPSaZKT3oeo29D5nCPeGJgj1J7oE9S1GOPXC6A72C
                      tCg9n5SUPf7SYD3JNLw9AEjsvEWewL3ODCg9I+izPYC9RL0+Z6e91M6KvQUsy71oyGg8LLTLvA4i
                      fT3ZFZg9aCOfvW32NL0Dhsg9ekVBvfCHPryySDY9YFd8vR6Vgr3mU6u9/1ySPXRo/zzQDIi7gNI6
                      vakQsD2WlVw96FvGveCQrDzhZ4k9mDMsPBAigr2M8++8y3mcPcMAZb1Vwp+9vAbkPKCa9LsEgt08
                      HdlkvStuy71Tar69JVytPVeVwL164n69yiB8PaCLGL022kI9ILqxPFBiOLwUHPS8BeeavXm1jj1o
                      25C8zkxrPbssnD1A8Ug8GPY4vOLKy731jcW9FiMQPcvrvT20x9U8kDFfvRkvwj0oxiq8kAC7vTD+
                      QL04LrA8IWaTPTjtn7ycfIW9WP9GPIQ4+Twiygo9lFDoPFBjHrxFjaa9vMXiPP70i73AjlE7F5R+
                      vUBiyjw4D9W8KPK0vfLuOz1AjWc8XyzAveppUb2XRnu9ygdsvUPCeb2jei+9mKxyPNnPmj3AaYu9
                      hudxPdeRwj292og98m25vf+zsD3wCBS8EGGjvU5LlL3j0He9pVWsPXq5Kj0udUQ9WqUmPSdQxr09
                      M4a9liipvYonBr3QXY474OWLvBnLkT1a1Ku9DQ2ivR4GYj0wT7W9a3+UvVAJHjygpIq7QC6Gvapn
                      Sr0NSss9OCKVvID0wjvSvwo9D3+cPYuHhT3AKEC79ISLPGzb4rxQXGW9kFNFvTZ2Oz10WJk8lrsu
                      Pbi78bzCNhM9AD3qvFYGOz0ga4u8xtsjPc3Kmz2sxZU8qNOnPECMQDx1dr89RpKWvSD3rjyvVrC9
                      o6OwPWxq5Ly0iJI8wsNgPaKkeD3ULtY8gEEdvS/fyj0kCAS9nVc0vYOVa70gJaM83eC4PVXhvL0X
                      5sq97fdfvY6JST3gZ5Y8ktNtPa7SYT0oxfW8sxSOPdlmzD3J4sA97XO8Pehbjbz+nV491tBcPbkV
                      qj0iKgk9bQxfvcDzdLvOGaW9sLphvdC7c7xgza47NMWBvGgvBDzzVLm99Hm4PKAxrLuDolC9zYoc
                      vVF6yD3+QXs9kXmMPT0Du70IBsu88kIwPZgoUzzhYLc9HUOePTFxtj24L5M8wCBfu5uglD2Yhhi8
                      KG2CPFWMoL2NVXC97bWYPbLplr29c7Y90LgMPFCewb0A40E7yVO5PYCU87qb2sO9gjBFPZIZJT3r
                      iY09qntpPcRAzTxzrpE9VASsvAC6mDpdfmy9sPHCvQLnpr2zUVG94bWwPbgy3bx9OEa9yHbcvJse
                      yL3VsYC9ihdkPekksz3jOZS92i5mvTBGZb1gMw876C1qPETv/zwoU8y8glIhPVCXdDzzPWK99MTT
                      PGunkz3tVMk9Z3W1PSzewbzYWL+9pzu9PaTT9DywTza8qIuFPAWNk70594Q9EHVLPKgTrTxlVq09
                      wsMfPWHkyj0rKKq9thYIPTsBj71blI69kvpfPVB4cDyTnzu96NSQvGfEab0gy4y8sDpzvGNyyj1U
                      2bE8tmhFPcDOpLyoAt+8TKHrvKDgrDse5lQ9H0jDvbSD7DzTr8g9APcGu9LwAD1gY0k7sKKdu+CF
                      e72RHMg9QESgvcg2h7xUUNA81PzMPLdBN7258a89MD+ivTO5oT1D2xq9FB3MvCGujz3sXMA8gEE4
                      vKxKoTzNaLa9QGW9vKCkV7tVmpE9/bqpvfSLrTzg9MS74UiXPTcsUr0U+vW88nBRPXSTiDwapKa9
                      DJ7/PNnhkz3SOmA9mEaFPHfgyD1Ut6E88G5ZvAAA37cNZcK9S+mcPQUujz1wpH28wstJPVB6hDuY
                      JVG8kC2EvQVwxL2gXg67rNzJvAZNTz10/Ke8Es4hPYDCmDt1zIs9kKh3vAiyz7zKRxA9c5dMvQ2Q
                      I72wW6K9EKM2vChTUDxYlRI8YIK5vTT6xLzd7I69CqdkvViqGrz4hoS9ev+5vcSS6DyaDgi9hCL2
                      POooJL2Wy2M9XvwmPfoiST3Cory9vRZSve1ftT3WKQi9Prh4PTjB2bw3L1y9is85vTCWP70ckv08
                      m42dvZJ9KD2iiiA9smkgPfP/hT0i2hE91j4vPQl6gT3oi2W8CS/GPRCYVbzHAL69yt+nvcEFiD0+
                      jXw9WWiGPcLXmL2ovVw8nCrmPNQMpDysYb88ksxUPYARw72QPm693YJ1vb5cbj1NeGa98m5SPRNO
                      a70zkUi96iGZvQBU0bvAoj07uludvZtCxz3w2r+92rAdvUIpnr1a3Sm9UZ24PUCuKDsTvKa97oNp
                      PaWUoT2nzsE9g1OhvQBFtzv4I5e8puEUPYFopz0AoBq6JxXMPQoALj04W4I8euVSvUDTqzyDP2a9
                      aoJKPVdUWL0qcWI9DuQQPQDKjboUHb48zNT4vC1Phj2dDHq92UeUPXSLzbzXcky9FdyivTXogr1A
                      OwK9WEBsvHC/Xb3gOpu9kF4zPFA1drwa2Su9vZmtPUmUpD3GbHg9R3prvS0AZb3+qAE9NnSfvS8f
                      xD0qDG+9hoY6PalXiT1NtjO9KMaDvKkKgD0AFGM5Rxghvcxdgrz+9VY9pHiGvYzhvLwo3/680Fbw
                      u7DNtL3w+Hk8kL1XvU3Zpj1ozjK8c3eavTsByr2y3Ju9TNz3PNCnWDwd26Y9tzNcvd1ZbL0AWwi8
                      Nu98PbBSajwuSzA98tE5PbC/rLuQLEo8ZkIYvdJOOD1925K9jQ2EPVEDxT26JWM9dG63vIvOvD1z
                      s6E97Ne7vGJZSj2rN6m9qCo0PBH9iz19t3m9/QqVPbPdJb3sHKo8k3O+vc7nib0tKKY97JHEPIJA
                      k71db7a9XqskPQQbFr2afmC9V41evdjPxLzQAjm8z1OcPQBGUzvoKbq81Br7vLALiL354Zg9ExS6
                      PQrpfr0HvK29Y867PZdgJL0C5ZO9Tp9sPfMAuD2HW709Gk+hvVXvgT2Wbhm9YiIbPTRsiTw8Zt48
                      YSbIPTpbmr3yLxY9RtZcPXX8sr1lGMq90ACwu/qeSz01icy9gO7JvNSO5zzo68K8gOm+O2zOhjxT
                      iJW9Sl4oPXVQpT2NsXS9riCdvUMsdb34fJy8NWPKvSCDrjuJZMY9J2GlPQMRJb0gFpA86wXKPftx
                      oL1dYIG9CZezPaAZg7043q28q5KwPapqVj1b2oM9LJmcPJJSPz3QR8G7di4wPR0Tib39Mie96q1r
                      vWCTyzsnaLo90A2avYBql7po6g28kG1Wvbt5vT0DmR+9h9xavcUdiT1Dvpm9M/6PvVfbHr2NI2i9
                      ABrcOy5oOz3+2ys9awDMvXcCoj3GhJW9nqOGvYU7wb3U9bQ8bBT1vPEesz00aA29UtZhPbg7jjwo
                      Cl08HPTVPPBzarzsDvY80KQPPLRvwzxQQZ07xE3kPNmhkD3SCIu9t1KiPcEVij2QgRS91AXivMxo
                      vDyXzog9rA/yvP8usr2m0009nPiAvVQfyDxo+7C9iBKivS/Tt72gEDS7bpQhPRcsV71y4B49YB1k
                      vbgPmzw0Mpc8KtK+vflyuT2AXIk7+vN4PcldjD1gk129mACHvLMwSL0+cpm9DJONPLkxgT2A7fi6
                      AOT9vGzJwDyo/ne8aFpePDpuar0fnIg9gi/MvbKuYz3kbu48wGafveDL7DtMH948hCsHvdQvkbwy
                      jJ69RTGfPUlMgz2qiGc9lg8SvXhhmb0g4YS7zrxQPTDWSr1Kv3e9mId7PJrts70wElA8UAtZvcCS
                      ODxT1Z89JkOKvey2lzwSv1g96OMUPJ5FTD3alJq9Q4vDvce8Nr0oVXU8aDZwPAhT3rz9TTC9C8W7
                      PTyfC71qkkA9O9muPVLabD3CvCQ9gL1LvWMTlT34mcG8EFsovSByUr3AIh27ZQm1PQWpsj2o/I69
                      rxi9PUjPwb3WpzU9AHUePERA1zwgiqW9xXCavbekmz1oOHE8FVGCPZPokT0Fl5S91zC7PXurpT1d
                      71e9kHqwvWi2y72a01E9ErkrPbPwar1Kqx+9591RvcPJuL3+6U49oB6du7HAnT3AXAQ8w/gvvRPw
                      JL0y6E09TE7QvIyjqLyGxqG9v8ehPSWqlT1ix7i9dsklPbrGOL1AAFO8gHZvPCyvvbx6ZX290DAZ
                      vapygL2PWq49d6fDvYYXNz3tvay99uwFvSMMT71AeHs7pwaEPdTInDwgrsi7sImvO9McGr1gumg7
                      Nml7Pfm5oj0eygU9Pxq/va5ngb2QJhU8ICTqvHDgPDxAYiO95MXtPAAgfb3yBUY9Gg4fPTBlHDxS
                      VTA9GMDtvFLWBD11EMi9Q7C1vSAR/LuvkMc9mhg8vQoFM71S+3E9yt0gvW4ubD2APdy7uFf0vM1d
                      xL1iszk90LGqu8YIdT3yvDg9V/KbPUU5rb1AOUa768KTPQ3Omz2oF/i8ZWC8PbR7zjwuQAQ9kwRz
                      vYcfvb0zBUG9JkirvUhGwDygbZU7GuddPcDwGTuxaZY9uc+ePZZ1jL2ohr29DLTQvC4qAz3NJ569
                      QNW8OuDhcL3MK5M8C+OxveIcIT34GNy8JvtTPQBtUruhKcc9syy8PSgnlL1lCZA92CQlPEDbc73J
                      k4I9wHVRvT0Yuj0zSK09A/+KPQMruT1QsBU8o3SJPUr4MT3aqG+9g9KmvRL+eD1obkK8eCjQvMId
                      Bz0H6H+9AG6lu0CLoTxsloo80JruO/gP37z+Lk89ILz7O0AuDjtg2qU8A8UgvWqgd724K6q8oCF1
                      vSm/pT3E0BS90oGXvSzjsrwM9si8KU6bPdATnjv0pwu96j2svRfSgD3ibFY9KX3JPfFjwT1cBwu9
                      6a3HPZM5tb0A0BE84JnMO59mvb0ggo+7nktePUrkuL16prW9wCo3uxBtXL3axQu9gHbjOpoWpr2z
                      E569GntnPYPWqr1Agji75m9pPSnxiD0vqLW9gEyuuxK0aD3Ifq28VCqOvJvxrz09HZ89tlpiPXTk
                      iDyUXRO9TkJuPTRCpryLIp29GocjvfsEmL0ACB47jKa/vCOoWb3Zvqo9E8u7vT5Nhr2yY0I9LiYv
                      Pes7vb0dpIe9qIITPFjDkb3UpJC8AlRlPXrjx730TNQ8grnDvZDJGL1suri8vbt+vaMwoD24Pru9
                      Q0UivffIUb2BWKI9BCH5PLgkvL1XwXW9TZDLvUYYLj3shpG8sZ3LPQg/1bxCrWE9mIeYvDxT4zzC
                      Iru9w1mYveiPwjzXPqE9d/ExvcxjiTz0CIa8wLedPHR/xjyP6cE9Fu4zPSokBz2QMmu9sNNnvMUP
                      wL3TEma9AN8cuwC8iLqoKBI8O3mqPc85kj0CRnE9nb4qvUsbvT0aqDy9GNDdvL1vZr1KG5e9ETaR
                      PWDdML06vwK95rRgPbDPuDtaTgI9UFnXO8IjKz3xJps9wELcOuC8nr0UN8I8TCu1vGiqKzzwng88
                      Mr6qvfdZoj3gG8S9Xo8dPeQV7DyAvW28UCMtPNCkgb1xv5k9pzCuPWgudbxNca49Vz5DvQAT7bz2
                      PKu9HQtgvRJdfT16Ixs9gsdbPZi+qL2aNIq9fTfIve2WxT1RrYc93HL9PHNJR72qpMS9aDwGPOj9
                      wL2Qw7a9hGoHvTBbyjuMBJ880J9QvQBPmDsJzIo927asPWzW6bwmagw9GP7HPF+3tL0US+k8IKKC
                      vRvPvL2mu4S96BmjvUn7vT1gxJq710NcvV2ksb1f/Lc9n+ijPZIaRj3APK26szRJveMyjj0AnsI6
                      +hIbParbQr0wRl28VwsfvYIQPD0qB7y9OhV7PeCmurwuCE49u/GbvUiVsry4x7+8ekYvvTTN7zzV
                      7JY9FOO3vFJdu70spKM8UJ9ovBSd5Lw9h2e9WHixvfgIl7xoHso8CEudvOjpnTxT4q29CwSNPf3C
                      Tb2HEJA962CgPcP6d710Adc8gls1PWh3pryKDFS9/3OMPZXCjb2fl8c9qAE0PMB1Fbyo8Ya9FPej
                      vGjDJ7xJVro9KL9CPEhlyTzAzIQ6fVUyvb4sOz3Hmn69oI4NO8Dq1LqYpGW8V5SZPeJVXD1KJgs9
                      83CVvXSGq7y0qZM8CshzvZCkGjyARbU7eGaVvICOtjzULMQ8gI6QvRhoy70MsZO84FeVu1AKwDtp
                      sKI9MHGdO9Qf87ybhZO9aAoaPAUgqL0YUaO9N1m4PVjMZDyFZcc901dkvYVakj3W3xc942GGPfLw
                      yL3AT3E77uEtPfpykL2wy9g7vM/NPAYRgr001P+8y96hvUPYuz0fzro9ygsuPTBpqDu4v6O9lBf/
                      vMlnnT2aRYe9tsgFve6PjL2jKpi9h3wtvbpWTD1yeCY9so5HPQA2YjtQm1C9sI3TO0apFz26tFw9
                      KH8EvIONrz3A57a8cqdnPf8SoD0aTAw9XEMSvTovPb3xRZw9kgOevdVeqz1tyEC9MDwZvACb6jkA
                      8a29lJ64vLeTuz0S2Ac9pCrgPJD2Yr1Advi8Qjw/PXTnjTzz4cU9qPm4PA4jIT1dj6k94SqnPZRJ
                      Eb1S0Bg90OObO/sUvj0a0IS9KjVxPVHVwj3AuXY7AHpMvfNrdr2+7B49IIupvVjwh7xQXPC7OPqX
                      vAH4gj0JK6g9ZRXGPdqoIT1oGqm9Tc9XvZHyhz2bK6i9dMvtvCN7bb20lJK8sIbEu3ALbr0Dqq+9
                      GNrovJ10rr2GGQW9w32svS5BTT3zEqu9sIbEu7kllT0s1v+83oRHPTtepD3I/JE8igeXvd+YyD34
                      Kq29A0YlvTpnMr31r5M9yyKqPZQ8vrxy/Jm9QPd2O09Avr24VKY8gFnMulBEf73wvy+9MF5yvf9B
                      pT3wbEG8J9BnvRorBr0aNTw9Q8F8vcL/sL1AoD69TLLLPFRoizyY6II8oCPaO5Fyyz0X/Hu9S06v
                      PT1fSr3DoLY9gPBUPJmvgj0gSQG9sNP8O4AKkbw/K7M95BPrPCaDez1iaSE9abPIPc12gL0ZMZk9
                      UPGyvfXyiz0mlDE9nJCMvdZUUz3aCw89FciovehqAzyA2Ma74PGXu4MFXr2MYZC8VJr9vBkHlD1A
                      jMi8sHEyPKm3vT3gWMU8IGG1vOqHsL1Jb4M9wtOpvU3hpj1wBgy8btdvPdkHyj1FkKi9sxaNPb9l
                      yz1KBZ69ALqfOigVE7ywFQm9AI9XPHP4Wb18poC92BYEPFY1ob2wSE+91BmBvIqhVr20CfO8QKCW
                      vEitk72MX8Q89F4OveB7j7018pI9uDOFPFLCqr0G4wY92GsUPNYdib2ddE69wpATPd39Ob1GKyA9
                      ASuWPbrgLr2hQLY9AENcOuHMgD3Apoa9dhaPvcfGw733hr29AMRju4BR57xASaK935uuPQ2DlL1S
                      SAg95dy2PWW2uj2tYyG9dH7kPAAAETrQr3m8+Ge/PPZ8SD0nkXm9wPYPu4DWhbueChM9R9KkPVik
                      erwyWsC924qFPWg+tDzYo8286b7EPV4beT0Qc769iB6cvJOMjb2AFxe8qsasvazX/zz46ci9HE/1
                      PJiRtzyS3kc93b+PPRDlPLyIoMC9YGQOO5icXjw77oA92wabvXeTM72geeo7ThiJvfFYiT1uPAE9
                      epZzPVgRgr0hZ7U96pR7PaBelbw2DSc9aBtKvABNe7ryCXE9b4PLPehJJjyis0g9AKdRPBhilLxl
                      y709jGazvNpEGT1T+Gu9YVvDPUb1Aj0TOju9wDokvU3suj0Hz3e97T9evRCLdjzTN0S9Ak6mvQy8
                      B72ypzQ912fFPdDeaTxm+Sw9bZCRvXfnWr2wSDy9Ha06vZgTGLzHiag9aHsGPGGZij1Q5wq9tBCK
                      vYhbyr0yLAo9T0+sPZ3JQ70hv4k9IDwIvVCzZL2qzGQ9aBSJvKKJQj1NU5C92fKwPVvXgj0Whns9
                      y+afvQQTir1gmve7JaylPbARvDv4vo+9uryivcoukb299l69ISyhPU8ikz2SNGk98NEDvQwBsTxY
                      rWu87IwDvYQd7Tz107Q9JZ2yPTITQz1Yuwu8tvuUvQzwxTwD72299rEfPYgMq70IbPy8oqxJPdv8
                      rb1cd9w8RWOJvU1JzL39Ape9LsY9PTR09jzgkVi9+5OIPVBNb7yddr49UNaBvd87uD2YSlG8lwCS
                      PYK6HD0S2wY9+CzlvHhp1rzJ94Y91A0JvYOWSL34Dq88gLrgO2i3ILyglM+8ND3BvB5PVD1ebkY9
                      5voOPdxX0Dzosl28PzmMPel0tT3ARgI8VbOUvWjMsbw+JJ+9iHy9vCChxjw/65M9+htTvXT94DzG
                      jQU9OfLAPd0Dg70lba89dM3svInqmT2SKQk9afyQPXXFhT0KPpy9ZsYLvX3LL73z7rE911DMPfEh
                      vz19Sq0904hWvbg+q72xYco9UF6Wu1qVKD3gQiC9ShVqPVCLIbw00gK9gMSpu4IEYj0AwwO7jL6C
                      vRUJxb04RKm9bACfPNDZyLvXpZ09UY6iPW97wT3cYf88gHpWPOujvT3i8yk9CD2ZvMJ/aT146JI8
                      OqKhvW3Vnz3ATEQ86sQgvcKmQT2oJse82O6gPJXVqT2y5ks9Vrimvf61DD2CzkY9kD8tPM4CRT12
                      FH89OtvHvRDUMb0tHkC9KkdrPUDgR73dAcc912J+vXGFnz1It4e8a0amPTd1bb2Ac907CsoMvXYg
                      FT2Hfcc9Lm2hvcC1OLz0Cry8+Y20PZxx/jzY7J69MvyMvcCdhzxZzrg9ms4EPRM6ij1QMOy7/Qs0
                      veq4AT2hjMg9wrzJvSLTNj2w34Y72EN2vJc1Y73SZgY9UBsJvFgbdbxCbZK9KVyyPVRnzDwaYig9
                      Q1srvYAkyryHt3i9kFcXvSXWh72Zc4098s+EvUU/wD3YduC84EmvuyCW1Lz13L29kLUVPFwkCL3g
                      8nm9kikHPcY0Ar3A+FS97g0CPXBRZbwYnA+8lYvFPfmxtz1jrmu9SXijPcAyKbz9O449lHnKPIFY
                      pj0FJrA9etJmvS44Az0c2Yq9ppoePZSdjrxaMC69E2i+vY10lT15DKE9yO7TvJ1frL3PHcW94puX
                      vQhVz7xSspy9t+zLvcmJxj0wCGe88dLJPRjkbjyRq4I99G0KvTKgAT1AeSO8UBijvYCsoTzRc8k9
                      3cGVvS9Eqj1bH8W96Ht1PKLqxL1oJoq92AmWveMGK70/cMA9RrChvSH7rD3aWnk9E5czvS3gir0h
                      A789Yhh1PZkAhT3A+zi7GZ7EPcMgR71TOYY9fbe+vZhcnL0eRVI95/RLvUOuIL1A0G08J55CvTC6
                      qL2QZL69o2e0vWKoYj3YRFY8NY6LPZr3Kr2QBgO88RexPUcRM73YYoS9QMhLvOICWz0r5r+9B+qp
                      PVFitz2kldk8PJGGvUU2jr0zvaO9FSOWvfrvVj0nYqc9Hm94PQWNt70tryK9sNR+PFv1sj1ozq29
                      h+o7vdozGr23FFW9lgR3Pa77qL0G+Ss9cBlrvID8lr2yzgU9zBHOPIdey73U2gu9UIZnPOD7Ab2J
                      Gcg9ixbFvebAQD3iHVk9tCKQvGkvqj2SpFA9zmBKPQl8wz1SzXI9o0UsvW/Nnz3t6Mk9sOd2vNmH
                      pT1LYqM9jGvEvDBWUb1YTqy9WlCFvZB5Fb0waUy88K9EPLo2Bj2QhmQ80Paqu1D2fL1KQym9F5XI
                      vQLyTD2qWrS9dPaAvSyusryg27c8OisnvUo7sb3Qbg88oqMGPcPbaL1w0DW8cFQ2PAhqrbxmh5C9
                      796nPVUDpb3y/xI9eAO/vAIZYj2nqEW9zM+rvPKSbz1sA8A8wotaPW5VPT3DamC9LHfAPICH9rtY
                      nEI8ETK2PYAWEbyAzAG85YW9PTeGvj2GYU49iuhbvaC/QztgwOu73VkuvdMKsb3BSqw9qOouvNQX
                      ozyuYJa9h7W5vXoTpb00NtO8YJpXvaKdnr3+Egs9CA6pPJtipD3OTDA9YGSBPODkAb3676+91LK0
                      vJCuUDwRk8g9UPTCO1jbMLxSg2w9MkmMvaAhJb2AuoM6BTa2PX0uHr2CQTc9ECYXvUCBR7vmTZm9
                      QIM/vHSppDzgGJM8NPPDvNAzPjw1vsW9NuyovUyNs7yaRRM91B2fPM+Ot71QwF08xyS3PQfQUL1Q
                      1p67gFjZu3ipy7yEABm9ALF7vJQs17wTs5S9EsDIvYf4M73ANRC80QK8PQyf37xGAxg9t5G9PYBC
                      6bxnCow9iFH0vNf8wr2sSZs8ImooPViUxb3MNpk8NmIlPQjQorxYykU8R0JevRaopL22YoC9zu0G
                      PcOKRr2qP4G9WBzDvbB/hL0AqEy90xpQvY6Zbz09tBy9IP3Zuwvlnb1xkKY9yfSoPcLqub1A9a48
                      qsFuPSjpyjxgEA67CMSavGxovDwJNpc9ujlGvc+qhD1k2/M8wGW6vb7wDj04LaS9qb+EPYD3jzod
                      q0+9fwrKvZuckT38J/88y86lPXh4sb3xLJk9dPfCPACZorxYmJ28Hf+DvUCSMjvSyys9dLenPLqr
                      b73QnOO7DGiGPKhsXTwe4V89V3E4vcBbcDuwNy+8TrklPfmUjD1Sw2897eOjvfmAkT1BqZI9jQak
                      PVj9l70CyU09qlIrPQC+i7tCT769ALHPvBACKrxQWGm8Hgt0PSA947xr+6a92ANkvMwT8rzKu3a9
                      4mYmPZlryz0jG1e9ljMYPX27Zr0u9kc9GWvDPf3RuD2ATgC6Y3x3vQDSATv0T4G9+H/tvCkTvT3k
                      a9A8AOTlvPJTkb0SNic9k54wvQBg4Lf6EHm9sa3EPTgvk7zHFGO9k7WSvQDQwrd8Hv48IF6Su0DI
                      S7y85/k8J2DLvfZUET0wwRy9kF4nvWCWhL0IPpK8kgsGPejwtb3lXMi9eAWzvRd4xr30Dvm8dDnY
                      PIl2tT2AGj88feKavQMqiD0Na4k9zPWDvBKtLD24ObA8YKHMO1wkzjzsgZO8G4LCvbCLVLyhk8Y9
                      NuupvXklvj0rMcw93feOvbXznL1KuAm9/TWNvcO9sj3K6T49iqYrvWDYvDt08tm89lBvPSOplj2R
                      SoU9yyOwvUDUBjya3pC92o56vYt0ur2aBli9othZPdJ0HD2VZZw9HRy6vb5tKz1EweQ8YPmgvI6w
                      UT3VhqC9PaxrvV20TL0Mg668IBuQO6AgojwSSJO9CjJGPc+6vj3nh5c9YDCXPKUCuD31c7A95nhf
                      Pacqrb3RzKE92eWpPRCmqL2QRhe9UnQPPciKr73tNkq9UHm2O5kHiz1f4si9DdAgvZpEs73YUo68
                      C42pPc62pL1iNAY9cm9YPU8FqD25EaU9A1y3PRxYgb0iIzM94fySPQk0qz1Lu8e9qHMkvOobMz0A
                      OGg7mU6IPSWthD1KjQs9oGTROxaEcz2XRqk9o6dsvWnWkD0H5K69QJZvvdKOGD3Yn3s82AgFvFUB
                      v73SLz89zTSyPbpYMD3L2II9ZkE+PUKuNz3jnK+9T0azPW1Wqj0K3Ra9Er1TPf7eGj2gjwK7CniR
                      vfiQnjzb4Ys9KYerPcBger06E0s91LqpvEDeGruQ1wG8vjdgPYCkW7zz3r89IC6VO7SFh70UuJW8
                      APtlvFXZxL3Q5Ma9FfKUvbAsyjvSgDA9yPufvDNfoD3AWEc8WG7HvdA5q7ux45Q9SJS5PCeHyz2i
                      kwI95gVlPeQq/jwN9Tm92nUgvaoZbT1VNKi9wFoVPICUKbymtgu9bSmEvSnWkT3QwpY7zQFWvc3+
                      qL1oEK+8oAzWvJMloT3+ZKa9+UeVPRp6Tz2Vw8K9vYXBvcPPy72gfAS98++6vXdrSL2EJxi9jMjG
                      PPM6J70Mu8Y8lHf6vBhFDDyd8ss9TMy6vOg1xrx3qcc9zKmTvPLEtb3HnmS9Pp2OvVJRfz1Ng8K9
                      zFisvJ0YzD1g4WO7uE2KvXDeYr1tcbS9Dr8jPW6MUD0IdLm8ABAsOv6Djb0MHNi8ccC8PVj0I7xg
                      EFW79ILdPGcDNr2g4eK8wPobu7pkLr0AcSC6KJ9KPOAOyLxCGS09OmotvV8gtr1Tx609c2IevRG3
                      wD3AuGA8cTe4PfMfqb0owwG8CugrPYA8sjo8e+I8mOwQvGBDPjs6I1+9wBJmvdi3frxpBqM9KL6u
                      vbe2Pb1VSLW90MVSPJpHNr0QChs8sOJvvLeeL71SuDI9t2XJvfgsgjw6k6S93G4HvYJ7mL35dbc9
                      GJGRPLCTNDxgJou7lKmSvCsCrj2Jw4o9YHUZvbRwsTyan8G9YSOyPcBSmDyXnm+9LcKavfKFjL23
                      rh69JSy9vWBgebuwdoa9d+BLvXLbLT2gvf28yOObvfJIMj3Btpk9BQ2cPRCvCrz2HEU9voElPboc
                      Jj20G6u8zRBevcq7Fz2ms2E92GlbPCxyBL3fuIU91yN1vQAil71eEnU97IAVvUAyOzwPrMe9YIiN
                      vRLXOz2TvbG98+GNvS2qhz3t93e9wDQ1vZdfyL1z4Mi9m9y5PSkMrT3AvrQ80psTPfe3br3NXjS9
                      z5aIPTP9ZL2N7as9kiAFPViTyDwSToa90Gd4vXK3QD3QIsq97fVqvREnwT3gFmG9gPlZugnOpz0I
                      E5C8L8rGvZZdAL2AzvE6gtaYvUxekDxWeUY9PSnAPWPUkj2T1Jm9zQajPQIqDj2LXaA9upwwPWBg
                      CL0+0gw9OBvAvOBq+LxY7yq8wLcCO1kOnj33QsW9QQGBPVjQajzI66i8uvszPZn0lT0uAh09IOe1
                      vXscq71fo7m98sIoPardir24Z8G8xhw8PTmpyD2gVGK7h7gkveAWp73aKmw9m+O5PVNgkz0mQSs9
                      CDPtvBLSPz22vDk9jow9PS1/I70Df069eroIvaI2bT2+uUA9jBrzPEw6wLz4Y7k8Bw2mPRhavjzD
                      ZcC9AOy4vIYJGL1S2mk9g4t8vbgSu7zg7Ne7GD6svVFMlD0A24+9pFUYvah8jzz/N4w9NlhyPfJT
                      eT3IuLk8AFhROhoNd70tb8C9WsjAvULKGj06RQ29UACKu4I8ST1YB6S8sD6Yvfg7urxg+xq76+O/
                      PcIUw736mx69aaOEPefjSb2Kc2a9jvZLPQSR6Tziulo9GeDBPdqgZ72qLHS9up0cvUoMMz00Gfu8
                      +hwKPUARB71upCo9YqlUPYyutzysNI+8AP5iPJgEI7yyJFg9yoFwvTBH8Tvv04M9TukdPQxrxzx6
                      Aoy9KWK6PYfCpD0ydjw9cbCEPYPRJr3qjGO90BMZvACHfjyYTkg8DjgyPYepbL1yhiA9qBe9PBmu
                      hT2n0rU9153IvbAXWzxSRUw947WHPaXYnz0Kwz29YsZhPRbkgb0jF8I9moEwvdgNur0aKTc9kA8A
                      vailY7y69B+9cAIavar+Sj0tIK89cFNsvRVpo71DWyi9Lpc9PR7BSj2aYkQ9xdewPbDmibtA9dI6
                      dhiWvRPhpr0FF4a9YJQ6vUAzOrvJd8s9Gut4vb3Veb3MHaU8gBS4vb3Aij3QfaG7toWIvbBaHjx5
                      Rog9QBITPKV2pb3hJL09odCRPclVjz17YMW9J85ovUAUIDzD0sY96n12vTT3uLzIWJ29+WuUPfzF
                      3DxSZ4+9Ti2lvYgPs73Y0L28KDE7PPDBt710GtM8THmnPKC0xLs90DG9deyYPYr5er3SkA49gDd4
                      vTz04TzCyR492popvShjA7yx9rA9I9Y8vU2Njj0TGGy9QKvRvICg9rweZKO9IXGVPfoOKr1m7To9
                      qD1iPHD6yL0SCnI9KnE3veLZVT3lgKI92y66PVCAsrupRYg9ojlnPaIPg72Z9KU9ats6vepZNL0w
                      N7E7gLahvKCUmLxZF6A9fUC/vTNrOr0ZvbY90Y2TPRZUEr2i16y9YUunPeNRwT2FfY698Ed6PGzm
                      krwfqck9zBrjvCAn0zvhIp09R+IyvbEhjD0QAqC9DvmUvSd2Mb1QUVq8S9bAPbAVO7yIsay8r5HA
                      PSgZLjxge7+8S36QPRduvj16sQM9MbilPf3Ahj3hr7U9gGz0umzx/bwGamw9VFuwPLGHqT02KQE9
                      xj4vPSw5CL3HSzS9WGlBvMofv72hH789PeqxPSgtNrxIh6i8nyGKPU7Iej21Jo+9SjLBvVJXEj2U
                      Fsi8OkBuvdQtgb3j3Rm9GvY0vfJVXz1Evd48CMuLvSJNOj2ASza8lisXvSPgnr1+HFI9oGIrvZP0
                      hD2gfLg8MWSBPXJsFD05LMY91EW0PHASE7wABHe8kmhWPRNbnT0wrx48klnAvbiPizzPV4g9YH9F
                      O/yz9DytH2+92uFgPX7rOj1ok4S9OoBuvVfVvz1nilG9pcGeveg/YDw6DAw9c2CnPUPEUb1Oyn09
                      StV0PaUJwL2AIaY8SqY3vQLaQD3GHmU9KqNMPbA03Lu0Rq483eQ+vXMJlT0Ag7Y79tAQPZPamr1w
                      FjC9bqkDPd1+gj0VaMQ9ITKOPQmXlz23VDu9QEdIPDoAbb1iVTw9g+gnvUclv73HUmK9RyXMvXQt
                      4zwrXZe9igIDPUK+PT1y6T09YI4JO9Wopz0FuKE9Gop7vS0yLr2gmbI8CjClvZrLg73i5Us9flgD
                      PU8WyL1pKow91+eQPfJWRz3HKq89vS+jPbCHL72DgIo9H+67PQDGXDzwtFU8qrIRvUGrjz0ISLY8
                      MKrqO57UYj0AjkG76gQjvb2ptT2iQAY94KOsu0MXc72U+9C8UCJlvdxAib0KERM9C8mxvQLayb3n
                      ljm9WCA3vCyRjzynxqw9J2ZZvV16wr0oDpw8AK6UOrtlur31sLA99YK3PfecRL05dYg9FJ22PCjg
                      uDyGRIm9MK0mPEaYEz0La4k9BRO/vQjawzxlsZC9UIrWu71+zD2FGIu9/TKZPazJiryAUec6SpkN
                      PQVstD0gAI69VxeuvfDWI72kRw69qHzVvBmRij3dLZK9G0CVvV3mLr28SN08bPGUPOciQr0QB1u8
                      RrGXvXBGOrzBTLE9bXObvRYGhb0Chl49c7+vPfLLzL3egwg9iN25PNyB5TzA8zc7NnykvXWEjr3A
                      wxU7LpVePTbZOD0wcYa7kpQQPYngoz3gf5Y7KDtevC13vT0gCK07mBlwvFZ2Dz2sXNI8KMBRPAvT
                      oL1hX5Y9k6qJPa5UDz3YtmI8wEFpO2ZAFb0ETQi9tIzBPMCgFDtO/6C9SnW2vXceVL2i2gE9dx6K
                      PSgWxL0PSo09etZ0PYC/MbwG+Sc9DIaQPCPvnj36amM9bcktvXeaI73TMbS9ZqMJPcuZlz2A7mS6
                      EJV/vbzt7zz6HxA9wjMmPWKaGj0bFcC91pgBvdDLC7z/B4Q9bwSBPXf4fL2gnOc72IIWPOhgdbxK
                      n0o9rpoOPTDnILxsssA8cSelPRRrgbx7uau9CVmpPUkyjz3/T7W9zBrNvBhMJbyzoky9U903ve4x
                      Cj3fw8o90vVHPZQqjL26xG29KMSRPIBFzrwz3bu9AILKvJWusT1o5j+8MBwivWd4S700XwC9kKPF
                      vR3nq70w1xG8LvuSvX0ZU71FRZE9oq9UPV3sPr0Mpt28b+K3PdOwiz0mwws9beG9PbCk5DuwBLq9
                      8beWPbYMET3jDJC9yJOLPO0OsT0yJcu9x4aKPUoLa71vT8q93bzBvYTa3TzPZq09IpeYve9lkj2b
                      B7g9+0mUvcJZcT2k5BW9Cs1OvdUSsr1elg49wA7MukCwXTtQJhG85x57vR5HQj3jXoY9FydGvSNa
                      nj17Kbc9F72RPbu1zL0AF8W94ATXu6Ccl7yqklk9xtRMPWmTgT3gvZm9GI8lvA7Gor0IGJQ8tggJ
                      vaKCyr0gMsG8TAkRvawQz7zuGoi98gxkPQooZL3XLVi9BBERvejgbDyagyE9Yp69vcUmvb3CKxU9
                      Lrk2Pco+Ij22Foa9Ls8IPUoOWz3QNZA7lscQvYO6Lr1NjSG9tmR8PYDMoTqgwS69StOdvUAdRTtn
                      r069UVa+PUuXwL3aF3o9WZO9PZhOALxZ4Zg98nwzPaczRL04M7W8S5aRvURG0jyAUIe8QrxYPXe1
                      dr3S3RQ9oj2TvfqMqL3O/2U9Al46PaLeDz0wQig8S3urvVbaqL33H8O9wAoBPEbJVz3A1pq9inoP
                      vcnEsD1d9Yg9f4nIvZagHD2xjYY9oHyFvII9MT3NyqI9BamqPR38kj3iYZy9sPx0vcAxrbz6tFa9
                      HLQKvUiA7LzCZmM98N44vFqqVb0ymGs955hTvcGKqj1tfqA914xWvYDrPb243Y69yLD7vABw17xC
                      dK69MXyEPZDpWTxqvTk9Tk2FvV5HpL0vjKg9/UamPda0ob30eKq8S8OkvcGazD3HcLC9AKR1OrNG
                      oj2NBok9ipp9PSIBbT1FBLA98oRuPWalEz2hdLI95RTJvRwM7TxyI6W9EZi/PXwwhr1xnrI9wstC
                      PRByHrzGVns9UjAbPTRihDzGLFo9eFWRvPA1ADyjJSK9n8vKPQAc2btVlL89QpJSPZBAWbwy8I+9
                      oFXyu+D61LwPLJc9aKsEPF+Inz1Bcpg9gJMNverVc73wlVw85YeQPXga27xdI5u9JhxJPVJ4Zj1N
                      5nO988ItveXCub0hPMs9nhMBPQUHwL3yOoC9IsdMPSwnzrygEP47ZLmFvVANf72a9ri9pkMWPXSZ
                      lzznd8m9ZH7UPCLUND1A7V88V1ikPRBvObw3hF+9wkM+PYFHkT0ym0Y9CUazPaeZwD2hLoE9OAnJ
                      PBcyoT3AclU8vHX+PJHNqj0QbDk8TSs3vapjFr0mJiE98/2YvaZLWT0giYi990y0vUnPjT1S9BY9
                      KFLYvLBNLL2v6ba9qpo6vfIeob1/iMW9TQmnveAPhL34Psu9NI/zvGDRtjsk5fM8LTjAvZpRJj3i
                      Wio96t4HPcqxSj0kUfs8rZJavTMkhj1Ycp48qBm2PN/UkT2z7cO9N8q9vUBnxLr06Na88P4TPBKp
                      Mj0g2Zu9YMiBvRyIhb1x4YE9tErtvE2gt73WGmg9BYqyPfAwLr15aqQ9nyywPUvxsj0oqQ88bWqO
                      vSisGzyOa3I9IHDDu8oUL71gEQO9YVKvPcJffT1vjcY9gJWNOwCewTn0Ore8ygIvvRLncj2HV7o9
                      xp88PSSr5jw9sRq95behvQBS9LpVZaK9kDcBvBkQlT0AUS07AKLVuQflU72YBcg8dOGcPIdXsj3N
                      t5Q9A06kvfEInz1iw0k9N/G2PdqYfL0AmTo6TnciPSnPhj390269c4FovYpye71iOau90Q3APfsA
                      wT0wXlq9AI6DPBG5rD0toII9AHYlvQDYFju3di69w7S0PYZtTz1gvl+9ekzBvZOebL3D9l69wFzl
                      vDAaZTzKCo29AGkIPIDvVTxA4nE7rOjGPBpmlb1szt28ckkHPa7EgL0oIzg8h+ZivRZQaT1iJE89
                      Z8iqPSbdGz1egwQ9ULcSPOD7i7xgElu9ACWNuaqxer1vwME9QBDbvCqEW70jAqe9w3dXvbM2wj2z
                      0Zc94K3HvCoESz02KSk9lAnGvJOLT72s6Lq8gq+pvVNhiz2Yr5S9O1TKvUKFCD0EmtU8mA/UvN3u
                      J73RPIk9oCFKO3CeaTzMI7G8WKcxvEnqsj1/p7u9ytcMvd2KkT17vri9cMVfvapljb3dqK09BTqL
                      vdD5U7xPepE9lMqqPLZxor3aXiw9cCp1vRKtNz3QeDu8bFOyvHh/vbxjrF29cfOAPe0ckr0LzZM9
                      sH+luyGzvT2+fSY94OeuvPR9x7zoeaO9gpogPU7XiL1hQ5Y9LJ6LPCaqfj0AiFO7EfSDPQh6pb1g
                      psi7jLCVPOggm73atmC9AJ8WvSHhyz2agkg9DLiiPGIyLT2IjcM8kA1oPDBZmr3wSSK9Yg4uPREs
                      gT1zvUy9MH8zPN7fGT0bLII96V6BPbiztzyzj6a9A29svfyKGL0F3JW9cP9nPIm6uT0R8Lg9FYyl
                      vQBb2Tm6s3K9k41gvY1Xyr0WKk89ul8VPbU6q70zkY89kXiiPeRmzTyqiG89spIlPchSijzJErA9
                      FHEWvQqVO72ltJC9fGkUvRtLrz2WGz89WrnLvQXEqT1Fxqs9jGiTvEJNIj0aUli9/oBEPVjSWjxG
                      rF496LD8vEzPh7ygN7k7WcnCPdomLD19VKM9mI2ZPO3Lf72iAFM9pZGZvcKSEj3dXmS9WPf+vMBA
                      3DpQZ5G7swehvfohWz3oG2u8S5qaPWWQi70Ay6a9qklTvTIRCj0C5TY9iO6evGAhSztgFWW7d+c9
                      vTJsfj1gcLe8wDc7PFoceb1Slis9Yj9NPdq0LD0XNsc9dlYTPXB+Lb1G1Gk9eIG2PNC26LsW3A29
                      2hNavSpHkr0a8Jy9/ZZLvdrLY70jXI49wwKoPeJqED1QpNK7chR6PZ20kL2Ku2K9GaadPVpEOT3P
                      1LA9yKy4vLgMgb2Q41o846vAPffbvz242oq8QBVjPOM9e73sH7A8chZsPXyZzjztO2K9UN73O76k
                      Zj0Aiu27MXO5PQAsETsShGg9GoxpPYGcmz0U/Ri9MmtQPbpNeD1m+Iq9UD3Ku0Qq1DxQm3E8Ie2V
                      PQyfvDxgV1C91AuLPEhYvTxy2YG90iYvPfoXeb34VYI8wthOPX3Ch71w6DC8rt2RvXpnXL0O9zY9
                      WlojPRNYH71A4Mc88spOPWrvT72MguU8awGSPRQpyTzKsRO9KnAAPQo0Xz3FLKY9nY6pPQ08O73y
                      bVI9ui0zvaxZjrxxqaE9HR2qPV2pTb37aIU9hxavvbMvaL00a8C8eQC4PROblz0YXjs8UAapO9zC
                      0Txlf8S93ZaPPQDAbTq5u8w9eBLEvIBhRTw1/7699m1WPaNZyb0dhrE9uPCovMeDsj0DBKU9rexh
                      vUhVi70i2AY97rxsPYQYhL3A7Ua97t1WPV+HuT1WD5S9vRnEvV2AcL2IdL88KLmCvXiTqzwleac9
                      AYnBPegyj708yts8KM47vLU8iD1a6Ce9Ss8avUNfgz2tBMw94kJfPT40ET07Hsq9JoeJvRk/gj0a
                      h3Y9OT+8PTuDu73r/oo9WIB0PJp9QL0Sng89EOWkvVVNq739j6q9CKjMvS0of72qCAe9yGGWPIc0
                      mj1MVee8QuwVPUAmVjsvC7k94f6CPcA+r7ogdiO9FOfFvFHAhD0eyFs9gFExOrvoqr3ek0Q9wMZn
                      uyKAx71AW2y93yOsPeqyQj0XnbA9GB+RvQrchr0TJD69gFn5uoGXuD0hCMs9N+F2vaBRJL1ANwU7
                      JsB6PawWojygUY+7odeIPT1CQ733Yb+9MvxMPQfASL3UPg+9cJRvvZVEtT2a21y9dJDiPPMxhz2j
                      zia97eqvPURJ5Dx06oe9Zv6lvYJgvr0SfiM9DS1ZvSBsYL3LGLQ9IOvOvJ7EWj1o0Is8AJSXOvA+
                      Fzw2UKK9sLGWvcdsrz3zobM9V8SnPWzrybxEywe9ugsYPbC8aLwLC7U9TPTKvBhnzLygfWC7AA7r
                      uhbfEL0VkKy9XbE2veZ5UD1Qa/A7AFxiutAcX7w+xUI911itvanzoj16v2o95sKRvVKWFT26mSQ9
                      gyGaPQyp9by0X8A8aG5KPLYEOz2kzOs8e+u9veqoeD0UzcY8OamQPaqDQb0yFnI9QMKGPChP1rxg
                      x0e9SBWPvKjQm70Utfm8gL3/um5GCT1BXpk99WiZvRINn716iEU90V2EPYBZiLyXP0W9TVV3ve4M
                      AT3G9XE9Xi4fPTCmRrxA+wC8NEyqPDUln720EvK8Y/WvPdG8yT0gyPS8Xtd8PUlTvj3arRa9IIDL
                      vCAumzztbpY9kdyDPU/RhD0Av2q72B6uvS/pqT1UDIK9jYbAPSMFHb0ku4i9fWZMvYjonr0Y1ro8
                      +NzLvKhZSzxN3Ik9qRHLPZC1mL3Uw/08sCNAvXpMdD04KIG9mhNHPV2tHL2A2by9fq+rvdSawrzg
                      nie9gfShPaDPFDsypRc9gG0pvAx49jxYJjo80GUNvJe5vL08GhG9kkp4PV66Hj1ytVg9IOiXvNx7
                      Dr3WtGA9sDiCuzDWvbsg3dO88r0OPa+cnD3AqQu7W/OgvV8Mr73H/iG9aFwJvAB/g7xXQ4Y9YOuS
                      u/bym71iDG894D3gvC0vjr2Ajim950d9vRhdcbyq0CU9RhAePT6kUj1vRcq94eq2PQ8NjD2aCYq9
                      QL3RuvArub23TJ09h99qvTplG70SGT89336uPehmAjzoTHG8++ypPZr0PT2ghm+9+kYePeuSsj0N
                      tEi9dzqjPbLwvb1SKXI9+pF1vcw2mjzU9oG9jjcTPfvAvb20t4q8MOLDvUzki7251449sJi9u8Aw
                      D7s5C7Y9ZwHFPQOxUr3G5Yy99UCTvXJeor0LIpa9q1eZvR3Ker0+HkI9G4eYPV8Zxr0v6rs9udPJ
                      PSAXubwJn8I9oNRavWmmoD3+Whw9V9JxvV0Tsb32phc9wKjSOmoaST1QMUu8w/uGPZOPOb1yizg9
                      EpUvPdm6jz0gcb+8LKiaPJ9dhT16DXE9gMzfukBXzryUROW8RP0RvXfpYL0iBCU9b8+OPY2ln73o
                      53u8ZaW3vTAHYDymBVQ9sGrJu8uxmr0qB6e9/moXPbAyhr1qKw89OJHbvBRK3rzV9bk98KQyvFf7
                      qT1Q4Jm7XrFJPd2DvT3el3Q96J3bvIDARr0jily9ZlRBPWgoKbyBqcc96i6lveAnlzz5U4k9ERuP
                      PYCpZDxAr2Q8D6SFPdBxSDxpkY49UMYovFUmxT2G5pu9gL4OPJt5rz3YNlI8/U+EPWAyLDsaCrq9
                      qHwYPLBvhTsxU5g9VxNMvZopLT3Coys9yfahPUz12bx/d7o92K5/vLmwgD3zHGy9JqlbPbbGiL0o
                      Rry87T2MvcxGFb1rAcG9nZGrPc0ULr2K5VY9gF1DOnm5wT1oNr69Hmx3PTGusz1gKCm99Oi+vBL/
                      ZD2iWxU9yvgqveamAz3kPM48HYA3vdnYrz1gwE69oGq2O/0ycr2uEwY9IMDPO+j4Jbwg9Xy95/lO
                      vfT59jxGfhm9hmZsPQ8YgT0w4M67VHeZvJkbpT3oHIK8T5eJPdD5B7yPbJM9IBDCu5aSQD2zJ8g9
                      4EoZvQIBVj2H0r29SzuxveC9tzwfl6c9z6qtPQWNxj30v708BdGFPUsWsj3gpaA8U/bFPVc+ar1X
                      8Lw9dCPTPNiVrr2AKjM6QO1KO8Cmf709yUy9/ugvPcCfh71xua49ACNqO4CcBL3QLay7RD77PI7/
                      nL35pZw9gbmEPZTzBr1vv6k94gJPPfTRt7zYdfS8GCEMPO4JUj1a9nk9gsQ7PYLOMz2jiCu9J3qw
                      vTAbwrtEz+Y8atNOPRlAxD1deVO9qLwDPNiqMTw6cR096feBPQvKwL04uMg8I4u/PcD7ETvTqzS9
                      qOqfPC6JJT2CgzY9AAn0O7GBwD0Qz1W898bHPVjLeTyYp8U8lh0nPWAltzxMuIe8yLmWvXMjU71S
                      Z4i9qwG2PQDKabxyHWA97H+bvKBnszxwo0k86LrGPJKsaT3SnjA9mtAEPcwPsrzYBac8mdisPech
                      I73QGPq7cKBQvMzKqzxCiL+9cgS0vdhEgTzY1YC80O91PILyVz1M2Yq9a7fCvXaCWz0kl/o8uTSJ
                      PbPiwr0H6LS9KOC9veAljLuUnNo8MIshvGDlibths7o9SqRlvWB0CrtQ5Ma9PiQ8PYAmjLxtYHy9
                      FZ6zvWBPnjtZGaQ9p1jHvWNdwT13X5A9QA5fvYjHqTze7Tw9mM9ZPEAXKzxAGh294m19PQAqgLrA
                      iFe86p03PWkLnj0eopK9gjEvPV5ehr2dCcK9ABrLOeB7s7162La9CretvQkxgT0j6ck9wIs0OzdR
                      pz3giH298DLLveXYxL3YY76943ahvaqqBr1YUCE8d1fGPelXgj36a6297/aJPQflRb2aj7i90Fol
                      vWmoxD1IGZe9WTGZPTkYrj3a+JK9sVKePSq7eD2jk649rYUovYxXvDyQBXI8WOU1PNBoKr0jYGa9
                      2E2qPDHQnD3EldE8AoN9PUp3lr3XmyC9sKEgvMBQC7sdnVu9a3awPVJ6xb0Uy4C8c4XLPZkFgT0x
                      vbs9bjBbPYUxsT3nHYw92JdYvHSTvrz1i8a9oSC3Pf3wRL3hw549QphrPQy447yt+sK96h67vUF4
                      jT3IaKG8cfSoPXMntb1w9mu9kOrAvaKRfz3TATm9KtN2vXNAcr1m95W9YNcKvb79Xz1gvkW9UoAk
                      PdOyJr2/Mao92ogyvcL4Rz3QQou9qCgdPKCGtrzDj5w9zkWXvUDoab1AY227YOo1u3vSsr3V/sE9
                      I4tQvRG8lj1K90i9ru2NvYxeFr24C4S8orMKPRjiuLxFBLW9cfWWPQACojkH6yy9gPnRO9GBsD0C
                      Oau9hJTdPIJvGT3APL29nXpCve1Fvb3cXRG9bYijPdBwCzzdsci9GNqmPKgNVDz+NAg9K0q0vWd+
                      bb0KCbm9umB/PRgfrLyazFU97E2FvFauOT119cm9y2mmvTHhvT2Avi86FaOTPZgu7rzQ5Ni7jTO0
                      Paiq17wM6Iy8K8+tPQD1S71o0xy8ONmVvD0Qw70i4iU9ALWdPNpuUT1J0aU9AEs+usaIQD1vH5w9
                      8AcxPKwXwTwqN5e9iJepve0OlL04lIu8BcCBPWDzh7vI0ai9AGDpuHYbMj1rupO9Z5BgvWfClD3S
                      kx09ebiVPWZClr3Ac1U74B2oOzAoSjwae8m9aLSRPAyKyLzO3wI9QvOFvQ3ldL2y6Ds91+LAPWqp
                      jb1Ex9I8Ke2fPU1BsD3Ocnc98P2Xvc53Yz10VJg8Xd2FPeGgxD1FRpE9KFO7vBIpfz36G7i9ZkEE
                      vVjRYTwZl4k951JhvUPtqj1aMLy9IQmgPRgSu73da7C9hf3GPWB/Gjvjl7e9gcDBPZv0r73Iu5s8
                      gF/1O1XDvr30G7Q8MBsAvVTQuDzji8k92DivvNA5Jb3ovaA8Tt2avbVnk70V2K29VZG2PTe7ar34
                      gIE8UA2MvQIKFT0zuhm9aL/nvNbYXz2ANbM8awmzPUJPAj1yvTw9Wgp2vZjgrjxQkUS8FG/DvAk5
                      rz10P8c8jvCBvTUesD3F/709EM9NPEx+tzxl27o95hMlPSBWkTtkuOU8BaeAPWYJFD1uIFk9NO/J
                      PACaw7lnWJQ9fUkxvTPBMr1sn4u8BIaAvRaMeT1pK5Q9NdiMvcLtMz2iVhM9aei7PXFbmT3Qx1a8
                      4upBPQ1lKr2JMKg9mglVPXc3tL30aPu8cROBPbBYe7zQbFu8QvJqPZ2foD2Mbos8VSCRPVxxEb0o
                      pYm9Lqp/PUYJLD3aUwS9ICeIu2BgKjv6PXK9GNmSPCdrSr2w0gC8R/x8veQg4zyZOZs9L+qKPRMo
                      Sr29FTC9D1mbPcBZEjwOUY69sRiSPclboT1WYKW9YzlFvdjKkr3H2ak9ITqYPRc7bL0KH0u9gvFw
                      PUJVpr1oaA683P3ePD4xbz180Po8OWesPQ5QET25obA965OJPdDtwTsY5xK8EL6svUO3gz10Pai8
                      gMkpvax4xzzxSow94v+fvS1KPr23F2+9NcKsPYdmqT2YzDy8xv9nPeBCS739qXe98zZ8vaNaKr2s
                      sf68DbF1veHBtT1aA0K9EFNDPEyV7jy+Mzc92xDIPf/fsT2gZ+u8JixNPQiVxL0iNAE9ShIJPYzv
                      0zx+AaK9wBsJOyAqi7xng8I9f0SUPWyR37wAA3o7Cjp/PXN3yT37zLA90/hovSCt2rsWWBe9fiKq
                      vRTkwLzANW67t6lPvfkvkT2Ype28ACrIO21NzD0LKMq9QI9iO3wn5DxA0wC90KsNvFhduzzB6oU9
                      HjqBveL1bD0jUcA9KHKbvXPbYb0ou8Q8JVS3PbTM9jzdPIs925yNPWC4pDzytnY9TgOFvdjNxrzI
                      S8E8odiRPW4FZj3BUaY9ciJGPTImEj2AyZK9laOVvZIaaz1yz0o9FG+GvECaYbyTEzG9Q1W4vTr3
                      GD2j1G69503HPWq1Qj10U7I8gLr6vNA+nr1JG5Y9tMClvDJjTD0aLHy9dEPgvPmIjj1KEhs9YFcJ
                      O/1esL1SXXk9Q7HIPTrCO72/k629Wj+gvR1QyD2AbiW6TjduPcrnQr2Mvg29yXCyPaiAmbx2fjU9
                      xEYJvTAGELysC4A8ASfDPZi1wryLuY89DSKYPV25c72ddD69t2q8vYBs9rt2jEo9tLWDPAAcBzsy
                      BWE9KB1+vEgcgrx4T6088CAVPE5FKz0ZLbQ9sj5KPcM8Ub1Ko0y9BwmcPSAy1Tsa4xo9oL+tvDkV
                      kz1GzAq9M/gdvUdwIL2A0cs6FK6yPDqFSD0Am6a9CaqlPYW9wj3CPIe9EpQnPWhxkDxO6XY98ogJ
                      PYqQKj3Qnq67klG/vXABOjwYwYK8AKL5uQK5cj2a6kA92Xq5PT5hJT2dIKm9+FiovWRn/DxwYZS9
                      SGi8vaCzFjugVpa8wOu0vIDASjzVcYI9DWNRvdLfkb0l1LQ9DeEbvQB7aDuaxzC9aFUPvAAZ6rwF
                      Tso93YbJvXf1tj3aayW9jMyvvIYtbT3LAqO9jJjJvLt4xz2Mdu48kvmMvfDzKTyYgYW9c8hvvcm4
                      yD2I2MC8YMwTu53hkr24saE8eFnmvDqQdb0QcEG9YG0fO4uFyb1Y9fe8yAuFvAcWiD19/pe90pdb
                      PSipqrx3r1W9t0vAPZiNXzwFP8M9a2uavU4bVT16sEC9oCbEPJg+Tjw1A7s9UHovvOKjej0gq7a9
                      rD7JvFmRwz1gWq27uTasPaAi5TvlloM9uvwfPc3qTr2SiKq9DUCIvSheXLxYu5E8YwBSvcsolr2g
                      Z3e7InpPPaeQyT0Hlrq9BvphPbiNtLwJbL89/YKxPa0shL0sNdI87bw5vcJerb1MY6Y8wG1yO3U7
                      ub00L/e8mjQvvbjjhrwYqyQ8YiURPX3FhT1xjZ89y7+nvVQd/bykCPc8zdc5vdzW7zw6gSs9l2O0
                      vey1yLygL047LeYwvYaCiL3gswi9ODzavG3HqD3NcCW9P03DPShxwzzovXK8tM78PKehsb1Yb4g8
                      5O7lPGOQr73IBcC80DOfO/5WFz2gs4c7os1APQ4/nr2gMPU7Y5ykvfTGlTww9oA7MqWMvSgVq709
                      aX29Z4JovRiefzwQMji9gTWOPYDnkbvqQCO9nanLvW5CeD2hvMQ9cnKtvYDHyzyV7II9InsMPfGc
                      sj2jSKk9JHAOvWAG7Lwt6K+9To98PaGNkj2GDZi93MQTvd1gyz0ve6k9blOXvXBAKL2RDJE9yeSC
                      PdLtUT1BTcc9Tr1OPcpEK71gPUY7wjOcvX7vaz0qWwk9zUmYPQuJsL2d0Hm9+We8PVp/rb2pI5g9
                      Zs4xPTlbgD1DzW29QgEpPWBEOLuggmu9wgAxPe5VFT2ed0M9isibvcDimDy6RRc9UbGvPQBM7Tve
                      qmY9QGNaOwCK17wR3cE9+gUVPaBFszwzwbG92qBovblekz0q8EO9bZhWvRY0RD3wCWm9OKG7PB/F
                      hT1iRkE9JmGPvWxnGb0AbDq7ylkIPYblDz3q+pe9F61EvRKfWj0Ah4e8t0t5vU+uur0WFF89tteT
                      vfqcIL1UM5M8IyLKPT++mz3Uyak8KA+fvM0Fmz2SGCU9adKKPV+TuL2qmlg9oOQ1vSQN1zy1HIA9
                      mGdMPCpSXD0icSY9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg1OTkwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MTg1OTkwNHEBYS5kAAAAAAAAAEhfx72n81K9jdWmPfzUCb1iync9PdeCvbXhrz0ajKS9
                      6ro8PdXVrj2vZ7S9UzSCPY2Gf71Q7TE8G6W7vdavCr32ZVo9VEzCvPQrwzzRNpc9o84ovVXywb0C
                      iDc9StloPUA+DrtqOxc9FXm+PY35R70kIBa9IZ24PeyUmzwHRDG9jjgWPSgeZLx528Y9a82mvXBn
                      B71U5IM8vYm3vbRD0bwIXoY88XGhPaA//7tQVAe8AOzVOJ4QAj2ljpG9bPjWPADUWrnnz7q9jK20
                      PMNwbL1DUSa9sDhXPKM5sj0l8ZQ9sFAnvWLZMz3Ansy9e5ehPeW/iD2tTp+92m1jPeisaryR+o49
                      m26dPbDk6DsoGT68UNX5u/Tv+LwQATc8A4hPveCYqzsKwyu9WGKovIpvqL3qB3I9WvYzPSF3uz3g
                      bY084DqBu4hTh72oHBy8UmkMPcD3JDwGvSs96hsZPYA64rtz58W93aIyvY7CBD3gxte8sCtHvDKb
                      KT35u589ijtcPW/gxb3Qie+7WvsLPfbIcD0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg1OTk4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MTg1OTk4NHEBYS5kAAAAAAAAAOdSYL3nsWO9YOqaPAAYk7qQEGi8UJ1gvDP/jb0w0Cu8
                      PCzjPAGsyz2UAN88QGVHO0olPj1QKuW74obGvcZ9Pz2GMxQ9VKMGvUdppz2t8bM9yYS8PTjJqTxN
                      3pC9gNzhOgHznT06EGA9KmGYvTcyij2D5rC9CeSkPcUHpL1NQYe9bPOcvHCdETxgOvs78vJAPR1L
                      xL0AbS08yH2tvMTzBL1KGHa9YPw9vUDMaTwDsF69hEPZPKCo+rzgMca8NaWjPbCX87vwXHi9hrqs
                      vakexj0A9r062nxrvSzSuryA0d+6+OWyPJuknT1WXlY9yh4Hvb8eij24HYc8D06JPaOvqD3thJy9
                      wIxlvL7oaD3gzru7gKkkuibtIT1VOYu9OGHNvIvKoT2Aj7k7+lHEvXp+eL1mZh49u6yDPTDbT73E
                      2vk896p5vfpTQ70YwC+8bIfLvFXvmL0TVYM9kyvCvek9hD0eJXI97XDKvYbddT3HaaI9jDjdvKET
                      lj03pYk9mqw+PUUsgT2TU5o9qg8ovRJOWz0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MTg2MDA2NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MTg2MDA2NHEBYS4BAAAAAAAAACgUur0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        fL8jPEHPADwIIoQ8CCKEPOsa3juKxBc8Zc1jPGXNYzwPehU8mnIiPLWXfTy1l308D3oVPJpyIjy1
        l308tZd9PGkAUjz8DD48stWZPLLVmTzpGQE8vKBAPC0RYTwtEWE8yZEbPHwPWTw65o48OuaOPMmR
        Gzx8D1k8OuaOPDrmjjzDsTg8YwU0PLIBhzyyAYc8oGTVO4HiNjwxe3c8MXt3PI2DJjxLBk48TO6+
        PEzuvjyNgyY8SwZOPEzuvjxM7r48w7E4PGMFNDyyAYc8sgGHPKBk1TuB4jY8MXt3PDF7dzyNgyY8
        SwZOPEzuvjxM7r48jYMmPEsGTjxM7r48TO6+PPpW/jreqSE78pidOvKYnTpbgzs7XDUJO9PStjrT
        0rY6tU8LOxUwADv+OqQ6/jqkOrVPCzsVMAA7/jqkOv46pDoNUsY6uCPbOmRdhzpkXYc6YkwhOyo1
        2DqeC7k6ngu5OvzaBTv93r86QrmROkK5kTr82gU7/d6/OkK5kTpCuZE6rH7hOkFZ5zouPpo6Lj6a
        OiorQzvdueM6OEmoOjhJqDp1Hfo6GCbKOh4hWjoeIVo6dR36OhgmyjoeIVo6HiFaOqx+4TpBWec6
        Lj6aOi4+mjoqK0M73bnjOjhJqDo4Sag6dR36OhgmyjoeIVo6HiFaOnUd+joYJso6HiFaOh4hWjo=
