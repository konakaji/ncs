N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0OTEzNnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjY4NDkxMzZxAWEuhAMAAAAAAAA4uTs9+1qFvoxD0L2GWsu9AArRvFeWir4g4pS+kmMi
                      PlDBxL3pZ6Y+35mavnMSp77I9Sq9uNBKvlpPGD6gEgg+U2l4voDc+7zgKk6+JkkgPrw7kr6iNVw+
                      e0qnvmTtxD0Ep7s9nv1cvqtWXr6W/2o+TcKbPopcQz4Aaog9qiybvrh4BL0yO5S+P0eKPkAUkjz6
                      E4m+OVOZPjYEQb6TZZO+vqpPvirXpL7g8ZQ9YB4+PN4IQj7xo48+snEnPm5GZr7gWxq+wPl1PQIe
                      Tj44hiU+YOAovlD69LwAETo9AKSAvv6zer4Q6cm9W56avqhYkr7yZ4e+RgdXPr6yXb7bEFq+Rr/E
                      vQCko7ogNHu+m+aMvgA3mzreo1y+sEb4vRp2SD7rmjG+0Bpsvsx48j1KsBU+wTuXPgAc57u4ywk+
                      i6Bkvuqjn77oACU9Figgvo5yj77BjYg+4KYDPWjjZL3+xUy+otctPqArUL1CwH0+2cmKPvI5bT6o
                      DR49QFrCvHd2oz5ETqM9QgwfPsQMjz1GNfy96OdbvdBQsD1QZ4K+QJHPuyA1aT1QCJ+8DDq7veCI
                      DL1mdDa+gUOoPkDm/jzTDaS+tYyjPhjLEb4WL+i9wCacvIGxgj5e62M+dhRsPqAPWryBgJ0+0GAn
                      vk4HcL4wl4Q8dzOOvuyEm77waJu8NrFYvr2Vmz6Mp909Hm6PvrKdWT5gtB09ANVjPVBxUr483o29
                      8OOQPRycj7366WA+BiejvprtTz6AVwW+ZFqmveK7Zz7qVns+2GoJvaT0iL6AlkS+VIiJvvCjhLz4
                      xhe9a1oFvhBxkD1d94A+rGjyvQJuHj6zygq+gBfJvYNqiT7LN0i+mOcpPXDvyzzg5k+9SLsRPaq+
                      cT7Y/3S+6qFzPlAP77z/05M+VuwBvpDOwT2Q3ww+kLLwPbJWYz46o0Q+JCXJPVYjKz4Atne6iKF0
                      PTBd471GsrS9so03PsihOL74WUA9bDWMPQuATb5G84y+tll2vvytnL5Jopc+0rpOPmLITj6AmLo9
                      EMjTPHgPJz1ADds82hksPsjVKT2gypK94ZiQPoD19DwTX5s+cDm/vG4JML4QEtw8gIOmvE+pnj6m
                      BSK+pfqRPp6YET5gQMa9WqpUPubKS74t/4s+qwlnvnu6nb4uIlk+4uOVvjKdAT4Y1iQ9AKfwPUWq
                      hj7AjZu+oNPfPUOZIr4Uaao9AJs4vE6acD7CYBk+wtgjPvcQg74/SaK+MsAQPtjQH70QQ9S8anYq
                      PnCpXL6ooic9AB0HvT5NSD5b5k2+eowKPoBrFz1sucA9sjorPkC3grzGbW6+0ECGPUyyr70CwYO+
                      odCkPtI+Rj5LkDq+BbKIPtBtlb3gJ2092Kk0vgifFb6Vj5g+IrpmPpZLgb5SqzQ+sNCtvUYmV74w
                      kta96HSCvnZc2b1AN3m9fL7kPRITLj62L9i9iFoGPpxflj13fok+4KSWvnpmXD7ml6q+ODoNvVT1
                      7j21UYU+NvxWvhRMor22oiQ+6MohvgxOor0Y2Q8+IJ1NvY0+iT7KBCc+tri9vcBuMb3ma7G9KZee
                      PmC6+z3oY52+AMdwvLb0fT4DxIm+COkrve/7oL6AbYG+2ud/PmYp6b2fHpE+ADi0uzpNj76rg6C+
                      QBjZPMRBlL3gQCQ9Un1rPnNYab40kK89iJVqverSXj5INVI95AXFPWLKZT5+Uoy+5h5cPgB9nb0q
                      YH8+bQCqPoxyiT0upi++2AEOvonqqT6JsZY+gPF8vbBc+DyIJgG9YAr/PVjsRT0rd2K+tusUvmAW
                      zj3qvYi+BJyjvcg/VL5CV2c+5jn7vR1ypD469FI+0f2IPkMbp74AA7g7+u9+PohtmL7y/Co+hkL9
                      vdZFvr1w1JS8KK1Hvpv4Bb4+djO+SohGPgoqg76Toj2+0k0iPgxk2T0zt5a+glh4PoZLZT4w6W++
                      oFBuvdxdmj2yxUU+QGkEPmDjeT2QaKe+HsgfPvA6orwAHqa9IMWOvc6Md77rT5S+35WjPviRUr0A
                      eRc9it+UvtCrq72wqpA9/ihtvoPRkb747C69ozonvkMfmb5cIIC+aDMwvjCDpr3mzWs+bVeOPoDZ
                      Wz2Azh6+dfKYPpvmO74oymg9fkiMvnLcOD5gEjE8cEnaPFuVUb68QtK90KSkvYyT1r3Av6w7nphY
                      viCkKj6l4Zc+sgg2PjZwfb6+lhc+6hEwPqDlZr7gqEi+mJBXvYJaFz7WkZe+g9sjvgD0g7p0IsY9
                      46aEPrzSh704iAg9QBqCPSi7X70H1oW+DPe0vdDJ47zbaYk+uMYWPWs2UL6YxZe+NGzcPbC44z00
                      8sQ9eIyBvlAp1LzG6Zu+8M6xvZYWLT4IFiy+MOL/vGa0fT7mqmw+pDWPvnl9mj7gWTA8fBzPPUke
                      oj6QUvg9LaKjPh6IHr5OBoK+4t5gPkKaST4cw+i95j0jvoOTXL7wiEm+HHK1vWBkd75i1Uk+bV6Y
                      PuT9gj2Qsfi99amIPsBrFz6wKPi9rsgEvt7Cob7aORU+RC2BPfyzoz12xVM+BvM6PqrubD4W6Eo+
                      QF1svmiuFL4YHz+9pkSrvY2Tkz6eTGS+kKdbvsA+87uY5wK+wOsRPoqSgb6CliY+uuykvuvWnj6g
                      BCi9eRydPuKlXj5gx1G8YKZwvGBEALzRRpU+YKQqvOBDjT0gBhO+ktRjPuybq71rYpS+20KcPkcL
                      oT5iIRg+FOTdPXP8lT7lPo0+gFUNuxBlYL4yySQ+b8maPgDOor7rL3m+2HdhPUY6Gb7Qx0K+Q+Wm
                      PuDI8T0Cw4C+IHp1vsC0er3AitS7SsmUvkBJhTusEMw9GCyAvvibib5SiIe+6G9zvUC/or2mwO+9
                      gNpYO3pKRD5o4zK9MiZZPsp1bT4OOHA+AFMwPQaJej4LgZM+XNLZPSYZz72sW+c95XCYPoYqQL66
                      s1A+KBkIPuT85D2uBRc+C9ypPjARLr6gyHo8pitYvgMZnD52QSo+YF5CvIqooL44+UC98NeAvrAW
                      Dz6agmM+TJKRvT2SlD7AfS++EAnovYBCZL3GvwG+QIBvvQg5R72YlSK+vGXlvRPToD4OWSW+WDV+
                      PaK+Mj7WtEW+NOuXvvU+iz6GOhU+fk0pPnRy6z3e3KG+eMRUPUKOGT6qJnY+DLzyPcB9/TzIxnI9
                      DEmUvawY7r3U9aS++xJJvnulXb7g4z69pmN4Psi3Uz2A9Dw9OEZ1Pdww0j2TdWy+/jojPpCEir1C
                      UJi+6IwqvYzFsD0E7pO9Zn13vrKWMT4PiqC+FvsrPrxW9D1vjaq+b7WnPh0Gjz5yzyg+j4OXPlam
                      ID4u/zk+e4EDvshaHb5TAYQ+VVGMPibPmb5Mp6I9o3ukvtJmRD5YbF6+IskHPthCG74A8ZK8g/Qh
                      vhYyMr7cgtE9+Ot3vexM2r2XU5E+Xd6MPjDklL68mv09QKPIvCvBoD7wZby8GFMUvfnegz5Qp6G+
                      QFjiPJAm6T1QuMW8wI03veATBD2ABlM9ViSBvoPvjb4XO4e+JucyvgCz17pgzdE94kyMviwEkr2o
                      3RM+s1SQPqy2iL3Gluy9DPOIvhMcS74OQDC+doJSPp6WYj5AmS++4LQMvgAZ6TwEGcg98A20vJlq
                      mT6CW5e+/LCXveBAZbyIZg49c9qavlbCFb7w6b29q4GcPgDztzsCb34+MJO6vet9iD4WShK+Zijx
                      vcwHjL5uOGe+AjZSPpCI5j1o43q+85QYvth8a74QtIi95ul7PpgmdD2GQ4u+hFiOPQCovD0455a+
                      pwWlvqyd0D18guS9PLDuvXihIT3b1ow+dy6OvimtlT7oaUu9yshePv8Al74IcJ6+2YqZPuC9Rb26
                      Qkc+GSSNPuYbWr6sE5a93t4GviZSn75XT4m+QBPPOyhrjL5KplE+gFnAPUA0JD63e6k+mi0CPgxt
                      +L3u/wk+MnpAPkh0e712wga+wtlhPm71Gz62pva9k4mSvjDKkb1C4Tk+4oUaPphCmb7EPdM9CGoQ
                      Pol8jD7gAwG+oAQXPcCHyDxYYV29lET2PWopEj6c//O94JtBvJqthL4I1TG9TB6avmLWiL6Q/I88
                      YMYjPpunor7DI6g++EApPeIXOz6M2Ic9K69Ivl6PeD7hD4A+JH+GPeCBqb67raG+KhoyPuRewz3U
                      za89GBl7vjwF7b0w/I6+ngKJvuB+KTwAxmu9QGbLu+Rwvz3Eepk9ADLfu2bMd75IVDG9/LjiPRgy
                      Ej5SYg4+EppRPmY2AT7ga0s9I7epPj5BOb5A4BW9y2KMvu4mJz44uWc9FlR2viWplT6YEQE9fPuc
                      vggnTb6wNN09cjI4PuDKJj7gtMA9nrgnPs6VSb74EBW+hi8WPqBSoz3QCPA8blgVvs6CYT5apXU+
                      ynemvmRjgL0QgcY8PGDcvc/2ij47I2m+BKbuPbz3jj2Usq49QARXvuOuE77avIC+pq7TveLNgb64
                      EqW+wB2nu0kFmz57wZQ+dvmpvu8fmj61oY4+jldTvjULkz6TC6c+ADpdvahfBb2Aksw8miZ4PmzT
                      3r0+o24+Zh7evQCqwbzQ6xG+bBCjvrNGTb4AqPc7HSeOPgAQu73Up5e+n0ulPgvEjj7ApES9N42a
                      PtBMi701Y5M+cMqlvYdwgL6wWBS+gsxEPnmzlz5QmDC+6ceMPo4tAL7Qswy+D8ajvuBnwL0IMXs9
                      QCt2vv7QUL6lsKY+1wWEvoAnVb0/7Jw+OMFkvX7cjb64VFm+5q/Kvdyk+b0OaGe+gACMPQYwfL7g
                      nBo+AA1Zvd5tNL6CNiM+WpOSvpLMSj6SiQI+i1s2vpzTzT0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0NDMzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNjg0NDMzNnEBYS5kAAAAAAAAANDP6DwLvJm+RkRPPlj+d74st/C9eNELPcbZdD4AjyE+
                      Db2ZPvrbUj44hwE+4rMzPhVtpj6Af448gEqiPcn4pD5Y2Wc9omt7PoEInT5AB5y+qF5tvgDF7L3Q
                      zcE9b/CCPhACT76KL52+WHQIPUArkjv+eAI+gOJvvhM3gz5Asdi9fFPMPR0+ij7GO+29QE/zu5Og
                      qD7fw4I+jVaFPqC7Wz1gudE9CGUKPUHGgz6Io1u+mGlAPXDjoDzAU8k8wWeYPp4eZj5gVnO8iqM+
                      PrhTLz1aB4a+khY6PhowYD4y+Ew+vrsBPiPDlj6TpKO+gEJJvnCZu73GhfG9Gt9KPo30jz7gLxC9
                      huoEvtCcwz2w49q8ayGBvgDK2DxN8pI+bGSovQcuoD4Jlpo+eHpQPWZSID4CNm0+qG54PVRxmr3s
                      Dvy96HCdvjBDgb3QVaa9Y0MnvoCYUbuAkd08IGpXvv7KKL4aOhU+zs9OPigzKb69bY4+AOmpuswo
                      270OUjq+mHQ9vmUdgD78mI09u/6jPhrqVT4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0OTIxNnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjY4NDkyMTZxAWEuECcAAAAAAABBYbU9ot8SPZBUGL2XOak9wvNHPZLhnL1/HrG9Ad+d
                      PejZybxCPg09afqRPWcLx70DvyO9IDYXve6nfz3mxHw9NlsXvYzkpDzyPBo9+ps/vT4/JD2CsEg9
                      0yK8vUoBBr2fqYI9EOOmvYTlhr2w8gq8wNc1Ow1rzD0TfoA9ErN7Pbe7Ur1QdMQ7Rj9WPRE/pz0A
                      dnW7DeKCvYDLkDzMRtE8lmpKPe0blz0Al0O7E8NwvajeArxQFxW9bM6EvPV1hL0IcMW9iBGBPFA1
                      xLsyqLy9T7ySPWXChr3MHp0816BXvT+SvT3fBJY9476Nvbnrpz0eE0I9bldpPRgN3LzD08m91E/C
                      PAGhuD0g2s47ZXi1vZSr0Twm6XQ9jrlQPehDvLw8VIO9c4WIPVAxCL06XAK9YEhPux0rWb0hP749
                      Ov21vbaCfT36Qik9KFUIvPiMh7wgP9u8SlqFvUFCjz2YM088IKYhvUKPvr2QVVO8EMZyvQBrUrpS
                      xV09tMHsvFnsxj2YY7S9CGGRvbjn1LwhhMU9a+eXPWOzdb2SRxk915rGvamDsT0Yb0A8UqUJPUIH
                      Gj3iTyk9mXyZPeqkfb2wOZG7qtbHvWCoG7sWZBQ98pchPeMDcr2ATyu8gLkUvKKLeD1DUXS9v6Cw
                      vX2vf73/Sr291MDcvHC+Dzxo6EG8LgyqvdROvryAahO9uHHMPDIWaT0GH469lL3+vDi02Lyhbpo9
                      1FHqPJOvc73rMso9yr46vSqcfz3DKJY9gKBnPCgHTrzsKMc87eKGPbCA/Tsy6DE9OAemvSw3uzx3
                      9rO9YO/ru9pcGT1ezpq9hdKvvRgymr3CyMm9wXuKPS2Bmb2SGkw9jCT8vADPB70wxJS9VQSEPYgS
                      kDwXOr+9/VTJvR9/vr0nezW92hg+vYG7mD2LxII9WbaMPVDqkL0cod88VrUDvddrMb2ZQao9oZSm
                      PZPqvL3s94u8mEbpvP16hj2M++48VAQFvWDCg7vsobw8uWCOPbA+xL3lA8W9e0XGvc4Cez1Xx1m9
                      gFH3Ov0XPr1WjIe9Zwc9vaD4S70tx169oE2EvYCGqDvVdIo9RQe9vWoorb3k7Os82sUrvewuljwA
                      cIm7cIRAPBghSrwAluG7M4zIvSBF4LxM2vU8sSqIPQ5BXT1aQ0m9oXK7PbbAnL0qrTO9DS+zPf2T
                      jj0QxxM8jiEjPXqjK736fx09vZE5vUfkUb3NqVG9V2CWPXJ+Dz0Ixo69WLyQvFHiyj2gMs68P4Wb
                      PUNKNL3UbM88wg4JPU6pFT2dJpc9bhmPvQDJPLx2QU49uiV1Pai2nb29HpU9U+2PvRRf4zxmnRa9
                      2L7IvejnQTzY5I+8mFYoPGC1nDvphqA9YPbxOxMDtb0FSYu9VY+DPZ25sz0ndSi9aceXPXoxor2u
                      wam9EZLHPXY2p71yWA09GmJRPY0Bor1Sy4O9H27DPVqegr0uyp29so0UPZCetL3M1ao8cv4xPbC7
                      Qr2Aghs6aGG4PLANNzwzgJC90GCUu4Tl3DxQW6e9Wn9pPTB6Rb2BE4A9RRbEvZ3gkb2onao8AObg
                      ubTNljy23YO9FPCtvDs+vb0oiMa8I4JzvZ7fob1qKmc9CJCVvNlnlz15/Zw9bbC/vde/Qr3FBL29
                      S/iPPT1GQr2wKom9x30avXDANb0A78m7+n+lvUpGOz3APWM78Pd4PGDcn7thKao9FI6bvMC9uLyU
                      jbI8E5qjPcAxyrxIo4w8YNzvu+Ano7y37mO9EFM8PDJgbj0pEMc9gKivvJi9XjxgNLG7L2uwvfk/
                      kz3hlrY9UjgjPQKvLD1zcye93Q+TPV5Hpb1a9rq9n3uCPYK6FD32OwO98FU4vZjyp7zCF3w98Igs
                      PI7hjr2wGZC9NeuAvRrgfL2oE7M8I0GnPUGUxz2g9DC7TkufvQMmHr1g+Us7CsdgvXLjMz2ye769
                      GWWFPe4kqr3M+rg8t8luvSHAtz3w2229nXKHvUNpt70M4Zc8oPUOvRLxcT2wKDQ8QEdJvRuEwL1C
                      Ryg9CtgzvY+Mnz0f6sk9qPukvUCPHjvYWGG8JA7ZPExs4DwYZiu8SDrKvboLdD2AgjI6FWinPfwG
                      7zxAChS9oPGxu9iVvzwvcbQ9q/eOPcDDFDuANEy8yl1QPcDWnry92Zc9qUahPfH3iD1wUlO9QJcZ
                      u0oGgb2AnM66AKZKuQBEHTtApUM70N8KPLmXhz0YJ4g8tAHBPNBGBL0NoaO9oMakPDRUvLxAWLC8
                      JkZDPbCwrb0Ja449gBrzOyBixjuUgAK9uY+SPYwkFL2gJIq96IhTPNCp0zuL5IE9Rtg1PTralL2Q
                      BzC8Hb22PUDBXzsA6wu97e2rvWCV+bwIfKA8OP6xvO4efj2+F2Y9GrdGPQRmD70sXY08yVuLPeAt
                      xDsAkBe6DpeqvfQEr7zKBkG9bBbNvFS20ryH5YE9ID0nvcX2g71+63s9NbnAPXiZv7zR1Kg9Ubqe
                      PVjtrrzQf0O86ATmvMC0wjxTz1+9GrNOvQArib1H7Jw92HbYvPVCvD3W1Bk9AMPwOWhGq72gDk+9
                      OE3bvKOdTb3Qth69jud1PS5QDT0AxeU5oO+DO30BqT3qN2M9si1RPQBrxzxgcji7MkwSPWMhUb0N
                      HCq9cNZVPDQ6Ab0AoRa9gLG9O642Bz0o7xi80ZaVPYUSkr2iQsO9uwSyPbR1qzyoWyS848xEvZCW
                      c70S+VQ980LBvYpvbz0i2ae940dtvXdAVb0trsS9gK8XvboWk70gBtS81fy3vQ41pr2SMcC94psF
                      PWeVvz2C3ZG98PknvajglL2RTpg9pc+TPejmf7zKf5+9UKcaPD9dpz2RVJI9Bd6lPS35wz2UwJI8
                      fRd8vYCpp70bppA9AKiCO2iptTzaLwc90/FDvcahfT33+H69Ug9rPWtqrj3nxZs9005evalglT1Q
                      1mq8INWAu8C/YTy4e+S8uwiyPVeGu72N4Gm9TkpoPVDDtzubVa49ABzQu1HclD1Slba9TCncvEgf
                      trzASoY60tZwPbAoOTyywX09qiJqPVMFxb34Ra296uq5vUwfAr3YoxI8RcGIvbAAWDxGjp69wLFW
                      O+z5tLxzYGi9LAiFvaPjrj0Cp3g9WW3GPeJwi73AdK299R6IvdbieD1SDJO9No4dPfKxGj0G5A09
                      vdjKvaBDtr1QDUo8wm9kPaLeRD1Mar48qORcvJtpur2Hbq29qtsfvZ3Ahr2AXga9a+CtPSMKb73Q
                      JJ69uQSWPcqtd71M5Im8cks1PZLVVj1CzKK95vAjPcUPqz1e8089UCaaO6u7p72gP6q7yXGmPUru
                      FT0SmmY9CwKEPdMfm73g1bK9OY+CPQhMib3bKsY9TKSlPOEjjz2wX1i90Fjyu0yu1Dxkb4O981qX
                      vbktrj0Cm6+9gBONusUFgb1d6zS9OlRhvVPFvj36YjS9OgomvZN6VL2T+y29ubGuPWC1mrshBZU9
                      oLeKPEI2pL3UHNw8XPX7PEjpl70yFJa9jutVPWJKkL1oxnM8YDMavQNEwz1QE5y7Gqg4va4nQT0I
                      Gqg8UDNfPCilFjxdE0W94BpPvYd/Qb06WzG939O+PSrIBT1wtEi87H6KvOOLL72CwXE90HhFvV2N
                      Jr2MH568YZ+wPb51LD3jtn+9HlV4PcolIb1diF69astIvXqwaL3dLqo9sFSUvQAjTrqHp2u9IZ+z
                      PQy1m7y2GYm9VoEgPdAYgDv3viG9IMXIvF3zpb23giW9s/E+vSoEPr2/xLE99/l7vR+srr0LtYU9
                      3a47vdvDkD1Neym9ZR2AvVQQ5rwIJ508kudVPVU/pb0Ud8A84NfrOwvAnb3DQiy9YqIUPXqFdr2Z
                      ZKk9AF0rvQDIPL0bcIs9QKUPPJSc4DwyEcG9rRNmvRHWyj3Ize28QDqrvOkaxD2A7vw6gs1mPbri
                      IL2BEq09Ee3EPQCyPb1YXWM8qgoMPdhZxrymn4C99PDUvKgCBTxIfrG9u/3BvYOdKL3ISMg8d87I
                      PQDswTiYqWc8nW8oveYYdT0gwf27s2u2PaA2nzy2lxG9WOL9vIrlkr0Cahg9OP/AvV3WlD2YxWg8
                      IHSmPA7cID2OE5W96PT0vNqzEj33AMG9i8ehvcfAer0wJ3C9XBOJvT2kgj3tYiy9KAHAvFpYMj14
                      9o68WplJvfqsZ71+xI29WgegvYmUtT2N8LU9InGOvY78Aj0M+rg85uYtPSBWzjvrgZ69yr0uPfTW
                      vDznX409MPhAPFFUmT3a+CG9sq5OPQrHUj2tQFW9+5yWvWMeqz2mEC49sYHBPW1sjL1gvNK82WXK
                      Pew4uTz4Hte8LC38PKi0ELz/UMw9UI+ju8o5Ej3glK68OkdqPTMUoz3riZs9ShGtvUC6ezwTnJu9
                      QM3VvGrqOD21T8e9KzXCPbCd3LsCZgk9yRKCPTnaqj00CrI8MeOoPWtYo71Aj0q9G8KvPbCg3ztg
                      ahu7I5ypvcBSHjzwYDc82OLIPJj0ub2Q+AK8WcC/PdT0hzxA6Yo82WOKPWhaBrwydgg9vVB5vfg6
                      4LwsbZ28iit8vcL2Zj0Oq5q9Km4RPbAz6zsevYi9ElsXPWCJnjuwwRG8Z5JCvQCMtbj4woM8yq0/
                      vZDbK70iGRQ9XE/2PAAqpzpY0fO8UvBsPTKGhb3oSIK8qCWoPIy8xrw7TJA9MDs8PP3RQ71bR429
                      WKe3vTm4wD0GsoK9mFIhvFI2Wz0aHay98u00Pal4xj1GzzE9yrwEPUWBoL3XaMi9aEc0vABlBTvg
                      GZe7WeWIPV5ULD0UUey8dAiTPCC/u7uXvLq9eiUDPeStDL3AlhY8oIOrvPnfxj1dfKs9iv59vYAx
                      AbyAzrK9h/cevWEftj0Bi4o93R5DvVg7dryapwO9oAzJu1RqsTwpWcM9h/NvvQO8WL11Ea49I4OI
                      PcDcBbz6F6a9ZVuwPah07rytAYw9gnbJveSdDr1KN0+9xgpuPUhLiTwfWqA9DpYLPQmxpz3N9Bu9
                      wKcpvAAYqLx3akC9Ij2IvT30pj1uNl09ThFmPapSZ72GVoC9EZy4Pb84rb1AwL28AcfLPUn3mT32
                      Znc9FDuEvDlkhT0zIq69uf6tPbjDnDw+4zA9cCMmPK4jk711KIW9+fSePTLRfD0XTUi9V0NmvTCI
                      db2Sryc9QLJ2vWHlxT1YZLC93b+GPVJpbD0Dwzy90me3vejChTzgCeS8mhIPPVETyj0dK4E9TQ+b
                      vbqUPL2Xwsm9LHfLvOx3oDygU9i8YoM9PWD/NLs6vI69CM6xPGk6nT2+Agg9sk4vPfyz9zwQcSC8
                      gC25vMK5TD0Ajbm8AAx6vS4kib0zGx29m1SBPZpefj3qxRM9KyjLvWg/TjwufHA9pjEUve7XGD1Y
                      Ofe8uSC/PdDOb7369kY98CN6PCjxtjyVrcw97XnBPUrKCT0YW6W9A6NUvTMuo72L4bA9qYuZPdAW
                      1TtJ6MQ9AIO7u9Nmdb3A9wu8MwJOvRG0lT0QyC88xRSZPdipWrz+J0U9cLySvWv1wL0QtQI8Zyud
                      PaG9jz1TYKe9fa9cvaIGPj1l/pc9XTOuPRhFVzzYYbm8CeaOPdAuyzs6pIS9eMrtvMLEPj1MUL28
                      YIm7uy53cj2INPe8Fw4bvfC+ErzAMzu7oAugPN0Xar1U9YE8zLLNPBAjPry5dqI9wMjBOrB6a7y6
                      HJq9htFlPRb5LT3A7Ly8yL3xvJYMEr0AS4i5E24ovcIAqL3zn5W9YCqwvJExyz1QJ6i7JDDrPJja
                      J7wa1R09FBDJvJenNL0A2G04Ch4VvQ1vSL2KM2C9CPyIvdjTgjyA+Ly74koOPTqSHD0A7Oo4kPxi
                      vUjbnzwu6Wg9YpN1PT5EID1DUJc9vjl+PcCRBrvwKbm9wFoaO8C04bqaWkA99NDDPFMjrb01m4O9
                      9CHTPLDoUDwIybc8ht4QPROHgz2UIvs8Bl5wPfAcIb3Hsa09DMuOvA6TUT3oncY8ezaWvfCVDr3A
                      Ee28Awg0vbkBzD3xK7I98WCtPR0cyT0QB7C9YJcpu1N4vz0wJCa9OuI0PfqrJD1IMK88757IvVAQ
                      EL3RXLM9IbaVPVM3Nb2nkII9rLmnvK2QN73NpUq9ox1bvaaKaD1YMOG8R6mxPZwDzzyq+DE9ssm5
                      veGvpD2ou4W9idymPWogEb3gNpi8UETLOwBfGLytNiy9iqwgPXUNqD1Moc88GOfCvE4uXD0keIK9
                      KkEEvQABDr0BKZI9RD/uPK06U733EbS9QwQ2vZc+gT3aZyu9ZQOMPRPoNL3MjLM8Zi5UPfhlwbwX
                      gzO9f4ywPU5xn70IJYi8C2a6PeZ+iL0QSrO9WNKOvCwVkbwykzk9KvYRvdTfmLyQgUC9B9WNPeBQ
                      JL20nIu9FL7IvMVDw702tmQ9AG1xurwdBr1OkE89hAfrPLLhBT2v7Ko9J7pmvcuxnT0G6Ww9h0NR
                      vXQm3TxdeIK90pJIPQjCt7zUo588OPGQPEYSjL0B8KM9gbGaPRixt7yo27O8Jm4VvfPOur3A5E08
                      1+s/vRQ+sbzaoSo9OPOLvTEEpT1g4Bq951OmPco2c72kdBW9O76bvfcrqT0xF8E9oOW1PAzr3jwM
                      poA8oLWQvY1FmL3jI0K9votsPdAGv70hnJ49M2l7vXEktz3hq5g9w/2vPQB4wLtgO9C8iH+zvH2l
                      PL0eziw97at+vUc1Rr3Ah2K9x8YbvZEWqD2AaoC8coA9PTTshTwOmDY9wUyhPShfWLzMbKG8lR2b
                      vV2MLr2mcqK9yX7LPSLCCD3tg689bu03PQ3RH70wCuy7zDSlPOiwfjwNj269YCUpO3KnHT1TA8M9
                      NN3fPACa/rqgXIw8xOCFvQIcob1n+GK9uC+GvC6cOz3qprq9DFbvPAOdS72F+JW9FBLqPNnTgT29
                      FsE9geahPXibq7wUDbi8LMPOvGLOHz3oz0y84HwLvWDdlb2YUBo8wE11u7qYyL1obHE8ADxYuirQ
                      a71KXkC9KCgRPPbRqL13snC95vGcvbAkHL3ZrLI9mNdzvGD/rL3a7gu9vopnPfZjk706pL29mPq1
                      vLmsxj32LqS9+lG9vcfusj0gqNG8uv0BPSrkAb2A+gm6bbVBvTMGWb2StVI9LLGCvQjkz7yx+Ls9
                      YImrPKOyv72i6bG9UDq5u+NpRL1ITYY8TcySvVMqTL2d9MW9hYqKvZSQqrwU0N68x5wsvdAGjb0A
                      eNK4L8bBPdPkHb3vYqc9SkqqvVDfTLxwZj08AWyTPVhumjw9NIe9099UvYBitzvw1Ei8APHquzEc
                      xz0RxcQ9kocoPYjmmb1nAy29XZAkvQCphL0AtIq76I3MvHLtKj2uJQ89s2DFPeMkIL02eIG9gMw2
                      vdDHXb0gWMY7QOXVuneRx72WxUE98PY1PHPhM72MscU8hD3qPEsQoD0mGFw9mqJnvbUJxj0iWcO9
                      iFu+vDCUoL2OdVY9++2PPSpQqb1TYSO9uj8FvbeMJ73D1429gB+AOzRNE70JX7o9RUWIvRjCULyo
                      +0M8UDWouxiKm72nyWS9wD+pPEZvCr1AhUs7uhQyvbm7kD1AUyO7qNlYPHLMfD1mXFo9JTW8vejE
                      x7zQk368tPndPFdguz0yQS09RHzbPHhavTzs7uG8P4vBPX3Acr1705W90GJIvWwIvzx8gdk8wKY5
                      vdj4Y7xIQsa9IAaPvZU6n73rMsc9GeuBPbEgqD3X6Mm9orAIPYDtvzuA+me8hFnVPFhL77zAkj07
                      kjNLPXR9mzxrYKY94Ky3u/9Dnj3KrzE9Q8irPSmkkD0Qf2c8grMPPdTW3DwX2sg9cwGgPfosEL16
                      4wK9E0SEPeXRrD3lGrW92k4ovZRWBL3vR5g9NKYFvXbtHD0tMKQ9yM2vPAmJyj2KYR29HzqzPVal
                      ND1dyKW9gHlNvNAhvbsAY8o84V2nPWUjoL0WmCQ9mD05PCfVu70TK749kF05vYqBg73yWEQ9COSf
                      vYDayb3Pmra9p1xIvZMFXL12pwG9hkEhPazdmLwkqeo8EBURPN5Qfz1Rqb89WhIyvb6ABT1Qa4A7
                      gEqbvMelaL2wmgm8EyumvXsmlb2DZn29obK4PYKeUT240aM8GqmIvdnSpz3cOOc8I53DvYzenzww
                      7y69QC+PPEA9g7xX8Wq9x97KvSKAjr1th5a9I32fvfi15LywXFO8Q3+lPdTsyjyr2bA9eKqQvNyT
                      /TwO+049912oPZNlXb02EJ+9ACHrvLMbU71Szbm9wtosPfKRbD065Hc9+9i4vQDN+LlQoX69VI/8
                      vAW8xz1WAg69QUChPaacBz176q09gJF2uh1qkT0Ah728DoeavegbMjyAOKE8x+CePXDjPDxT6WW9
                      LM8VvbXgyb2y/Qg9itfIvQBS8br9f5G9zfpKvZ7gUj2Q7Z+9cndlPVE6lz3U+ro8RZuAPTw+F72a
                      z5q9RdeOPc1znT1unko9TEePPNXvmb3r4rM9YOzpvBBgazw1cYE9ZvRHPbHClj2AIs+8ezS2PeyS
                      t7zWYx890ulcPU6rHj1AZpQ8tTSxPUPFl7023Uw9wSOPPYuEnb0FXca9Hu2pvesDmT0UIru8UNhG
                      PHcFXL36I8C9GtWVvUD/vr1aymG9hw+EPclBkD3ovhQ84JXLvFx78jxEM/k8eR65Pazs5DxIC7G8
                      wkQvPUhsvjyNI3W9LoUePXlamT3Senk9oD/KOxPtvz3981O93XGzvadfgz1/oYE94pwOPVgLqbzM
                      cqu8PUiBPeNBmL2zqay9U1xgvX8NmD3Z06s9UHEZPHL5AT1wJI29cRqGPaO+tr1jnWm9HCzvPOzu
                      ubxIm8+8rYVXvVQVnzyBY4c9TUyyvcpqEz2+zQ49mP0rPKh6fzztOaO9sgM8PTa8RT3uBB49QAGJ
                      OkwRhbw7/6E9tl6GvUIeQj3Y7h08g/7DveH5iD3Z+LY95wFivS15yT0nRL+9JfyGvZx03Dy6tjG9
                      qjGdverBer3Rup49Wi+rvfo5Ob1Uzt88H32yvWCr9bwVeIe9+KimPKPqnL3Xa0u9bvZMPeMkkL3W
                      Nau9q/W8PcL5ZD0U0eq8MAVlvb/qtT1x7cM9BsEIvZC8AbxGhIC9TNfWvECPMDtAn3a8GpavvQuh
                      hD0wEwy8N042vTSxkLxoBOW8kssdPZLsID3lDag90uI5PXwk2TwAKg+5kIltvEtIqj22zQi9gEZp
                      PHAkS7w6xxA9c8uWvVCXEbyIo529Q8lpvVjvBTwYZYC8yVaPPUF5gj1k1w+9rRKTvQJYw72ErPc8
                      34OdPXWdpT3nzy29mVvEPb1OZ72fq4Q9elOdvSW3o71zYiy9TCS7vKBXizzKmha9ccCfPaojib3R
                      GrE92OYPPKSOAb3avAc9WAtwvFMJIL2z3Sm9wMKgul6zib33M3S94vZjPUr6WT0gotS7KvghvarJ
                      Qz1xWoQ9mMBGvKK1Dz0LrZq9eudivToXlL1UELg8TbVnvf0dd72AsVC8qEWCvV7Hjr1dxkW9bWmm
                      vVpOgb1M6aq8AJCNOQBe0rpKX2I94PqQu4BI3TtUJoG9vU3JPbVNsL2tZIG98vtHPVK+CD0/mb09
                      5KfYPBIGJj2Yhdq8YEIyvaNbRL18ngm9oE+YO8JOPj3tNH692hYOvRjWuTxANfo60AgPvKIXi70q
                      yBu9YjShvQzeljwGGZS9oNX2vNb2Zj2T7469W6+rvQgDiDwg16E7LqdnPRSQijwJSoU9AKERujXd
                      lT1ugpe9oG+KO5jShrwe3qm9mKGaPM2/qT0nMK49cwOqvfcEjz0Hcci915XFPZPHPb1ALUg74Wim
                      PX6Jhb1jgCW9WCQavHUikz3YRbw85w+YPROrjT0rlJE9TJXyvH0KZL2xFcI9oBWyO0ALAjvSm009
                      XF7dPKTLi73aPSG9T8OuPVjsELyjdpC92ArCvdghtbxqHJW90Ejeu3/tjz2wnVu9+TnMPUq0aD16
                      LGe9oCD3O+2GlD0AAwE88PxEvTPpSb2oKFi8cHkEvAfcHL1DaJC9gDyrO/DSdrz/lcE9wEieOphO
                      RTzMFZU8jWqwPWRkzTxNjJW9Oa2aPXcIZr2wr0W85cmwPaC2rzzuoKC9gCVMOslwuj0aAWs90tCF
                      vaw7+7ygswC91MGSvMfviT1tnpC9wWSoPTcAjj1dkbG94CqRPOaFob1g5jC712dqvUK1sr11o429
                      qs14vVNSlL2zaHC9gPSMOiCwo71AlH07sMGqO7dEe72gyks7mlRxvczW6DyAjWO9itafvb3Wtb0E
                      2Ye9Oy+hPQMiS71A3SG7gAydu+BzgLuJNoo9oY6yPW+mhT0YxnQ8tEv8vHnguj3CK049PaOWvTRL
                      qTzMgoM89TTLvXp5SD0AVrm8f2bGvcBFP7ykwAW9Oi4vvSgWgDyCVnU9dAXvPEmFhj2R6ow9KAQh
                      vGihj72/xcM9wNlVO3CDcL0JSYk9WpVwPTAiTjwrtJC90kZrPbfJLL1AsRa7QOcxPADHTbsKjAg9
                      URGVPTS9t7y0MqK84ODju5KtGT1Nb6I9o36uvfpPIz2we2G8u8WoPSq4Xb32t309VJOwPEiIgbwx
                      kMo9w1w8veAtv71BuLU9jHKbPGeHKL2S7Vw9DaWwPR/Kub1ay1m9MzpUvdwlgL2m0469om45PUDt
                      YDs6X209PdqmPUDDWry6DZq91C/9vFiG1rx0QYe91CLlvOfDML0yFzQ9DBS2POjDzDwDjca99KYM
                      vcBwCDtsssi8tFKhvOWmgL3mDpu9BWCZvaC38rzE+hW9hHHfPKzr2bwxV5E9BjAFPasRj712KJu9
                      A4uqPeWxpz0SbrG9hbODPVOxa71qQJu9/ow2PUctcb0YAqC9SMmxPJRyvjxGYhe9Msp8PeiqJzz8
                      AAC9Yd2BPYxPxjz4SIu8NiJdPeGKkD04+f284NezvOcgwD29j7S9Avy6veCFWb02vEQ9F7i+PRTd
                      5DzPYbm9G+ykvZsVj71t9sM9ApBkPcTa9DwRo5w94ROrPXoal72eBnw9EYOoPYBn/rzAFjG8Up8U
                      Pf0nob2hyIQ924q/vWB4RbsoRYA8i3HAPfDlLr08WvE8wAKjPDDnkLuwVla8GMCNvNOROr0XTVC9
                      KhM2PSBW+LvI1cG9gFVMugdjqz2Nmce9YB1rOwBQ3LqgSn07GFjCPPXynD0V2qe9tazGvQiMuLz5
                      KY49bIzTPNonGT3Fg7M9NTe2veTy7DyYO748X62vPaDMlrww9Iy9ztUlPYfRtD1Miqg8JNb5PFhS
                      v73s5JS8dQ+7PZhRqL1TGsc9cF9XvHWvqb1+a6i9UpEhPby00DwDimG9UIRNvI0pS73GFkA9oIn/
                      uxZupL2FUrQ9TKu2PHb5Cj2Jt7Y9EAcuvDVKub0nEUW9gOk4vIovID1iwyY90GIjvVCNibtoH0+8
                      wLZlu3HXwD3YxMS8cIlCvB5FID2do8w9sfymPdqGer1By589lxg6vQAshLjqsD499I6QPBhgj71x
                      YaI9etZrvUnbjj0HCJI98ouvvSM4Rb2SIXk90nN9PQAkwbt9w4S9kwuCPWB5HzsU99K8uG2wvdIZ
                      Dz1ATcS6FWnKPbAYs71ayQ69hlJFPZwO7zyPFrQ9QIRmu6JUKj3UH5g8+mVdvSkjgD16M7K9oA1b
                      veelJL0uiZK91yC/PedMSr0YPom8YNTxvBYBm70NzIe930SGPeODwT0gRdG75OHaPJQMqDzAGVc7
                      oAe5vODJ/DsA4q+7GSyYPRDdf7z4XLW9b0+LPekamT0ZlY894EyrvUpicr1wOlC8M0q4vTMKTr17
                      zsW9YB/YO5mJiD2AvhK8wo4kPQ5IgL0Ypk28VM+6vHLYcT3pdsc94LbKvDAEITzx/qs9MiVmPVq0
                      KL19i5g9dUervYD3oLr1opA9M6G5vVLUHz15o5Q92K6TvTAHk73Y6wi8r0e4vTCJWjz5Kcs9mRqO
                      PcgljTz27oO9+aexPQFAsj1oXau9KfmCPdDQULzg+YI86vx4PW09xj3DUx69aZSePeqAhb29g8I9
                      4iwaPZ/3qD3HkrG9EF85vYCJPbzAU1I77E2TvBRi/DxgM++7Of6LPdO8wz30Mbu8DYs2vUf+rj10
                      aJe8IyirPVsZtL0408G9ABbtOt7IGT0ACU67h9bLPfx11TwFIps9RmF7PRA6RrwZBKA9U9tzvZ3A
                      PL2AVWo8mZaoPUp1LT3APZm8A5dHvZvkjb3VeZs914tlvfq7HL3sdIG8L+C3vQx/zTzwQVo8AIdN
                      Og8Egj0dU6A9QCQLO9bvBr0jilO9mzCZPcFAtj1H1CO99wtovUkOuT3QnV+8nRJ3vW/Eyr0CLik9
                      lPb2PEcpK72dkTW9jUjFvWYRMT2nY6k9MzRHvVomQD0T9Jm9D4e6vbCgS73gs5o8YNvQO1PYbr3Q
                      Dj+9siq/ve6yjr1ZUcg9YDdyvX0JNb27v5q9rIruPAdhUL3DeHi9AJM4veDvqDwA5aG7wSHFPUr5
                      Gj0jyqW9EnlePXpuOj0Qao69bM2gPEjEkr3S0309g5s8vU5KWz3vS8M9M/+RvULGVT2WRH49wYe0
                      PS12tz00/J28NRTJPcMvcL25uKQ9w9qfPZGOtz0AnRq7VmEYvWEkoz2ww567R2JdvTIvHD2gdnk7
                      px1Cva55bz2tQb+9FfWMPTBlxr14tf+8byWTPWerLr2D8zy9pRjMPRSW/Lxg1b29AoAtPfvtuj2H
                      Mye9oA6uu4b4LD1Aucm6f1Wzvf34gL3A5sG64CfnuwYjWD3hybM9A2l4vZWPzD0CkoK9iFb7vDTU
                      xDwAnuu7xYvKvTMWtD0S7Ak9wugQPUC4cLugKHq7yNK7vWSqFr0iBBE9+JbMvTg8nr16pxg9GoGd
                      vdXws725UMI9FXuTPdaVo72Am7i9XRMbvUqWFL2bKLm9wMlGuxQ5ybyVD6c9ZPQNvd0Hmj1K21s9
                      NvNGPVEyyT3ARZ69Nz2vPRFlpT1gf227gC0KvLhuoL1HwrO9JJPiPAAMBLyLfpm96CUQPN3Bnb1K
                      /g49Qjs2PU0GuD1fkKs9GALNvM82yT3KXJ29G4eDPUSUBL2TT789kCUoPHpnAT2CRpC93VKTvfGp
                      rz1wq2I8mKb6vP44Wj2FDsa9ABKPvG4IVj1p7rY9mtkxvR3AvT3Tr369C8TKPTCfdjyZdaw9sOIM
                      PJnugz1i8HM92n8qvcOxyz04MZ69QDB8O+rjPL0A4Kk8PjYdPZqGYj2CVlU9GoJ1vcDtUDxLW6S9
                      OhgPvahC8rzAPC67LhqHvdaafz1N8ie9+NvbvK7whb2gr9q7kuIhPSLADT1AjnY7gfHKPQLKfz3G
                      EgK9ur5IPQC55zvhjYw9JjULPcIHqb0wOGq9ehosvYAPeTwSjFw9yCHAvF3Wkb3AkYe9jmZhPZXY
                      qr05bK49Yo2LvVDkhr1AT3o8+BixPBgYSLwMUK888xp9vYAciruYgI+8KlFuPeklhD1A/5u92KNP
                      PJ8WsD04y8m9GBKLvUwo7rzR/sI9HdmRvUXts71Yg2Q8gD6oPKIkAD2gPh67PN7zPDY3Sz0AWcE8
                      gO6rOrUdir1U+YC8CgBtPX7fQz3coAS9FkFlPUfztz1CUzk9A7bLPW7cqr2qhwm9sHOcu3+coD0o
                      qSQ8MDFLvW7Bhr3qDGK9sMNDPBaYJj16ck49kAMcvcOjrj06Lgk9T9XCvX5VLz36Iwc96x2CPQfd
                      Ur0O/l49iC+FveWmub1C7qS9r9nIvZk7kT2K3iW94oRpPXrejb1ymcW9KKrKvdpMID1M3fo8qLD5
                      vCK2FD09RZg9qB8SvEBZWLwgUqG9V6Y2vZv4rj2ZA549gpoaPRN9qL0Qkxe9YlmuvUUgi71QnV29
                      FK6gPJfoiz02cB89wIZeO3m5oz0UiKO84oh1PZdDRr2ollG8yH6jvWJtUj10OpS8WBCKPBJPvb12
                      TRw9ADtivPFijT1zerW9A3C5PQ3kpr0Y4Mc8Eh18PdAZg7s/hqk9AMC0tmThFr2VBcq9eN7AvdJB
                      Nz3gBqw7Oug1vXPUIb3dy7G9OrpBPX4mKD39wYM9E3gpvThMs7x+JBk9MLQ6vHCXIbyYFGo8kTLH
                      PU0yoL30EJC8E9uuvVMltT2K9JK9AM1xOn2ukT2Eyvk8B6qXPWuutT2D0ly9wCV8vUYBEr26ITk9
                      wEXBvecJtr0fE7G9CJCDve0xub3NTH+9za8pvT17lT2QDmG9IJ5kvYhJyTxnUUe9qKdnvGD/Tbsg
                      YNC77JaZvCDZ1bxvfKE9u7O0PRiGzL1AYSu8U8UevUliqT3gUoI7K8PCvYBNYDqCgAc9F2ytvWBV
                      Xr01fci9cqZRPbDXgDv3yCa9gNHju9jWWLzTEKW9mOYqPK4WTD3MvOQ8CySjvVS9tzwwT6q9vTAs
                      vXARYbxA6SU8qym7vU6Icz0AY7+5Kg1PvcrfY704Q4W8d//EvfL+Nj2AGJg69QCcPWgg/rzau569
                      SPSTvBg4Q7wKaGa9Up0GPcBlOzy1Fo49K/eqPZozur2Tvak9IODvuxDyRTxig5C92ok8vflNjz0g
                      K3C9462ZvfGYhj1lDKU9il47PYxClryep4G9lIkNvZXKwz2Avb+7oixePWA5iDwXNmK9yk0XPVik
                      D7wseKE8J8ZKvZPqbL26BHK9o3Z9vWjGjjwgX1G9RnllPWhWNzwac0G95tUOvZY6ND2y8Ma9ES6F
                      PT5Rfj3YuYW8GggUvZGbvD3njEi9tSG9veAYhr3uSqK9+86SvQq9yb34z6+9i7ezPYBY0Lp9VYc9
                      DsZmPctTm71XD1y9QIt0vcQX6jzUFKq8dFTkPNokfb1CwFQ9ikPAvf9emD0S4xE94CY+vZYspb1Q
                      Uri7mFO6vRRvkDz6GEs9YYK6PYC/Mr3Y16+90/NHvWUkwj0oyXc8XHcEvff5Y72YVlG8IY6UPRgP
                      trw6SVE9v2+FPflwnz0SyiE9eqMhvb2Ugb0Qgj68wDSxvABJcjwKGRw9Of7IPZSFqrwYkZ+86lEn
                      Pdi6JjwA4Sg6FPeKvFgWcryLPow9EmGevYCCgrsmsn894XSJPSgdmL0fYo09xgNmPbAgU7z5ea49
                      f5yBPflcjD1Iz+i8xzKrPfDeIjyq7mM9cGIivFRJu7zZ/6Y9ehyuvTrOSD0SiV49FzzHvcz/nbzA
                      L187Ad+UPW6RPj0I6LG9ICbdO5g4mTzU2qW8by+XPVpii70o8qa9c1amvfA6IL3AjD68Ay+wPRJF
                      pb0ATV69vsg7PczWC73KGQQ9k8GoPT6tPj2Yya28wAHKvcCcrbpAPXA84HMBvcrYTL3Hwac9UPh4
                      vfa9hL2g3LY8mC1cPBDMT71+7ws9VMb5vIRC2jy6kTe9QhxQPYkSrT3oyYG9RigqPSICNz0dcMw9
                      fUStPTpoVr1EyYW9JqU4PTlAlD0s/ZM8o5k+vWgjnbyCVUg9CguFvTPbqj1jtcW983WYPTMYuT0V
                      3cU9cn3KvaOpsz3CO2M9ABY3PCgoX7yUoYK9xjSgvSh4K7wAOrK6EM09vFZnq71AQ2K8KvUmPSaD
                      BD0agb29xRKKPb2lrL2wM6w7yhZrPSs0pb3UA8M8BLnlPCicm71QzIK7B84ovfvvlb2dtIm9wMpK
                      vTB8Yrwykh89lgiAvW7Ffj1TTsk9kqsXPQBvrjy/T509BzE7vdBjGb1gZjW7KXSuPVhTOLwCgnc9
                      CAWPPA7IKT29R1a9wO9wvfTr6zxqcX49thE6Pe55Dz0o4V08QZzAPYDMCb3gjoQ7bWXLvQMJTL0w
                      DXO8qO4YvON8wj33Qby9vBIHvUAp6rwwZm+8Krdlvd4zeT2gq0W7GOZsPCd4xr01UpQ9wqEePaEu
                      rz34j5K84VTGPaTO8zxqJQi9YHD3u3r2BT3OSnk9DDgNva1bdr1ducO9LO64vMBG/zrAxUG8Vows
                      PZDYIL23ERq92KhOvKKJaj1K0QQ9rUGdPSaaAj1ky/88Lq0yPXm/iT3CJVU9hVC/vWD0mzwg6cq7
                      RqBhPZoocT3VB4C9WfjIPZ4tkL3d7Ig91YWaPU1cmr3oQsq8cCN9vT63Oz1sTRS9G2LEvTckUL0j
                      c7M9U358vZtOmr3wMR29UE4FvTdGxj0QHUY8Y4k2vWWclL1oarC8o8JcvfkGkj3Xi8E9fv6KvXQP
                      mLxTR7Q9P/mZPSA20LyUlJq8Gxyzvehemjx0I/u8qbi/PbB6zrvn3lG9t2UevYWyob02wZ+91Yeh
                      va3viz25arI9QX20PVHzyj2yo7u9CD6jvEkbsj2icFA9d4dxvd4maD2g8/q7KMTAvUJRkb1iJa29
                      wcLDPUBFkLqiSBU9lvwJvQALmTttSma9AeiEPXyoGL2tbkG9wNBaO+guITxgkIu92B6MPEC8wLxU
                      iMQ8lrYgPXqEkb0BobQ9s3MevWszvL0MgqU8Wm45vdBlGbznSZs9gDhJPAWOxr0MPJE8nl8sPfPa
                      kr2wvZy7GER1vDqECb1bg5e9wJ5JO6QT6jwNxTy9UicxPVqtar2AwQg85n6FvVAfZr3Qrku8eeq5
                      PY33rD3wRSu82xvMPV3cbb3wx3C8YLcwuzu4yb25ub89bVc9vaeUmD2Rh4s9Pgk4PUKNNT2gnde8
                      lxeYPRAxU7ywT0a92Hd3vNK1KT2r8429ctMUPXTnmzx3Z8u98N9dvJnVnT1NKWi95tGOvRN8dL1m
                      xIW9N9ppvSgIxbyAXao78HRfvDoqwr30F5I8+jiGvXImFD0aasi94NuqvAPXYr3HGMm9JMv+PGDh
                      u7yt0HK9SH+AvGd2yT3t3os9tjIxPVl3jj0k6s48vQSPvWAzkb2wLSI89n17PVLPBD3s7JY8Ij4d
                      PZEimj3JvsE99qs1PdKCWT0ivqm9R3eXPXg7/bwKYyo9Ev9QPTMtmj3Am7o83YSgPaJnUD2o/Ve8
                      nevDPfIXZD2I4Ja97y2sPTXbyj07BIg9Xf2BPeiLrLzYtGq8IJFBvc8ayj0g6+g7QMwZvICgjLzm
                      zIW97AX1vPRz3TzxDJM9pCbNPIDTuL1zZrI9eIL7vNaTkr3P3r291LPUPLRE6jxep6a9mFY6PNZc
                      Vz0AQaw72M6WvTz48DznrLu9kpdEPVceJr3sR5w8umEZvdWPhz35KK49zfadPfDmDjx4fOa8MkNj
                      PbISyb1tH0e9q3PGPaOXxT3HjGq9d114vfqYCb2JVYs9bDC+PJSEwry1H7o9AkslPS1ywL2g1B67
                      8G5BPMx4jL1HO1u9w063vWqSTL36kGQ9YL7FO16HaD1Dwb+9rm5QPdTuvzwzGTy9Ew2IPeC+8Tto
                      5E48XBjjPKM1Hr0OXDI9WJoQvMiWr7wOIqS90HlnvXBQfL3nzci9HNfQPJoXAj2omWe88EfAvfSF
                      oDyiMBY9Ml5VPZqjCr1uwTI9WAQsvIi5sL0MCYW8KnU3PQAOjbp3GMe9svxfPeC13zt6qww9HJzx
                      PKg5jb0a7hk93tUiPTsIoz3t/q49zckhvSBTk7sA1Es8Stq+vbCCnzu9/2C9EqZgPd4kSD1B5ss9
                      WwSsvcDNTzwAYTk7Zy+VPSa9oL3sH4a8+U+KPcD4c7tyxEs9xD7zPHZXD71ohUY8wZyMPS6seT34
                      E/68XmqOvWIlRj1AzfG6MGmdOzCNJr0Bt5M94uk8PaAX9btth449Bd+fvdgy7bwAM1K8pyEzvVLd
                      ej3T5sU9xQWTPd3Snj3o1jg8T7G3PfMLcb2t/sA9vnEVPQWvhz2lEpQ9lqIKPdgpabz2TYK9AIDW
                      ursrwD1QknW8QI0yu/HMkz1FoIa9/pciPegdmTwA1lw7x5vAvU6eo72cuwO9Y/UhvRP/iT2TIoA9
                      SiZIPY+/pz1aa3q92q53PdV8sb0AQ6m5IkABPRTk27yD2Mo9Bau3vZCSC7wYu7E8XtKCvXJkFT1A
                      0vq86/SdPcBf1byXz369AMv4O514qT1qYkI9LLXIPACuhrojirC9h6hyvZtBuD02vDY9wIcRO7Yc
                      cz0F/4I9YMTEO0BtUbyo3Ja9rmNSPQ6cqb1Q9ZI7KhBRPSAahTyQBAG8yWuNPRj0djwoy7s8LDWm
                      vHGroD0AYJU8XETtPCYbLT1jllC96u42PUK5yb0ATT+8GQHHPRpjqL1sqe28lQqIvc0ukr3xaaY9
                      UvRePS29Mb3qD3I9tEmTvH78Ij34uJQ8IKiGPM4xcj234Wu9ADUEvYCajLyqh2u9vQrKPfkaoD0W
                      fBM9KE1ZvOlagD2DREu90nRvPWa2fj36sUo9sGepO6joAryICoG9FiwgPVDDrDv3pHa9btVUPRj1
                      SrwKjDY9pqkrPeCi07s3oEG9Oo26veCUujw074A8YXeiPd71eT1KqRk9qkK9vbBbazxqGaW9YImD
                      u6gIMLxulUg9YXOdPXDdfTxYVcW8Qs0lPWaFGT01F6G9YFxauyDty71kl4u99uFDPUQk1jy2jxU9
                      TfrGPQ2EH70NUkO9+N+3vRhsHDxWRRI9pM/vPPD8fzxznZ69sytNvZ9fij1KQC+9dXagPW4FXj38
                      /Ii9ugNNvRhINLwhO509Is6+vQxg3bxALYW8VplWPfx+/jyYrDS8FOnvvE0pgL2Yhqa8N6FsvUfj
                      Qr29xLQ9nW95vQgXw73AMwW8VNnavEL0PT1Q1Y67MvAGPdAWXTzKeXC9mLwnPAL5Fj0DXzO9+DnB
                      vUnGhD1iiCU9Xgw6PWiFt70oyrg8ALNMOrdlWL1QKhs8N3upPVOOpT0A4G+9J4xkvZlbkz2z6bq9
                      QV+CPdM+X73DGa097m8sPXOVqz10I+a8KApsvKEZjT0N4Xa9YpRLPVvTlr1ZMJ897ht/PaN8tb0A
                      gdQ7ixi6PagoOTy0z6W8sb20PW1CNb2e1nw91FfJPP86yD1gUMG7pc26PbacRD0oYki8qE4LPDRv
                      4zxGW6O9ANVLOioLFD0rIsK9OGatvXhatr1SlSA9oI7AO6WrhD2jEKm9Av4SPYX7oD3x97Y9/YXM
                      vQC3Br22RXQ90Sy+Pc0vw72wg7+7+oNzPeu+qj1obYU8BRyxvexGC72QCQw8x3DHvfBJCjwYC0M8
                      njtNPXP/lr2REsI9tdHHPQBBO7wS3Dc9qPt1vDjexTw6gWW9Uka/vYCr7byHpCq9ni9gPeEejz0A
                      yJ+6dEXQvIz/sbwr+KC9mISOvAsou71eV4K9+CzuvLVeiL3Qnea7bXiRPQlfvT3NP1u97hZVPaCw
                      AjvSmEI9GJrLPAI9ST1M6PG8oN5mu5h+57ynBkK9miFgPTmihT0KExm9QNnpOkS48zy/e7g9T2TH
                      vWFPmD05tpc97TJwvcgY7rw4GaA8oz2+PXVzyL3MM/c8b7u+Pcownr09X5G9MIW1vV+Dwj3QPca7
                      aqFnPTcGLr2jvH+9dMwAvYp/g71Fk6q9yvl+vWwlrLzso548vf4hvbCck73yxKu9H3WDPWgV9LyV
                      85i9KK2pPAoNQr0JBsc9Q/qCPehcvr1q7y+9fdUrveyI0Lw9taE97sofPcmVyD094bI9qOrevPPE
                      rb1Ke2c9rAUZvfcztz0PF7w9otGBvS/KrD3lcZw9gL+rO5sVmb0A9Dk8cAoEvNrXDD3yqCs9psyT
                      vfU4vz1obTQ8cROFPYKydD0aUmg9Cghrve++vL0IbLG9bRyYPQtisz2iQhY9MF25O1enMb20dQK9
                      lXiJPZnAuz3NuIk9oGO7vXWtgD25Kck97ldOPaOXlj3wJKO9qlidveKpUT3Qiya8z8e3PXRvurx3
                      e8s9vCL2PI5bBj00pIe993AuvVPpUr3QSZS9yvu9vYpyUj0evh09MnkZPSFooT3rw6e9cucAPavf
                      xL32BAA9J7IsvdPrrz2gTsc8njw5PTKqKz0AE0m8eiGuvV4+AT2N6aa9lFSDPKFdoD2YPgM88vhC
                      PYG0lz08H+A88LkTveC4gTwTIKc9BnkdPVcQUL1skLE8l1DHPfjovTxw6Qu8KtsgvQDgWTn3gi+9
                      VM6IvZRI+7yJLYU92OpgPKA2rDvOtgQ99PnQPP7xgr2ldK69wKQrvOacMD1ULJM8vxXHPS+Vw70K
                      UW29mjXMvbM2Qr2OiYy9Enk6PQYJGb1YSLw8kye5Paj28LxH3a+9TUaavfCWx70g7p672zjJvceo
                      wz05CKk9MuY+Pd4vnL0RZrI9YneMvdPNRb2Nhqm9EBAVvA3cGb12qiY9emc3vYjDr7xgb4o8v46y
                      vQAHs71NPSu9qGD/vGFOlT33ccm94KhQvYDfs7yKhBc9oC0BuwALrjmZlag9rIrwvOrELL2paI49
                      qrMFPeAjzTv6xym9VbKtPVh8xTxQdpA79OGgPPamZj3CQlE9PYFuveWJwb1M8ui8EE1yvIgDtjzt
                      M129IsaSvefMt73QvUc87I6qvOIdNT2AJa06QJPuuqBS37v02gm9uQzHPUqtGj2Cs3E9kO1mvGuZ
                      wz2IX7w8rD+nvME1zD1iXUk966S8vVhiQTySQMW9wli5vUyO4zz6k0o9ZuiKvX45qL3fXJY9xM/V
                      PC7xLj2xtZQ9ukeXvd8vtD0lV8Q9gH2gvQDQ9rpNH2C90rEaPd3Ypj2o+168EL9SPOFswT1m1189
                      tMXGPNilEjywXZE7UAawO+yVtDyTz7W9HfqXPU5jFD2Nulm9skZFPYa1E72gqBy9KIW/PDeWR70M
                      6o08co17PV1FPb0eVEw9x8zAvS7waz3tDLK9XQEkveDBx7zxkoA9wPo+OzQd4TzGDKm9VtwtPbj7
                      xLx/cLA9yJa3PDOTKb3ACnK9ABt1O+D6iDsqhHQ9aioTvXq/az1AiWQ8gqNkPYhr07xbOrg9xj+d
                      vXphOD09glO9AMw3O1WUxz3lNJK949ZovWwFDL3Yeuy8T7rIPcJyQT2dGTG9sGu2u63Qf73zZLA9
                      aOobPG3/vz2aRXo9jcNsvVrnIL1DGDO9hsYwPcAahTzQ69y7IBaCPLBCnjsg67u8CPSkPP6vdD13
                      uaU9QOn7uv4Gjb3gG508bo1KPQAmmzrLEa49FZGnPU50az2Zrbc91iQAPeAWUb2V4Yo9wA12O0MV
                      oj1YLac8UpdfPXL8CD0YPw+86OGhvXM4f70AFMy4MGSovYhYj719Sac97WiJPfi8n73njne9eAqE
                      vQwItLwwi0m9w9szvUFrmz0dVL296mWNveFQwT2WOYC9wSCBPdiUBzwoeyU8BpmCvY6gZT0g+/07
                      LuyLvSoaaz0YEk+8aF1qvKznuryA0+e7jXtVvbCnIzzY6BE8PL8GvdhHXDx5xpo9SvESPXtMq73/
                      +aI9QFa0PBXukL3tMEW95Z2BvQHKxz2gx5M7SxWkvR6+Rz1u+aK9twHCvSnexj0ozCa8ZJgKvQtV
                      oL0QEjc8L3WRPe4Kjr0NQo09ws/Cvb5gAj2v+6k9N8uRPSvDkT2Xd509cAhivAtglT1ytgw9fK4I
                      vcf4xr2wb0u8iJ2GPMyTyTz6DyU9u2mmPZW7gr2q1W09vmuMvV3NUb0NC8Q9yjltPYDicLoPnIc9
                      Yok9PTUepD14cYK9gJIiPP+6tD3A3iM7e6ejvSXFob3dK8A98o4wPfKtsr2r87G9oCWKO6iJFrzj
                      15C9cN4MPOgxNrzwOUQ8MAOuu5J0BT3foZ49FyHKvRNwaL2Ixrm8MMI9vAThhr04boi98p69vSBe
                      17z6VaK9Tft+vVQRB71rWcY9kPxbPAePV70rGby9gAeyOtPHmL0ALGc70DHtu0hUmb1h9qA9QB8x
                      vYh5ib2JVJE9Ry5IvRAGdLxOLqW9GpBIve9szL1dRGm9z1+lPRZCE70AC9c5kCC1vQCFaLztZr49
                      4LeSvIeLuD0zozG9gOwkPPC8JrwIpbQ80LdsPFeNKL2z1T+9FCrhvHDoGL0MWMA8A3jHvXSY6Lyh
                      66E96KaKvHt6pb0A5hw50C5ZvGyqjzx+Wkc96CImPAHOrj0nicU9MHAJvdK8JT3RL7U9OyKsvZAi
                      JL3CUsS9aiBEvfIdRz0RU8E9SK3gvLn4gT3ATdm8ADr3ummaqj1MaP+8i9vFPTsNpD32cTY9aiSW
                      vZCTTL2OilI9gEVoumMqoD0pI5o9CveevUAGyLyz/7e9nxmAPdannr3TYXe9vfCtvQA8WDmkEoa9
                      nh9aPf+4jD1yknQ9a1m8PSApkLx0ma+8sMzju8cbdb0RIMM9ODKdPAB2dzsDjqm9MCgbvT89xj1g
                      Xee8F12ePZerbr2iU8m9TK+UvEBUAjsCOXE9KnAsvbCib7y39nK9bvZ9PT22gr3SdQQ9pCgJvTCA
                      yb2yJ009KPMHvOSIBL11IJ69KJyqPPcxW72utzI95tJGPX3hPr1UV4s8Vq8RPcBLCjzAqz48OSay
                      PcDUwLqGHjU96vy5vfLUVj3sP688uF+sPA5feT3QhJG7ACM+vFRPo7wQMQK8SEKivHJwbD3bgpC9
                      +fSyPRgZeLzSi2M9M9KqPfnmqz23H5Y9l47GPQTW3zwAIA47zPGMPCBipDsgoqQ7E4fKPfemZ72D
                      sR29J8nKPaA+rb1fhMs9MCNEvFH/rT367X69kgmfvQekyD3otbQ8wIl2vFKVLD0ZdLs9nNLlPLhU
                      w7ywz++7eW2WPdQN4LzM2NW8QCwJvQEwrT39jYg90U6WPdhCFryaVYW99T6LPeZgDL2qBSg9WJ96
                      vHEGyj1UC/I8AWCFPcMVQr1Cyzk9oA3+OyBrsTsnF7+9ADBku3H7hz0SGFI9WLYnvFRZ1rzMtZM8
                      N2mmPfovhL0i+ic9YnYJPYCRrztaoRq9FI3dvBgaDrxPq669bjZYPQ3Niz2JCpo9DF+JvGxTnjwo
                      oL29EVmwPQsluL3eWUw9ADHhO7UYgj0Lj8C9mOA2PGIEEj27S4M9ZjOCvQpWQL3ZD4A9oLQ+vVvz
                      mj2Yy3g8AlxQPVxQDL1wKlK9gOGhujpOgr2VUpU9nTdyvci4sb0XKSm9W1OiPTB/Kr3aYX49RKuM
                      vSH+nT0+yFk9wOsLvcgn7bzhcog9BSK6vUEIsD1S5gc9sJypO7Au1Dt3Qq09kBZLPEgZy73zkpS9
                      l1tgve1uN72g0ns74CX+O2C+lzsw1Fg8SUGnPWLofD1GBI696A5oPEBXxLwuCmo98HtOvIpvu70Q
                      wg691DblPGGqjj1/hYY9IBi2O/8djD0EkYW9wsG5vVCbRbywrR+8uvYuPYU0jz17EaY90AtyvJYz
                      OT2BVKE9qK0hPAIgVz00VoS8vqJUPZewuD1LIcc9oPOXO2YJWj2g0eg7WbeaPXWOxD2SuYG95sJi
                      PTEwnj3Jv4E9MO8MPK04yD2J1Zo98HB6POH1oT2lnZ09ggI/PTKmJj3Dgpg9ehF1PXBgbb1oQrM8
                      lxS4PVDvJ7yDvI49SDejPNhfb7wYNOK8DZhGvdAEm73osey81GC2vE4zBD1wqEe8GpwTvXTnCr0i
                      21g9QBguu4N3hT3u/iM9RECMvaM0uj3AlYc8fatwvbTH1zztA6S9oFWrvUA5M7sKwb69CqdcPRQI
                      gjxXR5Q95XCEvaDunzzhnog9tlV+PQeGrz3NMh69mOKBPGPit72Q5XS9AD8zOxQcsLyAe4e8ML5u
                      vOK5VT3gOnS9iLnkvG5WUT3A+nu8FhR8PSx+iLzQi5+9JgcTva0MJr3gJO+7Ak2FvcQH4TwMbN68
                      q/GPvciL7rwox4+9cvF/PQLNBD1Z8pQ9ooS7var4L72oO4i94NCOOz2tuL0qAkM90ISIu2Ax97sA
                      0Uc8MN03vAKyfT1o1Cg8ZSKuve3av72FvIi9fnhOPQcRvb3eX0Y9HSWzPc6xWj24N5+9KzCnPQN/
                      xr1Ql9c7mhVGPYyK8bx/kLw9sjpKPehVojxNH8u9M82iPSfzNb3AKFS8Q9LBPZ+Nlz3AcEa87C+i
                      vJoSNr1rXL29oHZpO8gnw7yoJKA8wpVwPRB5W71aR7q9YaqXPVbxNj3fZ8Q9eUawPZiQA7xHMK09
                      6LWiPFCXK71NzcE9IqcmPWvin71FYr+9irGVveiijL39e1290xebvUDeM7tFMo29WlJoPeI0qr3Z
                      loo9K4eRPSXamb3CJKS91mZNPYbqqb2LPau9elIrvUNxHb1wLbS9Am8iPccjvL1A+zE8Rq02PT1k
                      hb0vlsM91ooBPWfjrr2SuLS9YaCbPfPwqr0qAAC9wHBvO0ibhr3AMV8798h4vcwgsjxdwD29YBO3
                      vOFysj0emW89YEUoO9/Qyj3ivYK9QCugumBVlb2iwjQ9c8WrPZgHr7ydp5m9qDStvBV+ib2Dyn29
                      at+Hvcg+rjxdPau9GPKmvWzRC70CdLi9A4yyPbozeD36nVS9SpM/PalDkj1CrCA9Em8EPfCqSjwQ
                      USO8AOgkvKCsUL0YorE83+SBPdLVdj19P8w9MTKOPWrilL0AKLi430LEPY9Avr0Aefe7BY2AvYDh
                      jjsa5aO941GYPUa4JD2M1Zk8aO2mvdd+Xb3Y+5W8wFzKPPCgbr1H17C9QBjMPACEor2uW4S9nRrD
                      vWfDxz2KvxO9AG8muqht3rzZ7409QGmYvCXjk718UBS9g4GVPaB4AjvVtb49QLCfvYXGp72nQ669
                      f66UPZ0rzD3R16o94K2ePIs9iz1ALBW9eK+lvIpzDD06nFK9xw4nvSPCwj1ED/o8Lg4BPQST6Twz
                      4H+9w64avU4BZD2B0I89Cc3DPQAIbjzQwee76nHFvdhkHDy7Ica9QkeovdjLyjxftIY9Rq1lPduz
                      lT3Sb2k9xVKIPQB3HL31GJq9BJLiPKWrlz1b7Ka9wOuWvPYNGz0A7Jk4SqZcPfMhXL2I+cW9AGnJ
                      uzDeODyZtYo9RS+6PWBU9ruAnRk6sAgRvTcFc732XJa9xVmVvb3yo71MUAS9LZ0/vaCcADtQqZy7
                      2MyqvLgTpDwZLro9078ZvdcVW73yHnE91+0rvQCqWTy5wKQ9Vdy6PdSxzLysVwK9TouMvbDk6Lsg
                      Bso8UoFjPbBCcjySGV89JoBRPaknhz1JEJY9oB0uO1CsbLxH4MG952mSPcC+dLxHwpg99gkKvQom
                      PL3tmU29+4CfPbKdj70gaYE8uE2PPE/rxj0A3IU7AC1ROtjJYTwNnVG9zSK9PabJqr3WAzI9Y8mc
                      PdMWeb2Qaxw87lo/PeC9mbvdh6u9ahgXPYtWkb2+YWk9y7akPXC7WjyrqK+9IwucvQ5ykr0w96y7
                      XkliPSK+dD3pq5s9q6euPQMPeL1YT1G8xfiyvcDqebug0KC7SKD9vJN+TL2E8d488t+rvQo2Hj3r
                      DZi9/JAZvW3/Jr1Y6Wg84I69O8rKXr3S5lo9zzLDvcwKnzzsBqi8QqQFPcwlsrzg+ZC8lbGDvb7V
                      Dz2AjwG9U+iiPcZzNz2xSK09vWl0vX12YL0Qe1u8ieqcPR1Pob2sZaa8OXuyPTB9qztMEqA8UOLn
                      u/hshzx4eb0814hYvTK0Wz3R0a09ZqoNPclSsT3inxM9obK+PWRN8jz8Hvo8zCiBPL3Jtb2yygo9
                      Kli/vWjYFrwNCFC9atq3vcWZhD1A1m274BOtuwx777zs/oC8OoURPbqvSr2aRl69hb2GvWK/xr3C
                      +gU9/cW9PXPFUr16SAa9KyKdPYVgyb0WQYK9bkMmPcD/aL3jBZc92TaJPdLmcD1SFhI9QsYxPWBv
                      tb14r6m9OBiKPBDIWL1/1MK9blsoPeitSjw8yQ69dxOQPRC0ZbysHu48PT4ovW7XXj34MLw8zcMu
                      vY05NL0husU9gCYIvNVVsb2baKE9HZCuPVDZ9TvyOFE9gLwhPPIvnr39xZq91N37PI6+Tj0wNsi7
                      6/vIvVh4lDzNKb496kuNvcZkRj0L77i9U4/JPdIUfz1S6U89er1uveh0hjxjjKy9IPP6O1B58bvg
                      mxa9SmUEPSBMT70HXlq9qAxqPBjehrwg5SS9UJaivW+dpT247Lq8RyokvQILnb1gW887F9+jPdIx
                      or1gn/e76vlDvehhQzz525o9e+2dvaqSbD0aCjw9CGnFPFbOB72GhjM9OswzvavWlT1l34q9W8KV
                      PQrXJ71hAcQ90MI/vYD6p7u2Hgw9SNyYveAb1Lvq3bC9QLVQO8DFWL2TuWy9uZuuPZRNCb3uADU9
                      Sk2jvfSQ3jzSMj49juR6PdAebDxQvdC7gMbVu+h3zDyvSbE9yDiqvBRPu7wA0U660z1Qveh0fjyA
                      xKu9UI5bvLnqvz3oXfu8UJGAvT3CYb2N+KM92F6qvHiA6LwjSLW9gJutOzeHs72a7Jy9wFVrPAqg
                      fD0tXZW9zsR6PQjCob0wDju9ADWTPFVrmz3SCXo9gOxKvRBHpb2NQbI9McWIPYJGND2uFFg9z7C2
                      PQmpmD3ySFA9LZiVPavJor0AEVw6GR6VPWLbgL3HI2u9CfiDPU6enL1gFji9AIylun57QT2i5IW9
                      qMqhvbb8Fj242aQ8tNy3vLHNjj2YEDM84luyvYbfor3D6Hi9JXiaPWj2Z7wHyL09mJGDvSWxlL3A
                      NPo6eY2vPUhuuDyAxnw8NOTwvP1qlr1SacO9wSu/PeQSi70L9sY99NPEPOqmdb3ja7O9AEA+vXJy
                      rb04vva8bsSLvRR0pDwxR4M9EZ61PUCi5LxJ+r09PS9jvQAFgTlyFrS9LM/pPPOzkj0Axha9aBgx
                      PNkwvj2QeAY8IBWgPDG2mj1aVjE9Fsl8Pd0VpT0y7ys9paKRvWuuzL0A+4w5NMGivLVxnj0AFmS5
                      ouBpPUCBx7xg4CU7sH6nuz7Rnr20eek8UqZxPTCXejwDm5S9CgJXPQ6Dq72qET89GGARPBd0fL2S
                      93g9AMDyOPZqD73A7SG8AA3Zu532lT1UZ8w8LQq5vWDsX7sA9le5JQqAPZBGLb3G8G49cs0mPQCu
                      GbvXnrm9wyuzvbNjpT1ATvC8oiRDPY7gEz16vyy9RGYRvcI9XD3M6Ow8CusYvS/0kj2MYgC9DUZC
                      vdhhtr2STzY90E/SuzKEcD0K1AC9aop0vdXgj73QEC88kn6tvX4oQT3Qzw886oIJPZ6uBz1wrSA8
                      FUmqvb6kRT1CzUg9BqVJPY7Rhr2yDzU9rPmJvECuX7zxto49kDZXvNTrkDwiKCw9DBvJvGrTZj1S
                      +4K9syGWPbo9B71UEqw8olQEPaD2frtRSMw9l7tnvbXqwb1sl+88OJXEvLPpcb0iR3o9DaeovS1T
                      xD3Xd1G9ivK1vWmAoD33XK09l4yqPa3vQ714gqq8lG+LPFokPT20w6w8uz2jPZlShD3EN/Q82fKQ
                      PTIWFT0ABMa8F2KJPUCuOLtFeoG9gKLxOi1UuD1UGYE8LTFrvf6Tqr0UHLO8WcmtPegXcTwA0zo8
                      cXe7PThMp7w1kZi94C7iO+hIn70aGVu9KqQkvSafB70Q4Ri9cNMoPEBPZLyRHIg9aNGrvDgLmb1a
                      RBG9putUPef1vD1+AUo9JkYNPebsB71Yrz88UOfEO11Wmr2wZAG8Z1d4vUdXu71p+589IISgvKfK
                      lj3mKJa9wBsdO6fZvr0AGLq57LqVvF/sw71grCU7pITmPBcQxb0wZbK7AOQmOsfiN72U88q8YtUb
                      PerzRb3uhDI9ZbKyvS9GyT0z0J49JWunvQCKCzxLOqW9ytd3va0ibb2dfbg9U5slvS1pgj16vCY9
                      yHTivOJJnr3QcW48sAoYPJ0tVL2CC2k9qEeUvDTnlbwsiK08jJPmPEaPKz1NWK69jSHHvdLpJD1f
                      a789glW8vUbrGL1ujZO9zIS9vENUl71oWcS9V2hQvVKkHT1DmEG9gqowPXvLkz2a7mi9wl6cvRBn
                      UL1pLYQ9QNiHvEAJX7wdnni9xX3IPSjxibzaPku9v1uTPfgZib2lK8E9H76xPbjZ5bzNkJk9sPQx
                      vMXlpz1AYFE8YHqvu5Oidb0yc0I9oDDXu5melT2Y8fK86rlgvf0axb3ucUg9NdHCvYh3tjxesRQ9
                      cN8lvAVOs73eFlA9kglpPeBHrzyMcIu8AGcVuooKT72g86y9aLxTvNA5vr00Fu88mJWtvMys3Ly6
                      PxW9JZOrvcBZFTz1+Iq9E8qcPZ2atj1ghmm7aI4OPFCnP7xQo667mPvavIuZq71CNhk9ACmRPAq3
                      eb3PcJA9fWW5vTVTnL0wV3u9cFlHvMN3lL1gSZu7LJ2gPPYTXT2FoMw9wjtgPZLfVz0DjIY9OMOq
                      PJiSj7w4gvO8gGnjOwADSTz9S2u9QL7APFB9pTt/dJk948ysvVgDrDyh+L09vVKVvW8wgD1Lksi9
                      hUiQPcnxoT0eKW89MBMgvbmUgT3eMEw9h76zvYDcrzoMvpe8AoMOPYCDYb2ucZW9VM/HvMW/sj08
                      Hdw8nTHEPXdJyb0A8pi8sOJAvRnqxj3rxbq9yBbSvHQurTy1wLW9rUedvRF9jz2Nw5Y9V54rvaB0
                      ILvpmrE9NHwKvUBsGTtiBL29AOTsOkUAyb0guS29NtUuPRPykr0ntyu9mN1oPCiBELwK+UY9L522
                      PTq7T73NVJk9bIigvODV3LwoCQE8Uv8EPQqUhb1QVOU79wk0vdQIsjyYO0E8dEmsvOXKub2QJVM8
                      HZqUvaBaK71rLLS9RC73PPArGDyo9qG9wBEwPHRgtTyL6sm9gKH2un4jbD2z4S29rDL7PGlevj19
                      I1u9A1mvvXWupL2xtMw9tUHCPZfuM73aJQY90MtoPOhIizwLbZS96xO1PYPMHL3s4NA8PqWhvWDy
                      Qr0a6Zu9MbuUPax/9rzT8jS9bn4ZPc5PIz3dMVy9YNwdvTd7QL3E4eA8L8qPPeObYL2AD4K7QGou
                      PICkGr3SA7C9jbCTvT2iqL1ng0S9BcGfPeCgnDsgUvm7BbeavbtCsj2b+Mo9AC6Eu2OkIb0A1BW6
                      J3G+vVoMbD2D8IY92N1fPCK8XD1ieEA91jMMPQ6CdT23MJE9SKHWvCoUFz2A19074J/nu9NXTr1O
                      xi89Jm0BvWQm7TxAdMW8PveEvaXtuD26iCm9XtVVPUQy4TzUcd28yoVFPRaDFD0I08u8sEzLO13H
                      lT1Q1wG8KLDCvcTP1jwKV2S9hokSvXUlhD0AgqG90occPSjXtDy4NbC9kRa0PaAlB72XRV69/mOl
                      vSm7kz1ycIO9S+WNvQ1eib0Aocc7psIsPeCKrrxSIE49koxYPWgYMTxwD2Q8WjAJPQDlqLw234m9
                      YBX6vKc/cL3haMI90BxyPKjxvL0Oij09/4CJPSBZtLugpWk7wNedvMZyB70FR4K99LmjvFOKwT3t
                      B7o9IyuHPXYlEz0ZSpI94PXuOxLzJT1alqS94disPdt6m73mhBS9IZKJPVD/27tMpZS8gCYHvAyz
                      qLxA+2W92IQzPLbJPD2gvj27UMHYO45kkr03akW90HVqvRK9qL0gXQa981FZvVHrgT0dT7A9yIzf
                      vGGzgD2UGK687M3UPGDga7vA6zM8zPiwvOZ5Mz1QPQm9MVmLPdgWFDygEbA7DkptPejVFbyJjrM9
                      Z9rAvZDlmb1yUj89kodXPU2xw73YaiQ8drKlvdiTNrxmwoa98qw9Pe4KEz0qLQy9ICqhO2pWWD3i
                      XVg9ZyzFPQDUPTyoUTk8I1RlvdZqk73een89DNPzPHHYnz0Y7DQ86uAhPfo+Lb33/ro9kG8ovWi8
                      mrwatYa9yukjvTe1qz0AdV+934TDvaj0gLxzGXS9AN06PKsClT3FSZ89AHEKO/6Jkb3Kvgq9sEE5
                      vZX8nL3y07W9khxkPWp2bD0A4X66Y4trvSnvpT2Fjsk9BEkUvVr9Sj0Mh8G8gIKJvdgiITxVhYm9
                      ZB7vPE4Mpb1/Fso9ALUuu6Dc4rtCKAo9C1fHPdjjkryidik93qFUPX34uL2UVou8gHHDvQTFir1T
                      TCe90NYzvJHcgj1Dy1K9kK9FvKCNVrvabFE9KcOQPQssyL2Ypli81z2KPUj8vjx9V2S9onwDPdi1
                      gL3jASS96Q+xPdZiKz0eRlU9my27vZotZD3s8AS9uLWIvKVhrb1lK5s9cjC1vcehZ71Uzq480dOw
                      PYCtproCUng9xBvrPKhS6Ly0E/68jPHiPIoHu71kxfM8qOc7PFB9lTuS/j89WKEDPK2hI73ryaI9
                      Ep+xvU1Vlb0YXHW8sttFPZ6FfT2lu8a9gDEgOpg9yLyuPx89Iq9DPUz9k7yAOf+8cGYHvHiWxTy8
                      j4K9KkpcPaYGcD0iJXo9G16FPUkqhj0YEJ688JSNvWgmrzzaykC9zvM3PZHtnz2ABuq6nXSfvQeb
                      xz2X+kO97DbwPNvFwr36JQY9gDVpPE7cej2WqS89R0ZSvZ0tVL35k7M9G/HHvWBZFrt51ag9GvMP
                      PbXMkr0gcIW7I4O7PSDPnDxgKa291suIvTRk37yjHje9eMiSPMAHbztgltu7gmgFPXBFgr2Ilra9
                      n7KzvaR4Fb0sAwq96AqlvUvQtj09DXC9Z+x7var8d73AZPQ6jvN6PXjLq7xnDZw9IFWXO8+7iz2w
                      gXc8d3FsvZMubb3gaIA82PhivBTmDL3icAw9svcNPZgey73epXk9scq8PWbhMz0Jwq899OTAvEAD
                      F7z0KRi9ujphPX95tj1Yq4c8JKrSPFAwI7zgw8O8AFPaufOtM72o92Q8sKTbO3ADPL3KQx+9tP2p
                      PI65Cz3EZNA8NvqdvYHDpT3snoa9TXiwvVbNBb2AC+g61d6wvZtglL2jKr49FT2zvVNbY73Kkh89
                      Q9tavWhZx7zoZsm80putvYk/oD1XiMm9xV2TPdQGmDzA86m9SsAhPb2Zmz3Crmc9BZ21vZ0iZ72M
                      OfW8HWyBvRQl7ryLxJw9dg05PU7hpb13Q029bkhBPWdRdL0AQhq8AANWu0tQuj0Zt749qD6Mvbdd
                      jj22SRa92Z6xPe3ZsL0C24K9esYAPVu4pD1j7Di9VUGavTjlwbw0moc8KfCrPQC1f7zgpfy8oLJy
                      OzoVOL19o8M9ibOoPaeZTb3a74i9cv84PatGmz1Ng6Q94NISvTaBej1xlI49YK6rPE9boT1tUcM9
                      IzhnvckLmj1RRp09uzyRvfatfD3oLfG8kX2wPajpg727e709X/OAPTR3nbx4t4W9opxUPTCvejzL
                      w8E9htQTPVRqwLxenKa9Ped5vWT4gb2m/AI9ExxevfjjtbwZF7g9Yy6svSf9ij2QWMu9lzRnvRVx
                      rb2mvB09GCmqPJD6fbwoDN+86HBdPKBXPTvoLws8TBegPBiXvbxburQ93slzPVBj57vA6Fo8jLrd
                      PIAgubsgwuW8EHZMvXuqv71ePp291osVvexg57xXn0q9HTtSvchAs711R7E9So1Svcx93DxoG8y9
                      0wU0vQ5HVD1Qzy08GGBcPMS7hr2hMbE9zFzrvFCVAr3rjLG9gDnxO3zl3Dwg5Oe8M/O6PQbpib0a
                      8Dc95kNjPWqix73XDkK9jUeEvbCTnbt6xRq9zGnOPHiv7LxxWcU9gDeTukhJmrzMYuQ8dN6bvLm5
                      gT0gXOC78fGXPaDGZ71gNvm8Kji/ve1kMr2/2Yg9gemUPcCXx7zATEM8QH5eO7lsqD0tLpo9/SSC
                      vSHFrj0gM5G9iipvPWlumT3AMrG8qudsveOGvb2SYE09AEFtvBSfmrywwEu9HnqlvVj0KDzCZ249
                      O7e6vfkflD1Xlie9bgRsPWqREj2FHqi9fEUQvdDdurv4CYa9wFgKOyuUlL24Cc2829uXvddwtD1z
                      RFK9WBfHPBduNb3qODU9tpwcPYDXxTs2s2k9YPP7vJlfwD1gq887kxqbPSBLf73RPLI9tOPOPMBG
                      ibr6EA+9B0m6PRqmx73hm4Q91G/0vAZ+ir0AB3E6rEKVvNI5cj3s4Oa8SgJ2PW2ggT0zD6E9LOkC
                      vdFllT0gnY+8Osd+PRha/7zaU1I9Mb2LPezfljxJ6YE92OCevBSSkrwjWYs9QJSTPFqxPb2sZ6I8
                      IK+fO0lNrT2Ywki8CpEcPdCdQDwA13u9MQCaPZj6D7xKz8G9xzoivdqjq73f/ps9Ff2QvWqjvL3c
                      99A8SauXPWA7krsIxqu8UDe8u4Be9jpOwqm9ZOnvPPNxTr1Gikc92BA0PCgywb1HVB+98p4SPXRf
                      tjxyoio9KSzMPY7+Aj2mWqu9gPKsOpL3Vj09I3C9WFYYPADavbp13b09B01zvUxbgbwqU1a9AJrM
                      OZNDtT3sucW8uSeoPTTywbybNcw9C+OpPWDpb7s6tZ29cmhIPWA0ILtAyVy8aXnFPftagj39oZc9
                      2KdhvAULmr3U0a28szWJPb6VEz2Q77u9ZXyevQDggTntg7g9cLdwvEA5irxQLy+8AI6lPOBZfb3b
                      r589IHufu1cmVr1M/Ze8rjBDPe60rL0giPO84C+jOztfnL0o7Z08gj8WPT2moD0AVMG7YNWyPOM7
                      wT3HYzO9PZiDvZTdhr3ia0E98eG1PTANjL1LY8m9yF60vap1Nj0XT3a9UEa5vQamUT3wbGO9raCW
                      vYzYEr2YYjs8Ogd3vUGTyT1NbU29JUKOPZAEg71CFDk9NUWlvSCQk7wnRZ49LCnDPCMQq71A25k8
                      J2kfvTpiSz3AOqs6YYOGPaeXwr0alzc9bLH5PBp3dT1gh5i7z9vHvf+Twr15YZc9uKeXPOgi+7x0
                      HZo8pgWCvb3wV71APHs8cApwvNCH+btxrss9hcy4vZagGj1GVC09m1SvvcBhHrzoGwq8/GEIvSic
                      crzj1589AERaugST0jyhEqQ92IZZvJAhVTzb7bC9+BmtvGbyZT303s282FJ1PKx0sLyH2pA9Jh1v
                      PUPDIL2Apg+9ACMqu1gLuL0wbzg8w0G5vZsckb2WVxC95dukvYyr27wCtAk9tFTSPC3tlD2AD8a6
                      lBiXvK1ZQL1obLO8MG02vLWzuD0tyWu9oO5QOxazCr0Az+C703mePW23Nb2cttc8JRmDPda9l72v
                      x509Ik8IPWAQyTsVm6K9l9xwvdJNpr2AOeI7h3aHPRDCOTxaUVA9QEFhO3CcdTwZG7o9FtgXPcC/
                      DzxlRIo9YDd0vcCkhLwQpEW9cS3EPd3Dnb2WmJu914YkvcaVVz22kVM9UhZqPbOsrL3nqUC9TDic
                      vKMINr0ysVE9AGSrOjY4Cz2lcJy9vkwSPRtnx71CV7C9WMmvvHHXvz3dwZk9Vqh3Pf81rz3G46K9
                      GBTJPJHEuz3dYza9urUEPfK0Rj1OjiA9sshiPeDGP72x88Y9NBm8PIDAyLq4LoU8UumjvSPSvr3u
                      +Hk90DtnPPA1or0kWdQ81aW7vWyl4LwI/qa9/7mxPU3gqz1iYVs95yySPX3pcb1KxH290A15vWhP
                      mLzYj3C8FbenPR+GjT1smYe9iO2XvIp8kL0ZB6I9EORvvXqFHL3YQby8kd+APfNSr71oTws8/4GO
                      PQAKrjxmUwG9IEacu48gnD1AM+C8ghSBvSAzpb1ty6Y9sXCVPaEMgz2Z8pQ9zba1PZpIIb3m/6q9
                      yuTFvdAerbtsfBC9OsSQvfIQlr3wtEm9UPKnu8KnpL3GgUs9tejJvVRMyLyKfRW9UJYZPAC6sDur
                      GMW9uDiIvQA9EL0sHZ+890Jevb8htT2MAac8B4bAvd1+tD1FFIK9XZ4+vdNRrj29EaA90NSrvUBT
                      qjpUHuo8sqQKParToL1Yk0i8Wp9uvXvOsz0uN04981+3Pf5nbD1+NgU9OIanvcKcND08cuw8EYuQ
                      PZgSnjxCwDg9PlASPZIILT2oPSW8tXiVvRYcAz2k/+Y8qlMtvUgppLx6pA69LviSvSmOiz1AEeC6
                      rhgRPaAPeb3ZxKU9rKfYvOUkwT27dau9wqNkPThLkTzC7pi9IulPPYBIjbxnAao9NL+UPKoIBD1w
                      Aou90G4dvPcvvz07JqE91wahPce+xz1fV7+9xBKLveyc3Dz9Ab89WI7APNtqlz3nTJ89BQC3PcXq
                      hz0qfji9xz9FvVdbhT1M2Pc8kw6pveiIubwijiY9WyHMPdJ3Oz2b1ri9DC6ivNAbAbzHicA94NCy
                      PHpVg735I5899jwzPQOqMr0wCaO7iFnjvDji/rze14e9hr5/PXW0qb1QoJC98QuFPRppDr1xmqU9
                      tmaBvRfJaL0+CYK9AEktPI4DGz3YwF88zMGHvEDxBr2SuTc9sKZhvcpDw73YI968wRatPVDjI7ww
                      lZI7FXOCvQAdOjytzMY9k5Bivc9Syb1gyNU74C2EO7Q8pjz0Ncg8x7esPQXGlL3Q4l48QxdYvcn1
                      vD3/vZQ9AINSPK1+Sr0daEa9yQeBPSBOrrwZfKE9gqMePc4lnL1Aq5o6iI2zvCC0Vb3UoBK9M1V2
                      va26d71yVCg9/tEpPYB627vtazS9Rz54vcmdkT06hoy90mpLPVf6Hb20SJ28gDJvOtRAoTwvFo09
                      8LMOvb3zZL0x/489LQROvV06qD1s7ai8V7ItvRfvsb1A/DU8AvIBPbLPUz20aeC86LqkvFoYE71y
                      7pG9/p45PTz0/DwA6Ug6dFOGvKh/zL0AbKk6YNCmO7otwL34Oai8UfCLPfTkDL0bcci9BNbiPOI+
                      Yz2QBQq8T0jHPcBVELwI2tO8kIkXPIBrfjy4mZW9lMiyPN0IRr0oAAu88CBtPJcXub2N3q29gPFe
                      OlrAqL2YeJ28bbZEvSiOvrwSJkU9o4RdvZ9BhT3oe6s83X+lvbBOjL3Aer69yvW2vehiZ7x8UIm9
                      y6qyPdtiiz1cMhC9NDmwvDsAvD0/Ysu9eJGwvTi8uDwarlc9Z63KvcUhpD1xk5k9s1QrvaK4kr3I
                      NfW8HZE1vaBaJ7uFWMQ9j/GwvcBiQb2zHJs9AQqGPej/6byD2aC9KKUovKqasL02CXs9AGrPuqOU
                      pT2k3eM8uBnCPMwEq7xtimi9Em+wvcwt0jwgYEa9UF1CPKOKKr2oXb08MAWZO+Vai73LXJK9sdmm
                      PZuglj1JUJk9WJcOPHwvDL2Apbi8WEmOPA3+qb0CQIm98mOavRfsPL2APNU7V32HPcBUfb3adF49
                      1MeePEgn4bzoIsu8SZCxPVuyoD1QT2q91f7JvQ3Bwb1gZZi9oFUHvQpyXL0rw5g9KFtWPHQS2Dye
                      X0k9IXzFPZKLaz2wixM8v8S3veAnkbs9bZ09wMEGvZP0ar2B05E93E0SveJklL2gS6O9sSOfPaYF
                      Cz0wjW281o0CPVgGjryzLpI9Epp1PQPJZL2weCg8AGlZuy2ssz0w5VA8GHGjPPDZHb14xJy82LwE
                      vOpemL3AKKQ6zCn9PPA+UzwNqqS9tLnBPDS2nTwgH7e715BxvY2CRr088Ai9Z0xTvRCjDL1tsKW9
                      gs85PQ0tsb3I8569/kKPvVgCGLxSCU496fiQPeKYMj2wfdC7gJUvPBenkT04Pcm8bjhfPTCUarwK
                      Pqa9NPyuvEoLV71NZbi9og5UPYApZbow6KM7oAbWvAYVk73dd2m9wLhZu5hZi7322AI9fZMdvVD4
                      Nrxgjcc79TmAPbBaLbwiXjo9gL61urAZm73g+L68iBu6vDIvur23l3S9ADyovAKZOz2mPYe98o0e
                      PVgdwjyAiIy7aES6vb3wVb30WJQ8E80lvW05r71T+q694nwlPXxnjL2yvSs9hu4IvXAFpL3iijA9
                      UXGlPYA/8LyYvd+8QgMTPUVYoL3UhK68+pUXPUKTez31tqS9QPp5O/jBhDzC1T89MLFZPCPVgz2W
                      ZW49zd/BPZiXVDwzXRy9cDVuveBBwruiOZq9jNeUPD4mhL3DNXC9ACBbO+dBlD1YWTk8bR6svaqP
                      Gz3HFcY9AM+9uzBAHbyAgHO9JOf7PIVVtL00lq08HyefPePoob3QyIc7IGFevR5th73TJUG9ENMH
                      PBgjvL2Q4nQ8wIgevISF+jz9Pl29GNmTvC2DPr14rcu89t4EvQDCr7lUvb+8A1OyvYo0Fj0K5G29
                      KYWmPXODuj38r4K9dUi9PYMst71rmoQ9hT+zveCYur1gM3q70JM/PJOJur18W+I8llplPYzP9Tw3
                      WyO9tKStPGipnr114YI9SY6fPWlQwD1IM4K9ccO7PTFUoj1a9X09OZCmPUEbpT0VmZA9wD9pO0xo
                      iryYTVQ8AKQPvLNwJ70C/C09yKCdvHR13rxeqnQ9bZCJPTcdtL1MpME8Y1OtveV4oL0aQrS9IEip
                      PG0Fwj1XMMe9wEV8PJ3xSr3sMpa8NpEzPYopf71M8wi9y5uyPZazDb3ll4W9t8ojvaCDN7usZcU8
                      sGF6vYAn+zqn7Me9urs2vfkdqj2pYcs97e6vPbpgIb0bs7E9AX+yPTD+OzwC8ms9sNZavFANrztC
                      4Fk9wqGgvcxW7bzPaq49wyFLvaSD2zyCyGo96jRmPVhqmb1mjo69VwwqvagsmL1As/s6gL+6PJBm
                      dL1xTbA9Q3uoPQDEErptuJ+9OAWwPNKgVD0pA5s90FoCvVhvSDwTc5e9ZgJfPWa1dD0Q+hS9pXy6
                      vR49WD10/t280m9/PQA0/LjHqTm9p32+vTUIkj0SN2c9okklPZgXlr2avTQ9TLfKvDQO8rxfEL49
                      0FP9O46NaT3waUG8emBBPSAtbb3Afze9tDHJPDjsiL0A+yG89rtdPeSA2DzAans7S5uTPQX5vL0O
                      O1Q9cLMQPOhFvrz0UaE8M8XKPbD+m71Q6hG9DNKGPAVkyr3qnhA9gPOuu5ijtr1tubM9flCrvRKl
                      Tj2Ao9i6/NXQPGi7KryN5Ja9Ss2EvYA9zDxM8MK8cDJ6POYBk72g6nY7XY+/vcbLOD0K+m29sytD
                      vfk/hT0zCKW9mUmkPV8qx720N9Q8Chp1PawO1jzM/gS9b8m9PSPYs72INo691L6AvO1gQL1jR0O9
                      AFuEvGh6GrydNS29gxayvVIcJD1qmxW9WuRCPQ54LD0yvXk9YLXEvASR4Txord282CLcvIJgUj1z
                      /Js9EiwaPWolw72AZYI6X4CqPQcWwD3mQXY9TQmwvbRimTwwQ0e8aw28vZhpeLyrwam92LuXvdJK
                      WD2BnaA9lBCnPNfKXb3ZcLs9w8euPYkohT3oYQ+8EhLBvUqpPb2w+Ae8/3DCvfdISb33SEW9AH6T
                      uvvbqz1yNAw9TmR4PbOIKL3gKaC7XZYavW2xob3Qh7C90Kfiuzihvb2w91m8EDYuvWwDrzwbFr69
                      MHN1PKG4sT2wKZW9DUjDPbQQgjwAOkA54BidvBg9vrzzQIo9yPu3vduTrL1x4LE9tVC+vfO9Ub3O
                      JiY9DgabvaAULjtmSnM9WmdLPUwyiDzT/Lm9M11DvVqpPT3KKFM9zAP0vLS+h70HCzq9wCLEusMp
                      tD0zlYM9QVGhPVqjCD2PgrA9GlE1PVnwwD2daK29NCX9PHbppr2q8mM9QFAYvXopLL3q4RM99qRa
                      PeHiqz13cE+9ULxDvecOTb0wYy29WF8OvKJlKT3QwDi8bEwCvYWDw73T2rI9YdKOPTDxSLyzIp29
                      ERScPcpfI70A37Q8MV2nPUWdwD1iQBk9gry7vSAY1rvjoS29qNAJvCTyib1gLcK7C06evbA1DL2F
                      T7y9ulNQvbMhnD0UYQC9MAm8O7McpL2Lg4c9gLqMOkSbCr2ZDLA9VWisPUDLfLwrU7g9L9LIPb0K
                      qr0yxXU94Na4PO0vUL33RJM9QSWCPX03W72oqgY82HxtPFlNmT0dLIg95bCWvWOEjT1E2P48eskG
                      PQwI6DydiG29M7evPWA8tzyijEY9c16uvasSnz1YhZK9iP6YvT1Ak70y4Xg9noYZPf15zL3Q4bA7
                      kGVsvSwPlDy2YG49Bg9oPR+kgT1j6rC90yGOPTMwr70pI7g9RC3VPPWOlb0AyKo71+ExvUgjzLxt
                      dK+9AK+7O5sgyL2YzXQ8gEemPCWgoT0kc/E8cAhnPPkpoj3QBu47yMG4PONMoz0Vf4+96CmgvIj7
                      1LxsI868YMiuvC4LJT0MLhG9oJR8u6hkhrxwqwU8N5FUvez8tDyYoYK9GvlavYoqvL2gV7c8nALp
                      PABHS7ssVeY8DtyNvVi0w73hp4o9ZE/UPHp/sr1aPwG9UMCPvd00er3QDSs8gDvgO4wZi736bls9
                      VG+IPGh7nLz1Sqy9NuCjvTpXgr3zFWG9CsZ8vfiiw72tXVS9mUmYPTAs4jugWqs7mg5qPUDWEDsm
                      fAm9UMrlO5hndbywNY+9f9i5vVfVI73dwo+9dBILvSgJJLwm94q98jJlPVAS/7tqo1K9z9OQPUt/
                      kr00Bes826qnPYIUyL1K7hA9nZqRvSi+gb1CS3c9drqHvfGphD3YeEO8bpd7PUBbTLssmJU89AqO
                      vFCM3jsYqfm87JXhvCimHrzS2Iq9LVN+vSiXQDzZSqI9GA6LvThgwzxA97q8+eKaPTM7Wr0wyF68
                      XK7SPIcfqj0YHbc82/W6vZpfcL2gY1S9qKF/PNe9Tr0Al2Q6mHI+PLgjoLyAkqg7zxCKPcAhObxp
                      I4M9AEE1uhJ3eT10CNM8c6SXPZ2it70tW4K9rvFXPcCWJjuMavu8dNO+PEBzhTzyZbm9KJibvG21
                      Qr0GR529/MLiPLNqdL2kpuY8SL60vQAYAr3Hv2K9QFJrvHqhYD2+HI69No8KPYx9qTxboLy9oaSA
                      PSJ9XD0dKjS9XqQdPS4RSz2R0a49RaqNvQkeiD1GUAg9W6enPQr3Tb3lSJQ9r3eZPSgnv72Bdss9
                      V1M0vT3dlb1A/jK7wUucPYqHC71ox4a8SPqAPP5IST0p88U9ABTSuNnqrT0sfu88XBndPJ1Yvz24
                      9aa94KnfO9p0G71jun+93tCPvWNetr12kBC9MpAxPZ+7vT0aJL+9+pW2vbGVqT2wFGq9phlSPfD/
                      sb30Jhi9gmsTPcIYez0A0dA7EjF1PTAbK71MgoA8NK/yvBIBFj24YaC9czDFvfa9ID0qF7K90FSG
                      u6Su5jyS21M9Kve8vbQ4kzyI0pQ82M0RvDYchb1oiZO8boc6PecsoD2ylz49BhoXvfgAyLxgKzY7
                      fYGFPRjUPTzckto82cWBPb6uLD0/3L49slGRvfokVz0grdW8VwCwvQCZSbrSaGs9TloJPcGwnD1D
                      Spm9dFeevE4JDj0sQNw80pogPSjFcryD5Bq9w862PbN7pj16SQk9YHBXOy+twr0UcRK9EbyNPYbw
                      Cb05vqI9KNvQvFG5gz2gvQG9sNANvIwwxbyT/Mu9/3+YPUj1xrzvlL29GxWkPQJVvL2ojZA8fRWI
                      vdriE72IPZi8IAH+u+gRHLztRiO9/TufvUDYjb2CY209mLp3vDg/szzOIFw9QI1cu/BNeryzaii9
                      gH/eunChUjw5ubE9Pdc+vZ5EFD0qmhc94HCDvIVbyr1pmMY9r57EvR6tJz3I8t+8YNiUPCuMt70d
                      0bw9Iz2avQz0iDxyWSo947yuPTKBSD1S/UI9BvJBPYVxgL2AkRy9RKzbPEm7uj2V+oY9fRezPV1J
                      hz0ssBa9d55/vSC1ljuww9K7yKOAPIAk27xPHsM9wF1JPCOvkb0zd0e9MVu1PdBD7LsYHtC8wdeP
                      Pbc9nj2RH5w9qoNgPSiSQzysLLO8BqcmPXD5kL1gkMw8n8q6vdSEhTzY1tC8qIAJPAQ4Fr2bjIE9
                      4DmWPM0eP70i2I69AFg5Oqo6v70jtLy9YCdVvbC0GzzEVuU8PHD3PIToEr0MBI28ACubOWDjHL3M
                      mfs8cIFuPAAWBTnMeIW9x9tUvUw0yzwc24S9mVq6PaCiyb3tXVu9GDFPvFDtHr1oLCw8rT6fPVB9
                      0rszn2u9FA+tvIgvj7xz8709mlgoPdgAPTxNtI69NI3yvFOLN710fsi8ME6eu8ArxjyyOjQ9h/Kv
                      vU2TTr2gT3u7GLSDvVhis70nGU69ayHDPQBqojm5Fa09mHMxvAAkf7tQ2aW9xaCZvZh3H7zA5HG9
                      bALIvOGdpD2Aj3q8UwNzveX5nT01a6I9VpWjveR1A71Shoy9m7u0vezG0bzgqWC9ml9OPYAFD73Y
                      DpU8DOGHvIVTxD2IKKy9BWGGvVyTFL2lwbk9sH/ZO6BEe7sCYSI9TUZkvQgmub1QGd+7ytWovZhU
                      CrznxWC9d59MvRogWL2iqTk9c1MdvcBqjbq7fJo92PfJvCeFZL3Yn7o8YNdOu3G4wD3iYXc9wFjH
                      vULRGT0Z0YY9Imi2vUaim70uSSc9oG52O8KxPT0grbe97J6hPLNDXb0gUbg8/v5ePRgYfDwyap69
                      Wgy8vQDFd7yBioU91j1ePQw1rzzaFC09BiOBvdaEmL06Pnu9d8OwvYCaAzqBJ8g9guyYveZLmb3q
                      fEw9qG6SvWjfqL1FPpm9iGyxvf1Cuz12Nho9kDVnvUjrtDyUmJU8xe+fvSdqX728Sec8sMqPO/2a
                      vL28+eY8XfdrvYthxr2bV4A9rU6oPblNpD3VGIM9AOWyvZgZybwtNsO9CKaiPI6kID26vpa9qOlO
                      PBWkur2BAZ09QEUIPJeOs72XSSS9VaOtPY6WXz1qwQC93xWvvQrMHb0Wqo69nQ2SPXQSgDy06sq8
                      pxlHvWP1nj1VV649guWGva8Pvz3h/q89xWHJPeh+pL1tuZi9gqtiPWJkjL0dCna9QLinPKn/yT0A
                      wHo5ohdaPVh8jLwb/4g9BZSrvfBTcjzgp928RzU/va0Rjr2m/BG92CFQvOYkgL1jsnq9GEfHvKfM
                      kD2YhYM8U6ZHvWIDLD2U8gS9QzOvvaBqaDsG+jg9M7+ivT78fD02ooa9sZKpPRcMzD1nhXm9IOTE
                      O1ACdDyt2aI9ClmpvbDNzbuiP1M9+lMPPUdat71S1AA9SmOsvRDEIDxqkT4977jEvc0FJb0nQDO9
                      EogqPX/twj0iIwo9J49LvX+Gpz2qXT294Da6O9Y8pL3MF9O8CaGkPbTRvjzb75G9zoElPSBfOL0Y
                      Jze8CZqsPdAkDTzogzg8qh9XPX1Gnj03q5o937a6vTbRBD3HZbg90FQwPBQlvbzEdd88mHVyvFbb
                      UD3G/SM9dZ2xvct3nj2BW8c9KaqbPbjonb01s6090DV+vd/TtD3w4Ja9rA6uPECkEL2l2qq9IDa4
                      vA1RXL3qGIu9AGuJOQ1ss73k3OU8Bg4BvRY/qb2Xiz69LH+DPKD+rr29MKo9jMANvfoPxb1n3Fu9
                      mEvSvAPObL1QYXO9iU6iPYyBrLzi0Ts9wFxXvbC6KrxM5OW8/g1bPfAYDTyYUoO8AMW7O1/ukj00
                      wbC8upADvTG8rD0IlvW8hdXDvTGHkj0tGaw9UDcwvThh8bwSs0k9rskgPVNLO72AsYm9AOpKvcJ1
                      Oz3CBB097UBXvWcuWL1Gzg29ScHIPftWv71AG5c6qCbJvajCk71qSy49sKccPAzPvryHqTm9WNCu
                      vfYALz0gQIq9g9Z8vRKsID25lMo9tgNcPUI2uL1ATSK8QPrCvLa3Hz2sGJQ8oGyOO929uj3Cjwk9
                      KvZQvT+BzL16OEG9aFEHPMBDlzwqQ0O92eONPfI7IT0ghqW97U+3vTpkNL3DmJE9qAhOvAAPF7ro
                      LZe8VnoDvfHwtT1gZSY7L3yCPXKVcT2REKg9ps0APURX/jwg2VG9d6NyvQzHBr2yBhk9OYuDPUDF
                      MLy3cCm9QuoHPXNQLb0hJIo9vWS8PUjhv72DYxu9MDTIOxS+wjxycaC9AIEHvY2Ivz33y8S9Z/lw
                      vXSl2DwA5By825fFPUiIxbxy2T49mkAlvQDMJzku8jU9KpoyPdHtpz3oDoG8LtA6PQGSoz0skA69
                      0x28PVtKyj2yBFA9amtkvSNyeb3AHTK96sxSPbywEr19cMu9qBhtPDqXdT1mWS49E9JgvTTU5zzH
                      lZw9aFfmvOwNwDyAd5E7YgMqPZmsgz0P0rW9kPNxvbIqJT26Q2C9EY6UPceWhz3oavW890XLPdhH
                      krwA2Wm8+ixDPfE9yT0SnQM9IpUvPa32Tb3Tbme9YPdDO6jZmL0TYGa97GTyvNejML2n8Z49k2NE
                      vVRO1jyoolc80IWtO1Bu2DuCyBw9c67EPeqYM73eFkw9KBO1PADnEDpyG5a9DHv2PI9/x71HGJY9
                      iZXMPTtYij16ODW9ANrBO77IZj0mQGI9wIg8PKAP4bv45pW8sncpPUANRjybtb89AL1tPPE5lT37
                      Tsk9AO83O8UInD3Bgog98dbKPWqqFz2foZQ9IIqMvCHSyj3Vmow9pJ3TPELDCD3AGn286vMwvVXE
                      qj1QNNU7WgcYPYO6br3e2xw9Rs2UvbW9kb2tP4K9+hlsvZnZuD3l/rc9Pu58PYenaL0aDUO9yAvi
                      vOh9n7zlI8Q9fV+4vcq8ej1np369+oI4vQLKbz3Gs2I90BS4O9XKgL2mjFg92ohUPXSX9Tx2BBw9
                      G5Oivfz/5zzAtmW7Dl9YPYOtar0b0IA9O3K8vTKiDz3Q+W28HjphPeqqhr18sRK9mcumPdGRvT2q
                      mWE9TODuPLGsiD2T0b+9SG6nvPYfnL1YWCO8oOLuO4B6hLyMyfi8d9Vvvd1owb0A0P63CJC0vUCp
                      A7ug3pm84FsCvRgwWLyA3gM6Mv4XPT3DZ719OR29vRFyvQAzojvA+As7oxq0PWdtK70YYZO96aKc
                      PU66gb3AQ6k87ybMvdnRyT0wv8C9DnGSvZoMAz0xbZ89EV/KPfQkrrz4w7O8ABLnObByzTveaEU9
                      2FPDPMELnj2goCW9Ls8NPQBDC72TKnu9twTIPSNukT0C9Q49suMyPYiWq7wno8c9rcWBPfo0IL3q
                      ugI90Fp+vSLWcz2ajVa9KC9rPOLGAj39z1u9qiGtvTfzkj1IfKC8koF7PUBAIrsIUYc8GSuCPZgq
                      FTy65rm9FMjsPJEIij3Xn8a9sV+ZPaB/UbuS76S9DZSPPXk4wD1JN7M9CL7svBDtLTxrR4E91X+s
                      PWG4xz1sqfS8FowBPUizgLxUjNU8mnwvvdZ8ob0+25+9UJ2XO37TFT02CEQ9onxmPQJBRT1s9Le8
                      HdQwvYzBtLxW+Cg917AjvX4WaD2IgYG9AHFaPGDWqzyiUz49T7KgPbT7B73IfcO8CqGOvZP3pr2o
                      Df28gFT7OzSv3zwAXEu80opnPYAXjjwqsRg94FvFO2BXHDtI2pc8QEHGOkCiR71W2Uw9OAHNvOJb
                      Cz3xUJ89XVIdvaM3yr0ACxC6LB/PvCXSlz1A8FK9wEtevJeYjT1/CZI9zd6yvZ31S7381fE8JEcE
                      vY8phD3AtNC8QOayvTgJ+LzAx0m9wqUFPU3VUr2AOqK6wFYzOzhGizxwF1O8WtpjPYYgTj00poE8
                      uHzMvKjcNzxoMqq9AHlhvDcWyr0V8cW9DSosvWexO72Z86492FXBPHazaj02KT09UuiHvQBjTjoa
                      O109015lvVp0D70pfJA9osd+PQA7RzpAEQk8Z0nCPaKIIz2XUTe9KOtlPD6zEz3Ina88pg2svUEP
                      xj2io209W5XJPc++wD00B4y8voNdPQOnqj2axKu98vMtPbZTor1lx60905o1vbSLjL20Jf+8rMXC
                      PPCMILy0UhW923yCPdDOxrvIL4S8KLudPDCpu7sMVpQ8xpAqPRrrQj3gf6e9qJ7rvAWInT02L6W9
                      ZhFVPUDMuTxYPXU8f3aLPSAflr0kMQu9MdOKPS1Giz39r8u9bEPcPFyZDr2j/l29gyxwvT12hj1q
                      Rxa9tlp4PWi+aLwujxs9IHuhvFegQr3AlRG9uH2/PJdTyb2QsKa9KIKQvfrkDz35Jrg9MGHbuwTt
                      i73+qnA9OQSsPSB+9buGC6y9MEl8PP9MlT0aQom9RvdVPUblh73K0Ia9mDdlvLio0bxgmqu7uoo3
                      Pc/SmT1Ukfw8QokePYBjl7ywXXQ8U9OgPWvPm71gvmm9Yx00vUm4sT0oCT48dGrfPGu5yL1jM2W9
                      8h8DPYGOwD3LCpw9cuZvPeqPLj2gYWC9iDL3vJD1Fb0BpLA90LUsvLIUl72Tuxu9iUelPbi9kryD
                      YMK9JdKxPXjXgbyA8wK8wKtgvUDwUr2S9UA9kA4yPFDdF73Rf7A902w2vUpmWD1AuC87EP8/PNSj
                      jbz360C9FwZ8vbKLaz16mZy9XKqFvfKsET2jT529wFm9vRZDBb1+Zqe9upKjvTqhQz0Fv7K9AI+q
                      PAoGcT3pH8s9MI2YO32Unr2tWLC9K4XHvWoTpL2ttoQ97KHevHJCSz0zcIE9abGYPR6/Qz2Axou8
                      UAUpPCN2ij1YWBQ8Lw2PPSdFwz04Up+8jqSjvaAIU7uYW588spU/PYwQ+jwwWpu7wEZtvcBiqTrm
                      KBG9IBR8vYCvYLwjj7u9HTCEvVjDZLxkCuE8Xls9Pe7nBz0KeDC9jZ6hPZroJb1LfZK9xK7pPIFE
                      oT1SrHE908WuPSAMg7vHcbO9IW6UPRTa6bx6PzM9PzmnPbDEI7zHx5k9ckudvU6cGT1AJXy7oFFc
                      vZp0tr3Vx7U9z0OyvTipkbwNorO9FUjCvQXNtr2gUdk7sj6hvWz2ojw6PYa9GscVPXF6jz2CT729
                      CzqEPfuurT0A9AQ8WpZUPXIITj2lP5Q9jLvDPCiihL1nxHG9mhCWvRSx9jxZj6A9+CnxvLQJnLzE
                      CNc8dVC1vZbddT2A07y7Wu8FPchb1rzshcu8jeo7vUB7xDotEJq9agJXvWhknLzTNVi9EMeevUBG
                      bjswX4W7Ol0/vQSB8zxIB7u9IvMtPX9YhD2ZhYY94UauPSy3h70AVcm8jNvFvAdCZr1LL5A90d2M
                      PTeCrT2g4ZE79OcDvVBjwb0pN4Q91+G6vQAATTu06Ps8kzJbvdBaq70O+3s9wI8fvexW67x2axe9
                      oAaYvQNeQL0AEB+8sLl9PMBOBzygk6o7gGLHOspvA736aBk9SqCqvVjaMrxMLbA8kJoJvZTs67wS
                      ORc9O3bMvayp6Lz1E4M92Ef6vA9uvD2YIg+8tZiUvWjFrL2X+mu9T5edPdA+J735kr49F/qAPSjF
                      Szww8Q28Co0nvaPlx727Xr+969uhvZ+jjT003hS9rlJ6PfEniT0Urq2861rGPT1jjz2ew4K9xE0L
                      va7aNj3IGqm8gvDGvUWOgT2YaXA80YyHPQnEnD2c8+08KFiMPPFQnD1cAwW9quYUPWJeFD3GGUI9
                      mJOJvGLODj2akK29Oko5PSEMgD09rGa9hY66ve61Oj1O6XA9Nm1hPcpQlL2WsDE9VDjmvLhqwjwB
                      RLw9luecvUH7iD1eNk89OH7RvMT7+DyoHA684wNkvf7lDz0oJUg8wcqiPTPysT10TJ68UiwIPcZu
                      Zz3LTKW9zAbSvADOZbxzdsE9luxPPVd/sb28TM88c0u7vWiSRbzsswO9tU6OPc2Hnz2awgY95tBH
                      PeOzfr0q/Gy9Wb6fPbNNa71WUnE9fbKOPUMqMr1UqM+82oobvYhlmLyOyTw9AIFRvHBLWr0Ne6Y9
                      agBKPTdNpj1mWjE9gEuTu27oIj1AjQi82SegPS/fhj1gzhC9YJLlvNMLmz0fGcO9gKKGOo0xhb2o
                      Dhu86LDCvLrTYD0GC0c9OdGgPUATgbq6Sbm90jofPeA2hL0jFoY9ibiyPXIbXz0Aq4k8w+VNvZKQ
                      lb3/CZQ9YzzGvVgnMbxm8SM94Y+RPfM/kb2AsSs8G7OxvST5Er3giC+9pEjQPLRcjDyOOSk9Kbm1
                      PUa5D73mCmw9qe/IPSJ1Pz0xY4U9xGnjPNqfAr1T7yq9mMa9PAmdtT0FMYq9QB8euwJljL3Vnba9
                      3PHxPGCoH7uYkri80wVFve/bxL0DciW9mgo/PVIPnb0eM309++CavZoUbb0WCQ49J2mkPWZmBL12
                      TKi9LV2jPe96gD1tPpc9AjeDvYD2nLuiYx092h1pPYqHWj0ftsS9UFg6vbcsN70DaYk9Tv8yPXJD
                      Uz2/i4k9LGukPO0VG73v78i97H/TvD2qmb26vU89CEGkvCG9oT12KRS9YEU9Oy/sur1XWm69+HuO
                      vDY9YT0AYR08FjYiPflwkD0T3sE9vstyPZRquzyI3IA86HuSvJpdLL12r6O9jiaJvSwutLwB6sI9
                      i/qnPVqDQT0vVbo9AHYGvQh+ir0OtFc9bbfJvfqvhL3wKWa84wOoPfNqZb2158u9cOQ7PPDoBbwt
                      EHy9EpIPPcVbor2g+mO9lPr6PKdFkj3U0fo8pJnbPCzumLyggpG8sR+fPetkqb1wTSe8gr0RPUD9
                      jr18hv481vKfvaDB47zQsLi9jfg7vafqtz25s789970yvQmKqT2AZ/e8IvpmPawshTzyBR49mPVo
                      vL+Fub2oTkS871eAPT7zWj048I29PbhgvU8ty72/X7o9HkBlPY9pt736/1q9pp4NvU0kir1tN5a9
                      COzKvONPbL2Lnac9AHR1vR3ghD1h8Y49AB42PLpWC72ylD09zYW0vdpWEz1Ajx+86aiNPQlChT2i
                      k0U9prCUvUHplT2AJ6O7KO7NvILfZD0tfW29tPGHvR2zWb2FG8c92O+ZPPCOL7zi1T89PUyFvXDF
                      gr2riJC9yCaGPIpmr73g0ec7e0KVPXkosD0oCsA89t9HPQVUpz2R8Yg9WsgUPQfyXL2UQrc8quUh
                      PcDujjrhu5w9FQqsPeUymT2TTx69xNPaPBn3qD1aecC9YiNzPYiN/7zQQhQ8MB2gO7Bxdjwpo409
                      2sKmvYOhkT2b7by9vcGyvWL7Sj1AWJC92RKKPbOqRr2yKa+9iCDIPMgFxLzCyhU9ePWbvaFWjD0G
                      pDk9lv1aPVLasb1Mnse8GRajPX09W71y4TQ94DnavCDkszyh88s9Nyw1vdd/qD1Ib4o8dOeJvdOn
                      zL2Az1S9IEKoO7qLvL1NBEm9cgGqvbLQXz3Djcw9gN7WOmBt5DvP6549NE/nPCpJfL3aOmC99ypx
                      vZ6fmb2gmV+9VPiOvGEGvD3vyrG9ocaTPev/kD14sIo8WZ3KPZgOh71G2KW9ncGZPbpbGz0AgAk4
                      APx4vGNUSr1DBEm9n4m+PUcgYb1AexG7h/q7PXwszTz56q09hODmPPC6F72nOjq96n9SvSbxST2n
                      vGq96MA8vHp4S71I/a08AALIvUNDgT1UNoY8PduEvST28jwfgZ89ACD3uNpCfb0mqhS9UJJnvZZL
                      TT2mvX09yDe+vW25N70QXyq8PnJkPWCW77wOiQg9eT6/PbUAh71h+LM9eqRoPe08Sb2oNBE8ohMp
                      PYAJTDoBnok9MIKFvULBvb1940S9tF7KPNAnDL3stpy8Ch04vWVDoj09Jzq9KiIEveFvoj0C+SY9
                      8gFuPWC+obxqXG49cAokvCzdvbxq1R09Lv6SvRAROr1AEVq9AA9VOgA3qrxizGc9EmiFvSBE+rwx
                      VMo9b8TAPb+ly73tQaw9QCYfOykhuT0Io5i8AIlDvCJfFj10+d28fbRTvcPUdr1ypQY9QRerPSiB
                      uLwYzbS9wpowPSYeRD1GhEA9O1PHPbAqHb3ypUI9p+t5vZC4cbzpZsk9fnhkPegCbzzarcW9wBEX
                      O7Mryj3IiZW8qXKUPbDiaLx22J+9Ug14PVZGh72YfYm8pu0PPeOHnT17mqG9UH53vSwT4by59J49
                      jiGNvYr+Wb1A3088YNOrO3H8yD2DG6W9oE3gu/Cil70Tiba9UDCHvawKsbylxYa9LckzvRJkPD1U
                      GKI8jTKtvSC/hrwAKPS46DyhvYbmbj1X7Lg94+g6vTp1Zz0C+DY9BZbMvZJPYD3D9269mM1VPCrV
                      aT07Oo69rBfkvMVpjj0AUqA6fdVPvSe1rj20BJy8AGhLPNDmYry6i4m9Gm9YPfGaqT2APei7ctGh
                      vbbspb0omF48R1e2vWB6rbxKc28910Yuvcgkk7ygaIa7ks/AvTiXlr2tj5e957pxvXyLC72gq8S7
                      AKUFuiuBkz1IVdG89j0CPY0iob1bzZA9VkgJvYM1rL1w7Vy8SF71vBpjcL2ICrW9praavQGVgj3w
                      xTi90J/fu9j2jb2nLKk92BSRvDS8hrzdATu9cu4ZPaKUWz1gat+8t3qcPY2Ysz1UWu68AwaUPdAu
                      6DtFubS92lO7vVR56rzAaKG9++u6vYAcqbxShVU9+nXEvezhzTwtkpE9tVquPYutvj13CMq9LpN9
                      PYLZMz1RqpA9etKmvSg+9by7A6E9ECFaPIoXOT2Kz529FAavPKiVibxr6qo9kEQrvQhOhb0FP7A9
                      AMQlPIgekTyAaLy7uq6JvR7xJT3czO48yGCdvcAAF72BoMg9GmBGPS8pyD1YegS8jm13Pe2cPL0z
                      sSO9o7FmvRxf3zwgDZK7RuodPQAIor3MJwe94ic3PdLQez2XzEC9Nk96Pdnwuj2dHsQ9QDcvPGo9
                      Cr1AS2K8ltKZvezh4rwNEHy9ExWnPQJtIT1ybC89ccSoPUwpvTzUIcA8FvmTveLglr2AeTm9mnEG
                      PZDDdL3QijM8GDggvMTsir2oryk8Lkl/PV35mb1QmxO8Yv2hve5lQD0Y77y9vvwcPbbtPD0bDsa9
                      qnEuPe8mkz1Qvcc78KpNvX0RhL1gZ+27GjqjvXu+zL0nisa984tLvTVTr71M5vY8SvLAvRBNab0q
                      n0a9klkVPaZzIz1Fp5Y9d5ZovWiUrTzXzLO9SPWdPPpBLj3KWls9OX6APdHvpD0nwXO99rU6Pdrw
                      Mj2Mzfw8I+83valaqz1oUZw83vhMPdhwYLwwyK47mkcXPYbgVz3AlSa7BvU+PZOorD1ozac8z5WA
                      PSpklb1q22u9aS3MPRIySj3gILi9Zu8cPWkMrT1w0mO8kxF5vRrIb73UlY08iamXPdJXJT1aUx29
                      EM+Jvfm1iz2TK1q9TMLaPLnVwT0AKzQ7K/aTPTDGaTzQhpO9UN2MO0CdZrsAyx68ouU5PZLBXD06
                      e6+9YFEfO9d1xL0ASuk5clgoPdjYALwzDGO9VqWWvYOHqz3I7429UHicu4D11bwgoom70SW2PeHf
                      oz3o1Qu8I9A/vSC1k7tdWaU9yHyKvFbzCr2t7Z+9AjA2PZEttj3wCZC9ALwMOjoscj1kOxa9zmZv
                      PYASnzxguyE7jghjPVqrI71A2D+76mc6vQ6PlL0TCYg9NcmNvaeXwr34UsW9iViZPQHirD1YRoU8
                      TNSBPKkdjT39iYm9KAunvFC33LtZVqk9KE82PEAGBjzlPru9dylpvYAv9rsABhC7EnINPSdjtz0B
                      voc9+u0+PQWMzD1DpII9lK3tvGImez3XY0W9xsNKPZDvBryge1C91MCMvXrvbT0Dh5+9w0K2vUnu
                      gj0Kp7S9BeKjPeOCxL3QB/G7pAD2PJ6FhL3MZ/w83b+2vZEmvD2MKec8jK+WPP7YFj1lwJY9gBtk
                      vObfEL2AXHq8n2rBvYdXxL1TRzy9TMbGvPYljL269qS96zTLPUDFHb2Tkn29A01jvTwK1zx2Rh09
                      6qpSvYDGfTyAAMU6SfCPPa1MjT2JBbA9qDm3vaaRlr2sE+o8Bj9gPdtTr72AQ9k6cn0ZPVtWpz3m
                      w5q9ldaVvQsrtr3UsMw8ZUelPb+EvD1XNma9TEC+vDo3tr3osCS8oOr1uwBnUrollau9gNMHvMq0
                      Kr2QLcO9gKBxPCjN+7zzQsw98z9SvSKBZz1+8JG9hrVKPeMbmz20J5a8HcRLvfBNbzyajn49sBjI
                      O+Wejb0ABZY7HhxpPUc8fr0KQH+9AHB8ORBiWLywhL69oEz4vASS/TyuM2c9qPFzPNg4+bxw/Rk8
                      mFmuvKh+pL39kau9zdlCvfYLmL1gLfa7JK7kPGOOxj1zVjC9gnASPRH5nj1MpYu9be5hvSzA3jxL
                      1sa9AFgovACA1Tszzi696vUOPYOVPL1/x4I9psABPaJakb0aH0a95Uq9PSy3hr0M+Yk8IwkyvRgT
                      CbwADba8ZVqzvV24hz3QDD+8cqwTPSpGXr170be99K6/vLRt0DwG/3c9SsV5vZAXA7zMqfy85xck
                      vXx47zzzEKw9okZ2PaBAb71gQKa7KemkPdcByT3yC049w59+vSiht7zyZE49aG3evDM9RL3y91Q9
                      b+G7vbtZor1OgRw9AcvDPQD4azy0dMy8ovgIPaosWb2JLrE9PPbgPBCneL0j12G9ZUXFPSy3/Dys
                      vvS8MymcPVLwmr3VpqY9Ng9sPbs7lb0Sdmk9LSKBvXLeLz1gkHw7PxCpPco4Xr3g3Ms8TAObPJk+
                      hj1gg/67gKE/vZ52qb3iNwc9d0GtvUrrYD0ohW68ks06PRBuPL0IiYu8n0PJvcJjTT0SB3s9KGTK
                      vFD8BLypY4I9PktKPex4wbzFkpY94+ojvXC5UzxAkyM83tekvV6en72ivUc9+ICXvB2ngz0m6QI9
                      W9SYPYBb/rzuxhs9+Se1PT3hU715mpc9ZKHOPAb2Sj3tz229k+m/PUDRYrswEra7yOK5PLpiir1A
                      VX29VYGRPVCneL14R4m8qAEfvKACnrudppW9IH0kvTQF2DzfWZw9VHKhvJVnxb1YBio8hJzPPEsX
                      mz0YPEq8yGSevEBQLLuMvro8UhQ5PQDvqrwmPns9NTq6vWwW9zzKFQQ94y0nvViKijzg06i8p2Uk
                      vTz/Cb3yYo69aIfDvJjaJjxADSO8PtAlPQz2tjxUdYi9uF2XvVVqtj2x97I9oM+oO7rVBz2J7YU9
                      GPKePEbZBb1QjJK9goBIPfYImb0oZTU81zV9vfd/kj1j9W69wDgQOzMRS70lS4O99h59PUATojp9
                      DXG96u5iPb4dCz356q09TyexvYz3i72UNvU8F0s5vVoSEz2oLQy8ACqMO4PVwz3g3pM88jBZPQB7
                      jrzQCn29gCPEOswPhDyMuou9IEOzvahOPjx0HI48aH22vAJAcD1tYHe997livU0/ur06A6i9SGCz
                      vdpbX72Q+mY8OIyrPPfxjj3bL7S9KVeUPaCSaL2tPI29nvl0PVhnOLxo+n68YwNpvfQ567xy2WY9
                      rI7BvHbaQz2Gmw292F9HvBDhZL2qc5G9Lm9OPQD5YjrW6l89pmEFPaBuszxAD8A6Koc+PbKGFj2k
                      KQO9N8OKPU9TyD39dWC9m4zEvSm5iT3oJ6a99ZeBPedeTb1tn1e9/is5PZgGz7xAcry9AAcsOgbX
                      iL2K6XQ9mF5PvGuZnT29UHq9iFP9vFQ7uLygSoq9r0yXPQASh7zUnQ294M8fvfCoNr2IuYG9xILV
                      PKALUr24h4e99d+VPRPFgj34/Ze8wydGvcicjLyisDU9wlFYPdJUlr3L28k9l3hevUcldr0nJba9
                      VCHBvNfLx70NkCm9UpBlPZQOybzw6DG8qNYnPOVYjz2n/I8956eDPbDxt73K9E29XVTBvU1RKL1b
                      PKk9AHBUue7ekb0pVME9mlu7vXZKBD0C3hI9eqM6vdp8Lj3C+Y29E6+OvVMqSr2PDZI9YCd4u0Bg
                      vDxg40O7jY5Svc44Xj191YO9X7nEvSD/k7uEwOQ8+ReoPUM5br3ot+u8RldXPVBaLTx7/cM99OqB
                      vLuSjb3Rr8Y9GHfAvWNmuj3ID4q9qg2uvXm+tj1m2wA9a2Wfvbfgpz0AtpW7EObHvSoYir0ukp29
                      1Lr4PAhdwL1o0j68YogtPfJbUT1IrL88hAeGvU31eb1AkSG9ACywOOiBvr3nZMu90C8hvUC7/by7
                      j609YE6xvMGKuj3CaQ89KnalvQP2k70oBUy8MikbPTXtgr3ADrS8igAivYDUczxduGq9Y1mvPeBJ
                      rrstyz69TtVJPQCkNrz3GqY9Cp5nPRojTz0B4589RS2WPc3Bkr3ea3A99lVePQC2w7z8XPs8cx4v
                      vTDfor3gUtU76GiYvRpeFj1aq6m9aKVQvJXWsj3Awo06DzKoPepQDz1AbPG8ChuAvbZDBD2pdI49
                      THvrvKXQtz2gkg+7bUOsPTJZSz0Y3KY8qrmevQF6jj2gNxe7VTOZvcq/Hb1zp7s9eRKdPWqjCb1i
                      kI29lrqTvfp9Sr3wjxi9q7yivdPCqr1KooO9MActPFE1hz0IBJy9Pfe5vcqidL3OGGY922yyPafq
                      rL1MX+q88BauvdUPlr23YK+9W1+ovT7sDz3uVic9UPDVuyBL2jvMRuW8Sl5rPV0JM732vRa9twrJ
                      vTQuCr3agRC9RcuoPZD2aL3H1bC9gM/hOxNCmT0X3SS9GlE1PRikLzwOTKi9IK6nvUnkoD0aN0U9
                      OLK5vf0vmD2NlMS9s9ChPUaMbD16KVC9CPmdPKxrEr0L4Mg93QgjvT1tXL3+FZG9EyCwPaAcP734
                      qqa8u4mpve7cfz3Yvai8NPvYPMDb6LyzOHm9gH2ouw61Qj1g2V87HtqWvafaoj1UrrI8G17CPVLJ
                      dj0U5Ok8kLY5vT22kj1DIku9mPOfvOBy77uYbNS87M/IPE3xnD133TC9xUqVPZCjBrxlC5U9LWxC
                      vVRXwzxiBaa9xGjtPJpPYr2ltJS9NE3evCrClr10SqY8YEWqvfBaM73j1zG953adPd1Fcb1sGJ48
                      RFIXveh0i7zysBM98RuePYCmJDyXza89wT2FPccftz3IrZQ87LECvdDbvLsBCY89GgB6vRadaz1a
                      gWe92GyGvE97sT2QM3K8LZjFvfL7vb2Oi569VJ2dvOqmFz2SWRc9jP2yvP+5iz3WeHI9QLFdu2gb
                      pTykFuM8npcPPdKOVD0lUpu92i1ZPYBwnr1Zv7492mQ+vducxb1s7LC85HToPFjmIrzfn7Q9gDjK
                      Outms706G4G97BzUvIhS2rzpiok9uIOPPOL9dj2YmS08QM59PACWCDtaYkw9Pp6kvamRgT0uHxQ9
                      qoSZvVmgqj3Na5C9rGepvKjHo70wd329oInuu7TCxDzuhBA91v5IPerBBr0GFA89yByhvZEKyD0j
                      yIE9x1sfvb8kvz0MZ4g8uyK5PffIVL28awO9Z7pqveLvdj3Q2lw8RDYAvbAbXLxIutm8QCH1vECr
                      Ar3t8ow9QgQsPch447xAnyw8YTnJPSi7lTwzJqG912C1vXAxILxgS+a8BUrFPdRFwDw2DAq94FKD
                      vC2yib3y5Ag9++qivWK5Ej3nQpg9c0+8vWLuZj18JIO99JDwPHmfsT2Q4GC9vZhavRhbBTxQsUO8
                      DKOwPIMxwb17e7e9wLC9urQQurwAzDc5mBR0vC9Vu73wR288AJ4ru5b3Ar3JMJc9FzAxvVTct7ze
                      Q0c9GI+VPDjFhLwA7ls8ZiJYPduvu73oc3I8Su9LPZoGGT1fDJ49+I2BvMDrC72qqkw9OOqkvXiS
                      r7yPPqw9oqA6PZNLpb3QHw69ERyJPZTj7rxH10u9dpGVvdpfl7363EA9n4rHPfGnmj0RsbU9hG/0
                      PL3Nhr3V7be9wLrouufXjD0yZlM9qCQ0PEDItzxY3Tu8LBzHPNDlSDzOkh898A4HvAAGeruAEcq9
                      ABJFPJJtv70qEbm9lE/WvJApc7xg+wG9APYUOUrRar3unRA9ilttvSjEFryU9pM8eoacvU25jj1o
                      OQ48o0B7vU3oar3Rrbs9BNjcPKMxnL3ejBs92YqEPZNvpT1iphE97D3XvCLCVT0tgjW9RUOZPRam
                      Fb0DXW29xz+WPTbYDT3GqKy90CepvQ/2pD20bfg861i7vd3tN70dHIi9H4m+vaYWm70FXMy9OpZg
                      PS2SOb30w668LCWUvNRR+zweKYi9ektNPeXXvz3ARY68zMHwvDDCELxZbcU9fgBVPdBAfzzNkIo9
                      6O7LvdhACDwtGBu9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0OTI5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNjg0OTI5NnEBYS5kAAAAAAAAANS4vbwgsIM7t9K+vVAHCbzLKcq9GM2jvddEsr34U++8
                      DM2tPDV5m70zJcY9Mj4KPZCHBb1SM669rX6DvXSYp7ywaZA7W2fDvc7tdj0PV5s9yj4DPZBXK71w
                      d2w8SSGKPRPkc72f+Zw94XS+PcDfD73aLWq9TacovZg7TbzT5q69WAcrPLK7HD1ob7K8rGuivC8H
                      vj2WyVw9SqUKPc4ZHz1V8Jc9qwWaPYV9ur0qRwU9+wGWvaa3Hj15h7Q9YNsGvUnNpj1BdrA9oq0o
                      PQeqaL0AXz+6xiYMPa6wo72s2fO8+6iiPbE+oj0uzjA9+CWUPLZ4CT3HGbY9WhyGvShqkTwAX4O9
                      gl1gPZoaab1o5bC8Ei2UvZDdXzyFmqe9pxVDveCdhr2yXMO9+tFdPe8zxb3ysBI9cIABvL94rb1q
                      DQw9iuBJPRDvLDxQzmE8QXqOPdFMjT3Csi894CLyvPCZXL2RSLk9gB+BOiDYi736JUK9UKWEu1zd
                      A73KU0O9ysw7vaBh17zH5mS9iIrIvdR7j7w=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0NjczNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNjg0NjczNnEBYS5kAAAAAAAAACKXaz2Ur5c8dHWEvGE4pj1qZly9Va2jPVhu/ryomIm9
                      AI3rO2bSCD2hFJQ9ivVLPekmxD1wmQm8gDmVvGrHnr1YCIW8xKPaPKftab1BYYs9GFJ1vOBC0btg
                      ma28eNmuvP7faz0B9cs9cFoSPFgRQzwASQw8zarDPUJMSD33CiO9MSGuPZCFk733RnO9QAG+Ogx+
                      pLxWEg69uLKBvPbxdD3QAQk8w6pBvXIzMj0TiUi9RdycvbL2RD2CfQs9oMJ7vdSd0zxJJJs9cIM4
                      vJWjnb2Cmgw9gBC6u9GnwT0Hymq9xeGbvQ5YpL0Ajwu8lw5WvTDUYDzGcF092IuRvP0/lz0iFgY9
                      OmmxvYOiiD2AyRC83cZ4vSjOtL0g0+u7oCKnPL/qjj3LqqU9QLWmOsYJYT0Y+ES8bDmPPGLnHz3o
                      aDa8Rf69vYDrm7plTco9dw+uvc1KH71znoU9oLfcu0DuMr2qkEi9mrkzPZLNPD2A1ym8WKJAPBNy
                      PL0ogMQ8Uk5LPUMad719tpY9E828PfDHG70=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNjg0MTI5NnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNjg0MTI5NnEBYS4BAAAAAAAAAObmlr0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        ob2QPGLokDzgXJE84FyRPHlV7Dvrryk8o50oPKOdKDzbJzc8rqeQPJcnezyXJ3s82yc3PK6nkDyX
        J3s8lyd7PKllmDwmTZw8fAKoPHwCqDx30/A7BEgtPPjDIDz4wyA8FO5BPO4wTjxDbHM8Q2xzPBTu
        QTzuME48Q2xzPENsczy085A8bzqxPE9MhDxPTIQ89OQFPB4oVjwvgAw8L4AMPH2DKTzuCFE8cBNG
        PHATRjx9gyk87ghRPHATRjxwE0Y8tPOQPG86sTxPTIQ8T0yEPPTkBTweKFY8L4AMPC+ADDx9gyk8
        7ghRPHATRjxwE0Y8fYMpPO4IUTxwE0Y8cBNGPBNHyDr7C8g6q2vHOqtrxzoXUXU7ftUqO2HrKzth
        6ys7g0UeO3dlyDoq1+Y6KtfmOoNFHjt3Zcg6KtfmOirX5jo8N7464Ha5OiSKrDokiqw6qL1wO2RK
        Jzt7UDQ7e1A0O3N6FTvxlgw7MCzuOjAs7jpzehU78ZYMOzAs7jowLO46W/zHOqGQozogHds6IB3b
        OmWAWDtBXAc7VFJOO1RSTjtFAis7UK0KO4BZEjuAWRI7RQIrO1CtCjuAWRI7gFkSO1v8xzqhkKM6
        IB3bOiAd2zplgFg7QVwHO1RSTjtUUk47RQIrO1CtCjuAWRI7gFkSO0UCKztQrQo7gFkSO4BZEjs=
