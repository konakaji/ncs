N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NDYyNHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjcxOTQ2MjRxAWEuhAMAAAAAAAAQHfk8kBuivG7di74+U6W+gBlVvWbM3L1w3/I9KayG
                      Ps5VIr7T36S+wA0CPuw5qb1jgaG+1pjEva5iNr7LcBG+2rxwPkUVpD6QmFG+lc6iPj0CqD4ACve7
                      qCooPWNTBL4bdku+QPzYvQ6JRr6+0C8+VKyFPa4/j76TNi++QoCnvjPcP756hWA+YL0aPMttGb7m
                      YfO9QI5Jvoz2n742f1W+gOFlO8uabb5ATsA8DE32veBJOD34TIe+juQHPrbIfL7y16i+O5KFvm+A
                      nD4jIqK+kCi+vKhiTr3mYui9ZeyWPqj+Pz31n5s+AKPUuzZ9Jr6QDvE8wDIjPUDYTb0YLl09tqy2
                      vZ6tpr5ZuaA+44x4vp6MYj5yPHg+W8+DPkLMTD5otSg+TrUWvrrEST5cYNO9gXKXPo24mj72UEq+
                      zm9hPpM8ML4gCUS+pi0Ovnhynr7ZeII+5lN+vnlAqT5gP9q9hIWTvh7FfT6APo69Qs4vPqssCb5A
                      h3u9ZjISvnXNmz4Qq2W+cM/aPPYoEz6i0Xc+aFwdPRw/1D0AROs7UBSuPXMRNb5eI34+4NUyvuAd
                      VrySZ18+WqZ2PkCKFL54cVY9tI66Pfwbkr7Mlbc9wrJlPpPBp75iYmg+wK18Pfznj762I/e9WOIk
                      PRcsob52K2U+1hl5vvvPOL4gGmS+KH5cvYby9r3mQAi+f3GZPpOBNL7Ag4G8VZ2EPgbPZz6QqIo9
                      4J1cPfjyib5AtSu+ciJXPsJ1lr5AYde7kDMTPpT8gb3kurU9bM+ivU0oqD52soq+QH6cuxgeFr2k
                      4/s9eoguPkDExL3w7fK9DthIPvNXkT5DhTW+uuBFPkA14bv6dUA+tMm9PRLEHj7cB8W9KBQCvm4J
                      N771658+1BCovubJy73gc/09TLmmvuRBgb4st689YCidPUgcKb2+VWq+E/Nzvv5omL6IGSK9Io0k
                      PpudFL4QZ8M99JyUPZCZ2LzMyYO+VJzDPToGJj4Gob+91ttiPrTrzD28HqG9Jc2YPqtdgj6I7Hi+
                      EL26PEjrg77Ym0q+qj8CPuqlcj5MBp+90rFlPkhsBD5x9IY+BpIPvnZ1aD7wkfu9QIK9PVbnC742
                      VnM+DcuKPma6mL4A6vW9OB0ePuiMBT7Q1cs9KOoHPVUOkj4ARFS+Uwc2vvz/ib4cocg9ALFtvZD3
                      vrwwMRg+1udbvuYncL4qMUM+oPl6PehrQL3MDNk9ttP+vRgiVD1r0YO+KFh2vjienb5NBqg+WPFE
                      PbbkBT7e9X4+KkttPgJ2pL7SA2U+tkkvvrpkMD7AOsw7af6WPn5TVr7gYQ6+e6JYvoDUQz3skqY9
                      lBKjvdhtB75IF36+AOAluURZ3z1pupk+QDk7vUBvtDxcYs09sK/qvEBMij0ABxy8KEU2vZDy/Tzq
                      tno+AB1AvqjTH75Fd5M+JlRRvpB/hb2CKSo+8HScPOAp0j3AXbo92IVMva+8jb4AmTS+QCutPcDg
                      5D3idTI+MDr3vOSsmT1Wb1S+6BpsvaBpUzwTb1u+vtebvugxIr6XEIU+yp0PPs1bpD6a3RI+ej4A
                      PqaL5L3LDJy+QOtTvT6GHT7Mdpu9QNv1vdVLlz76yjA+In0/Pqj9CT04sU49iLZQPXzgj74oPwI+
                      9GP8PUi/G71ml0K+xsoPPujbBz56lj4+trUePsb9Pz5YvBi9K5iovihobb5AWvQ7RKOOvgCqQzrW
                      Gig+kBZTvhCEAz4AbMO9l2aNvggrfr5/vpA+4cCePviUXT1JMqM+A+grvhZiOT6+6SU+s6SSPjal
                      eD77kVG+TzaDvnB0kL0zP6C+kMuXPRKvMD4yc56+ufafPjOOjL4ANxa91JKGvarRfj5+iXm+xf6p
                      PrB+8TxRt6k+ukVOPm45Gr7YBl49S8Rmvu6tAz6T3Q2+8NndPJhQLj1Q+ra8yFI5vsAuzL0AYg89
                      e3havvK/k742+T8+5VGPPr7ccr4ce769kwUdvuCker6s89Y9xt4sPgDWebvee6K+QhxhPsYts71l
                      4Yw+etI8PszSvb0bE4K+0JLZPCGdmD4TLGy+IIIFvVBgs7xCs0g+xASfvuCZTLwAAso7uOcVPQrf
                      qL5Mdeo93vsZPj64Kz4FJ5Q+XoNoPsjJZb76nEw+RjACvoDUCTvPnYO+qyaVPtnlnz6c0Li9CJ5a
                      vctKdL6A38a8UBWNvEe0kr5O61A+wF8lPUwkkb2q9ys+2EgQvszCjj3eNiu+WpCfvjh7az3AqI2+
                      9j0nPsqfdT7I5CY9sp8ePo5SAT5NaYE+WCMZPT41iL7TIpo+8nFtPpDm4T06Qlo+vMaDPUDZLb4A
                      7hi+t+OXPmhtEj7AkbU8aChHvgIRSz6g5WG+A9aHvvgkEb6LOiy+huXZvSRthz2CMWY+fjyFvsY2
                      mb5mFV2+lnOrvZaRQT54xDC98i52PsvfQb4AjGs8RjtsvpXLiz7alFI+huJOPlbCpL68+4m+pyai
                      Pp6nOD4Av5K+KBVDPTJUdD7gbwE+VBuJPWAuhr6AA1k7G3WjvmgEW72cVfU9s2EBvhyKvT04JRg+
                      wE9IvuJQJD6SZiI+E9NKvjIXOT5WUY6+Fm1Jviw9kb6iCTg+xrkJPsgLR76LUYe+YqduPp5vEj44
                      rC29c8OhvkvBRr64gRa9wNT0PP56oL4e+Q6+LoYhvm6fgb4qdam+TJiUvTBhB75Z3Ic+s0ZivpwB
                      hL6Q+ou8ctRpPkAEYz0IKju9aPV7vm5GQD6bixe+QGYjvTDunb3O4T2+rhwNPgDt77wKm0A+nMn1
                      vYyx1r2YMTi+Oq4mPsjjPz34nyu+rNaNPYzn2D15QKU+hhsIvrb/yL2g+cA9miljPghaWb3C+Bg+
                      sNEiPqt/I77LpxW+/XeCPse8p778A6W9onUBPiqVkL7S/Fc+oFp5PIf9mr6myY++1vV9PrZ9xL24
                      UzA9lrNBvoVSpz6jiJ8+hussvojkAj48dKO+vOLYPRgHAL7w7Za+6PaPvipmTz6GJVs+ook3Pm7u
                      Nj6A/RO+a/GNvkAgljzjH2++cLHVvNf2mj4P6pi+0PcHPvAzjr4acA0+mqwyPlaBib5wO7M9HROO
                      PkD6Ob36PAY+iiYOPpDNhr6QYfS8WH9ivYhpbb7QVtm8ztxBPsBL971fHZe+iHkAvuDpJb3EC689
                      Fp43PvzJmz0Avf+9kCO6vF3ahD4uqC++LIP2Pdaxmr7yJm4+Pk+VvhjsFD5e5X0+rEruvRiZD72U
                      7Zy+TowYPs4Opr6iMmc+ZngcvvDZ5TyocGa+2MOivtImND749m2+4OlFvuVdgD5fHqa+kaWoPt5X
                      Gz60oqi+UMGTvEOXmD4c1IY98igwPv+uib7WliQ+JqoUPiDyYjwZc5A+Wq+XvkMpn758vMc92KRS
                      vpAsaL5bkT++tESDvgjRdL5Atom8ELSdPcC21DyHBqo+gAAYvUB8hzvCyxU+EKktvvvFnD5sSZ09
                      uyGTvs9hgL6Avpo9SkpvPsC4vjyQ3JW9+9WHPnCU1zxKKJG+rthPvpNzA76yrI++aoAAPuikqr5g
                      yEm9bO7HPVAyhrxcJs296o4hPgK7ID74qyG9bL29vZ9OgD52ix0+pkecvvzdwT0Ayew8l8GLPoCl
                      0D3nVqG+pmaMvgiHbj33bok+eFp4PZAGj7xDshy+FWmZPsATA71YAAO+8E3kvDJUNj6mAQI+oxel
                      Porgfj4D/iW+Wt1UPq6nB74oX1C9IMYhPKIjDD4TZAG+UFLBPbghb74mqwM+/qo1Pta8Or7bMGW+
                      kKVbvsAnojyUkJS9NPGhvk9dkz7kFo6+Hh12PmgkPb0AQhK+YFRjvOiPDD6ATNS9VCPnPc2zgD44
                      qBI9yMwgvfNkD74F0JI+kOKkvXibVb6AR/W9MaiEPocLoD4A0OE9UKP1PX5jC74b1Wm+NvW6vTYp
                      Kr7qB0w+kPPZvSejqj7YsUK9/osTPq9XnL7+THo+kLcyvn7Zbz4Y/CI9pEW+PXqNhr5BE5E+wNma
                      u+Cxg73HN6U+87EGvjzMlb4gGV49AHpuvLhZAb3w0+u9sSalPgmIpz7Ipww9QMfDu1E1ij7AGos9
                      kp81PpBVPL5aFTU+oHhMPKKAVj6S0Aw+mwOLPsAIjL1RvoE+AIHPukAQnbwy/lM+wO0ePXehpj5u
                      7nC+uANGPbAu4b1gAOO9ovZoPnM9cL4opE6+zKOMPUYpeb6dnIU+iGFTvR7ug74gm7+9mIqIvtAC
                      kDwPp58+7MzPvRiRJ72Qjd89HuZjPqrVcT6eXi6+Go+QvjKuej7wSN286jIRPm5lP75D2Yu+kBmx
                      vLjaHT384Pm9hmplPmoCQz4bvZO+3CTLPfXkhT7WQ2M+AqwBPkDM8zxCizM+1hAlvgDlXLzAmT++
                      r4abvpDR5z18K+G97gFvPrntnD6T8U++rgl1Pq97nb5oL3i9w5OlPkUJpz6ulBK+EDz5PQCAozoW
                      Ti2+4BEmPtClub0jcgS+nsifvpOpR77KIlk+gH8IvPt0hD5Qb4S902MpvnCS6LwsQaM9IjsyPt2b
                      kj4Qg+O84M/wvWullz5Q1v88PI6hPa49C740Aoq+HPSQvkuIP74IDVO9WYiPPgrgOz7+/zM+u/SK
                      PmCChz2NgJ4+o7RUvmC8BDyQ+vQ8KGwrvVDEpzxGjXg+Gjo5PpAwyT2wneY9Ok0vPnB8Jj54SWE9
                      AMAWPFapMb7QDZ29F4mFPtBMxjxjShC+/tBhvgxi8j1G1AC+qBhRvkJDir5YgI6+KlSbvu2zjj6a
                      Xjg+bMCTvdgJOr0WqJm+OCkZPXPXqL4uq5u+AuJRPmjfPr0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NDcwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNzE5NDcwNHEBYS5kAAAAAAAAABAnqb1Sjxs+LAL4vfiEUr5R9Y0+nnYkPoB5ezwutTm+
                      tKr9PaOvUb4Mkvm9upOEvpTimr7/Yam+tXGHPlZE2b0dy5U+xtUavrcZij5AR5A7wJx1PVKjbT6g
                      Jsi90vF7PnsyoT4ICik+8MoGPmBS7L3xC5Y+J5amvnyIhL6OUoO+Ca2IPhgzS77wpug8COELPUDl
                      wTz3iJs+WOFIvvxC770gaEC8Az8Jvj0Tkj5IrUy9Y9MGvpoeMD56IFU+YNIcvuPGnL5qDWg+LnNY
                      vqDe0z1jKGG+5GbYPVgyB74A9DQ7J1uLPu40VD4GDPC9oEZrvStTa77rHUW+gFQcPQAImzqI2Gy9
                      e7ocviJRhb5eUkw+/m9lPmtXjb7S0Gc+5C+CPQx+j77gjsU9IeaTPqN6T77EuaC+3iQ1vvxamz1Q
                      9Bu+FlIUvpMhnb4W/m8+k22XPuDBCj1Y2Vs9gO4vPYXYmz6U4ZM9IZ+DPvDboTzyvBY+TFa5vd6t
                      Rb6Q5im+llwhPgBYWr1d6IY+EjQgPn6fNr4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NDc4NHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjcxOTQ3ODRxAWEuECcAAAAAAADggp28rnpFPRpoOz1326g9NmcQvQfWoj2ilba9qBsM
                      vI8lnj3jm3S9yNjGPNBhbrwBF649BeLGPVljtz1uAIq9eomKvRTOB73e5qm97niWvfTpEb1UWeg8
                      0s26velGiT1YaZi8AO7MuhPmX72At4m7BH8TvTMPpL1aixE9AABvucDIqDoHsim9KamuPW1heL3t
                      21a9WVzEPRd+Xr11H6S9gHp3vW6qUT3gJZq8uAeivCwRuLwZNsQ9EayFPTrvZj2XrKc9LjuivfIY
                      dz0g8/O7hC3XPFiKsjzP8JA9KP0yvDjWhL38Pfc86Fx7vBP3xD0kF+A8ck5HPbLfkr2YCd+8Praa
                      vWgJhjzisxE9EHmkvYDpFToAyqE7imlPvXr3Sr3W2AI9Zlw4PeP7pL1qd3M98uXFveDGwzuLmZY9
                      uhgKvaB1K7vq2V49IwaiPVF8gD2Asss82MNDvGBrg7vASyO8L12lPSN+Vb3XxCu94skcPbx5/Tx4
                      BMG8EFcsvN1ysD07WcK9ncaKPfdCer3wFQm8zllAPU+kuj1gMaI8EI48vVdKVr1DrH+94NP3vCjl
                      rryZUbU9EJlHPM2Alr3YpGE8nTN5vWKKCj02Igw9b37LvegNKrwqy2s9wtqMvV3GMb0i26e9IuJ9
                      PY/DnT2oehg82OGtPNZMHT3h98M9ivoVvbDDQrxUEKS8bqNoPV3XLr2ta5i9iITLPJLLPT0C7Bk9
                      vUg0vQCreTyMPdO8WNYLPLBf9Lsy4ms96YCSPUCgub2bCZO9gJq8vDr5EL0mPJG9AP9MvIB2qroH
                      fbK9smuTvTKxJj2HNnO9y+KQPa2Dh73FOam94BeSPF6xeD3UtMC8BF/qPEzitzwn2Ce9gCwBPNCO
                      tTssSbI8dzEivUoaQT1AaFO8dxDJPQD69LoQBF689ILSPIcorz3rAKo9O+eqvfDhB7yIY608bS1C
                      ve1OIb3Tm3G9G/6tvSZTUj24G5M8k20svaUnsL3Qg5C9mjZhPcSw5zyiRjE9KcSXPfjKxjxU7PE8
                      6MPyvKG0jD3wlim9wNK5OmDI2zuoYkC8b/qcPdDJir1ui1Q9RYa3vfRAjry67Fw9GLeDPHOOmr2x
                      M8w92ggKvcm9iD1rqL49UMkavOCP9bzAtzC73o0NPYD5jLuCMys9Wy27vTwS4zyQQWQ8EitKPckB
                      lD2YJuG8sCegOwJXmb1/PLU960/HPQ20yT0ZnL49+yOtPYBNe7p6F6e9GlrHvUOSxD3Une48WBAd
                      PJzjBL1l3aO9cEo2POwnpryYtDk8F2k1vUb5qr2g42q7uCu3vKBdvbxO7R89gHtavJwW0jzUYo68
                      TCrnvKQtDL3UioI8icGJPRB/u70NNze9bbiovcg02ryDUDi9hoAtPVcVV71XuZU9QdDKPajlELyh
                      qb89GrOGvbI1Dj3XVyK9QF0gu5nxoj3ibR89sTaWPTSRsLxmUKC9C+qfPRR60jw859Q8iuITvXVg
                      kL3Pu8m9jGn3PPWGjb30crg8+GG2vORmGb0q+LO9UB8dvWjNg7yYVK+8P/mtvf7lej1IkIm9anVz
                      vVVDtj0P4Mi9oKeNvRiNL7z2ARs92JKCvMoYcb1ggAC9wCfcvHI5Yz3xI6A9CJGCvLDUibsANnG9
                      rmJJPb7Hfj0Movw8gDP8u7oTsL1gkgm96SauPQyNzTwlva49MU+oPap3c73gCF29iJ+5vEMrfL2A
                      tFC9gyS2vRqszL2GAy09N+THvY2EsD1KQ0u9py2RPWCGxjtoemE8oC/JO2iuCzwm40Y9ZYqJPaDR
                      eL0X87m9YwNCvfJOED04PaU88TG3PaA4tDwc2Ai9s+63PegjLbytJKM9wSaNPTNHy70uV3A9KYDE
                      PT39jT3X73S9kAd6PDADwztw8Gm9ME02vIrzWD0rG7c9WHpAvHTgtzy9cFS94A8PvRSZmjzc2cw8
                      kpFjPQOyP72kcwG9TVqfvTvsvT3qYUc9ozOqvb0dib0MrvQ8lAMQvf3cLr25SKw9mEQmvEC0arud
                      88M9IMy+u6rfEj3+Owc9wBPDvESJ/zxJG5w9T2aVPYBzCb2TbqG9QO0eO4pRPT3yvlM95COLvfd1
                      cL1gBTC7qVuqPaLSbj36kpK9w8Sive1/qb2Cuho9epxEPcIeFD1Yt7+8wJ03PJkdoj1DLSi9eAT1
                      vJrabz0oFPi8T6OqPRLlST1s3qa88D1PvV6oPT1V5bc9wFAJPMCiwbrA4xc7idTGPZ25Z72bf509
                      nb20vRlntD0Ab8O7TkAHPfCEm722OmY9w7IpvYg/qLw4aL88JyGqPcEhnj2j9Is9DY9lvYAgkTyg
                      pu87TjurvesVrL1MqMs8sh2mvchqzrwjq3O9hEnhPOCJ+rzR0sQ9Ega/vcMHUr0MJd88e6aKPf/E
                      sD3shwC9AOR5OmNPnL0glaS9gTGgPdsOnb0iqic9QKCGvVRi1jzIjfy8sOERvYS0ir2esYO9Ok4q
                      PcginTxWRAO9bYw5vdZ5q72sxoc82P2avSLFHD3Zyb49QHDCPIeQpD1N7VS9aJyzPLBDw709HkS9
                      urW7vVMpwj135GS9c169vYa+Fj3gibS7zuBjPUlKpz3trDK91bWIvdiTDTw2/he9KHMdPKBxcb1Y
                      lwm8g3ecPWbihb3Yrc+8zRawPei2izxA16M6VNCZvEGswz0Iqoa9JkWDvbdKI72wrOw7SpzBvdhU
                      NLzPF7M9gp0pPab3pL25aqI9clkKPZg3R7y/p8o9lJnzvGBtRbs2cgi9zbNzvSZAmr0svRW9uxmu
                      PWhHojyA2KS9OWDIPRnayj0ACdK7E0c7vcx6E72di4+9Ld55vcIGaz2w/zQ8B3JXvZDgJr1Womo9
                      qnCcvQ1rt73ZZJ89DTKCvcANlDwsCYg8b8WQPVCygrsYcJa8KKfGvBrDnb3LZ6C9j1HEvWV8mT0A
                      vYc50PwBvHEEtj1fPYE9sY3FPYH6oT0hvIc9jmtTPWhCKbwuBoi9jaQ9vQloxD0PZbC9GK2TPId6
                      X70pGro9YA1tu5mYrD0sgw+9kGltvOKgET2A5+C8B3YgvaiBOzwg+/W7UCupvajZk7xgXO87Xklv
                      PSqxjb3Uzek8UDwFPIAfvryyo8G9YN35u3CoTryC9XU9fStNvbIIQz0Ij7I8Ujw5PUDb2rqwYGG8
                      GOLBvJ+gyz3MAKu8I41uvTS4oDzMCMg84AiXvMfoVr3gSWq9UmIrPU0dVb3Q6oA7uLrZvN1yOb2g
                      nmC7mKqVvZCFDr3Iwa+9GFk4vPghtrwiMyc9AIouuYC3Z7xl+5e9BUOTvdBfoL0gqNA70IZXvO4Y
                      PT1g7aI7tg5FPYjuqr03BMQ90zamvdrvXD1it3o9Jf3CPYD5GbrYt4O8+COKvZQHj7wooGs8M/rA
                      vRAeJL1YLBk86DRBvJ/quz0onPa8Z6iEPbG9yT2g4iu9DXAuvWnfjD0KMiQ9bD/jvBB9IL3FTZA9
                      uPSUvAYRAj0n3y69gE0/vGqtEr2omcW9+yG3PQAoTDuJCYs9wKzFvTLiWz0IWcm82SaCPYzWwDwo
                      8qs82ISYvZMFyL1/vJ09gHb2uxnExD1TZJq9sDXcO5LaBD1HKMW9ZtIGPUADeTxEAOM88GAFPFJa
                      Zj3CRsK9kGgQvcjVh70X8ro9KBu0PKekSb1R/pg9KkalvfrdUL0ANSQ6UrBzPTCPQL1H4rO9ED5B
                      vcj3kjxMFKU8ABwVu3ltjj3QBk+9VK70PDoPHr1oU2A8WioMPZAhGb0UjxK9wXzCPd7kGT3AUR07
                      j5uiPTKJGT3Jh6U97VGpvcASkboAXYs5Fam2vRDeqL3iGBU9EFl+vNGAqj2tiz+9VEkSvfhNmb3H
                      KyG96IjAvF8lpj1wjla8EQ2CPfQLr7wtCW+9jECRPK0zNr1Bv6o9/SuLvWBifruULcA8yyWfPTcr
                      Wr3K1Ae96Aq9vFkawz3voZ092q4UPZEovj0GTKu9QNMcvHRZyzwTFyC9UEA+vPYNUj19/LO9wN1F
                      PGzZgr3pO789+mXCvdSFxTwQeg08IYyaPZgJwr3bJsm9cosXPSzwF72DsH690Mv6O0mrlz0M1sC8
                      qMeRvFCgRL2GVqq99RuUPT4Hbj1/JJY9kqUfPY4UfT1tq8W9F+KrPaZVRj2gJds7lDWjvGgCa7wD
                      5lW9QFQoO/jK5rwBmo09+mADvQI2sr2wfXK9auRUPXhY17zwzoi9I7tZvTlsrD1Aq788oAjAu0gn
                      g7zVeoS9eefEPR1dwj3gDo27e36ZvdSSsjwHuH69vdJ2vVQWjbw0IBG9fitdPXbqdD3aKD495xGh
                      PXRA6Lx6FQQ9+GuKvD5/XD3QLo69dSTBPR1TK71FCrC9ABT8vJ2SLL2JlJo9InnMvdwg0Tw2KQC9
                      MNulu30QkL1pUb49HUO3vTZ+OD3GPxQ9PpE6PWI1k72IQqO8IDiYvEyuxLzUz868no+HvV+Kuz2o
                      eWa80PqSvWaYBL023F09h6G1vQ4dWj19DJI9UATOO0h6qDzhXoA9QFvzOr3tNL0Mc6o8TbvGPWDb
                      d730aRC9UiBKPUBATr2A0gs8WwOJPUzipbzQ5zi8N4q0veSu1zyAfk66GulOvWtdwD0/5cW9fcF6
                      vVOydL2A3N67DY4fvfRQ37yQl769EAQ0PMQX5DxYXX+8TvkaPev6lL2YUmc8Ej1TPRjCVzxgobM8
                      TCGfPEDGbrwZEr09OntgvUIBYD1RzqU9gQuGPWopGT0dv3q9z2PEvQfIaL3H9X29MsRcPZRM+LyO
                      8Z29ZEPsPGqaDL0oB4+98JlJvUAdFb0kdfU8sne8vZiUNryz5be9CVOSPQCJFb3C1D89gAJzPEr4
                      UD0gesW8W2iZvSrqMb2SdJ29lbOkva64cz0IDam98FVvvCBhur1dk7K9G/S0vWMIsD05s7Q90IkP
                      vHhU8bz0Zga9GCu9vOwksbxXoVS9W2yIPbhEtL0dBl29vkePvU2RSL0Nrr695NAEvcj4m73wsiC8
                      QEgRO0NeaL3Ri8M9EeCHPZaOfz0GZwa9Z/iaPXIHob2tvVW9jLKTPNdRcr0U68K8OsLGvSgepbxM
                      AMc8gOI4ugpbEL2CeWI9GBifPDX6gD0b+Yg9WG+avOFWjz1P7bm9PRvKvYPkX715Q4s955dEvfqY
                      FL19lTe92hhoPTpGyb1gE5y7IN5bvcOcQr2QxSK8QJa+PDj+ojwYxqu83B2GvXqJPj2qqxw99qht
                      Pdq+O70TnGi9NjynvUYTPT1SUXI9b3uNPZ+0mz099I89lWezvR2br70RkZs9Os3DvSAvEr2oW8C9
                      F4DJveQD8Dw81Yq9yQnIPSDz3rsw+C287iIuPU03tL2UI6G8AAqVOpI7dz3+sGw96SfAPWtppT0j
                      YUy9LNeMvE2Adr1AB4W8YDHjO/UHtj1nrkK9bkKCveDkgbxkkOE8VRyBvQCER7m1Arg99MvpPEMk
                      cr0QFUe9zv9kPV4ngr0BoMc9aHKPPEjZ07ypqJw95wUyvS+GgT3tNp29QLZIu+Cz7DtTMB+9QHOm
                      PMVIhD1PdsC9GWuuPcAStbxQ/aC9NMe/POpCUL2It469sOpsveCfqb0CNzE9gLV4PHuJhT0SIG89
                      SCu2PM0Ov72EoOM8SYO6PaZARz0AtxY6caS3Pe9Hkz0okhM865iPvcLxHD2yTHU9Iv9OPWCmmry4
                      Nvq8fXKvvb9/qz0bGIQ9HKr+PFSeib3SglE9gG+ZO8NCrj22eWQ9wp4KPaCcjLs/Msa9TvqHvYTd
                      5jx5/bs9tKuePCxHgTx6PVi9Xyy6vcTz6zxAJF69vr8ePYoWMT321J29cp8mPeKOST2Adjm8k4mh
                      PVf2xz1yBAo9QLAgvbd3Rr1Y3868wbugPfqOmb2ovjw8o1o5vWOFWb1vvMm97T5rvVRVqzxRIow9
                      ZsWYvX7xMT3v8bk9YDjeO7AliLuBU7Q9T866vRsxwD3gGJu7Zu17PVKvgr3oy+a8cu+3vdpXfb19
                      cJm9SpfIvZYnGz3SoBU9L1fFPR4ZIT175Y49aKuTvKadVz1CYLC9bJ+CPJqOX73RDo49sAcAPEjd
                      pL2CTXQ9MoVpPXf5tz1aFyO9wDTXOgD457mSQms9WFWJvDlMgD2saOk8+phGvZjPvL3q/5S9fmAp
                      Pc0Nf72wBSA8gvxRPWD7N7uYiru9oieEvXBvPr1QJlm9CBX3vEqTWT04UJW8xzy2PUKmeD3dmqw9
                      /Z6rvUA2EL1AvAW8ABbLPCRHgb3YaLc8gETIvLCuM7yk9xW9wELnvKiWDbx1mqy9QGjJvKgdhr0v
                      WcK9iNulvSMQar2pz5Q9PwyEPU00O71A7Su7ID20vYWKmD0Ok3g9eGKiPObOBb2cxt48IM3KvDuZ
                      mb3KOiw9ilFmPf3Dtr2eMkM9kAd+vFRCxLwbs6Q957F6vSF8xz20W8E8eQ+CPd2UKr1dnVS9LQZL
                      vWIhqr3s9pO8YveyvYClyLvYM1w8WKWKvGqiSL1UsqO8Ux2PPWowQb24+LO9gBZBOr32x70kjPw8
                      /b9tvR4zEj206r8859UrvfYtND26wUA9KIQ7vMJ1CT0aUoK9VJSNPDDeS71gWOy7CgENPSSRzTxy
                      sww9kkM+PR3HuT2hHYE9IEr5vBjiYLy0fIm9+3KQPZqiNj1jukm96FtaPMbsCr34g5G9A+upPSoA
                      Wb3so8888JkmvLZdpL2QVka8DZByvWJRVz1AJr08VG/0PATa8DwIysu8Dc9ovfRC6jz7i5097E2I
                      vA5kGj2UlbY8ALbwOZ0pwr2juMw9ofGVPYAzcr1A28M6OulJPSBwBL3QF6g7LoGkvaC+kb2gv5W7
                      8pV/PSmOhT0NpE29wsB/PU7ZHj01UcQ9FPW4vOeGmD3Su8i9OxaKPdC4SjxQYSO8BdGiPUr3UD1K
                      TVA94CvNO4qWFz0AHAY5oCuaO9J+WT0eukk9KAaDPIwcD73ooQG8MB5cPBcduT2gRT29cFNlPAwe
                      Fb1zJTG9ANOQPFvCmD3T1r+9YAu8PBSm7TzIJ4o8jD/7PDZJAL3Yqmy8BAz0PLTSiLzMMvE8Ya+g
                      PYBavDuALKA702CzPRyT3TwUUfi8HTa3PWpTZD2APMe6i/C8PU0Tlz06xVA9W2qiPXiWxL23t7m9
                      Cy2sPWKLfz101Ik86PulveDZoL3ySKu9t6FpvWiIjTwytIy9SmU1PbErvz1wf3k8QJAuO38vy72w
                      HEE86ezJPQD+8bmsyOi8SdaTPe7fXz1sP8K8UM87PBaxYz1zqZu9x1W9vSBxSr2o/Ki90WusPS5G
                      o703hMU9X9+UPUgR6ryqBVg91gs0PUkQwj0g8KE8+sSCvcyVgL1mjQA9gWmcPQbtZz0QnVw8Rgyg
                      vTBxrDuMW/w8qJBvvABKgLqAbmk8U8q0vWL8eD1iVJi9KGXIvGqaPD0w8ci7qw7Gvdj8krwikAs9
                      p6h0vZ5nED36wHW9kta/vayB5DxAn+g6msN3PZHFwT1D4CO9+KWMPH5pKT1grcO9TttwPUpivL1o
                      RfG8qDtXvN41bT1ESs48i9isvRWhtT16ekO9Yy+3PSijRjzWJyE9mD6sPKPAvL3DaZw9EUiQPdgh
                      UDyrQr29YECIPPAwKr3pGJg9gDWiu9KUcT39zk290sJ+PQCLnDueSAQ9D4e4PZ7peT0Uso88ZN70
                      PP7phb0aFGu926+APYOcpb3oXa69bFDWvOKoFz2g1Cs7w/KjPTozBb2gY7q7dEW/vFrZHT0MAfI8
                      miBzvR4HUz1KeXO9I2ygPVTw3LwmaAi9clwwPaBF5jtngas9AnNyPewloLx3xja90k+TvWVXxz13
                      XIE9sNKhvfpZlL1QKUI8KBaPPPZJcj2++xE9bsQ/PaVAor0EIYe9yn+0vagMvzwA0ic8kUGPPbBs
                      Fb2AfvI7b8yxvbpCLb3ghLq9/RW4vWdns70Isp28UDXtu/HGgj3AGYQ8ULiMuz6Mir0i+Ku9gNHK
                      O6BDoL1QiHq9bcCpvUBJEjvskoU8gvNAPcL4Wz0AwAq7uWHDPYBpiLrwM6G9RsBGPccXyD0wtFa8
                      AIkPO0oPWL39+KG99lAsPVC2UTzLN7W9Gp6avWrTeD3JrK09130+vdLQbT00Kg+9wI6KvYCmbTrE
                      gt08Y2Z5vQ9irz0ps7c90IYmvKbTZz3YRYy9B+yQPU9nxj1CdDU97PyXvOYdo72o+ce8W++aPU7d
                      Pz2sV4M8AFJoPCZlBr3BM5o97O/kvICG/rx42rC9YC5FO/O/a72uTEA96wycvRqQy71QFUy8gJlT
                      vAISYj0DYI+9F2WGPV9/vz2wRDO8j3+DPSYVir0FLcc9FkoBvaPwHb3ys629DVzJPfQ0tbwoDXi8
                      JYSEvWypD72dF8M92XqsPThZgb30Z4c8U4OPvcfGZb1XxbC95U+JvYuirb2w+VS8DMqkPBftlj3g
                      78K7ZvMyPfAqSDxg4ag8oTanPXGRyD26kSC9SjMlvWrRnL0rbqG9tlsePQAPrzzqOhG9JsI6PaOF
                      M70pJ6Q9VIm5PLGnhz1xnoI9YK7fvPP/ar0zh8G9asBAvaGUpj1gSea82Py0vHevOb2siAW9wM0R
                      vLa/Cj39to09iLzOvOkUiD14KpQ8wO5pvYoPYb3h4aQ9ALBzudAHdTzK/mk9uogrvW39rb0gPIK7
                      AAf4O+BkZ70AiGa9c+qpPRA4qL0I8ME8IKbDPJKMiL1ysV09n1q4vUvEmr1sGrM8GI1OPKESoT0M
                      5M08mIatvXV5r701c4u9PUJWvd3TMb1UsMm8lZ6JvQJSZD1guJE7sA8vvQDeDTsDjb29sc6jPcwk
                      0zyVibc9zRiKvahRjTxaHGC9/MzpPFu6rT2yuTs98Es/vQpRfL00BJ88Mw+KPRckkj0YiIG9Y3Wd
                      Pb4xCz2bHsk9kB++veheSbxgtRO7rqcNPSONjT1fpb89i3efvQFzmj3KrG+9GHVUvKXZqz3uGDs9
                      GQe/PWCp3rxgOKe74kVwPTZ7MT3cA9M8AG2duWDEEL2Ba5I9WgB1PRorQL21DI09GMRSPNh8ujy4
                      vqO8xnEPvQN4nL3EgdE8k+6/vUF5gD1u/qu9AAFLOhVgvL3/fb29tYXLPbgWpLySnHo9+ACqvICo
                      gjxCr1E9IyW7PXTbs7y73429KBQqPAAgobr0EoG9lTKovcAjPbukpNc8Q26+Pc0fHr2tooI9GYGQ
                      PZA5gb2zOaY9WHayPJtoqr2VKbe9vYKQvSbVib0gmIk8OySzPVbhJz1gNJ47g2GLPa5yGz0A3KQ8
                      6jZvvSK5YD3o5Fw80Da0vdi5EzxA6Zy9YEM8O2bDSj0DfqG9EeCcPRL9Qz0HPMo9U0GnvargRb2Q
                      vUc8Xe+fvZhWBrzWkaG9WCImPEBSJLuAYcM62kcfPXSK2bxDC1e9loqbvQC8Z7sa2kq9k+9TvT1B
                      Pr1zdJA9MtcGPRQmh721dLs9QHscPP4Nkb24sIW8dK77vFhGY7y66om9CtoxPcrSjL2X8HK9Gfeq
                      PV2guD0omLe8B4S0PVRym7xnXII9BM7tPID4KL04fIY8KmpWPWr/Ir2Cci89lZOoPe58hb0YYYs8
                      SaHBPdQ2oDyYZOy8ACg9vAxrmDx2BBA9IAOyu6BuRb3GlnA9yGyMPCK7o73expu9IEzWvDJMOD03
                      YLe9MFGuO+jGgjwyWTg98LNavZj/8bxkp+Y83QWNvQRtB70T04c9qIWdvHBUE7xSArm9keGOPQEJ
                      jT0CB3E9cEVHPDbWSj3wGzu8egLEvQo9Dj2QMB28VkpjPakkpj02m0A9l5m9vXJtej0qD6q9YEfC
                      u31kmr0rO8c915JxvUXmpT1yTyA9aGgQvKxn9TykaoS9FBvJvJocdD1pbaA9V6lxvbf4J713PzG9
                      +Lq8vZ1QSr0E3gO96HZDPGBP5LubO5Y9lUGnvTh0lry7IcI9o8ugvTa+Eb1MhfS8PZO8Pb4VUj0C
                      yQc9aj+GveZAWD1QRpc7MD74uxjZ1rxgWZe94EGUO4LNDD0gGtM7UzmwvUDaObyAG8q6JAfXPP0Z
                      S73Vfcm9Qi8jPRq4B734hLa8ra6zvaNSrz0Ix4y8fUNavajmk7y80A69ko4OPfFNnj2ngR+9HS1E
                      vT4Pg73lNKy9Ok98PZRWojzJmJE9AP0kO002mj2a8x49YDyTuzSpwbyOKHs9okxaPSNnOL2RG6A9
                      F5p8vbWAij2weCW91GOkPFj0EDyIgsc81z0vvRRO5zyAntq8gqtrPd6NUz3NMrU98P8IvMrsWL02
                      cyo9RX+pPTMRsL1AqV87gCW0vJmYhD1HPZ89r5e/vae+iz3gvtU7K+GHPah9Jjz0xOE8OuIqPcDX
                      gL3ScQY9Ok8QveIOJj1zaL+9Ci1fvc5DLz1ZlbM9NVuJvQziiLya3R890GLdO9t6mb3t78a9yDrq
                      vDPtwb0IULU8G0GuPYL+fj0sH/g8bcpTvarVJT3Kl0+9sDOfvaUjv73oEZg8URHJPdjFwjw3Hsu9
                      vt6DvUDJw72Hnrw9AB5MvG4hYD0Xqq89gweYvaB+b7uOpDM9sj5HPdOijr1oTyI8nXO3vQEDij3M
                      xRO9UMrbu+x/yLwWxX49MTjGPQkywz3AsqS8aKwgPFSR9Lw09Z28KGQivLc6w70wayC96J4IPLsJ
                      ob2lWrU9DZ6UPZa1DL3R04w9P1+nPQcwpD16R1O9/aTDvSdRL71ov+e8kT/APS18ur0AWjm7ot5f
                      PYA6W7qCPzk9t06/vYMsUL0DECK9WudjPTbUWz0AsLK6x/ixPRhGdLxQEdy77uacveB9Cr3yncm9
                      YjciPYnMij2b9IU9FrsSvZ4EAj2pYKA9hiRZPdA9U7wy/T89+HzLvVmEtT2THo09soOJvYablL0o
                      r488oK/6vC09nj1QZlM82mIbPbqHv71AlHK99ssJvWV9wj2tnLG92zWwvV3ZjD0PtKA9Yr8TPTCu
                      MLw9HKk99MnqPJe7xr2AdHi8TVegvbMkhT306bQ8GtFiPcAsMzwnnVO9LhghPUr6OD21scu9YvU4
                      Pfqgqr2XZW69Z1+uvUqeGz3e82Q9wvh3Pc14Sb3AWyk7zWy4vXsPlD3uxx09IAOTPDCY/LvCuB09
                      ZmkRvbjPwby36pE9ACsVuwEksD3jc129tl2hvUKYAD0Vfae9h4FyvbpLHr0AOiK5amUvvRF7uT2t
                      hJe9AL3RvAOtuD1A6nE8bB+PPMqLsL0g82e9OpogvSA06ztRroI9iTWUPSYNYz2Pu6g99yI3vfOq
                      mj1sIuo8Bl+QvQyojL1GWno9i/SxPdppZT3QdIS7flwYPWgrBjzsIMA8DYGKvQCXJTtj57g9xxNg
                      vULlXj14Qs+8+0KqPVAqi72nhTC9TWi9vUD9QTyUAIK94LkcvWyKkDwwY5+98kIIPRcLOr2FF5M9
                      3TArvTatCj0u0XU9hWeQvZQnyjzpcKk9mNEoPMlslT36YaW9oIeXvX+/pD0/M4E9YCwjO8HOwD1V
                      f489HqJJPSpYBb0yk3095kFnPZd0Ob1aByc9z2fIvUw4rbyQrmq9qsInPQzZpTxxZpE9Aq6yvbsz
                      lj2waGW8dVvDPZXKl73F24k9BimqvcJYkL0IRO28UDspve8Kij0AKFU6c3TLPWclwD24hbe8qH+p
                      vbEqxz0AhE86Co2OvdQ78rytTIu9QFCmvHUPo72Qp2296FjqvIAPQL0azmm9qKHWvOgLcbwIEpW8
                      FCHRvP0MqD2AxQO8m0+FPbgSpDzS3XM9YHjYvJ/qrb1ZBYw9GnxfPfjwyrzDG0C9Jg2ZvagWqzzM
                      UYC893ZtvafEwz09wqK9bJy4vIDIwTytd7Q9tKHivCKaDD0Aeqm6AEBJOnWFq73U4O48cNlyPL/3
                      sz2Q30Q8mxebPXUKuT1z3lO9O1fDPUj74byU0Ku8kr4gPWAmxTurdMI9aKq4PLxX/TzogLy8TN75
                      vErsFD1T9WK9AHZaudoqDj3aNQY9oNHKvZX9ub1ZMIg9mwGhPephC72OGm09imGavQLSNj0WDyU9
                      crKPvY/GzD2MQNa8CJCQvNCMor0Sa8i9AissPZM0y71HP8u9GyCpvfjR27z/pcS9rs5xPfMPfb11
                      u6C98x2iPVD/Nb1dmVm9qG4DvLYjDL1exDM9HCUYvTTFxTxgvac82p2QvWDVxzyHhIQ963OdPQSd
                      3zz4Bss8Wq2DvSmOgT01j4e9+vRzPe4uKD1AcUU8iPuBvMB9YLzIq5k8ojhrPYclUb3oC3889d2+
                      PUAcXLyZ8rk91+e6PdlnyD0NnW297LvdPFD9hTsqFD49SBvAPFAbHL15zrU9Spt/vT71eT0198m9
                      MJdqvagHh7wAvtE5JroaPQqQPj3A8lE7NZKyvc7ciL1yeyg9MJxWvVLWx71g7oa9uP67vKwd2zyo
                      MKk81j4MPSwO8byfwJI9o/muvcC9orxQbTu8gAnqulZPFD2TEB+9tkAbPXMHwr2UcAq9ArVLPZoX
                      Tz2SX3c9o11AvVAmODxzwZ29+FHMvcP4c70iQ6u9wvxoPRSIFr3hCrM9d/ezvfLnAD0ANJq8YC6s
                      O4BoOryNqZq9jAr+vBSljL0Ymau9QrEtPVIndj3VQpA9/htKPdBjOTxOJHo9oHMjvVmOmT0Jqa89
                      OOSpvTtlyL09H6c9GlJWvdG5kD3jg5m9tFT+PN6XCz327aG95dqJveZ4LT3A5xQ7qrdnPfHWqz1j
                      XZY9sOvGvSIkIz3SmDc9I8etPXRs7zwqJr6986mRvUK4QT2Wrqy9l2/EvXjnlby81BK9RjGRvXJA
                      Ej0dRTi9vl8tPWNGIb2oU3w8uaKUPYgPlb3H0pY9ABO5OXIFqb1Hn8u9QWq7PdPwdr33zL89VEvZ
                      PAGCyj1For89flMAPWbKWz1A8Gw8ct4kPdvCsz10kuC84+YzvdP/tT2UNbe8wHqYunTXg70n/zS9
                      AIwCuQCnOb29nI29BeWVPQB2izsffpo9JDrrPNbdl72gbFu7juEoPWL6bD2NTJY94GKtvMB/hTzh
                      EpA9AFP6O0Y5fz3CrBk9uXqnPUgupL3oOZ+9BeDIPcB9dzxgmfu8em6yvcARRjyo/DU8JzuIPdKz
                      CT1Q5UO8IKyOPCaaoL1C13k991yxvQh5m7yDO3u9jbyJvYaVPT177su9ylJkvfB2UDzgCuO8VGH4
                      PC8GoD2gVC27U6hqvU1bob1qiQs9IOSXPClaqz0DUo492aPKPe53ZT1oL2O8WBsYvEFAyz1RdI89
                      wNRNPF/GhD1oD7Y81YWqvZ3UUr0lQ4G9QM/OvJkiyT0STYG9eM3hvK0wk73nnpg9C3mqPUCsFTw+
                      uRs9HsOMveQVzTzwsHa8OqkLvZT2uTxsDsm81AndvAAEpjqwGyy9J2THvUys2TyorA88ssQ3PTy8
                      9DxhTbc9uuEDPX4EHT069yE9omQTPUBsiL13Ra69dKcUvenOkz2aRBk9lOymvHz0h72w35o77T1T
                      vUqsVj1+oy49WJ2VPK4gWz30SYG8gAP0OpMMlL3t7pK9t264PTQT6LxKI7O9FXrCvToQBr3Q8Cg8
                      GgdUvcA/cjxLZ6M9XgCnvVT9Ar27Rqi9LAXxvPB+eLzzQmq96/qjPdjK8rwVl429TrqgvfD7dzxg
                      TAE7IvFGPQJ2Sj0tu2i9Puk5PWHciD3I862850vHvXXlkT3iI8i9x4KFPSDlxLsABHm8iHjhvH51
                      Oz19FHW9ypwxvRbaKj1A2dA6cKJ/PHE5yD0XOTi9jdh/vX1ZyD031r09qn3KvdBaubvdqbu9KtkW
                      vRoGfL3GI309zWkeve5+YT0NSE+944NqvY//yb1AKKu88G5MvBO3YL0cFf48498jvXY0Sj2A81Q8
                      5ukMPahegDySwlI9QGn1vKoyrb1AQQO9AKCXPGpmDD0kuc884A2KvKAydzsVcpo9VPOGPOynoDwK
                      +Vk9ymoyPYDfzLxbj6Q9opw3PX0Ygb1sjOI8tMoIvelvyj3LYZo9MJQbvLBMCr2IRY+9+EiOvT7Q
                      ST2gNPy8OlU5PYBiwToL7Lm9aBklvC3HXb1PZMs9Ua20PZCbIzwaChm9OFibPBC+fbykftM8p/6y
                      PWG7sz1XmYo9ADSUvYAi77xUC/w8sf2BPWz6sDydpbM9HRiPvcBsG7yAJvK85n9wPQ94wr0j0kC9
                      sCkHvcC+W72+q209JficPTBWE73SbkU9MCxFvIUTpj0wLBm9dpYRvfTCvLyU0ay8MNysu3agcz1H
                      Uie9GFVvPMCm/TotVpm9gBZQvNoqLD1L5a29+WKGPcDXoL1gFV67B87IvVZQB70145I9+vs1vdOQ
                      oz1JrIc9/RCuPZVRyb3Rjrw9ElwmPRn3nD2oD0A8DeSjPbq3Lb1A6x69lCzePKUIsj1k5/M8kdCv
                      Pb9Irb2GZkg9aKfAvRqvU71fbqw9xWmOPTnEsT168sm9MHVCPKgxxL3JRso9mmg/PYDtiDuHu7k9
                      sSu2PfdLjT1gw4Q7CqGqvVkalz31r4O9w2GfPRBqcL0oQUO8wCoJO9bbfT2AtMA6wjQbPa+ykj3I
                      Bpu8DIsLvUpblb2SC249DlaGveJtcT20QpI80C+fu4tWvj2Vf7w9AN/Ku3DcO7wFEMW9FyaXPQDY
                      JDx7aLI90W6sPQDyLrsAkwi6DdJpveD4n71uf4e9nadAvYi5wr3+llo9rUzHPaHDtT2Nvlm9sIFz
                      vKDaR7sAJBW5GP7XvABbSTxy5qi9UT24PWqyQj3HwZo9QXanPZCRJbwCGkI9aRy5PfXXsz20wdY8
                      56cbvUyzqTxAoB07EEV6vYChh7sOiFQ9Kl1kPaAgXr0Bf749mpNuPbf8db2Dg2i9sZyOPcMsLb06
                      al69AE3APHR0vLycDRS9azyFPXADRDzg6Lu8tACEPMlYjz0AI9w7HgFwPVwBBb2hBKg9QDFFvQCS
                      PDwYtpG8WiVDveY/Aj1gNOE7v8vFvVAru7v1+669fyucPZR50TzHLKk92phKPVrfdD2isaa9qOm8
                      PHVorL028B490wbEPfW3vT2Q9iG8LuUePYDB6LtBH7Q9g1tjvU4KPj3s6sQ81ziVPVTc6ryUlp28
                      M/+3vUowbj2wdmo82/GPvUsewT3Ubve8RNfYPPT56LyRoYA9MvJ9PVLYy70qj2g9NG32PI+Zhj1y
                      gns9eNTTvNAoor2iVmk94EHlu8DGzzr3a1a9KEjLvepdaL22viQ90GmruyXdkT0BBaQ9oEFfu9Ar
                      aTxKyko9AAC6t4PIsb1Pbp09M+C0PVYjST0pSok9GIIwvKc7K725v6898t25vYOBkr39Kki9g760
                      PYgp+rx7Oqu9VopjPag5Jbz04N482/XDPUpfM71WWwA9EE85veDIEb0Xwy298OkKPAForD2p24M9
                      OjK3vdSxDb3aqWa90Ck2vQsCnr3KhQw9S6zDveuFyD2Y6II8MP5uvNtOoj2jm7m9lu+bvcLPdj0g
                      UK+7TnJfPVRK3Dxuyzg9onbMvetAwz1qCV09rf6qPZ42Aj07Q769bGrTPEB50DqKxMW9FPnsvDMs
                      OL0yjBI92s4uPfDxYrx0+KQ8wIT8OsVNpT0/a8G9wMM9vN0wO70wmQG9o7BGvUMIx70URKS8g+aY
                      vQBsQTv6Q3o9I4qsPf0lOb305u08XtpYPcqwsL0KKxk9bwatPdtcub2H6lm9HPKLvfqtQb0Xj8a9
                      VImgPIDDLjxMjuq8EJE+vbERxj3USok8DtCfvRX0k71d20C9h/2fPavMjz0A/ge7YEX+O5A9WDyy
                      iTM9YD00u0uMwb1iKk49DqqGvShSGTxAhhw7J74mvfQRgr1bia49gImIvemenj0npZc9AGjuu0CT
                      dL2XlRu98Gh+POLhuL1Qn3w8X+aQPXTn6DzA7Xm72oFvvUcpOb0AXqg6rUNXvYBQvLzYfhO8ALgM
                      PH0blT3Qr7Q75zyqPVOOy71gAm+9wBcMPIDbRL0DP8M9Ih5mPVhLRjwso4e88NgHPDcmoj1YXzw8
                      xy6EPV9FwT0YQlO8I5TMPRHsyz06PVS9NwqlPSlkiD1UnoC8M228PZmdwj1gBrM7GEHnvNiqmDyw
                      Vum70FX6uzpLaz2wH+u7aGRCPIKdPj1vDIM94MPpO3itqDxMSa68gfujPR3xvr2Dojq9aiANvbr3
                      BT3xH6s94wMfvYyviTyQIFe83aS4Pbr1TL26LD89yoZfPXk4xT2xpas9Ku4cveLMoL1HyZc9GEJL
                      vE+eiz1VQJ0942CpvY2huz0znFS9jc2Yvfh4u7ztRLo93xqGPa6IND36A5G9H2DKPbDpIzytPyS9
                      PX2Zvfc+br2LPsK91B7oPIfnuL3xdok9REj+PBCTaLw4lM68lZSbvePrtT0zKZg9gl6SvUK+IT2s
                      g6S8DJviPIBkrLsUeYM8UMhqvcOjoj0A+Fg6GaunPaasNz0aWjY9GDm6vGKQBD3tOou9M5HKPaSx
                      3jxEad08KF8wvNiixjyT4oy9oFRPuzUMub3Yk7s8oUS4PYjiyzzHhKI9AMoIvYAEqzrCzEY9kLbD
                      vXPAt70ARy07oHikvWDFpbtwYFC9DuFSPbS18LxKKCW9gHC7u5iifTzgMec7840+vegXcbz0xpi8
                      6tEUvfRmEr3037m8JiNsPYz+rLwiX3g9USGjPe0Egb2HXmS9zqptPdjlRTzTrD+9a067PRptjL2+
                      u6m9sx+LPcg20ryYOz08+okcvVL5GT0yEms9VpNvPW4/Jz0Asbk7gLDou0dgPL3japa9JT2rPR5u
                      IT2waWe8wp81Pd1Gxj0FbrG9dWGaPRo4ar1hDLw9qcXGPTrMo71d6Kc9Fv4UPWxQ97wQnZC9qt1u
                      vUV9sD063669+QuFPSIKOD0yVns9QJQyu7Bt37uqERU9ikVqPVgPxb1sw7u8Rr9uPYrPiL3XLF69
                      9cuCPZwsi70KBAE9BksjPU3HwL0AGnE8tog7PR4Oir3SZ1I9R5y8PTIpdT1Qqhy8w1BSvbvvuz1E
                      g4C96uMZveJQWj2wGh48ert1vWn7lj2S9Bo9gPOmu2DZdDsqqIK9s3pevcWolT21KLu9PsqovSMO
                      Pb1mTBG9rFfEvMrjIz2Dnag97OwPvfmHmj3Niqc90vcgPb38cr0sAAW9BXCBPZJSwr05q8A94oBm
                      PcFzxz2iYHg9spJcPXFexz14DpW9S9i2PSPqrr0m4xI9CmhKPecaK73zCZG9L42cPcze07wonf28
                      eHKdPE1SoD135669AntPPd0dpD1HhVe9WBuWvY0jvr0u4gg9sHXtu2wx+TxQORO8tLeMvNdsZr1M
                      4dk8pnpePUTS0zw+0UM9QnghPejWCbzofz48tEOLvQL1v72WHGM9CRC8PYoaMr36u1K9jIuBPHsE
                      vr2Apza8d31Yvf/qkj0imXg98IVYvOiNVTzq/lQ9u3fAPUoqbD39VZU9eK+uvCEVjT3JI6A9bHva
                      PM/urr1zuU+9MOp/vIrci71dTku9MeafPYKNKD2rRpw9GHIbvPojbr1L0og9EoBqPdjAyjwlFqq9
                      a6/CvQBTcLomCSE9cKgvPBPdKL10dYy8AOjPOcMLxz1i2jg9agpdPQLWaj30GNo8zPOwvBt8qj2U
                      Tso8vBaDvRYjo70LyaE9uhg3PfrrPb07sJs96zCjvYDY/TqYWYk8hiVkPURn9zzjJXK9JSyKPRQp
                      qjzgdf87dEiDPPLRkr3U2Ye9Mlg5PYfYxD2jADG913Q7vWFQjT3oLLm9HPuBvb1syT1h9b0905a0
                      PRhN1ryskq68eDDsvJCfm73g5i29BrEGPRQm67wABqG5zA+AvVAm77u3NJg94wxUvbHBmD2AKmM6
                      bOv7PA8UiD1B+sg984PGvQUHpT1g7iy96bfIPaShzjwVFZO9wFYaOzmFjT133Js9YK6Iuxg29bwA
                      wGy5MpAnPbqbS70HaD29xl43PTDj9DtpcK096KAmvL42Mz1ehjo9BjMPvTKwx72eaqq9gIP8On2t
                      ZL0i7ZW9itZHPViPBjydjJi9QPxqvDB7ibtAAbS8uYyIPQIPgr3QwxY8bD4FvcHprD3HWEG9Dklx
                      PVhmpL3A1jW7KCKRPARj/TyMV+u8c9M4vYpVer3IcM68tuZ+PXAmcL0+TgQ9biMDPRdRHb1GaIm9
                      SrkpvadirT1AuNi8nS1eve8fxj3QhJK9AOGKvN1mvL162xA9Grp0PTfnPb2WPzI95EHiPLyTF73c
                      Eha9kI0LvLN5Ur2odwy85T60PRGTyj1FwL09KI/qvPJxgL3CKSE9bO7uvNp1bz3Pu8K9mM0MvFPp
                      wz2VaYc94sAkPZjMwL2TZCm9CEXxvBPJIr1taXm9NIm6PH2HtL1nJH29cJtKvdJGGj3wvBG8oOIs
                      Ozc4qT2xDqM99sgOvaxHEr3xcZ89gouMvVKaNj3lKLM9ci9sPZLjSD14W6w8ffh3vaifX7z5Yps9
                      egw4PWCOeL2HRKY9dwAbvT6vgL1SFbO9Ohk7PfrCMj0wvpw7diZ/PVACcTwMHIK98NkSPMpfDb3R
                      iZk9qiw/vWg+RzxRMJ89bASjPAMcOr2qekE9kmx+PaC7c72Sdkk9VMi3PLcfpz2j0Yk9DjNXPTCr
                      3TuRj6A94jsrPfyS8zyTcnS9TPmhvKgmKbzYwQQ8wqMIPUfDGr1QFzC8Ci12PYBHPzxAh0Y7rS1I
                      vbh3kb3rdJM9aAGSPDL9BD1ahrW96VuoPUCZMDvg0c076pZ6vcJeWj2qEjY9QBQYvX3ceb1Zdr49
                      UC1VvTbYdT1CYUg9Cw6fveqUFj10QqK8qN9YPMpoeL1sWwO9aUeIPcRK0zwAf3W9s26XvdQHpLyW
                      PW494KjzvHCRMDz31nS94i9QPcCxGrxs+7u840aWvUOUMb0qaKa9tEeaPIBEIzwSVAg9ABBPuBs2
                      rz2ATl26BHLcPJL4Nz3yXkg9NULKvcDotLoAaou7qMB2PAAbOzuACS28qLDKvQDY7TnAQWM8cPwb
                      vHUeqD1CKoq9sEnguzKJMj1i9q297OyLvMzz2LyqVp69vCH4PLq7ST2GkSI96l6yvYyp3rzfQpI9
                      FLzEPNous70GIRQ9ALkNOviZsr1Q95A7XOsNvUD93DpQfFS8xci2PSgNjryCUZi9C7KJPeEvnz1m
                      ggM9wtapvdkAmj3ow9q8gEvWvP+Wvj3UesE8yq2FvavTlr1Z84E9MMRdPNleoT1Vbse9IKeMO8Lt
                      oL3mc3g9DiUrPfD9Hjwrra49VC+1PLCl57v7i5w9Le98vZlbvT0tuso9do4OPY0RtD2zZCe9Mn5F
                      PZthkL23poM9wtq3vR2nrb1YLY68LZe5PbKEBD3Y7Ds8AiUbPT51bT1YnfO8Z9fCvV6yIz125o29
                      x/Gwvaim9rzc6oC9+iJnPfPEU70QRGo86BCwvcIyWz1qkK29gOvVusCEXzyfGr09kNJKPOJSOz0N
                      zaA9eIyuPJbgkr165Ts9YIehvajQj7wHol+9xgqRvTWwsD2TbJe94HCBPGhFnLyFZ7K9tXOYPb7e
                      Kz0AW585JNvkPPpqn7102bK8ksQrPQZQdz0Avq05Wm+JvTXgn70AwM85owEwvVhtpL2QtwK9DLrP
                      PPojsL3I5uq8Wj0dvcD2WTugsCs7fXsovSD4/rvAWNw6IW+EPQC1Xjxf1MQ9V3VRvYrBLL2wWNW7
                      QKT7vKppVT1Oj2E9OG67PNOfXr1dnWy9AEm1vRC+dDzAOq69o48yvULNGz2WggQ9jFKkvFDvDbxQ
                      VZW9siOIvSHfhz22PhE9TaqqPaJmCj0wDNG7k+oavadfqT3QfLq9IPfivAFxlz25cso9aQeqPYw1
                      4LwT7YQ9PAnTPLf1sj1A+C87JdadPeREC72Eod88zzSEPVTixbwYC3M8KJAzvCSo/zyA3MQ6Ty7F
                      vbQK3jxg8xa98UyhPd4mdj103ta8RcO9PVT2k7xS7w89ONbhvJiZhL3yICk9gKy1O92zfr3d6mi9
                      0IIPPIuxmT3DK629lDWlvDeYoT0aSLC9JuQCPaCWmDyBYac9s7MoveKQIj0tqco9MBt9velapT0A
                      Xo+5ALkiu3CxMjzeHJ29ducJvTTdhbzhJoA9JKTkPI7EaT1KmA69sF0+vGD8uDsoVRe81BP6PN8Z
                      yT04ute88+hovbCZGLzAN6e9/JOFvRCQPDx6SVU9QBcgPN26mb3rCZI93EkOvU4sBD2tgqE9cpkj
                      PZzRh71aNRi9yhZBvWzJ7TyHXce90Oacu/BEVbw145c9FiAZPaA2tLwxA7E9QqVwPSbxlL0Q4gI8
                      6ISDvSDWQL2trk69cjZfPbDK2bvtnYi9Chq3vZChf70AvTi9NhWCvX6zOj1v74Q9y36cPRrOZT1o
                      orm8CthePSCJj7ukSNw8ZTCzPcYLND0AChu941+2PVLqfj2QSlk8wJTjulA/LDySuhA9uppPvcVV
                      uL2oSHi8gm0tPTMcgT1U/9o8t55BvZjQwTyuaAE9QfijPerRSL2pa4M9mWzAPc77qr3AW5I8iX/J
                      PeWvlj0qKWa9oBJsu7isv7zjqlW9sKQdvPjwjDy9eh69fOLlPLc5SL3gSbC7sLzxu0KRbT0TZCS9
                      aJSxvGQx2DyBdbU9AV2XPQDv97urRYI9AGlsO33voj3gTW69JoRJPeLPSz2/5rg98Eh0vdV4q71A
                      N9m8QN4MvCyFEL1gFuC8kyFLvU5GPz3a35O9HeVhvUCDDDxoKhs8MIoMvJvVpj1gvs27Ue6iPcaI
                      dT2AItq6gP39OhBcEjx3Gcq99mk8PYAkJLyYpoQ8FfSzvZ0gbL0w3GC9UmFrPeC/tDsZ/rs9iFiZ
                      PIWziL0LVaw9cpR8PZAHZzw2SY69zJqWPBrtir2Au6k74I3Ju0pWIr2Ana69ot4+Pep3vr2AdZ+6
                      cHQOvdjFwby0d4O8SQeOPULHdT39TSG9BAiKvUBCHTsAs/O8QFGoPKmbxz2eWnE9ABsNvA13fb1/
                      4cQ9vLeEvandjT3N5VO9LjlWPRIcRz1RLZc9+HrdvPSh/zwZlbM9BDPTPBa6rL3oVkG8h0EdvTaw
                      DT0a4Vu9pktfPa3Ipj1YzxC8vIcAve3ior097Zs96NhOPDptFL3Hl029MoRuPb9SxL1nk6c9loAS
                      Pe/3wj0HCm69ziERPQBPYDwgtKI86K+SvPnmmT0myDs9a/WHPZ4Sdj0fl8o9DF7cvOfidL2adjw9
                      hLoGvcB5gzzPEsM9mk1QvfSWlrx6mX29hEnwPDV0qT1AJrs89WjAPTLGob09cYw9toOsvcfkVr0k
                      MNk8QsIDPTMEo73wBH88cmcsPWe2Qb1bdaM981IbvQL0Xz2mlRk96IUCvNgEuzyJMLs9SBGhvfDP
                      WzwA2dQ7QM2aPGGOrD1Ahl29UHenO3mIgj2Yh9u8U6ZRvVQH9zzgdrW7oN94u/O5Qr06VwU9rb+b
                      PWGXyj0dv7w90ncaPeIEWD164wy9YKYJvXLRhr2f6qY9BradvShnsb0AdaI7yyaVvUa/ob1qRyk9
                      9PiyvACYB7hvFsS90k53PdNnhz3SQI29wJ4EvQcntj14y6w8wsYxPaAniL072r89ntkAPSCrxr2o
                      ox+8PhwSPcwr5Tylc6U9gM3ounMxV73LzaA9f6ePPR7CYj3pHMU9hgCWvRiNcLx11bq9GBGevVMt
                      iz3KAQQ9qLH/vPlzpD100ZW8EFXAvdAQ8jst2bA9fiOQvVFLwD1616q9+G/NvMD4rTxAf3e9QLFH
                      O2d/t73GcWE9eosfvesbyT24F4i9e5XEPVo2wL3QQ048mXyOPeztE73Mb/A8nWdlvXrWhb29NTi9
                      LPgSvReJjj2KyG+9dsERvbrJaT1ofaQ82V6HPTLmYT1AVmi8gOyfPJCYJDyparw9QNQ8PFUqpj09
                      6ao9yEaFvRmfrT0SAQE9PUCgPYpXcD2wNX69N6KKPcAQkTpMlMw8E4TDPcKCXz2HYkm9KQmbPVoO
                      XL1gQ1A7wEmSvN2djL1qhla9EFADvXntnz2AQDi9Kp8nvWmSuD1Aq4U8eJe4PHDfMTzYqqS8kq2c
                      vSrbHT0KwTm9YoYEPWBGBLuALUK9HdjDPWjGrTzYp8K8MzdKvdRT4Tx+W5K9dIW5POAkHb2qism9
                      QNm1vMqvcL0iE0w98No9vP4Jm71IYYC82vgiPWCpnbwYBZK9pwVPvTRHiTxiyBE9a2a6vW6cpr1M
                      k7c8ZgIKvfBuBLymk4O9TVysvebFMT0XAKU9bf/IPcCosryOOQ498nA8PSD1m7zyDJO94GjiOyQ1
                      6Dw9Mo29igw5vQsyxr1LC6y9BWuuvWh5bzyuCW09yKK6vAj3tTxvdru9cAq8vUGWtT2AqqS8ICvp
                      O1Co4LsloIC9XLgUvb69gr2NPXu9jVV8vWYskr2SDCg98GQXvQsPur3Y8by9VXWTvYJ5cz1TF7g9
                      8D3HvV6mQj14uaW8ljsIPcfAe714A4m97UhKvXVIxj1FU4g98T2wPZEEiz37DpQ9oFIMu+PNqz3U
                      ZLW8AriTvaBtYTvwWTc8Ve+tPXUclr2q23K9YotAPcNDQb1A3Ey7m7G0vUKWeD3DlaY9mRuZPYr4
                      ez3Qqnk8Ji4+PfEFjz0n/DG9ENEqvTe4uz0AjIo69n1+PRiYhTwky9w82JmSPE81rb1/C6Q9yt2q
                      vXdrgT3heKM9nbmKPVG9uj2KzXm9yPCVvEAuZLtaB7m9MhxwPUDMlLzyqRg9vZZhvZgcub0zmW+9
                      6o9vvTERwj2DZ429lM6IvXCDbLwQbxK8pvpdPcULn73fMaw9f8m/PTrLYL1Z9409Vq9yPb67mr3S
                      M2U9MOOmvSCS9LswiHu8KGXMvdQ/0rw6+2M9ULpcvI34oD1gbXu9Z7IcvQCqzrlAmoG8Rj5DPUBi
                      P7vqEVU9DNKkPKfpMb1M/5W8VleovX6vGz3Fe7s9cJJevVdhij2e3Ho9jAWlPDARn7tz8b89chM9
                      PVCcGrzSYCE9JOD7PDJ9PT1Li729HS6vPV+Rmz3QbE48gP6kO6tJm73SRQw9wUyMPSZdKT1DIy69
                      nstSPdAhPr2qpRY9Mt+ZvUB3ar0YC629SnouPaQ2/jwJdI89u9a7PXJoBz3sDhO9y++yvdSAmbzo
                      8IK92vSkvX0qjT1cdwu9rWeGPehgr73ofmy88N46POAJaL1AkWo7eI2RvDJXgr2wGmK9Sr9XPbNN
                      tj2b1JE9DMzgPEPEoT2oJMc8nJ7QPBEplD13dh29MgYuPRcPaL2YvU68q4SQPY7Di72nPbK9MIdG
                      PGYFXT2Awbk7VHQCvfIllb1a+Uu9k3jMPfdPxr2XJli9bihUPUmawz2URLo8+RKJPcgt5rxd4UK9
                      iu8IPV6BEj2X7iy9vrVtPYgom7yA8QS69GzpvNDqUr1AprC9OnF8Pe86uj1lLsm9El44PXgQ5rwm
                      moK9KlZmvSnbyT3hyI49Cr5ZvSGetT2S7B096rIbPTAm4DsZTLQ9111svZafPD3gYWm9RFYOvXSS
                      vDzM1qa8LkSHvWeZYL2OaBs92id2vWy+gb2ouZO9M7Ceva3ES73wH0y8HWW5PYDGZbwyNCQ9oHGj
                      OyhtKjy4Ybu9w8cpvULMQj0jvyu9XiN6PVjDJ7yHRMM9IM+ePKD8xDw6tbC9+DCvPNjgLLyjkcm9
                      /dxcvXVswL0KcW29HjVNPYBsjzoOpmQ9/8G0vTOeVb2ZaJ092C4jPEANwLwhXKA9y43AvUEHxT0w
                      9oa79Xm2PanHlT2Uw/68ONacvUrZAz3ApnC7WBO7vSYjDD26kGS92rCqvUIKYT1y0EA9ABTIOrSX
                      87zNK6M9RdC9PWB36zuumDo9GrghPTzPEL2yElc9J/iDPcj+ob3Nt7O9EN0pvBNmH72Mtcs8ZhUB
                      PTS5qDwADcU5oN28vGdQsD3Yo8W85K/OPJehhD2oF2+8YAPQvDQsjzyo0BQ8YtSfvWzUA70kQoG9
                      MDy1O0AHkL0Hvbg98ntNPRD7gL09mK89H2O7PdGZzD1MlIu8t0SFPWBBjrv4dbW9EmZQPTDSkb0h
                      bqw95pcEve8FrD3zvmK9H6WvPYj7qbygKf67wBohvObAk72gO5q8gF3DO3SfqLxAcac8+VKNPe7X
                      jb3FXMS9tJSaPEBkk716gm+9tO/zvLO+kb0AWSc8GJm6vHWRs71g96O8MzbJvdcvxL2yb3k9RpsE
                      vdWAqz20cY68wCP1vGLMyr1KzJ695iJHPXcde72P/cE9Al0tPbKUgL2Rc6w9z33EPYAioTwZ8bg9
                      AAQtvPraTT2AO8M6AqQcPTA5mLsojiW8bfSEPaLuYD3AZPi87Xm8vUKnPz0cetQ82BggPIDgzryU
                      xsg8gB0dOgdVwL3iiqa9TUGVvXPLYb3oQ228EabMPYFzqD0KHT29bd66vbCqEb1tupS9I6ApvY7m
                      fD0Aqvc5UIXAvZcPyL3qeKa9Cpx6veq2Pr1Bcbk96sNlvX5ZZj1K+K+98i+XvXeTkj1ImJQ8x0Bm
                      vRREgDyErOk8fZeEvRhrx7yT+L490PqVvQwdEr1D2YA9KEqDvLZlmL2d2ZS9o2GgPbQWEb09JCi9
                      KvJtvYddVr1wQ8y9+gcXvYoMj709uqQ96ul4PXQuwjzs5eo8QCNsu4O9QL1sc748uK2yvcsylL39
                      g8o9QKNUu21Xbr2UwJ68F5K3vVL2Sz1fY7c99UHEPWPqnT0SXKG9grUePYDWKbzgKrg77aqJvfNv
                      d70oLzK860CePRjp37zW1D89bx+4PUDfbDuAQsq9APVtu8dysb1UkvQ81yWxPZKbRD3e5nQ9omOw
                      vdXyuD1Up5o8uuYCvR2Oeb3NBLW9wMhtvRhm+ry+xC0951rDPRbpWz2Yr628LgREPcbPCb307vE8
                      bR6sPRAZqL3A1AG9tEXwvB42Az3d7KE9N9kwvR0Rqr1108C9cS3LPUrNg709Wja9Kg+SvYeflj10
                      DZC80J6bO1BJXLyddkq9s6icPdu4lb1rua29xT2IvbD+TzyotDq83CGIvYDr9LuSmBk9U2FhvXcT
                      gj2oSYy9gjohPROCoL0y4o+9NiqWvbAdyrvCDci9GcnHPWBJiTxgzzm7Dr8cPaj2jjwwqjo81i0T
                      vVSwFL3GKQu9AMDTumZuBD0lL8U9LkcuPU4AJj1XxyK9S227Pcr6Ez2nCco9YE2gO+gBur06ciS9
                      yXWnPbVekT3WnFo9MDkkPE1ERL29VJ49vb9zvU+jv72IbOu8JoOBvfI0dj3M2Lm8KlrEvQ0VxL0Y
                      Mtm8B4p6vRaaOD37apM9g9iDPfoBH71zkEy9wt5nPQAKYjytNme9wJDZOigdG7xwUiW8nu8sPUim
                      vDxlHbM90KsCvaT85jwAuFK8L9epPcOGYb0vdMy98l0GPWKPw72Xv409IErBvDHNqT3D8Le9vWqI
                      vUhT2LwjL029OKCyvd2KoT2qFm29R42sPZimk7zsrAG9xAHQPOCs0DvOmYW9liIMPS3Gur0/rME9
                      aGp4PN23vT3K/j69WHRnvKhAiLyK8hA9y/uYvXTKkzwVs4g99Ir6vMBqqr3ooo08wIwGuwLuTT3N
                      A6a9bIq5vB+Nx72ezis96EVBvJBAOL2DL8g9bW+7vbsNoT22CwQ9g+K0PXOAij1Ip7y8qFEgvAhi
                      g73imio9v9mlPdKAfj3s+9I8sdTAPWyq/LxU6tU8qIaoPITFzTyRhr09lXejPd/ruz1ncZk9EFMR
                      vOUJk706OkU9GjVKvUDwcLwA1sQ5hEXZPNeUXr1Wxwg987S6vfNqqz1Exs08IBK2uzODPL2ARMS7
                      YOkeuzDfEb2Cfh49ou6GvS3Yij3zyLC92Gi9vT9fwb3Yq+28O/Wgve17Mb2XiyO9eBr9vFdnVb36
                      3S+99PvjvPhSmTwX9je9nzvGPT25xT1vZbM9wPoCu3pcRL0zYzi9qHWCPD0hvT1mLjg9tv5ZPZs5
                      lb1XTC699ziOPRRj9TwI1Ly884K1PWNMLL0YoQ28PZY8vT6WID0IdJ88Q2dNvcBoGDso47O9gN1F
                      vD4lMT3Fjbu92evKPQAD0LygVVO9edKYPT3BIL0D8Ku9Pq4pPdMIrz1qAjO9wguNvWtDjj0Y9Yo8
                      wk0zPUKrwr30XsA84TKRPWZpDj2AHTm6GvWLvYGjxz2QGYi9c/wvvfcwV71KlGw9UsMYPXJbDT0L
                      YZ49QwzIPZS2+7wA8pK6EO0CvNRmr7xaTHU9ZNz/PAAqsLoJOr89cjlFPQCuj7oytmc9BnQUPTkN
                      gT0JtpA96m6ZvQyS8jy195c9+iUdvYoYMz1q4iw9KsZ6PdDDLDzIZKG9OucivVC2XrxeOIi9zY2z
                      vT70n70jP2K9vdFavfhuizycFg+9uB7evNBCfL0iYUU9uSOaPUPZO70oAG68ALcyu4By8rxQdsa9
                      bb05vQBbHLpH5XO9CuIUvaq8Br3wOTe9iDKkPLPjpr0ACJ87wDBAu+PoHb0JN4Y9kmlpPWLfgL2j
                      8Rm9eeCkPYfqHr0gDbY76kd7vRKKYz2bBJy96INavJIyfz2m2Y69MtMZPVq0Bb0mLCE9d7pZvSIL
                      lb1inY29N++NPZAeVrzTgje9w9J1vcTcAL0aw0a9kkoIPdwNE73Hlsw9uFOVvW8Dyb2te7c9mZy0
                      PWxf4DwotKK9EHNpPDTCt7yneJQ9uYyfPR0Iqr09dXC9MXOuPegQUbzf1I09IBGSvfJPwL16uDG9
                      UKDKvaz0CL1apFs9pxu2Pf36qr2JXYI9A62dPeFltj2i4Aw9sYLIPWAjqLvAYL+6TBHpvPiWiDxy
                      dAg9UE+fu51+i73GWAY9uFSVvfSa1LyY0qQ87LPyPO6sej3idDM92J0+PApvAL19TKE9oJY+vYCi
                      G7pRL4M9lSeQvSLhYD0AVAk5941bvQ0Jub3K3TA98iQnPd56qr3gY1C96ku3vYDDjzyof7C8tHHZ
                      PAFEwz3U6Mi85R+TPRaMlb0YIhQ8MpIhPW0Dw73vJY89Bwh6vSHnrj2KSJG9ZnQMPepxHL2oTyU8
                      icyCPQCUu7tvNbY9Hn+EvdhAoL0I9Km9IIWdvGZ+Rj2FN5G9ISunPcDePrxXLH+9URmUPdCZmjsE
                      Tvk8R4+dPa3Juj2kgeg825qoPW3VJb1U6am8KgWevbHrpj1oU0Q8GNqbveBR3rwgkL+8EdujPR47
                      Fz2qWMG9QikJPZThgDwCbQ895jRYPaZfFj26Doi9GhMIPfCFdbwE59k8yx6ivfWYoj2emyE9h1R0
                      vQl2uz067XO9gLL0u4J2Pz1wG1G9IgaJvXoZTr2o/748+O+APAD0x7ijVV+9TJkFvRQxnLwa3169
                      lh03PanItj1GI3Y9qeHJPQqrW72j1Wy9BZOnPWHYqz2yWQM97ZqBPX9Quz1gyUM7aAltPKCPnb04
                      cqm9QLW8vcHiqj1p68Q9lxS+PRyC/zwthpW9olUsPRXgw73y9JK9MJi4O+3muT2A+ME6+nxjPTLO
                      yL2Iqp28ssujvQBkDLyoELe8WGonPPBxBzxwMBy9tHnlvGcOxr0QBAs86kg5vWKHfT0tLlO9Q5e1
                      PeKASz0L9sO9rcuCPSCZ7LvCzEg9E9quPbQbyrz7VcA9FJnlvF5TMj1RKsI9aBJBvBkQrT3a5i89
                      9wJTvT2gYL2zCMW9J62XPXVHwT2Sr009ZL79PBZXYT2cygW9JJP7PM2wxb0jC7C9XMvnPFagNz0v
                      erw9pnunvRAak70JEIM9oHgMvYZ0HT3WGSY9HHgUvYgGvTzKXTi93ntxPQJ9LD3Neym9spB6PW2X
                      Nr2Vy589UFWGvXLJRT2kKtA8QRaEPUqxlb0tVo29+OadPNvjuz1TV6a9nCT5PLJMpr2WpVQ9TWBg
                      vdSr6LysSti8JXWwPe4jez021ga9WCkQvJcSI72KaFM9Cr1gPZcEyb1geh67Z+R7vTNbdL2nKUC9
                      hQOKvcDtxrzQLbm7UCbqu4hQw71uaUc9cmGLvYpaJz2L1ao9LSqePcicwzzMc4k8GPgCvPZvED0C
                      71c9APFQvDaBQD1q0jw9myPLPdU4rz0m/G09gM0FOibXaD3pK749QPFdvKYmFb2sdd28QsE+Pd1M
                      nr2HKLM9rcPKvRYrHj2moZe9QGVsO/T3kryIgoK8hpSmvcPYZr2A6yG9OfTGPdCYkLtntok9naVv
                      ve+xsr1A5128EmpuPRi3UDxGvS09uFaLvZGmij3B0a49ro8UPXYHiL2sFMQ8eACWvXq5Lz0yDz09
                      jSwlvbzZAr1z+X+9BlsVvfBJQr04ULA8mB8RPLqsdL0EVfg88Pw4vQJ3lr0wEeE7EkATPRBsC72k
                      X4u90EOFO7DQHTygIhI7yptzPUhsnzwtDr+9PV47vR2ttb3S9J+9qipdPQVawj0A0Kk6WTKoPeio
                      tTzqziO9mDQCPPH2xz2dsZy99lqQvWDSpzyf/ro96Ex1vAyQjzyMqYw8NZukvRTLDb24WvK8/gFy
                      PQq9J722Iha93oxVPUG6mz2yIpK9ephTPVhCnb1iqT89QDkkvB5zKD2U+fc8eDuAvDAeNTxo9Fo8
                      eOPuvIg1w7zwyhy8zAKOPHvAsb1sgO08YLLoOwDwqDoMc4i90DyeuzNnKr3Mx6O8OfOHPVJ/zL3s
                      fJY8gNQdvGlmnT0Hw6M9gjl6PXCBRrwo5q298KV2vVkfxj3TDzC9HdqMvQCAJbp3KbK9KEo3PEAu
                      kDwQDmo8ylobvcQy6zwatpu9p92zPYBuXjrTzp29lPaWvOA9p716KAq98PQwPEeTgj2wTiK98uME
                      PYw/o7wQGhO8uKGUPKibKby25lI99ET1vCFsuD3Xgre9gGJ0uqTi5TyUveY8P1GdPUBQBzvxfqs9
                      eKmlPGOXRb2hkY49mbq8PWA2sDvQoT88ANrsum3fm71wCV28v72VPbQso7z/b6s9zmSsvdAnAjyn
                      nCC9EdS3Pa0Sub0FfMa9aG3LvAujmr0Aahi94+2sPdDSDL2tfHa9oKIMO8CnYrsg3tW8YPp2vUCv
                      lTqXN6w9fQS2vW8+gT0rOqG91vF3PbCrzTvVisg9eRCBPSi2ob0mhms9GPF8PMBjGzwg5708AOWe
                      vGf3mj2iKC09bnaBvRgcuzwX7XC95Y6IPeCm87xsNtK8figoPZFWkz0JYYY9gmLJvXCar72XZWa9
                      Oui4vQnQnj00Y+U8DfuZvWasp71cYYm9gCSHO+I/Fz2DLaG9UfnFPUeeTb2tRrU9OKapPOCWxLv6
                      2bG9qSqzPYDYKr3GLWs9ByZ1vRWbrj1zG1u94OtLvW8rwj3wTj88dGbfPANIpL3mwQO9MFvCO0rc
                      f73Hfao9tzymPWD3/rtLo62944KlPbnknj2ASas8gHDfugVkrD1nKr+91HLSvFL7Gj343+i8aFSd
                      vPDhNLxCRxo9kw+dPUFTwD1QN4M7oGKzuwAo17jV6so9AGP2u7lpsD3FpJK9MOILvGnxvz0KFk89
                      8iVePcDwWjw18MG9sPwsvVd1tr2NAUO9M7RovX2lI71nt2u9M3rBvXooPj0noiC9pS2PvVy07jw4
                      KoW8MIbouzY8GD1Cy2o9igqMvWmfsT0YCri9gSm0PeVmtr2MSJw8G6DCPZTYqTzlu5C9R8duvZ9R
                      gT2gg+47OvxYPca4WT3ymI298uSZve2RIb2+1WI9KG2GPA0evT2LPJI9IqMIPS45h709XbO9qD4K
                      vOsytb0nmiG94n+/vVZYVT2T/629mpopvaAPpruQJrG9db6cPUGJoD1g+zg7mE/LPAeJpj3vm7I9
                      qPKKvWYFeD0DQLS9elYOPdABR7yqpD29YnJ1PVDnKLxg6rg8iXuqPQAFPTqWVp293eOPvY3AdL0I
                      Qq69cx2kPfqnHL0LEJ89u7S3vdr7Rz2Qxjw8oDvsu7qrj71GYo69kAJgPNRkxrx/eYE9A7LDPaAv
                      jrvAtbK9oBqXvAyNgL3A51k73Q/IPYdYfr1/R5k9qLyLvBcyYL1Ybb48oHHCOxMIRb3Ch1s9PmVS
                      PQxlirw66TY9gNWZvSmHsj12Ag49e7HCPelCuT1/jsA98AswPKPEwL2AFqg6SNWTvIDK5ToZ5JY9
                      4nkmPZ1Iqb1tmIE9/12QPZccuD0ev6q92LCDvX8qjT3o4RU8YH3Mu+yMrLzvgrG9qOeiPDQtjjyj
                      XDy9WqFxvaIYxr34b6K9FLznvMgdub0r7LU9I3mcPRCIg72p0a89fIDWPEZ9Ar0K+V89oz5lvXcW
                      Jb0bysS9RhuVvY18Tr2A9De8LdqEvSaVCr0YA1W8z6W5PYZRSD33g8M9MB4WPM22pD3MjYM8YOHR
                      OxnghT0N2I49APFeOv3/Zr3+qYW9QMw7uyiTyjzqZEk9fipjPXXtkj0Altw5NCYXvVjTrbxBNLo9
                      ZTWPvZQHDL2ABMy6DulBPfuGqb1gj5k8A8eXvTT5hTyoLCU8ABdQOoLpHz3t95s9OqhGPXMtNb2A
                      hkO8jTyKPXTIyzwAK6456NSJvYB6lb1fKbO9QslLPc3jpT2ktv48P/7AvTQGzDx2hJK9QEhdO5vb
                      pz04V7O9yWSvPYPLPL1xrKA98FnFvTHfgz0+FIa9ivQVPS2tnT2eY5W92cSBPbLjo736Dsm99sEI
                      vQneuz3A/RC70FsvvfJfVz3AM/e8WB2svJqgs71opqS8KhwVvbvRpj3K4Yi9elBsPUoFOD1gPXe9
                      IdCRPW5gKz3bv4+9QLhQvViSWjy0qpy87N2mvEChhzoWa3k9Qm1YPbttmD1MlJy8t7XDvavuo72L
                      oqI9TSi7PQKvVj0FLrm9Au4TPSL5kb0QYG+8gUaWPaDRXLt/N8g9iKyGvcCKFL2dOR69UVqxPTSv
                      mbxwRGY8ALi6OMGjlz0V3JI9aR+WPfeioj0e5mM9QDBjvYmlqD1Y8FY8DVqHPaJRQj2j6I+9WCyO
                      PJSS1ryQp6y9c4KiPWIPSj3AF4K95qISPTKPcT2Asj26AsgXPS8zpT1zm8O9lGWFva4UWD1g5oY8
                      gb2kPcDAXrswWdC70DYHvYIjw72DwL89MKNWvKB1t7s3baw9EdHHPTfhlD1sD9482IG4vPqkAL26
                      VEo9CdbBPRC9Trx9wsM9ZnmIvQPoTb2y+3896m8LvdEDlT1UDqM8SH++vdgIjb3g/Ii8fWujvVWT
                      or0nfL29FgFdPaTE6zz6fAI9bM3cvBfRcr3+PxA9QeuAPd7JjL3oLf28oAU0uxoCcr1MAvI8I/to
                      vSEXjD1Acjo7nc6bvVeKUb3x4oA9byiyvXhBrL0PsbC9B3DEvcxlrzyrt5i9SLrcvABer7k7ZJq9
                      9ciXPW5PIj0wGGk8asxTPcmkpD1A0FC8tsYjPQCfSLv3wU69jLIVvThbrLx+hWA9gA+CvexssrxY
                      KaC9zTCqvdCezDsglaQ7KgIEPcsNk71ndkC9FqZCPfCAXjyyOaC9Er5lPUDsHrtYFss8UdOQPeZV
                      o71YvcM8QzXDvYTXDL1McZ4848RSvSWPsr1Snhc92bKkPTWgxb36Qgm9QLQDPHc6xb0yOqa9oCGm
                      u6x83LzAEqS6RELaPKLay73CZEU93VDDvR8/sT0AWZ28EcGkPWDj+DtSezI9kz88vbD9e7x4Prq8
                      6dqLPRQin7ybmJG9uuhNPShRW7yAgZI6Q9e9PW4Phr0iD149+nBKvbAfXLxDv3i9tiESPRhfQTzT
                      U2i9fyG0PZkqmD0NK1q9onmrvQ1egz2gF9i8wpkNPRjXlbwjsHm94Nxyvc8Fu70UKIe9wKWbvXaC
                      Nz2lH4O9nSR7vbxQD71rbK29gLrWuqDLuTwyewU98so4PTeqx71dPom97W24PRh+t7xQY4K9Fn2C
                      vaM1lz1cRAm9X1THvT7SQj1Kkaq9OGDRvEecOr1Axk48aP9IvGvOtj26+sq9QlFePSKwjb2NiJi9
                      eaeaPdAQb7zCHww9gJbhult3uL106LQ8IhhUPdAHirsrcrU9UCL6u2jqYjwHX5A9mMmkvceErb1Z
                      taA9NjeTvZgL8rw42rk8QYGXPUDRt7o6iZG9QKB9O+KbuL0Nd7o9mOTNvJp0Fj0nSH29uASjvMlW
                      nD0XlaU90UKgPVwA1TywyDc8ICnMvICso73KnRm94NKcvW0Lpz16wpO9JxCaPfhA9bwY8tq83Pzs
                      PM2OlD32J3k9DcO6Pd1Vyr2RQbU9OEuVPMpVEr2wLD48rRqWvZYzUD1jNZE9nci+PaDWlTuKnai9
                      0H27O83rqD0jG7g9oPbku+hd4bzQHWy9sHLyuw+Yrr39IYi9eD7dvACd6rwgfyK9xZvHvawl5Twy
                      3nw97UKLvV9hnj1RW7A9d9DJPQAbjzngWrM8x7JsveCyojydJoQ9ABS7OOADWL1mBCI9APAzvPo9
                      QL2YShM85i0HPfIVGT0Dsku92MavPAy6+DwNjES9Z80tvfgL3bxg4MW740NLvdBcrb0IFLu9QK8D
                      vUJ7HD1Q1La9oVWsPUL/fT1Ead48FAQEvT5Cir0wRiq9gKFEvagtMLzgnsq9MIIVvcidtLwG+As9
                      PeilvQX2vL1IMLC9871rvScctz2gZ8O7DA8XvR0Kyj2UJvm8LVWdPXayFL3bpKq9knQKPX2rNL3a
                      uV89PiwuPUC6XrtlhrQ9mFWFPKv4l71oDYw86pl0vfRdvjw2Xzo9OMe9vJPyn70tNi+9cNIrvP5G
                      Mj1nSHW9NzyAPd6kib0lpbi9Q8IlvZDpdrxqiH09ut2UvbiZw704O5y9AN13vdlJvD3O4B49zS1I
                      vUJ/Qj0AlUc8yl5tvf3ZVr2JSZM9tJznPCazcj3bAMo9JpCavQ4SDD0gLMu9bJb4vE7Lq73oMZk8
                      YwDDPfq1DT1wk0i9zv1IPUSp+Tz6rAi9+gR6PczF7jwR3pw9kJcXvTIMRD2QpRq8FXy1vVjxJTya
                      dB29LUWkPd0HR70gaJK7eHaqPHJ2BT1gMpw7MFo0PBCmtL1X0qg9kuaJvTAnYzwVObK9omE0PXZm
                      Oj1vf5o9i9+3PSiRir32zVQ90JgkvFqzPr2YM5W8kiU9PfJzHz1E+O88AAgpOpF7hz12HZy9xaeQ
                      PXUGjz3Xi0a9rYEtvVlInT2uJDg9ghCsvbA49buAdRm6Z6+kPfoKIT2+IWM9asYNPQC7pjw9FFS9
                      wDnIvEBbL7w8soi9mxK2PaBzTrsXGqk9KhEGvQC8hrpvycy9KvsfPQKILj3z48I9AI9rPKH6qj0A
                      HwQ7W9StPahFnLyg6qW8lEC2vAq4WL27Kcu9h8aYPWB/uLsg5q+9FEWCvAAXojv0zua8gA3BO6os
                      YD0D56K9bvdOPe2/sz0gbfK8g6sgvdDWdr05Mpo9VASvPFSCxLyYzsW8wCwZvQV8jb3ICr+8r5qt
                      vfKEbj1wqTi9al1ivdSmtzy6kRG9wjMgPUFUnT3YYSS8yVyPPYaMYj3J/Yc983AivQuQpT2Zs6U9
                      gCf5uuiRE7zwtE29ejp7vVn3mj30DqS8WC+/vAMvQr1YeyE8VqxEPaCQEbv9HoS9TyvAPTp2eb0g
                      HgO9ACodvZvhsj3sO8u82GMTPJMqj73tQmm9WE21vJEJjD2X0ie91sEYPTv4wT3xcok9LPLOPGxa
                      Cb2XiK4985l5vQTsC724bKO8FzTHPVINtb3bQoU9AHIEPCrWvb3Nik+9MLA3PBrtY723i8S99TSZ
                      vUdPJ71gS7S76rsJPZC+pL0gISu9aAR3PA+0tj0tvT+9RkUrPeX2nz3bT5o9Yq4kPQ30ij0brZm9
                      ME8zvPqYZr1YY7W8ttU0PcWglz0IIaw8SrhZvexIiTwwOJE7HfCqPQLVfT0+wWo9I3tdvdCHN7zA
                      RJ86mMXrvCCKu7wE4eE8oOtyu5J3xr2YSBU8xDHQPCxOnbz7RZC9LMvlPGzUgr2ww7S9cuB/PTB5
                      FjyIoKY85tEWPSnnoD3nRMW9g4JQvYNgqD2Gfzk9rFAUvfWmoL0YVZa8/eewvXoheb1taEO9xGH6
                      POj6NDyQ0RG80DNJvSPwPL3Uzb68oUy+PS0nlD3D0Mo9xc+dPccBkT3lNpc9oLe5O0AspLwaM5S9
                      GIuUvVCcm7uI/LS8vr2JvVD64DsVIK+9AEFWPAVkkT0ApKk7mEAFvAa2Xz0qAQe9YPqcvCBf2DuT
                      EIo9ju9GPYxyqby2ukQ9GKrivNF4qz0FrLm9gFH8O+EhmT0dQaE97yq2vdjN+7wdBp89DiGDvcBt
                      krxsvuw85ErlPHoEPD2ji5290LahuyKYVT1COlg9ii4evQKdfj2U7uU801lWvRVWhj0Drr29jQ2f
                      vbyN6zxotQi8WjzCvaqkaj334nO9q1i1vaBAQb1nj2C9pCnuPEoZTj3wmCq9t32/PYobs72e30Q9
                      5NDwPCYimr0NOpm9+LqTPCD/sr3SOzA9AHuHO5zwFb1CmHA9xKYNvQw4xDxF/su9g75JvUP9OL1g
                      mVk7DWqTPejRz7yioBE9caGQPQANwTx6WzW9fYZDvQFZrT0gIfC8/kM6PWi7Uzwz7nO9sl0rParr
                      O72jK4w9AEiPuve3dL3zhWO9B4knvSo3OT15Hqg9kzEfvXzQ+DxGuXE9VAnovFHVwz2SxUw94ELF
                      O/qzdD3RBLo9oKK7vZhBGTw9Eqq94B+GvOPokz1wQ5S9cG0IPCfyPr2ph6s9OBzrvMqoXL2Abko6
                      /0KwPWKNMj0DMiC9EniVvR8vkT1sSwi9HGH6PCclYr0Aqlm7APAmPC6kWD0Kjke9uR6uPYB8MryA
                      YWO6ON/KvDNLIb3o5Ei8jLnVPIB6jbsCEFU9UE+ou7hhv716uka9Or4XPWAdMzsrDMw9EnsxPZDT
                      J7yhxck97weiPYIAbj2nOyq9JLITvbocKj2Uub888vx5PULzZT3MJ7S8UVWMPZPlhD3gq7k7Ej4A
                      PZRlvbxZIpI96Ua5PRGHlz2iAjg95kyovdSk6bywzTq8+b6NPYi7prwo4DS8uXKAPcOzS73ICbG8
                      3NAUvQAazDk1M7i9V/k9vYwOlzxzmpY9TsGYvToyez06hWs96Jq1vafGxL3+Vi89vhasvY06ij3A
                      7Eg7hq+Uvc2Opr1nFS29OugXvXs0mL3+PG09EHMBvM1htz1Q98i7HsSavckSuT0Tiqe9wCNOO2BT
                      g720daY8r5S3PdLeTj2lXZC9UF7JvaWOvL2CWxk9Tp8CPbgs+bzwMo29d1uFPZ0kgb0SFBM9Mw7B
                      Pd7YDj3CWnw9rkWMvR05rb3VEr89DA6VvDr8XD1iYzU9GImHvdgLXrwUYIy8Gk2IvXQw/jyMhau8
                      lz3CPQpHaL2gpB878+5hvS1JUL1ljrq9/TmyvV6Xpr3q+rK9ExlBvbhQgL3SnA09/itTPZ+DiT2s
                      tsI8x01pvUyk7zzGViQ9F+bEPQ6kWz1gYKq7WhtzPRZ8Tz1YMg+80JgEve28tj2CX529vlNkPUxI
                      lLzj+UC9cZq6Pf1psj1idi49A/KSPRzbFr3AXy07y5WvvdnIqD3VdaK9THD6vA0UXL0gXee8oIah
                      vO/Fyj1JJYc9oBIku0XRqD3kW4u9kGgyvNhEJLwXc2G9tM+TvJyV+zzF9J89+GGVPA5+QT216YU9
                      IIw/vXAGC70AL2W9zFC8vOggTDzT2MI9gvQgPR1BwT2qjlA9QIgBOw9Vt70V6pm9AFIqvc2xJL32
                      7Ia9Ur6jvRT/4Lzq55i9gDZQvHnThz0gReG8oDDVvFgDt72gvMM7gk5jPUASOjxApDA7IKztO6KU
                      pL1aHyU97BOtPNKBPD0DX7e9qHLcvIL2Qz2heJ09j8DBPQDUDrk+VHc9bDH9POCTyb0ACDk6DxSS
                      PYQVFb3WvXc9YACQvMBgIr3m7HI92pt8vSNbar0kbOI8LhdnPYUEkr1hRa89DGP7vLNfSr2A2hO6
                      EfayPWokUr3nI8K92tk2PSLaQz0AUyS6wL0Luy6aNT2GNgY9eH7pvGP1Zb3lo509soAHPQoYaz1Q
                      yuk7o1RFvUhavTzLhrQ9tEbTPCMvnz2gZew7LOblvJdMML0aOTq9FnWRvSA45Lvi6Us9DgU9PaqI
                      Bj04e/q8NmZFPVHbvT2IbbK8XWqbve26mz1l2pU9DO7pvM3YU71LZaI9KNftvNWMn72N3GC9hb+3
                      vfNsyL1oK6I8s4oyvdbQLT0ne6Y90LY5vejRqryTKSe9Z7lTvWtilr0d7pG9+D+iPNOnR70iZHw9
                      dM3KPFMbsj1Asm87ySeEPfMrlD1YfgK8wvohPWf1yj0wkn299KD6vDZfBb2PvsI9JnuYvXp3qr2w
                      bIO7MK9BvbYXPj06NSO9Ct4RPUxevzwg0Jg8wgcQPcs1tL1y2mU9e2ShPbdwNL3QG4697o6AvYBt
                      AL1+8kw9aKe1vPVsuT27Zqy9CaiHPSOjY7383988bJMAvQBw5ztfPrK9XjWhvSC0pjzKBS69MKDo
                      O8BGYztijmY9Nz5Ovfbom71+qUw9AI6aumhJlzzeOBE9qDmhvDZQPT2sstC8/fUovRia6LzEvek8
                      nAvtPIhq+7whuYg9FLaKvY8slT2/fKM9AFgMuOhEAjxon0A8UBMGPGiyl73Aw0+8N7i7vWaNaz1b
                      Eo69pc+xPSroDL3MAaG83RWoPe1XRr2wW0A8YGWHu8ALYbvAJg69jmhFPSTR9jxom4i8LSybvYk1
                      vz1W0wG9GmgwPcDfDTtagAy9vocePQCDNTtAu7A8lRCMPSNKdr3av3m97Sg6vWzQBr2BvsA9oDKW
                      u8u7u70q5k29WPa3PCCCnLysrqC8MklgPWbVEz22vIS9upoePcnXxD2qW0C9wPMIvHMKbr2TOlq9
                      CscPPY1xyD1gY187FH8VvdAcf72xfKA9qKKAvQCrLrzj8l+9Ohouva3DoD1go4E8YML7vBNrvD0Q
                      XF29j/CEPYwLp7yzCqe9pXCjPUBVkjolRae9JAnuPMIcyL0ATYC5NN6OvBlClz2UZtc8l7XHPffJ
                      lz14h/i8Vzi+PVKaeT0YLZ+8AuuLvWUDvr3w1Qm8Wi1VvcJSFT3GfFc9kmwyPUAKZL2nICO94PJL
                      vRx/EL3oJUc8K5iXveizbDz3EVK9dbWyvZIZbz00VAC9zRYivSNIgz0M8sS83eOWvb31hL2XNog9
                      AwSAPTJ8Qz0ARO66MI6Vu9jUsrwE+P88CpS7vb3uxD31lMe98++9vUt9x73UCd28X3OwvZHplD28
                      Uw69SM+xvWJSbD2v08i9+d+6PXaAcz2xCKs9KHOqPKjy47w6FWI9DZsdvWAvxTxi5SI9rVyMvbBS
                      drwS6jc9dJX+PFAzmTsnqMo9Dx61PcPhfb1uOJG9FjltPcIiMD2oywW8yaO+Pf0dfL3Wb249dPjW
                      PEOVKL2emjU9UGDBO8qvRj0HDz69rZOAPWZHp71ARQy7ACZluTdgcb3SfzY9iLSUvWJiNz0jjag9
                      XYdevekUpT17PpS9Z2d1vT5IlL2CnBk9gF9MvJC+crwwqzW93vwiPYD/tTvg5Jo7b8CMPTB9PbyQ
                      Lbi9eLXdvB20c72g1US90os+PXp9Tb2C1wc9MFPwO1XYtT0Qyz293Ue1PZebvj3nVZc9sj48PYJH
                      WT2gTla9acWkPeRgA71G2Uo929GuvWCalTuXDh29FYarPSwr+DwytWs95MYEvXb+Cr33N7y9wJnC
                      vZZ8lL0Aqpe792mAPW2MQb0Acy47qkGOvfZqVj2wtZ67QfulPbl7yD3g6p08wJ6qvbLMNT26YAk9
                      sAbmu13Ger215KG9iM/CvTmWlT0lebG9uLS1vMrhfr1/P7U94fqVPZCABrws1Y88WgthvexAmry8
                      N9g8iAWZvDTVhDyg/xm91UTAPZJuST3NrXq9ULibO4AyHro09qW8wyWtPcAvx7xjyS298n2qvR6/
                      JD0wTMk7etB+vbDWjLtASEQ8RY2bvQDTTbpCqn09+vQQvWUPmb3A9SA8yDWeveexSb2eKEY9nURp
                      vZxOAL29PB+9Y0hOvf+Wsb0LZJk9pnoxPdfGrT32SxM9ilKvvUA6Lb2MwIU8N8FSva9Lyr0tXYS9
                      65qXvawCvLyqELm9qN4RvIV0vz1y/D09QPzEvEDUZTzI55s8SrqKvbXswL3Qr7W9Cj53vUxlu7yo
                      SDy8EYSBPb2XPL3qcgS9/wKGPT2BzD3zyqg9GCGlvahLh72Zb8Y9CYuoPdoYiL3KBqu94KDAu913
                      Vb3MmYC898onvXJ0ID2WaJi9GhRlPTBGiruUmqg84TOOPZeSsj0MvLy8/OPaPOM4Vr2t3pS9ypQX
                      PbJ2dD1gZYY74D+ZO5+2yz3DAY49Dt2ZvbQOEL1x+5Y9LOWLPLnksD1bXKY9JG8CvcLxUT1aRVw9
                      Pt8vPRBRALweFUk9bH/FPNANu7uOzY69Zd2yPWilTDwqQbO96UaSPX4YNz1qJ3W960CDPTwr3TzK
                      aSi98AgwPPsBpj1gS8Q8szqZvabGDr0Affy5AADNOHCIPLw9OqU9yPT2vMpzMj1/NqI9F/XLPUZI
                      mr3sw9q88wyLPUCGF7th9qQ9dZ+BvRrILr2K3WI9AAYJOX1lnb0ps4k91SnDvUX7gT33SMq9hhhL
                      PU3zML3/qcq9FtiHvazdkzxKpXm9PZJ/vQAaaTtw8Q08FyhQvYAkRr0Zwak96AuJPJFJgD10uN+8
                      cbWbPdF6oT0Q/xK9ImWIvZqLRb3GVqa9K/7GvY9vhz0AJ5+9PHDQPGDpGL0rX7W9hxe0vcYiFT0b
                      fKu90GM/vLPLYr1yJCk9JF/7PAIfLz0P98M9vCzvPOBRGL2gkuy7dF3LPFCaBL2F7Y6982y3vYdX
                      Zb2WyCY9w+hUvaiAjzxYC8S9IxR3vesjyz0oCm486U2BPUcoqz0wnw08WJBivGJsOD1g5bM7KGa2
                      vF1Bgz0YadO8JdSlvbBLrLubT7Y9roOLvQzS8Lwlhak97OmSvCsUtz2oeh+83PjsPNRntLzAyOi6
                      KsEYvaCRw71s2uO8poWMvQ+EkT1WGDA91i8uPfUvoD2o2To8myCkvXariL0Ymwu8eo8yPXS1x7z9
                      uIc94fe7PYMHNr3JEcI9SbSpPQIkCD1h9Kw9PNIUvaNfVb2wMwq9AFAjvBX7yL0mMyk9T1GoPWiU
                      ezyuYKu9e8uAPfNgpD2khfg8cPgdvUDbn714Y5Q8tDHCPHQ3rTwYpqc8uj4NPaCJdruq93E9ovAE
                      PWC5S72AhQg6UiGqvcCvVTyqEBi9J2Qsvb6trL1g1ma94waGPfedrr0+sm095P/uPMgps73gA6m9
                      80uevdjmurwUjZ68DtgEPREnmT3iQyk9IK81va/Cyb0OyKK99usHvQvxnz3mETc92uo9PScWkj3s
                      lfY8vQ+JPeIRWD2zFHe9Jz5zvVCwS70+K1I9nUAovSerX70xTsE9P8auvba6Cj0nMie9RoQcPcST
                      8jzQyyK8o9+fPd7TcT130sY90DJAPHyx2TyTxos9p3OoPdDVbL3wEkq8IHT6O1PAaL1Xwss9PY44
                      veDEgb1JRMY9FOH2vLpxKL2w+hq8MilQPdxV/DzJqq49wCxwvdwshb1QjdA79IC8vNCi4rvWkpm9
                      cdaNPfMbdb1C/XE9tRSOPZza5TwGe1U9df+rPeBog70A2Wa6mnHAvfFDqz0AGpm5IgyXvSk5jz3t
                      6y69IRqEPRGvrj2Hkma9uh5QvfyW5jyXeyK9Nw5UvUruo72Db4c9ytabvV+UjT1QhHm8QHkQveaF
                      Dz2OcF09bjOSvQDscLrjODe9gLggvVZ2Yj2CK209gG8HPFwS7jytIUS9gAWFvLw/Cr2S/cu9RUea
                      PWx/iLwH6rk9DEgTvZ5pDD2jH4A9MNxxvQphJL10Zsi8Dx29vbAw8btklxO9JU+OPSIJBz1YXUU8
                      7A3jvNImeT2YE4y8e7q0vSBB3zsD1cE9aklCPfT6irwqdhc9DLytvLJiUj3OlF89wLFivD4zjL30
                      OcA8AL+9u8EJhT06qkQ91uZ2PRjHALyiZp+92EOaPFACejyBNrM9bcdKvXtnmr0A2J+4Z3lhvYCK
                      +zpah5u9loY3PTe+nD3Jd6Q9x/y0PYVlv71Yzj48QoivvaKFOT0dtEq9k2KFPTA8aTwT17W9E6ht
                      vfRL1LyAFs069GcAvTPLxj3wUV29XrMZPco/jL3gXqa8EciKPZfON72RKIQ9kE8cvKxspDyAS847
                      jH/mvF2rQr0QubS9/eyDPY7MZD3lrcC9gJWuPFpLW72X14g9WMQUvPecyD1N+7s9iFDMvcBzAbzI
                      /OC8MG7bO3iqtbyZUL09u8q3PQ4IMD1AI0c7wGF3O7rFXT2l16e9Q9zJPXRw27xtPky9BN/gPGIk
                      ub0+2VA9TIqYPPBPl72QTKm9WGatvTBRg73N5xq98+BJvdWqnD1AL3y8V0uwvazjtjxaFRg9kkJ2
                      Pfr/QT1gu8C8prYEvVuohD1wT0A8M+ZovSAvM71moSU9QsOrvYCJAr0is4O9kpFHPWoDMT09p2q9
                      F6V0vfbdHD2NUk+9BW+vvYADqLpEItg8kDWtvSiQtzzrQ4g9dpigvS0sb70mhwu9YLDDPKz8wLy/
                      X8U9iGr8vOKbXT0NETa9zbGTPRWcwT2tBaS9u1XLPcdJij0gnw29ftsdPYDAK7y02p880OC6uzms
                      yD3g4bE8YKMkO/pAxL3ys2k9k3BMvVKJmb0gKWi9qAm5vYyFyDyockA8EsoCPdxFE720sqa80PVA
                      vabCDz0aSTs9aJnWvHpeSb20RMc8oW+VPSXhwb3Z4cs94DKcuwBhlbtzb0S95A3WPDQB/ryNZC29
                      8s+RvQAv3jvdk1+9vVqKPSC5n7xegwc9DPvZPIJkOT2A0/y6pql3PYnSmj0wuPG7gLiAPJQjhjwf
                      k7M9GEf2vE9Qsb3aFGe9Cq5XPdb7Iz0CRgE9EIxevYBrq7yYwka8QNBXO1WGvD1Pl7y9qIatPLKX
                      lb0Fapw9DtWoveJTtr2URKu81IXvvIptND0wLww8ieK1PQhE1bzHlzq9eqrEvcGagD0w+w28JlhG
                      PTlLsj0AD129UTrBPZgf3rxdnpM9khRDPYoAoL0V4Yy991+MPYXQkL2CnGE9b2WwPUwnzzz67aa9
                      DilAPacTQL1pSos9FsCmvQCc1bsj3sm9WTS0PbSqib2ecZ+9IEHWO0sznb3YIhS8wMmHvBKqCD2Z
                      No499pJgPRvnqr2hgbM9YrlKPWDl7DvgN/e791+mPXq7Yr1oZw288u5rPZ3+yD20rA69TSQjvcwo
                      jDzMF6m8YDqSO9emGb3OUau9nUduvWSuA73acCA9siI6PWHBvT2IFoc8gCLMvEGShj3ngKE9KSKB
                      PYnLxj04h5k8lpeIvShgqzxgBhK9K+q4PV4+Uz0gyTm9VIWWPDAAcTwsuM28AikMPbgruTwA2xU7
                      MDMYvLavcz1YCDQ8Yi+gvQh3/rz0g9g84OfBvAAUMbzacmI9t9w8vVjJuL0SN5W9kIxHvQAsHTnA
                      1pc6ivh/vbSLFr10u+Q88gMSPcUBtL3L0aQ9iCTHvWe7kT3pBKM9FRzJPY7TAD3AiWY7eHqfvPpd
                      hb3BTIk9LuoVPYnZyj1aiSU9gPV7uvj6qb36UQ+9qGKLPIDN2rwMYJG8Tt2dvR0OgL1Jhrg9Qe7F
                      PUdbuL2hy7Q9BlsVvdH8vD12kDI9gLITvAPDlT3gc5u9snsxPVP7qj2YlJ+9t4dKvfTZhTyebQc9
                      k+VdvZvQgD3NVSm9VT6nPSi0KTzS7wg9lnV+PQrOrb23kmu9Y/W1PYYsqb2wbaW7wN9zPDR99Twy
                      Wlw9O37EPVjgf7wwx/c7NHq0PBCBv71ScQ49EJwavdgR9LyvXME9wts2PdpGdr2cH/o8KIG4vY+P
                      yj1yHqG9qCvlvNAg2bvT/I89wsmTvT4xSj0gHLO7bjwxPQfsL735WZw9/1y8vRoMCL1fLpo9FpsU
                      PZw0iL3tl0e91dyXPfihlb0m6pS9KAm8vSiTLbyMI6o8bJ+2vGE2sz0jjJe9+qNGvV2for0EHdg8
                      6EaJvUq2dD05RLU9spEUPa+joT3U5ge9YvB8PXgPoL3Qrp+9bOG7PPL+Lz2iFz09k9oivVSvvzzt
                      kb49GDnJvCC5xTsK3oe9gAP8u7u1qj2iZGM96uezvQAAaLwhkKU9jghZPdA+UDxUBLk8oAG3PPan
                      aj1gD4u9aB3NvE0gwT1QGx689J//PFKkDj0FcKu9QnOfvbc3qz1xdKc9mK9QvPqqWb1DdsQ9faKt
                      PX34Sb19tJg9MEtgvCi9rL3wPzI83ZhrvYiihbyB2K49JVCKPeBU5rvFLJK9rKfcPMDgGzxZLbY9
                      ewaXPfgl5LwExuU8rSzAvQAUhjrub2Y9GqWwvfDhGbze7Ji9ODvvvLd2gj3qu1i9I185vZTRsbwM
                      nqO8EkKzvdATA72Q/rW9OebCPSCNn7wWnBW9ycysPYCtKjqwOUG83jJIPW4dHz2firW9N2+XPSJJ
                      Qj0uHVI9EMabvY0Yqb0Q8AY8aJRKPFAg7TtP8qU9Rx54vY1BTr1TGLK92hysvf9+jD0Ajk+8wzy1
                      PSnHsT0gNxa9gHSjvUIHpb3luIk9tyu+vVAmujvCti49SBHlvCb/fD03Eia9GxCbPeV4jb3nAi69
                      a3HHvfJTjb3vo649cM9ePIJMSj0Q2xM8UrZQPSVToj0Q7CK8YuQYPdWEqj0YhhG8eJbJPALarb3m
                      uKm9XGXPPFMNab16L7K9qEMBvADFfjpinxE96ziIPZSKhTxfvoI9AACBOSSX+jxAqjm7zuYaPVDJ
                      5zuD60+9tSatPbHfqT06LFM99MeIvGB5iLzapz09wtKTveyQkTyMA9Q8f86zPRLGp72z+pq9EKlf
                      vdB8GzzwYQq8B5ayPfWFpr1zyMk9uenKPQRE8zzHE0C9fzqBPdFgiT2gKJ4853Vdvfbkob1T4ba9
                      q62RvcMxTL0Zwco9lJgPvaieoLxPAb09cgJtPblIwT3Yooq9KU+PPbCWzLuL1Zw9TttWPUxO6jzo
                      IwS8NXWHPQn9kT3fVLe9EHrCvU/wsr1XgLk93jgEPRegML1jXE69vzXHvZJGdz2F3pQ9IrY7PQr9
                      U72qMbS9keOwPQyxt7y3hye9LKb7PJhJizwZSMw9WCv4vFGqhD3AumM87O23vJgnszwWrEE9igl3
                      vaC9l7sAnJ+6DTarPa/0lj0SkgU9ILLNu2bPAz1g24C9atagvRYSXD3gAey7YNUhvfLaVz3AujQ8
                      bkcZPd11kb1di6q9BTOTPWhMxbzEqfQ8nec9vfFPkT3PJ4s9QW+XPaSEC72abnI9loBvPR0yj710
                      N7480DYbvPK3ET2wXIc7KYChPRCYWb0Yat28APUsujH0kT34Y4w85juVvc+ptD0StFM9Nrh+PUGf
                      uj1oHck8wJGbPGBZ/DtQjAq8WV2HPbrkXj0wIge9uIWCPGqnQz3ozJg8kzq6vVb2Bz0jKz694aSs
                      PfOxr70AT4a9nX/DvSqXxr0yLkY9ANSbuHMaiD0Aj0S8Nf+HvZExyz3aOJe9xtF+Pe/luj3DnIs9
                      DughPSrbLT2VMYa9uXOIPVl0pz02w0I9wCpgO2rLej0w9Yo7PQq+PYJpbz3wipS9l/sovcqsTD2s
                      9NO8+MyEvUD8V7uQ1BY86vNGvdNnwD1g9PQ7hUqZvSgzNTyA3fa8Dj2NvQKslb2/I8u9SkQNvX0c
                      T71q2Ma9MoJKPcBGVrwAXfI7Bz+xPWFmkj1g3rC86DVcvGC3ozuYLIi9lc+VvTAA37vPh7A91EyI
                      PKKhej1sePo8cuu8vXqQXb1mOgi9ZMTnPACV0zsUxt88yJSzPJH5xD3VpsA9vXjHPbDrzTug+VG9
                      7lU1PYodLr1uhm89KIZ4vLOHZr0glxC9FVmEveGgxD1udWg9MnNdPf3fW71mTIO96IIIPJiQuL0U
                      I8Y87h+QvUo7S73PHZY9APQoudBg1LulF7Y9zJfyvGrXbD09p7Q9gKjMvWD2Vb25M5Y9NvkhPVpe
                      WT16kic9LudiPf1qTb0YADS8Q1BqvRX6ub3WUBU9RZ26PVo/Ij2wzHy9dMOCPErbFj3p1Jw92I8l
                      vPomKb2Ws1U9uJ+6vWhaAjzaLEu924q4vUhZv7xwwVk8aNu3vfwJEL30Ld48R2pHvQgYjzzNY269
                      Lb6FvdlFuz1hl6k9B04pvWD/arvSC2E9XrBAPdbMUj3XFLO9aNFpvO1OtT2WvD8991MlvUCEMrx/
                      x609qSi3PdU/l720YfU8AsaCvbBakLsDnog9/Y9fvbCtNDyt4KY9KWedPaB847yI7s+8imVQvV21
                      Wr39ZZM9QETMPGNhsj0C4Wc98J1ovcCRfb3IQ/m8AP3zOzPxcL1Yhmy8WFs/PLMRlD3J5Zk9zgIg
                      PRKSSD2og6e99Aj7vEAaNrvTbbQ9YDaFO1+WnT2i/i49zs2lvaRkEb3lkqo9wOC0vKj2u7z5OMI9
                      PvVHPSCzwrsOH469441zvRXokj26w329jISQPKKCvr3xiJ89n/C2PVhJaTyArlo6rP7WvJDTJ73d
                      zVi9tIvBvD6AED1RPp49MCetvZCUQr2Uzeu8G3OVveS34jx4qr68oCiiPNApPb3YhSc8Di9GPSAh
                      D71gry+9wioZPa7HHz3ayxo9cJeXvRUJm71VD469B12APadOgD0EDvo8gLkTvRLRCz2+d1Y9P6Kx
                      PVLefj0CajA9dJbjvKHJlT3iQEw9xKuFvRPeer0A15S9Z52BPQDHHTuoBwy8APQjvI8iuL0V1Y+9
                      i33Cvf6xJT0AMzy9FMLuvCEnpT2mV1s9NUaZvQLfCT1rUp+90zaaPRJUbT2YNfy8ask2PbmNlT2u
                      DQk9IlccPcbWnr0NOV+9AAUVu0zK4ry0AO089zTBvRYjMD3dZGS9no1kPVnRnT3aX529S7C/vS7q
                      TD3xVMo9UntnPTqLTT2lPcg9o5vFvbADOLxwEGi8HdpcvTBtbrxQFZu9smySvR1WwL39OD+9KMhR
                      vGKhdT0Ztr89ALfqvGuIwr07Kp29jRugvVIuZj2ggt+7ddObPZEciD2QjAm9oAiJuyGYgj0mL0Y9
                      SkhXvUbOk706mVO96OT4vDj/pTyYFlE8jR4uvRa/FL0NgcY9WA2kvB1Wpj0FDpe9FVDBPb5nGT3Q
                      eHM83RQ9vaannL1eE2c9KihiPbrCDb3gXwq9GCBKvChWbTyDxna9gIh5PKD9fb3iAr+92NagvB0k
                      db1ecB49E2KFPY1PI72HyVm9+jd6vb+IhD0eQD8901K4vSoJgr1TC4o9cpIiPfBgvL3JXJ09TamO
                      PXX/jz0YDyc88K8aPJCCAzwTbMY9NgwzPUDL9LxwJTi9DkNlPQ1emT1Wen89/XmePShuELwFGqo9
                      KmYXPeC85ztLZr+9LXBOvcxz2Ly6oDo9MJn9u0Elnz1VcKg97it/PXBaOr0oDG28uIScvNRklbyK
                      t0K9mGSnvVjqRzxCrkM9t4LBvcL7Kz16lCm9DDqqvBpgcj3jwss9kEx7vNVOkL2NFTi9wKMyO1fY
                      bL26r4e9KEkpvCxXFL0OvZq9MTanPZj9yL3jVEa99GmCvdQj/TyKJF89R6lIvSh+jjxYbyS8wMHF
                      vHnylz2a/GK9Id6PPSgE5bwK1nG9ChhmvQhntr0PcrS9GjFfvTBAlLssie+8Rr0RPSWLnr0y7UM9
                      0SKLPdeJuD3m3jg9qggpvZYsGD0Xe2G9o8mRvcd8mT2tAqA9rgwlPWZ+XT0o/8M8VtQ/Pd3oyL2t
                      t5m987hIvd+Qxz3QwDC9E7e7vf1fsb3kef88gGu6vS1onb1XT0K9wEgFPNN1Vr3oC1w86aqRPQDU
                      o7ro/LI81XbLPd32xj2Kcw69yDydvBKiAT2Uet+8tsRSPWPCxz0qrwe9dQWTvTsMkL26Aru9aOFJ
                      vHJzmb2gaLS8uBjWvIAOgrtU+IC86KhFPComk72AW4M8OgyLvV50FD3YZAG8kmHEvXcYWb2aRk89
                      GD3EvTUHjT0AbM28KSGoPQzOxDzLnq49zeKwvZYSZj3wDF089fGyvbWDuz03ali9rfJovazerDyY
                      BWu86pSkvVhBTLy3SKQ9ipZRPRTy0zyX2aE9w++oPZE8yz3jJlm9BtpwPbbvET3dwnG9QNi8PK8d
                      tT1gruy8ErmevbSqDr0SsFA9gK1xPCYCez2WokI9gHU5upUkkD1iIzM9QyHDveyBy7yoP9G8BHuI
                      vaht3LwwRPy7VhAQvWcbhj3ACWW9P2m8PXxKE70vm8S9rDASvQhbi70qnEy9ciKXvbQn9Dzo7H28
                      gKedu0wgirza1bO9zm1cPdWbiz1A9VO7os5EPbCkRr2AbJ86L7e7ve0ZjT1aBG69DeV5vRsTlT0C
                      2J298jxaPaO0tT2ihls9DLiYPC6ASz1BFMY9oIFwOy0MtD1iWn09AI6duytDnb2rcL29WnY/vUB8
                      u72SQE49BlA1PXNXnT2iAg09McvEPSBy3zvddTW96xm6vWhajL3Aqqw6h7eSPa/goz2yQ109ob3I
                      PQw03zxxCaU9QBCrPLBoQjxQAFu9bplcPSmuwT1Y2g28PGLVPKNDTr2YbUM8Qo7HvTCUiL0gKNq8
                      +HWCvWA+jb1AcbK6Pt+gvaDApLy5BbY9p8+LPbEKnz0ap1S92qESPXCmt71hxIs9QAujvMBwXrx6
                      65S9AH9cOiiIaLxckOw82XWyPXEZpz1LpYA9a/THvRnqqz2RN4Y9zUc7vSlaqD3nTCq9gFDzu7do
                      yj24FbA8BHsEveKzl722RyI9MDQePGJyRj3o9268bDXsvGcUS71AZny8BLSFvSgyiL1oml88QF6C
                      PEHamD0JXZ09C0q5vcOrWr2IFok82VWwPWO1nL2xXsg999K/vce7LL0yjVE9TD+PvIWapL1aeE49
                      wHwaPHb4m70Eug29CvtDPUkkqT3OYz89GQiVPRZaAD0wRCu9TWqOvZAZGr3xyrg9b666vUDrwLwA
                      FKI8zdmgPWoDAr1gSI+9/f3HPTrgCL3QzAG8oQeKPVTNgbwGcKG9WV29PUG1vD0yZKu9cgYnPf2u
                      G72OBFU912CPPX0fqz0sN8C8mvkFPVgmUzxoiG08pHvRPFidw7z+cXg9MQa4PfBVW7wCdLS9V/Ve
                      ve3TJL0DoKG9YOidPGHKpD0TIp49QmhjPeA6xDx9bTC9aEJtPAVkoT1ijWA9DT2ZPTC7pDtARqa8
                      Q7/BPdAFjr0sBPS8FB29PLdyuL14wZq8S4uUvb9gjD2okDu8CH2hvWo4OL2BdsM9HbhcvewJjrwB
                      SYU9+ZelPZhg27wATG87no0UPcB4trzhNbM92JQsvJITej1gybA7ANEMulo7hr2YfoO9rR62vVBN
                      k71ogLa8uVyiPbY1o73C9Cs9ICGIvSDBnzz3rI89oA/FvdsxlL2ZnJ095pN/PbJOVj0pG6A9KKYk
                      vDesyD1WZlk9BcWAPftNsT1INra8AfmVPdq9br2kTPg8GwmyPYf0oj0snOy8lITlvEzdgLzo3au8
                      7aaEPQN+e73l88E9G1ucPUNZlL1hno89St0JPW1cP73UEfo8EsVAPWhgeLwhNI096IeSvQroIr3K
                      ETm9U3e4vdFXqz2tVya9AkxRPQsQqz3UdP88GJ1TvICF2LzuHB09ZTmyvRc/gD3wFXM8EEofvUDU
                      srycqPg8TwqGPdpWMr0owhY8WImWvUA/7jqwEBG8xFHfPGD/4Duypx49q0urPR52RD3fdI099DbF
                      vII1BD1jWK89yqJsvULWBz0ti6g9ufqsPcBHdzxQPu67xthtPUaNJz3HBiK9/x2cPcu+ur3yXT09
                      8ssUPUCJ7jpeNBQ9LPeAvAlQlz0Hu8o9Q7Ibvd2JqL1aCSK9TK+DPOZeZz15S5I9ZI3WPLKOPj1Y
                      9ti8bg4lPQ+TuT3oyFI8bNmEvVY4AL2aoxY9wPBcOy5LeD3XwjO9kgs3PYBLoLt68Gk9yNqyvNgh
                      p7yyEiw9cjeTvQDiDr3Ul768c5TKPbwX+jwH4Ty9KVbMPc/cgj2a2S69aC0IvFAHNLwj1169LuFU
                      Pcq9GT2EmuI8ODrAvH5TBT0WVT89tjMyPQLwJT3c3vk8EGQHvBpmer0zNDC9gwp2vR1Awz00bJ28
                      DvJ5PQB3XDygxJm8sG7Vu3BwF7xKUjo9zpFMPUCQjr04ZLu9i1XHPaa8p73lTYq9zV5fvaForD2D
                      kpM9mjMJPUBZm7pEzuY8Q5+LPf1joT2Vn4a9MD71u4A55LuM4o48QPcQuwDW+7tyhT89kBc3vdrZ
                      eL16v169gEDPOqy1Bb0mlAI9PipRPZTMqzzA5IM6rDK1PHDMZrykrv08FcGlvfISNj3A60m9NqcS
                      vcR00zzF8LU9/ouVvQC92TuaDKy9MOMmPAD7dTzHuHa9zMKCvcC8hbruUkQ9Krx3vWnIij3A3M86
                      mGCIPK48rL1xv5k9rMriPJjI+LyPlaM9FDcTvQOhlz0jzpu9x9G1vXoYCz20Ixa9MDQUPOD80bu0
                      O+E8yvyvvUf6wj2aiWw9zWyIPZ7HKj239ow9ItE5Pb1Lrr0O0Je9aBLlvKD7qrv5F6A9b3eaPQNW
                      Hr2MtYe9UHOFOzJ9Dz13VSe9/Q2hvXSouzwAL287k66jvUH3sT1Y5pe8U0e1PSjyub2s1Jc80DJh
                      PKkunD2weyE8AUCvPYaNAL3geFW91K6ZPN90uD0xRcM9XaAnvZBXUjyyV3494lxkPazZujx9+aI9
                      52q1PeQ/7DwYvcO8KvlwPY1Qtj0aeja9+g0yve2gxz0ABka73SMfvXRTBL3YU7G9YjxHPS25mz1q
                      P1I9ipp5vXiDtbwjx5S9hod7PTgm5LxkQNg80P4GPLAefr0rjZG9mMZTvGxu5ry6GGU9qG2kPMAD
                      b72zupu9TV+XPexz+jzAyRK8ih4avTFmsz3nIKo9BhcHPY9dvb0EzeQ84PS2u4DtwTrUcBm98H8Z
                      PBZ1cz3AGDm93tVKPbqSJb1wRlO9iv2ovSAHjDuYHIC9LRKhPXH+pD3Pb7w91G3DPAUdhb1ypKa9
                      0CITvN+exT3v2Mi9ADgWvWw54zxAoVW8lI+YvA1Xtr2a2S29IM9avfeDvr0oS4y9gNUwulQ/xLys
                      McG8dzTMvYDPsDrGQhG9SmlJPT1Ms705sqI9BXaWPcCPEb1aKQC9W/quPVrJN71nAok9mlZ7vVDQ
                      TzyA+TU8gHzovBLBr71NyIa9M4aKPbLSIz24yq69ohRKPRPWTb184wO9APAPuXhIobzdwpg9N5dw
                      vdugpL3A3Wg8g/6aPXDufrxoN+W8boCpvXIQTT1WpAm9R463vRIdKz3Ay5c82degPawH8TwAtPm8
                      lxSLPRh5Rzx4geW8NUaEPSOIxr1Q7kW96XWLPW2ph70ACaE7jwmwPQ8fxD3Y1Ie9IO3LvIA6v7tH
                      63G9yViYPQfcr724A729DpGDvWwEAr00uJk88HcavDSduLzu4J29u4i0vXHwoD09VsK9/B/gPKwf
                      l7xoyYM8uRKpPatrhT1ARQ87w6xfvTa3Gz3bXsM9unRNvTAdbL3YzqK90J36O8VCsL1DpqE9PRY7
                      vYxUjzwURrQ8sxFcvSrJVj3AluC8UhAEPcANc7zCuDs9HQZdvV3nbL02Pmw9KFnHPHyoC720tqy8
                      ERW6PTodB724I/q8IBmRuyakZz1B28Q9YHW8u9Yth71qGMu9UKt0PDAUNLwuriA94DmRvIoMST3U
                      L4c88PFZvSzOrbycTu08UJ4wvShPdjyz75s9QNPyugfrG72hap49eyOqvbIafD0mCDs9mmqtvXDB
                      PLxgwSy9WGSQvZCLHDygZ8m7ADiyPDM7o73QHhU8zE/rPJNROr2w66W7jYtovR3eUL1KuRm9qDeL
                      vfC9IDyf2KU9fjpFPc3ytb0AkCu7A8CNvZBMHryytjA9h267vfP1pz0N6nS95BzOPFK7CT2Ah8I6
                      qBFZvFDqAr0gSGa9AHNFugwc4jxQzqO7qLOwvPSSnDwqZbC9IM/GvRqqi72YjjQ8IMS6vfr3Q71A
                      xh+7AAXQOcd5b72fN789+YeTPYz6rTxjDMC94jOfvSCMl7tK3wE9TdZfvVNIwD0MHgu94pxrPWCk
                      Jbvbvow94BLAvKBSQbtQ+fi7SEL1vA4pbT0ANX06oNKlvYTLE73lsJk90tyOvYD1rLrpOrA96eKw
                      PQLaIz0YPrY8o1UhvRAMQ7xQhaw7HeeVvcAht7xSUyM9kA2pvY83sb2ASpK7AMCCNlLheT3Ccjw9
                      /H7PPAYqSj1oa128Wm9xPZhypr2B5ZQ9THHMPOADyrt0Ecw82TGhPWp2RT2N75u9qqIVPUjv1rwg
                      s6W7rLT6vPgSvLwoyoK8ZIrWPJNVer2ATjS6COGUvVTMA738H+88k3vKvQJ5BT16XWw9gI3QusXy
                      rr0ZzY09fvUTPcw4Bb1KMzY9J/5LvUNEtD1ah6i9oGuDvCVEuT06Nh099mB4PYa1az2Ay0C829Gr
                      PcDtRr09NoC9H1K2veAA/zvXibI91JCzvJsimD3fOa+9/bIsvc29tT3SzBs9ecWoPYy4vDxo2IS9
                      RBn6PEP4yz3o41S8KDGnvTDA+DuyeF49ItZ7PeQY3DwSFG49J7KwPePelT2ClWs9BkeHvRdPSb1s
                      lb68ui8bvVEGjD1z/Io9rIStPI4TJz3t7a49WIq6PFZvaz25WME9G0a5vRpGNj3f1Ko9TgxqPak9
                      sz1A9Sw8oTiRPbexML1C5jQ9kDtivGYjET06mTQ90oUtPaKaGT3A2BU8yMX/vBmBoT3hpqc9UtgA
                      Pdwe3jxQ1bw7PyOpPYd8H71OPi89H4qxvac1uj0Yko+8DLGHvHhyvrxYAYO8xcTIvTCNmDvn07S9
                      oE2UvbaBYD36LQQ9lJy4PBuEwb1Y68Y8jGoBvcOHkb1Rhcw92GyAPGBvrTs+aBQ9gTGiPdPGUL1J
                      i749HqmKvVit7Ly0Dxe9166DPfAtcbzMIA+9cTmSPRadE702Uae9rh0bPSxSlrzoLJO8BIPXPJbc
                      Ej2KexE9KMtPPH5Nq70I8rW91IwNvcFgpj1O0lw9gGlqvKiRKTzMAKS8BKbjPGA9qr31kKq9Lucd
                      PcAfMbyAFmK8AqchPbdBrj0ACpi6wIjJukKrOj0U6MU8uuB2vaC3nrtZ4oE9znWavcxF6TygEWs7
                      IteTvUj6uDxnEx29vfCJPV/0xr0GWyU9gvsxPWgaO7zgJ5y9XZG1PQasQD08n4K9fE+GvayTwLyg
                      M/i7uGWLverXB73qYpS9t1s9vZIUED0AdZA8sHmBve9Xrj3C5zM9KJEePEIlTj3A/qa6KtwAvQU2
                      n71Tnz+9EDGyvcvpkb3LK449vNzOPFQDpLyQZJW9wq81PaOfTr10f+s85OsMvXLAFT28Q/g8us4W
                      veLXTD2VDKW9vPraPCJoDj00f+y8KHoOvMJvbz1CS3Q9KP/cvDgc5bxmQCE9MIGmO9prP72mWQE9
                      ICaVvAf7fr21faM9wPexvVZ7CD3YBTm8MNCuu2M2Nb3ySsi9B6tPvUXtkj3II488s5VsvSqSZj0I
                      dIC8gIo1vGC/W7sr77k9cvAIPQocFL3gnku9A5JBvQGIoj1AcV27QMIKO7dkOr3zH3W9A/C7PdNF
                      mj36aFa9Z4FvvQwMrLy+Z4S9sMJ2vNCSQbxI1pe8YDSxvdZRpr1X18G9UyXGPaw6rrxFTIk9oHGW
                      PJCxq71Da269WvwkvXCMSDwWjh09XS6BvehQA7xymKm9pwMzvVVJij1CeQ89dyWjPRLxn72CJQQ9
                      lK+EPM0Ex7250ZU9idyJPaM4J71ABQg88DtbvFYIDb2KpHw9INXzO+Bv3zts6IS8Z6ygPYcCRL0Q
                      2UY8wDnKvWwAhr1bIsI9+PDqvA4vMD0eo2s9ujpQvXib37wAzF28NxZXvQi3u7304o88cJcUvRto
                      j719n8Y9MCJcvXKxob2vV8i9gLrrO8BUbr1g70i9XBuFvVh0hL30Eag8qDQtvOiGuTx9g2i99CKq
                      vLAOYr3gZgm94+qkPRK4UT18C4G9GXO2PQCEazsA8L+6s1SavXcinD3jLx29RlUMPc2Vp723fK+9
                      WG+2vdrXMT0KNhU9cJRQvWqnlr1dM8U9so2/vSKnZT0AAAe6zcpEvUrDPb1gzEO7EzdsvRapIz1n
                      x6w9ACDsu0opXD16nxe9kB4UvNFSpT2uTRo9zf1GvcMja73W/ge9aFLnvEO6UL0gLZA743WkPR+w
                      rr0s2La8oNTpO/WJir1oEwk8ACRKucwm6jwzkDS9VKnBPLhPxr13T7g9SFnQvC6MSD24d769SDz4
                      vJsguL2CDmg9LL6HvL/usL2txG69bDyFPIx7w7xAG4k6vHeLvebnB71G8DI9eVLCPdeCNL0S7EY9
                      ppFRPVqCRr3afBg92OTvvN4ycT3MyvA8lC/1vHI+q70MfuI8tQaCPVJUpr3sGa28gOUFvBDApr1A
                      m9K6exOpPdAmMjxDz2G9YBRbvRxk/Dx6aqm9gT+CPcCFLbzAsYE84hFnPSwygTxjm8m9GkGFvdIm
                      Ez1FJqg9R9mYPSi/G7wQbiq8IVWFPRDrXzyDsYo9vc6BvWcvuj13PVO9mEyxPFXjp72Sn309xb/I
                      PYnFwz0ow3u8heOxvYFgkT0CQAI9h87CPQAdf7xYbZy8WxmBPWB5K7sIIIm9zO+tPJR627zQSj88
                      Vw4uvVfKU73Ewds8ieu2PYlBkj3AVoC85zMbvbFDlD0FC5g9Y9+YPZCQP7wN7pa9LUnLPWoFDD3X
                      /qY9ShGJvaJRcD2qsZO95CEYvdWhoj1XE4M9taPLPdfMtL0owBk80IKuO9TNwrxXpWC9+bCOPTAM
                      vb0Ok6u9sPiJvQ6XMD0Al3S6w6edPVoVIT3psbM9OsiNvbKJAT04uIK8A+IfvWj4ur2UYxG9fZCt
                      PZOWjb1o1SA8onpzPcDKiTzGday9gKNGPN0IVb2VP429cIgwvTCcbTxgahy9zaeXPVaAor1AXyy9
                      LEftPGj27ryh2YA98L8yvTgmlLyXRpM9dKQIvRfPmD0hLKk9bVixPRc0x72z/nK9MlliPfm+uz1g
                      Ft070CAtPCNIWb0yPT09AIbTOzPFp71O4nU9p9F1va3DyT24k7M8ixCePcADKDuUEKG8oE8xu63c
                      Zb2VAKO9OyelPYCyKTpAJwi7TUakPXSb37wWI0Q9qAYXPNAAArw2ilE9VwzMPTy33Tzrv7W9kSe6
                      PWTozTztp8m9dySsPUpAfb2nqbW9tN/tPEDOG7y+ZoC9IZWTPSkFpz1CcxA9B4gxvZhoyzxQIu+7
                      0p+TvYMLPr3vQbk9mbrCPbyp5zxrhMG9IL+UO9dRqz3KNam97wS2vah5QTx4Z7m9I5A9vfcmjj3l
                      0om9E2W+vUhKqL0U5N28Q9a5PdXtoT3wLY29tlgXPZL/ZD2CDjI9wh7JvTBP6bsVwqQ9BRi5vT4N
                      Kj0Bdb09BcaLvUBEBTztwoC9R2kavaAe4LuamcC9tjmNve+ryb03KUW9+qQLvSo+y71AZY46bPyH
                      vKqLnr1AZZW9UO9TvGt4kL3RTcM9fj4lPS4Jir0HbnO9UztcvYNXfL3QPhu8k4mbvcHtrz131Ea9
                      rKkJvYIKMj1YiyK8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NDg2NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNzE5NDg2NHEBYS5kAAAAAAAAAMpaEz2gmOS7HmFcPWp1ar1xua497BcLvXD7Qrz9Kpu9
                      gkBGPUhsmL1YIqW8cjqHvSDqpLsGV5K97X6ePUApl7ygY2U7kFBTvF2Fyz2A9p+7GHhzvCPgXL0H
                      zVe9MG/qu6C5PzsCrBw9sbzBPWrmQr0ol0C84ffJPdisvDyJXZc9ogGrvd7HIT0nWiS9KERPPPD/
                      IjyPdI49sDHzO0Iraj3OUoK9tF7avLP3iD2L0L+9KlmxvSunrL1o4Fk8yPmivfJUJz3u1469tE6H
                      vYDB3TseZ4W9LRhnvWDMPb2RzaE95s49PZjSrb1AZzO8wMmmvGhgejyw0vO7HmIRPQAE2buBMY09
                      KTScPXMnkr24abM8ob6uPfOKmL2AhrA6L6K+vWJ3RD109qa8mACovNwW5DyUVZ28JswsPdp0sb1s
                      hcc8sC3Qu+Jfxb0AcRE8mDC5vABIoTnaRr290yikPdgjiTzAX7W9zJ+WvLqwp705WrI9QpuJvZC+
                      Hjxg71E7xucZPageHjyIAtK8ALg9vEUGqz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NDk0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNzE5NDk0NHEBYS5kAAAAAAAAAH2/Gb2ecxQ9AMw4OojnsTwwlgm9x0lJvWD+szxIuMq8
                      7LeGvHTxwjwSlG89VYG2vQSM3TwA40W7ApADPVCyjDt4ffS80HOFuwgglb1QxHk8GNq+PIDfNDy7
                      jaS90cKvPRxx1zwAOxU60pVcPaNQw73AXi290s8CPQr+q71V7569ktKjvbADP73GHIe9hhpwPVgz
                      FTyhPYE9tQmYvUpgPj3QAK87Qj18PbIvRT1ignI9QPU2u/c8vL1ou4K8N82NPcwD2DyiFGs9TLfN
                      PGrJg70Ac4w5UaaPPSd4ab1dR6M9pCj+PLa8Uz15bqw9Iz5VvRJUGz2wwAK85CDzPIB+h7qgemo7
                      0BM/vDgAjTwAnWi9VLnzvB1INr2+pUQ91SeZvXJaYD3QN/U70rgUPbOLXb1SM8q9KPupPILmSj0g
                      wv47AEp0vVgckbzChV89rUabPeBDxzxZ86Y9SR2QPVAmrL1WwHk9I5anvaSl8DxgFbq7mEnHvbd5
                      zL3ERBK9r8XIvYqjv71MBb28+rtcPSA8xbs=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyNzE5NTAyNHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyNzE5NTAyNHEBYS4BAAAAAAAAAGCnm7s=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        NZZrPAu7Tjxthig8bYYoPFAeqDyOY288HylBPB8pQTx2ZTY80aM3PFF1+DtRdfg7dmU2PNGjNzxR
        dfg7UXX4O81UDDzTKUw8QLG6O0Cxujt26zg84+I5PO30Bzzt9Ac8PRMMPCX6aDw/xQE8P8UBPD0T
        DDwl+mg8P8UBPD/FATw8l0E8VhlOPFhYEzxYWBM8w9yyPDoDgjwEbXI8BG1yPJ7FJTxfWXQ8/0IK
        PP9CCjyexSU8X1l0PP9CCjz/Qgo8PJdBPFYZTjxYWBM8WFgTPMPcsjw6A4I8BG1yPARtcjyexSU8
        X1l0PP9CCjz/Qgo8nsUlPF9ZdDz/Qgo8/0IKPPnMTjujqms79IuQO/SLkDt55RA7IIRLOwQ5fDsE
        OXw7z42FO0imhDtWFsQ7VhbEO8+NhTtIpoQ7VhbEO1YWxDtllq07RaFuOw17AjwNewI8QLuDO+kL
        gzs8LLM7PCyzO6TnrTv4HVE7zra7O862uzuk5607+B1RO862uzvOtrs7jKl7O4xjbDsQU6U7EFOl
        O1YxCDtRXTs7cvdIO3L3SDuF8pI7gmJHO5EvsDuRL7A7hfKSO4JiRzuRL7A7kS+wO4ypezuMY2w7
        EFOlOxBTpTtWMQg7UV07O3L3SDty90g7hfKSO4JiRzuRL7A7kS+wO4XykjuCYkc7kS+wO5EvsDs=
