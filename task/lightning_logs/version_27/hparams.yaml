N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTIxNnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjY3MjkyMTZxAWEuhAMAAAAAAAAdxYc+qIykvuA4TjwQo6Q9AyJfvkiYWz39WYk+SAOV
                      vuCmXb1Ei/09YGCLvuN8mr63MJY+MBi8vVZAGL7gUyq9djprvviMHD2QvXK+rn5cvr5yIb7wrLY9
                      mYSVPhSD/T2gZ3c8gLsRPvAGiD0swou+Qx2EPhAIgLzG36G+WH14vfg4BL7ZRJY+ZMCovrDB9jzH
                      raI+QOmUvj2Lkj5+P5m+wJTivemVkT4qLWg+QGqTu+ze2z0YIj6+btKIvnClmjyAiVu8QFrOPXDL
                      wjyoLFA9wDPbvciAJT38Ro29rESlPaA4VTzm23m+tm5UPm3sgT5r/5W+pLvZPRbsNL4oHUC+WI8Q
                      vobYHz4Mo969F0OLPiDIX71oSJS+M+12vvvDjL6Ty5i+toViPhwYhL5PwJA+AAB3uVXcpz6atX8+
                      OjdjPgZDir67QDe+RgEpPgh7GD2x1Yk+sAwZvlgXbT1e2Fa+1PPmParUGz7Q7K68e8ttvgDjTLxL
                      /AG+cNANvmDn870qBz4+QPEHvcjweL28+Oo9PEGrPeisIb6AaZu8HlsmPhZELL4AvRc++FU1vhF+
                      oj4kuaO9HxKPPvFCmD5Y/JC+djt3PkbWlL52T0i+QIadPFBLjTzovJm+QoANPiTvgr6H240+w6EE
                      voZO470eLQq+oKNHPGChUb6klpe+A6gdvu3Ilj6Wdfi9e0FSvlSIo71ccfS9gPJyvfA7Qb57g06+
                      pJOfvubwQ74f26m+czU5vj4IOj5x8pw+y2OpvjZJ1L2+2Dy+O41Ovoyc8r1eRjW+/NLPvYBXaj1a
                      EFw+AKBtvvy7kz37BEy+QOgmPmzQlT2zF0++nEnBPWY4db4qmwc+Ugk0PqizGz2g8su9znVnPtuq
                      A75iLz0+46AhvgpImr79JYI+3vIMvh8dgL5DTH++zqF8vjalML6WpL29stg9PgA47LtgPA48ziQW
                      PkDVHD6q0zQ+POPnPWhUBT1PnZe+0HKgvch+O75O5Ro+zPP3PbZ2fL6Yplc9rA2BvU3LmT6m2qO+
                      vGTePaAs/T2edqC+FgNfPueYo77UDoi9SnI9PoDvdr1AjZ47TrgtPlCbXL4IFBo9fHymvXK1Lz4w
                      na+9rJOBPep5Mj5Lw6G++HVjvYNFA74IQ2i9zbWePsayWD7CF1w+t3KdvvCUhTx8P9+9wyQdvjjS
                      Ej3iyi4+2JCHvqDznD1C+5++srIUPqAKQLz9QqU+zt5GvhBip73ax42+kog/PmJTez7aGhw+UK4i
                      PtbXAr4Qodk86CIuvc7Sgb6YaRI+8rN5Prs2nT7gAWq8eK6Gvqw+qL1m8qm+tDagvkCpxj24BDG9
                      n02EPrCsJ75T4lG+yENHPctxo76mOjS+UCG8PAZZfr7+hSO+oKwevsr+TT4Xho8+WttcPj63o74A
                      PQa90HLwPb5OGb5scs69sFPdPdy89T0G5q+9rSmjPqyf3T1Y/Tm9m1EvvmBYur2ghW2+A6FTvviT
                      nL74IXU9QIKkO7hICT0+e1s+AOHHugC20D1AzP48fHqMvWYVUr6meea9GtKmvjSl/D0TJJ2+IrI9
                      PtCb1Dz4kwC+u6uUPudrgT5r6Ba+WLEBvfAx4r0opnQ9OVqTPlaH8r3wIqI97hJdvuAmLr6lQIc+
                      yzGIvsBItr0IW5e+ptQSvhBK3DxLhSi+toAvPoCIcT1EUoU92tBVPjiQcr7AKLS7SqQoPpAG1L0c
                      VY6+4AeTvVJJMT4ATLm8iIBbvuvkRr6b44Q+a3SZvgJgoL74rVW+oNUTvXKGdD6LDJQ+sN5GvldM
                      mL4osx++ygE/PgtLEr7x25k+iPA+vg6sbb64nVc9mCGhvv57E74AbxQ+Sh9QPtCovz3gMIm9AEA/
                      ORRG2T2MCLo9HoVkvqi3A76rHRO+tPCSPW78er4NW5Q+MVOePtNUkT6umAo+7LiAPWaXYj4cYPi9
                      BziDvnA+773gAPE9UcaGPrCDGr5TZD++kHG9vPaLZr7twIU+bMCVvlZdQD5gfBM8PrtpvlSv+D0Y
                      Tzc9R5ihvmgkWj3ggRa+PC3XPVCon70ELYK+Kjo9Pj4nPr7A+xC+ympGPjpIUj4AD7S8o0eEvuS7
                      pT1WSDs+mup0PsDJ1LupjaU+eGtqvRpyID5owk+93ghjvj7IDr7gFIq+DFnSvaCw4b3Aec079igD
                      vvg2Or0gH0a+j4GYvmrmdz7gSi+9sGYivgspiD6QTZM8Br08PtwYiT2A+x4751KcvmSYmb1ADRo+
                      +w4iviM/bL57F5M+gNYovSiNIb1GhbK9O7YwvioiOj4PoqK+4A1VvGCANzzXI4k+o9R2vnDYwrxR
                      4J0+ny2CvmqZIT4cFrM9V3OCvpDB4LwvD5k+bn82Pgz3vT0aqVY+/JqjPQCoRrzAyO48gOAFvAD2
                      ELtzllq+VjhBvuZlJr6AfDU92p9ZPnpVMD4mQ829RUGbPivhVr5Oqh++0lxkPl5QLD7YJGI9noVn
                      voAWALw+c56+/jg0vg6YEL7tK6Q+RU2pPmNgoz50IOU9LDWQvTDIg7683uM9mhBaPohOZj3HzJA+
                      AL/UOngAOb3qH3s+W3+kPpwhoL7W7wQ+pCSCvRA2hjwgnCc9FTKXPpYdFD7u9ie+kFplvtr7n76Y
                      NCa+EMgNvodUob6zVRu+QGDqPbC1sLwIqm29Vuz6vUbEcL55NI8+cNruvco1ZT6A70a7OP4OvjBu
                      j70Qo8E8e/EVvrHgpz6Abik+sodUPmpKHj5A/KI9t9WfPsNoQr7wl/i9Xv6EvqC5Xr5AE+M9PYSa
                      Pk6iYz5Gdmc+zNmPvZrcMj5cX6o9Q44QvuE4gj6gS329kJH6PMBEdT3/3JS++J8uPTufqD7eXVk+
                      0B2SvapgbT6YdD++6DFSvv4UFD4GXGK+3MmfPeiuBL1wSec9l62TPiQwmD3MrIg9sCzpPRBMEr5A
                      XdE8WyqQPno4Hj6mtEU+i/FXvh/9gT6PIqM+KwErvtiBbD0XU5I+wDQSvgCv/Dxt4YI+4l8LPgZ+
                      bz4YvnO9+B4dvgAymjzAM/47sfCmPghaB73Ur9U9HnCXvuzOor5r53K+mNYUvcRlvz2A5G28psIj
                      PmxF7714hGo9su6OvoRZqL77up4+KxxZvnb6HL7SI1I+G+4dvpNrBr7eAQ++gPPXPK2jiT5gHp29
                      nfibPoaXfz552qY+cG/uvEIzqL4KokE+DXCoPnvShT5AuiO9pTSoPpCeEb77KA2+n7mBvt7Scb59
                      kJM+suVUPp0Zhz6gMXC8skB+PpitAj14VRm+RgHSvfRf+D3gHBM+QGW9PGNwmr5Ihj+9wLOWvaRe
                      gb0fFoU+b3ehviCKLr0Lkmm+ICJMvVD1Ub7kq5M9tlD0vSwbn75CSyY+JpmsvbOWi76IzUS98NCy
                      vLCm2r3AzJE7xf2aPi5fFz7gZWW95usQPgA+CL4WHRy+PvkAPsA+6rwQ05q+9TGQPm5/K76e3Wy+
                      yCE/PTD+Sb4IglG9KjR7Pg7fJ77FtpQ+xzqMPriABz0WKhi+pHqkPYrjez4o5zw9wAicvbDXu7yY
                      rEO+wAVJvULxcj40uZa9wFDlvMnNnj7LIBy+wFa5u5WMpD7udEw+VoQPvpghLr36ZS8+M/FMvuP4
                      d75AGTS+JKqMvhdUgz7Svkg+fdemPlZpJD7of12+4Ho8vYCOHruUz529xNGsPWwPgr2oiAc+6jOV
                      vvKyOz5AU8Y8kDHjvZpOdj6oAFy+/pZVPlBj+r3Wdla+ep9vPoiwED6wmMC8gO39vUbntL2C01U+
                      QOqGvCD5rj3j2TO+gJ2ive58J77mqBC+LJOnvgA4e7og/Ss8ph0vvkCXRL6cD4A9ANpIvCMBQb70
                      h8E90OoEvtuaNL57rZy+fC70vYhWJr4Csxg+vt9TPhvyjD4GdUY+qcypPpmjlT4AFi6+qquavunz
                      mT6eWxS+KJFAvX4kBD7BgJo+WEFBvebUbb7YXik9aDcRvoGwgT43hKC+TD79vVCP37wsiKO9wqA1
                      PpQB0D24WVE9cBaavCBmdz1O1W6+SFwdvYbcdr5aoWo++PNkvSL7ez74jg6+x8qavsosNj5AfyY9
                      zaqYPsrRcT6I0l09vI/TPc3cpj4S5EU+gMMyvuIiST4QtJQ8QETWvbjjG77gLiU9dNP6PfGFpD58
                      F/a9Wo6TvgjqKL4We18+XJOnPUqZGj5+Umy+v2mOvk6nWj5EaPU9oFOIPTBPwj0Q7pa9x72avq49
                      ob4M3Is9C0ILvhuDCr7TbS++I4J/vp+3lT5o7Jq+5AKevUgCJD3WYLO9FDHtPWtVW77oWTq95AKn
                      PWTtlL2aMJq+yeyoPobnwb0xloQ+KhctPnE0nD7s/a29c41Hvhxtwb2aGWc++wRlvj5kDD4aggY+
                      TLz4PfDR+7wqSpC+duoivj6Tp77sYIs90/Ijvr0gij7Azqq8ANCtuFbkOD6jiJW+7SiFPqOqkj4k
                      zKa+BkHxvR6/ZT7shv094AwfPvSW/j19eZM+zBmgPXB1cb4os3S93hUVPuCefz3gbbi9oGhNPLBz
                      9LyD4Iy+xh8svsjcKr2IlEO+mNGcvoCeRj3gfkW94Nt7vpA17b2IeVy+8L4bvhqddT5AFkS9FtvU
                      vYBDfLzKBhA+DPyIveSfnD1IBHE9vrI4PpCeyL3A1UE95tIWPmaGpL7y920+YDEzvMjEM74MDYO+
                      EDmXvivvkD7iSmA+eB0aPaClVbw691A+fCu1vRTHkb0W4QG+CLR5PewzlL4CapG+Vp73vQA4iruC
                      1Dk+Kd2EPmpeXz7sW5y9MPvWvA7nCz6yyVw+MtN1PgFgmz4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTI5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NjcyOTI5NnEBYS5kAAAAAAAAALAYgr68ALS9uKUovsYgQr6G5Ii+gN8LO8sSj74cSoi+
                      KpuRvlJCXz4AsNm8IK4oPTmnnT6zKIS+VtVYPn1hnj7EL4w9WPVDvpCvR76fDaW+SlujvhKwOj7Q
                      IUS+ykB6PnjkHT4dBIc+VrUXPqDnwb2aAnM+3od7PkBNnb7IjEG+qHYdvr5hWj6ARDs8dG2+PeLS
                      JT7U15y+QHmBvejqHT0ASlO+hJvtPZgLFT4u7l8+gDKBvPBRJj4A98k9Sx2mvqAVGjyYD3w97OT7
                      vVj8aT0492y+UKXxPK4/KL4w8PA8Lz+NPoIpiL4m3ns+1CClPfxukL7TLk2+ZB6IvipQHz6jvCG+
                      UI/iPGT0jT0cUpm95oR4PvBPc77cx6C9g/yKPuBCV727c6M+Cv9ZPoQwm77giD28MW6IPnRFzD0K
                      6FM+lG6LPWAlGjwSplA+QOtxvjiqCb2OU2s+U76Tvq/Mlb60eYu+RqKxvaSPm75gwK49x+qMPjtP
                      f74uKzm+BuuqvSDEJT1DUhi+gGpTvtgpWT0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTM3NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjY3MjkzNzZxAWEuECcAAAAAAAAhNqc9ADWXvZBYLb2dBzK9sLEIvLHTwT3h5Lk9uC+r
                      vT78kb16Kym920u6PQIgFz3QyAU8gJB8PML/or1s/aK8TAf4PLjQi73GC6i9Sp8NvYSR5Tyr8b29
                      wuQqPQrDcj1gLHY724qRPYv5yD0Wq109wr8lPek7uT0Aqim99aiMPSc6kj0d2KQ9QugLPZTo9TxC
                      7Cg9ACCKuNsukD3w3G28QMYjO/g6wjxMwIa8IJw7vZgZvbyyLVE9rrIMPSq5MD0wrJS7VnUnPeHg
                      sT3MrZY8+PK0PDpWsb0vgrI9gLEhOr65DT2vScS9gVa4PehuwL0YhCq8VKvFvBQ8gbxo29+8ego/
                      PaiWA7x9f4y9YO5EO4kcoT2MAwW9vUy+PZVMsD0vML29S7mhvdpcOD29cJ29WjwpvQ+xrb2Lx8U9
                      QLqfvEc3K73eNlc9+Mq2POYOkb3xdJA9LgFYPfokND34V5S94+DAPUdiY73APoa8svpPPdCYdry/
                      45o9UObmu6dExz3QLww81QTIPTCEeLwgSYy8QPHFugpdCL31qLs9DEMCvcp/Gz2we2S99316vYRs
                      2Txmpyc9YhMFPdHPvj21csy9oN7fO1K5Pz2HACe9IMeTvFSakLyKrsa91Fm1vBTTyLxVN8w9wIyC
                      urEysT2wGi28GLpyPCj3cjwDMp29Z5yZPQkoqz0AWJI89LeqPAqXYz2yjgA9QNszPFQo/ryoUBc8
                      zE/gvKxKkTxZCqo9vkZBPWCTnb06uGu9AMUiuwDgyjgAeze7nbFPvQgj+7yANlU6UFFvvIZqTD2l
                      oIe9slFwPUDVkTz69BQ9YB8Xvaw637xdrJg9I7xxvV2gpL2YLVe84xCjPdXSs70A2rU8K5WrvYA8
                      qb2wLL47TE2cPCKwAD0Ayim98phiPV2VH71q9VU9Y9C2PUPscL0AtSq7eMamvADdw7wFGrs9aGDO
                      vIe5oj3oZJm8f3WGPcbbbT09nYE9xpWVvV01Tr0A+EO6Fv0APSpjUz3YALW8umh1vcImbD0AnIa8
                      HI/vPMZDUj0qG3W9kMpovUoFND2Qk3u94jEDPeeftr2MQty87bBlvbKXLj1FoZ89AJvUu1p0rL3m
                      cpa92vl6PXpFab2pjLM9SviKvQCe2TsNe7i94B/5u5d7RL36SGe98xk+vQPLij3AAZC9POnhPOpz
                      Cb24PsU80m12PdSuwbzTsmW9FpiJvZAAPDzQKCk8mJ1KPGDPUzuSxhU9MBs2vIVdm72gABm90NMx
                      vIAbG72iOay94RKrPUODxz2wygs8pi4VvQ1hsz0gDYY8c25+vRqwm71N4mG9DrF3PQATmbt6PQ+9
                      6N3HvRk6iT2pC5w90tVePSB1Tb0Ydoi8DWS3PbfMuj0nvGu9YeGkPZAfN7w8NIi9sPB2PADVcr1q
                      57O9UEy8u/kTpD15I4A9bLQKvbf1vT3T7449+duuPfR7F71PcIY92OAUPDNMrr1RBp89Ll4iPaRA
                      /TwoKKU8vW2ivU6yq70D6h29wZ6BPUC4Ezu2E1A9tFrqvHjin7wKTky9WD1GPAgywL3DM2W9mziK
                      PcADFr1jR5Y9PDwQveAwtjsQMEK9Z+EzvT1qf73C5HU9HVyuPcdDUb2O5jk9ZcuwPVjRCrwYFW68
                      HQKcvefvhj27t5O9oBS0vWhInjzJZbE9LRevvVonoL2Zj6k9OLy7vK2puT0ighg9gspMPZ1Dnj10
                      X668MoAiPVR8yzx1iIc9wAiMugD5cLqwrZm7N6x5vSqwor3ohTK8gAZMPPdvZ72yv3M9zLz3PAKi
                      Zj2VpKi9QKrmvEqwgr3aebe9kOmZveJbjL1I3Y88QL8WvAgUwr2ZAo09kM54PIDAe7w4Uvm8AD4p
                      vQYVkb1Segg9j3SpPQkCjD2D9za9C8KXvRIlcT3ioTs9TVTKvZ0dLr2mbTY9impVvU2KI704dMs8
                      gp2AvdjNWjwGUH09XemwPdSc7rxpG6Q9VEOePAqXkL3KcSC9bO+IvR2+c71iRlo9yw2SPRhbkb1W
                      Xg09IpRLPWwQ27xP8ag9qRSsPQtJwT0A1bg5MgNUPXO6d73tpFS9TB4GveYhh71YpHU8AHrovMCa
                      gbzokIM80gdVPYw7ory+gAU9feIivTD6mzvCvmY9+BmqPKm2wz2X7xy9G4fDvamGgD1PHI49v+2M
                      PX6KZj2UbPc8rshSPR75RD0ZVq49shGlvYujjT1AGhu7ABM2PCazKT2LQMa9EuInPVQDhb0juHe9
                      gPtLvFc1fL3AlEm8UCqmu8Bwbb2J3KU9otSnvZQIkDyyBxY9kaLGPSamDj3cwhi9+/6UPcxaxTx9
                      OMW9QvlqPVEvsT2txXq9mOCcvJIfub1hOIk9ABq6uyvTkj32o3E9U6GcPWgWLzyv/bw9cCkgvavN
                      or1xAcM92KScvYCS7DsKgxW9YtMxPZ3GuD3ZGYI9/C71PKY3FL2Aodq8ICnXO3BNFrx7Uce9moY4
                      vcjN+bxfLLK9tDrEPMA2SjtYrp88Wu81vc1tJ70AF4s8zNSOvBjBqjzodba9QF5IvRcnNb3o/+S8
                      TltxPd/6nD1H0Ea9qf6iPe0jmL2eGXs9aN31vEDcUrudnDW9FMXGPCFljj0gPDG9hFzvPGBXgL3W
                      M5O9+rJpPfDhajzwLw29vlkPPVCRAjwAdwk7ufm2PYBeYL3MbrU86PbFvLb6BD09XlO9aZqjPdrh
                      fj1+0J29cJ0hvEoUWr26tRU9+yqjPbalbj3DBJu9XaBfvY5uaD2YUpG9nV65vYCXgLwgqfM76EQq
                      vCKtyL2KP6+9h/MfvVVRrL22+ys9Bd3IPe76j73XHRq9jRuMvYAJ2Dt5H709xyOfPVh7WLzZ06I9
                      KVmDPezP7TwoNUG8WICcvb3tRb0GPm095HUSvfJ7dD2Kk1Q9GCnPvE1Vkz2iKJi9UH9BvJu9oT1o
                      WYO9MEpaPJT5lryU6O08gOGlvfM7P70m3DM9Ok0PPYCmN7xyW6W96LLDPFiLqL3ojsC9v2fGvdbi
                      Bj0NDaM9eL7fvK0HIL16unO9nCABvTSlhrxi81M9ALVAOg1uwD0givI7WtSIvac1fr0oCK28iBSz
                      vJncjT2YjZu9FeqaPWIyyb3V8rG99e/GvSiTwr3KjT29seqKPa3FSL0ATMY6wEKhPEDMo7xzRT69
                      MyTJPd0Uwb2ATpY6EbWnPZkPvD2gM567gDi4u7Y0Xj1HsoY9rlsMPbBPajw6gRq9gGODuoCEpLqS
                      tBY9VCbFPAHbsj09QIm9AJxTvejPxTygtx69rSOTPZjBYDyDTJw9kLE/vW0WoL2CJG49IhCHvfQG
                      nbxtPjq9LT6+vWK+qL3PhY09CF3HPDjv0byYNgO8tBnTPLJxFj1ybbS93WLKPX0LL72NT1a9lRiA
                      PehyTzx3oR29xPLfPNh2CTxxUcg910lNvbCuMr3TvWK9C6a1PQCclrwttYg969q6PZLKEj0Qpyy9
                      2XqzPZk9xj0b7sO9wPUpvUddV70sZMu8Zc6vvZRs3zyAByS9QFVovScKYb288Aa9TueevYdLhT1l
                      kpk9DS1uvfmfvz2Ia6A8TMShPOWOsz165QY954BrvRBQQrwrt749EmmuvdtRl70sk/I8hlcdPYCD
                      trtQHlC9E9A0vRCnajyAaRa9bObjPO7Ilr1zHB69WjSIvXTmmjzGbn49GiEbPTgWrTwq77a9QP22
                      OvTSmTwgK5Y7mqnDvSW0k72q/X29PQ2ePQqAU71l+JG9VzyIPRonTT0nUV+9sBFsvJRAyTwKj5e9
                      5yTLPTf0e72SF089AYO1PRklsT3YAY48IARDvY2erj1DLse9HTXHvXEagz2j5cG91KSQPKUDrb25
                      ia09M8yePXTRhbw9aLI9VYqkvQDUa7oD0jG9m9PCvZuVgT3kDO08wFieuhpVEb3akD89MO3muzcU
                      qT2CK8K9cxhEvYKwpr22d2U9YFfbvK91pD1xY7c9NQKdPffGY70x2oU9HFHYPH2OMr18oQK9EATD
                      vYyJiTz4dKa9gH6TvbGcpT2yTD09MhEBPbPFwD0jOcu9NEDIPLDK3LvsuaY8Yfa+PTDeUr2AErG9
                      iJfzvDBZpTuoDKm98PEbvELgOz3iP2w9lWG9PYh8jTywn3y8hD3RPPRDuLxALhy7ooJRPZH6hj3V
                      DsA94kMvPW2siT1qsg09EbPEPTdzjD0ot4M8bRqnPSD6xb0n8GG9R+67vcBhdTsTVq29CTPKPSMB
                      a70WPqG91KDuvHNCxD1x6IQ9AF1XOzL8cT0Gsqu96TmEPWAhpjxHCCi9RtAKvRi+ODzPy8M9OM+c
                      PPeEf719MiK98GMKPLKYGT3hfoE9mXePPfQkhr1kge48o/itPYgLq7xJmI490AMVvM6Eqb3a63S9
                      eN34vA9Vpz2YKbU8usWdvaw5pLyi8H09dKqCvJf7xT1jih291+e6vfKWdT3QQBe9x3SxvXCYLL1v
                      lq29yjtvPWx5mbyL+ZO9lXuSvaaWSj02els9BkosPRcsvj2GNSc9NM+HvEBDCLvglLc7h7SxvaiR
                      nLwH4ma91GsFvdOBSr0Qi8W9sGv7O7iMszyUxIg8MU2dPTmtuj3nXZ49YFpvvYwJ/7yd9qU9gRmF
                      PSpsST2bSqy9mJPKvOv4wL0wT/M7lvODvTGIuj3gPKK7M0iDPU4RPz1zr3S9O2aSvdq5cL241vm8
                      qDsWvLChZrzUg4Q8WC5NPJ24yD3ExBe9qIe6PBMyjT0wNXW9kPs8PN/Eiz1Rd8U9KoQrvWGOqj0b
                      KYk9ddDIPSbshr3TdVy9Gr50PWBmBL0olzI8SdCzPVdshz0ioQs9fbNQvSw6Fr2grg07hv+Lvbom
                      v73YTKE8bcaaPezejzxgtKW8QrkuPVOpvz0WtGQ9Zh5OPRiiILxLOJ895aqcva8Giz2Cdi49gPDB
                      vEm4iT3t5ay9UJegO5ZPTD0jn1e9eP6MvbiTjjwsk8Q83w6SPUCtJDzVers95eyFPXAGRLxwh2y9
                      9NOaPNYyqL1CHV89iDvAvSphWT1Og5u9iihivWvBhj3nILO92Lk9vOTdBr0DX7y94rG5vSYzBD1X
                      8bo9NSaUvRdISb3QCPu7R4SCPfVaxr1XV589cJ/DvdSw9bxQKwk8EiJVPX+wyT2tF7Q9oGizu80d
                      H73kpAi98MZRPMDqp7pifq29g61avbAS9rvoIAy80D5JPL43Wz3hb6I9V8WVPex39DxUWou9AN7X
                      uUqOJ71YsMi9bmhIPfBxTLzSHgs9GWyZParAyb2wIpe7YAaYvVhXqL0wCi295zKRPYconj1g+2K9
                      1pYEPX2cUL0JdZ09GjEnvewz/Dwm7Dg9FsJ5PXBiQLwt8CG9eTqDPRRhhDwSlzM9zEyGvLlzhT1N
                      p7e9LQJYvX8PxD3sBRC94HmIvBgqfjz41rC8cnl+PRJwJD0nOr09wEuuvcAwmrpKmYG9Lsx+PWg+
                      OLxLe7C9/G4XvSkQxz0nbbg99FWxPLVsnT0spK882mkdvSBPDr3CNMG9Y+GAPQjm87yC2Bw9HHTp
                      PBW6hr0ze8Y9kkhsPZjsjr1ANKa8kKo1vcrFIT1qvp69f9zDvZEWgz1X9lS9ZvFJPSrFBT2ydD09
                      4KLPu0Dl9rzn0bk9ATO4PWyC3LzSyrq9sNM9vGA50zv317+9VJYDvUJzqL0j2WO9RoilvVSY5LwS
                      X3091AaePF/lxD1BEbM9FAqmvJB8Gb1B7p89ABxpvMsqpD2w+Oo7FEaAPN92wD0VUac9rKrtvBD0
                      cL0UYf68PZ+TPa3CjL34jKY8DhSSvccmRr0DgK+9ADR/Oe5kET1G0IW9doKqvaDEB71o7Rm8PnaF
                      vZvXlj3NRKc9aW2IPZC7Frz1LoE9tz29Pe0mqT2xd7M94t4mPSGPuT1dZMi9wNxcO+AopjsUqfq8
                      87LKPTR/ljyDAMc9yMKPvBChezzgKei80x2TPeOJrb0YVeC815VsvQJQHj2+ryc9wNw9uwBU1ruD
                      5MK9AFrmuT09ub0Arbk8tVSIvRASxb2HEZA9ICK0vABsO72w3RS8uioavW0djz2lT8w9KOvzvGso
                      lz2AjVe9IDPBveB8Lb0W86e94BuTvFWzwz1aciO9QKenPAqXUb161lw9gO7zOiGAlD16u2A9QDNV
                      PDqxEr3pHZk9AN87vNDcN7w4toG8iiAwvah/KDxgKTQ71NnOvAApYTwA6AS9AGHLvR3Zd70wr5u7
                      YH3mOzgehjxHg1q9oI2OOzfqtr2sY+G8gQKCPcBKXLvw/FU8jViXvRp3oL2JXqE9MB8kvdp/Pb1o
                      Ji+8ANqBvKBNIb0+c6a9eTCuPfgisr0DMnC91B6mvJsKyT3s8JC8dyW7vQpwc72N1o+97wqyPUUM
                      ur0cXge9mwOSvWq0X72GUg09AH6Au313lT3twpg9YwK0PTBdTTyML7I8x0aJPS2XoT3ufwc9DZeB
                      vXCrK709ASa9YBJnvdjmvb0I6oe8yTSUPd4uZj0+UHI90Nh2vNBuPrxysXU9k3ZzvfN8G73vDr49
                      Fkesveo+Hj1OPWM9IqRtPYCf8bpav069q6iXPYEjxz02lXE9WGR7vDvexz0U5om86HwIvLA8yr3X
                      Foc9DhBgPatEkj1uqFY9Js1NPYBeFr2Qdh88gIW/u1Dk2rs2Bik9oIb2O1Caqbu3csm9OCKzPJ2/
                      yL0LRrY9oD71vACPm7szOZU91qZmPeLvdz0tU5e9Al49PZCBfbwKpq69BTmHPehomTyY+6O9xarK
                      vdOMar1SEz89QORBvWLPTz1ez3I9oGjfu3SMgrzzfqS96NqzvPW6k73xabI9MFiHvQDX2bustrA8
                      4/izPcBaVbtIvpK8nbE+vRpWJL0gmK28IJi1uxaiFT2UKtG86rJuPXpjVj0AcoO9eDupPCLKcz1+
                      4oa9qplVPc++tr1Q4iy8Ql4ZPaH5xz2cIQO9ft43PQCWgzpQbv87VIbpPJkqpz1SNB09ctNePbO5
                      uz26r0s974mnPfU2jz3l/KM96BWivQiog7xvx8s9kI5OPEq/a72d8Ea94kkgPRCHMLwWByU98duZ
                      Pep4or3LjIU95mEdPYn3tz3XriS9I96SvdSQxzxMA4E8KMZGPKAJQLsmRgA96VSxPb6sPj27E7u9
                      LmllPUgZ17xSfA49ZTWYvfKvxL3idQ49YJQBO9AXk72lg7k9DKCDvalsnT0KM2C97dfLPTEDjz2l
                      g5E9Tyy+vVjGkL2odT2861/GPQtApT2K1j696zi1PS4RWz1AKXa7M5BhvapvzL05zZI9k7Kmvb9d
                      tT2Yi3K87DecPFqrX73QqB88vS1IvVBUgrvxmqM9wL9uvGNiOb0n6JY9uxCqPUN7vD1gorw7Y+qR
                      PciKgDyzjYQ9MmJxPeiwMzwZVo89qxm7vUChhjoi6g09FfWsPZ1tQb0oj1Y8qBKEvMxDuTxgPFs7
                      6FyYPOrfPr0AzTy8P7iuPXD6UrzUtIa98Ne4vfu0pT3WzxM9iF+TPDOpnj3I6/O8tmUlPfN+nD1T
                      pqy9oMWou47eo72AQ/66PggtPecskz2AZK29QqBFPVJxdT2h3bM9tg0iPU1Ugr1g5JO7GqtsvfDN
                      TbxZ7Ms9mICZvRT3mjyJGbQ9fWGJvam5ij2zCXm9MKnruxszxr36/Du9BrWjvcwFBL24weK8bjWL
                      vZpyGT3gLPK7eBv7vJ+soT2FkMm9YH2qvdD4ILxoqXe8pCuHvf3cO71Qqqu7cC0KvKXfuD263lw9
                      aESUvUUjq72gnAq9k2q2vRxZDL2lGZg9WJp8PI4ABD0UV9W8eLi7PNQk+DxQ+kM8RlACPX1CgD17
                      Frm9MvxUPS7bHD3xJLY9INsfvT1MUb2T35+9bNqAvfNoSL2ENOc84L/JvSmgvz2sw+m8ADoluXAA
                      a70AElC8kMwfvDRn2bypF509AFYhvaIWeD0YXVm8Kl0cva0Onr0P7Li9OtanvYpRZT3UZ+E8AIup
                      vaMlcb2X70u9Uf6LPW0tNr1AYV88cw8rvRDYwL2jIJ293lWKvUFeyz2BfLU9rIHGvIDY67x6YAu9
                      ABhqOCI5QD0kGf882L8kvKvEyT0a8Yq9EAZMPApgur0xKIk9iU2oPf2dwj0iRx89UGUWPIpmk70w
                      3Au8KgJ7Paggpr3lC5w9AFBavKKcyr0Cgm49YpV3PfjlubwFxb09BvlJPaCWkLxDubS9IGaVOzCX
                      ir03tnK96hJ/vfWDuz3ZUqE9mgeOvaD747xBiYM9rey9PSKgoL34yqa9yxu/PeURmr0S4j09zpZZ
                      PUrAY72FA5q97m0SPfjkiTxJQas9fOnVPFiMDLwq+VO9CvcmPUDOhTwARXa9EBBLvDTxkbx2ZkA9
                      vi83PYX/lr2mhk097viYvcr7rL01JL49HcNgvZ2cJb2IoLE8f6/JPZ2Lk71ka9c8Q6+SPYmnuj2Y
                      rgS8jOSivFjA9LzIN4u9GP4fvM0Trr22Q4S9qrGYvQKPHD2Gajw9GXfEPQB9xbmA5Ws6ZEHzPABq
                      +zpNDKa9FO6TPLetnT1ybXw9FO2DvFh4rL3t3Ly9AKQyPGNxnr2+uYy9cDoXPEDRsDw4H508YLOs
                      PC3vvj1OLkQ9KDKlvOgxCTy9H2e9FLm2PLDhNb2jozm9cjDKvUrSFT1YLUo8SH62vKRRAb01CL09
                      IDuRvXGulT0+c6W9Y1F0vX2NTr1Ar+46l+OBPaVBrD20na28EEI0vABZuTyjeE69p/huvUCqA71T
                      s669Jq8EPQBftrwTY7A9EGYBvE3Kkj3girk7ES2NPQAKNrxjtBm9j+W6vUsJjT0kafo8WlzEvWYg
                      qr0ZFoA9BXqoPTDHgDvg6Ja8jpsKPcij0rzr05E9Hiqkvb0Fgr0XQbI94w3BPcAUvbzEugq9io6r
                      vQCTq70YG8Y87sNgPZSAmzx1/Z+94JruvKdhTb1AZCE8oSePPURk+zw3jWG9X4KHPaDQ8ztxHJA9
                      osZHPbVeur0Ahfe5OH6VvbrUEr3xTYc9mfTGPbietL1Meca8tAizPOCnmbti0qy94ohCPSRRib13
                      aT29sEGZu9rHUb1TxU+9iqi9vRr1ZT2wa8Y7OueDvZDEfb0gHyS9fdSdvR6DCT1N+Iy9PVCmPcBj
                      EjtW4S89zeZivcRC3TyHJ3i9b2y4vQi0pTxW0Q09GJMzvP43mb3UL9K8msM6vWZIqL3URbW8wFxO
                      PDizojyw9by7pkkXve6lob0ExRa9aAR1vLcmRb36TAC9Yk6ZvZigrr3AjV280pMLPcCpdTsZjY49
                      9FXXvFBoMr3o3pW8EviLvYEqsj3ry569zCLPvAJ9Vz0AxBY8jA2jvNQt6Lxy41Y90nMlPfL7fD2Y
                      eUe8rAbuvNlMmz0NdVu9PY2Nvbszwr00UPC88VTMPZLmnb0aOJu9QEZwOzMIzD3qWwg9CkNMPclT
                      uz0YTLW8nj1NPSwrijyeJnY9wKlnO4PZsz37XcS9YkgAPVNDf73QslK9af6bPVa5Bj2Z3oQ9WCi6
                      PJhkp73gVzW9clwQPVDFE72Kh8e9TbNsvQBOoL0fO7m9u86MPV/Ziz3twq+9QDxLO6Rn4Tx/+pM9
                      AvQGPZLbMj2e/1I9AHBgOpdDnT29Y3y9Oga7vWAPFrtoH2I8CtMPPRt7mb1XTLm9eeLKPVBGrLsQ
                      TBq9ZpQTvaDZ67xnhsC9xSSbvS6xo71iAAA9swJvvU29c70zd0G9QmkIPUCto7yAvW+6UrCrvR9z
                      hj0JEI09IowgPdtHmz1apHA94YGVPX3OH70R/rs9V+qZPWXfuj090rM9HpNsPWNfNL0wLti7CmtF
                      PZCDu71zQyG96gBBvZewzD1Pypo9idrHPa6DCz21ScE9gU/DPZ/Fxz2eRD898m65vaAFrL3YO/O8
                      s7ZevYy7oLwckxO9skdFPRCZGjxwMg48IkxzPfWQjr0TWJu9mPLOvGIwLz1Bu6090D0cPLoHr70A
                      RNi68TemPVj3mb2AhZe9GPgyvFR1Er3gurE7oDdgO6qJs72O4UA9qD45PFi5gjyj+Wu9EKiSvT0A
                      Lb1u04e9FED6vKDS5rw9dIO90NDgOwr8XL3yQcq9k2KEPQC5Tr0YGuC8GHmrPGg2aTxAhE48FjeT
                      vQg8jzxqEZu9ghMQPZalWT3TGoc9G3CIPdhL/byoECS8QLTZvFm0yD3Ir968EmcCPdKVgr3IRZS8
                      ciVnPbQ6nzzgT947vgxAPesUmb1A2UG8ehKOva6+Pz3BYYk9+xbHvVgdqLyxw4s9gkFHPSLXPT3Q
                      fLS7zsiTvUpRA72A+MW7bOAGvbmVkD2g9Ia8cnVEPUIkdT3+Kqq9gIpouojIrryAjjO6Ymiaveqb
                      Kj1KaSY9KHMXPDZhQT0CGxI9stgaPb9JnD1gxKa7N4CJPaPCQ705BrU9bDzpPIZHUz0dLKo9MQaJ
                      PQJGmb2k7948eI+APPVpqr0muQE9yCPJPMAfRL1itV0960yMPecnrj0U6JE8mcK8PQZFHj1xsJY9
                      nw2vPQBolr2AlkQ6chQzPZQM+Tyo+5C9mafCPfTzx7x3Dr49LtIQPVDpfr34E8M8dHrKvGZ3JD3A
                      fK29oF3+vG7RET21I4a95L7xPPd1Kb1kVdc8nq1ePcBZUzwesjU9SkMbvez3s7w6PAE95FbnPMDO
                      uLpKTx+9AypLvafhvT1ARqu8kJZZvGjsh71U3bU8JoiNvbfskz2bdZe9OutFPbPAXL2gkE+9KPsU
                      vIBS3DoJ8Jw9QAdEvLb9Fr2eYEM9kBo/vPoyJj1TRSS90ZWsPYtEob0AIPK41aLCPTacUD0yl3o9
                      /i4iPVrTQT2wjYc7cAaevQOVIL3A6568GEwMPMg5/7wgZMC8cJEivTBK/TsOvxc9YuJkPb0RqD3t
                      S5A9tlF4PRiduL1augA9i56WPcUuqT0wtHC8f3yRPXq3BD2SX5W9Qv0YPcn3sj2+2Dc9V+dvvWT+
                      2jzKQ5S9xMkXvWtemD0nEpk9gMUqPLU0yb2S/js9QKRevOsEkT37QcY9wNjBuuCbhTzpz7U9Kmuj
                      vTDgwbs7Ja49krNPPWN6sL02uhe9gm0oPbzm3Dy07488w5cpveKOJD0e6mM9voiYvRrxr71ANEW9
                      A/+nvUrtGT3QB7a9Vmo+PROIRb0OODM91RfMPazNybwYWoM8KMjEvVDdFL20/pW8Z+rCvXWGiz1Q
                      W0682N0LvFqWEL2yQjU9CY6SPQCkfLzSDpO9tZyNvap6Zz2AHmU8N7Vpvc9poD3YojU8spMlPfhh
                      szwmvzQ9F2+3vZQDyjzQNbI7446APVfNVb1bU4Q94t8uPag6rr3ABBQ7vPPoPDB4fDwA4Xk6lJOU
                      vDiXu7xTdKU9QiCBvcDM/bojYsW9ICmKuzs8u71owoS8wpQ3PUayRz1Ea9I8uRjIPZaaND2qoQ89
                      jKaTvAdHgD30fqk8vV1zvfOzzD2wod27OceuPVDKybuwuB+8Ze24vRAkObwLpcK9cGihvdizk7zZ
                      iq49JSuWvakykj0qsIa9JwwovTm7nj29k6Y9OdWtPdKZt72DUau9AzeDPapEHD19TEi9RRSCPTB8
                      1rvVq4O9ABdgO70NQb0Zqqo9DFbRvIBHKr2g8sK8mERLPDBBL72AMWW8wFurPAB4TzwSvTU9gG1j
                      vSWrgD2qHH69GChAPKP8br2UCf88sx2zPYiegbwaBk69XWfAvaw3+zysF4s84CSYvVAScDwjlLe9
                      l30jvYjduLy4h8q9FaGMveAbcL08NPs8ME+5vS0Xir2079m8AJtevQA6iDqNBZ69kvaEvcC1ADzA
                      Uks8IGmavUPCkr3tQ449oCiKvXTOirx1rsI9TOeNPMiIujw3iyS9CAGrPIJ+ez3Q+JS9YG+4u6De
                      cL14Zq29M+EZvWIvSz2AEJe8Up0mPYlmyT3q5lK9bhYoPdIpk72yOX49h3hKvTJGgr3wyzo8EhtT
                      Pc1OnT3ozwA8b0SuPRXQur30DfO8TFS2vIDL5zsgk7274i3BvQ51OD0/Fpk91gEFPU1ctL0ml6y9
                      0DEwvH7eLz1sRdo86KixvbHAkj0FeJA9wQKbPVBX/jsQGS+88sDBvUw0wjxbOLo9sJwVvSFRsz1y
                      Zp69CsJ+vUAq+rwgO7s7b2eNPfe/cL0wnPS7Tfk8vSrIw73swbk8aoAmvcsTmj3e2V89FLjfvJgO
                      OLwNwIA9WhOJvbbzLj2YJDS8APhKOpGSsj1XV3G9PPzNPMDxcDtqQ3696PGzvQwx+rzAwCk8cOa/
                      vUBOJLzuM5O9ANb7uv1Xxj2VmKC9UP2Kve7rAz2mzG09oKHUvOI8OT2Aib+7FJ/sPK7do724CJA8
                      UuJuPfCXNTzaZTs9ZyBrvQr3aL3ANEK7EDxIPGmYrD3m+nU9MRy9PcJvQj2zh8u9wH70OkDNW7vM
                      oY286NMhPAabDb31Haq9AI2RPGwMnjxFpI696OslvGqJer0QdlS9wL0+vG04YL0HkpM9ZloOPXZ+
                      A729wp29ksaZvT8BiD06Zcm99osJPeBdorzGcqK9KqkkPTJ6Uz2vVL+96AK0PCIaPj15d749YTG+
                      PSAMUL2gRxe7AOprvUP4H70zPGS9kKVyPGp7W70qsGg9L8y2Pe2zVb33F7s923ervQBghbdLV5y9
                      jN/ZvAEltj17lcE9JI/nPEdvN73+5Ac9YO7Fu1BWyLtsapQ8vUQ2vTpftb3o5ny8k647vYpnmL3V
                      OIM9PKzwPBcPiT3iDpS98D1UvVDVzDv48Ne8c3ZtvUTr2zztsGO9JRuWPfsbkz2HfLu9YNnxu/hV
                      wjwtScw9UsJjPd1fg71OMxM9tlqSvSm3xD2Kk5e9p31YvTKlIj1sX4+8DDuVPOU3oj1ibUQ9dBvf
                      PFT5D73YLYW9QBscvHFgyD0z0B+9sFwSvM0LuL25Q4s9OjQ1vRtBrz3Km4C94N7tvBuJoz3g9Z88
                      GohQPXPlbL2xDps9QO2HOrMPQL0pkZM9ANELus/XxT1MsQa92PKpvKsGnr1o/YQ89/a2vXXTuL2g
                      DRe9FvMEPegugTwAaPQ6rCWQvHmnrD3QMQY8IqNcPbPtML34wJU8LYsyvdgZQDxg0JO8yDKMvONJ
                      Vr3gwt27MDsCvFO3K73/98C9oSqQPeUss7308YO9MI9/vZfuw73zgXW9ugGvvaetsT2aGEg9WI1K
                      PCYRAL2VdpE9AAf9vJp9G725NMk9uUuJPdBRx7u9ty69CGWoPLB64bvLmLM9kO4LvTqjIr28QeE8
                      xlNGPddFur03xDy9/IHnPLQq+TxWty09TM2Hvfd6gD0KX5C9AJ6fPFfGyz2jQ7Y9UEaqO0DRiL19
                      N8I9CnR0vT8EkT1wfgi9lv8TPaGXkz30rce8mpk+PXR9zTylHLu949W1vaxRwbyibrG9Pi57PQMl
                      kT22nZK9Z3uAPZmPtT1NOK09A3uVvbmunj2ioTs9F6wjvZgpXrxWXxi9ABoEOyWIjr1YbUI8mlUz
                      vWCvzrusbqQ8DEPjvAAkbLsAIOE4Cj3HvddTa73TYka9YPFGveMGYr00doe8pReQvaC1p7zuhYa9
                      ksm+vZlUxT2wkc071ZGhPQDw0ToxIro9EtQ1PRnbjj3/z8U991upPZA0Br2A8ai7dHq1vDGtyz1W
                      mnk9oipXPf+esr2Sbic9SlZtvV5hCT27KoE95bSMPUWcxr2C4mY9q6SfPd7meT3mtA+97AWDvPbC
                      LD2mZRC9UCtcvLAMdrysnMg8VEQXvcqepb1Y9u+8LVeSPfoZaT0+HSQ9z73GPQ1Mv73cehK91tsF
                      vaCftLzRN8A9eEXzvBN2p71o0Wg8VJjvPLNvtz26Wxo9rVS7vaKQKz1Pv8Y9Uk1vPW4mdj0qRZy9
                      oP/Iu+tkxL3l/po9ug4jPRi9oL34Ecm91b/JvWwV9bwH8bm9wNlHvEwI+Lz4Beq800RMvenznT3Z
                      hI09KcygPVUTpL0AXCm9TD/4PPB0Nr29gbI9qkZ5PQAXv7tcGd48mcqlPaBbk7uywMy9YG/Ou3p4
                      Bj00PvY8Z75dvXUWrb0TNmi97ZbMvdOsgT12uVE9b/W4PeIncj0Kbhk9IwbBPbKDWz1ovlq8b+TB
                      vaLSSj0XV4s9MmVRPYr5dT1zYk+9QMA0vX3Gsz2AJ/m6ALjiOXZADr2jW7Y9cP9nvCjuR7yAzoi8
                      cFapvfpDb73jC0a9JN/gPB5alL3orcM85O/YPMljjj3IrL28+eqdPc0zdL2lKpW9hwEtvR+6sD0A
                      i2u6iCSHvKnGkj3gUcI7unCyvWD6wjspCIA9wEgUvYBtX7qJhqE9lgYWPRgOeTzaYyQ9iqNMvWo/
                      YT1AcfA6ghYHPaJVjL2gt6+7U6qsPbYup71UHak8B+vLvbfZtz2SQiY9mX64PYKspb0AK346sm6G
                      vSKlrb1K3269w9+avay57TyzPpA9EDZ9vM6iDj3EevE8AqtpPRjKwLyIzo+9iEqWvJRjhDyTTcE9
                      rAmrvHIzXD2mtUU9AIDMPDBUaLxRb6c9EG8JPEZkaT0TK7290kdAPTbBTj3xRrE9KKlwPNC2sDtZ
                      DMA9Mp4PPZ31oj2gKEO9yslBvdJNWz0Z8cQ9wg10PQ6VGT3O7nU9hoMYPQC6ojzvKoU9KOBEPEN3
                      q70Ga2s93jktPWDxWL1Ebf08VvCgvc1Imj2jcJy93FfRPAa2l71nSsI9sgJqPbUzkD0whtq74Jux
                      PBMyhj0rSsu9DMu/vFpGFL3V3cW9KWC3PeE8zD1U+9c8HZmIPb3KqT00wOQ8WrsNPSJkaT1DtLG9
                      EuhsPcPtRb3UBfU8gKorvArwPT1jpC69Cg6qvaaCVj0A0+q8fybEPYD5E7yD/Ls9MgNMPTRa+rw0
                      Pc88Fi1GPQk+oT0Ff689lwSSPccZyL1wBwa904KDPXdNuz1JuZw9gLr/O8lcqT1dRxq9DE2EvXoL
                      Kz3AXYe8cGBNPNRZA70fXcA9qwmRPRi1f7zQNZM79MH1PGB+8Tuw3Wq9GF2MvR0yhb2c+Og81z0d
                      vZhF07yo7hO8EoIqPWNQMb2od5y8wCYYu/rfyL0D01691TeUvYZtAr2+LgI9rfpXvW2ov70UMwe9
                      B3o5vQKlSD3D3XW9deyjPYDASb1BRrk99MXHPAwjBb2gw8Y8jPqYPBA6fzwg2Wa9DLWaPGDSDL1Q
                      sM07oByMO/nbrj1NBoA9iqUMPWnVqj1gM2S7EO0nveg1xrzobKi8VVnAvceTsr37DJe9lgR4PeAJ
                      +7zrr8m9Kh99vW1BnL2jx1e9IlJgPZ41hb3tKn29gGqXvWjbYrxoOA88Zxi5vZ2qgb32hIy9ZoAd
                      Pdlbwj2nmB69ImWGvWvWyT0cM9o8nQ9KvVe6WL3FzIA9NOOoPLRoEL13LSm9kd3HPQg7yjx3sDi9
                      bFoVvShlTzyjKKQ9clAHPVfyyz1gr669v6alPahnETycmwK9rfC5PdCD+rvkNQC94a25Pc8krT2g
                      sru7wF1+vV6Wbz0YBUg8SpQlvV3OKL3POJU9AB+XvALGmL1/RZk9YOz7O5RC87widko9o4pZvdB5
                      JDzA+QY7mrJlPQ9xkT2YzjY8kaK1PZeujD0YAr29X3SKPUBhsrwZFKQ9D0ySPUWZtz2XKpY9sHYk
                      vAAJwDwFzZq9Ko4zvehcfLxSAnA9yNvwvDcCrj2gPAm9uSmnPWc7xT2woxK9GdCtPcTAC73KGiK9
                      weOuPZoJNb3YCzc8Qzc5veyR+7wiiyY9TPTEvKJpLD3SaGY9ifLAPfC1SDyw+Uy8wBELvTMPmL3g
                      N+G8sGWuu/AvA72txHm9AFH9O9DTh7vanBy9R+tuvVX7yj2oTrQ8mcGUPekMtT1swNG83F3yPGvq
                      vz0XKMa9SsXGveejML3b8r09na6GPS6JEz3YyIS9+Fb+vNqaXj0N+FO9e9jKPb1yPL2UGo48J1uI
                      Pa06Qb1vYZQ9oIY2u8omnr2wD5s7gIcgvCRt+zyMUuI8aI/SvEjS1ryYc7C9AJFEPNubqr1iJmQ9
                      gBukvXl+wD1TcY29QIvSul68Hj0LAqi9lHSDPIJxYD32qqW9oAxbO1IKOz3Qp9y7sNUVvHS/i7yo
                      iXi8dnVePdW2sL1FlrI9YOmlPI+Mgj1IfbW9MwkqvfXqqb1IrMu8nSZQvZ6KTT03UMe9qsy4vanS
                      sj2gHUO9AAurvOhzCDxgysi9wPCSvGgOgL0wolc8A6mbvUw9vrxgOvE7W7e7PXl0qT3mrTU96Mmz
                      PG4gqL2Uptm8tscOPXRegjxOpkA9KjebvbN5pr3AGyC99K/zPBFKgz2xDck9YM18vXR8lLzedRc9
                      zuSnvddLyj3JMrQ9ILeVu5rTbT0hQsg9gK1dOvHywz3Y3pW9UB3fO3n4sz0G3gu9UB7KO990nT2O
                      nlU9g/SlPXpNWj16tRM9qHYRPFdFkD19yTi9B3uyPehHjzzgxuO7YE40vVAC4bsAwZa8bW24PeIG
                      AT0yc0A9hcurvQuSvz2frI09l76jPWcaY72EQYC9z3vMPZBFIzx5Sbk94MatO6CJETtU8qe8QI+Y
                      vWdCIr2gIW69UKQlvVPYM71v34Q9kO5mvWhgz7zPuL09mUi0PdRwtTzC/7+9AhkMPUAMWzuCYlQ9
                      v9zIPSW1rT30Z+a8lGX2vJO7hj2A9ni84+mbPTlPvT104cm8OC2ePHDkbTzHmR69QN9EPA1YS71Z
                      EKs9ANj6vJXQvz2s+au81NDSvNrDQT2dyJs9vgSovXjZiTxLT5s9eCKwPCwXDL16Nii9oJv3vBCx
                      Vr2NKL29gD7EO2BZzLyoLwM80qI9Pb5Rir2dT7894p1jPSfPV72UEQq911djvR6hTD3Mafe81KXM
                      vJ0cJb3wpmw859i3PcUhtb3yBRc9al0JPepuer2qjg695YOqvWggSLzeIIa9gC5nugYcVT0Y5Ug8
                      YsWZvS3ycr1rwLM9cH0mvNRHsrwolb+94h1nPRrGVL2YPYm9OaiiPYL8mr17p749WkZHPXD4DDxd
                      aDW98hJjPWMnnD2AC6y9ELUavKuhoT3a7wI9oOqxu0BLh71YZ/e8QkEGPeDUs7zgGfo78oZUPbRG
                      BL1M7P+8IHiYuyzD67xze6w92LQ5vK0XTb2hSoU9uDCqvRaIeT0S0mA92MUZPMGYtD0Unr08Gw2p
                      PRPna71/fLa9fXOEPZh4yTxIacQ8ckIbPaCfYL2kMeQ8mPqCvR08vr0/+bs9hPbTPDSzEr3KsqG9
                      kGQMPFz88Txo/K88KjYoPYwwprxVupG9zl6ivWPBuj2T/jC92iKLvbH2yT2VL5M9SE3PvACqrr2V
                      TMC9lloUPRjwdzzIEca9Wnh8PdL8vr1rrbe9sbKHPSFfnz3ZEqg9VB2DvTgVsrxpEqI9QkUgPYTz
                      8TxtEkC9sdOsPUCpHb02XB09gPkSvE8wvz0bkIg9DMefvPYMfz2+yhI9TlWSveh1bzy2Yxe9p/iu
                      PQBMrjo3fb+9DDaMPLQDlLxTCq+9NhYQvafRrT3gOIK92K4avCtso72AK3i8uFeuPAzHzjz7Urq9
                      0v9WPehZi7xoL5c8GPUVvCtttj0Exg69dn97PYBRiDwivEE99HyJPMo/AL0fbbq9WolPPdAcQrzn
                      Hsw9gD2oPPlewT0dSsO9n4HBPSgYcjxOj4K9kEfIvfSwiDwkCgm9wE44PO3LSb2JCMc9gNXMO4fE
                      mD12VgA90Oc0PFN1nD2ACqq7lJC5PAB0C72Os3k9pnKRvXuinz25U7s9UDxLve2+vz3/1cC9wtRt
                      PUD4lr2ofwy8tPT1vOcPHL3E++I828+/PUBb6jqA1g2846LFvfCpNTxXrH69wDTMOnBGPb3KoiO9
                      um4xPWWKw73YRU+8Hl8PPfVIjr1xisM90sUxPQTQ5zzlGaa9Ob2IPbWCtr0mRxK9aHk7vLpjxr3D
                      moo9LOeZPCn2qD0zypM9kAMcPEpKI73VRp49WjSwvf6Tpb3meRS9AoI0Pb5dlr33x7W9vW5UvYCv
                      nL3mPKG9hOfXPGtJmb3ecAI9pmQnPe/Mhj2jVbo9jYB3vX35iL0Ik5i8Lbw0vdOBMr1gu0s7gKWp
                      vBQ89Lyatl29AD/IPCjxhLxDIJ+9A+vIPePRTr2SXb+9pNmDvThZvbwAO3s617lavajShbzRJZU9
                      cod3PZhxnTxiDkQ97N3UPFMXlT10YLc8eiEqvYCHHzwtHD29U4o/vYBWXjrDZbg9a7GPvXAPAjz0
                      yew8mTq9PY7Jm72mcp69wIdBvFl+pz3tHyy92zqhPdD9I72gjbi88KcXvbCpOzyO7oe90FFgPLzd
                      0jygKpw8YJ4LuzR577yz7ja9smQXPeusoT2AAtu6Xce0PVBqxzsZZKM9qAeHPNNdqD3UjaI88Pct
                      vfJ+cD1WPmE9gHOuveAlyr1SyGg97vB5PW7GUj20O5I8avRmPbL4Fj2gHw+9YLCXvGn7oz3xPpY9
                      DGTcPG/fpT0ALBG85Z+kPViWszxz0cq9AJN6vdTHkTyVIKA9NtYCPdAtkDu5ack99Q+9PRDIKL1K
                      GGc9rBryPAIdFD0g7wG9pFD4PCq5V71fh769OvgtvcAtx70z5Eu9H/KzvdEXkj25uIc9Y2VCvcXQ
                      hb1xnJQ9EgbAvQ9ApT1UxKe8IP7mO8g1urxC/Ao9Qcm/PS12u71PpZo9ESqAPWgChzwV6sQ90IE3
                      vPgz47xxjsU9ptg8PfsHrL22/GE9aoUxvTAhBzwAAB87Y72evYWDjb35/6g9+HOMPKCxmjwbxsm9
                      YOSKPABbhjxD1Si9UhNYPYw/+zzD4MC9QdGqPQYAo70frps9AHiavMD7dztdFx29NPKSvJ71HD1P
                      jMw9jTaxPRIRl726JJi9OU+QPRewOb2IUoU8p5s7vaSW2DwyKHk9GTezPdqIKj3shNa8wC5DvLYd
                      Hz0cIIy94bC/PT1Ptr0GUSM9oP/rO/Sj8LzC/Qc9qBYtvOBP9jsAmYc88xgmvUAxPb2AC1i9g5t8
                      vaYoAz1iAJy90CLjO6E8wz22qnc9UNC9O4APubz54rc9KuIKvXR037xuMzY9bXIjvTA1EL2oOzW8
                      0HIrPIh9urwCPxw9mIpdPBCVTTxA2j271s9hPZNLwr1fRLs9mAuQvTuHvL1nPb09T7O1vQJeMT2u
                      E3A9E3O/PQD0iTtICoO8N4dGvVpITr0AdcS56DIlPMeYsz3rLr+9qLKOvaf+gz2xq7Y9uEe0vKB9
                      lLzuSB49QuZ+PdpqZj3Iut+8V5XGvfbWSD0+WRQ9WCJsPEMwjz3QxqE7jEepPDRn5jw3Zi+97Wu9
                      PaLqez1dgpY9CzKHPUgkrL1ySzc9Z8LGPfIqPz1AAws8aHiXvUrzCz0Cy189rPiivMVGgz3gKGW9
                      XklzPdIQHT0bsLS9s3hZvRShuTzGY00937O5vUgKpTyOdxg9V4pPvTLmaz1cxga9IbqDPYE4yD0A
                      k+s7eCmWvI0lpr3Awmy9dFGpPKmhnj1AYwa9sGetO4PNTb3Q3wy90EEovEA/Truw9t47bXbKPR4E
                      kL0j34M9zbyzPWp3h714Iqm9F2TCPVIBfD0Eh4e9WIlwvP0FHL3KJcu9XQSbvQjv9ryKjyG9J9uv
                      PfnEuz1+rwc99ZLIvTCEvTsT2Zg9aFAuvO3quT0OpYS9KncNPfZ6Wj0YAJ29aFy8PPtHgz29pMY9
                      WK7ivBePkD1ykDM9UYWUPfi4wDwAQ6g7uOqGvaAcWb2tUcC9Gly7veLdLT0GYn89kWyiPfhdnb0W
                      jUg9u2yUPQ9szD3d0Ma9AulYPdACS7w60JK9m5qxvei0gTyw6wS8qLUdPA/hnz0g3eu8lFGPPB5V
                      Bz0Ta229ffpdvc0fPr3yOiY9AGxevRgBLjyS27a9UUCAPZsNur3XKie9y9ypPWCUlzyac3c99am0
                      vTrSrb2gdzK9IMrRvJpaVr3HQ6U9jL2+POpUdL2dF129V5CLPQzZh71A02a7KE2JvJCVVr3ArIK8
                      mMIgvKPfvD1Q3H28gIySPOdHmj2obfW8iGvZvMAzwLzR1ag9m5i2vfdOLb2rQ6q9KGNBvKNIOL1g
                      U9W8oLWsvUZ5QT2hdck9ZWedPT/tur3KWFq9HaGtPb3ilT10Jfy8SEKZvQSO3zy0Ue080APNOxIc
                      PT2QhQ+9LTKEPbazor3Wmj89SgK5vVkXrz1f57i9NBOjPGh+h7zvSbu9mm5/PTehUb1wql287QIo
                      vd1Dkr0Yy4K9SO2FPMphcr1nqsS90zFMvXapBT0hXJA9MEoBvNE+vT1J+LI9azuavbKndT3ANie8
                      4lmavY5BBz3Sh3Q9sqhxPYL2PD2SGhU9su3KvQDdnb2Mt608AFD1NwCFjzyKgXG9TuQ3PWnYxj0g
                      vro8BH7mPGgfQrwaxiG94fXJPZSeB73oCnk8Exk2vVpiLr2oBRY8nH8TvUJuPz1F4qE99lqWvYDk
                      3DuAKFk8QH5EvcA3pb3Q87I7NVqlPZV6jb2u00g9bcSAvWjvz7yulw89SJTmvBr3c70txps9mRvH
                      PSatoL1jCmC9lPnTPGRM+zyXdsW9tLylPBKEgr0gcdy7utsyPai5OLzX8We98a6sPQhzqjxwIR48
                      YOIFvVh70rymaEQ96MUHPPvVqD1Ttag9aRGEPY3ETb1tzas9OCmzvIPVyb16dZ+9wIpHvPAbPrzK
                      M0m96jhcPSmHyT1yZyU9dDnCPICMUjwFC7Q9sB64uz0bKr1m0i092igbPWIlZT0u3kQ9oOBhuw/w
                      v72dvbG90TqgPYSqBr0ADcw8OODAvOmikz0tg5K9r/uMPRe4I72iFxI9kpx7PSioI7zB9KU9onqT
                      vRKXHT1Z5IM9f3i3vSjYtr1+dkY9szLBvUdfUL3EXNo8fHgGvcf+Z71Ki1G9FAONPGN8sb0sC/88
                      sPKVu97Lcz1rnb49XWHIPem5tT2izC49mOMRPJoXaz1QNZG7kD8OPMEWxT347+m88LV9PCfZwD0k
                      Z9s8QDBMvajTTDz7aI+922q0PWCKbztxWpI9jDquvJ4IOD2VUbQ9XcMlvYigo7wiFEA9VMDnvGo5
                      dr3XiDC9apIUvd0olr3CPcW9i3WePd0zSr0KC0Q9XXEhvfB8IL39ZB+994+xvTqshb1gbtS7/L0Q
                      vd1UoT0zWlm9APZBvPDtQDzYTfa8EygbvbiGmL0OUSQ9UKrVO/sysb1ngaw9+8igvWg9v7zIXLi8
                      xbPHvUBDnjwA6As4MiIhPZK8NT0II7S8/CMGvZhgrbxShAo9BWCBPeeeVL0sCJ48gNS4u/Gbpj2X
                      Oh69L4qgPZNfWb0AlTi7pTGTPTBefjwh7ag9dBXUvIpMUT1b6Jc9k+9Jvcq3VD3zapY9YvcnPXBj
                      fLysbq482Mb/vKIeBz1r5JG9u56JPTJgkb29Ciq9WNfkvCj1EbzRVZk9wIImvIxnkDwLA4o9N1tw
                      vaK1kr3W9G89H5G3PfRBqLzGFxG9QM9PvJ2LhD1t0q+9OU2IPUiIoL2g9ui7yVmpPU+uvL3cRRO9
                      jgwVPRARcjww7tm7kgJOPSoyVz3bnaw9iciUPZINQD3aqJy9FzFTvaN4w724P5W86HURvNNrH73y
                      ZDQ9d+5tvVAgV7wANM87QFeTujUchz3gC+u8i0ahveZmMD2spus8IBaKu9C3IL2jxj69SJPEvAyG
                      g71KKsy9kIlmPJxFh70GLAW9AGbfOaBolrvYZr48VjEFvTTih73a5Bo9kdSvPdQl/rwRNZY9KFK5
                      vQCYDLgU+PK8rlqpvewrwrxKcic9f1bHPRiPIDwGIFk9yaSoPfonKb1gsLm8wJY/u/iqqzwS4n49
                      nDXQPHAPFTy2dgk9BHjxPBzO2TzRUqc90o5EPVCg5zvW+z89FXuSvSHihD1986c9PSnJPWwO+Dwt
                      FrC9aLdCvC3DlD30w4C9mMsWPB9aiz0A6TM7VSaavd3Ldr3MFOU8ul4XPWi2qLw5JL89U58rvRSL
                      jLwHyS29ZcSBPQ4nm72gRQU7AwyZva1Ftj2DaiK9AGjnOS5rRj2oyh28uhF/vXQVwTwALD850FHU
                      u5jooL3jrHO9LiM3PR4WXz3s7Jk8JBLkPKrws70PAp893WC0vb2SlT2AN3Y8VBOOvApvwL3cRhK9
                      WJjhvAzemTyIPNm80KWavShVezxAeY861d2wPYNjxD3aNEC9QDF+vZC8SbzK/S49PBUCvaj6Djxc
                      b/A8bv+AvVE7oz3Aiy+7wLVFOzC6BzyikTM9yVzHPcCkI731rrE9/sKVvUj7sL3gosa9PjCmvYLK
                      Uj20Xb+86te2vRVYor3YI6084091vQIecD17Y8u9lM/DvLL0Qj1it2A9pTeVvVtzxj0xW709xE4Y
                      vY1Pgb05n8o9a32ivViFqzy+D4u9y1uZvaAVNL1KG8G9c66qvQUIgr0AUK87Hea3vRrLn71zx7M9
                      jVhDvQDLf7yAOes7MuDLvYdDGr0q9R29g1/MPT8BpT3N6za9zHC8vIS4B736BZW9bt0CPTMwcr0K
                      q5C9acGsPVo2Ob1ju3O9M3c5vSbpHT1AmQM7EOO3vUA0HbwMJvs8p6WLPRJAUz2Uj8c8VHsQvTi/
                      trz1AYq9pUyVvTQatLxakk4968+KPX76ED0i7r2918twvcAkYLyUIbU8Y94fvWiyazxbr6q9CzuU
                      PVoQVD1NHj+9pL7pPNedmT37xKa9gNaiO6B727sDnEi9QpxHPYY2eD3ogVi80wJyvdAJuLv6Z3M9
                      mR+VPU7oXz0wHio87LirPLnXij2985u9QYqzPSge17yoDEC856tmvRf8V72lusC9jAyRPGrSYr0K
                      0m09mkc8vdDejr1Uj4e9bdS8Pahbx72woJc773yFPcG9pz3OiVg9SghSPQCsF710YYq9YMMBOwqJ
                      ZL24Mqq80ihmPTBqP7xPQcI9+BuXvVFMlT2gVqG7muINPQK0cT0wECG8qMpVPCBtqTziAFs9a9SC
                      PSdNkz3gebE8Tx7HvdJnID2xcYk9lZjCPSJkvL3il3093fO/vegDJjzQHoa7OxycPczbwrwi+GU9
                      gAmAuiLMm71Xd7U9dSKDvZnmvD20ZIG8Fp0UPSjJR7zAmoU8yMCMvcovtr2oc+m8rWWfvVSKEb3A
                      tGq9K8KsPfh1njwAbs68zvCQve1+uD16CU29zEHdvHtvkb0GMzQ9gLPxu7hjrTx1OMC9KLRpvLNn
                      bb2Aajs6L0SUPUb7VD2cwYe96Os9vOvEn70oyK28kEJfvbQAhbzATyQ8rqCFvbIVjr2u0G49Mxc2
                      vVs4xT2mxlk9yusHPaw14jzV1LK9yhl0PYNaj70ibIm91BGavG3mvr1YP468ynKuvfnlsz1jFHq9
                      MBwwvOOfjT2ylyM9ayilPZlfuT0eVE894Jy1vOBSurve8xE9AN/+uxZ5Cb2p+sE93ZmhPTuSyL2m
                      2TQ9R7+zvQgumDzBiJ09vcEtvWC10DtdoHa94gcmPc/5vb35SMQ9wJK4vEm5nT34pZC8Wb6HPfJl
                      gr0jtqW9WHS6vEDTJL3SsL29Or6AvWA7eb1JNIc9N+VNvbh+17wKpMm9qBBdPJhcor3BcIg9FEun
                      PAtosD35FpE9qLDBvepcdL2w7OA7UqNzPQ6Eor0sk7i8MPkYveJvHT0AxjU5ghElPXEJrD35dIE9
                      V+eqPWgr0rwGVam9wFmavUD3Ljs2NEM9HtGqvZE6xz1VA489rUWbPcq+bb3CqVc9vmQ6PVo6Kb3j
                      TTW9y4+dvfAzXr1jjJy9pYeIPQgfqL3gUdW7CWu2PQrnlr3YPkA8al0Qvef/Wb1gZ2q7e7O1vcwu
                      tTyaWxC9hFfbPCJqAD0ATGE8VrJSPcmSnD2iNnE9+ELEvPmRnT0YBMe8BjJcPYGNvj1yeGI9tYfE
                      PRKqJj1df4K9QDhNPKxl5Tyatwk9UDOOO5+RiD2WYgK9ss1fPQPvOL2yIVQ9eCGPvMV8sT0WKqK9
                      tJ7bvAQM3jytWR69+1GlvWLtJz1oUMS9YBqMPDBECzyiYhs9vWV3vdRL3TxcIwO9ynYpPQCekTta
                      UAk9IpcTPZcGvb1KrD89PAkQvUB8TrxrRcK9TWi9Pbtovr1fHbm9MNuZu11KiT1YoA48Tvt/PRk2
                      sD2Y4Bg8YlofPfvkgz26FAw9m8GevcUvwb2ctoW94OjYuwDWkL2wAYu703xJvSwv0ryGWIW9m225
                      PYx0hLzAWaC9Q5p+vWgapLw4K5e8QbXLPSAzujt3XK296/aAPahD5LzTFKu9EwXLPbfcLr2FgMW9
                      KBdtvPl8pT2AN/M7VE0VvXQyjryp7pE9q+y6PfDkFLxw8229Qk9IPdJGBz37HJ+9+gHKvdE3kD1E
                      IuM8UwiZPeAEhr1zmss9IO7huyAAIL2UNdO8KIdQvODUk7zh5JU9gJYOuoXQrj3N+ou9ZvV5PQfH
                      Pr2YxRa82jtCPdLOfD34QfG8KJYcvJpSFD15DqU9qO6/vZdtWL30qoy9YviEvbglwTy2eAe9ansf
                      PcWpmD3MLs481KX/PPffpT2gXyo7AZmMPcZ7lr1zuL09wENQPMqDFL1ETIC95Mf6PGAXm70CyZO9
                      sCxdvBBYTbzNf6E9gBpJvIgfhjzAt1+8FyaxvUAkwLy+LHU9UJ5RPO7IQD3CxS09qB2pPPJuIz3A
                      PD27AKrUu7AmA7zlP6I96EASPFCw7TvvJ5k9V3tjvbT6Fb1reZs9QC4uuwCmKDlgmiO9KC5rvH2e
                      T73A0IW9sYC1PY0KuD1ueIi9gD8hPMDDZTt0qOU8kVayPdwm1DwAQUK6qr9pPf5RFD3yy0U9+l43
                      PQCZnzzgYqY7W6+ZvYBeLzzoRZ69nsgBPbrfZL1Z85w9SqAXPczYvLyQXH+9vPngPHiLtr2sE848
                      8rALPdCYVL15AIM9P5KxvYA7cbwRAKE9OusHPZQfhbyYVLY8HoeivXrHc72BN409yjBXPcnloD2s
                      G+o8l4+QPZ/njD2Eeuc81QWgPTB0kLuAKge9bQiQvQBThzk4W/e8CCO4vMLvgL2oN4e9Z15xvZVI
                      hr3eP1M9IPXKO9AUxrvjWiq9AtcEPbzP6jySzEs9yea5PY18hb2QKie9wHnHvbaRPz2AoKw73yKY
                      PWD6wzvwewa9pnJWPaBdob2SGDQ9gIyMuhXYhT0Dezq94BKUPKPflL1Aalk7l9CGPVL9Jj00Hqo8
                      txs+vWhAhDyIuMi9ekM8vYBL2btwARW88QGkPX7qaz3eTVM9IADlvCpIZz0orIY8w6ucvdjXyLxn
                      NXK9iuBWvchK4LwAEDm7oCXVO1Fhsj2Ym4w8I1qgvV2Qoz1LiqY9lGOnPKhzqr1sELy8QTiMPQtg
                      lj2Kj3w9jQ51vVQgsTxg43m71FiPvNQhybyqxHO9ANgQu0ghi7wA9To8rHGkPH3kbL2gUnA7CJuM
                      PLC+sr0s1qE8wJ+vvDDi1zs6VSG9Qw+6PUCSYb1x0p89oOyWvWkjyD2e3Fg9ZI7/PIr/Yb2BVsI9
                      FPiivM0mZr2It+K8RNPaPKiOZLyg6Ya7IJYgvbD1PzyT3W69bYinvQDpi72T5WW9V3mOPVj/XrzY
                      P6s8TK+JPIPvTL1Qzei7lbWtvYUGvj0qzHs94GvbO/FHkj0YQqm9nUC2vcL3KT1YEB28h8+fPTdE
                      rr2AQY+9GJP2vGyqsTyALLK7Et5aPbQG1ry95529AOR/Ou62l71dxEe9izOGPZAfTb3of1i8YzNz
                      vdhY4rysh8s8EN5UvYDLDrygixK99n0NvbDvmb09FYm90pgiPQtJpT1No1W95WipPbwWAb1AU+G8
                      oa+uPTAiSLxyXLG9ENtIPNR7qbxESNc8LBzVPINgQr2hpq89wCx2PABhNr3pxaw9MMGLO3t7iz3d
                      ojC9BdqEvfICaz0G5aG9O4jMPVuokD0taKA9G/2QvdqXFT0w+dU7RGQCvddXJL3oxUK8zYZkvWYx
                      CL0737o9ksVBPbSC6DwED4K9XSO0PbpkQL1Ql587f3jIPY1LkL0+3CM9d8RGvajgwr3HVCm9LaCp
                      veneuj3JWYI9dWidvZjl6bzMCcA85yyBPcaBGb299Ei9GQDDPWgxB7ywJVU868GaPc3Ucr3AGWo7
                      mZ3KPck8mT3ABD+7OsE1va5NnL1zN1a9AMyXOyxvgjzuU469OvIcPcJzDj2Nhxq9bBC6PJDmBbxC
                      g7S9KNfHvUAv3jqEB9s8ccXGPYZlOD2LV6C9e3uuvcDWwr0gj4K910VJvaBim7uWUQ+9QEQiO1AL
                      1bto3rm9hbGVvaIoUj0ojJK9xsCYvT3vvL0Luby9MLYaPJ4HcT19pJe9AwNRvQCix7udkaa92CEc
                      vFt/hT0awxG9tq0/Pfnfuj3Zvqk9humHvd38l71gZhy9WMqJvdj5GTw7zbm9wKtUvRQV8Txrwq09
                      kB0EPJE1wz20XdA8WMmsvADYZbz7R5E9GWmHPcDxTrt96Z+9DiSYvUIlBj02CVk98E15PA2tyz2Z
                      aJQ9aFyyvSq5Tz1aqUu98hOpvbHkhz0zFH69cUy8PUC4ETzh7cI9jLmsPBY6FD0K9A29SPvmvGlt
                      rD1wYSe81fWyPejuPzx/9Lw9BMvNPKrHRr0AGeS7jBbMvJArK7yQhr29QjAWPf7dXz3CbXI9yHSO
                      PIUuuj2QVYC9ncU5vYCMtrs3iFe9Fq0WvQn2rj3XnSW9klB0PTvlrz0kJt08RNcJveYxaT1rJ6g9
                      vt8mPcJGMD32NzE9+TS3PXuchz0TOWy9ABtpO+YkD71tQ6m9Y7uiPa0TsL1ioic9gPcxPG27J73U
                      HQe90CMWvQMppL1AOio7yNLHvOBW+rs6l2o93bk7vR60XT0A4zC6MnpTPUFGsT3CZSo9xvh6PS/v
                      rz3VPYa9b7iDPQfKVb2grjm9ABRAuj3vkj2Ampm71ZiLPba6Gj3LW6y93flFvfuIq70A+PK4DHO5
                      PITpDr13eBy9fVOdPQCwwLdQrVq8nJzrPB+guL3gGKW8S2yZvYCb37xOARg9UoqKvepILb381Ya9
                      qF8QPMDmBDs+pIi9LZiVvXDQT72MjdO8NdGhPQTc9zwLvMo9lW/JvfAHNbyAeRy6zwC8vTPIL70S
                      SAc9Hv1KPSD1szvfzbc9AAaWOod6gj0gecq8wIDPvP/5rb2sJIG8DDmKvLj14LyoYoi8AsYoPWD4
                      ZjtCRAY96DyNvUKuVz1eCHQ9CJuevL4ZiL0R+bA9twGIPZIFFD3Ykk68oDhYu4CBtruaEmU9QGIH
                      uyB99rz/m8s9jchIvRDBvb3GO109YOCsvSQhh706tho9q6SmvZqJHD0QZho8sv5cPX2RoL3JBoc9
                      +xK3PTq1DD3QZHy8ug0lPa2fwL0fhMS9UCsmvHQzEr3qWpG9vO0IvfV+iT29+Cy9MDwlvAjp6bzQ
                      QX+9Fv2ovfQGh73oKHo8lLTKPD0SPr2Jqrc9CICbPKtNmD0y2FQ9YoUlPZHbpT287Mw8T3LHvfZM
                      Xz1gBps8Im57PaJHOz2xdJE9GDkjPGrJfL2Q+jG9APdgPIcGgz2sGhi96L7nvIAiFb2gh7o76GV9
                      vOCzh7uAuqu9WY/MPe75or2imJ29OpJ8vV+Kkj1CXTw9Iq+ZvVgNor1AZLm8ociLPUd7wL0ZU7Q9
                      K0KDPbu+lb00Z8u8uvtgPaI7ZT0zwUC98OtBvXdfdb0wenW96WmPParRH73YiCE8irVsvYYKUj0n
                      QoM94Y6nPasKt72oqnq8BG31PFi+w70itSY9CQqJPXCesr3aaH+9rAHhvGpOQ72HsLA9OltTPaze
                      wzx9y7Y9XQllvVMnsr3ilSQ96J+KvZrJCj2D9Di9kU2QPcnaqj0jd8o9pkiSverqET3fsJk9aJj+
                      vND0q71iywk9avwUvbqDTj20Rem8SXGbPbHDkT0IcKq9FKyXPMCWP70o9Wq8VrkUvQCigztBiZA9
                      3UKOPcFsxD044oc82syavWWTtj2oHSk8CFmpvUftG70IDY48EhdCPXZ2Vz2qM4q9xe6IvdpVAL0A
                      TxY6EDtsvGUvtb3nCK+9AVSfPQD/yrtrzrK9DOb9PNIwZD0I77E86n1YvfDKD70Z07s9ovg1PfXn
                      ob3kAuI8zPjgPEwA8LxYj7w8HdOQPWqCTT0AZGm7gc6VPe60Nz1OfAM9WMyWvW5KBT0iwEg984Ze
                      vf1UsD1KNDK9sEEhvWBlMrspk7k9rUCjvTJOKD0p/Ms96BGfveCacb3ZtZE9SXGkPQjOszyTtFu9
                      yNWNPFsRsb2QHzO94G6VvGmDrz1USdw8GkB6PahtE7xgvI29ELNuvcDhoLwmbRG9prGQvY9noT1g
                      X8m7BjorPeBsrLsahSk9iOyiPNpzI70AFW866OK8PMAJOrxXloo9B2uLPRhacjxCOYW9XRrKPRNI
                      wj3NlYS9WpJYvfaflr3jJZ49Kjk3vfN4nj20C/m8tQSIvT7LMT37NKG93meevYHbmz1g+sk8+n1K
                      PcVGqD04h6S9cFYKvXNed72M64g8BzG7PSLSLD0jG6O9pjhzPQBajzyQM2M8wVGUPfzW+Tww5Gq9
                      0BdTvXQ3tzwEAOg80Mt5vAGxyD2dlCe9qtxqPRB7bb0wfDG8/jOEvZrlUD0WMws9nW5yvbgn7rxy
                      n4m9CLvAvGH6nz3qS5S9YMWUux7aBT0YVAy8JSasvabOQj0Ktjy9b6rEvdgY7rznEbW9tgBNPRUv
                      ur1xEos9UhFTPahlRzyq12g9qK7ivGoDez17qsU9FxolvYLRpL3Uoo08uhEuPScAOr3S0Qc9CKGj
                      vUj7kb15+6Q9eJOivJKSob0srKE86Pn9vICH4bx962K97EK1vAImVz3ITpa8YMIOu2Uumj0Ykve8
                      WiCEvWRD/jx1NKM9TCyCvcAdajyRyKg9AZ2nPUqgyb3gLoM7jaa5vYhR7Lz1kps97xewPahqmb2i
                      5ks9AKPDvcNEij3HJUu9biF/PbgVzL0DLI09c9XLPcCmETvA3hc8mAi0vZ5waj14pJq9cCUAPAxL
                      j7x4BJU8JpsRveyV4jzmcnU9SKnmvLB4uzuJVKk9a6mfPaBFML1AKEc8DmAUPch8qjxZZIY9oGTx
                      vPsdiT0/Ssy9DLnwvICsCLwGCAq9pU+dPefJuD3XATi9mTSwPae0Jb05BKc93U6evTTNvLyQsky9
                      AwaevcdeTb3baqS9U/hUvUDXLTsAbr06wO+RvM2LP71Phrs9KCu3PKMXf71Bdoc9o0OlvckPoD0A
                      TAa9XXBPvRgPFbxicCs9e+qMPahIhjxa/mI9Nfi1vfxrCr2o/CK8HzeiPUipur0QLYS9gXKtPeIy
                      hb3VEMm97vYJPfoZcz19hJ294LS1uxmPgz0qmaq9gKZAunSd7zyWdT09nog8PeComrsgmWm9CFir
                      vSmyhj0jOHC9gObsOsqrDb1QJSS8zu8zPXiby7wAl+g72kZvvcRm7DyolLQ8bfOSPR0wTL3MxwS9
                      vaV7vaCGczva6oa9fl9SPQNplj0ABju74DSwu0HcyD0YayI8zeQkvRhw/7xgEoe8/4eEPT1sjb3o
                      Vky8u9yNvczfmLzZfcs91B8HvWhin7zuuqK9cMtGvZlCjT23unO9QFsFu54lBj2nxSe9Sc6TPSjh
                      G7wtm069Da24vR6pDT3dzZg96i1WPcASpr1MVP88NBL9vNnOjj3MOLS8xHTzPGCpcb106vQ8PM/2
                      PPWYij1VoMy9dDefvNxV+Ty6phI9EMS6vU2Kkr1UuMQ8kO0RPDdOR70wS7U7DeKBPQkkkD0AASe6
                      1l0YvfVGtb2HXcS92PI5vBm8mj0SJS09PLjaPKiCTjw7SZW98tZSPU1dPL2bcMA9RK/XPDxi0DzZ
                      apM9YHSnvLjgjzzaQAq9VO+HPJQ0irwkGAK9mzq3PZ96sT0Qzyi8iO7TvADqCbzx06Q9JhhQPayF
                      9byAgs87aFnvvADr7zm3oVu9pM8MvWiFN7wNc0e9B6i9vfB7lL2Y6Tw8Ug9wPVIYNz30nJy8F5Rt
                      vXDWPb20pPW8Om7LvW1HRr10Hrk8kO8mvB35Tr1gLeI7k9GkPaDuvTxAwFu7sy1mvW7ckb0Lyci9
                      9N+kvCBTc729ira9IIS0OxSIwrxuV3Y9xRmivbwU6zxOiV49Y0MmvQAihTklwrS9Azx+vRjTNDy0
                      gv883WVavaRc/jxA0bg8wBYsuyg0n70zIFu9kA1iPPZqWz0xCKg9ZQSPPaUniL1nAZU9F6uoPeD5
                      3btyYVo9sZyuPd5DeT3QtBw8GPG9vNDsh7u4UYW9AKahOow777wzGDW9ACcburZoWj0/qYU9ArsJ
                      PZCSxr2VUb29aDhoPDCgPryt8EC9gNkvPID7o7ootca92FxjvL73ZD1g9yo7OPLUvADvh71O+zQ9
                      XihYPVCgqTsdFy29ebOzPQiturxw1Hi9qanJPQCM3DpjF6i9CN3VvPTErLxkwM88Bz+sPWDqAL3o
                      XXg8wjQKPYdpOr2VRrQ94HGSvYIQDT2zTLO9aUejPXlJiz0U/cI8CmxKPch2lL2d5Ju9qpY+vcO2
                      T71GeFM92LqtPDAz6bsdTKE9yO39vACArjhulo69RlJuPezslLzWMFg9MTu5PUB7DLx+Cxc9UFM6
                      varFfL2Xh7290xAtvbrRJL1CbgE9g0J2vSxkxjxXoKY9+qALPWzF4zyCyAg9kLWmvbggkjxafIK9
                      elyavVCWjL2TeL+9yau6Pai4Sjywxz69iOC5vXhhiLxA8lq7iZuQPbQerDzCkZu9epQ0vcBHCr3y
                      r1s93oxVPfJDrL0Cf2M9gAVUvVBC8bsAs8a7NASmvIOFqD3wPDE8wKPnvPDRk71y4aG9TEG9PAyJ
                      17wHM4w97mZRPekGhz0Q7ky9YDQCvQBdNroqJDg9Kl93PUDBfjsolGQ8s6GzPTv3tL07XZC9vUqI
                      PZVXo70wvU29SGSavBLVFz03mW29NJjyvDBNNby9iqs9WZ+7PQMshz3AMyO7oGHxO62apD2hwp09
                      lb6bvXgEqzxtCIk9ABj8OJg7qjywo0y8gHtDPCdYXr0Aiwi72c6JPRC/ZjySWzs9gLQ+vFtAnD0L
                      /MG9e/6gvbNcJr14gqm9+0+lvT3Nlz0ydo69JCT4PFYbdT3wRTm83ulCPQDMCbmw1wC8YkVYPfKg
                      MT01HIE9SnpOvZ1Lmz1CGxg9WNBSPJBkPjyimhw9AHSLOFr+Sj24Sqm9dy48vQWcq73orVW8EH9u
                      vCSb6DxPg8E9tH6zPBpJKL03FYA92gpfvWNWsD0APYG5YLWOuxT1Db3HoYE9vhgIPe2MPL3uoqS9
                      MrUpPa83tL2ySFE9x8i5PTCMOjxSByo904ZLvcMQuj2WQAE9ejZGPaQS0zwgd8E7t6uXPRi5nL0w
                      lDO85OyBvfgQxzzAjj29INqCPPJ/xb0ODRM9mw6EPYrpwL0IfJw8MOctPEf0Q72AQgg8otoYPd07
                      Xb2gn2s7aLzAPGFqwz16qQe98MMqPPqqcr3PeMq9IPn1O+wPxjyajGy9tICJvWDU/zuALZa7Y1Ef
                      vQAaMDswqBa91klxPUA7CL1qmlK9q3W4vf2Oir1A+aW9QM4UvaqgOD2M0we9e9bGPc6ZOz3appq9
                      LaK5vdOfmb2dkyi9kEx2PHsjsr1zXK+9g0w+vcC/YDwJrZU9vVWRvbhaqTwLncA96cCOPSyBpbzd
                      eHK9QkahvXsinD3gz+c7EgU9PYBifDo7lZO9uyWyPXX7p70t1bA9wMSAPMO2kD1Dx2e9YNCvu9C0
                      +rtG0nI9gFUqPGzxsDzQrh68atJ3vfQBzDygOZg84HqVOzjkqDwAhC48RtEsPcdVGr2lGrc9btQt
                      PUVpyr0oGgY8gHD1uzoYDj1sfeM8sP0HvMDUQLyy3hU9uLm0vaLenr2jVl69wDytup0Rij1toRy9
                      gkwTPQAwizuR7549un8mvYBtX7xkXRe9oEf6O0gNrjyA+b480KxuPIA1ery6XsC9ZuWGvfTQozyf
                      3os9IlGlvTCLnDsOsyM9V+uRPRfhvD1HZVW9/EgTvWP7lz3kfIa9YyeWvfKmLD2ich09vHkSvQG6
                      rT3JRcE9m1KFPUyg5DwYoqI80cW9PbPzOb3iPmk9Ts4qPSydh7xgI0C9Cvg0vZjQr7ynfYE9cW+p
                      PZij07ylSbC9Ux4evcsLlj0A8Ms88GkYPDZFnr3gNa29lnJvPTBmpDt61Uu98v9SPZJIEj0zdkW9
                      gho+Pctpyr2AhpY7qKilvD6iBj1gIDG90qUSPexygL3Sll89uTGIPZQMB71QTR68cnVyPYJ1XD2u
                      T3U96cHIPSL/Yz1NZE29kOAtvCEklj2ddIo9VB6XvIrQpb1IIp48IqdyPW2fvT2n+JE9YRmiPQCj
                      Q7xT/Mo9LXkgvUsMkD1jmk298FWwvaIznL163Fm9sdefPTdXPr1U+7C82RWwPdRzkbwxRMk9GNwJ
                      vAz/+jzOwys9qviJvcBpNLwgNY68nfR2vTGbhz3zhYE9TlZvPSpLKT2A8cw7990nvYphOD1UAYq9
                      gHzmvKk3wz0nNJs92i8EPc73Wz3qmKa9gxA6vRqaIb3yVRY9PJnoPAB8PzsVJZY9p7ihPe5Dfj2F
                      5pG9UAnUO3Q40zw1AZe9oMZ0vfSahbxnTku9WlZJPVgiyr1oBTY8gE6UvAeAIb3ntUy9bRzDPXok
                      Aj0gHoq9EvQxPaWpnb17xY89mvdUvQ8iwT16jHS9d5Fyveo/Xz3p25Q9AEQ2vXlWkz1uz5C9MJea
                      Oy2Psb3MQfG8UB4WvH2Dhj1Ng529/vkyPWBcL73D7iq99+exPUeZyT3ovYa8SWqlPethuD0+9kQ9
                      0x2MPQqSUz3CrMm9gEldOk7+dT1gEO47v7O/PchLpL1SrLm9lSaNPajZyzyTYW+9UxhbvW+czD3w
                      sUy9AIJIu4pZmL3nzWm9jagpvcafGL2o27e9Ks4EPRCNor3YnxY8oEQeu9qxlL0y9569iMjmvG0z
                      ar3T3II9CM7TvID7Yr23/MU90up3PQM2pr2CqcK9ZXbIPUj1q7104rq8R8KzvRA8wL2gMeC8es8R
                      PWNuSr12FFE9eDHLPB4ILz3jn3O92LG7vYLaaT0HqIQ9zpAaPUqlmL25VJo98IRFvezZD72ovgq8
                      9F6KPGcFWb0A3Sk6pFHvPGvzlb1Eh988kIQ4PK7om70K9BI9Yno0PXnXpT3HGbi9f4WoPUoJML1Y
                      6AC83QUjvZy27TzFt4S9ANacPCK2VT19T4A9s0QbvWOTW70AIoi5rGbrvFUDxb2g8I87vlFkPXHg
                      nj1BjZo9nOXrPOwW7DwA2uM5ta+fvQA8S7y/I8W9p8KbPdfoXr2ttKc9aCzOvCqGVL2MCKK8cLO7
                      vfrYD7110JA95skRvZ/KjT2F47o9xAr6PPIvx71geHK9QJPSunE3nj2Xp1y9+9+CPRtsuD14ItO8
                      nj4XPc0AoD0iwC49Us9OPd/Yxr1oB6S8QmRkPWChg70w7lu9ilqJvVKvDz15nsg9RzEdvQA83DrB
                      AL89ztp1PfBvEb2AAle8KM23veiCir0zImq9SDm4vKBfcDsSSiw9aKSsvGA4wjve6hU99DervDow
                      XT2Osmc9mMi9PHs6pT3doZ+95rpLPZb1pb1C1349fFPTPNWelj2AqUW9ikqwvQp9cT3gYlW9vajM
                      vePvwz09YoA9AM6cunLwNz0GjQM96W2OPX6+nL1n26w94IDEvPDwbDxPC8K9Mu8pPRrRbL2wDsc7
                      wDGbPGERuT245cS9bQ9KvQC2GrmjDqU9LIeMPI/hs712H5S9px8wvTGDtj2ltYM97TNpvWsWwj2G
                      6RY9DUqIvZh93LwaIj49dfmBvaDlwjy9SUa9TVCMPc1diL02nqu94aWRPZybGL1tVmK9fCrjPEsr
                      vb1gIQu7AMFju5iLh70f4Zc9dEfFvJAoyr1d/ZW9Jx9vvSD6bL3FR5u9I661vc75Ez0eiUY9aKew
                      vZk2xT3KpMm9wmhIPReDO71AhwS9kmIjPZ7lXj3+mpe9ynpkvcqJsr2Iaai96NGkvF9uhD3obEw8
                      RZDHPejgqL0vNb69wK4kPFBJCL0EfBG9O+S5vfQ/1TyDkMa9Mm0hPVSbqjwc3wa9vSZDvagGvb1m
                      tIa9fgtDPcBOTb2OlXo9L/zEvdqdUj1yu469vAAUvU45YT1A86G6KtstPfnVrT3Zw5g94UC8Pehq
                      JbxgSJc8yM3uvPTq3bzToq49JS27vexL2DxsOIa9ksY6Pcfja707ca69rGOpPEXStr1tqn29WB+m
                      vXekXr3gfZ+76gNEPYAa/Lzdzii972qGPei2EDzO8ou9njlbPRx96DzhM609jk0oPRptRz1D+LA9
                      IMvzO6jgVbyX44U9Z683vQpcA70jdaI9yuw5vfLkaT0I2JK8Sj2evT8hvb29Gya99/vLvUeMpT1t
                      M8M9mcWjPdtGrb0LFMG9Q9x9vfB9B71h/649EEdovKi4dDzsQfG8PRKHvTjoiLzIN7Q8id2VPR2M
                      Pr1IXb69JXnAPTTmmzyzOXO9bDKNvMM2VL2sMrU8zMmzPICbkrzQqAq9ngREPbQSpLw0BJA80rEB
                      PeyQ8rysU648QzyUvQOflT0uKQg91NO6vADsKL0AGGK9YHp3OyaxHT3R8Kc9OfiQPYbHdT2w9eC7
                      cXKGPb5MSj2fRcq93TiRvWBNLzsy0T89kKFnvQ0msL3jvye9YVjFPUDpULtMOr68QRbMPeHvrz1w
                      RkI8qs1VPXKJVj1Tsqs9mBLJvGY5OD0otOa8XY6cPfcGpD1M0dU8VrIePQvGlr3lCMg9TecZvXqx
                      pr315KI94tmVvSGHqT0AYeC7Yp6HvVjRM7zMGs68/JwUvSZ8Pj2gSSi7PRPIPehmfjysG828Ov8i
                      vRh91LwAjS46XZ9tvao+bT069wa9sGp0PIADhLvQzCC8aEVZPM5sYT0AoFa7PnJrPcaSCj1QnMG9
                      kDNdPBITMD0CsyU9YEXavHpus73HXJU9PUR3vcw/krwX1ac9QBA/vKRa3zxETOw8QvUDPW3WNr3v
                      ya29gq5wPcLNdD2oOwI8LED1vAgltLyzYUC9g4YvvRo6Or246Mo8Pb5MvW89wz3xe7E9LdpbvVgq
                      LbxKBBY9M4PHPWgUx72w7UA8+vhFPQgyqzyYGK29KN+pvfWpk73UHcM8i47CvTJmcD05LLY9Dx64
                      vZBxRr3B57I9lAoZvX3LS72DnTO9oCigvAk6hj0JcK49GPsdPEozOT2Asq+8ijgsPWKlRz3CA3k9
                      uuIvPYhLw72u05G9dSmjvVMesz3LlII9LBKVPDM8lL1xH5A9OpxaPdR+67zhrMY96OJavLDD+LuY
                      nhK8J5a3vdrMRb3iCYi9cKZwvchVor33Z7690lBtPe5ncz1lvpi9pfaEPTG5wT1UXqE8w5+cvUor
                      wb2gLeu8ebKzPedGbL2C01Y9uKaSvCEwqj3yCTU9W0HJvZN2IL3b7aw9wG42vLAefr2Am986uZe4
                      PX+QxD2YVRe87T9MvYAySL2o1o+9sq1DPeW0lz20OBS9SghTPWe6mD20hZs8KlLCvSJoFD2lbLY9
                      Mv+ovYA59Lxt+pO9aLGvvS5hWz0ayCa97YZ9vcIEIz2q3ZK94M+huyL8ND2Flao9AuBhPY1Gl72R
                      +cA9AHjcOcDiXzy+iYG9h8JJvRWtub1TC429jrFRPYmgiz305ai8AIc2vWyBkTz3K0S9iEqqPBS7
                      ibyAhZ06c/V/vQpVrr3ge4a7QZ2oPQHyhT3g1ia9AEgWunrzmb3An0K74wSsPVgSW7wARFc6sD+0
                      u82Lmb04yr68gMvWu+Mfij3AiuW6YF0QOy/hhj3uqzw9gKDvvHCzXb2mjiM9rMzVvPLUtr3Ay9m8
                      ezCiPZM7gz0KNze9gHHBu9xt5jw6GQW9PSK1PcaHYj1a2Tk97JmBPKDJd7shnLo9hKIDvXv/uz0q
                      +oG9WT60PetItz0qTCa9smYPPU3VGb3anSQ9O5GhPfh5rDzwII+9N5S4PQBpSDozlFm9liFaPVl7
                      tD1idHk9CAaVvAAFk71QJUi8cOR3PGWBr716p2w9xHz1PFaqqb1GJA09QvMDPY5bir1ETf88XRKE
                      PeB51bwqmAA9EYO7PWbUdD1J6pE9sKUDvK2pob3i+CU92F8gvAYDGT1tP2C9IkU5PYo6Q70RzJQ9
                      avfHvRe2Wb06Gwy9KFmAvW7gPj0QgFa9CvlmvbasAz0ow7i8tKfgPPbvLD2rVaK9WAmfvRKDxb2g
                      fts7aNCIvfb3JD1sBoC8CDGevOtLhT0zsF69ANuAuXnVrj02dQm9QBUzO1ZCMz3Mu9o81dGpvQAm
                      xrvylw09lbmSvcLhaD3w4BS90AobvTQZ9Lwxf5g9EfmQPUBeg71qo0u9kJ1vvLLwJD1qiGw9lTq9
                      vSWIxD2VFJS9sPNxvMN4xL3suYs8bNOLPPgrnby63x49obS1PQB++zlklvY8aND5vED0DzuTbji9
                      gIg0PJ2rlb24vuG8TFsZvTduxL15R549JW6MPUyMnzxaC8C93Z5jvWm4pj39nZI9oISiPCaVCj2K
                      h3q9gzinPQ8zuL1tyqE9oa7DPehqUDw30me9MgcMPYZapL2qswm9AGWzuYlsiD30heO8g7AavYJd
                      gr2R+Y89Goi3vTTRA73GI0U9qs17vS0kdL1bWb490Gf2u2BtZzvrgKo9LpJlPeYxjL0RQYE9iD2j
                      PMVmmj3VjqU9HWWVPQB6nbwj48s9t75EvS5IGz3owau9wDh4vSeVkD2KXE+9MGEHvecCmj2dN069
                      /1XEPRibKDwlq5g95LmKvdjcWjxA+wA8QOAqu0ZWeD0A+fC7aObBvcrxMT05D4I9WL01PMDc8LqK
                      cYu9nBHWPE5jKD24pdi8Ng1IPbfcY72BDp89neRSvemOwj3wnKK98DCcvfRd2bx6hZS9DC2tPMe8
                      bL2gXek74FqwPEw4yrzquhS9woZOPethlz2CaJe9BOIHvbGerz3Iy6Q8ArYHPX4JFz0AQDg4oE0k
                      O+D82zuxEow9+Di2PAwyqLxIOIK9IGzZuykVqz2uFQQ9uCiRPDowUL2uUSo923CsPZcvuD23CHm9
                      MxK6PYhYyryIDcS8KsAcPQzoqzzdDIO9ODqavMCWCjtMpQa98nUbPVgcqjzi9TE9MGzKvaCQlTuF
                      D8g9VEfTvK8Xkz2aH1o9PUCyvSBfG710Vd28mD0pvGJqJT2b7ac9mhF4PUOeyT1pT5U9LRmrvSY+
                      o70Ylq88FHP+vMOVZb2IqI08Tz2kPRwK4DxEWOE8lJSDPMI5k71NXSu9sEdkvNHaoT1g/Oa8w1iA
                      PZYdJD0XCVG9uzzMvcUugz0w0248MYbCPSvwyT2gyfe8EoW/vW/5uD2Nuxu9QPLFvWLRbT32NGA9
                      0/+tPc8BxL2Qph887hguPQAXJr0syP28rPrmPLSYmzzoI8m9IDjOOxYuXj2AB4a6OOPVvBbLq73A
                      6v+8F6gZvXSyhbxGqQu9eownPZQDnLwmShs920GqPYjmxTwA1hm5sDMzvSh6gr1v74Y9rXacPbs2
                      s72Ug+W8Ip5KPXBzkL231CK9AMVNPIaDHT2ec0o9kDwYvCKJrb3gz8476kxYvZs1jr0OrjQ9sDes
                      O2A0HTugfZW9AMX/uZ4VpL3RxI89FqotPbV3hL0SsTk9bu1JPXVimT0iZBc99L66PGAD/bywi769
                      wAqFPFfGiz1Q+ue7aDCXvGFhhD223WA9sIiNuzrBFr0XQp89IypivXDuNb2JeIY9DiFqPWIqFD3q
                      Cw09MhsgPZi2U7wf/YE9emlBvRDIoL3bjLO9voQ8PdT0xDyj/C+97FaOPDcWkj2Dfp+9snEHPQB4
                      CLsgHIk7i4G6Pciy+ryLgpK9J8ifPTZjpL0+0H49FCGhPEDwRDwiQVQ9hID1PPK6pr17UqU9gG1/
                      OpX9p70aNRU91vAKPSD5gL0wRGu9eIHovBZQWz0jB4A9GCeDvaq6bz1wbn+8Jsw8PahxizxkHt48
                      ENB3PJafNz2KWR+9c/JhvfHKnD1AwH67cKo+vAr8O72Emec8sDsfPPFhlz0AUsa7t9M+vcalib0A
                      oGA6En5KPUftSr0Adzk86NKBPOAK8TvKCy49Ca2aPc2Yvj1gSCa9hWCTPSn1yT39Jso9wC3HvXZ5
                      F73a2yQ9FSCFPYgOljw7pqs9PV49vfBUDL0X7k+9hvlOPXMmTL3gxl+9kPsAvHPSOL3Aq8S81ELV
                      PJDmjb3iaoa9PZynvRRPgL32XQE9ph2JvaH6yT0i1G09sr90Pb8jsj3nfB29Y5GePe0+I73kTfI8
                      YLfkO8o1Zj3YycK97PDwvOgfQ7yYaX48GFw2vFBJLL2iNBw9djp3PcoRfj3d6Gi9AH0nO9SA/ryD
                      pnu9mvMcPZhFSbyQ8wc8M7U6vcqTFb3YnAC8xE/SPJ2Jh70AoNm7gE4UvKDKhDvdpHq9PWuVPezc
                      Ab0OGDc99EzxPGXqir1QcJ+9b6eTPSq8tL1bC8C9WCNiPMBnaDuS4089QoatvdDJQL0Vs569I1On
                      vcUXzD0WgnM9qM+BPNdatT1o1JC9JuUhPdDcEr20aOQ8IksEPaXBjj1t+X69E9invYp6AT0g8zm9
                      exK2vUDrljokctk8AOYzufj1vb0Wopa9YMGlO2q+wL2rfsC9YFIZO8+cqD3s6s08/bO4vczatrxo
                      sY28XC4IveSeDr04KqW92AmkPFMwwb2QuWi86GQuvK4RVj0CiGQ9lpJ0PT1VrT0wPW69dDrnPDaO
                      Bj07qbW9xCyGvUj4gTyQ5US9EHUuPCrQwL2E7RG9oHIKO4MUNL3kSAG9MXCfPTAdrzs3GTm9Nhup
                      vRheELy7fog9Kw63PYi9sLx6b7K9xLTOPLDyvL030TW9xP7uPJhspr2gtW69wxPIve6zlr3tTkC9
                      pQysPVgROzxyKAw9lX22vfy86zwnV3S9sAWRO3YJPj39MIY9aci8PQPZYr2x0Yc9rtQCPf8tuT0I
                      G8S8MayePWQoDr00bYo8yp80PcAkiLxud5y97mtvPcQw9DzVK7W9TLmHvSyTzTya0r+9psSSvdKX
                      XT1OfXI9sNIXPLMydL2gZdi7z+ahPaJQLz2giLG86xijPQBgsjd7BcS9O3mzvZJMm72NeI69wn2m
                      veILUj2Qehw8uvsBvSpHBb26PzE9NvFHPWq7TD3Xy4g9fCHnPAEssz1j0kO9k3HKPfoJPT31iLA9
                      5IaFvcDjY70atqK9rakyvWxb5Lyg3Hs7vnuCvdC7HLwFWrI9PIj/PEqScz0Y/PO8m46gvaNZfr1o
                      QkA8tpmYvZxqBb1+cVw9rVbGPYB90rz464y8gKCDu7V3xL3ogO28PX6uvdIKh70AP7u9/1eBPT8W
                      rD3916m9YKmIPO2lwb3cuQK9jAbPPIBQyrpQAVa8sGaVu2DIr70AXc+75CPrPJioGrxXo1u9EC1C
                      PGBcwTugvPS7KmNwPQxE9DypUMI9RbezvThv4by09ZY8gAWCuxocZ73N+Iy9w9ZrvQP9sz3CVsq9
                      YH/oO1XXkL2dLie9EXu2PbCwfrzUT5M8tCH7PFlvoD343Js8AXvJPQ8lwT1qMgo9hyizvTP/yL3/
                      w4I9KUnLPbS40rxPPIA9YG81OwDOXb10Hew8TLKYvOCcmjwg3sa9EN8pvGg8kzwyeRE9QQ22PTo+
                      o737PbW9uOmEvE9/uT02UC49A/AgveDh4rv4s5O8wh1JPRZdTj0ozJM8wD6SPGADHL1gywA7QN+8
                      Ojyz4jxQ4FG8yK7ivNBUvr3h/p898UmoPdhTijwoBbS8lOeEPKH9kT0JD6M9aisFvareTj2FhLu9
                      7fnEPQBpPzwoGGS8hRmivVBSjb1QGEY8Bo1lPZoHTL2AB5g6wKmNvH40NT1iM349WOe9vGJ/oL3X
                      Nb09FLbmvPrtPb1jBJ8945rGPagrrTyoN1c8auQzvQndyD3Gigi92wDJPaBXwbvVVcI9WHvBPBda
                      yz0wTmK8SgY2vTwv8Tw3R6o9YkenvZoUm70U7/U8DPXNPCnJpz1nLCS9SmxwvcBZaL0I09i8LP4Q
                      vWDUijsOb4K9g2GjPd9Bwz1C3EE9qu/DvdrAPT1FR8G9cmZ/PUD7ir3Uicy8yh1tPcXvhr11hJ49
                      UHCCu/2yrb0nIWy9bdovvcPokT35qIY9jTFevahGp70A4dw7AE9dulL/VD0xuJA9WJFEPKfnnT1H
                      QTC9o5nAPTOoP71YQ7w8mLWhvcAlmTx7eKg9BqNLPY4BAT0wTTK8GupkPZieojwDA6E9naqTPX/V
                      tL2HNsg9HZo5vV3Yer2ARH+9jMT6vGzOxTzrrLc9AabIPd3fJr2+wmM9sh8qPdD2WTyT9ZM9Y6ty
                      vdIslb3YqJM8dkhxPZtkpT1Mivm8mOAHPD3BMr0ntbO99HOjvBPEj71yuj895l1jPYprKj1nqUG9
                      IPHou4OKor0wzCA8qmUovYDquzsz1Rm94ngPPbenKr0tMSO90KTIu1K9Hj3HH269zu4dPahvPby6
                      ank9GV3HPRYsUz16n3I9M9kivYBTNbyncoM92OxWvP1ahb06hoO9JXDCPRCgOjxgx7g77AWqvIo7
                      HL0rW709LDKXvPl2qD3HOra9k15qvdLnBz1KPBi9AI/qO8pDvr0ySys90Ns0vOzchrxYqLy85P/X
                      PK16Yb2AuqK9gNPuuln0wz2o44O8ADKxvVJdfj3dbZ49A7+iPaDEsbyXUbS97axfvQ1JLL32XEg9
                      JZe6PZ08dr2tbqY9Qb+5Pa1OxD1fbsG9wt5aPbJNUD3q7gG9zwi3vccUsL0uVng9na5wvccaXr1N
                      dzC9qOLDvOs2mb0wWuI7gDJRPDbSbz2pUaA9pHTnPOITeT1GOQI91QW0vRILZz2dEJG9x142vSx1
                      hjyOUaS9BYKGPbhryTzQMTm84My2vao6Wr0wRFe945h8vWdoV73yC2I9/esZvZqfh72l6YM9nfvG
                      PeB1oL0Y+cy8bAfGPIrJdr1Wnpa9QFpUPHAaGDx//4I9cJBgPP75Zz2do4I9cxo9vV2VY71HW3e9
                      t1mdPbCEeDy6FXc966OZPbCPZTzeAhc9UKIGvFg4hDxm/nk9lNKVvDC7JrxDsb+9kJ0BvQnJvD3S
                      zT496NTQvI1BP70Kspa9ABYJO9c8hT26FCI917xuvRSB+LxsB6q85caSvTPLXr2P9rW9KGOLPPNU
                      J70iPLi9EFJWvf40Oj1u3Wg9UiY/Pe7sKj0RoZM9m4mDPZKsKz07Brk9D8+mPYbhdz3SPKW98fqf
                      PWDhor1qk2e96yaBPUj+x71JwME9wF+dPHc1zL27CYE9HuCqvUgwwbygpbs8P5KhPRiixDyk9Pw8
                      IMyAO4D+pDtgiWW96Bb8vAAccjtR4b09aT6mPVaPF73o1Ek8vdWdvSLpQz0CZoG9ygdvvQDNZ7oC
                      vaC94PgEvbwVhr3pvq892OB3vCWdmz0pIcg9oBiOvHXat70oeOO8k2a9PQiSoTzXFXK9K3SlPQAI
                      l7npoKo9ViouPQD5GbosR8e8A4RUvbXsvj3GY3w9PVcnvRZnJj3TpD69HvhrPfrLBr0sypO84SSQ
                      PcpwDD3CrRE9ZzSKPYb6Mj2s6tE8bZGovTdLtz1w3Vu8WCF3PPb1h70y2hQ9yOiJvVsphz1Z65A9
                      GG8pvECBSruibwY9si8VPcDH+bwAc1296lB5vWDjnjvwXk48ZIraPBqaI72abn09bKGYvLAF/DvJ
                      Dsw9FfOZPUqle72azwe94QShPdtVrj0tVV6962yWvQdsK71s9dQ8B3CYPVLyJz3CsVw9IJj+O4Eb
                      sz0BWao9wC76ukLbYT2s/Z488MlcvSE3wj3GJ3Y92qkgvW94tb3KPmK9gIWGvTD8ub3lU5K96HgI
                      PCntlT20TYc8M1R8vVUvp70ayBS9uLSlvRKFSD0qREW90jIgPe7RTz1k9oS9/d+JvUUywr3uVhQ9
                      MenHPVO4ab06MQ69hxbDvfd8wr100PE87LTYvKAjlzv67GC9tGX/PKhFi73jUEi9LnQrPdSYnTxX
                      XWq98lu0vSUBlj3Y5SK8e0W4PayG5zwY0Zy8pbmHvaQ71jxuO0M9vZS1PbD2YjxFyMA9onRBPXdE
                      H71B87g9R0srvcJvJD3wmQy92vFqPSjCoL1osxc8crVQPVTAtzxibae9lAkCvQuUt737Zaw9TB+L
                      vMAufbyXFXO9N0hlvb1VSb1Cfj097ImQPAKICD1o/ea8hFKBvQ8bu73KcJO9WP0WvBClnL2B0LA9
                      ag4bPZ27xz2YHjs8rlaQvdCqPTxrz6e9qMVIPHLRfz2Ec/M8eFCivHf5mT39Y6896G4SvAxNjby9
                      bFy9YJwqvRqGbL0+2k09jaCdPa46Jj0uOXU9/SpBvThOrTzjZry9YwhdvWYejb3TeYs9coZQPWj2
                      BTyoEuS8UsG1vQ2cmb2iFRY9F0AovQhHljzpZZw90jxWPbtkiz2HRXK9lVGUPYlKyD21B429aNsd
                      vFoKd72ovnW8wzy2vdB/AL2j97S9IqGPvUClB72YLpm9oHSXPHi3vL1RoZ49PVwkvVRbi7wqd4e9
                      8rYgPSAwxjwCMBI9wKmYvdVeyL3ahEY9mAFHPKCx6LtysiQ9KDe1vZMAUL2o5bS86CHCPNp7NT21
                      45U943uZPUq9b70AZ3K808JOvYqdTb14W5297bKyPajQrzwpE709QG3Euu38wz0heJY9eB/OvNqC
                      oL0orZ08LTBGvVEXvD223l09TyGDPYLnIT368xQ9XWtnveTH8jxf/ac9CnIEPfIBqL1QaV680LiJ
                      O8lvqT37wK29KEuwvRAaPr1gvSe73n9hPSj9QbzJGss9DftRvWM7pT37XZs9rYNivYA98rq09a68
                      F2MzvbBoOrxpAMY9wfisPWpcN71gz1i9WNHAvVQ2zDw9I6a9wEacvDfBRb2qGgu9YS6WPQDWir1y
                      W4u9YbmNPfN+Ob2Vn5C9ykO9vU2ds730uMK8qDASPAAcKLrASww8tg91PXUNvT0o/I48BuFKPZbm
                      DD3pKKM9g1fFPXNrpT02lhM90d+pPSBK3rxlyoo9htoOPcxyjbyofIy9QAGKvGT+h71QEwG87L8L
                      vdsosD3Ymg682FSWvWwAzTz0nNs8Z2m0vVP1mL3Ripo90J+jvXNTKr1oh4885h0+PYx6yrySr8a9
                      MBhAvex5kzx4csy9/DLNPKB7bTtD5Y09bJf0vLdUpD2APXi6esF6vRIZWz1gdOa8r1+oPZKrJT0/
                      rbQ9ANw5OrrBrL3M1qU8aM05PK11gb0q9Z29dNDHvJRZmzysp+c8QSKzPfSsmDyKNmu9tSyLvctz
                      lb0VT8S9OcmVPdTE6bzUtra8/5bAvXnmgj0Bksw9Gj0+PRuak72b/L69G5+BPWoNYD2I46C8W56j
                      vUBvj70A8Bm55QXLPQMpVL24pJS8ALBNvDxM+zyM1am8xXSiPX8Uuj3Inq88SEfrvEXftj2Ahco8
                      e+mYvQhXv71K11w9gL6JusdHpD2QGXK8IqpPPQA3ubyUNqw8UJhpvbVpoz02mpG9qf7GPaN0gD1G
                      /pu94qeZvdjL2Ly6cLy9f2zLveMXnz0jRJ+9wPM9PAbpRz1eGFo91GHivKDAm7v8d948aVq6PezE
                      obws0Lk8YBGXvdDaxL1YtdC8BGPsPNAPlrtzVTq9/dxhvVrNor3d55Y9AKRCvQBqiDtjNR69cL5y
                      vFMvWL1GL6a9UEWMO4BCXLxXiCO9ATHKPXrmVj2FBa09hTCWvTGBgT0LhYA9AEURumz6pjxscJY8
                      AD7nufKiUj0PtZA9sAaFvTrpar3QxkW8TRBdvdjYrbxg7Qe7EwcbvRQj7zyYm4+8kkZEPUzR6zxA
                      6Ac7jSPLPcj9hL3YbBU82kWgvTLJWD0o21s8AvImPdf/lT06fDY9FkNEPWDQ9LsHaHm9AA6jO+e2
                      I71NkrC9FDzWPPpqZT2sBom9HATmPLqwSz1XKVW9DDjtPED7rjr+3EU96OpfPPJSpL2QD529VDeD
                      PGgZhr0ANaI5DGnHvLh/rrxAQFa8QptMPQqcCr2m5hY9QPRWPAVylj3ySwM9qjIuPX6BUz0AQOU7
                      T1PMPWLZVj0V1J29WrlUvQEUgD39cGK9MpEiPZkqrT3qdma9QG7zvFAMfr1ymEc9StqIvYDbTLxj
                      dzq9J3hCvdKLDT1S6wc9gLDRuqx9uTzked08mc6YPb/Miz2w6fE70CETvKhDLDyg1MY7ABtnvYBW
                      Hbrbc8i9W0usPcKmTj1QtUe8vTBlvSRR4jwlhsg9gynDvcI1t73ygEk99/IqvZrlv73NE4A94H+A
                      u7QMtDyVJZ09M67GvV1Gq71ofA28YH6HvHQj3rz6ZYu9DMrYvLFqnT1Uj5s8UOYFvCgOO7z6u3Q9
                      cvQwPXJahb10SQ29yrdXvXgetrxWhxk9MJkQvaWVnT20sbu8xnWqvfTRA72sSdU8eAaxveoAFD2z
                      7q696DIdPE2ff70ALL44IJ04vV+quj0qMkm9RTy5PQC0Vzk3+oo9DNv4vC4aGD0CJjw9NNumvCA/
                      D71A53y9QzuiPXDZZzwHtsU9qObEvaPfX71oVZK9Y7O+PXRK37xtAMc9QNAvO8JmOz1aGjw9QCLZ
                      vGgUcLziF4W9SFvvvOpfY72mcm49F2JRvbJdTz0IWZW8h9DLPWUClL1mMZ29pjYRPeSb6Tw6nTq9
                      /xOhPROwML3CkHw9QkdcPa38nb2BwL49gK1TPNUQzL0TaWO96E5+PAdgfb0iaMa9LN2PvOp0TL1A
                      Ijs8AUuWPQBvsr2QKF88DOmVvKyQ+DyInJi8CogaPaDrjLwoR5S8KmtvPcmegz0gz4y7ba9gvQD9
                      WTrSLUI90CU0vNBY3zvFjbM9dMXYvOSw9zx6dic96FRPvCKioL3wejS9AADWuONbPb1AuZI8UisK
                      PYDvjzuAhAA8oGe/u8fpxT3JmIs9QIxovMqjwL0Emfc8sFVyvRDoebxI3cC90DJuPLq7dz1RP7w9
                      n2TIPcJKID3AjvW8ALwMOd3UPr2A0ai67ZdovSgjbbxoV1+8OsYsPWVHvb3sKb68qNbKvXBYy71U
                      iug8IvoOPbL6MT3HysC9YGvwvGHLkD1I/co8TC7evJecJb1CTho9KB3pvHc2ar2Y+AQ8sB7jOzjK
                      uLwj0y+9BmsOvSxSxbyEnRK90EnwO/CCPL29gSO9hN7WPLCQEzym8Ww98W3HPdLBdj1ATYQ8tDHq
                      vEpRYL2ME4Y8MMpovOPZtb0witM7oF8vuxhCtb1DorW92lUrvQyS57xDoLI9s0u+vVk7oT05LbM9
                      rCHFPMvflr3yFrC935q5vXLMFz2p07M90Ee/uytiu721SaE9wvGivfBih71JzaY9lcCBvStim71K
                      Bna98zlSvWP0sb1A81A75TjDvakNgj2Blbs9M8KpPYtRwD32MJC9JOzPPHn2lz0orp29tHWiPF2X
                      jr15yLA90VPLPdf1yj0q4B694ua3vcJqOj3AYgK7SWjAPW5yGD3YBhI8Ya2SPfpjQr2JW6E9Wisb
                      PaBbWbtnloQ9hj0mPQAOvDr6HC69U5PJPUD9JLxMaKS8N3i4PRDpKDzKOIK90iZMPRgHSrzgJfa8
                      mPgxPBAcZLxuhRs92EtEvHiU8ryDmbo9XptsPWBJBTuQ7UO8uVmCPcAzW7yCaaK9wKKcPBAuXr0M
                      3AK9MwXMvRoURL1pbIw9aGMbvEoUMr2QPjA8ABxMO0IcBD3sKKM83d+AvVazq70ArKU6Yk2fvRtn
                      jD2tnHa9kd2BPdDi6ztR54Y9cbSFPYAqEbzQq1m8DEuNvMhBhb3IU5880AbDveUYuL0292w9A2XI
                      vfgdlr3tlXS98nayveBrPL0XJ4094oMqPRixWrzYsmA8EBugvVgklL1t+zi9t8K1vTddmz1cJgu9
                      bX+NvWBMoLsaPwO9qoyLvWBBoDyLbsW9UnIaPQDA0rba5mK9Y0devYoUcr0v2LK9hyqjPXvjuj1Q
                      OfW77W62PcxJ5LzAkFG768XJPd4zSz2sfIU8XbkdvSGsvz31k5G9pcOqvVaHkr0sWse8+63EvcBR
                      E71nF7y9xeywPbYRMj26ASo9KiI6PdJ0fj0EnOk84BmeO4r7Xj1e4zw9wGiFvfArGrz9wYY9Z/SM
                      PalSmj20+Yc8gqBdPSCPXr1g4wU7SDi0vcdpNb0+6pm91sBqPTf3Ur1wQG+9tlw+PcCdLDwqXFE9
                      dk0HvUnsgD0oSn88aG/+vD3Oqj0yvGI9DLu7PGPguL0Q9qu9XLkIvaRe2zzy2IC9RoSqvdfGwT2i
                      hhk9Yq55PR8MlT3hYYc9/c2MvQJ0VT2horE9ulxlvSimDTy0m8Q8dP6NvNCSab3yNmw9mqpbvYAq
                      Abzdp8y9u92qPS5iYj1sodG8kqIfPYtJyT0ICcM8Ct95vbUsxL3oJkQ8kJQXvIzzu7ysUOW8sm54
                      PbDjdb3SfRo9g4iuvdoke73Afla7IMIvvQDeHr3xLq89CJ6FvQZSXj0AsN87r6bLvZraKb02bQs9
                      UoFGPfjqk7wNWKK9hmo4PVgkwbyFqr29Vx5HvWoeAT1McbM8IO5WvYZ9ej3CMiI9sOdXvS3Ofb1A
                      i/86GWXMPcp7Oz2JG5g9EqatvYBUPr17rcI92GL0vNjxt72qAF+9+PjJvOPQQL23w3q9ILbEPBuH
                      rr1Ud+C8XdGHPRGiuD10D9w8WdSNPZrSeT36mSU994yoPTCEa7yQFXG8mR22Pb3fY73zZqE9tk9e
                      PTmziz2iMWY9IBGovG2Xlb1d+UO9uE+svFB7nTvoXXc8w/xhvT5aNT2RqZw9TN/avKl1nD24WMS8
                      61i6vUjx27wAD2q7TPTMvENzcr2g1my92SuHPYA9ljvgFo47wvx3PYyGg7yNlYi9kKNavbNeV73O
                      Q5+90BZ9vFlukT0S+8S9Xf5NvX91oT0U1qY8Ing9PZ1SXb1wzkm8z0eNPc9TyD1QzX+9UrwXPdPO
                      Tb2SU7e9OppcvWx26bwAJhY5XV2EvTCLuL2geI+8ldrAPUqETL2uXp+98iCfvQDyADzYWFS8lBrz
                      PEXjqj1T75m9IjF0PeyG6DyQ4Ck8wNwhvB43Kz1o3jw8ZXyLvWIuor3Y97q8aUqzPTkthT0mORo9
                      wIdbvYFKjT238b09sM1GvGVKyT2b4aO9EAU7vDAYUryHGbA9erMKvQtPvj2wUB68xnB9PcJ4az34
                      a7u9EFc1PFpRKr3vLsS9oWDBPaCZ+rzYXGI89FSDvEBsSbyoKSe8AOb8vFSmF71An/Q6+vtjPaC+
                      jLwlBKC9EGACvZT+i7yAGF69ZOTbPIIQVD1FlMK9/bJ+vVoGZb1mw3w9Cpwbvf3Sxr12GSk9YDWw
                      PEhuu710R4i8GtypvZj1yjymvw+9p7N2vXtGsj0CrCc98pNAPZLSIz1XlHi9Hg9HPaC8DrvTrm+9
                      vex+vd3gqT00S9+8Ag5PPbdNcb1Myc88luULvZZMfj3YNBy8N45tvR2WeL1Q8kw8VB75vJdQyz1U
                      CJO86reVva2LIb2pNcw9oBZ+u72gH72QS529AFT/OFRP5TwwYDG91BK7vIZ3TD0zqqS9Grlpvd2v
                      Ob2A17A7Tcd0vS1Fj70Acui8Mml4Pd8RuL36lKi96XjFPUgo8bxA2Uo7oA6evBW8tb1zcqk94UKb
                      Pf6HFj27H609VKuVPHpshb1NUku9wHyZvOA5t7xB9ck9G67CPSgvLbziOxI9V7Vkvej+eTwlj749
                      j6uZPRBXCrwqVG29AFAtvBJOwr355cQ9qmqqvYBdsjsE2P08PUjFPWgCDTxghSu71OSYPDQtvDyQ
                      hWU8UNBkPI3rX72Aj8Q78KSevQhT/rza2wm9ANzBvHyq5Dzyp1s9iDKGvVeJzL2dQG29QNC+vNKM
                      fT2YgWQ8qBwEPMcciD3MWKG89TKYPWpoPj1r8qu9qOYjvB2onz2KHlU9ieODPZjlDrwo9Yi9Kppi
                      PRvLoz1ky/E8OKzpvMFTvD1lf5o9IOPPO2DFI710cYu9GFctvOArX713CiS9AIBRtquNlT3TtZ49
                      CkWOvZzUhb233Dm9484yvXjOsb0Dcpc9qcrGPYZObD1F+5+9tsIAPfONsb2g5JE70hk0PRAsyb2K
                      wki9UrtlPSQ66zwXnMe9uWrIPcv+lb1mNYi9wzS9vfRCvjzzEB29TW2RvfZdWz1QXno8dSm8vfpN
                      Dj2moCA9GEnIvML+MT3UlLU8dR2NvdwPD73o5by9zJAMvXDBBDzYNTw8mNwRPCBd+jvjVy69iLeV
                      vIPfvD2meRW92mlNPZSPsLzBCJM9oHW3vdHInj1ASIS8tnpTPb/TxD06s1q9cAt6PCChmTzmyJq9
                      EC5JPHrMn71yVSc9vdydvYCQGby/0449SvWwvUAXCjx6cQ89Q0R+vbD9cL1fLsW92HrHPPXvv72v
                      U789RxWQPVjxMrwKmZm98E47PPFIjT0/8bM9vjc5PRvRhz2auTo97ZqWvRIFUz1ttX29Q7jHPaNP
                      L73HyHm9YcK1PaBvMr1AQS69xCX3PFy/5zwmfRS9F28dveakUT1AcQs8d5IsvSO8nr2UXva8C6/G
                      vWocTD2W1pG9SWqoPRqdfD3KhE49ENA3vdhti7xKhx29JK7+PNvghj0jbLI91l5TPYalkb3XHYQ9
                      yjISPXeRVL2Sn1M9ufmnPYCN5bqNHEK90LhDvH4ulb2Y/6k8IbfLPQCwtzv8HIe9T4CtvSAGkzx1
                      08q9okgsPYpdEz1APku92rlMPWu8tT20grc87EujvN1zoD3cCxS92OQCvMzEzbxXXLo9aOqRvXIN
                      Pz3q+4S9YlwXPUAAfLzjIcy96C3rvADMaDtxZYU99vwzPWo0T73bzI29xLOCvZDILTxHx6k9Gvxm
                      vVNmO72i35+9hCIXvVH2tj0A4+q8YAMRveCHNr0qoim9IGR2vYACebxKkhY9UC2HvRYbbT1QLMK9
                      M2i5ve7zCT14NuO8gNeKvXJ6TT3Iu4q9Ne2hPahSrDwAxDM6oJytvWokNr2qTlS90NYVPKp6Gz2n
                      bLO95SuaPWiMebwCenI9oEGauwOtpj16ywO9QUmEPZwZA736ByQ90Pbcu9A9k7vqFVM94LCRvOCT
                      hjy4xYO9CqSKvaAfhL0QPV68QLC2vRsGnz1rD6u9RbujvcnvuD3w7J+9MITsu0A8Db2/ZYA9gti3
                      vSiB8LyQsy28c7C4PaCYZL2ggI88NEyrvJijOby/f489aNddPMq3JT0lc5s9LtlEPbDSurtqHoq9
                      OffKPb8Ltz3ozgk8QBZPuzXJtb2c0eg8qVm8Pbf4pz27NKM9ePKdvAwF6bxNCUO9GgtWPZ2zhL1u
                      nSU9IvMQPWrGib1hJKM9fxStPWIacT2jZWG9/37MPb0SHL3h1Ig9SpNyPYYHYz2YEUS8ks9WPfDl
                      Wr2JEbM97pgLPeAx5rzE1ek8tLXovPCfNzyj05m9GCaYvbA0dTzKKm29w/WmPSg3XTx6LVi9AM9s
                      u4v6j71d15I9wP9svSyIrzxho689GHTNvMVlyT0prp092C6XvSFqrT3YCTi8lMfnPP7iRD1FM5E9
                      YOWjuyU+mb3A6Hi7SPDOvNCQY71LfKc9wFqOPFnfvT3SeCc9gpNhPZtGpT33LUi9+s5TPWJqEz2+
                      5C09Z4nBvcBKJzxo/pM8Mv8ePYyDoLygF2M7/u4OPVgFNDzY8A28oHiTPOdSM72Y2pO8JXWYPcTe
                      2zx/Rce9En4uPTFEmT1VkKy9iam/PYBx/Ts0NN68klmYvV2enT2yQWo9Kn4APWAZorznMog9mPzF
                      PPLsFj2ALcS8dj80PZKNNT2UsYS87eojvQDPRLrRooI9/pgPPcwFmryilgU9AOkmu2Uoq73CMng9
                      HbiqPULWMT2GuAG90Lz7u1BXHb2AXVS848epPWKGZT3tqbC9ydOlPcA6Ib2If6e8MhdYPdIchb3u
                      zCA9EoDCvXlQlT3Trru9St6OvViMkb2x/Ik9FNASvZbxMD1NA649KqNCPSPkN73MIf48cnYiPWye
                      ljzaLFA9Q0YdvQAEvL1LvLO9g7o1vWh1jb2wjnI8jhpePf8vmz13Uhu9B46APR3vvz04Bt28/iBx
                      PdOApT2IR8E8Q+tuvfd9hT2VIb89GMMBPED317o3Q4M9MtKmvfJpej2G6wi9QJsAO024Lr3ACrG8
                      92WcPQOjqL1D+6q9wPZhux7dbz2sGIi84mOivXkjkD24ZrO9vnpMPfxegL1Jw4w9jKcSvTi9p72h
                      /LQ9jPWOvIxBpjyyHhE9cCwDvSwD4DxgUV27tyeUPTpONb0Ltsc9XeeoPWDsjTx6r2I9rsUiPfUe
                      oT1DPHG9KncKParlaD1TtnO9xqNvPQP8cr1XkT29emIVvfDCrb0rScQ9BDTtPEqJU71u0HQ9anJ2
                      vdp1x724w8u8IXGRPZeQdb20itM83HARvV8fvL2N25+9GHwbvEeotL3+Rno96t1lPaxG5jww/2i9
                      gIagPIBkf70YZwM8/pROPTp7Gj2WTjA9s62zPRhGrTwwXRw883wevZiZBzz6PxW98+MuvXKDYj1r
                      Ipi9xRKnvZq2YL2HhqA91KGjPGDCF7tqnXe9Nho9PYOCgD2AZNS8bA2JvLZ1qb3yVxM9l4spvYKQ
                      kL14g6C8w/3EvZJay70rL489IBzFu7rXSj0rboY9WYi3PbpUej0DB6C9/3K/veL2MT0aQlc9KG6u
                      vaD6yrtylsS9E3ufvfI3KD2qnUW9fkELPUGSwj09PMq9/uCTvZXgrr3rm6O9bL3rvKB8qzsIu5Y8
                      iLDXvEBlZDzNVTu9xFQHvWiVkDysqum8YjdAPbbdBT2ioF89WDO8PLPSmD0kI/M8yvo0PSOtnr06
                      tFu9GPFEvC56o73DOIE9hpo+Pcz6/rzQwkS9amR2PfzthL1QbeI7gCU9PKz1jLx92oI9hjqqvZ5M
                      eT2wCxY8cJAPPKw2hL0FhrU94GetvIK/YD0a0TK9B8aWPWNirT0Afkq8wCJ6POh78rwA++S7oD5I
                      u9Q30LyAb/Q6etd4vUD1IbsARG+76tQbvcD/f71Tg4U99Z7IPexG3DywQPI7bbPBPXp9Sz3iZVs9
                      QCJQO6Tx8zyqML+9wUHHPRp2db1MuYA8jabGPSNpRr3HzVy9YsZ0Pf30mj1AAHm7VHyyvLBnjb1C
                      fUk9qXm7PUAqbzsoi8m9tKnUPLDPhDtrv4I9IbCqPbAqoDuN7IQ97OfSPIZQBr1bXJG9WzKiPdbs
                      BL3i/189aLKRPEKhBT0Dab+9dEfoPNB1wL3X4T69OIflvAC19rxk0uU8YkMdPaRq8jyhSqQ9MNAS
                      PAP+mr3Wo2w9RPEIvSjZyDwb3KY9HPAEvePgJr1A4J69sK9NvVaqRz2zxJo9qO/PvOitjTwglYC9
                      fF7tPJFypz3qim49IHOZOx0cwb2AOWi95daFPYoph73IkYS8QDcdvBOmJb1dclS97QRGvf06tb3C
                      qgw9zJaUPKr9Mb3DIqU9qRGTPRDyaTwKQxm9pusmPXBiPb3O5XM9kKIJvDbJBT0MZbI85znCvQp7
                      Rz0kdRi9VN6OPOoUJj1C2349h2XGvax1Cr1lC8Y9qCABvJqelb27GqG9pKGDvVnQgj2AF/y74ImU
                      vQvaqz1D9bS9KGghPDexbb2yf4a9upFNPdBfADyggdU72gdIPV03wr2goCa90PpkvHC2ATzUfIM8
                      kGAEvBE5lD2eMyI9nzG1vevLxj1Db3C9lGfCPBjKKjwSxA893johPZBuXzwfip09DfTJPSjDDbxG
                      mm89gOzpumDM1rugB1q7gOePPNx3h72wM7g7LSBTvcLqPD0Ih8A8wOc+vcCkGr0YW7q9sOEJPKOU
                      Vr34caI8bd1zvTArTLyzJa69sFWlu2DeO700T/G83/e9PXTmwbwmzZy9qnxQvQDXaDpaqS49AXa+
                      PUCgn721TMQ9QxN+vahryL0AfwU7qBZcPDHQpz1QrGG9KBcfPMAbIzvILpi9BbyRvbT5pjwgAWa9
                      MiUrPS1GOr1pO5s9EM1+PL0slD1gImA70jFtPZ1ogD0DQC+9XyC0vZuVwz3AVw47tArMvOvMuL2K
                      i1E9r7nJvW6FVz1pFa49aKvkvJT6xjzCIEc9WTWwPYxniDwAGOi8M4IhvcMWKb3uwFU957kfvSNf
                      wD2UFpO8TZ46vSoKaj0p/IA9vcnDPTB9pzuRfcA9ZdiQvWqsRb1kJIG9nEDNPAbeej3iXEE9GFkK
                      vPQHA73w+US9GsNzvWNEJr0o7EQ8wNCEPB3Iyb1QqWW8PRegPf1nij2AS8c80JcevGD9AjswWF+8
                      1G/NPFfoeb3YfL+90C0QveqaaT0qjjm9dJ3VPMDRVTxdfh+9gusDPY3frr22Qls9QzJGvSPlY73s
                      kbs8eBCGvLgrg7x9XzC9AN06vAhXo7wp7709mrU3PTA2fzx2sxe9dwfKPas3yD0ZCJk9ApkBPQ3F
                      Ir0hy4I9zWOqPXtWtb1/S7U9ZFP0PDpZFb22m4u9aq8OvWAEcr0QqlC9VseWvXKbcD2h0aI9PA3j
                      PMxTzDwDKjq9RCrWPFOPcb0NpIS9tHrNvFDPVL1wO0S8bTy9PWDP7Lu3PMm9ABEZOkD1B7yWKAa9
                      NymIPRB1br0wi9K74xYvvaDtBrugHmi7eISpvflWtz32ewI946a/Pe6slL3mrkQ9fdDLvSOPRb3z
                      SZM9JuGbvRbjMj0jX6m9dC2dvIbpjr1YWsW8s140vQ8AhT3pUIw90fWFPSmtqj0wkkm9KTuDPdPL
                      rT2r4489T8+oPaRVCL1+Ao29MHzvu89lzD2q/5a9QDFuPKDknTsNTjq9sbmuPVJEKj12rRo9sj8e
                      PWZppL0WJ3E9zUdFvY2au71K7y69kpg7PenZoz2AIN86yDHOvGLFHz2Aitm67E+9PIgMhbyKnxI9
                      eCagvFdbLb0mHzQ9kDxsvVaIg73bl7c9eM7IvIeVMr0IALU8XxGPPRCFeryBD5Y9HgZKPRdCr71g
                      61M7ggQePQDe97z/jLo96B98vDKAcT1lvLQ94/hjveDez7srf5K97AzxvMB+UjuuJHM9cWKkPcGC
                      kD0U5Ae9kn0zPcwwkbxQFry7RRGgPWhYZjzfrZY9HyK7PUa3bD1tS3y9PvIxPUPLar0sUKq8LFMF
                      vWbahL0QnLa9+S+/PV7DMD20n/W89faHPbBIDL2wNMW97uGAvTWIiL3N/0a9+yuqPaCh6LzeT6G9
                      INKCvI3aQr0CI3o9o1stvZohkr2xTpU9XTBhvRgQgjxgxoG7aC5aPEBEyDypyo89nhVlPbDloL2r
                      SLU9I3KCPYyU47wdcFK99pQxPQAfo72JbI89KH+8PPZCjb2oL5A8Va7CvWwz7jzQtW68+r41PSZx
                      hL2Wchw98sFMPaDHPLs46b08G1DJvWcGOr1tzYQ9Ta+dPfQkzDwYryu8gjKRvbT29zwdYYG9nTRG
                      vQK1LT3s+gu9zeuQPRvtrb1av8W98kBiPRyx3zx0A908FEqOPCyw0bwZlMc9a9i/PQbvID0A6qI6
                      kFhXvaDwjrtUoZO8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTQ1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NjcyOTQ1NnEBYS5kAAAAAAAAAAj7kjxWBzU92InYvGB7hTsbYbk9RuknPT7jjb0AQGE5
                      /9KdPVsvlj3ggqu7AQuvPc/hrj1QhJ29q4yfvSzDuzxwLpS9LLbavIDIiDspmsg9wbShPaANljxA
                      MGK9o1F3vZFCyj2YIpc8RiYSPXAaF72hi7w9mltNPTgTyr3CNHA9Sr1YvdC2K712yFY90hJXPSgf
                      dryI35+9r069vTjFq72+nz897LjUvFdoxD3AOEW9TCCcPNNAwD2AJow7xMSAvVIUdz2aA5W9+MXF
                      vYdQgz1t3Zm9IRWJPSZLJz3VaaA9pQqzvSuRmz1QTYS7cIZJvHAVLL3qOyq92F1hPEx+vzwY1qa9
                      Qz2xvYCXozxtIKu9OuoDPStJgj3LuJo9wBdJvAJazL0C9Us9dBfLvIpZvL0w8LC9s3hNvaMsuL1B
                      VJQ9JmcVPUBf3rpyuUA9S0yfPaA99zuYNa88/shfPQD7STrg66W9W12HPSi+r72jFnm9eJOxPHzq
                      6zyQyoe9MUSuPektkT201Is8oNC4O7xeh70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTUzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NjcyOTUzNnEBYS5kAAAAAAAAAGr0Mz2gRXk7LkcmPTgakrzlY6M9MDdNPJCGcb1AhdA6
                      q4u+vZAWRDzCy5S9J3BtvaFBwz3nS8M9o1K1vRN7nT1gUkg7aOdzvMa4bD1Ctb29QjZqPX8CnT15
                      isk9xQqZveCEhL2h1ak9gDtsvfofY71J1Lk9mNJFvBDJbLwAsyS8gOyQOwI2nr3P6p09Nw6yvVX3
                      gr3DGKE9xR6wvSielrwzfm+9vUmvvQ5AQz0Gp1U9j0qUPVAiDbxZzaA9KHiIvdDFH72S90U9AouY
                      vUChmLrFwJa9aInLvVdXR713e8I9rQ5RvSZETD3+flc9QKfPOp7qVj1gXo298Mo+vNFspT1AK+m6
                      aIq+vaJsv73Y/jy8cLwZvR2tr72K50i9EPY5PAAd7ryYjoO8cpWEvflttD0XCje9oi1oPT6xVj0g
                      J3i95HXSPBbDpL3usTk9FJ3WPMBiYzyiFig9nksWPd8xy734Wou8WTykPeUvjj2osSO84rufvUW5
                      kT3tCY49rQ5dvSh9ODwAk847IH93vegkRDw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NjcyOTYxNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NjcyOTYxNnEBYS4BAAAAAAAAAOjJtTw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        t1yoOwCi3jtmdrY7Zna2O9LfnTvTl/w7vMPRO7zD0TsWyuA70SwHPGLvyzti78s7FsrgO9EsBzxi
        78s7Yu/LO1oJPTsyt0c75N2yO+Tdsjuac4M7VU2NO8cU5TvHFOU75YasO+5Lzzs1mdw7NZncO+WG
        rDvuS887NZncOzWZ3Du+1Ko79mO3O9lxvjvZcb47bXv5O1ztCzwmGgA8JhoAPMdQFjzocyU8CWvm
        Owlr5jvHUBY86HMlPAlr5jsJa+Y7vtSqO/ZjtzvZcb472XG+O217+Ttc7Qs8JhoAPCYaADzHUBY8
        6HMlPAlr5jsJa+Y7x1AWPOhzJTwJa+Y7CWvmOxWzMzwH5Qc8ENAlPBDQJTwooz88Wo3vOzI7EDwy
        OxA8RJcGPGXR3zumWhQ8ploUPESXBjxl0d87ploUPKZaFDzdC6A8C32XPGQlKTxkJSk8aChmPOwc
        VjzCEQQ8whEEPJRcLzzK8hE82iUJPNolCTyUXC88yvIRPNolCTzaJQk8QBoxPET5JDzp3B486dwe
        PA2K8jt/N9g7+CzsO/gs7DsjRsk7B9y2O5dNAzyXTQM8I0bJOwfctjuXTQM8l00DPEAaMTxE+SQ8
        6dwePOncHjwNivI7fzfYO/gs7Dv4LOw7I0bJOwfctjuXTQM8l00DPCNGyTsH3LY7l00DPJdNAzw=
