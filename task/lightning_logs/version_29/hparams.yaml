N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MDg2NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzUxNDA4NjRxAWEuhAMAAAAAAADRZJI+23WePvAQmrw2xfO93xuHvpODc74A4hy97sEr
                      vp1SlT48fs891IqIPeuZML6oFRS9AM5LPc6EFz4Ke0I+kAKfPCbFP77mtEU+CVWqPgAH6j1yiVM+
                      S2devljfID1gaRA8WyR7vlOEYL4vN5g+AFhXOke+pz5pY4Y+GJITvQaeSD647z+9Mrk3PlgYET4r
                      d58+goOqvgYyiL5rWp8+smuUvtOriz4g1CG8oKXyPW1soD5uBgK+CnR0PiaSHj7QRA2+aOkqvYsy
                      CL5Gziw+MBoHvti2Kz1IeRs9MFDEPUuJU75uH3I+i4NHvixsyL3A9bG7gE98PdAxir2SK3U+WEFW
                      vSSEsT2uaKO+2u+JvqITLT7gRAe+kTCQPtq0pb5cQbs9a7qBvoOFpL6OABg+sJWmvWbFKL7lYYs+
                      5q4XvkpVHT7Aq9m97KXcPRzO+D1gGIa97gxNvoAahjzwuMC8fIzUvcwVrT0AQ0O9fkR5vqwfiL7o
                      kGq9gilNPjstfL79l44+ZuDGvcfhnL7joRS+cFhTvuvDEr4LDgW+ULuZvpoAPz6SHgU+RBycvQ5c
                      pL5vGoA+WGRmPbavnL52pw4+Um5iPuPxAr57zSa+xFSnPRZHDL68SpW+K0Y9vtZEq71iYGc+rFWs
                      PQbpzb3y02M+5gr6vep/Nj4wdtw8vjQNvuBLTzxkqfY9YmlvPpbEEz4ATQ8+MEHNPUqTWz5TJXS+
                      MvMFPowwjL1YuFU90auYPpgSIb0F0Y0+RPyRvYA3SzvWIVI+KJAwvqreiL7SBDc+m8cRvkv3Cb4Y
                      Am++Jq3xvUTe6j1zFos+ELj+PCMSK74CBVs+716HPqDhKTxqm0M+MrZ8PmYJlr4KHXc+hgYGPnDH
                      /DywfOe9DPy3vV2AkD78AMW9+lk7Prl3kT4WHBW+oNelvjMcZL4HgKM+nB7vvcA3hjuKIXw+hjSM
                      vpaQkb47GYI+zuh6PogdLb5wA4O8q8ODvrxI7L3wPLw9CIeGvhS9mL0zrge+xgV8vgAB+DpAT7A8
                      c/wAvgSl3z1syc49VndSvsiNVD2gTz88SFFRvvZIED5WRBY+4h9MPpviFr5utl8+kOqfPNsuBb6U
                      8oO9SMM8PVMhYr6ehEU+8kWhvk4JQ76aJBM+iHU4PVuAV75ZRIE+Qy5UvrJOOz6bPhy+rrmGvo0J
                      lT62azA+E+ySvsA4obtADYO7NvjxvTZcO74CRGA+DNiXvYohOz6wYoi98EeVvmBemr3Q19S9vXyM
                      PjNFTb7Gjza+sB6CPNyCrz0gpXs9oAdXPIDNGTulAJs+c8gKvlB5qL1AIo6+gAonvl8oiD5GMyE+
                      YG5kvVwU/j2c6rM9YKrPPexzzj2Q2Zg8AB1zvGabMb6gRiq8xz+bPgC0aL64jSg9IxOKvsJRQj6c
                      7I09E/BJvnDikb6ajEA+4LR2PSCpSLyAXeo8VvdcPrZRHz7Qvre9JrQ6vijWI74kkIa+uf+gPsZo
                      Hz7Eo5q+i3eOPgZAFb6uQZS+5jhkPkC/+T1WtQs+mPtlvdjcjL7xTqc+0jlwPsYQcD5okU09GE5r
                      vgChejzOyEw+/VanPlK7ez6qGXU+TwOmvpDoq70qYE0+UCExvoNgSL4zwDu+iFIQvty/ib7QNR0+
                      YDRyPdbfB77gdSI8+xiGvjxB8j0WI0Y+pOC3PaJXaz7ggqO+zK60PcC/tr1B65c+SNQ4vq0phj4F
                      IJY+APXjuwBKmL7AP5q8XJWRvfC88by+uTY+4MhSPOiOf74AeBE55OCbPTD6s7yhSZc+0MG1vApJ
                      TT6U8rg9PziPvmCkELy4iia9+hRAPvD92T0iEFY+OD52vgyM4j0hoKk+bvE9vrAdJD6EdoG+C26l
                      vjyAjT3AxuY718iSPhpkPz7ggoo9gNh3vlGrgD5YLDi+sIP+vW5YMD7jRlK+iBIivlq6gr6N4oQ+
                      7ISnvsCFTT0AzyK8gGogvnZihb4kXPE9MHzOvdT3k71kcp89wDXxvX1BnD5cH/+9OxlovkQFmr6Q
                      XkC+6EgLvQhTVT2PSp++avw2PgoBMD4Gpy2+WNUAvkq6Nj5wtz6+iMxtPfvwPL4AG9s6oNO/Pbrn
                      cz5AE5c8yDgBvUCP/jtIbmO92GkNvdzO4j2AWVG7qIw5vUDMjbs8ANa95AXCPT++or7iT3E+4FaP
                      vleljb7U8us9ON1QPVZxpr6W5X++gsFkPqZKdj4wrBo+eM0YPcaG8L3QFYk9fAHIvbLXUT6wh7C8
                      dmoVvjCugrxYiCu+E/8IvlA+rDxUrtM9/CGivYMpjb7Jy6M+8OnbPJARhr5z7Zm+9Ev5Pfi3Qb24
                      4BU+YiCKvtRgyT3Z1Y0+4F0zvcxNp73bql++FyGJvmDuO72Kj2w+th9zPk5XAT7cdPO9E0Nqvoos
                      dD5A6p67ff2YPlIAPT6vH6A+FkBuvvyKt73iN28+XDmkvQCvbzxgzUY8mjBJPrAVoz169HE+AHVr
                      PbqhbD7eeTU+oHxpvoZ7dz5IXhE9TkFHPs4yib5bv4e+AKPbu+Mbpb5rYDu+ki5+Pluwpj6AkuQ9
                      YHL7vQDDh7xQAQ8+ufOkPhJXUj4J16I+8JzbPEzL5T0WvpW+vtCevlifBT2wYLq8/OuEvoN0cb4/
                      XoO+w/upvnKwWj4Q8jK+Bo5nvuceir4AIPi7VjlTPsgdDT2W7Xa+sGMHvhtdpT5Dkxm+wWyMPopn
                      Qz5wAvc8gJJPPYCIMLzPcpo+w/WePkhPVT0GkEA+mqRaPtD8o7wR+oY+ABxSPYDWODuf1aC+TSai
                      Piyfzz2ynDk+QFCHu6V8pj4+CDC+kJkWvgvijz56KWQ+2y1ivsC0BT0oETU9tGuBvsSzi71cu9i9
                      Zh15vlC/nr2AC3C9kFdAvkkTlz56oXw+iz8xvigbUb7JkaU+4xMqvhJGDz6Q1NA9468rvrP5lb44
                      7SS+oF18vYDxjzy7uSy+1GScvs6Dn75QNKG9a4QHvs81hb7cBqk9LKbcPcuoFb515Yc+o1mfvuKL
                      Lz6q4DU+wDUsPbYOd75exFA+oFGkvdvSEb7CqkE+fBmXvWnuqT6rX5M+MHKDPObeVL46aGw+6tUc
                      Pk5kTT42o/29hVyKPtIhPz74BQQ+nssmvhgbN760N649MY6aPolslT6wdgo+FbiJPkQ09D2QiJu+
                      QK2ovdBhmz3ZopA+xlmSvumOpD6A8mM8/CDnPZwmj77a430+uptoPgLNVz4A7Ya8NiEUvng3Bj2A
                      nFo9PPu0vdYvSD6QTOa8fj5OPsCiobzHBpg+kgtjPpDiTr59gaA+EEmkvV7Ber4ESZE9QAusu3qW
                      Vz7De52+i24UvhnZiz7wQ9w8agE3PpTnyj3wC8A8vsJKPhyQ7L1bype+Y1JMvtVDlz5IwqW+o2kA
                      vggFm75rVg2+DE/aPZj/TL7CGUk+kiQ4PngsPr3wNdW90pphPnMcFr48juQ92PQivYT2or5qhSk+
                      oOrfPSTTtD3IfjO+pheJviyS5D3wHO08JXCnPk8clj6T1Ye+rdKoPveJoD6z/Zc+MAhsvgXhoz7x
                      m5Q+wmdOPhQTqb0IZ6m+bIeCvYAECTt+MGA+8EJgvrBj/L3+GRu+gzaaPhaoej7SkYK+oOAYPTgR
                      Wr7gvbk9+X6EPut+kj7U5Mo9c09EvmAkDr0Au8A80qMBPrjUA77Aw2Q9dtYTPrA3Aj5q4ns+AJqI
                      vhQ11T1ClJm+SG9qvdX5pT4Axe866PIVvV75Y7664oe+UfilPgDIgrxG1CI+ZWaIPlwBjr6AsE27
                      itw/PobhSz6XdYC+EidoPqCqB73mfC0+7KqVPVNhmT5oLk++6382vgDw971u21W+KsB+Pgaacz5u
                      R0s+UzeZPrBaN76ynUE+Nmervfa5Ub7Q5qo8gEDxPABgBDq462C+YLj5PYqadj44uyy+WABBvtxy
                      o72QsYY980IHvrtOTL4bwhe+Hr0KvoZaU77oC2o9oK9UPJBqgD161mk+LEaVPea7Ub4ep2E+wM9d
                      vULso76Y9F6+vSqdPuGOjj4ygT0+vvN4vkAFhzy4PVO9sAS1vMD6Rr5fjaO+k0BAvryRkz3ivW4+
                      KGo9viZaFD6AFG68MTajPiKtbj6PgaI+yNBXvUg6Db5Bn4g+2JkfvfJ1cz6mJXa+lsiYvhQaxj0y
                      7j4+zLTrPXJvWD4GIg8+QAT6PAipOb7g8zU9BphDPiPPor52/Iu+InNmPuCYP76EQMQ95yCnPviI
                      Pb76/o2+rInqvd4rf74puIk+IM6AvppZdT5SGKe+EO/NvaNrY76E8Zm+IMI7PKbOkb6IRjS+Ms+R
                      vkNtHb5AUrM8YBzfvcQZmb3g8TW8bHqdPRyGu73IQGC+wGjWPBh7SL2APzs8Vg6cvtG/mT5AHbW9
                      1KSCPQNmGL6GCly+TmGIvkzBgr6k6Je+7oxkPqc/or5pYIg+Q9aDPrk0pz5C50E+D6OhPsfvgT5Q
                      Oq88UhqGvllelz4ajKC+6i1oPuAUNrzUz449wIgxPbAayj0oIxu+mvIkPoMapz7m3wU+VuH9vTAh
                      q7x8KYy+UvAfPoBbMr2G4l6+KLI/vYxipL3XyoQ+si4XPufvnj5uJwe+xa2JPsB9Gz5bgDK+gBOV
                      vSVahT7AN/E81g4avgBwnr3Gqx8+S+qKPpibEb0ACD+9xEmKvTDa6L2wBCO+U5eavnl/qj4wrMk8
                      wGdpvaD6Xz1wP7k9YPaovk5xIL4AKJo6+Jl3vgohAD7k8Ju9AGAauuJORz6eEiU++slePidJpj7Q
                      V3K+gN5kPB69Pz6E/5q+eGwjPqQlpb5ACak9cHeKvWgWJD4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MDk0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNTE0MDk0NHEBYS5kAAAAAAAAAMNllr7gTBU8XfyoPnvAo75A2x0+xsQhvrAJh7zg3nu8
                      Eoc4Po5nV74+/Su+VhyYvnNXBL7eRgM+2K8UPsZWWj6edCc+KhNyPkDBnLw8b+O9xrVDPvyKpb2g
                      KgE+O18vvk/qkj6b/Ci+7YiMPuxKqz1sptq9UPf9vbKjiL4a828+K9OJPiiph74QeCE+UB89vjYH
                      Yj78ho29kM/Svd5RJT6IvRg9XWWoPpC5J758GYI93ODjPYdSmr4Lt5S+3hYpviAFAT0kjvs9MUqq
                      PmAjJT0bGDe+6CskPplwhD6AB6i9fnZkPhYUBr6pyaA+tFaQvWAm5T05coQ+tbmbPsz2gT24Smk9
                      gDhOPNAVRr63kac+phmPvnamJz7MY6m97FnEPbjibr4FmIs+QM5Tvoa0yb1wqeU8O6SoPsw7yL2g
                      3jo8INcevL2dgT6qSEM+4CqDvhKSZz7POos+wEvlvaIWcT4AuwA8g5iaPjQnib7QwZG8xhSgvhbk
                      sL1AG7a9vCaLvoC777zBlKU+akEEPqRHg70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MTAyNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzUxNDEwMjRxAWEuECcAAAAAAABEqOQ8yeuEPXR307w5NMk9ANV1PPo/cL2Y/1M8gEVQ
                      vbqvKj0gLey8/dFqvfoXAD1CEaa9gOWMu4YvFr0QQB8882havWFFkT2N1oC9zZGkPbO4mj2lKa+9
                      I4tCvcdTOr0dE8A9PyG1veAp0LyAvoI8sA/8Oy7CJD0AH527f1u8veBrQ71s0bm84AyNOySLjL09
                      NbK9MtMLPU9xrj1m2RU9cJQkvXjJpbyGnJK9LvA4Pf1Iv70huJk9BmcAvfrARr1ZrcI9JZnEPUgC
                      vDyWfgi9ID8PvYCs2jrpbqI9gAvzvFg8yTyNkm29/ihjPaPrSL2P6Li9aIWEvIzctzwAYNg4BsUc
                      Pac+xj27MpM9kC7LvQKkjr2oyde8Wg2SvQoXOr3jJFi96t0rvVCNqLtq/E092bjMPSAfqL0wMYI7
                      5L3ePPhEmb0Yqdy8wIKQvfYoIj3HgMQ9UA5ZvYKOJD1zhiy9RQarvVS9ir2ifi49he2QPQ36Gb0C
                      JVE9OL7fvF/dgT3dhb69pUTJvfJ/Pz1pFb49AMa4uofuGb1lG669szmQveADfb1DdCm9sQ+XPUx1
                      AL0u0Iq97wutPdWZwb2SXiE9b2KqPfXWmj0t3469QCtmuwBlKzqWYWk98Ci9vVibq72U3be8aJfM
                      vA2air0wKLu7lpSSvWNVrD1KaAU9prBpPcCXMDygjme7qN+yvdYSUT1YBaK9uOmQvPdogT3Zkrg9
                      P1GOPSBd87utV7+9rfjCvaAIgrxQuio8MNFqvIAY5zsASkQ5QEZeu4i4jryxnZg9CAXBvcBLS70C
                      RYy9gtMwPcCUG7zCALG9S6eTPT5fHD0OnYG9Sd/IPWpCNz1fHpk9z6+WPYDi/7vCxp+9pbOyPb1V
                      c73YqIy8eugsvezUm7wAG+27hr4EvSjMhDywGK87oU2hPViL17yJ+pk9st6HvUqDeT24noi8AMb3
                      Og2jOr22kFI9e86cPSHltD3/K8E9PTQ/vRi6R7yoqp48OBXAPPmXnT3Ivs28gz+oPeclS71dzE69
                      2KwtPHjfjryd3bE9QJZGPKhJyLwSv389PYxfvXnmlD2u0iI9oAZLO/10Vb05y5o9HoEpPVjMtb3w
                      7Ey8e5y3PcCiiTrcTuc8gKwUvXXsqz25eZU99lAbPQDBOzvEvew8kFFCvbMIoz3BzII99ldePQDd
                      IjsAvja9gBD4OphVo72PQsU94KLAvVMHIr1UDJM8gyy7vRTx9zxkFtY84CvqO1KxYT14Y5Y8WGml
                      vKd/uT35u6s9x/hZvaT8zjz9pqk9QKR9vFf0wL0ASja5qTq3PagzZLyCtb69wgCPvaxNlzw7x6i9
                      vADPPAALITwg8ie9YnoCPbKsbj3KHqi9A2I1vbqtGr0ekEc9enaAvZZIHD0n3Ti9OGuBPNVGpL1S
                      B209sOhGvdARCjy1W7094nMKPR7ZjL0qlgU9srYPPVbtJT3A8vC8MDZavbyWi71dWSy9cDIPvc8L
                      hj0o7gS87FzwPDeQv72NlKU9aOpgPFAwurvy2se9agVuPUa7Qj0ITfW8mHsHvEiTxzzF3cK9nYKi
                      PXffyz2Y5VO8xLz+POBSCL078aq9LBIFvcEznT1J3bE9oGpOu0nKlj3ZRqg9QP/PvK9CvL0lr8k9
                      AJbpOrgivryA/L87nsxJPSOVxb00xLs86YjAPbq5OT3ABEu779C5vcrAH716spS9ApUxPXRU7jyN
                      NU+9R91/vdPhkb2scQy9AEcxvB3euT3UX9c8cBEDvU9Ljz3qU1k9uOnHPPcPHr2x0J092EcYvCqg
                      Vb3aFW09Pa63vWCUkLwBnIw9OUqzPYAXmr1m5CM9u3CYvQAzBb2AtDI84MyuvMBBErvQWAi8GNzp
                      vEAiOTuXI5g9c0pMvfhEuryTOLI90HGtO8sjxb0wNxS89vSKvdBc7rtoHKe9suAHPX6VTD2mEpi9
                      6pkcvUyclTxMJd28AGn3O/Cpkr14MKm9QJhWO7h7hjyANJk8zSXFPfICw73ngrm9tcGFPQBGszun
                      j1e9IWvHPepRmr2BFLA93LfzPMBfVTsAQbQ7Umy2vXLbNz1Cank9NBaqPIBhfr0X+o094Jv+vGj1
                      y72dLXy98g2hvShUtLx9fXi9FXOuPYAxFrzSvxA9qVKMPYaMmr0q12K9V9CJPWzb4TxAJyS9vL2K
                      vRW5gb0mjpy9wAQ9u4Qv3DxI/Jo8RLbmPFjIADxaqHC9pvpOPZJyVz164ku9IJicvOpDC7016ou9
                      UF1xPHfdU736tik9+GqpvRbNPT2S3aC9Sg3CvSe9Pb3Lwoo96Y+qPa6VND1hSaQ9XCsFvfHIoT0X
                      26U9vZ7FPQAYUjrdlT69HH/YPK6LLD3daR29Ym5vPVY5hr1mKik9sJEsvV46ZD3oRGS84JTdu+DT
                      br39sMo9UEnKO2jiZ7ztU7A9NGi2vCyvh7xtPMQ9I3idvfiRjDxCa0g9Wce1PWAUa73TT6Q98J1+
                      vAw6j7xACha96G/IPMCBoL1sPcw87QOMvUxBnrxM96g8Eym9vRSDobyScGs9Uh02PQ0nuz3Sem09
                      rwrFPXYxNz1Xokm9OLb8vOVCiL0wygO92NyTvAgktTxYHPi85Gf/PI1yhD3G6Ku96HcEvKs0nD0S
                      Kjo9ZSaGPST66zxK7A+9UKcFvO6aLD0XrjS91Mu3vOjcArzXTE6979GuPfTa07zeIh09HPIOvTJa
                      LT2RkKY957a2vR1/mr0T8Wa9CkYDPYNWG73dCUC9gIuovH0KH71hZ4Q96A4AvFu3vr0D6LA9iFiR
                      vNKuDT0JIcs92UqTPWP5RL0/SIQ9GGLmvMj8/LzMHbc8SJO4vTB7S73xJ7w9rg07PYi+jb1wpy69
                      kPoXPFDT2ztAF8y6bf+XvXpfdz1g7mG74XvLPZAeVrwS/1c9QMIzvJ/nlD3A2JQ6z9ypPcfGsz2A
                      Woe9gNsEvO9djz0Jn5g9MqtlPVBpZjxgY1a900qdPXfHv736wMi98LAjPOkYoz11wcO9KIF0vNGq
                      kz2XXXq9dZLAvYKPub0W7lQ9pt5LPYoIWr1mHSw9Y2a9vawIkbwCh049mJCgvEfzuj1ogrE8LQl4
                      vU5+ZD2AgV+6IpFBPZSz4DyLmMM9KU+zPfFfsD299CW9UoExPZTjsbwuUZ+9n8ODPVcYY73i9Hc9
                      OqUHPXQ3h7259Zs9zRokvV+clj3CAq+9Yts4PX7xQj3IS9u8XmSKvZutlT1L98O9L5qqPZJmOD0o
                      LSo8szzIvVgOaDwsAt48FrEkPYi2l73/+ce9GZCqPWK/dD29goC9ncOpPV/Fr70Smi49bslkPTin
                      jzyIdPu8XZSzPZqybL31cKu9r3GxPU0jTr2KjTg9xZSTPb2khj32Hqa9ulSeveBSp7zSDbW9l2cg
                      vULcCz3S28W9mTS+PfekWL0Op2Y9CHu+vdLcez3UePE8kosuPbi387zH0YQ9QAUfO04nbT22mXk9
                      7NbbvAGBpz2dSJm9YJ/kO2CEnTwAXpW5nHfYPFbRNT2wJdg7+1q6vaXThb21qIq96F7zvJ6JcD1Q
                      18S9/rNDPcBRK7xbr749OAigvV/av70mKjA9YxA+vdnMmD0ma5q9gg8VPTo2Rr2QWVY88gyOvVCE
                      Hr1UE+683WltverpEL0s9xa9SsYOvZDmRrzVSZ89sArIu+Q68DzARKK8vwetvShW+LzA3M866jrA
                      vUDFuLqNULe9KjgnPcaCaj2aVCA9bGbGvLB9+rvo7du8D2CaPaB+ljuAooa8TSqqPezauDwXlR69
                      4JTxvCMbNL1BK7s9tdOcPUjdkL2o42C8lrsTva1jxD07mbA9Oph0vcDojrwXlqU9t4bMPVjTEjxo
                      y/e8UMQmPNHcnT0Kcp+9JHL4PBRu37whVpk9wPaYOqCtsDxXHVu9SS65PRxT2jzJjqM9UAZavCyP
                      uTz9G269c/KaPSAZZr2xebk9FMHavBYwob1QiPC7eRaYPUlLpT2CfX49NBMHvekSqD20ueo87g5o
                      PbUwv73QAQy9NdW7vWPbpD22gKa9n/OEPQzO+rzATM06+pYPvaajZz0TSIk9rGnYPB2ntr0A1Nk6
                      PvY6PbiDgr3eF1o9wU6XPfP/Qr0g7o87doBnPZBSRDyAxKE65aGjPeSnzjxuigo9gCWsu0n/xj3X
                      9cO9zAAXvZtKuz2NY8S90ACXO+xqsLx27m09JgIRvSWQsb0lZqM9SaimPagotDxCg2Y9Sp8GPbQ4
                      5rwYHyC80gpAPTDrDr0j0kq9hAL/PFEMpD14xqa8OKiTPN9ezD0Iwq68gG+TuiGIxz38owW9k2tU
                      vbC25DswCMW9TBnjvJopVr3CP2c9zPSlPJgAsr0dqrA9wCj+vBi5cTyPnMc9CJSQvGKsvb1CnRY9
                      UNPLuwjp8rxQNam94E8pvcqjTb1ZPck9QEC6vKJFED10kZK814ZjvWWkuD1nbU29t+9SvULOnr1o
                      Abg8GpgMPSxx4zzJdI498rR5PYpaqr0Km0Q9Lpk2PWijfbxNFVi9Oc6/PcAUwDxAgVw7kUaKPcHn
                      wj0wbRW9AFteO1EiiT2M1ou8O3uxvcApO7wIraY8s/TBPeD/lDzoLDG852VRvXJvr70Dzsc9s1Od
                      vbO2lT3xwKg9hvh/PZUgnr1nPKs9vSswve2su710Wbm8A7qHPZiqQTwIOeS8HdAuvXGaxD2qOXG9
                      QKqcvEWslT04Aai8RJ7WPPH9lj0sFOO8dIPHPGf/xb0oO1m8VV+dvbA1MDwBZJU90fWqPUC907ys
                      k5i871nMPSyN/LxX18W9872qvXy69zygX2U7mBwYvEr6Tb1YNKK9KDE+PLM4Ur0VR7E9nntvPUWc
                      wb2n7r89fDnsPC18Qr1r1I89GsBsvfkhnj2ggte8gAVOuskzlz2DHV69wjQLPYP8yD329YG93Lz+
                      PEGatD0aL3I9hODZPJQGF71rEcA9LEaIvUB9sjwAFA254ksoPe5HkL160Ca9AaPAPeRF3zwwvSe8
                      oKFNvQEjrj1o9J88JnADvZjKKTzQxv270gOgvUAzCL3Qexu9E12iPTAsgzs6ETE9KnWwva8Pt70z
                      28W9Og8tvSAi3bxuuw492FlUvIPjxr0SoK293gADPWyN8TzGpwQ99uCovUEHlj3ZF4M9bPWWvHol
                      C72gXNi7ouRPPeQb4Txo1jA8mMTEPPj/xr1cTQ2986KcPWg6GLxkqds8CPWTvOk9mz1dMb09q0rG
                      vcOPIr0CPIC9YBYJvWhVkDwAPRG8/2qhPalKmT0nNXa9bc5rvUldij0qvSQ9Gu1ZPXa1fT2LdMg9
                      esdZPZj3EbwnRLe9IL6PO9C4BbwJtsQ9v0mwvT18gj2qIFG91Q2SPR9Trj1dODu9EXeGPXISCT3z
                      W0u9ubylPbBbdr3J5aU9vdOgPawAv7y5TIg9ipYrPR2Ser3uGDM96G/3vGd2V73QrgS9rDzyPJFJ
                      xz2P4cO9YoEfPfmtgz2JEcs9TsJIPYASIL2QnoW9AIlMO/ixtTyBApA9gd6YPXB3Zb3b8ZE9iKee
                      vMC1Q7u0N9K8wdKBPaB3wbszPIQ956UfvT60rL0iZD89AwCkPYBAw7sAe4O8oA3xO6jaijxqBlE9
                      z4i9vWBbP72YMGM8GLdBPKDPJLuzIrM9WJwRvDJrNz0MEN68jOX5vN3+hL3AiDi9qt0JPedCHL1v
                      27k96GivPKp4B70Tyra9osuwvfIlWz1YU/W8I+i9vQKHs71GjUU9UGQSvQjDrrzA0W69gKJKOrhc
                      urwC/Iy9MOEjPNjYdLy2jpu9d/2WPazP7TzQzoc7U6e+PR8ew70qhw+9voMlPWzl8byygYK9QL98
                      vVKPej0AsgU7YOa4vcz/gbywKA08EL92PNBdcDx3WGG92aWpPXSC0LzAmg67qVWMPQP9ub3gxxi9
                      NAj5PEUTyT0ixr29YVrFPTrJLr3/T5894y6gPeCG0ryUWJi8AHCMOtu5pj1G23Q9kiS6vWbxUD3Q
                      Nny9whxiPVCYw71xI4Y92UapPQCU2rh6oRS9qC5sPGMVIL3jxLE9wNMsvGiHyTzCoUw9gOIQPFil
                      ob0BT8w9nkNfPWXNyb10Zs886IIEPKxonjxYI488eHnWvHUEij2yfUI9GilSPe5sgL3APMq84Tqf
                      PVR1A71WkRm9wFU7O2+5yz3dZne90rKVvUlFuz2gLbO86GfkvPxj2jwYYHs8atGBvZMovT1q5wY9
                      6jNivdqKYT1WARC92C6NvPpHm73NNbM9gDmtPClWpz1VzII9sae3PV1gPr1WsH49fj9IPb4zAT1w
                      7H88AK9yuiB0hL1uQSQ9kFWEvWLgjr3gXpW8hHrdPIFVxz1rQKA9K1GUvQA10bsoKnU8aXecPYDo
                      tbxDuLo9avBcPcoNAL3gMtQ7GPYyvBuxk70iiHU9JKPZPOdMtb1g67c7yGqavfaNfD2BepE9Rx7J
                      PWYJVT0whZ47IHqqvBvsqb0UyLM8AM2Xuxttqb3QTMk78LkqPPGUtD2FeMq9zFyvPJkGgD3fmrm9
                      fDXePFkSvT0YDF28jHrKPKrUdL3y5Vk9AJucubKyMT0QvXC8sFXLu9AgujubGZI9AjUAPShppbzU
                      n6e8GmIFvRKFYD1t5JG90P91vUbtAr07vcc9Pf5OvZPPyj3WlE89h/QvvY9tvD1zl8e9b0jBPbqi
                      Or00xug8aqp3vaQq/DzIx8K8iEa9vFboRD3JTos9J1FSvYLbor2gD6o8NE2JPH33yT3uoDc9sXqB
                      PU6nVD37PIc9Rjmkvddqs73+2oS9yO+LPODl0LsAK+e74w+SPYWBsz16Vsu9gCPMO/hbgTx/9JY9
                      QqcYPeya2rz5kqw9taeSvf9uoj1aI0K9qFIjvFIibz0AqvE6Ui6OvbLdIT3q/kC9UI0UvIIQCj3/
                      YqI9GDqnvXT1tLwASro55PbaPIYXnr1QONE7HtR5PUd6Yb1hd5M9MplqPcAvMzvAEIW8L1HDvSoA
                      Vj1yA0U9UTyUPaiYBLxYFb48TBaevG1asz0NX5Y9K9aZvauBor2CuGI9MPxlvF/Xvj3pgLE9ZnAf
                      Pa/ooD0U6p+8Y6lVvcEniT0NPaU9qvyjveLmXz3VTIE9jzSiPaSY5Tz1x529bJ2rPOBtqzwwmQO8
                      vtGOvaZomr1zy549z66DPdO2iT24yIC9vzedPZeQQr0oXmq8V1nMvTKdFT0RIpA9MDP7uy4cmr0P
                      KK+99WuuPYAT5LyzbaS9JWCxPQJnGD0QzVE8MJGGvbMXm70IhJC80GK9uwydpDzx2I09DDfTPPdT
                      jD1AhF88YF1+O57iAj2TJKs9UCAVvPcIyr3hK709UOehvUAu27wSvg09xCrfPOdVUr1h28k9aUCc
                      PczpjTwe20o9a4+0PdzIDL1tALI9CSWGPQxq3zzrm7g9MLvJOxB1x71xYYU9KCeZPKgSebyQFnM8
                      oZ2nPUKbx72WvE898+GqPePLRL1Kc4i9ICunvZ3mvL1UmZA8mmgovcIMgr0S2Sc9wJ8yveWBl738
                      2Oc8YJZnu0DDdDwjW5+9FVOivYDuFLrF3bm9cgEbPVGCpz1pYKI9WPBSPGjvsrytabq9yklkPXPv
                      Rb2qDW69IaCHPZhgrL1Q4ru9SS6kPVU2k73pzIg9LaK+vT4+Cj1gnuM7QhcDPQzPiDw+Z529KreY
                      veA1sztW/nc9SCGCvanNqz3XWoc9iwS4vePEyL1yHhA9jIKzvCBNzDxFjLe94KK2u+BkNr1sKYK9
                      dDOgPPKslb3+aE09ANppufCgOr26oQY93xDDvSr+jL0ZhKs99NTHPLp1Zj0t8aW9Sts9vdAJFb3Q
                      RIc7fq2VvTNfsj2AR6u6YCVlva0Np73Mve28AD22Ocy2pLzgwbG70Qe8Pb9cvr0wHfu7ET7KPfA7
                      cb3Fs5g9lJTLPMFuzD0KVEu9EJwgPAYOqb3O+mU9oDf0O7BrRr34YNW8RzI4vey6r7ybm8G9Vpxe
                      PWjOJrxHCC29kT69PVg6A7xiRUQ97AoIvbCktbu21nQ9UHvyO2BnGb1k3gm9ez6mPWiNqb3Y+zs8
                      DZyuvR6ogb0GyG89cDlMvABbzjm5Q7g9Qk9MPYB6vTpsz/W8qJuSvU0Fab3a13o90gBaPd06p73I
                      E5A895U7vSZBMT3nTFK9TZ2fPYBo9Lsf+qy9B+hEvbpQbD25uaU9xsyYvX4KjL3Qy2u9Gi9wvfVt
                      xj2n9o09CpZMPW8rtL0A9aI84EPcO/A1VLzNlsu90IeVu17RaD1QfwG9gFUGPA7lYT3jJSy9xkWJ
                      vaK5lr2A+q+7zgk2PVN/kD3OjSw944aqvUZHfj0mX3o9ObqgPSA2yTyS8oG9GGGHPEsenz0OrJm9
                      Tx67vdgk3Lw9FIa9jFLrvAAtGDsg04y9j6GzPbKfZD1gTQS748uTvUU+yT379pI9IKj3O2CU3bxn
                      DDG9wM4+PMTV6TzsO7S8s0skvQDekbts5Pm8i8uXvWg4IjwjILA9ZoF8PdilFTyCaQM9wP0qO/4a
                      Rj2guJe9kKpGPBt6tr0a+lC94gtLPdWhgb0CAsC9ENKLvYB5ojusxso8TsOYvain4rzisx49YDmK
                      vHYCAz3nYYo9v0vHvRiN+byY6z48YoZUPccBfL1ZloM9c8+yvSjnw724Sai9gAG9utlktj0Oj5u9
                      skyOvdLwDD2MuOC8iFWAvNJ0nr0y+kc9D0CdPYAz0LvQsBi8iJTJPOzzkDzxAIM9GoEZPUD7jzrd
                      LSy9ekswPbVmmb0dEsK9zQhsvd0mvr2Uyam8aB6cPKBkODv4raS93qBIPZDZCrxHI6c9gMSSPNDw
                      fb1gdR67IJKUvMKmMz2ezaO9rGwSvaa/UT0A1Xm9YO/HvKCvmDzKWSS9mB/AvRoMbD39sco9Qc/H
                      PVBfqL1NMYk9wNd9vBLWMj0sPug8nRRNvVBZN72AVYi8aJuCPFm8xj3gbNW8DGyLvWoFez0UT/28
                      R41uvaK9VD33GSO90a6lPX67CT3du3a9E3Covc3Oyz3mY6O9LVROvSkVwz1lI8s9OCXLvZUqwj3K
                      mE09ISuvPbQysbzI0YS9GvRjvSM3Ur1BlsE97oIjPVd5oj0YoEq8ZZijPRqyt70GH3I9QPNGPAxN
                      3Lw3zDO97OXEvLO1Tb2QXlO8wDyfvXpBIz2q0lC91OrRvO30eL2JT8g9aJfavIOAbL1gx7o8PhJD
                      PSxz3zzKXsC9euWNvWVshb0G5kM9Y0SLPaDr7bvaFDu9olJ+PViOZDyg4iI7VHCZvHRd/TxGIY69
                      hrgJPRUBmT3XckS9+VebPRYzQj19hp49GBu2vUogHD18TBC9tEQZvWDydr3P7Ma9CNeEvLY2FT1O
                      jH49x+hGvXeSrT2D8qG9amFKPRkDiz3X1Ic9HbK+PbSqEr29A649T6+5PRwR1jx+zX49afbBPbVy
                      qj0rhLE9anhBvZTk2TwALDe84pwEPW1/or0iGxA9s8jLPUBiFTyUpeK8eKeaPKhXMrymqxe9QMWL
                      PPJmhL2AuIE6yu4jPUsZnz3U5ru8khVRPXixoLyQlB68H7acPQ1+g73o67m9aqmIveJDNz3eDxc9
                      wDQTO2DRK7vBD5s9a6atvV1Xyz3XxTu9ov8OPTAEDDyDWIE9mDViPHRvqjyADSi8hPndPJn7gj1y
                      pkE9/ZmMPTAoWTwArq29QI+VvIFatT22CT89c8moPXfJNr0QB269oHDaO/7tPz1a7ku9Fg8cPZ7w
                      Bj0Kx0S9WtUwvYcgyz1q1HA9mD+ovPzTzzwK+y09lk5GPYqXJj1ypgY98ksaPa1KK70lKLW9LZcz
                      vdT+oTwK94m9xELOPONBtz2mzam9ZROLvRjq87yOKgs9We6+Pc7MeT2irVw9A7OIPQBukzqapWQ9
                      snxbPe8rhT3Z6Z89mIZJvIBzkb0bR4w9cJRhPDc4SL0ClkQ98kplPZJNj72t2ZW9xda9vf38gD2r
                      +Zs9uR+EPWv+oL36w3I9SkCcvWBfxLz1j7a9RVPAPfISCj1K3au9ngNKPRAzNzzBZKA9NvdqPRg4
                      S7xyUi09Vc21PZBqZ7wma4u9EaGtPUBsGDxNjbu9/EkPvU3syr2iJTg9KD/FvQDuXTxoa8I8QwLE
                      vRdfvb3K92M9AKYFOTmWvT0fpMk9w8SyPeD4prwXkXm9qeqlPeUinb1Yahc8UJ8svQCTtr0AwrO6
                      R80evawl/rwKDQ89EoMtPTFGij2gg2M7TyWwPXkVlD22xl49Hao+vRi30bxatxE96pUgPelsqz1F
                      mZ09WnPIvZcyPr3Im5O9wNQ0O0wQ4rxsedS8yrVKvZgh17xmCD09lpoJvVrAEj2moQG9iEGwvbbl
                      ST23Q8A9i4CGPVA6c7xTzj+9NlUAvWBXoLuwIMG9yM6LvRg+TjwiWgY9QBeEum1+oL3TrMQ9Y3FC
                      vRRpzrznDm29/DSFvUXtlz1T/We9sl09PVVGmz1Xvim9juBfPYwm4TzlZMc9siloPVBW3btAEg+7
                      7XduvWSA1jxBnqs9Izxovbwzgb3oozi8z7bDvT4+iL1ICfW8SNq0PETlD70j9US9mau3PXC6cb2A
                      EI07EI5pvJo9PL19JcG9/VSKvcBxIru2chA9ILGOO+Vip71qVxy9gomsvceLXL0pXJE9eSyrPYhc
                      yLygJRA70wonvWJnDz2i9hM90LosPKphbT1KOQK9dkxTPZAwYrxoISO8gFCTO4T0Eb1A0su9WrA+
                      vcAgozoVf8e9u27GPT2TyT0qony9UFXXOzDNPr3gT4C81yLAvQCJNDyIKrQ8fWQyvYqrBz0jbLa9
                      BuENvaHNnz2EuN48U/eRPRxb2jxhXIU91L7UPEGRqz3zRSS9/rKTvfc8H70gz7W8AHnFPKKBOT2A
                      NkW9ntkiPQ64fz0Kvg49nO36PPBdWTx45/a8AsJwPaAIv7ugIqU7APrQO6LJMj2RiqU96tVhvZPx
                      SL0rBY+9grYIPedmPL0a6Le9kPc+veBgcr0gI4c7Skk4PV3sLL3YDSS8KGj9vMwW2rxRGrs9CtQw
                      vZPdsr0g0rG8QK5lvQAkt70A6SK94DoMvcoUbz03zKM9HkRGPajqWTwjv2i9kueivbMHlj3wKEM8
                      RZaaPUCiXjwetnM9xXiJPWr3ST1gfve772zFve3gNr0wYgC8CucBvZ28Lr1Eh+g8KlR1PadGv70U
                      LA69pnk9PYAXvjze2Yu9aksavRj3q7yv9Jg9MdqDParGlb2ovXK84DWhO2xUnzx4q529WAyTvN1p
                      kb0w+hi8NFmTvJVTxD1gIeK8YJaQPExuDr2oSns8A7uxPeWnvD2wK8a9YHuVPOj3WjyKYEo9YCGX
                      O6J4JT25xss9UuAvPavcsj1Q+7m73biXvYqsqr0KoWm95YG7PYhPzDwAqfi7wMuCvErxfL2DHsW9
                      IFm9vZBTQrySgpO9AAkjuqivKjyEPdY8AXGNPcqRJb2qhMC9AtQCPX1dp72BzYQ9nQtRvRikizz6
                      Qmo9CiJWvVCp0jvXcSe91LHLPCDu+TuPfcI9fDvkPGXJoj2FhbM95GPdPB9rhj3tFr89nSJ8vTrg
                      AL3i9kg9KCgrPIBhjbwNoLk99VaYPYWMmz2ACpC8UHtsvOwC+rwAdZ88h3SYPapYcj1xiJ09IkRj
                      PfFGiT3slsS8diQFPbC+n71ieRA9MJ0svL9hx73CCiM9tqqDve/Euz3ssQW9zJbBvF2eNb22jSY9
                      QpRvPdWvuT0Uf+m8p5VKvRPqvr1qWm49VEqFvKC0WLuanau9fRF2vVBdv73S3go9spJEPTgR/bzY
                      0cm92MabPDqmKT2O6C49iLHdvF0Owj0Qkgs8dl6QvQAUO7ki8309q7fDPYzG7ry3bMq9syq0PZ2Q
                      O71YT6k8uC+ZvU/SjT2ztHG9bDDlvA3sub3tILW9aiYNvYDaTrzpNZI95b2uPTrwF700lcq8ILQI
                      vaLYJD1a/Ue9MDqvvcPqHb2q/KS9PZ7MvcPRO706exG9LvQqPS9Iy72zc8A9kAs3PGg9rTxAmKa8
                      jayTvQftoj2WzyQ9gwW5veMWoz2ALY69AvJGPdxKFL1zMJm9zbKJvZZJYz1GdqG9NPndvJC8eL1+
                      hiI9s8yFPdCj0TviTSA9pKPzPGVCjL3cXg69sC4ivRZiNT0rsrQ9ktRZPfYxCj3qzla9HoVwPXNN
                      oz2AQfG7FDDvPF/bwL2KHlM9GQCvPZDuXLwEpfE8TNzEvE5EQD3h8as9IAWzO934vr3TDGC9U1qj
                      PamzvT3CE6e9AM6kucDyCTzm8I29EqltPfoFuL1J15k92yycvQDzq7zIxcy8wrVuPcvSjL2QcBG9
                      AbySPVJ8Cz3Rnrs9p2hmvaqDAT3Syx49ji9iPUoeNT3MCd+8UQ/JPezQ+jzACRq7AFt2vTtNyT0g
                      Zpe8TGiVvJ3YuL1x+aE9H1KkPSYaND1liI09vQ8xvQCmhzv+SIq9KmqWvcAAHry1bL29vcU6vSB7
                      pb2tQma9WK1YvMDjO72UgN48g66gvQViy72YskQ8EtW3vUhh0bwK8ji9gKiHPINnlz2+nwk9EZed
                      PfOTvr03K2i9DG0QvVEKvj2QRA+9TeCCvbW6lj1A05W6A0p5vYv1sT34F6U8Dl8ePcrYgb203Zq8
                      PBzuPLDf2zsY4bE8Qj8WPbaQAz1D7CK97Y6Svbmoij16/Iy9YIFKOwEUnz3AZQK8mAIxvGDbNrtO
                      liA94gciPVDjOr2mI5i92lkhPdobj71eoWM9MkGpvf06ob0dn3u97JC3vD7ejL23kJI9R5efPfBq
                      p7007t+8BRybvfplBD2Ij468shptPatqmb1iSY69owJtvSBIor3AJAi9gJzcOx0coL2wZoW7Sa66
                      PaDmGDsH11O9e++Vvcxy0TzwVxi9QF1cu7Bv+jv0IP88AMBVN2v+jj3iNQk9wAw2O4gV2LyYuIi8
                      dO7SPEChV7sDbWK9+6GavSMayz0uByg9w+uZveAn1bw0xN28KAxpvACNbr18MOI8ltFFPeIwxb2U
                      /NE8AI7xuwDWLDyOcF89/SC6vbqOcD1pUYg9UCuHvXiSz7yUCLW8LKSzvCXLjb3QUy48L3/JPXbo
                      JD1KL0o9gFjVumA6zTuKdL69jCa4PJwb0zxz41O9GA9dvPNOer1yqLG9uA2RvDpuaT1sT9e8SKKo
                      vdFjoD0oDqO853FzvcDWWr2jGpU9cbOCPQAsfLsutEQ9dsFAPXuFpr2/25M9WhwiveA3lDsYg4E8
                      YGssu3DhXbx4IOa8rgM7PeODqr3t2rs9YQKGPXdher2Yu6O85jJ3PaDp0Tt9Xam9AMqeuyGZoD1X
                      NJw9R5RjvXj0sr2BU6c9inQEPYC58Ts/+6g9gzqVveBnuTvE6wO98vZ1PdeeNL3DwXm9AFCgNygh
                      tL1jeRy9x1C8vaDTEjv3a709RpcYvXKsbT04F8s8/UA4vcEApT1xQpc9cOqivbNLXr3ggHe9Clm9
                      vaD2JL1zj3692GURPFiIkzwgjtW70ajLPRD/eDxCvUw97aisvYA4H7wZi7M9gV2KPfCncDzgtKS9
                      MigCPcPKij2gHQc7tuhhPbYIVz1sXps8DNTUvM3EtD1Dx4+94+SNPSnBoz0ds6K9UPcSvbofOD1E
                      xPY8wKjpum1FqT2Asu27PhR/PcIudj3+MnQ9LMuKvTaeMz2Rbq894sxUPUcwPr0NdUW9cLk8PPKX
                      fT29UcW9ibaFPVDmhrv7vqK9cCYwPMq5Wj1K+CY9R7ppvfS/iLzoWg48AFB5PIZBm70fxIY9Z2CB
                      PXmEuz2SZcu9Gx+bvUw/1Tw3YB+90aGoPZ3gyr21rZ49oI4FvczRDr07Spw9KKlXPLKccT2zeWm9
                      LQGEvcCULbyo9Fq8oMwRvRooqr1HSDu9CjwmPRClFDzNbFW9s0FDvUJ6qb0tFrA9LSorvYw1/rzq
                      9cK971zMPVVdgL1+HQk96rARPV/1pT2JE8Y9jUmGvbLqrr2tnLo9XbAlvWV5v71wege8r8SiPehB
                      sjzC9xE9oPR8O3aGFb2a7UY9lBqBvBqoXb3/HoY9wAZhvMDsOrzHiF+9nSmlvVAUujsPu7c97Nr9
                      vB1ttj1y4ig99e+evYD+NTrmgh89aDJiPMZfir1lnJY9TrqDvYM/WL3o2rO8wNa7vcLovb1EOtA8
                      W4uNvaoGVT0TE4M9scyNPShYMbzg18K9+s5GvRjpWDw2N1I9d0ZDvSXJpb0Adti6WBeyPDdLoT2D
                      Xbe9mGscPIIVKT0AQqs5Q+GcPcMrIb1ouLY8IDcxvf00wD2n1bs9KcujPaYlMj0P2Kc9CESGPHqp
                      Mb3CXb290JWBu7A0p72w+wa9h8dTvZ2Sqz1BFso9UspZPUy5wDzjmli9dHwIvWIaTD3qi0S9FO7c
                      PBh9UDw+9k89iG7cvADgDbkzjj69uNHJPJCCh72Anuy7tdq2vehWmr2nzC69u3mRPXiBsjyN+ym9
                      J9PGPXCsYrwJRJ09y36uPeihmbzHlKM9lgRMPaClgLyIvvS83iN4PX1MSb03XIo9WLiHvDIDyL20
                      tKY8+tNnvQ0CHb2ifkU9uKS7vE9WzD3dVq+9IHDGvR2zk714Adq8lcuQvf/utb2PosY9fWN/vej7
                      NTwCoBA9yqcFPZvWj72AW7M8SU6bPSobBr2CGk496vElvfS7jDxEnPQ8pAyKvZR8sbwY92s8ROiI
                      vQQf8zwv47Q9QFl1vNzzCr1YnDO8EA9ivfPhML1tGFS91tQVvf0DpL0goPk7viCTvQxMpDzgWIu7
                      G8SsPRZbTz0YEAK8cvyUvbhZ07wzdLc9rUyKvVo2Qr2n4589bA7UPEaqWD26zHa94liVvTkcyj1m
                      HnA9Gj44vTvnhz0acUC9rkVpPbRv0rwmXE89QLqiPKw7wDx0p4k8YGGtO6oCMT0Ajce5nWBRvUNe
                      Jr34Tvy8GADyvOpiM722nJm9ajpePVTg9zzQdZS9GEvzvIzj7Ty62Ao9QIk0PN6Ii71oJom8shFy
                      PTHHoT0IgZW9B+pPvSAwlL3Vy449zut6PbjjgjwhjLE9mLFePJQX+jwr7Ku9gEAxPHjvorzoY4A8
                      bsooPdho8ry9yqM9pkhqPUAFQrtjtHy9quWbvRBwQ73s8sO80uS4verGCL1q76y9F+22PfMCMb2Z
                      apI9ycu2Pd/Bsr2wghm9v37IPbyF8zz61Sy9DPX2PDicu72QWH29hRLJPYc4br2JiKs9YPatvUxr
                      1DzSkJu94ASivWZUZT3TkLa9wImvvaLPED2d0GW9kuQwPeRFib22BE09wIAzPFc2KL2DF429Dghq
                      PTDKh72yBHc9tVfAPcMKML04NIY8FW2tPeU5oT0AyGS74L6KvRQU8zyq3Ku9Md6KPTBdRDwwqbe9
                      WGFTvNedRr0QAxC8ANZjOyiXAjxmbjU98CUCPPT+vTw3QmS9PnJ6PTeVmz1XxIE9S8jCvQCxUjyj
                      Oh69zMu5vFrvIb3y/qG9HXK5vcVHw72AMf68qCcnvC3jKr0ByIU9EKghvXCAcbyNhHq9x2GRPTuN
                      t716Aig95s0DvTA4ab0yjUE9WfK/PUzdxLz9SYc9MOhTPKBCuTzq5JS9+TTKPepTwr3oeVQ8vZ3D
                      PacxxD05TLY9OvopPbpFUD0U6+A8eLuZPD+Tij1Mbqg8tVG2vUoba70NxqI9y5ypPSaQEb3BaY09
                      eAXWvM5/Bj3gsYI7AGCSO6oIsL0u+F49RLvsPPtknz3p0qs9Et5rPak3uT1aRAA9CJzBPEDGpzzC
                      UD49LAACvcPqJL1gCZo8ysmAvSeSxz1/Y4A9hq8JPTDj17tgqsI8lNv/vGi+ErzS3nQ98GumvaCv
                      rTsESuY883nKvRYSPj2KcUo93Lb9PBFlvD0iLks9OJbYvOycDb2NPHC9hIXbPEx227z+Kpi9aFbJ
                      vf1Zyr2jH7y9ncYpvTceZ732FVs9XpomPTnnoT23+r+9JePGvVAUV71QQPG7PZpPvXDrNb01YoA9
                      wlxtPXd2tz3MtIK9wFgtPGDQjryEA+s8fixIPa+stz1ChR89qohLvb4Yaz0i0zE9VGOJvWW+tz2w
                      TXu9cwKgPSyT+jwNlZg96zupPcjEpjx84RC9AucePbjJ6byge4q8AEb/vNSD5Dzhd5o9RBPaPJPd
                      Rr2UqbQ8s0lKvQByubqCkU094da1PeBPmDu3wSG9omHEvYNGrD1Yucy8/xOgPXuwwj3CeCM9IJWh
                      POjleDzo/A483k6evaCfQLuikTw98b2DPSjLrzzdN8E97AfQPObkZT2yXBI92NXKvD4tAj0o4ra9
                      BdaUvQAUwbudRkK9CpUCPWq5cD17isE9ZwW0PcuNnj0BYpQ9WKZePGKqDz3zVJc9UETFu84GPz1B
                      e68991qNPTTOpzwJQbk90hdbPYpLdD2Xs8S9gGVTOreIT72WsAO9c/WWPUz5rjzMw6o8jlMbPQCJ
                      nzzpXKs9wK1hO8ZmVz2V4769Fz9zvdjLkzy0go88YKnCvPPtmj3X/hq9UE/eu3pwEL2OsWA92oxW
                      PRvotr2U9va8ohE9PcCQ27zs4RO9qP+zvapyAD1K+m89LdfGvZstlT0Ay+m8TRacvYB4ubvamE29
                      EkELPYAXpDtSal49zIbYvCcQYb3aB8i9qlKjvcBgdbydel291qWivYhK0rxaQoe9jsqgvbACtLvl
                      Jpe9sIs7PDvwhD0BLcc9Ax6vvXA8eb0Ollg9d3KzPdJ6DT1p1q49TUDGPRMOuT0igAQ9BFvZPMgV
                      rjxSLZq952hPvVa+ob1Djje9OvWUvQAA2TdwWrK9t26XPTACq7uY9tW8PUi8vdx73jzS0W49lDKF
                      vDBzrzsAgZC7dKyVPKxTkTxXj3m93XuVvUooxr0DnD69ne5SvWwK7zzgdGi9KZOVPSLjQD3YbwE8
                      Dpp6PS/DvL1PA7S9WCA6vBixgjwo3F+8gpAcPfbvWj2SNci9townPUWvvb2oiaM8kFdkPPA1Lb3K
                      V1W94NyDvKWrmz2OuW09kSKqPb1mlL1WjpW9IqAFPdK2Kz0YxU28MBlovCSs0zxpI7o9aY6oPcLt
                      Mz3Af5w8qnVyvWWcwb2eO1M94QKUPdAy6Lter0I9jUCkvchIjb0MnMa8gNrMur4ohr2AD1E8wcq2
                      PdBDMTyk7M08yRKmPZLLGj1XtTa981QsveDQ/byqkxo9LTDJPXoHTL0ybXY9gGYlvDHYyj1QDa+9
                      4IDHvBAfCb3oBp48ojZvPTH4tD04Tpg8PFuMvafXZb208O+8EOQtvMxTnLwAVZE7VBIJvTvLwT1Z
                      5Jo95wlRvXAeT70DU2a95tsMPZLdFD3KnqO9qg9dvXLSQj0u4aW9ygkOPWAF27ttEFG9mNKvvUr+
                      Tb0G4hY9swpZvUwppbz45Lg8fYm8vbPHI72+q6G91z9FvSC8ojvvjYE9oaWgPaijd7yyMwg9rrYU
                      PRh9/LzQhbq7oN3+O8OXLL0j85g9XheOvTkmvT39pTm9CezDPR5Kk73CKCs9troCvfQVkbwsOp28
                      mOf4vBg8bbyGwGc9u1zLPdqbYL3ijjg91LXmPKBSZzt997Q980bLvQo7ez1gu9a8ieCbPdQMvzww
                      9oC7/D7sPNYwA7220n09Cve/vQt/lT0AFtu6QrVXPYAgxLxNDX29jCzVPBDzY70wbZ+92phGveAw
                      nbwYjAg8M+a7vTqsbr2AV4I828HCvRQt37yoF3i8kyKovRRAsTxe9Xg9GRqiPVEqkz370sc9APMD
                      O5D+XbyqR769yNmEvFiOgzymUEY9KvevvUbVHD2tZJe9wI8uPCIOn70EyIq9f3q+PZ3bJr0n7UC9
                      d/pbvbRaijxSRTg9yOjGPIKSmL3dgay9kea4PZj6vb0AZzE6uZmSPSL0MT0nPcU9zzS4ve/Usj2g
                      4KS7CRanPehOwr16WU690hZWPUW5wb09x2O9IiBQPfnJzD3MmgG9NVDMvWBfZr3AYnu8IdXLPfdO
                      er0GSI69wzS+PRqRY70CbDg9JLXsPAJbOD3Aela7D2GIPep/Er3EZ/E8/5y1Pd40Sz2Ajc678oty
                      PSmKsj2wz3a9poJNPVD/tDvykEU9EIFjPJR0+rwi1gw99JSevNc5xr0oYVa8ss5DPRJhXj0szdS8
                      AIMWPLl1jj3DIKu96iAJPcRp1TwofDK8B+43vYJjWj376YQ91FLsvAo3Oj12zxc9ho4gPSOzxL0q
                      YmW9QEC0vaW2jb3OcI+9SSmSPev2wb0+m5+9NuVnPf/Uu71xTbs9Bzl1vWBHyDzoCcO9egwcvQ/r
                      s736MU89r3bHPRC0EjwD6HK9fbghvbtPkT1Yp7O90ejEPbZBFD2dr6e9ABDKOw0Yqz2S+Ws9OuxJ
                      Pac5aL2PfYg9Y2DGPdU0yz2Y2X48MNS/uzc3U71oU5S92du/Pe0AUb2bl4M9UbKPPfJmRD2LZ5o9
                      tS+rPQCAdjzZosU95+Zkva8Qnz2DjYc9nLgIvRMJv71dAEu9RlAqPVFcgD2/04Y9ALXauz/GpT22
                      zn89S8CuPUtslb03LGi9a8OkPWDFSL3xfog9+b2pPbgUrTziZAA9Wlp1vQB7gbkAuCG883HJPb0c
                      Hr2ABBQ8ay2rvZDcob1Q/mW8LttMPTEigT2Kl5O9aKRavNxVzTxfPIM9AFM/vP2CNb0AEhM8Myir
                      PToIHz3wj269YFUOu5qHFT3oG+G8AORtuz78kr1j4KA9C46PvTSS1zzqQYm9qFQ/vDWSzL1WFng9
                      G2arvZRAEb2qcRw9gHHgvGJ5Mz259L09Xp0gPX3hHr34cMw807xVvQ0Gx70DJMY9eZrDPTDYyr0t
                      TKm90MUDvVAKbzwYGFa8S7eWPfbuir0wXdS7i6SHPfLTCz0gD2y9KDwxPPjLsjyvU8k9MKF+vAY2
                      g70I5cU8flM2PbXMib3An2K7wlhfPdALJjyNpnK9iY+CPcOPsz3o2co8JpBrPX6pez1Y70Q8tudm
                      PQRuir0KWKC9RnktPZ7sNj2cBIO9YPKqPMpOZz1MHem86sUaPbTlwTyy8Qs9wJWUvGfmvj1wIHy8
                      JpwPvQC6yzo6kUM9NY2DPX7nUj1sVpg8iqptvTo7o70d8jq9WR3MPeBllrzzV5M9FaCvPUzj5TxN
                      OSC9rsOfvbqnDT0mKEM9IEt5vWC/87wWQEA9FE6svEVimD0ArMe8VixTPZrLPj1Qa0u9wHBhu9fd
                      oj3058S8zQJpvYhK0LwCXkw9On9LveoJZj3zyZu9ACr2OTSmg71FK8y9gB5CvFjXJbzY2te8g6Ow
                      vWrdcT14Y8I8Lt1jPX6OED3gQpg7E1o+vTc7Vr36lhw9gk60vcyuzjzAS608EV2SPStdo72QmjW8
                      dOSJPFJpaz0xTqY9+cC5PYCMtDsMsd08thcqPfn9oj0eegI9Q1C4veQA7TyDC0e9x+isvfPuVb3A
                      lzq7aSaGPaZGID3S0z09B3ZnvcuMqb0LnI29k3tDvWjnUDwQmn69Id2GPWVpgj3TbaU9KCKzvVqL
                      u71ymjQ9/6CtvcBitjzlpqC9ctsIPeDw1ryfwYw9Sq+OvakFqz02Qoe93QuePTZ+LT12S2U9ViCs
                      veD6m7247ZO8rl2rvXSzu7wgVMo8YQSmPdK0XT0S0Tw94Ku8vBREEr0sRtu8Yu9kPdjXYjxrire9
                      AH51vYCdn7qQ4iq8gIs4vHDsTbxgCui8zdeJPRBoeLxn3cQ9lMqvvOhj+bwohIC9cafDPfX5wz2s
                      07s8YC2vu/Q4mrx80QO9woRwPdC22bsAxVK8xjAcPRpCv72k3hC98XKLPWc/Qr1jIp+9YxjHPdTj
                      zzzQYHm9ZkVBPUwB+zzqtD29MoIqPVBLV7yMe+s8xWrDPfygjL0e+hI9sayaPddOsT1Yah08AFhQ
                      PABKybosGqi8azeQvUL4pL3My8K89CCJvfvrub1gZEe9PXfIvfB1E7wAncC8auetva62bj3IYLy8
                      GM+2vSM5pr1nNa09rrV5PUB0YLxfIre9ICkjvVhdBrxiHTY9oEJLuyWAlT1zDG+9QAUTvF7TCD0s
                      fPM8IgXMvV4yir27B5I9JgqVvRxT3zx43su8wEMNvXXRsT0TKLs9dyusPZdFVL2Ywse9opiGvZQ+
                      j7zAFr69wGb1Oluqm70At6A7mKOHPI2WzD0Zl8Q9B+CxPXDEyL2mw5y9MFB4vc3obL2eP1w9MytV
                      vepZW71dXpk9mxjBPa2xQ70OBDI9twRkvTM9mL02KAc9mHYmvB6jkr2LhbQ9gPv7ug0wsj1ULhe9
                      qzqTPYU6tD04/Iq9IN2VPFgNaDwYrCu8i0fJPZq4LD2IoIW8TQKuvfKkkL3rO5S9ckc5PRiQpbyD
                      6JE9CNTxvJ5geD2ey3A9I9+YPTqBCz2gj5A7OWvHPdBMy7upmoo9nRLAvYiNsr1tJ2K9mCDVvNUl
                      yr1CzJq9AI2Nu9dlsL3Gujo9hHvXPIpGS717BpO9oHVZu6rfWb1kCIS9cA0+vIqBBj0xoY49RFH9
                      PDaHQD0TqFe9oM5tu+CUy7tHMkW9UBEevQVTlT0BmIU9+3a0PfAZMbzhi689PSs4vZeyyT03wzu9
                      +4C6PdYeCz0QqRq8TP2pvEh16by4ONq8oNoYvTf/c71aZU495erDvR6POD0B0ak9/xuCPWAylrtD
                      v5I901TJPQzvwzwTE7O9mIl2vApewL0gUJE7ednEPZQQ4jwKqmA9/qA8PXyDiL3I85+8QiUdPR5m
                      ej2og2w8AFzsuhtRmj1++5e93f6OvWsAvL1sToK8jXQ6vQYJOT2a7SE9eG6mvAjg27zNB7S9WORi
                      PLBJKTxS3Ky9UPB2vPOMYr3lupc9/XghvQELpz2wlG69Hqd8PSd1mT3VKqO9FIPbPHupyz2NCMK9
                      MJS0vWhogjwd/JO90CzmO8jb0LxXYJM9Mw1zvV37ob02aDs92GngvAuTvL1AGzG9deSoPcVmrr0p
                      VK49TJTIPJ1hkb0AjBg55QuBPcnRoT2YxW48e1K3vbFysz29OD69GkomvekJkD3zZGq9mjREvZBc
                      ULyZhIA9mmYFvXsktz1QaXO9st+jvULnKT0sps68sz6uPVTdsTyiF3E90KGNvdUUs73ahmU9P4yv
                      PRIsaD3onq28ACCmOWA117yOQWk9YGd8vVOCiT26DaW96P7RvFC4irua+Mm9oOxevYDiSLo9MR+9
                      KmMKvRdPyb3A5xq7Ww6ivSqhBr33XWy9cWSEPdg+Ezyxobs9S0ifPb9Tt72p84w9oO6Cu+o/u73i
                      qBw9GKsCPOaDir3inw09qPSpPNMDN70qMo+9/K4UvT4OFj0A5hi8H4qvPdzDzjwWMJO9+HuhPOgv
                      PzwNOFu9/f+uvcIdgb3gJb27wGITOzByRbwrk7Y9AC+ivQwRxDx7YZK9hGjPPHdxpT2pqpY9U8sd
                      vfogaj0tw3m9SBTAPDzPDL2oo+q8IPAcvTN2Jr1wZCC8GE5qPIqzBD05/Ms9GGjjvNcmX71sq4W8
                      2WWhPQCXUr0dGIE9/b0avSLjHT0jHj+9k2E6vcHxxj3ARyA7GIHJvOQR8jzcEQC9fEoNvQ0nnr2E
                      7dY8bC2LvAz8vjzFv6k9E4mHPYDfkb0dEW+9AOQ5OV64Iz0+goO9ELVdvR6jOT0SDnw9mrESPfHf
                      xD36y8G9UsUkPWI+Zz2wFRC81LuTvCz417y3hK+9xiURPeqGPL3KmDk9uk5OvbKfQz1wOgC8wtxL
                      PfM8yj1z3Ys9YHDGvN0bn716i2e9OLDmvFhcnr16FiM9XWPAvfDyO7xrUag9und1vRU6xb3zQrO9
                      GtorvZpXEb2MTaQ8OpIXPQJMJj1a8Gk9TDqTPJYuAL0h/Ig9XjgcPRmEzD3qG1a9KDNUvPWOib09
                      IaI921i2PVToiDyqeD495XWfvTTG0bxGPgm9jPCaPNqzZD3vdsi9Oe3LPUCzdDzoITA8oFV/uyzP
                      wzyQk3O8zCYBvbotaD35BLw9glFFPVJmYT04+OK8Fv2cvfQhujwtPbg9n36DPbMmTb3Pk5g9uiaZ
                      vbLTWT1VR4u9Dv2qvTIZZz2AFSq9qp89PdBbPjxdf1C9WCC6PNCtPbz51ak9OhNVveMsqD1WKxe9
                      I7FLvee6HL35HcM9ci0/PSgyGzzdL7W9ajMwPS9cjD3GHB090Lq6u+L8Wj0b6MG97m0+Pe9SyT0w
                      Mv27mIzIvWNynL3nOjC9IN6mO93zHr150Kk9GKJ5PJeurD0gzrQ8Etu4vSTF+jxtNci9DfW/PRum
                      sb2YkUg8KnECvcb2iL0D08G9QzCtvSylirxUSt28DXSiPdB3VTyyO4S9Y45svSECjj3NO6E9OwDC
                      Pc2uyj0hArg9AO1YOuyLxDyWrWw98djLPbCUkb02VBW9M1ewvV3je72YkmE8rqstPZABnL3GEpi9
                      uA6NPCgRNDy6ZDg9ynCRvUA7jLwgZ7Y7Crg2vSCCx7uRcY09KBFLvKCpYb1dI6A9ECp3vKLSxL1L
                      9pE9UDl2vFWqtj2e3Ds9Pdu8vdu4rr0TIyS9dfWYvQh8uzz0TaY8zuEyPZ20uz3df2u9fikgPdA+
                      xTsARTi77M6FvJyLh716gSQ9gK7BOm21HL0b+ss9SgV2vQuCor2p0aQ94ROVPURk/zxwshW8yFaR
                      PBXUuT25IoM9oHPivAk7uD2AktC7WFdsPPuuy72p8qc9PuF/PX3GJb33eak9lEHQvDPflj27oJU9
                      0nxVPQoOH71yEsq9VuoePVdVTL0CbFY9+gRGPXAZN70ObVw9eptVPXBdpL0wxgk8PtZMPaQo+DzY
                      Qmc8ZuaZvXTkzLynKnu9TzqiPeoDXz1Bh8A9oi1HPYzI6bzRP5E9UaOaPV0RRL2AxY29MIGMO0uV
                      nD1itkI9wOGpPGgbBrzUVf88Qqt9Pa65Qz3ghU292oVwvV0hQ72F8r09S8afPU51ej1XfJU9Reao
                      vUfYoT2SVp29kIYCvHJVir0Orm09zFievMFDuD0Q6Zu9AOrIOwAFFDqa93O9en90vRvdp72QLh88
                      xwo0vf8zhz2l1IE98HSrvQhg5byMoKo8GAtGPM3Kjj1IssG8bU4nvRy/Cr10qvq8LRmgPUC2d7wV
                      JY49napbvWyV7bxj5WS9Qx5vvZwVB72i7ww92SmFPdoeMj1Uebg8gDi6vNBsQ7yWgBm9F72ZPVoz
                      f72fBJU9l6ktve3JJL0gY/27Pd4xvekqpj00Vcg8U141vTgChr1C3YS9Qr1BPUAxJ70vl6+9oXmG
                      Paqqo719DiG9HI8GvUTH5TybipY9FACmPBvntb1TLTG9KrBJPZ5xaT3P4aI94wcnvY1ogT2epzo9
                      0AJhvMZDqb0YXYw8eBm4POxm0Lwgj369kj1JPUAXBDxY36G9ptxMPadsdb0VG7Y9hLbNPFHThT0I
                      vYa91OybvGdsOb2O0oC9DE0YvYcNWb2memY9ThEUPXCLVL2Uxdk8DEazvNfskj2Ym3M85oYHPYCm
                      xDsywRs9OlSXvcy/+Tyikzc9QERDPL0UxL2B0sU90E06PDIbcT2cRxO9EmR9PXiGib20XgG9QPsD
                      PNB+sztK5ne9z3rFvaJBbz0AI8O8GFeAPDdduD3tt7+957dkvYysmLwYAG+8kkMQPcqmXD0Br789
                      RPzzPLBPX7zFRro9nvMSPUIYFT0n2Zg9t2MqvRlZmD3ajhe96BF5PDUTm71hCoM9Fh0hPTSevLzO
                      MoK9kxNUvQJnYz31prm9cc2oPTd5uz2A4I+6gABAveWJy71bU6890EapvXcTf71E//k8WBWbvMIj
                      Kj2SZaK9xcmDvfq+Ar3HOx+9rOwRvfkkyj1YQ8e8gCznuzCi+DtzYZg9CJyavZA4Mb16xmq966Cw
                      PSPQnr065V09aHynvacGdb1Xryy9daqhvaz397wWu149bZ+kvWRC3Dyw0FS9AK65OiCx8Du5B5E9
                      pGTyPIjolb3DA0a97IvaPMqPWL2yRJe9Ex6vPewgi7y/2b89gKzxuy0WMr0RRrs9w1OXPYA4qb3S
                      lWY9+pGNvYcVhT1dNK49OQOFPaiiJrwDry694zqZPfWstz2AvZM7DHm1vLkLrz3sNIS9qO8bPDB2
                      zjssXxW9bNeIvfPcUL2abQq92scvvUcgyT19RMG9ADPzvAiatzyRSbc9FFjQPPO8gT2Q0aW9gHrM
                      O8gE+bxL0JG9mEwWPLSQDL0BkrY9tf2mPQJeST2GOko98iuhvQppu70qixQ9evEZvRfluj3SmVE9
                      zrcfPWDC3Tuz5oy9mNIOvGBJEjuA8eY78CRlvYD0gTpYTDu8SSPMPZDUOTww6hW8JWu1vePua70I
                      VYk8wL5ZPIByYbzjrl698i1bPb27wb3QxZq9+2KPPb0Prb1ntIU9dt1FPYZqIj2uhG096ySrPZYV
                      Sz1a7ni9J0F6vToNa71/xIk9ZshaPZgMebxEYIq9QChsu6ngiD3Jdq49Uu47PS0KT70r3Z69cDsT
                      vKzixryVhp29Ld6RPfgbpr00V7+882o1vaBYw7v9U429dGKSPNSTpDw+9JG9Bvw5PWLzdz07Ko89
                      sq9xPdcZGr1y5kA97OOTvA63PT3ah7+9wAFevD7DcT0Ac6a7UoVEPej2f7y2DBK9wCB0PGojS71f
                      2a+9dJCKPN2bmj094IY9UEtvvOqAMb2oEiu82Ki5vQDHWrsqr6i9akDKvQj6lLwfR689R1q+vZDO
                      Kr2KQlG9qo+0vVxv4TwyKXU9hXKXPZaaMj1QR6S77pxhPTLiCz1RjMo9oEZmu1fvUr0Y/bW8DeNw
                      vdsCn71QR7u9tA+HPBo/c71SXSE9uhqKvZjyvL09QrU9UG1bva8Jxj1A3aC8ZBrjPIMAhT3sf5y8
                      0SuCPYpOPL2EAha9KKWGvftanj0edXM9D4uQPRMXub2dtom9YJ4su57SCz0l7Ka9FFLRPLRXBr2K
                      Y3M9yqEJvS3tL73tUD69iPOqvQDl8zsZv7M9gukQPYaPfj3Q84U7uuZNPScJwb19D0q96MFHvC9C
                      xT1Ic7W91o6HvXIiNT0fKsC9QtsZPQBNwzvJFrs9Ih8uPYdCtr0awGq9Bb6ePQAEb7kyZnQ9lsyb
                      vb3Qf72ghro7ITuoPQnzvT0ogZy8xiwBvcwkhL2gGXK7ta3JPXGWvj15ToI9dNTRPH1iqr2YBei8
                      bECJvBAcbLwMOf68quJhvXI9ej2QAHQ8de6RPYe3qD2AtMY82O0YvK3xKb3eqw89/frKPVOSrD2P
                      qJE91JGwPOhueTyK8Cg9cotLPYqHgL2WiAW9ciMsPcn0pj36WiY9MPc3PF6Nez0ApXI86HtnvPCx
                      KrxuSTk9F5ZevZnqqj3a6zS9CpIpPTMbHr0B1rg9lml+PaDUyrvLB5e9INHhO+wygTxPk6Q9sWOk
                      PQ6AXz1YRoA85l5uPVLcXj3QNzs8d9h4vfrQvb2q8Xq9AAR1vMoSWr0lrb49QFEyO/3+uz1+Xo29
                      4MKSvBe2wL0e6Es9VAWtvOBcvjyo/h+8gNOaOoz/kDy9UG+9l9t/vdqiRT1YRGw8aoHDvYKbVj0h
                      gaQ9QL4CvWCBMLvxV649QeylPQTW3Twd9pq9F+pwvdYkTj3XGo893Y08vbSyvrxo46y9qggLvcZu
                      WD0Ga3Q98/HCPSWCwz3AYRI7181dve+5vT1EUQ+9khNZPeJIPT3eUxo9Pf5VvTgxnbyIL688A/2s
                      PSKhXz1A9A08qghrPccfwr0waue7AODSO4VwoT24eqY8rSd1vRA4Z70A56+8Q85uvT3zb70wcGK9
                      2oJAvQZlh70yg1U9pkcrPYAp37vNC4o9+AitvPE6qD3M5808IHVTveN8Ur1fhsy9FFbYPACymb1T
                      e5q92u5FPUkbnD362Jy9kP5tvFCmfzxd2o09MTasPSwYo7wXmsG9YOj+O1B4IL2YEqo8ANZpuULc
                      FT1i0U89zJXjPLHvgz1XUZ09OuQZvfLNLT3cxw29DNG+PExM0jyZ8b49oDsBvYA1Ejw6o8G9WoVW
                      PYEMmz1Acle9VNXjvNPMRL0xp6I92IdGvKK9w73hqZY9gI2ouhNSqj0VxYI98Be/vahBuLxpdco9
                      9buSPcA9UL2ALG28gB6VugjMi72AtlK8AE24OV4mRz11gso9WESFvWyqC70gDoC8NMycvKpcHb1e
                      4yY9qvaCvXi8zLwTmoE9up+BvaPDZ71dUn69lXCFvawt3TyaeiU9dMnRPGy93Tzg8uQ7haKgPYoy
                      bz1QR/M7B52FPQDlfDrVXoC9lA+DvCgLPbyo7Jw8ikNjvaMkO71nOqk9+hszPSKeST2aDB89sshk
                      PVgdmL1vdpc9ZD+GvRo3cD1MFd48cjcuPdBBF7xuqUE9LZpwvdAPuTsChXY9b0TMvW0Gsj20asA8
                      qM3lvEYUqL0QmUG9AcyvPdofHT2YRi28tmCRvaBUuTyfQMi92LiTvKqFqL2UOMa8gASJvDMljb0h
                      lJ09kJ95vLQy+ryAsYu6UwWcPVnJtT1OySU9uKW8vP1Vu72mph09ADGWvCFrlD3UUNI8dtcNvU/Z
                      sr2xRsc9lNihPCzI8rwfXpA9CjB4vbL4dj0A2sC6NCGCvQCegLzAIJG6ijBwvd+Lw70DiY298AI4
                      vH/bwr1YAwM8Jc+oPawbtjz29hI9osgjPeARNr0CnjU9oid+PZGsxz2bRpk9PS22PawdybyW40U9
                      +m1OvS38Or1Enf08d466vRbnOT2p+qo9MKsMPCEthj0RGqQ9pPTdPIALozsguoq74SW6PZglmLz7
                      65s9LWjBPTOhwj04id+8CCzkvK52Lz2gz5u8nSxyvQPwk70JBZY9ADVzvas9yz2ZBII9wJt6PCy5
                      1zwjQz29uqDLvX4coL3aMpG9AMS8vAwg2TzQaSO9aIF2vIA+azoyniA9kkEUPYuRx73Dh8e9und8
                      vQpPqr1t1p29gLjKPG6gFD3HkIQ9In9XPW7XET1UG9E8MJTvO9uBwL2CckE9PkYxPXN+sr2XqJg9
                      2NtfPEASYbz4R5y9nexGvQyL5Lz5C4Q9AEcGukxICL19Y6W9cOqtvRTKijzN8Gu9/a+gPSzWwTwo
                      0eS8GgQ5vcMasb0U6Pa8m2WvvfKSWj3bsaS9jv9EPdX5rr3z65Y9kJBkvV3ssz13ZV+9KB7mvEkF
                      nT0n+DG9WFptvBARSDw6VJy9KLWovIyskbzT36G9EONWvWj1Ojxr/L69otzFvaAPmb1CYSM9MiFj
                      PQMSsj1KnnY9K8+kvR8glz3j2pC9kl6tvQ3Ya70tb7497NrEPGw+1LwdyKC9gDzROjh7wL0Ak7Y5
                      356QPUv5xT2x5I09NO78PFKlUj0wXma8ALaWOSkjgj1a8km9cKcGvRDdabygYQ271M7uPIaFeD23
                      3MC9cp8mPbDaQbyMlaq88gVNPdisxDzYdLS8Er+NvQCW6bzAX1c8kaSCPTjShrxTT7C9YLRSvVpS
                      x717qaa9LBbnPIvLlT1aHqy9jvd/PRJyiL16Em+9gCfGOt1bNL0wuvm7NPXpvIDj4jrrz4g90IED
                      PCfVrr2z22e99D37vCMALb0N4Sq99FH7vN47h72gQWm9GNRePCBPy7ya8QC9uXSaPVKPhr1Aemy8
                      SklXvYYVPz22F0w9RYesvbC1Gr0FOLW9Mba/PaAOATswJYy95bfEvVsxjr15qIw9wFK/veN/Zb2A
                      JRy8ggE4PRTxF72o5O68kjE+PWthuz3GVQe9VwtPvdYSVT3AJ2k8Y+qQvesek70UgeG8VBzJvBr8
                      E71HGiK9nJrgPE+yrD26yUU95+W7PVoih71SznA9WEPgvFPjTr3hqMM9ReievVa9OT3FiZY9UNzM
                      u4BhQjz7t609bKqIvWgYgbxEsYq96kQdvdCbDTyYUDs8gM+IOxeznT1Fy7Y9DZCDvdDwgbtwYYG9
                      H3S9PUbTXj2ZApg9UDT0u2LBaT1AfGi9I80dvdg1hr00rJA8kTKSPXCjOL3AaGC7KIe0vGJWfT1d
                      CRy9kDM8vETG4Tyq5Yi9cdKHPRpSm73Zqqw9TpExPYAiijoWfk09dDqLvGXYlb2wv3u9ul6ovfLa
                      Pz3+Elw9kPjIvR/9wr0py5A9fdY0vQzr7zxsYca8AH7Nusp0Aj3u30A96rRXvTxl3jxU/aa8BxnB
                      vYiliDzXJY09E9swvaAHPru5UoE9ZYKWvSMrJL3n17c92ITGPACUSLt1tb69M7KcveWXjb1ct/48
                      Ft0tPahPjb1zAJw9siyBvelBpD1o5jc8y5jKPQBA1ztjhsG9PH7+PGsopz0S4H098CY7PDjeqTyX
                      SU69GhNzPRSZ0rxKiZG9IGChO8ray731Kpm90uWgvepBEr3dm4U9IJ05vXW2uL2M69u84PyCO8xI
                      n7yix6q9E5FsvVTppDwMyAW9wCGivbUNpL1ox6S9Mwdkvc+BoD1GYTM97RhOvbBy2zsADKi7F4Km
                      Pcxc1Dy7/YU9+BydPAgPmLwghtI7bhI4PQltmj01icu9DGGHvQ/Sqz2eVRo9anE5PQKUhr0Ay9G7
                      jVx8vYFvmT0o1ZC9YAXkvADgq7fn7jS95hJhPYCu/buKGYS9heK9PZhCHrzCgJa9ql8Jvb7/OD2Q
                      Qh69+DvevBibVbxpvbY9W/mWPb9roj2E84K9iCuPvPi25rxXm4Q98OUivQAlzbyU99i8kGlEvdrV
                      HD26ygE9umsEPf2zKr3wv3u9AJhJOEajGj1iLE49mo4UPRenxL0acQi9mnIhvawu5LxAgh07PjqN
                      vYCHxDuQase995havS3ZY73TfFa9Y5VLvasUtb0de4m9OkJkPZDSGb0YdYQ8UCRAvUA3DbxQfra7
                      kMILvTBX3bsxpss958vKPUjRyb1vsps9T2u5vWR1+zx2ZH49aUKuPfBwBDxAyC08IGa1u4ifkjx6
                      vQW9Yi4yPcUayD1zu8W9lTerPT0sq709tR+94pRuPdYIZT3AePy64AOfvbTGuzy5K7I9CIy1vSLb
                      Pz19YY89Xa52vdAuF72QuVG82Nc3vB6uMD0AuJY87khhPYAvBbyAzIu6B8JjvXGknj3DgDO9BgYx
                      Pfb7h71iqKu9oKS1vCd6bL0q/hI9cZCmPXaPFz0HTYU9XDcNvbQRjTwQaIi9ypcZPfwS3zzSqg89
                      MSSSPTA8e70l/ck9mvGEvWFKgj1jOIk9hjt0PYPSw71WqG09KHZZPG3auL0NlsE9CDq8vPLHDD3g
                      yIM8QEQNPEmTmD12tDE9XeuYvX62Az38M9Q8R25Pvb4Jcj0Focm9ENyMvT/3tb3aCgi95q03PWO2
                      lD2qM569YtV7PTpKcL2tZGm9AzmsPfa2mb3dM4+9R+/GPczRiL3MzPK8Sux8PTjNn70yYQw9mIrf
                      vKEAxz30bM48bXKuvWPPgj2aS8e9uuUuvb6/Ez0sabY81yRxvSgRcLyGgae9swW1PVJZEz2BIcI9
                      iwymvY/nsT1Y4qG8ydLIPWBDNjuwpuM7YC7+vM0yhb2USME8UEAovTDNnb3jt1a9qoyJvdDF7bt6
                      FrO9KHnIvAFkuj2tl2W9LNHjPHRd4bzCDEo9ugRvvbHRwD2R2aI998oyvdCi6LswhLW7gUjLPcR9
                      4jzA1qO8LZVYvYZCMT2tLMI9gw/LvSCCwr3afAk9CuGNvYN4Or1BF4c9lF68PBB3R7yUdrC8ovdC
                      PbqkID0zZIA9llptPfB3Dr2D8J49syCcPZ7XRz3wPnC80FD+u5iYkb0YhqY82KavPNYqlr3g9KQ8
                      jgSovQg+sjx3xb+9qVarPTeRNr2oZyS8fmgdPdWVvb064Tc9GpEAvWBJsbyYWqo8G6y2PbQe2jz/
                      C8K96LCvPL7qKT2Qtci9GHmIvKD3+bwg9JM73KcGvYdmtL2YUsa9pYiJvVU4rL0ULf48dBq6vGB1
                      b7s+vJO9oNDAvJCCo73HW6I9USaAPYebQr0iByA9PrGNvaDXPjv+zVA9aDCRvBNwkz0A9Py8obO4
                      PfrPYr1eWEQ9zNzGvDCUFzykcuc8IYSgPQC/Fjow9GO8+NGRvBe/jz3zOKI97S90vWpdEb2fvso9
                      mAZ9PDi75LwsIgW9O8GQPYhW6bxicnU91s6DvYeLoT2tTqK9+gFtPUBUNruSK1w9qs2UvTprXD3E
                      y+g8ggZOPWjNh7yYPa88dEKNvEBvrbwA0Sy9fnBKPShLkL3W5T897pmHvYPRpT1Fs4C9kSO+PSq0
                      Ir09spC9+rkAvY8Hvj06dRc9gFFfPGqIJD0i8Q09eeyPPXRPtTx6EHI9wLPFPGDRuDuo/cG99byf
                      PZRrlrzQImm8UeaXPciww7xKAUM9earFPR0rnD3Y41e8kssOPYLtXT2Q2EK8wMdUvRByHbzY+xA8
                      aPuKvajpbTyqycS9DczKPaK+fD2Tkmm9LZpNvb3BGb1A11A7YMa1u+Avy7yLlII94Qa4PSBVwbtS
                      OHM94pESPcWup70Iw7w83YBEvRjGmL1md4K9zip9Pc5BRj3zBHa9gPP3Oo4PTD2Ac9y8rOf0vPC1
                      HbxgU6M80KY0PFQ/wbwXXSS9Mm1GPb8DlT0w7DI81niBvaB1nL0A0AM4oxcyvSUDkz1QvY69MBTR
                      O3m2xz2wiT08ezGPPWDoFruB+4g94N3KvaAWkr2S5Eo903wmvbJlVD0KcZS9eeC2PSPhVr3Dk7w9
                      xoWGvSK8SD0xT4Y9UBnZu4DfyjyCv3U9iLzMPJsQrT1Gq0s9+wuKPYF2nD2nzlW9oAZhvVANX7yy
                      pV09MDHYO19gtz3yWhs9DbizvUoLZ73jRnu9oO7GvJZ4Tz2hSaw9pweIPSCvoL3taYM9jeWVPZFr
                      lT3tiHe9AsRPPehFkDyKki09gWqgPYD8hrsAPvu7mFlAPHELpj2A1u07oKH9vIa0CL3EWvM8YOrR
                      u1gKaDznuY09Omm9vUN8q73Nhh69P528PUABW7vL1489XT44veCzrTt+qGU9mMoLvPUilb2AxZ88
                      EOo3vJnVvz3FfKo9I7JUvX2hnT1j2JW9XQe7PbR/zDzzUnq9riePvcjav7y3W709mDlxvGwH2jyA
                      Igw62BOOvWnZvT07/pe9FWC/Pf2KWL0Ypp48RsIUPQBQc7lH/ak9qHJnPE6Alb1g5b29FjlQPbqP
                      Bb2bFaO9h/e1PbzEi71WvgG9TFvvvHKqCj2M9xe9qRaAPbC9Bzyvtq09wOByO9rkXD1GhS895tJb
                      PWXNrb3IkZK85seYvYBJjzsTZ4g9rOXFPG00K72mboa9dMDyPC12Kb3b37W9IHWJvKbFdD3kWvs8
                      MOlkvegtBbwHXVS9TB/0PACRqzsjei+91WbLPfeavj008ds8gANWPLTOw7xaPK69Bh5iPQ7KHz1l
                      G8c9WP0GPADJnbtgsrq9sIV3vPFRkj299o69KKVaPE06nL2SNpC9V4SzPRXwgL3MhoQ8qDYIvNBp
                      H729J7k9j8K/PVfcoT3PRY89OKCavKenpz0MELW8WOcgvDO2rr3YFUs8+JKCvNsSwj2Dih69Os5u
                      PT/7lz0A0Z27DcmzvTgvubzObjs988VUvfvWjz29wUO9mKsnvLAQM7zaTBc9EPBPvfoiTT3hKr89
                      JnyTvQChvTxsCKY8c7KaPXCnIbzhWZ09gqEHPVcbpD3LCry9tFjxvKwdujzTYSm9gJLXO2TJ+zy0
                      oba8HdqqPfMunD2Q1Y69asFePc3wb71axsu9U8eRvWBNJzsw0kq9Wx2WvWp2vL3GQUc9Gk0WvWKE
                      CT0AUCS4ksZPPQrxJ72MOgO90pQ2Pey6s7wA7q47xvdYPWryPr3qNyM9hEDsPNc1nj2AMMe68Yyy
                      Pap+eb2y3xw9t8KAPduPqr3ZwKc9Q5hdvUp7ej1qNgC9uF7RvL0OQL1U0eC8vyzMvXDna72h97s9
                      UQyDPUBKSrxTC2m9CWu+PcqFIL0YPUo84+CGPU8Byj2at6W9Yh2TvbKkvL3bFrM9sxBLvePmtL1k
                      hdc8PcLKPddpV71AMhA8jQCrPQz8mzzdpYG9vw7DvaiHpjx3cL+92M0HvJxz2zyC2kg94xlsva1A
                      s72WTDw9IqE3PbDjt73fXJE9MqcTPUmFrD1DUZ89u/2svUqgrr2yvE091ZGrPXIcXD0wxYW7TM7f
                      PEEVkT3ah6C9Cs0KvfC7Er0zeya9MjpsPUAJfDwiTBE9CrcpvSjuQjzQSWu94BaOOyoQSr2jBTq9
                      z2SxvQ4jET2aWyI9L1Gyvaj2cDzYkhK89LmgvBraub1IEps8uyikvWOgv73TEcg9gDhMvCSU4jzi
                      gsa9KGFePKvRyz0ehJ29IpapvaA7lTwVN6A9myC4PQpXU71i/pu9T+ezPSPjiT06wFu96P/GvbAX
                      f7xQsXw8uEaavLhRvjypOrw9xn5xPdJ/vr12ClQ9sJF9PF07fL1gB4M82Xa9PaC13LzWtam9blAN
                      PZDgHL0ZGZM9AKWYvSCMgzuUzQW9ChehvfNtrb0/t8E9Jol9PRDZazyw5EM8AM1Lu3+UkD0lH709
                      5okWPfiHlb1ALE28uFD6vHCDxr2gt4m8DoOjvX4wKD2xw5Q9zfBuvSroET1jjUe93dpeveAtqTwN
                      FSe9GxLGvUyG4DxwLRq9s++nvejuvb3gnsW78Xq+Pb+Jwb3SSFk9wA/qvDDbYzw3zF29kyBTvVj5
                      yr24uo88lPXdvKgSTTxJyqU9mMYwPMjPn71Yx5Y8sWSOPVicTTzWmT49eYuOPZMTNb3hPJ09KYuP
                      PZpEZT3eFBo9UtsmPftolD1okqm9Q8Ctvfixr7ywg469gkWVvWDGtTuJWZA9aBrzvPoIEz2c6d88
                      4ZmpPUwYi7wLKr29QNdEPCszwr1K/TU9ALdWulaxAr19U689onp+Pbtsmj1Bick9zfFEvawVGb1V
                      E5Y9zb+fPZLsi71g+ly9QLEAuxKKID21Y4i9Tpw/Pbr9Hb0Wh0k9cPIoPKX2qj2K71o9Gvw5PSMx
                      S71ghbc8d9AnvQB7VbxYLNW87ucHPR46ej0i6aq9WE2sPFSw1DxoCoG8dEmGvLIyCz1ChjQ9rVJ/
                      veCItTuWfpG9SH2vPAMkd70QpyY8VbGHPTDNdrxsGoy9j6a6vQBKW73MF6C8xmMjPfgLjrzo5kw8
                      OpRUvYOEuz013sg9nVc8vZlajD0fTZE9TZuQPe0drb2AmL+68jd/PZtxqz0CyE89dBbgPJ7Taz2t
                      w7S92NM9PFbZWD3kFd48edqOPfZqhb2326o9r7yUPdSNgTzkjt884k1uPeaGST0g27S88l4jPX/N
                      hz0Ae1O9g5WfPWBZZ7uAWzk8kjRkPY/Tsz1x7Ls9ChFWvYAHkjpYJ5E87Ia3vOogAL3Uous8uCb+
                      vGf5xT0UsYo848GbPdZYBj1qUWO9CALjvKFosz2kwPY8PUg0vfnpxT3fI5M9QT+SPaiiiTy6nJm9
                      YDs3O/BjbLwCwTQ9RP8LvdYjjb3S5I29CPC9vWCVdLswOxu97k8FPfRl8LzP5sm9+KPwvKJVu72w
                      DxA8YBN6vTvdlz20pfO8AUuoPXzK6jwXhKg9R8JsvZjpebwY10m8r07EPah5zbwAVda5Q8XGvaEU
                      xz3qc0m9vQk2vQ4cEz2AMMS6QBb+vLJknr3jZaU9oDFZvXuovz3rKJ29kP80PG/Spz1lAIA9gMSb
                      vMv2s71YQcu8d5i8vSGcyT0ynaK9zXk9vcAqD7yCjhk9af/GPYJzFD1U+7y8+2mZvVZcCz3U+O88
                      Q1yZPWQn4jxBW689BrNvPTM+T70AH+28rWpavb7scz2swKm8U+xLvdfdRb2L1Yk98lqwvSCJ2Ltg
                      GEu9pC7fPGWWi728J+o8LjscPYF6oj0SQEE9wmwvPVdCd70KRQ09kiW/vWfknz3oTCY8zM60vNpt
                      Qb3wjxW9ZntiPRQKwrwacKO9jHSIvIByeLyeAEY97tRNPYNltj1kG/w862mlPYBTRDzUHNa8iPHp
                      vKjrNLwUyME8MGCcuxWok73FzZW92KAovDpxUT2AuIq8E1CbPZ1usD3Qg108ABNDu+peLz2UZKA8
                      oGkBvbU1mb1A0Yq9wFR4O1OgML24ea+90m2NvZK6Az0Tjbg9aUmkPWLSZj1hE689K96MPZSCmDxP
                      WrO9qvm1vV4tET0UdeY89RbEvbo3f72+1HM9zKniPALGTT0oY0E8wJ1OvW5/qL2fG4M91g0OPS54
                      KT2gUkg78walPVErpz2XG7e9PxyvPUPGcb1Sny49iROtPeDYobvyZHI9K4u8varupL2wPva73UMj
                      vWtQnD3w/AM8NGToPCDXC70uKoq9qRuhPQWml716WpC9qDpbvJHxlz2Dn0e9gGHkutTdnbw9MTW9
                      HRvLPfPkVr3dcpY9oFb5u05CWj1qlqe9MG7kO8GOrD2arX29ONOivXhNn7zICcK9E3JfvQCQ5byO
                      1ns94FRevcIrtL0TZFu9Dvmbvd8Snj2aKg496eu8PaBk5rvAb2K8KOhMvMFgmD3xrrk9er9KvRK/
                      gL0ifx094/46vcpiGT2AYL+9VghIPXO4oD2kARS9AFVVuhRwjDywp669HvZOPSuWsj0tWLY9wC8M
                      vTKgaj1UZu488Kamvcc+vj3rRMk9ecmzPXDUtL2NUaI92mp2PZgdRTwYSh88zUqDPSwShTwbEcM9
                      aMVdvGkkgD3Ag6m8/v6UvfqtIL3MhNM8peWqPaqlZT3a9y89Yj87PTDXwbsj4JC93ZVevc1OLL2g
                      WOA7pETUPBawHD1AmRq8svRXPRgQQLxSXaO9x32yPTsEpb2NiJe9AAP/vInylz33ZMI9J7dFvY27
                      PL2d3q+9SPGKPAAfu71hnYw9KitkvajvUryAY9S6KYycPSjPsjyAHF282HEZPKiyrrzSzai9vWfE
                      PdE0xj25iIc9ysdPPWppLD3HAJI9lsiXvYD7hzoscAq9gJZNOkDZXr0SlT894s2ovYD3tL28cfQ8
                      4NLCu33TuL2Ft6w9pG7QPADC1TuoHVe8KtmovQoDZT0c2wC9S7eBPQLoYj2acVc9LgmEvZzsi70l
                      fsw98Jk8PFgZIzwGPhQ9CBLkvFJtnL1CaHs92xyOvY1moT3GIjw90P4cPI4nOD2A2ZK8drhBPb9U
                      kD1o95e9zxa2vcwKsbx57ag9ACQuOeLyaT3IPp69QDsZvVv9qL3iBQU9C++dPfg+or2w9AC8u+aN
                      vXHEuz0ga8y8WxWcPd2msD0w2Be8fdo5vUBC4LygT+u7mE+svOrdGb2uxWY9oB/Mu+KRaj1olWq8
                      oAQyuzGIjT1gqU+9h5uXPeP2G70zSjO9UROWPfEGlT2QTRG9Yol8PavSuL2Lv5e96hZ7PSuynr2u
                      jRU9WXuzPSKBn73sEbA8UGZsvHlFpT308sO8aC5WPCyM0zzMUO08rnNzPbCWq70wdCC9dNDnPFGh
                      oD3Q/bY7MMMpvcZoRT0wBUc8XkROPcolPr1Piqs9SjiUvdsqjr1glFi78umhvRDqkb20Awm9Gskv
                      vXRG9rwOYW493nyVvQLGTj1oRcY8TwWePfBhIbyWKzA9hJDqPLvAgD3MJaM8ALSLur1qT73CCwc9
                      gJ5KvG0EZr1dr329yvpEPb2GrD0e2gE9VQOWPfIVmb0Y/5e8aCZOvGpJD70MLK08BuJCPZhpTDyQ
                      xEO9qJizvF4jej1HerI9aB+wvRZzND1op208gOT0uzRE87yGpBc9SVS6PSBj5rtdwHW9PlkkPTBH
                      XzyTYna9s9Qjvdbxcj1H+rW95rRHPYJ1WD2doZI9+k+kvVL3dz0cx+A8UcSxPSDwCL3hcaA9AtZF
                      PSwy7Lz0jao8MYmgPYAtSToY6ZG8ENNjvPTq8TzUca68wfrFPVBhuDsjbji98kNJPRL9bT3NPYk9
                      KnMaPbGTwz24loo85BMZvQenI70LZIc9dnoAvYBHj71Qy669/qpGPQAQO7idJ6E9XtwdPZ8SnT0r
                      gq+9mi4xPWpYVj1rUpU9MLZcvOZsbD0dNbI92b6bPUAWejyM3Iq8c72CPbrTBz0f6by9gJimO0Bv
                      yr28WfI8ndVSvZg+G7zUeNC82Fp6vAhMyTzrdrU9xxG6PajgQTxgUP+7NI+dPCBE5LxAKR+8AttN
                      PbOfcr042r69TquZvUAFgTwksAO9MrF3PVCCE7xRTb49/WAzvXZyEb1Af1M7YeKaPXmivT2gBSW9
                      Qog+PedXeL2yiw89oCy2vUDeMjvVKcc9Vr9BPaBH/rtQs9C7JmgSPV3Nrz3YeIm8MHoavUAMwLzL
                      R6K9iMXwvP5XMj0yInw93Sidvcs+vL1tU4O9ugiLvUPEY71Yvps8/sWRvbLXNz0tG7W9c9KhvbQL
                      3jyQZwu8IGz7vN+3sr1/6LQ9s45jvbHLlz1hk6o9zrMRPaUpl72G94+9c4eVPVSfqTzhh4w95CTz
                      POoYMr0Y6Ma9JxttveL2jb1HgEK9t1zDvQkphj3AYxG8WETHPGNxLr1lvYc9bd7LPQKPYT0A4C06
                      wLQ/vQo5L73TWIQ9/t1bPWAdGb1Adnm9N7rHPQAFpL0gYLu7R7W9vamvoD3Qoiu9+G6HvWiFd7wX
                      T0S9rZubvZhMXrwdFRu9rKfAPNikVjxAViO8wne+vUAJAbtxb5s9QA2/vYfIwr1Lw6W9tjCCvYks
                      tT2AzLC94aHKPRcnsb22MB09paDAPehMAbzg/EK9lJIVvdbSGD3Ytps8lC2lPICK8bsH2Yc9cu2q
                      vVvmkj0ilIi91ZebvYoDrL2Zt5M9iquyvXjIv7zI1Y48kyypPYdwxz33Vbe9fk5aPUaxqL0S3o69
                      5s5ePcBgVjuw94M7KGSxPMAyuLzCPTU9dI/mPP1es72YV8C9Hd5FvVdNwT1t/co9/vMdPdRMtjxx
                      p7095rR6PWBiUjutAL09DpxTPfaneT1GmRe9OTOgPfNVs70U0fk808CLPe/Fmz22qiY9wPGEvfSn
                      ljxu0ls9inPMvc0pfr0myQs9lolBPVgfyTw6inw9XDEMvcAvOjwlSLo9AOgmOnpHAD2wP229y/eG
                      PWO+hz2UaQy9ZvIGPQcxN73i76q9kqqKvaDr0DvQl3q9a5vBPcojSD2l4bk9WuMXvZK9XT16ATC9
                      bJGBvVqsGr0S2VY9135vvQAkOrzStJi91DCpPCPVWr14pIk8U4OAPaA6izuQOCu930G9vSkctD03
                      zrS9isQ6PX1qNr042om9c0nLPTAFuDuo6oW9Y4iwPYAGnjvYEc28RWyFvZN/fb27CJ09yu0vPX2X
                      oz3sL5U8MDG1u7RukryR0aY9RlU9PaeUoz32tU09fZitPSBa4ryaAxo9WvrEvQfxZL1sDOu8x8Uf
                      vYCWtTvl08A9UigxPaaWQj2MtPs80LRCPBQ+8zyAt6S9QFwVO0AuQ72I3YU86PWvvQK5JD2nz5I9
                      ECXCvaD6v71DPWO9p3NCvUJiQD0WlD89/EDhPK8etz2qQCK9oHLXvPVtsD2qMBu9QtJSPUPUy71g
                      CIO92YOfPR6FiL1dNbA95zewPQbcaD11iK497PmtvO0deb3CCVA9dgMVPcBlALzT0EK9ECIkvYD1
                      pbxwYWK9CSqFPfzehL2LpMA9YiVyPdZcfz30yQu91mULPS6zm719L4E9rACGvYcssr3snMy8Ugkl
                      PTCumr1AmEi7QmMqPSD38LutS2q92n0APVI+BD1hRr89k4tYvSndiT2rWJe9N9y4vSPfpD2i1KS9
                      1SjLvYQ27jxGDKm9ws5sPZN0ur1K3zo9PAnzPK56QD3Qwlo80qenvRjX/bzKNAM9yldnPWWvjD2q
                      OK+9oGFcu/2WmT1K5cK9Hd2lPa34rb2sQoC8YPP4u4A2ZLriS2I9eH7rvFg2MTwY5IE8oiSXvYEv
                      uT304KE88E4wvYsyw70g3zC9Ap5gPU0/lb0SoEk9d7ayPf2Epz0V+Li92DIyvFflYb2zlRq9AAwr
                      OgyinrxY0dC8klEqPfLrFT3g4KM8oF31u0whl7ziuKK9x65DvVqoT71yJxM9lE+BvMLUZD3nYL49
                      bfjBvWNcS70DuLU9r9S2vcfmqT2AlXa6vYiEPaEBtD2SXms91Ua2veNds73l3IO9GlkTPRVBsb0z
                      TlO9oJJJu4A9Kjzzv8o9KMpCvKP9nD16HFa9CRCVPRdylT0ezHA9AVyXPfjmrbyNoZG9gQ6nPTLJ
                      PD1WeTs9AInBO2rXsL39gri9jQ1JvWh89rwpfYg9AQ3MPXM+JL0j5Rq9I5mBPSDmjrtiDHY9XA2C
                      vUeQPr0ZA6U93Zpbve3InD1TKrU9FRuxPW20vL01lsu9zD6ovCW7rL2Ny8Y9WxSBPWy5hzwg2tq7
                      7DzUvPrCbD15Xro9apoqvb0+RL0VnI69uhgLvQBH0LsfpsE9wzifvXoHwL2BqrY98mREPWws6LzV
                      VYO9gEn4OzhXlzzAArA8AGuDu4AdPLqMbBm9o7+4vVgrnL1ExdI86zCAPZfjZL1I1a88ULEavH1F
                      xb3B08s94BtkvSB2Br3mly499ogqPfaPOD2Mscy84+1rvRFApj1blpo9EOGBvUginTwDmKG9C8CS
                      PUpKNb0AVDE5LiQvPZ3Sf73qTcm9cowKPfn2pT2Td7Q97vGrvUCsD7zQAbO7McKYPdNsuj0QYMq9
                      2bOmPXiIjr3b/5G9+zvLPbbfBr0ptZs9amGuvXlmpj1CwE89rFzcPC3phr16l4G9IBaYPI4tRz3g
                      I+u8cp4qPULvIj3wTrS9DwnCPYD/7TruwoO9WtkCvYrQOj1XyE+9WLjavBvNpz30aZs8QMqtPCIM
                      Lz1g4Iy9oPYoO6yinLwNyHK9JS6kvdXMkD1IlYq8UNv0u3fEjj3JboU9ig04PUr+QL2wJsy9kcqO
                      PdARZLxaSEG99bmSPVopob2VQ4E9ohFQPawdirxqiyM9CG6Cvd63Fj3RBso9QPy6vC9ZjT02Wwy9
                      UCP/u0qOvL2NDyi9zVSkvZTdFL1zbr09oPdcuyMXMr0g6Tm9ABaZvADYEb3C6UE9wG/+vNjnWDxm
                      WYG9TtUxPbhyt7yC67O9wBIkvTPOo70gTcA711tGvfCIHTwAgwu9oKs5vX1npT2uR1o9Z8lrvcvY
                      vT1ATHa7NzkhvTopGj3YTpi9TPcGvQBkorpsrYs8QL9sPAlIhz3gS5y8J3KGPfCGVzxmf6y94kEj
                      PdNIb73miKO9ADN5PAB6ML2zT8g9J2jEvTXrw72AUkQ8Gk7CvdcugD1jDJm9RTaXvWLSPj3ksvQ8
                      kPp4vNqhfz3pJYg9IFy7vDTvpjxSnqW97fpEvZimAbzxzo09QN+xvTfsdL3pfbc90LdivBr4E72m
                      z4K9qBaavSCRtjwAvvK5IC6+PHPQqL104ak8SKS2vRLlx72gb5U8gN6nvHfwuz3NAi+9UPGRvcbl
                      Qz22/YG9wP+nPEXhi73EWYK9QeyiPeuIjz2jW6c9fRBAvT8xvL3AZk+9B7eqPQDMtr1NgZS92E34
                      vICg9bsA1R29IKGqPFxqA73gwYa8OG/yvGhJLrzG7yM9tEvEvLwWD709HZI9qxO/vcArdry6caG9
                      ejARvezq47w24Zi93SQfvQCkVLwABxC8KuxwvcxJ37yJz8k95QC9PS04a73mpo29d+8mvUJvpb2A
                      lKg7heWNPRxGGb36+4C9ei8HvSADzL2ALos6ipBBPQsMjz1Ac229AuZaPXTfhTwUP6G8EoqavcDX
                      P7ss9Qe9oJcbOwDLtjuorr88AsQQPRN9vD36YCE9DdSqPTD3ob3FDLC9YJZtvSAskzygF4W8j9S+
                      vX0Xpj2SeVU94K40vQPvr73ANve8DInEPJ+cyD1zm769b/uyvZissb2J88g9sMCKO1xDD70AqR67
                      B4M6vTjVqDwIhY88m5advedXQ7337im9Y0VBvVCzA73qEh29xxGLPeJrzL2XOpQ9OaXGPcmpuT0A
                      0QS60On3uyyIE70YIH68gPRKPNZuID2QUSo8OCWdvRM4uj0QJTe8NYWNvTYSAD0gNpE7V7s9vekk
                      kD1pyoc9sKChvQOGLL0YV7y86IJyPD7RPD2qJxY9CHOAvVsXq70aeQs9z/+QPcUknr2+ulw9WF+O
                      vY9LyD3oJgw8rLyePCGyiT3xpsE9HP0FvZo0ST0QEg08g3TAvW7RTD0yuCY98sCOvepAGj2NxIm9
                      Pz+tPS5LVT38XeI8weDHPUHbvz0QoRY83IzYPEmWlz3SfVw98Z2dPfyA1jxhZLg9ksRsPZlOiT1v
                      Law9yup8PSBgFr2Ym268Og0NvUA3ojqiITQ9tzo0vTXvx70zsGC9AK4bvVlLkD2hdr09TBWxvL0+
                      oD0l46+9gJ/kutB3Lbwg66k7SiOevcO7or3QeFE8ZjAyPXSpmbzI8LG8mr8BPa5uXD19f1q9UZqU
                      PShi17yDH4I9oITlvJRe8jzT4kK9oBmCu5rzq70A+MS9MLd8PBoTX71DXrk9+7aRPVfDuL0BA5Y9
                      DUCgPbAfkLslxsE9mPmYvOCsmDuz+2S9VBXuvCqyGr1rT749WMmoPO9HyD0FL5C9GmRPPdj3T7x3
                      bq69yaHDPRcZOL09/Mk9RtRoPfhFjr2x85498xCqPdCnFr1v9ps95n0OvXeAfL26Cl49qFCsvAjc
                      k7y3KBq9gCmXvFKDZT06aHy9ACkwugASPDveB1s9LbmgvQxokTxYhU+8Mgh6PQCklrrAH768Ca+5
                      PWiwBLwdC2+98u5SPWf0sL0qdxI9amFIvZvoyz3lisy9ml+mvRsGxj3K6A69V4K8vSKQAD0h0LM9
                      TfRHvYDXwbugBO67vapTvQBk+rsakp+9s4SZPe28IL1CBJq9Db03vRhXg7xCZX09YKaDvHPFuT2X
                      ajq93huavThByzz7ysy9pIIVveOIHb3Aa1m9sT2WPTG6oT3eTE09lPG7PDgByb3eejU9rVU0vSD4
                      sjwwthq8aN90vDugn73gcQ+9dUKpPTOTWb2y16i9WlwiPRPjtT0hCKI9WotUvUkauz1qME09J706
                      vVhopL1kJAS9ascXPS2xjb3Yvbm9NkQXPWg6u70IGbi9MpcYPZnbrT2eFXs9EnEqPeJDcj0znj+9
                      W6i6Pd35sD1Bsrg9QAcAO5NNb70ue3M9YLAcO8r2T71CCwc9opUtPeq5n72sI4i9rdjJvdvitr0A
                      tuK6FCCCvKT97zxDHR29b/iuPdp3ED1KtmU9mopFPeMPYL2d8ki9Fmp9PQ3fvT1b3sm9AEl/unlN
                      jD0AxGS5Z8Y7vYe4uz364hS90Jiauyxm1DxeBVU9JpV/PVkcxz2iJnM9qGJkvCj3Hbw88+M8BxYj
                      vWCVFru2iko98r2LvfcnSb2AVW86aChavGnNxj2AlgC85moiPeAOpLwypDU9IuM+Pc5DLT04YpC8
                      QO02vQB0PLn61Uw9YiVBPUDQULyicjE94V6OPWAZUTtIJYG8eOu0vDPRmr3/ecE96F0xPIrNRb1g
                      xqq81xiyPahN1bxYzly8oGztu+IWg72H/jK97iArPc6nPj2z1cc955Y+veM9w71gUP27IAabvczT
                      gTwYnMu8sBpTPPKDdz3SJ5q9qGi7vCAK3LsoEby9OU2zPQDnDTygCig7tCuIvbBXuzuBEMc9GMm/
                      PFqsUb3oW/a8evUrvY0re73tusA9U7x/vcDtuL1HHcE9KJoFvKw1rTwXf6c9LfauPQiBozzeS249
                      kplSPZbTDD0aSLm9MHFwvFVkiT2mwVY9MCDsu9hxWjwota082NM7vDLVAT2mVRU9cuG3vYDI4Lts
                      s8G8gI8wvfrTLb13xa49iJiuvP2Atz3qhmI9gATJO5fnUr2Adpc6LLf8vJofOb1Idr+8yjamvdBF
                      HDyg4IM7VI2rvPKNfT2Z2pA9Wiy9vfUVub29YKO94W+MPeoKbD2OmzQ9DyaLPRknnT3g6YG7ILKN
                      O4E4uz0aETg9+jJhPdezMr0Extk8SvgYPSC8hzyfXp09fZvAvfuFsb1gcMs8z8jCvSCyu72oxOe8
                      gMupPCaOBT1XwSy97pM5PVOTG73pWbc9oNp7vacuwT117rq9MkZfPZTygb0nU7s9wAW8PNDLkLsA
                      pfQ7BVawvYCQuL2b7Z09WkExPdqzcz0AzvG6chtXPYB2xDqg3Zm8AIZlvaypvjyb4qm9VLPpPAA2
                      N7mKY4e9TWhpvYLrh73kleE8QErNvHo9Mz2it1w9cVatPcYCkr2ogU+8pV6Lvbo0Yj0iHlw9fZc6
                      vYPQYr3sJLE8U12oPY3eO70dy3m9elamvZSX1bwlTa89meyUPVA9j73M17S8YuhvPcD6XDxs8q08
                      gFC4vSD7gDt28ZW9hd7FPSQa6TynC5E9aG+EPK0Ig72Ahkg6ILKQu0/HsT0Y8pC8qAPnvJFnqD1n
                      a329WmYIvUmCmD1t7709EkpdPenmtD2lVso9/ymvvRGbjz2A+g684e+lPZilwb1HW6Q90L8OvFhD
                      5bwhr6g9TEEOvUt+jr0405W9LAjdPIDGJr3aqsG9SqZDvYZiZD3wKjm9O/akvUeuNL0icre9AEgA
                      OiDUhzsS/RE9i/irvcMpS71dBjm9/pNlPYIqRj2gwAA7dxplvUz1vDxbqss9QHeUPBgvlbzA+Ek8
                      GPdgvMYvoL3JqoU9LMfIvBvlwT1hrKI9UPBKvKQY5DxgWFM7zGbhPHqnOD2Y4IA8CWG2PaA/pr2h
                      8pw90E81vRdicb1BGso9+pcbPZI+hb0GIz499325vUL4wr07+MC9L06UPTaTbT3uRVg9w0c8vaxD
                      9bxgZSu78u1JPXzcFb0ASJi6JzhYvUmVvD1cbhi988qVPQZIDz1YfGQ8bVqyPRrrSD26OzA9Kd+p
                      Pcbblb2I0fu8ar4dPQAnSbvU9/E8biKXvfO3ur2ky9M8VHuyvCaMkb0E/fk8smdEPa40or1KqB29
                      WQfHPfd7wr0AWss7OG2bPNUGhr0588I9OSi/PfD1OTxrLaI9W6a0vQfpgT1nV509rT20vYA6uzvY
                      gaw8DI67vEI7p71kSeM8GkazvTDYMrzMxw296pGavXc8aL2oJZE8Ap+qvfAWajzA7J69lFS4PGwF
                      7byBJpM9H3S5vTOVnD0gf8c8I+WmvTqbPT2qNBM9UF/lOzBLjDuAkxm8KBMNvOsjlb0MT9e86PQB
                      PNgmfDw8kIC9cvqWveFkmj2ovUS8KptHPaC3t7yLWY+9zdyFPUebbr0kqRS9ssIWPcNFj70a4WW9
                      wk2xvdjhx7w3yrO9oNI5O1t8uD0SCE0957ZcveaNTj1lTMK90zmuPTn8gj1V57g9clInPfgnn72Q
                      y0e8wFo+PFUsqL1UZv+84J6MPO1hrb3bzaK9XGSGvVjpvjw6aDY9bESxPIMtsj1jPlu9aLvYvCzj
                      0Dwjm8e952QrvSist71mPFg9gGqAu1B1Eb1zCZM9IWidPQDYrrgqSD09U464PQLIOD14oIQ88X+Z
                      PVosI73oYmU8iW6RPRLsEz0xqqc9pqR7PZ0+zD1sHfS8DSVEvaLDAT2jJca9zUFwvWBCyr3GMj89
                      GNLCvBehdr1YhpC8I8xkvQAfBbpYy4q9PHWJvXToDr2gxVy70Yq/PUsTxz0f4Le9FRO6vX0xqT2Q
                      9zk860iNPRtYyr1Ab7U8UL/YOwCs9DqMYda8u0aNPT7Oo70A2s25oqcZPUzZ67wAKmO9wMlvu6h2
                      dbyHf0W9RlE/PTfxvj1Doyu96meBvV7fjb0y/nQ9QN2vurL5ob0wX8K7LuFtPeI2Lz09x5i9oPvo
                      O3Momz30YK68KtYnvT9CuT1u+0g9iipBvfhIozw8u9s87LaJvcdKmz2fhrU9MFnfu2jmt7xd8lm9
                      AEOSvJBIRTyBw8g9YX+oPTPgH70jNK69z8m7vcARUzspRbs9AKj4OhjkxLxi1Tc9wgURPQBBYTrG
                      y5W9UJNzvfQk+7zm/BI9XyybPUCjDbzsTrw80OUtva1sfr0ebyM9TvVVPWg9EbxgnfU7+FTovJqb
                      ub3YQg287POSvNO5r72ibVo9KG29vICtVTqn2cs9AJPWOxfTI71Y9qG85koqPVSUy7xy/1A9jvAT
                      PWDmc7u23Gk9jZWHPRg4gDxBTaE9c2umvQq6Zr3pjbo9KhEovaAgibymJqy9RRGxPdMTlL2lKq+9
                      mrF5vWlfkj0AmSg7wAaHvbrAEr2Mtg69LSuXPQB05LjzHJ89QHEePACd0rk4Tq683MzMPD0iS719
                      cB+9Va6vPVQZ9LwtCqs9kJdBvYCvlDqHIZ09cgQdPTSehL1ohOu8/FfOPCDorzxNCBq91O+1vCB8
                      uzskO/g857xivYDZlTr+sl09teWzPVF+sj3apBm9VhdqPZXFqb0YMIW8MSqEPTFJvD3i05+9K+qb
                      vYDQs7zEiYm9u2yZPSqpAb1kFNg82IejPOZ7kb2YJo69dRq5PciTtLyd5D69oKVEvezs07z7IrU9
                      CsQEPRST0by+skA9YBGXPFPVuD1UHIQ8vZdIvdG/uj3RCMs9cKJMvap+Rj3lg649s/RRvYCWRL1Y
                      RIc8YA4QO0ZoCL1aBcO9MA9/vHa1Zj2A0mG6ABdIu2xhx7zHj8g9TVKPPappLT35MbQ96hISvd3q
                      Kr24toA8K2yavUA8BTzYZxa8kHBHvHAtHDyM3+m8AHffuzWXyz2BEo89UKMXvfdcur0y1Dg9qOuM
                      PFS1wzwy4oi9QKhvvXpxGT0APXs6N5s4vQDdbbxDMo29oPWtvPdIs713zbC9tMmwvBsAlb3UEoo8
                      Bqs7PYlBmj2Tn7u9WbzAPQzH17z+iaW9V5bAvWp5GT3SGDk92W+yPcYxoL1s4q68Of2rPTCwR7zo
                      16i9uGOqPKsWvr2OjC09Mk2OvWgKYLyP1sM9b7SnPQDQT7vQPGi8lvoMPTOhfr2ZR8Q90DqWO3Bq
                      Wb1Jz6I98lUzPblDjz1rRas9cLIbPDDEBTw3sLu9S2zDPZORuz3ABnO7eqxaPWUkgD1gQs87mkoY
                      veKGVT1tzsK9TvuVvegLu73ZuJE9zREcvWMDKL0AmTY7KSGhPXYYTz3bVZc9AOGDvcAI9rx+Ah89
                      cg9tPQD0fzyiZKq93JH5PNZ8Vj0ajC+9IOyfvKHFyj0pcqU9AHo3OSjObbyncKo91KvoPJFLlT27
                      y8M9YsNyPWCM0ry1woy9WPYqPBKUeD1Unoi9NYiYvU2ahL3VcMk9uyjAPc4plr0FSYG9TaFuvfYa
                      l73Yn6m9V2NPvaygsryVhKa9RoiPveuVgT3Ybhu88q59PcCvgTz1Xcg9wCVLO5/hiz2ANow84r+D
                      vTJzPj19q8W9Gg5CvbLVcz3YOoy8hpZYPeJhHT0i5CI9vSRXvUCOpjzB+bU9A7fHvaiiIrwZlI09
                      96CQPbAhxb0RKJ89sARIvYDvLb1MmLK8suk4PTpkd73Xnbc9gymlPUB+XjsSvwQ9NLSTPEfLfL0e
                      74m94lJRPXa7k70Y2C28f6KJPSIWsr2AnI+8a42nPUASZb0hxro94KabvbBCzLuDkiO99IqCPAqt
                      HD3MrLw8iX+rPR3PQr2gmGY7kjd8PViaO7yAWVQ6kt4oPVgcrLw069a8cOAhvezx4zzKFgQ9XeO2
                      PQC0FrrjYsm9kJBWvQwODr0XojW9LFyTvNNFY73QJgI8NkxWPUKxYz33Smm94XfEPYX9i72jcKI9
                      gfizPUC1UDugknK7VbysvX4jcT0bQ8I9GrFpPdjEhjyg6Oi8rTjLPehOMrzFd7e9sPA8POnvyD3y
                      AEQ9UmkDPehUVLz9l8I9AOqhOjhirDyAgkI8RQ6GPVebdb2ABM66FpWrvSTmAr1wyDu9lzuvPeaO
                      g70AnnA8WRO3PYbBXD2NCYQ9qE6wvV0SuD1jKsY95HfQPLRj8ryWYmI9GqU9vVxO8TzQa3A8Y82E
                      PazR7bzEDc087biAvRhOqr2dDDG93hJnPQy+xTzBR4Y9ewzFPVSu2rxYsQ680DFEvVCpEzzLj5S9
                      wBMYvV3RxD3AS5E8jgucvVWLlL01dpA9wqBuPepXBL3g8vA7QcSSPQDtPTp4FJc8i7WEPfAzhr18
                      xPY8kCYlvfpaFb3AEYo8iqezvS65kL0Q6D68lDjQvMUfhz265yO9fes1vXpECD1+OQs9P+qyvfJr
                      Iz2A2uC6MvUiPUjjwr1UUNg8IKW1vNgOwDzyUWk9UrJ2PRCAG7xSEj49RcrMPY0Ear1KJce9kIrF
                      vex777w4Nbm8oiJwPUi3ybwCtQg9nDIFvQDVurm1gcO9ytVOPTDdAjwAE1K7MIBSveFQvj0RpaQ9
                      zU+svV2ip71MaPE8A0pXvY4Fbj3xfsY987xNvbaOgL2Se0894uIuPXLiNz0J1ZU9zAOUPACtxTui
                      /Us9o98nvcOQab0A89c50jWSvdaSRD22xhS9X4vLvTWKvr2AdM46CMmgPAKQLT1jcLY9qFcnvADI
                      NTv6bn49hsGhvVD1LDzlMca9QKCBPLNexL2Nnyy9BGf0PKuniT1M/cO81GXwPMCMwDrGPzc94ih8
                      PShgmrz7c4k91MLIPNh+kLyFU7K9WViXPbogJT3+Vms98IFsvMQI6jz5tYI9UEMGPEDb7byog6i9
                      bgZ6PX2UP71gmE07mqycvYP0kD3Lo8S9uukIPdKoIz2hAaA9GRGdPdiSUDwBTJg9S9zBPahDWDzs
                      wfa8spASPf2GhT1nroc9dmNuPVI9Ej3Z5qY9KYmQPd6iBj3Q0Ae8VjlvPQfDT72A+Yy6mt8wPVAv
                      Nr1sD/a8aMlMPGImDT3Xpnu9Ba6NPe3Wrb1N8MA9YqtuPY7fVz2Qb5W92mJ5PUxAgr10Abq8yhti
                      PbCtv7tWLjE9h8u4vXDREb3QqiC8sGDpu9g2sbwAMDu4Kv0KvYk/qD1gqKm85YiuvYz5xrwgQFO9
                      x4KEPcXCkL3g+pQ8laWLPbC6VDxz2YM9xqoQvdLePz0538o9DlwnPdthiD1xjJ89DZqWvfglqby7
                      XqS9BBYXvaKaWT3CCxo9YPguu334iT1B8qE9MwS/PXWDjL3Q3Qo8Ofy6Pd8Qvr1O3Jy9hs6XvfJp
                      w70hH749dNyMvPc/rb1AQ6G9F9JqvdCBab0N9kK9eR6CPUhgiTzWWV09We2fPRf2Sb1AAh+776an
                      PdkNzD2weik8dEyGvJB+Njy2wzI96J9FvBiaHLyor7i802yJPQCwyLsOIRM9pbmwPbXsl71mHng9
                      dLGkPHCaQL3u/6i9pstuPeDqpTxA3XI8OILSvPr+Xj0oLR28bAXZvLxug71CPhE9QnzKvcgOwL10
                      0+O80kmHvbJUKj3meZy9HTKuPSo5pr2wF429uCSxvGP8Vr34yrW9I7euPVbeBr0oiAc8AMYaPJlG
                      nD0uq1o9AJX8vKocwr2KQDw91BvnvKTBzjygjnI7g3TCvbI+aD3IQ+W8OxesPWA1gDsm3gC9SgJ+
                      vfoov70jCKY9YqR/PYBfODz9viC9YPGKvKB4Xb0bEsa9mBjCvcf+IL2e9aa90BR8vKs7mb06CR+9
                      UIVLvGhIjTzAjDk8p5clvaDbZb39TWW9UhqWvf9ytr1yLRU9QDVFO9X5p73aRla9Y7ugvQBTYL1r
                      sbm9jhiEvdHptz1707k9O1q2PfDYJjzWYis9WNpAPJ2Thj3jCEy9R0QfvQDiRrtXnbi9HVeoPWyr
                      Br3a9lo9EtVfPfAGcbwYBj+8a4WePYBzcb1QLYY7gKkNvHqfGL3IeKy8qoxDPTA6Y73RJJI99Kuv
                      PLDhHLzbfJ49FZ6zPUhBxjx02M08KPXJvfD3dzzORSA9QDMZO3jckDyIpeK8WAUlPOMSO7194ZI9
                      QjW8vaN3oz2zgma9ySyJPUiNiLyzSKC9ipRTvWvZv73jCmy9N5JWveVovD3iPBg9gC7lu+E/iT1z
                      sMI9Z39GvZrBT73yehk9bRxEvbDbO7zw6S68sAQovQiEwrygPrC9/sIHPdrIir2mpWQ96PS7vL4G
                      Hj0AsjI8gPKiPLC0aTzUDYm9wt4LPYzI37xQjb07QamVPfBqY7wn+j69HbKyvZDdr71gsOa8CA2/
                      PCDphbz4PsS8lPOYPELIRT36VYm9wUWIPcS04jyBjbY9goMoPcDmAztq8xa9NUC2PTQvgLxShyQ9
                      495wvTCLEr2KoZ69SNWrvYuFtr3V8as9klR6PbI6jb1x66k9ahIivXKRNT3LZJi90FQfPClSgD0o
                      MHW8rS2+vezfozyAgcG7KuK3veJgpr1YjWw8T+6tvVDAM700ILs8jV7HPVSeyzygCNS7IlEPPZjF
                      lDxv/5891cCFvYyNtjwgOs68WRq3PXbBVz2ILPW8U4KavQNVgT04Roi8akl8PTpKHL2z1aq9erxi
                      PaCPLbua9au96gRbPYzaoLxAdim8gDp9OuAx8bstVMe9hyYtvYrvVL3YSa483cbDPQwPmjxQbbg7
                      iik/vYA/uLveIxU9k8yqveGfpD2F/Jk9WOUUPBpoEL39AYm9U2lFvZVYlr3xYcY97xGCPVC1Dr0L
                      wZg9kqpCPePTqT3Kd8a99d++PR/tvr3loKU9FmYIvYBQXLwgp7q7utO5vW44Kj0fVrM9GxiUPShL
                      ITwCw1s9sBvEOyiIg7wij0s9tHXAPOS97Dy8SxG9xAgOvU50l70Pwqs92il7vc0ww73K/zc90GoY
                      vE0Otz0BBKY9LfmqvaaKGL2qc2y9dBKfvMqXeD1ROIw9cN7HvR5aor2AkME7rOa0vPMNR71Yy1+8
                      LKmivNKuED3dzcY9YYOHPcxViL1AM786PZRuvXBxbzzz3YQ97HDRvEBV0rzC5ws9+jcivahAybyj
                      a3i9IAiAPPIJOz1y1Ki9wCUivMNaRr1DzMk9WGW2vQZ4Tz1HD4w9CQGhPa0Cn70odsm9rg5DPRNM
                      gD3V3o89940uvT0nVL2TcDa9ENomvbrdSr30brY8AOD9OeutpL1mIJG9Ct6qvSTM5zx6Zry9rHMB
                      vd4oVj0g2o48xsyNvWCMu72QhFO8zWOdPeCrQr28fYK98DlBvQJmez0Iusq8QgFOPWG1qz1uhlE9
                      ok81PbSiyzyU3wm9rs5pPSaMEj2NHmC9rWRJvf5jYD0AAOG5N2IavTDQdb3m3Qs9tAv3vOBC4DtG
                      UhU9VgAXPdhUs7zH5IU9eSWCPX8bxb1vL729qJYuvABxSzxN4Jg9FiVaPbvPjr1xrpI9atmrvbPd
                      gz3xB4A9a3WuvfDYZ7ygz5o8ndpRvaL8x72gTwa9FMOxvAC/cDyuxqy9ACFxvFjjiLyo7XS8AAyE
                      vM8dwD30qLg8AEMwvBGZrj2AVca8bTXLvUAR9bzJl4Q9jcuOPRBtELwoQza8GwaevXLTQD3TJsa9
                      k89SvRCTcb2vBL+9nkxpPXoHHL0iYnA98PVKvN0wvj1AH8u6O7CXvYJog72yyYO9UoktPWd2kz0C
                      UQQ9c4nKPfMBpb0J7sg9J3a1veZ2Ij1AuaS9OlgTPdINeD2whvS78LIkPGrvNr1wNX48dxbMPd6+
                      Bz2Ajmy8l/q9PX1iML1VKK49sLGhvdBIqLugmsy7NvVsPYsrr70DUKa96U+LPYObiT2PAMu9TT/M
                      PbdNTb3C0oS9YJ6ZvABTVTrgYvk7fDoLvTbuDb0KKli9nSijPWDIk72oPqC8f5qwPXD5Jbzsd/O8
                      eMzDvFgLnryWYQ+9IA1FvYBYrzuGLZG94FWDO2DjnTzlUpK9AtMEPUelfb2P2cO9x6jJvQJlIz3F
                      uJy9rPDxPBfwiz2dwke98C4cPEOguj1Koym9Di1DPYd0QL2Ajym9lyy4PSv+sb2SqKC94B8svWBX
                      t7tQEa69LJmcvPP8Mr17Ucc9AJcmOt3gmj1YD3c8/iVbPTCv1TuaBR+9gCKQuwpwOb0PGZQ9YlNa
                      Pdebsj2Rv6k9MBl2vDiJ2rxCbxQ9FrFOPflZuj1wnji80O+TO9lIpz3PWLe9o/SSPVD0g7urvJ29
                      rf29PQAFbbra6x89ogw7Pc8Fkj3syaA8QD2cvPYXDb0r5JW9ZpJBPX77BD2whDO9XT03vVc0hD32
                      wzQ9DySuPRM3WL05sos9V3Q/vbMrqj0l7Jo9rEf8vA6TCz3gC629Cnd6PZggDzyylZ+92k1JPTlq
                      yD3LA7e92MsYPPKHWj3A4qo6AABfOdi3P7zApzI758nMPejohLwSk0g9jGGnPAdixb3NHsS9Ordn
                      PcYGm71gCNs7AaSDPTovAD2A7gc67eEvvd8Awr0AFc28z0zLvU8pqz0AwXM8JuAWvWjfSrx9Yki9
                      agOsvRVzt71OxDU9Jw3CvfvHsb1X/7C96GYdPOmQsD0AxxW9kussPT5UOT3d7mq9AIstOuhaeLxY
                      nqe9gBDgvEDCbTzWcYC9kMptvfoQHz1tgXq9kfrFPZFCmz0gB9u8TwPKvagav71wSLu9vnqsvVRh
                      3TzaRzc9LZO5vbgEhzwS1Im9qLaePLaWFb3urWE9xL+LvSAYv7wYx2m8UNK9vfAscjzgGSa9TuA7
                      PemFnz1KPKe9/uIVPdJHGj31KYY9yASyvYD9frrT9mG9Kqq3vbP3gT3voKg9vqqKvUjJ2LxkN9k8
                      K7qYPTffO71r6ps90188vSIrWT3iLXY99qUYvctQgz2x88Q9l+2sPWjgGDwgyqi7oUzBPeNZlz3u
                      b5i9xC33PCgszL3H56o93ROmPTFZpz1gnuO80qtbPQAAezqom7Y8rqoxPS0/fr0w0wY8iIfYvAoY
                      Jz0aLnc9eUeyPX4DKT1IdO28l/l5vZBaWjyzeIs93bZuvUOBnL1AITe7AO/mOyI9Bj3YEJK9Afqp
                      PZlIrz09TIW9nfxgvXrsKb09Yju90FIKvSrswr2SMhI9Qr43PZSen7yn1cm9AIJ2vfhqjzzSXwY9
                      jROrPctcub1zl4k9X1WZPSKFlb1Qvpe9xRq2PQADsbwdfU69PmV2PU32pD0C3wU908WhvQBt07tp
                      3Io9dGn9PBEjsz2Y+nK8GACzvJBhCb0TzWy9IKHEuwOsPL1CowY9dfSJPYwSkLy6ZqC9B4S3vWjz
                      ZrxXYUa9YiV8PWL6t72py689NPCYPNNjeL26dQS9Qcq4PVAPn739N2u95Ej+PNoKDz0A9uA6NvCM
                      vVCm+bsVN4u9ysx/PaAb3Lys0I08GBDyvHUfoj1BdbA9e328PakYoT0Cd3M9r4KkPVifkL01P7Y9
                      crUuPTBfL70PM549RqSpvVo5Kj1Ffbk9kLhuvJrvaj0UXwu9sTbIPVkwsD0cKwy9ziYfPUAwajvj
                      wJ69EL4ovWKaaD0A4M86y+rFvSJlUj2Ywng8xBcVvbvqkD0QLhq8OqSOvUwRhL1KpMO9tIWWvLpI
                      eD0HOMK9F7SAPf5jfD3KoFq9AGmOvTDzbL2WoyA9UE6ZO4l0iT2tjH69fpuXvTxlhr3vVqM9EpS/
                      vUAFd7ttcXO9YOglO6AHAbtWMx89HC3/PHp/oL0H0Lc9sGV2PBnLsD25DaY9d28/vQCkoLvnv6Q9
                      b7WjPQSX/jyFwr290y13vZGEqz2igh89uS3DPXS39rzCJiE9IOyfvBRdpLyyXWo9HlZYPQLQeD27
                      Urg9AG7COgpQGj2YYIG84fKLPTKiHj1+omE9ufKnPfzU1Tybe4894AKKvGv7tT1A7Ek7K1enPTBB
                      ojuC8q69UoV+PRh9kL23XrI9Smw5vV1Jkj1gBMo7j+C+PUnamD3EzdE82tuMvRiD7bxIiOq8UOh9
                      vcCCA71dtB69OHSEvWKlVz3i1QI9iNKDvYqyGr2oAJ68gPqIvUCkWDuninO9uo4mPcdYrb0oYUe8
                      qO64PDEYpD2iO469ESTKPbBwY7xtE5a9JArhPMx6gzxQCCY8VGS/vNKmIj3Ch7G9ANIqOyBZFr1w
                      Jji97BmJvPrKcz2Zs7U9gMJQuuuHxb3AItc66jA8PWJlKz2AOS86ACfDvIx/qrxaOBE9drqWvZic
                      Tzx3Dok9WEqQPJydBb1hIa89MIFEvEDxW7y2t0s9nTeivfDjJjxDJHS94khZPTQkC73VDpU9nYup
                      PQm2tz3soA69Lc+EvQPFvz2bgpS9zlRwPSHkmj3o+Lm9QwuiPTPVMr00O+Q8d2p3vdQb7rzQt8S9
                      ROQJvbOEfb1BlLc96N0svGPwwj3a9ha9wfezPbvgkr2bsKM9QrISPaTT4TyMs7m8+K6EvCHBtz2W
                      uSw9ygG0vc6tKj3iS0k9CjYpvRlYgD31RoE9vXeuvejCp7zyTBQ9/XJvvQsntb3EQvI8qMoLPJAP
                      vr13iym9fci5PeBM1zv0JLi8NK3TvLrjOL3opqu9tCmYvHFZnz3d2DS9Aa2EPaHTsT0AW1k8Knp+
                      vfHmpT1gWrc7qH2/vVAdXTwCPmI9SRCXPcKBKT0KQJG9Lw/APYJQaT0ajIK9ABBOOYu+pL1ZTb49
                      GzabPaI9ND2MneC8ksoWPSAfXL0oqAW86Ym8PaiARryoWWw8/pZ2Pa64oL2SSHk9gd+oPRoQVT2S
                      F2o95iwVvYLBKT0XXbo9Spg2vbQkmzzA1EW988xYvfCtTb3ADJS8NgpVPdWLzL31iqc9FMjkPEhk
                      qr2BFa89i8GUvfF7tz2Cx8K9vt50PepyYz2n0Ee9BcehPWCyLjsAR7m70/C3vfogEz0nnE69WlVs
                      vUtbsL2EmuQ8vRzMPT0JxL3Te3m9ClICvdevML31rKm9oAUXO+aVCL3C5kw9KFm7vU4UUT1FNsw9
                      eEe0PO+pyz2CIZq9Gi59PZaWg71US9481nxbPSYDTz0m4gi9mGpZvABVF7zQ/GK8fTJ9vYAlyLrU
                      BcW8QshfPfU6ib0094w85K4IvcLaZj3cidE8sXLIPWhTqr14v6w8UDuPu5oyU71aEhS9MOzLuyJO
                      mr3LJY09Bs1gPanLgT0TM4E9MgJ8PXMQbb2N3CC9dOEAvWkhuD0zLKG9UQK1PcB6OruM9tA8LQph
                      vQBg4boin4K9FPfqPAPrIr2CqIG96/SqPcUhr739JZk9Y/wbvUznvTzs1/Q8oX28PRNdqz1iVV49
                      JeGxvWxQ4DyYEEG8SJC2vXBPdL2sfNY8dInCvMpWTz3AeRW8gIHkvF+FoD1avoO92Fy3vBTL1zzi
                      1g89RqlWPY2cl70dWYU9kf+JPceikj2tS4K9qHumvbITXj0zQos9WxbLPVuqrT2C7RE9gs93PXUQ
                      jT3s3te8IrBfPUiAs7yFi6M9YQKCPcBzL70dAYe9Yp4bPQBTHjqNs5s9JtA4PSYzND0AOsU6GI6M
                      vI1jNb3gJqg8oCyOO9hatbziDWs97FaxPKUEib2N1FC96rHLvcrbQr1amH89Y9qBPYqUYD0/Isu9
                      QvkGPfF7lj1nyK29gItwPDATurvmYG89n1KQPQm3sD2rh7U9z5ivvV2XQ720Qfe8TSezPT//yr2w
                      bpg7APSYvWzXvzzoUXY8QPg1vQ26RL12IWc9aDuQvKEoyD1ms5O9FD2KvQB8rbukaOc87uVePVTe
                      xLzXWFO9sNQAvd3rHr39+sM9LarIvTgEzLxzH1e9IISyu793vD2wHm+9nUDLvZa4Hz0wHRm8Ekef
                      vdQ1iDy+PqO9IGKHOyVwnb2AIWO9/bRxvXIFZD34Ooy8e9/KPWaIob0sULO8bPPBPDu0rz2ygHk9
                      Kw27PdgMKjxSnVs9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MTEwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNTE0MTEwNHEBYS5kAAAAAAAAANfhPr2Cz3E9AGRTPOK7ub0QbTe8o9yFPSpMSj2h6pA9
                      XWNsvUC/OTugnAO7uk92vSTk2jzlM4e98zm8vUClCzwnSh+9VFDxvHA9ar0urXQ9dhIMvTfhxT0S
                      aWU9CC34vID6DryoQ8Q8MHx9vEbMnL1Y6oc8gOk1vGCj+TuL8pA9mkkCvWQD1DwAB6u8cEhxPMvc
                      k72oD+a8f6iAPXJVuL21Yas9UhsLPQyPnjwMPfo8GAZDvILWLj0YhK+9bcWjPXzMib1AZR+8wIi0
                      vEBGFjvyq3A9HLQTvSEtrj26k1U9rmFMPSIAPT12llY9QqAtPU1GNr1gz5S8NgYDvXrQFz3AK107
                      AosQPdiDRDxxxrE9iLLxvACQCLvYiSa84nAXPQXpgL0oX4C8K6LLPQ2Dij3iDKa9WIWyvCxRyDwg
                      P++7AbKuPcBFGTyUY7o8U0qaPRDFDrzCyks9pmUjPZqfx72PS7c9WhOGvZBBWb0ITae9EL86vWSu
                      2DzDPcu9vlg1PVRovLyNMqC9GIkSvPDJqr0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MTE4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNTE0MTE4NHEBYS5kAAAAAAAAADiluL1T/aI9WOkjPAhOhLydpzC9wGS7vRY9gr3VvIg9
                      JLPvPCAHlTw0CoO8bdGIPftlwr1Tl3O9871mveq1yb3m1Tg9wNBdPFj06bw70Ke9IF55vU2kk73o
                      0JG8eKncvKDgxrwtqJk9guF0PZ4Elb0ax7a9ykoZPaeubr06ky291h0UveN+vr2jtLe9KjUjPeLv
                      OT2QxrS9Ds5wPaC0q7tYQae9mGtUPN18rr1gj5k8NvV9Peg4sTxqnSC92ngSPesApD3zt509OLWT
                      vWLSEz1iFEg9uVODPQN7c735m409m62Yvd5mZT2tYpg97GsUvd1uqr2Am5i61BrZvCMEbb30Pd+8
                      04pqvVKdbD1HInC9isd8vQCfVL1ZZ4E9IO/JuzTplzzAbAc8GORevKzygL1Fdo89+t4dPbHSmD0b
                      Rpk94sBSPT1Ktz3A3oy90GSnvVUakj2sNIY8ITGjPRVmjb37J4g9OCCcPKgC0rwTg5s9V7levdBD
                      lDuo+KW80y+YvaByKLu1CaQ9IM/Cuzneuz0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNTE0MTI2NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNTE0MTI2NHEBYS4BAAAAAAAAAPbbNz0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        vUH2O2XY5jv9Vag7/VWoO6LCpDtgzPE7w2x3O8Nsdztrvgw8HBLQO902iDvdNog7a74MPBwS0Dvd
        Nog73TaIO1Z/xTtGSRU8kD7ZO5A+2TuXl707DOpGPG17uztte7s7DA22O3bJ7TvWY5M71mOTOwwN
        tjt2ye071mOTO9ZjkzsjWWo7DKeiO2K5STtiuUk7YJZOO/JOqju6nWM7up1jO6dZdjvc2Ys7s2QK
        O7NkCjunWXY73NmLO7NkCjuzZAo7I1lqOwynojtiuUk7YrlJO2CWTjvyTqo7up1jO7qdYzunWXY7
        3NmLO7NkCjuzZAo7p1l2O9zZizuzZAo7s2QKOy+wvjs1a8s7VnoLPFZ6Czw8gQ48SjTCO7vJPTy7
        yT08YNKmOyWv4Tt8Xiw8fF4sPGDSpjslr+E7fF4sPHxeLDw6xO07pUadO3Qn2Dt0J9g7Ma73O6sS
        bDvNd/o7zXf6O1n4ADz9esU7pUwfPKVMHzxZ+AA8/XrFO6VMHzylTB880WBIPPtZEDzayGg82sho
        PPtNYzzL3Ak8/01OPP9NTjysnT48BOMnPLKnqTyyp6k8rJ0+PATjJzyyp6k8sqepPNFgSDz7WRA8
        2shoPNrIaDz7TWM8y9wJPP9NTjz/TU48rJ0+PATjJzyyp6k8sqepPKydPjwE4yc8sqepPLKnqTw=
