N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1NzM0NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTAwNTczNDRxAWEuhAMAAAAAAADIyYq+tnZJPsyp1T0/Cog+0sNEPrzzxb1QCZc9SCgB
                      PiLrfD68XLC9ZrfRvYh0lb4T6jW+Iow1PoYJCj4ZGIU+FpLJvXOGqr6pVZ4+BMSGvsAYG74S+nQ+
                      gFwgu5AzhL3+/2w+1IyavrrkRD6csJy90P+SvIg3Hz4uKlS+8/KFPihmQr4OllW+JIj5PeCqIjwb
                      8pc+4i54PsAtZr0S8nc+mq5SPvlDlz6mnBC+5FSlvuIsHj785YM9CcKfPowoo71gzEI8QI7EvSsE
                      qT4SOXM+2LsNPZAZ3zxgBW49rJmfvaZAM75anai+1rxIvg8zg76MJ609vgBOPhEQjz7Ehfo9p4yl
                      Pvu9VL7S5S0+fZqGPhwEhb2A1/G9eAgcPfBt1jy+Mje+Zpl/vrmcpj6WoU4+vXKMPqAd2z0AC/g6
                      BhkZPgB9yr0TJ1m+oFqGvnGBkD50eO894AZuvYiySj0mMJq+B3+PPuqwCD6R6KE+acipPoDBfb2n
                      j6c+kECivGyzgj1bJTm+e+ioPua2r71jF3S+APOyPUCH4ruAiQi+YEjQvYgKOr0vipE+oHp7PMhH
                      Hr2AnDI71hytvUd7k76zvFe+sHPCvfqPhb4vf4A+hiJSvvCAFb7a2UA+oyNdvv6eg762n/69phzX
                      vQDt47qw7vA98sQ1PozMlz0EeKI97+iLvmCjSD1Tkwi+QjwrPuAbrb3b4VG+8FWqPMA1C732S6S+
                      AFG9PTGymz6Aq387lJuEvmK5hb4wrCO++vGfvjOGjD6XYKS+QIEWPQ/ToL6W+Um+BhJKvi0Qpj7A
                      Vom7EgoXPvB8tr24SGy+WUyOPhR1wT17u0i+I8yKPlk5nT5Ah049f9yavsDM4jx06bg9KOUwvQDG
                      ET1T5Yi+4EK/PeDbT7xbLCW+UFguvqDGEj0Qq9C9xtgivsDbTr6RCqQ+AkM+PmrKSz6Od6a+yIoY
                      vmgBLL3oCmO+AEqFPYA4dL7oWwK+uC5/vgBX3TwpQ6g+Q0lnvui/aT3mVhU+IPanvbhnEL3AN+E9
                      AM7vvHr6qb7Sm1M+NE2/PSkLnj5Am/m8Rp1cPhuPCb6wNIC8TLzjPc6Tkr7Qy9y8qOgjPrYHHb4G
                      HEK+S2qUvuDchb4akQE+BvyQviD1KDwa9Cw+E3SePjA8yr2o1xW+DGXZPTZ5Ez66hYG+rMWEvVOz
                      eL5Qj/q8ds0YvoA8973AQpm9DkqjvgBX8zw+1S0+0PD8PZIwaj45up4+m0MEvlkPiT6gsJm9gKg1
                      PINhfr7+5xI+Hm+qvnE2lj6UDcg9JpbgvTLpaD4EasY92fuFPvTJuj14ykO9eFSQvhK2dT77B0i+
                      WmxcPplUoT4A0hq67LiNPUhZCz36W2E+7oEkPuC01z0gtzw8i/invjIjOD74mSg9rBadvqgJFr3A
                      ONK8GNdhvQBDkzqELvg9K6qePpAV272gxOO9HmdBPm4hBD7wxXe+vBb1PVzAiD2AEg2+UsJxPqsP
                      oL5ugYu+R42HPkCK/TuD8Yw+xOCmPUhUE73Aw/Y7jAecPRBvyb2AHDk858+aPo12qj4AflG65mJt
                      PtYmLj6RVIk+gAObvVGlqj4W8FA+JQaePqPdYr6wGe09MNzdPG6jIL4w3928W5Vwvuanvr3Ivxu+
                      zk5KPgiaZb229ho+Oo1iPmIdcD6/dYw+9wCfPlExhD6Ku0M+dKjbPS7DaD6+XFS+CA9JPVjoCr5R
                      TIc+isCfvt4pHT4QkEa+UJ3QvBD29LyARR++GJp4PR5VE74ntYg+SHwKvYQdor6gqUa+4IcEvkii
                      Xb4OFlc+AGCBORu1ab5Cr0A+UiCavkDYpTy6xww+zmdaPsLwPT6YIU++XIGJvpYZZT6YjkE9evlX
                      PqAueT2k4pi+TE/YPVr7DD7YNYq+EKy6PKBRdTxAooS8Cn+GvmDa6D1j7Za+njQOvuAEsL2oaxc+
                      YwsVvoYDo7583sq9gInRPb2Qlz4eyic+KB4BPcU2pj7vlI4+WSmEPmiia77a+Y6+5qgpPq7dYb7L
                      FAq+TFiOvfgUA70N75o+Yw+hPvB92z3Qa6i9QIzgPJ6kqb5jPn++qNAePcBvpjsAGtC84FBLPahw
                      lb4uTDi+0jRNPlA/Zb6a1kg+POChvZTmhr4KqwA+6Gx4vh+Kib77ioc+E8mIPnjher5o4kO+/iUC
                      vtBT+bxfGKS+KMciPRaCVL60peI9kjdDPmISVz6Az2E9i5pHvvQxpL0AEEg8E0OIPjUEkz6gd129
                      2JEIPgYyCD6CWkk+oFkzPBDbg76jDnu+M1tHvvktlz6IwQo+OIkpPVIPVj6rGAm+wdGkPqAwNT2A
                      WlM7Goehvnyrvr3UI4s9+LBwPX4Wcr78WKw9ldOcPlAw0L2KPCc+InMCPmFjoT6HGYg+MJTCvc/F
                      lT5AUWI91s9avgDAJ7vgzUQ9YAYkvcwq/r1AsAS9yKJwvnySwD0KiWc+2CBcvRBWYr6zyZ0+QGKf
                      vYRdrT2+rRY+rZ6SPiCTbb5ApAA9oIXCPWyCpb66Kho+yD+FvqBUiL0bZ6G+ttSevm41HL4hPqI+
                      YOK7PXKEIz422CE+7Bz/Pdat/r0+1x2+NvQqPlPYDr6NYJw+7uVsPgApmz1zWCG+G3Gavnxn6T0e
                      YVi+BsM4vjWOhD5ABya+4Lu8vfJ0lb7G5ma+QF7+vY73Vr6MMeC9yENIvbP4qD6CBzE+M8tvvjaB
                      Kz6W/Su+/rpKPsDJMr5etR++G34AvvLdLj7gjTU8vWmIPnZIMr4aO3M+oKUWPEz14b3jP4C+GBdo
                      PUC7o7yTEjy+G291vuw0zr1P1qE+EgZhPiCUhT0G6nm+c+lNvrFUkD7Ws3S+GE5AvmrUaz6aszo+
                      kM7MvYOrMb6wiYi85uyvvTb/eD4Q2eY93F+tPcAH+L2T4ai+kwmePgt/Z76Tnim+tE6YviAO2D2b
                      HBa+m6NjvuQDm74EJoG+yF9Xvq4OFr4oMk09XLXHPXimEr6YBmo9SuOmvnDYtrz+R1++hmtDvusg
                      Q76qo5K+wA7UvMSXk77GJUW+XXSIPh50Xb4zqSe+3W+hPhaRj76SbTQ+chFvPkaJs71mM4K+Ostc
                      PkDPsz2ocng9IIS5PdXkiT4wOBs+KB0cPeADfTyrDku+kOebPKYX7b05kqc+Sj0xPsbNZr7by5w+
                      myUYvoz3gD0ocRU+UkqUvpg9GL2xTYA+tsSgvhhlDb4Ybzq+xov5vU9NoL5oQQo9+FlYvjqpMT77
                      0Ea+zNeXPdw7/D2gm248NBv8Pc5ql74QLnu+sFOBvYCZdjvShZq+OL8mvp22lD4I6Rc+gPRqu1v9
                      ab7YfSe9fR+DPhDgpL6AFXW7nmxKPlZCYL4ePAi+c+udPmZWKT6CqGU+bObxPcLYNT6kJLI9WPgv
                      vTKiNj61JKo+eh4JPmQJlz3Pdo++7Jy5PbL+nb58wt29AHigu1rXRz7AEpU96cKQPoDZHD6KSHI+
                      PIObPX6RM75AnBQ+61qfPl17mj4gl4W+5yKYPqMwVb5gECi84N4ePtjqGD3gi429W6hhvrJTST4u
                      1y2+aCBDvZC/nr5AIqW+9jR3vnpCcT6QnqC8GPMsvqj2Mr737oY+16mEPt6OFj6beBW+b6qevopd
                      XD5LlF6+DgNqPiqCFj4A/Wu8eBZgPYjhA72mC769pgk3vkb8771goo+9yPMvvcLjZT6cItu9QBZb
                      vYOVbL7YqFy+LSmhPjEVkT7bUiS+55CDPhSHxT14d349vocfPgBzRbzefxy+pzaJvnh5dj222yo+
                      MjyjvvHagj5v0Zm+0+x+vsR+lT21NZk+tm0MPnKtfj7Ig3M9An5VPkbqq716C0g+3u1/vmx3p770
                      WIs9eBlNPYuMRr7uVWq+/t8KPk2Hoz6G6Q++0meIvpsvcr7IPCw9P/eKPmA9Yb2g7Ei9fwGbvuR/
                      jb15vJQ+APbCvQY8rL2a3Ka+r76RvoS81T3QEp68PtUXPgDJ/ju3sYa+RvclvutMTb5A0qc8E+Zz
                      vrh0ZD2DqpK+5NvjPZ4Ehr7GEhE+myQ+vsDnv7w7gGu+UENtvtYkET7wfyq+glSQvoQiuz0AoNw6
                      OKMMPkNImL5s64K+UzeJvnYaQT76vkY+bUSLPsyQgT1AIGM9kKfXPEf1mL4smsu9iAwhPaZTT76A
                      wxi9gxeRPuKPKz5GJlg+jjYGvvJsFz58Mo+9KwiYPs/wp7462TA+Vk5xPjAm/Tzi1ou+2Op+vcBW
                      KL2irD4+XACbvY7iSz4QmJM9tmN+vrCS5LyvaJO+IPkCPShBh76sdb69IEfjvQDSE7xJf5g+cB+j
                      POLaWD4gne29LqJNPmBld72obyc+znZ8vhrFSj5gyOS9gOs3O6MmJb7FCo8+ljMxvtCxUr7Wwc69
                      AP49O8O5Qr5gYg0+MhR9PoCSAj3qXmI+bGzAPQZAIb7nmZC+YBUZPTbxu71SLZK+yj4qPk7bL74A
                      z4I7zh02vqCxID47fVu+viVNvg7QID7DSEa+ELC8vTZT0r18t9C9IZqEPk5yoL7uMAy+qq+fvmVD
                      pz4KgoC+kzM3vloeXT70bLg9AB4aOm1dlT5i+mA+hvIjPvoAID7GfG6+JpIHPvyvuj1nfY2+u/5E
                      vkQVgr7gUXi+8Pp3viZc7r222gw+zFWOvivuab6YeCQ+TsOAvu0Enz7acpy+yp9UPg40dL6EWMk9
                      J9GePqqVOj6EY5a9B+WivsDMyzx6l00+9iNjvo6oU76rOZC+lhpBvtNVWr4TIVy+Wu5HPubnZL6q
                      /p2+pn1EviqHSz5Rk5k+3ErCPRiUIj0hfp0+O+OgvlNWcr4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1Nzk4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MDA1Nzk4NHEBYS5kAAAAAAAAAB6Qgr5os0S+/l5mviO2B74C3nM+wDTLveCSbLwIoYq+
                      0mRtPmy0+r1Qf+A8e6oZviGdnD52HcG90Or6PKC9zz1QDaa+e/A4vsYMVD6EKac9IIlKvtZY8L1S
                      fV8+ihUrPt7fbr7IlUC9brZVPmZ4wr2E8sQ9P1WEPq4Wk75wkdI9Ng5jPsaeRr4my+e9Gk1dPmCa
                      D72eoEM+noBOPujfIL27H06+9sRuvrC+gr5FRqY+wFIsvoBsFL3VFaA+VpsGvmZxaL6DZA++/Gnz
                      PTh+eD3O1KK+aExEPe7tc75Oo1i+wNroPLvWcL5nLKO+YOgNPAAp7T2+gmY+c3IgvnCUtrwW2t29
                      1IbQPQD8F70qN2s+3h8mPlyBkz2nJ4k+xFjJPWBP172m+Rg+IoBWPorGKj52Apu+6vgVPvjzg75U
                      waS+IrV3PgVnnz5+7Ga+G5YwvtMtHb6ztXK+w2aqvswG1D0zjoy+iG8IvdpIMj4mNjO+FgNEPpTC
                      gr7sfMC9lF+qPY1Pqj4EJNU96NItvoo1bz4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1Nzc0NHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTAwNTc3NDRxAWEuECcAAAAAAAAgiMo8NFKEPKkYmj2EAuE8v0S4vSdDX70AkNa8oEmr
                      vPZKLz100N682PyOvTe/Hb10KYq9WDgzvNJoTD2AALA6WmSMvbN/xb21XsE9AAOHuQCharpMK/Y8
                      1B3nvDJnJj2XSsC9l8UcvfZYND0T5Ik9X22NPeMMV71i+6K9eskUvXDhDDz0V6O8I13AvQPDmr0A
                      iHQ8R4O/PUTR2DzmBiM95qOEvTa2Fz1OOXA98ugbPbZ6UD38GYy9AIBsuiwMuzwpNqM9Mst/PYDN
                      /btyCaq9kupYPepZfL3yh1k9GKsevHD6WDzFbo496vsQvUw93DzYhBG8tpGsvTJgq71QEoA7PYJQ
                      vaCoiTyh54o9ZuU8Pctkvr3Jjo498JO6vRkjyz2l3rC9bCbOvPohVT0kUPE8L/7EPVYvXT1Xg8K9
                      dfuzPQS+gL1Zmog9lGmvPJAmAb0Ae5C9WuZRvYCrdr3FyLg9WJakvJf6tD3oWy88qtR4PcPlXr0N
                      3IW9EfKMPTQajDzQ8W68i3WNvUpcCb3TBbW9d+dcvZ30Gr2zpD+9gw23vZlUtj2yNF091BYZvZ4K
                      UT0hBpE9IMO0O/I2IT3DV7W9JGz2PIADI70gwSK9WmFjPaj05bxCRQ89zV5WvbaQkr04LKS86B8r
                      vN7EHz0AQTs6VCnUPIsevj1pA7k98+9DvUCeFTzUGO+8EJ42PGyK5DzyuJi9uTKFPSJFqL3osGG8
                      DLgOvaAu4rzLZqG9tJr+vMCQLbz59JM9AEu3O1iDt72gzzO96BubPAoQDL0MN9G8u+CqvehoA7w6
                      AKS9+Bb9vHeRmj2yXnw9dHCmvIDEq7vSXHg9x92uPSOkqT3wKhW8IDmFuxgUqL3XGTi90s6KvSOS
                      vr2AvAy9Mrw4PTQFpzwsAP+8d3J6vdg4oL0Vjow9I9GRvTAi9btQH4k7wA6FutrhST3uJ1U9mjlk
                      PXlnyD3qnD09/iUgPXB2TTwT+CC9YmNaPTDhqbsEXPc8PT+5vTigpL0C9FA9DjKqvVr1fj2gf7W8
                      MBkmvc0miL10i4Q8sHQgPJ6Lmr1kTP08QqiovXTZAL1MN8w84neBvRBGYzzZRoM9DaUivaBEpTvB
                      yp49nt1VPcRt4Dyzrbu9Sq8oPZIXTD2aB8q9AG8wu4BxBrpt9lK9wCx5OyMRLL1y4AA9jNgBvUVT
                      ij2QLjk8+EqSvOklkD34W8a99rCMvcw9yDz6rFw9F8F6vQCkZrrKOcG96jthvQLiRT0Xs6g9PNwS
                      vYCcozx0tN88A1fEPTcTgT20cp08s9VKvZIjZz3jGbW92Hi4PJuMvr0QJUq9DdugvcAmuLp9Omy9
                      ppl7PXhptb1n8069yBKnvKvCgz3M9tc8FLWgPLjc2ry12MU9UDcRvRAULbxJB789JtGUvab0aj2A
                      +rq80nc6PQAu4LzNWya9gs2uvVgSvzxyRqW98H7EvTVBjz1iBYm9c0GtPejDDzxLjcM9zlCnvVNE
                      Kr0owoc8yrDIvdkZlj1R9Iw9sH6Hu1wbFL09p1e9kCRPvcAqb7uJVbQ9hIaBvRvgpb1683+9rzLI
                      PRQqu7x0+wu9Y30nvWBefL2t46k9VMXKPEohHr3+Zz09sGuAvYeSoj2nEky9wEiYuobFPj2jQqe9
                      BzU1vW2pJb30fbO8XUxmvXDvC7yIVtu8rpRQPWwFurzruai95dzKPURQ+DyAXYO6ldvJPQWepj0A
                      EKY5MgRJPeSR0TwWgEY9s2QbvRIoxb2MbvA8x+NvvRxD3jwozL68CB6RPHmYxz2thJY9dXiGPROH
                      dr27Bbc9aqeTvT99nD3DqF+9kkQYPY1lH70l4re9kHEkPLzW5Tw08L08W6ukvSuCjD0SBZK9MLhY
                      vZezxL2ixmM9IeO5PZBKcDwsrdW8IJzku/ZvHD3Q0GA84HklvTI3fz09n4o9fqxCPXBCFr1WgXU9
                      Ml5VPaL+Yj36GF49rE+3vFAQnL2AYc06EPR2veDLorv4f8y8KA8lPDAcfDyGwhM9wGtMvMB3Azu3
                      gmK9FND3PPfHb71gu8A8uP+5vUZ6Bj2++qS9TkygvYBOf70AtkW8jRNuvdgas7yd6qK9et2BvUDH
                      07oLjqI967K0vTJnHT2A4UE6b1u9PaFCqz05HcI9X2e7PQrTQ70bhpC9JGz4PCmqjD3AAoq9uK+k
                      vFczjj2O/aK9APKlvRuoqT1UP8I8Zl4KPWZ8cz1AfcO6IFaau8KDPD1yu5i9CJSRPI2jQb2DxpM9
                      mx+TvdQbD73jP1a9Jb7APfiSnLxilV09rIygvJ2pRb1Y5QO8FIvfvOzluLywJxi9+kBWPZ7KKz3D
                      SWS9O8DDPddLvz0x+bg9dolUPe4eWD3oL7m9AK9vOqkExz1A8IG8QCoQOygKwbyFO4Y9DTofvVDW
                      PLxuCEc9svUOPcAEPzwA1me9Kde3PRldwj0AdOM45C3dPHQHzDyqzKC9Qm0KPUEmlj0h46M98SWl
                      PXIBaj2R+sA9Q/ycvW1sxT2SDZq9NVaEPW05gT3qkSU9vWOAPWLUhb1wI0S9Oi8OvRjIjzwjlL+9
                      Q3SEPQBDobxvNby9Yli5veAt4Tv+x5m9d1lnvfK7Sz1bPsO9WJkDvNImIT16oLy9bXZ8vWJMAD3L
                      jMM9i9qxPTDgLL3svdq8MqpNPUqiI715lZc9AGelva8puj32NUo9AKdCuz7zSD1ushk9kJaovXNB
                      tT27IoY9oViiPY0cKr3ml0A9R5ZwvbjAm7xAH7O9eu+VvVKAKj2gkO87VIiCvBQfB72q3a69KASO
                      vQtCgT149IS8BALvPDFuqT0QXTy80IHXu3q8JT2ZD4s9lwWxPQYrUT3zAZe9POfxPJYfLj142Lm9
                      sk0zPT1ONb0X26k9Wrs7vZ2zPL2z1UG9wvM3PUg1qr1pqMQ9JQSuvbvboT03r5w9NbipPWfDvz1A
                      Bnq8bdlCvQCGfLnA8Ka6kAYCvJrbTj0MzMy8h7GFPUULxD36IzW9k8J6vdIXPD30i6o8mCgAvKiB
                      NTxAkHS9YnEkPVstoL2sB4i8sbSEPQHKqD0BqYk9wKVAO8Ahyjw1nao9ptGcvYBqh7zjwLm9AIK9
                      uul8kD08aA+9sIf3u3uhpr2h68s9DIOqPKh6xTw9Gb49BFbhPFM8M72475O8QIGuvMpcJr3NTl29
                      aqpTPcZaCD0gk7w8ABXEuWi6RLxYMK28wL4tvXJASz0aa529Fay0vcZJQT1osgC8ldeFvdPgJL0F
                      24W9tkk6PSjwkjzQRbu7Mnu0vb8gwj1Paao9Rn5xPYePkz0eNjA9ElLJvd2kqT2yyA49m/iuPX5q
                      Jj1gFyq76Fl3vDSHgb3G64S9LCr7vDvMyb0y1Bw9YpgzPf21pj0AM3C8tluXvaowwr3HsMo9ORu4
                      PaIcdz3wwJ+9MKUVvagvOrwZObI92PZHvOAnhbzN1YI90LuWO+Cjtbto/nU8uh2avVIMLD0BD8w9
                      iRaBPaMdjD3Ed/s8YAhpO+22Hb3YOLW9gLM8veqsHD3gHou9ldOqPZQK3jzFVIi9BcSovb3OIr0T
                      QHe9Fg5hPZiW/7yCYyA9uha+vacgbb2gDx27zNe7PDWLiD0znrU9uT+9PSMCkz1IiYS9QsE/PdSJ
                      2jyQOVK8gEKOvLbobD28Tf48ksMpPekAqj3tR0q9piYPPbA6j70Ahsi6AJqlOebrIz2gqf28g6yQ
                      vcDGgrwQfF+9ALaDOZABt73aphC9XPkQvV2dS71H4cg9EoTLvRjCFDwstLY8GnUKPSBklTzQCiE8
                      t95zvVU8pb0yiXU9FSWYvc1Wd72+wE89ilWlvTPSRL2s4/G8rjxFPSsZvD1tsDK9E5o5vZLwSz3x
                      47A9esJyPXSPzTyOq1k94npzPWvcuz2DBWS9aMuvvD2cur2Dcsa93phZPbNDpb3QGlA81vKZvdP8
                      lT2+E109b87IvYAVSzy8GQC9eaClPehPxzxNxrI9m7OJPfhwkbyCIkY9Ouh2vYndxz2NHps9DNCz
                      vIAhijzCKD09mceoPegWOLygNq+8AAfUu6hqkLyFOIo9tjMjPVqAQD0+Eam9yn+Nvbjg3bzJNqA9
                      6ht3PfRdgLzqQAe9NtYFPaLZJT2YR8M8angBPRg8ubyi9l09PkNHPWyFwzx6VA89OpAfvRSVubya
                      UKu9OJepvEazNj14HM68cJMjPIBS/LvrHsi9AMBYugPWL71IlJq8IwzCveAotr2A78K6QjonPdfr
                      mz3HsC69md2XPcA1iL2s4908gLqUPIMmXr3gpn+93BCGvbqCOb318ZU9sHPWu4BuuzxAj3S8ONqE
                      PPlLnT1J0Yc9AjlwPXeCer2M/8Y8wKakura/AD1ofL+8pHQJvbK0ub0fgbi9zpuXvd7VHj39O1u9
                      QPh3vAZWqr0uTKW9kNAovK1bSb1nyqY9E1A6vb2Err1QUg68diIGPRrPc71xS8c9JQ+FPRnRjT0A
                      6r85AAKBu3lGvz0QbxK8nX+DPdkjvT2wyCU8GMOSvbnshD0VnKC99+y1PZdVLr2n6029iG2AvXgV
                      i7yocjS8oE1hO91ao73wAyO8+hVNvXGOhD20lOw8IWjDPeDCwb1q9xM9Q7l0vffghT0gzK870CJn
                      vBi6Ajyqux29FFi0vEDnPbuizRc90vRMPco/v73SVE89gG+KvPwH3Tx+5JW9NGLOvFXhgL0AwFy3
                      jDnkvMWgnD18rQ+9uQOvPZ8Jyb3WbBQ9CDKMvPFxnj3AO3q8F8l3vequKj0BDsI9fqkSPRiPg7wM
                      BtE8TZi7vVTBCr2Q3z69wlI4PcCGtrpse4G90J4bPFPGxL0ak629IK8MvT1Ser39q7s9mM41PA1j
                      y73Y2UI8mIR7POi2nLw4nZo85bXEPfRThzx9R229WP2iveTO+zz4YMc8FBGIPKDl+7spaow9KvV4
                      vaCX2TuFdaO9LSyIPQ6KLj3YWiS8OFaOPHhvyLwsd+48TTKxPfVljT392ak9CPHBPOAelbxq4rS9
                      UcyLPYIAaj0Y2pE8cySxPUiAgbx51Z89qyCoPY1bMb1GL6u94geNvdQW/rxB7IM9Qgo6PXOFxr0o
                      dEk8kjUcPa+JwD1uPo+9ev/KvVMutj1Yd4S9ksAjPchfyL39Gcu9iEzSvJqcNr1nDY89+stmPbQ/
                      rryxUJQ9WfuZPdJglL2Ekvg8Y+mYPQ1evD0pkJU90PI0vIe7ZL01nIk9mn0NPapkHr20IbE82ula
                      vf0/yz1QJ8u9IG3FO7NXdr3NHrM9ltkWvWuhuD0wyiy8umUvPUCMfLyiflc97X+fPYIWWT3nkaA9
                      i0axPadIbL2oDmi8Ek1nPargOz0wara7YlahveVogL2IO488JEXSPDIdTD0hZLs99KGEvTKMej08
                      5es8GC8OvF2LY73tqWq9JrQVvWAAeb192Yk9H4e9vSUmlD2AHX26ADyIOj5OdD0NGjC9zIjavLO2
                      uz2A5KQ6LqKZvWLAez2luL29EIPFvb9QrT0JF8c9bIr5vEr0V71AKEI8m/CtPdCKHrzIhOO8aB8H
                      vHGiwj2UDdS8WtINPQwMtjx2nGY9kuOavTjX87w7EJW9EjBEPdOanz0qhVo9pQKpPagrdbwAi2m9
                      FbCAvfKitL2gUOe7VH7rPMxo0by9nmO9IYKUPdjA3LwqeTI9ELU/vdD0xrsAqf28KJWsvJaDJT1Y
                      Sao8R7WiPcfVJb0juL09s8JEvX/Bs71eAx092lx4vWeTV72gWco7ngwuPcBdYLuAZgy6VU+JvYqS
                      Fb3oYx68ANkfPKGvhz31Ur69EJ5lPE3xsb2Ymzm8An+nvWB/RrtYcaI86XfGPTJccz0HKI49/fRx
                      vRCvdzxmBKa9o85Nva/1kz30wBi9qoBYvfEspD1eUEA9Ct4lvVOmxb2whGS881SQvQAUJbsqCGY9
                      AIOnPIIrND0oQIO9I5sqvRiQMrxD2as92Mj2vJrmHj23Ci294ZusPefAWb0tUD69ukMgPYOYVb1G
                      UI29hWmHvcwT0LxS+lA9ZJeMvehUeTzsQwG94Jb5vDeYfb3u/ZC9mN19vNx41DyJxLU9Ld9CvRxd
                      2TxqdHY9vR6AvTAZv71n1co9zDD8PJdNmj2g+pm9KOLIvAs+lj13xKY9s5C2PVuut71nLh69sOgH
                      vRN5vD3uMQM9vsU1PfLOKj0Rq4A9jObxvGi3zL2XN7C9aSuYPZJtFj1LMai9dAkMvVMsN715ysc9
                      qu1VveomhL36R0a9EqDFvTATNjx22Au98lQdPYZ6QD1DtJe9MEKxO8/YpT3oKqG8nmyTvRQ4rzz8
                      VoO9Q1OwvbLZTj1zurQ9QN1LO33aKb0VMKg9ZkQbPRSjEr0gKc27Y6mTPToFNr0fQJM9JcitPaIT
                      j70b66o9WszJvfoLXj2O5ZG9qnBevQAFULvCyUs97ldcPex82ryUGZw86SOrPdvJj70DtR+9TEe2
                      PAgdwb27xaU9RbahPSmetD3M5948K5CZvZEjqz1Qi3282ryTvToYjr0V2pu9Z0i9vV+pyj2tpEu9
                      B/O7vXD7pb1IFKm9Lkh0PZANdb0SLMS9sGMcvOvTtr3wM769k3tovSZ8Rj0AuHo7cmtPPQ9muL2o
                      EYU8MNn6uzpvvb0gdL08ZzBTva1Osb1QvgM8N7levSjM1LwqkUE9zGAFvR3Ajz3pgpI9vaS7vYhf
                      67wTX8I98tCYvXR75zws0A+9LRaLvcYUEz0Gg6W98LsqvJQe/jwW0Aa9d8RPvTCwIbwQWEq93YRO
                      vcDrGbuR/6M9JWKFPeYBGz07g769vleHvUrgOb2n/Eq9kLBlPG53Yj0MLYC8qltQPXDRxb3uuTM9
                      tpmkvbKFv72DmaK9sJATPPLMYj33YDG9nT06vbLjUT0dGYI9XRdTvTqtxr1ok7m813JJvZmQhz2j
                      LZm9wP6RvKoHYD3Av3S8iWWWPSHfsD1y8VA9ENgUvT2anb072by9SETHPHJYgr1AlUa8lVygPRiU
                      hTyqhRC9MeGoPd6xcT1ATRk7swo7vfobMD1ftJo9GkqivXgPrDwSqIC9nfo4vTTdx7zgasg7QJpb
                      vc2Iur2Atku9U+dxvdZKfj2mOaG9YJUbO4btEr20nIy891rAPcm5oD0oAzS8HcgmvZDhp71UbgW9
                      A39fvYznyzxAbtq8Y2mHPVV0or3wO5y9QjwAPea2aj1Ti3C9wKpPO9IgMD1YTe68B7pkvc7naj0b
                      Q7M9LWa3Pe2OpT3TJk696JTHPCSd/Dz0CL08kwklvbH2rz267CO9XnY/PcAAKLyTmWu90kd3PVbg
                      UD0KeIC9XxvFvXdwoT01Ba498qgVPfNSyb3Ll729AX69PSKIBz2SixA9vaHCPeWgtD2XV8s9eCK8
                      PCDnobswL5e76A7BvcXfyD1dzpS9QjkYPRL5r726daS9X2fHvTRypzzMLgO9ntNqPcT1ib2AlEc8
                      LHKZPKu7sj2o0mc8+u5BPQHayj2h4ao9uCDAPAqUbD1GY0I9QPYWuxLpZD0HALM9pgoTvbkSnD26
                      JxY9EncAPU74fD2A4Ju8LmN3PbiPjryld5M9WG+mvVO9or0l8Km9wCmVvIPwLr3NPsU9kBJBvbCL
                      07uX74w9jGikvPW8iT3KGik9ENAxPODz0ztIiL29I4E9vXwF4DxneXm9sKzzuycIwL1CEEA98SvI
                      PTB01DsYXty8wWeOPUB/ZTsGSAo96tNbvUB4Yr2TPUC9WzejPSpNS727co29zGuovBB4Ir2AJXs8
                      qXulPcZzHz1V2Iq9aEevvE4ncz0ov/O8WISnvVjD07wffrW9brQOPT3At70F/JK9sDl2vKQvGL0A
                      Roe5ByxxvcC10byoQQY8abWxPedDZL0atAU9XxfDva0Zlj05lcY94gSXvT5vQT3sTQa9sn90PVrJ
                      Rr2iaCM94J2evUoNFD19BMe9bPqzPEqSYL1sMrU8F7G7vZjeVTz0ts68CySwvVEngD0uZaq9fl4b
                      PeaLPz3OvRY9Coo4PYEqnz0dUiK9C9u8PSFTjD0MB+y8NlVqPVB8cjygiL+8gHV/OlcxUb16zYG9
                      LngFPfDVK7zE5OU8FbDFPWOYZb3kSwe9C5emvf1dNb1USZq82KYPvNDTuLv2aIO9wJBXvZMGxj3W
                      MQW9KsFdPdASYDzD1cU9U1eBPcD7ZrwCvjw9E/ZevRimgzx4QpA8xIfQPG/nvT2MZLQ8S/azvUFE
                      uT2aKX29cLpFvED7wb0OJAY9HTIlvY1Lgb2WBT09grJCPVBvmr1THFO9YK8RvWH+hD0RRLk9GDiL
                      vMcPZb2Kw0y9EhJ6PQDhq71gCVo7002ePQg0n725mJM9elZ+vZGanz2Rxrg94IfMO+y8tzzAH8U8
                      Z3CXPeRe1Dxn97W9LDkVvRB8ZL05s5k9p/EcvbDc3LsKgl29U/SnvZPUkb3ATxK8IAavvN00T731
                      qqo9ljSDvYmmxz0YEiS86LezvBA8Mb16tlc9M7WHPeB6h7yM5eG8QFkrvVfgiT3yVFg9ANtLvKdF
                      jT0wJg686ASkvforYr0oRT88QGxjO5OKLL2KzAe98FykvRAvd70QtKO9Dic1PXJIpL208+E8wJ3Q
                      vGrTeT3A9N46EIZIvVi1jTwU08s8RRGqvZIZSj0lIYM9+JWKvPSyxjwqzbe9VjOivfgOxTwANwu8
                      bX8jvdeky71+GDM9UGCEO4N5er3Dpyq9LMmZPFp7Wj0fnbm9GM4tPDJ0vb2fQr69IoZjPZDnALwz
                      i6e9sloRPQFBnj0Adv85tJ2XPKEjzD0S3YO9qKkbvCszoj3lnbi969SdvaBe0bvjxMg9ZOiCvez1
                      0TzTyla9YO6evdpynr2Y9sM8APkHuig7cDxnWqQ9WhxtvTtdrj2NUUq9wO/svCEHtj0i9Vg9Is9d
                      PYp+cT0i2h09UPFcvUDU5bxyiE09AJAHuQwxuzyINaq9AL3fuRpILz0YKny8KKsKPCEruT3AH1+9
                      YKbDvMD8QLzNekO9sJiGuzCRbL0KLwu9OsNyvY8YoD01uYU9kOSkvSomXj14r4e9Lc0sva+uqD33
                      l3S9Q6BWvSqhSb0AHF65sN7+u5ObS72GbU09h1WIPY71Qj1Er/c8Pm6rvbbdLj3yuHc9rn6ivVgT
                      qL3KHGo9mHeuPPT+pjzxo4k9vtONvQq0JL2fN7M9rmA9PcGYvz2Qh6i9GkYFPevLjT0QFza9AO9B
                      OyBhnr3NNFC9dn58PRIybz3d8la9LO3UvOjcprzsUbC89N+2vCAIsb2SgRU9gKnnOiBx6juWKVg9
                      7qY/PdCBTbyHtTy9SbrMPR8ahz1cQdE8bUt4vdD0Rzxg86m7DE3bvMiGgzzO+V49IoNIPQJdh72t
                      p709An/KveiBEzzckoy9MGQBPG34Rb2Y4B68on2jvRd5Jr2AOZS8/jwcPQshwr2w24y9/m5tPYwf
                      iL3Ov5e9f1K8vSB9k7tFw8C9CbG/PaAO47zO9WI9yNmUvSJnbj1whWq8ytaIvTBYNjyA/Qs6dAmU
                      vH0lI70jfZA9UHU4vMKqZT0da0W9skpCPWz0/byI0K48wN0EPC5DGT0wpHS9oiwVPQ0boD2Il+W8
                      sp8nPV/6jT3zSZ+9vUSaPagGjL0AGAq69iOlvRhcDjweVgY91VeqPQCc07rw61I8uQWLPfpfND0K
                      NIm9LVhhvRetNb1KOsG9UgO+vZG/mz37+r69PWSJveMFYb1og5q90NGtvdBhrLtak049ONrlvEW7
                      vL2yvQE9QG6YvRKhx70AzKM7aUfAPSIumr0S8kY9cnFxPbYEk70TY6G90hJ8PboEUz10DoC8rfy+
                      PZFmlT1peow92eq9PdIPHD06olO9wPOzPHWnoz1Vgpe9Hy6hPYLvUD0EEAi9nqyMvVquuL3arDk9
                      vZAzve20VL3Zmcc9EkNZPei5wrws7wi9gEZevD1wtj0Y3NS8QqCdvZN2mb0ySmU9kowlPcTRhb1g
                      DR+7qAJhvDDT3LtW34e9lpxyPYdPv72w0Ey802BdvSXPlb3qYcm9pFwEvWtjrz2jP7a9tADSPN0Y
                      QL2nkIc9N3uYPex5ubxLP8s9AHpsPNAH3bvA4ly91DDJvJi4y72zd409gnsePQBPN7roaDy8UNJ7
                      PIAhdjwQ92y8ewKlPT9rhD0GN1I96m0fPecwwr2bI8i9UvxoPXpBi72NwZa95vSSvXipvr0AQaa9
                      aL4kPLZ2Vz1aLGq9gkHGvX0eiD1G6xM92WjLPQpcM72aDqG9hyeBPemCxD3iW3c9gKksPJPcML25
                      nKU9oByRvIg2xr3ObDQ92n1HvRPLqj21vpa9SNjwvEJmcD2LuaI9IDnWvFiFKjxyUnk94nSmvWlh
                      mT0i6sO9BtcRPRoSJ72hEcg9UDWlvTB3u72zcZg9OCXyvIFUtj0Yjde89UO3vYVDuz04Bai88cSK
                      PRWYvT1xaog9qla8vcwfkryiHEA9jBDgPIAiBr25+7I9VZyIPTTJC72KY2i9XarBPYndsD293XK9
                      X0epPXDpCb2Sc3w9bn1QPRj54ryAdsu9oCyMuwAtXbr5PbM9LuSVvYNOkr0qlVQ9VbLJPdF0rj0r
                      0L29rBoLvbSsoLyYkKc8ur3FvZNyRL3neLK9kEsWvHUbm72VzMW9ejoTPWdhtr0bc5c921uuve1y
                      ob1sDuU8eQW4PfXXtD2Ez9g8gOwfPIjpnrxpAbo9vDoDvSfUyL1VwZA93cDCPV1iiD3IyYk8jMee
                      PBJGGD0pG8Q9y7GqPQMZcL36v8W9s1uNPTo7Ej3Mht085JjxPOn9oj1a1mm9GCJHPIPLur0YcP28
                      TBnRvDVko71QT+y7IM3svD2ucL3abSq9EuhGPTCW6ztgeTu90KD5OwDKtLskAc08TmssPcLZNz3h
                      tpY9IIOXvP3BiD08IvQ8WHl6PEJvjr0uT4q9tx+9va1gbb3skKq8ztUSPQVTq72SeC89OCT9vABW
                      PDymmR89piZ0PTraAz0AaQK9S+eyvcpGTr33OLc9zusHPVU2rr1OMDs92PCcvV4lqL3yi3Y9MLSU
                      O2KhMz0NYJI9YJqfu6i1/7y6pm49QJ3+OlfFhD2zUiC9qSCMPR0vuz0AgIu5QPozOxaGKD0RhI09
                      bJqBPBhNn7y++ls9QD8xvA0ldb3/qci90WSBPX+skz3NrIO9U5RevRICOj3SxFM9lSrBvf0OLb3S
                      DTM9WswRPQYHAD1gXOS8MhEcPU2Im73zuIY9fV2iPQe4pz1U4b88FCP1vOjgbTz+Wmg9MA6mvfpI
                      kr2ds4A96BWfvRwVEr1OKyQ9jbWavZ2hjL2tuhy94GCjvfUJg72QSDk8YKEsvco2Vj2gJY68oEG3
                      u5NRyz17jbw98F14PDMvIb0AloU83YCfvVUGuD0YcX286ikOvSWVnz1qihO9xqAKPQA5rr3YV7e9
                      ZMHzPHZcFT3qP569HFwRvWDe/buFA6W9GBssvEB9hDrge1a9rP+TvNfkmD2CE3w9QpkRPTVDkr0f
                      9cq9wMgcvI3xcb2sQgu9qlV7vUdaYL18Ggm9tmapvXfzbb0wE3E8MRi2PZgEOryqXw29IhtpPatq
                      mb2WeTA9J/21vUo0lL0AlM86HlkqPXkNmj0AHcg7umcYPSgDh7wLpqQ97J2PvJG+jT27IYI9iE/J
                      vFg8GLzqfnM9UMtPvJL9Ej2A9nm8lvZ/PQkvvz2AuS687QQyvYlCtj07Rqs9C+CDPR7PVj2ekpy9
                      98Y6vaXyvj0Y2UU8yuFtPUGxoz2tEYI9M2YzvZG0lj0viI89oK3Fveyr7rw0S9G8lqwVPdKdTj0s
                      ysq8SpVKvWYqHj2hwq09cD1vvXSOkDxidJC96EqPPLFmrj3gKI07sN++O12JpT2H+b+9xbyRvTHU
                      iD39LIa9ABg0vOvMl73C7JO9BhOrvYE/xT1QAVy8bDmmvEARqL3j+Sm9MDRsvMBTMbwo90a8AFj+
                      OSjwijz6uHQ9IKCdvVhgJTwYbMg8WMiNvKwQ3zxAy8o6yG/EPOfEdL0Ynlw8oTO3PWEssD3pi7I9
                      00MvvcDUoLqS6kg9EVSGPejfjTwP2sc9NL4YvfIQqL3wxrC9yLfGvDMfr73T3o89kwisPfKEdD1/
                      Pca9IPOou3QNmrxaPG49arKWvbNdoD1JXME9ke2/PRWTkL3es4u9rMPbvLIHQj23UmG9lv9mPcTQ
                      2jy8res8GlQnPa/jtr3eICo9SpC4vVmTrz10wcw8EJxAvRB6OTyOVzU9seCqPR/3yj0qIMW9PlEF
                      PUhmsDxoCT68MEtNvUK/BD1UgsY8uvwIPWRtCL3IpcC95owCPZ0qar0yiUo9mocnPcCaELvaf2w9
                      wBgUu9gtn7xbbLC92KbTvK3vlj0IXK68jiEGPRugiD3af5i9mvmSvQKhtL2M0Kg8FMvaPFosMj3b
                      pMS99F4GvQB9/7tAV0e8lIj3PChyB7wC5GQ9kGK0vVO9k72xfsY90NlvPAoOmL21o4290ZTAPVAS
                      qbv2QRs9QFwWO00hhr1hoZE92LeqvHWdo730TpM8c+YuvQg4gLxqGB+9nbh5vVcmX71iKX09U3JV
                      vQJocD2gstK80L2bu8nrhD0Tc6M9EXCPPe2AbL3eJIS9sM5vPEAbSb15OLw9um06vWC2nbx4+Za8
                      QPvuOodgs71QvH08ADQ5vBBNsL3Fs4k9KoKHvWjuGbyrqpi9R/I7vdITFD3gHeC7TPKZvDLhGj2m
                      FWw9WFV/vO1ryT37xLS91YOzPQCCPTtADxc8mriLvZkIpT0g+Mm9UIkzPC6jn71NspK9S4WqPQBr
                      k70dZca9AOklOmAaaruMW428DlsCPcQy1DzDeE+9DU2rPaNeub2A1OS7haWmvVrCc72Ts3i9+/XE
                      vXX7or0FBoU94rFMPXUKiT0QL1C9+ptFPbCnSL3aN3C9vTK8vYCIwrwMEr+8qBaOPABxG7tzqEi9
                      uHTZvABySzzYdoC8YN69PEAF2rzgrIm8mAnlvNoNez0mbWQ93g+Yvbcpuj2SKTY9edqLPVd9bb1C
                      OhA9LtCfvabufD3Lc8a96POvvBf7Ur2ZLYo9DOyXvAy9rLwc+YC92xiivYw91zw6qUk9uRyuPUgb
                      xLzfoZ09MLdIPFGGpD15sa49yiUZPTV8gb3og4i81D/lPMxhs7weEUU9bbuMvWAMHzsKs169kn4R
                      PWSCAr06Fhe9KSrHPcudgD05c8I91z4hvSkjoT2tCJY9KKOXvKA7UTvg5+O8C1mFPYNAqD0CDT89
                      US2ZPUAPaLvAZjK8AI1wvW5uk71RG5g9RXOivYCGQTommxW9VGKpPHQb/jzGLlY9OK3fvCClUr2U
                      8cI8pHOBvUm+lT0A2Cw6WLeIvKUSm71fZKU9dmcQvdAder0HXWS9JvBjPcAcbrvKm069/z+KPbj0
                      3LxUHAa9qD68vHHVqT0Ahaq5EIZqvGB9vTtqTaO9ke2jPdQJBr0ybVc9av5QPR5bAT2hVMQ9YO8e
                      OwkcuT0ALjC8GqefveJDcD1C9GI9IINyvSPvXb1Czg89TVamPcYRZz1SlUw9h3pcvRNawT0Cdbm9
                      5jZzPaBskruZIro9mtQOvahBg70Tp6w94AbgvIJkaT1aDm49xztcvdGYgT2isaC98aimPWLIgL0g
                      Ave7ZaGWPU0cx72ZjKA9vk5SPYDZNLx9QWK9uH6UvKCq0ruASjO80F7Puxc5vz1SZAk96gUVPce5
                      wL1M6oQ8II+iPD06yT2GZgu9HzuDPcdcmT2A8Km75wYbvXK1Jj2jCMS9GlMqvaBiPrsttZq917vG
                      vRDbeb0Ndyq9CJ/DvNgxZTw/pq29K5axvYA1fDpSGlU9ALswvdTOE71s1KI8wIpuu+pDYD2bQrS9
                      wb/JPchijb1dfp89DyqgPQA7PTsQKWu8WB1tPOpCCb3hoa89I+AjvaW0hL3GOxw9Q3i9vchVo7wF
                      o6492PqHvYA2s73WaFs904t5vRpiJb0oOTu8ukMZPYOMw730QxO9HmRaPdpvVD3hI6k99JyovKBB
                      07tPh8Q9UE2XvXNyKL2o9kg8cAJlvb4ARj2KuYS9XvgGPVA8Lrxd7489IO+3vUJ4WT06ZWg9l1rA
                      PZ+UyT36/Z29IuYPPQnjwj11n7S91oA/PZO4w70qa149AZinPcZcn71hLsk9SxiXPfq5Rz2Yt/G8
                      tm+mvTKotb1P3Lu9HWLKvSMtq72Mtsi8jficvVAfQL23/Ty9DKO8vFLnLT3wdVa8UlY1PSk4iT2F
                      NqW952TCvTOAp73gxPi8WZK8Pd84xb05IKs9ENI3vZHHyT0HxlC94qnEvZmIoj3gd9a8u8u5vdR1
                      /7w+BQg9RPuIvWMdvz2AZpM6zmp/PYV9yz2g4NK7qOz7vFRmmDy4rZ29fiBVPRajnb0AzRy6AQmh
                      PVYfGj3TJ7K9PaaKPZrVyr3TQ1y90OPOuw1Err0qNR+9w6hsvViKQDyjVXi9DacnvfIuvb0ACIg8
                      GP4rvOxo4rwdKca9fllgPYamrL2aB2S9MLCivUDk9bzBmLA99CS4vPBwer3UqA+9mKUevEvtvT0w
                      jri9QEtuvdf3kz0YkN68kGOfvZi9TbxDIJC9/ss6PdrTeT2577M9R7y8PbCeeL3QxMm7636QvRjo
                      kjwofbU8HZJJvSoRdD1g4l29IoCHvZCRDbxNULE9UK2bu3mPoT2LuaC98OdmPKPTUb0eey49QNzB
                      vaj2kL29May94rhKPRLyVz3m0no9g4y/vcnFtT3G1J29s86UPaTpAr03x8i9QCqRvLMQlb24vrs8
                      mncgvXCtSDxzx7e9PXfKPX8wrj3GfEw92N4+PG20yz2YPz08GhN5vXjynL2JCZg9KPcsPGIvST2e
                      aZ+9ttATPUtajT2yM0o961WQvUDEb7vhsYA9Nyw9vezK6TxFOcq9VELQvArki701NY89I5SZPcBk
                      YzuY1hG8Zv5RPTE7gz0TiWa9DLSgvKq4Nb0o+HW8gI5JvZdRsz3WiRw9h7pIvYIZxL1qIF29/GwH
                      vR8UyT34fcE88hQ/PeG3yD10t4K9rLeAvDS1/7wwe2y8kGSZvaLZZT3ysz89MJoUvfjW8bxNosa9
                      M+6uPRLygL3YzU+8d/uyPSnitD3AF3+9COv6vDbWKj2ozZ08rjUiPbhPoDzaKS49MJJevd0whj1w
                      ahY8y73DvZjCGjzjGCK9w/icvWRqg73w7HS8styjvdInJD1XTDC9F4c7vRrIK712vl894fWoPWCG
                      lztQpMg7tz+vPa5QgL0BQL09AIaGvat0wj3z2rk95yQevcDQE7sAQBU5WhJIvebGRj1odHc8BnIb
                      Pbp6aL1qMzI9Tb6bPde3tz14ury89oEOPTnypT2A0U29nDLOPED52LrfuYM9sMrauzXijb265jw9
                      TCCRvACZEzyimzs9gCYoOhC8XL3U1bQ8gGu+ujAmerwZ1YU9IH+IPH3qhD1xRoc9anybvUoJdr2X
                      xoE90TqnPdhGPTyVRbI9dbilPXcQyr0T/rW9nBX/PIKitr0o9M28BjFZPeC3rDxLHYQ9ecOxPVTq
                      zrxM2sw8wEwqPDQg57wsrom9w/YZvcJxfz1CyDs92dmSPQflhT2jo8a99C+bvOG8kz3EFPA8BHP9
                      PLi2l70wDI47MOmQvVJlXj3Cm3k9memvPWvouz2QVDG9cGauvXbFND3q3QM9Rjx2PZ2nMr0Ok3I9
                      AFA/uPxoF72Yky68OtwAvRJ0Cj2AUEk8KTqFPYKVCD2M57K8jXmjPaogn70YgJ28GAa/PEMlrz2T
                      n3q9Q7DHPULgSj2IwJ48bmxuPVr5Zz3UJey8MAQxPMcJXr0TF3y9txKKPdJHOT3YoAO8D7qKPain
                      tTzqHVC9xcCBPWKQFz3Rw7g96C2ZvMFduz1H2mG98vUlPRA3XLzQn7E7hxduvejfPDxobb+9XeNI
                      vcWvlT1LUaQ9KAo1PCTc2zywcnC9MzW8PVNrXb1yU6697UoxvWsEsD3bJZi9ge/GPYIYAz30Ddm8
                      W6+UPbsum72VJrM9zht4PR4zSj0DSDO9HTk5vZ3ilL2o7Qw8WN2Fva1gJL1KGyu9ljAAPWbJib1o
                      R2u804ImvSKeJD0Lyo89Opervcyt6LweNRk9GhJTvYBgjb1b8ZC9YArLvZzL/Dy5laY9l/LJPRIK
                      Tj32DwO9aCS0vFj9OzwdRkq9aklDvQp0gr2Xn7E9TFOCvDDkubsXL1y92AsZPILwBT3+8zg92gJm
                      vfQMmDwg3qe7CrsxvQocx73j4L09/pZ/Pb3Dtb2rn6a9ABItu3CoXr2oeDS8cZ+/PfO9vb0T9rO9
                      iwW8vUD9Mzyvwsq9OWy0PSdTkT2nS5Y9RAjXPNjGVTwc+tg8YMmXOwJPMz1QQkM8WsFDvRAqSjww
                      ngc8SXWmPQCBXTyY2b694HKOvKDx17soh5W9APp2PNC3YTx0mLg8DXqjPUtXsj1fY789hbmRveyR
                      vLxAsRI8sE65Oya3hb2KjVI9vxSzPTVayT0WzjM9zCYGvegUcbyioyM9ImxDPTLbXD3K2X493ksR
                      Pcmsjz36rLq9sCRWPJPgGr0oGXg8dES+vPaffz1aHme9pnQ2PcwturygvqU7kOVYvM0Mob0IM+S8
                      UGoVvGpZP71Kc0G9IPitu/qKvr3RUKc961eAPf3zLb2+L0Y93qtyPWgewL29FoS9PcaCvaWjpj3U
                      M/68jYS9PZie6rzvXLC9xWWHPZKRv714ZIO8FfWOPVgWgb3YwSu8fm2kvSWnvL0T82+9pXO2vV7M
                      WD0Avoc6rF7EvB7OCT10BeO8gpanvUn8yz0oKlk8yKOkvDgJnjwaia69ULTFvRY6BT09vr09GM8s
                      vAyYBr0SZ2893qiVvdtcoj2jDmy9iPOFvaBqcr30ZZE8wDqKPMCKLTy+YnU9vthfPX9vnz1HE449
                      kCdevGCE0bxAIEo8V5bFvSRp5zxoMLK8wHnAvZJEcD2+dB09yjFrvWjpEDzUPaq82wGlPdhRsr2J
                      PLY9dgJWPa/1uz2FiZc9KrlAPfh7vzzbA5m9qHyrPGgB/bxK71Q9nkMkPWhXozxavwu9wP4duzNd
                      Sb1Zsbo9CpC0vdo5N72KQcO9Aid5PcGumT1svxC9UUC2PVrNcD2RaLY9r1GnPRiMR7xILa88kEUo
                      PPrzGb0Y0Mq9ByPIvYvQmD1AV087P82mPVBXWTxX2Zw9BUmYvcpSOj2pcck9YsBiPeAxvbxQf3E8
                      QrkSPT1nIr0I+4m8pyAsvVE3xj0K2kI9r86vPXNUuL3YcVI8AZWiPVt+zL3dnck97LecvACoS7sX
                      rW+9W9WxPfR3sryv64Q9LN6/PMB+KjsKlWU9sRe3PWOGm71UGdi8lHWDva8LqT0Cswc9YA1oOyDq
                      m7s8ueY8JZW0PRKRWj1GVmg9o8i2PWvpmr2SGEc9Wm9lvdj7PrwzOsk9HTgavaBWAbvPhqw9mLbe
                      vGwbpbyggW07wH55vbq8Sj30zZi8IZqMPYi5kjwARlA8nCkVvSQQ8zyGdB49wCywvAJ/nL3AV/O8
                      80KzPXpMN73I0r69QAFqPP7yCT1NfYA9JpcXPfaaXj2g9ya787F0vedDQr3RFMw9QguivYbKFL26
                      3CU99YuwvYuNnz20M6w8EJ8TPIUsir1hxqU9seCuPdvjsz2yvGs9M6a6PU5RCT0QrBE8zb+rPV0X
                      Ob10KeI8/qd2PcKEKT37laI9SjXJvYp/SL3a1yu982qXPTAh9rsALaK8oEA7u4AKyLqlmJ29++rK
                      PUA2HzsL7pg9wkFxPYJiGD0Kwn69RrY9PRLkrr2KC0e9sm4tPXQO8rzbT5C9iEy6vej6VjxKWwy9
                      KJdlvHLhLj2zOSq9LDTXPAAGRr30k+Q889AwvaEmtj2JOb49MFtVvfimoDzIgcg8trwZPdaWPT3v
                      CqY94HCkvfjosbz4WLO9AGFOO0D48LzjY5m9kqMpPct1w73oC4i9a5CePQGjrT0aizi9pb69PagP
                      qjxiZXY9Q3K9vSh61rxA5JC9qZexPWoPUj1hDKE94NEMvUUUtT3y3Yq9rBLkvOD6ljulbrO9TnWo
                      vRiQ6LxgF4A7AGxkueCsgLtb5Ky9466pvXFasj0Sxws9wsIpPRFpkD1qu669+wOBPbb0Oj2UfvA8
                      C5SpvRSIgrwARZ+9AO7fOsU4yz3cDPM8Q0ZgvWj2jr2Auve8EEU0vG0rpb0J1sY9cBkCvajjCLxp
                      Zsc9VsZfPSbEKj271Zs9dDy7vLQO8jwAC5Q7Ln1lPfdRkj2Z27o9ttxnPQ0foD0ABDQ535XAPULV
                      xb0qG0q93SSkvSZ4CL0ozFa8Iu9/Pcy1AL1UwvA8wpowPWFusT2F75E9tcW8vRokUj1AI526+Jud
                      vEltzD14/Je8GBSEvSl5mz0nEbu9wNoQOzCLVjzbMZK96YOMPc8htz2VA8c97WxuvU2iVr0nsY89
                      8DUPPN1GsD1Ajqe8o45YvcDcvbr03KG8vaFgvdAM47tFpba9/vk2PUDtTLyJRo49u/ihPaA/5LwA
                      Sp+7eCGIvPt1xr0T8MU9tCvNPIdEV72jLh699MsNveAXe70lRLC941lcvaB3YDuYbGu8ZWSQPZjA
                      Trxe5YC9mtsyPUCZUTvQCQk8gKLxvLefnT0VzbO9/t99PfI8wr3HFT29HSaFvcoVnr29msO9xbCb
                      PfTsh71rl569xoZKPZN7pL3NU8C9iiUdvaDOmzvJJq89lOP3vADuDrw6LTk9oAN6O+wnyzyQ3Ro8
                      fa6PPdRIyjzAfoI8MBDSuzD6QjzgXZu779m/PdBHubudxIu9gK7SuwBZSr3C7k49AefEPXSsxjyz
                      fCW9qEO2vfcOHL1SKmc9ctkfPX2MHb1M7RS98HdsPMDFI7xGegk9jhcyPdBJmrsKdJq9AhUxPRn5
                      hz0ooyO8YKE+O+EruD3eZZW9anyKvbeOsr39AMu9Pw+pPcFfrj0qN6m90yeQPdXul70ADvo7AD3U
                      uxgJSryd9bS9VGLwPKfXxr1yYX09OlvLvS6hcD1bR5c9wUvEPbzk9zwiEre9MhMlPTg5trxwRxU8
                      8LxIPHBpKzwAqLE7RWaxPXB6G7yTVWu9QOnkvICkvbpcbP48+6eCPUCTertEHBa9NhObvd0rjT2d
                      Lpo9sN5EvGAVgL0A/Pk6oR6qPfAPBr0NTbu9/ViwvZIUWz20pvw8I7Z/vcXWkT2YaQu8AHjAu/oR
                      Rr1Ht449gi47PbBiuju1/5w9TDa4vJEBpT1C7Tw9BdKwvSAqjju0f8U8QzOmPVDYWL05nKw9zhIl
                      PToxWr1skMw827uFPfrvTr0QHHA8w3CcvcB4bbuAVew6RX3CPRWDhb3Kr149WkIoPby/1DxywTs9
                      xkxxPWvkqz1gUKS8CBmuPABXUjurJcw9cv20vc2PUr2N8rC9lO4MvVRgnDzAbFC7mN4vvPzk1zwB
                      F8c98/TFPbqiKr3wNSk8EgMhPfCTDb3ajji95aOXvVj7KjznzL694lckPYVZoT1Ylx28mHaEvLCW
                      vb3TFLI92W6fPdjLtDz+7S89YLNPu2wEubxA5h88YVCqPcJTir0Hohq9NqRlPRmhlj1OwkA9mJNp
                      PCC3hrt49cm8fdSsPcq4KD09/Mu9yjMGvTm+hD0Ahpa8PQN2vWDefTuwvC+8oMdzvVDYkL1gZo48
                      2NuovJBYGrwHxmq9bXxPva44m71y3D49FdzGPbGPxT0P4LC9r8G/PVrrVD2bupK97TKrvcowwL1g
                      V1C9WNirvTZELj3Bb649SPu+vAKGID1gN648EpR1PRaoq71yqkw9w7E8vVmthj3bNKY9AN72O2c8
                      v73s+KG8KNQtPMmsyj1SbVk9uKWIvHD1sb1zK6W9eTOzPRzr5TzLKL+9cpwtPc1iPb3QMzy9ldWX
                      vSA5pzvAjLm8ADJOPIL6LD2tf8I9Mo4IPdgBBLxQNHy9nX/AvZDcvL14G7286v0wvQCcADkA/kG9
                      bJCHvKhwwLyZt8c9lCvOvFiMwTxgFXm7oA1zvUKrtb0ZQIc9rQVyvSo0Yz1QRIK9jYSpPY/Hv71A
                      MFW9Nm0ZPeovm72fRsW9VAu5POqWSD0T5rg9wIQUPEXEgT2V3Z09UKd0PMCOa734gqG9wr5hPemQ
                      hT2jqb895QCRPQBEwjpAPGY7gxVRvcK0ob3Q6K69fU17vZTvh73wZQU8PiEuPSA7lr0U28G8dyd2
                      vWC+zL3Y+qQ8EDQnvYXunz2k2PI8TSmivRq8i73D/5w9Qu6VvS0SZb0q6l09JK/tPCTQ0jxCCF89
                      5PfkPBwZ6jwDBiu9HnUvPXpSDj0AGLa5ARm4PXK7eT3MQek8GaLJPYhfyr3v3Mc9W/e0vTxp5jze
                      aHc92dqxPUlKlT1AHMC9Q37IvVh7xTzY1NO8LDeNvOBXxL2wn5I709WZPWaQo71HYDi9FilsPTCm
                      YL3Y9IU8D2WnPeCetzsC/nw9jdiIPXpnq720VZs8dhtaPZpWR70KpUU9Yve2vXhTlbyAc8I7gGP0
                      u6CkKr0UNd48JBrzPKaNRD2SHkI9Y1CQvUaGdD0zWC69KOvKvSgRN7wU7oG9SKT2vDdTfr1YeHg8
                      chgSPWi+uDz9OKK94k1YPX0mbb3Yu5q8D9aLPVrVLr2kbtk8UOzju41RvD1u3n49y3S8PVCj8ztA
                      54M8oH64u8BAcDuy4Ts9KCO+vIAj5bxXuC69pq5IPdiAoL2aHQs95hFXPXOBpr0QJgu9si0wPUAZ
                      aDxQeVy8qrgrvRg0GrxAy8k6nPPuPFgNyzywSBa9gtojPaHutT14pZY8LeOCvQCt97vuqw49vr9M
                      PQKeWD3Ssjk9E3StPZ3cMb2zeJS9xMnpPGBAtLyAfUy6d/yzvRFXqT1gFzC9Y7MlvS4DLD2qPy09
                      dC/TPACdh7l+woC9UL8OvKCAxzzi5V49OS3LPaAiW7tU24O8yih4vWu2jb1lqJU9d1VVvSiEjL1l
                      Bom9UOs+vVpejb38leg8jXQcvc4hfD2U+Iw8rbl5veYwJz3Dlbg9tHiqPMrWOb1yxXE97y3HPTfC
                      T71SFk89qCvrvHbKkr0WlGI9UK+wvWg7ODzAHMs62noiPXLFWz0n9HW9ajZBvZTi4TznkHS9VwRi
                      vWlSpz0isXQ91kk9PcDBPrvBa6Q9B2GRPdBCKL0jr2W9RmopPawA1bz43aY8xDDkPG6+Pj1Jerg9
                      +f66PT8IiT0Fc8S9CvI7vcTa/jxghFa7j7a4PSaKhb2oLV68Ck7KvYwUpbzX9la9wkODvTK1WD2i
                      fHE9XswsPd8Mqz2hZ8A9SjlSvQAejLmk/vM8eXOUPagG/ryYXzY8uukEvXy6GL2zLMQ9d7VCveqF
                      Fb1ovRO8mhckvV9jtz1rxbw9UqUIPbFauT277p09AFLeu23siT1uaE89bYiMPdO2ij2zYFe9rP+6
                      PKkatz0AvqY6riukvXAvKLyQqHy8c0C3PUKTET2wDjO9lGXcPI3Nqz1oTiM8FnRYPVzl+zyAFT48
                      yAb/vFrAB71wgKu9UF4GvCDcuDz8qt08tvyGvaekiT2dqMI9esRhPWdRsz2H72C9uw27PTf+V71A
                      mce9oBMcOxL7vL1w61E8YvhkPRD2c71qUTq9qQW+Pbsboz3QRyQ8xgV8PeMvkL23ZCO93QNwveDJ
                      sLwAY6s8Vs8yPY3RfL1DJWa9jj82PfIrcT2A8fG8IBa4O1BgArzgHFS9SJqFPI3vnj0DVLW9ClWm
                      vTGQpT3uF529Gsw+vVGcwj3sCYk8uG3MPLAbSrwKHE09QojFvbQTkTzUiek8ytsfvWL0dT1Ao6i6
                      QshPPdHwyT34fpE8MhAEPZetc7376Zy9oml5PeLbGT2bgpe99FCLvIyZtzxgtFS98Ta/PXuerr34
                      7oO9WtUcPaMUpT0RaqI9dvYZPdSt/LyYSEu8gguFvU9zhD0yM7C9U+XEPQovAT0by7w9r2zBvQ0a
                      K73dumS9T1KRPQIBMj2puMk94ANXvXo+BD2A/Hk8olhZPa1OlT3dX3y9Q62wvXVNtT3qqS29wjIq
                      PQxfsjzWyUA9hX2VPaYZi73hXKQ91E0PvbDwwL2TQca9MvxsPUN1bb3jkmK9UrYDPcfPUr1hL5Q9
                      rWOrPbGcpD1yxwE9MAOTO4hr7LwIvYM8qR66PcQb/TwwWcu99icZvV0Ft70gE4M7g2a2vfKiHz1Q
                      enI8QvJOPWDzyjxtzsM9FBD3vEuTrD3vo7A9iDaevahg47y518U94mmXvY2wML1TXIU9MIIrvOir
                      ILxNwRu9oaqSPUJbBj1zoTm9oPm2vfvQvj3FVbC9Z39+vczsrzxmFZ294ACmvJeJwr3j15E9gAYb
                      uk2ZML1aiUE9d4nBvRSKiLyRD649TiVEPQynkjzyHVs9fIeMvT0Fwb1oW/O8iq9UvVIsnL3AMWg8
                      +IWdvUnHiD1jcTu9ABKou7d+Qr0rkrC9cDx6vPv+l71o3S485+WxveBLvztN2Mo9vWOyvTF2tD1y
                      DRM9PTbJPaJRq70pmJA9AEd9vQAPbbqxGps9XUh7vdggfzy9M5u9SitovYK2eD3qw2Q9atY2vTAi
                      2zt/abI9zFnUvEi62bxOkDk9aG9NPOKjcT0txhu9QAVNvDk3wD1N+p29gK4kujbiJz1SQVI9aMxf
                      vBhhTryG30Y9MtkJPR1HK73Y5IM8LZOavW8TnT3h1ag9KO2EvRo0Cr0XsbS9vXWKPRdnv73UAOu8
                      nS6pPfQM9rzC9kE9iY6xPSh2nr2UCNa8oAPOuzICJD0mOm49XbM4vVaLHD39PyG9O9XEveM5tz2K
                      UC69MrRHPVC9zju3kKQ9YNa6u2cCZb3Wbns9x4aMPbBj6jtQGD48NyyyvcGPrD1DQYI9AniuvWAm
                      jL0tfGa9XXejPQM4sb3AO3u9Q4+1PbesJL1Ul9W8QAxcvSwv1jwKrWo9wCeBvYirtDwg8Ei9gMDt
                      uzG/wj0G3Vg96km+vV4MUT1tBqa9eLyAPN/6yb12uw69yjIcvXCgXTyEofM84PyKu+eMVr3pBpQ9
                      4r5aPSDTK71q+XW9SQudPdshhT2KA4C9xT6PPagXYbwaiQm9wO8LvIDJnDwA7me7MhRQPTUxkr0N
                      jYe95KSEvbBlzL0Ji4495We8vXbDDz30+vO8ox2yPQfPoz2R58E91SC6PS29kb24Uqi8FFYAvUDF
                      B7ti2lM90eWhPab2KT0fyZg9kWe/PRRhAL2GPIu9IdmRPftthz3UJsa8cPUFvSiOHzxxeJw9wJUe
                      vQC1q70dWa09ORivPXZ4Hj0uUBg9/k6OveMyw71l85s9jW8lvQAqV70S4hw9YQzDPZhRLDyw7jE8
                      B7R0vanjnT3o1WO8NYeUPdi9VTzCVMK9MKg6vCBYkTwoYHe8KrQBPfmEgj0dX6a9GCDCPN0BVL20
                      VhW9IsyWvUCR5DpIeaU8kHtBvYImJj3K/VG9tIK8vMBaFjz7fqQ9OjrAvUD/g7qTrFK9iyi2PZim
                      gjyS6lc9OGOvPL1TtL1G2JK9H4q5vUhL6Lx+NSA9Vr6bvYV7sr0mdw89mgXBvYBEnjw/ir49QaXK
                      PX+4hD2KYEq9/SmYvUWyrz3H0YE9PVC8vURH6TyX/789bW4fvdAMvL3A8xW9VfeAPWDGmjt0KeW8
                      APYqOZs/k70yMQE9M6lZvWxg5rys4bs8EmthPURG9TyCCsu96Dr4vNtguz3U47c8Iuavvf73ID3c
                      A+Y8QD+wvMBVKryKuhK905u4PfOcb71hMro9wA1lvOPFwj1yA2k92nqwvTdVoz2Y8uq8wsN5Pa1N
                      nD1wooi90Ep7vJpWND1oYnm8IJsvvXLPDz3RppQ9gLe4O31XUb1noKA9TIeGvZnovj20SsS8U1Kk
                      PcSngL2yuGA9NGnJPJlryT0s3be8kr9NPZWzhr0vrqU92Je7PLJixb3Dz8Q9w6WnvWhNiLxR5p49
                      qXaPPbcjIb0Wcyw9SGz5vMlWnz2skam8lNOpvG5gLT3NLx69EHU2PGc+N73g8bE7ks44PUD6vb3Q
                      heu7SKqCvJa3Qz2LD709S3nBPawCrrzjaqC9AED7OjG3vD2gBcY8AlwsPQPcrT2KUSY9YJaSu7Dx
                      x7tqazw9jTqnPWzloTyQ5IK9DWyNvXthmT20zrq8aADxvJTrrjzWCgy9zM2NvPB/dr1tVyC9fi9e
                      PSh6erw9R1O9e+G+Pe1Zwb1AlCc7XidXPU1Yyz3wmV886wqQvRWruz26Nn09KI/KveDR2zsQoUs8
                      8ee3PbC7vr1Ymk880pRUPfI7AT2w2Se9QA0cvdQ65Dz0cp28SADIPLo7Dj1LJby9oNyePPgiqTx9
                      KoY900NvvcDQeryFLbM9EmVUPZ3lSL2gQem8vWtKvVRA6zwAVau54Ii3PGJWr73msHE9zVpTvTDj
                      Nbz+uKW9ADIcO2AFvTxYFYW9wJh+O4Okb72GtTg9gGKNvCDsMr0y2hY9AHRcO8Jwr70OhS89WN8K
                      PACQCDtu0nM98xOevVeEkj24+MG9ka6aPTOEub3t5p0925mlPUz/xTyoJHO8AMS/OrI3Gj2Cmxk9
                      OOnZvG5hVz14OsA8CoV8PR5DHj2yLCE9X4itPW4eKD06fVW9M19hvSXkyD1vWJg9eKmvvAqRaj2M
                      r4C8IJ0NvRbyAr2UQQu9p9iyvdDI2zsgo/U7K++kvbierLyZzqU9HbeMvYo/ub1Ajoa949JavTM9
                      mz1fCba9AGbSORc6tj1CxxQ92vU3Pdilub1pub09F1uRPQ1quT0Ao3m6Kq0ovQD7Ybu4Vu+8f63B
                      vYP9fr0+j3U94LPBu8/9tL1yzD49JRuGvSPDhT3orwq8uuh7vSiqbjyUDJk8SKuIvYehur1L4YM9
                      n5G/vSMkWL0wZ2+9nYTDvbv7kT1Y0/y81KeDvNCSRzz0jOA8gGcDvSAxn71COQU9AsRZPcALwbw7
                      i7U92Fi5vZCmaTzoCLK9ALAju8CHVbxY0xg80MWIva5MdD2xWqU9GZ+7PYlWgj0Yha280DUdvDC4
                      mTuE5hO9aeeyPbiror2K8VO9kt1cPR2EhD3cN4O98JRVvABFYrzWN0o9B0uMPSi/c7wReqs997o5
                      vaXuvb366G+9O3yZvT9wwT2arKq9YJ+vuyT/8jww60q8WshzPV4SFT2iF3Q959VuvcC6wro0SIO8
                      lBOJvLrnZb3bvqy9jRqqPeh9zL2A2tW66GzmvMo8Fb2gfWe9AKu0vfB0Qr2GDXw9HJf9PLpOXz2w
                      hqE79GqvPGrMP71zP689dYHHvUPnyL264EQ9AIBSNiLjbz1K7mY94DxovSQW3Tyxb6w9isGrvdYu
                      m70INdu8YTi4PYasmr0FGq292I/HvBAjcb06oi495pVqPWqAeT18jO882LVIvK4FHj3YicY8QC+h
                      vVM7uT2LubG99FDSvEAaSzyABuc7umyVvQCaF7uFS5E9XAQRvcJpVz20TPQ86thqvWjTWTzwWWW9
                      Lx/DvSqwUD1gwrs89X/HveiAtTyQkb+97ZKcvQ3EhD3QeOE7WKe8vcS99jzbn4U9wMD6uruVrj3o
                      zoC8S/eXvfD0ebxgO9e7SwWfPUYNhL0uEoa9QI5Qu27yo71sPs88gDVwvIZ3Hz2sQY08MB9kvA0T
                      f73efU89l2Y4vVSesTwgHbU81t4FPcessD0ACPy7XqWOvbvTgT036IA9OEC2vIxZnjy4NLG8JaWL
                      PQsxmb0uZhc9aLr9vNIUbj0SpXc9F7+jPeglcDwkOeE8IViwPewHF70yjmg9nt42PeahIT06VAg9
                      7eBMveJCm71XyTG9+Ze5PbD4aDyAova8/TGmvbNdpL0ILvq8mJJJvBhWXbwV/4a9ArOTvXYRGT3+
                      9HQ9AkEfPfqUaj3FFaA9WQ/GPXNhZr0YP408sXiiPUA0qb0gJcu73RuiPQephz3ppZk9UuCovdpk
                      qr3qNVs9PQ9ovT6lJT3DyVS9gCHeu4x43zwg6ii9coiKvQxtp7zgIKq9t7Y0vQtEor0VB6G9I7ln
                      vQDpGr1s76Y8CfK+PVV3jL3kDOo8AMrguZhR07zQome91J3GPKZuGD15jcA92H1aPCcMpz3p8qw9
                      GkgSPVDHCLwKXam9gfyxPWDnibyy5ys9QPB0PJbBWj2GJAI9ZviFvVGVxj1YZWW8mh1cPaPzqT30
                      MdC8gAq0u/HEgj29dpW9VKrQvCMuiT3T3IQ9h9smvZWTvj0AGWg8CFi1PACWLzxVAb89p/cqvYfi
                      Sb2w2ZC78jSXvZNlYb3dhE+90dyNPbdBxT0LLZ69Qa6mPfMKlD2YsrO9p0hUvfjVqbztEqY9dsdk
                      PQqJZD0Kbxc9gDvQvMAvsLxQR4c7il1SPeDmgjwxiKQ94mNtPShddzz0ef08q3KsPSIMwb2A8pe9
                      4M7nu+1icr2yWwc9peOYvdD/RL0vVLI9Gs5QPXLrxL1HpEW9wB16PC9EtL3NHY69gC9kPCe1UL3d
                      JzK9aFEnvNF9jz2qUSe9PxDHPdTXp7xopnm8/+WjPcczsr0KfRK93rAyPZ/Joz39Tcy9VeyFPWA3
                      sTtSAnQ94y6sPYnEjj000t68orJiPflemz0gu6K7qEYFPF2gTr3r7ca9PUqAvcsbkj1uFFM9KsK4
                      veFOqT2np549n2yEPQZQp73IGOW8E1+/vdgYzrzX7y29zU28PSDvnrsCOXE9ZMHYPEr7KD3yKxw9
                      qIaePADDiLywFJw7k6s8vQzqnryc1Oo8HmVwPWBZdjuIpKk8rDihPNC+f7x8Q4u9gKvzvEB5vzz/
                      vpE9YsIPPRyEjL3I7K+8gamzPTDnJ70Yn228UmQFPR9Ds71LbaY9l9jAPaQL0DzjJZE9sEFuvSjE
                      vrysoIU8qCgXvAg0rzyTPL+9oKedu9gJC7yP6r697lVxPdTVAr2Nl0e9AOCOORm5mD0qdcS98CgJ
                      vGhGvrzXxoc9NJLavPqkBL1V3b89mpOnvSh1vb0DQpO9KNGCPE5WaT2Urb+8gMqAvDoZBr1ZNZI9
                      HYNRvW7DMz1Z8oI9UAyvvTg2kb2PJqU9fidwPZHauD3AgU08rsFyPWXvwr0HsSK90NqUvfsomj3b
                      MKA9MNg5vYzqhb3mSoa9aDyHvE6xFT0lN8M9UKObvd5Vl72jPDy9dsw2PW/0vT2jCZc9fG/5POi5
                      hL1+OoK9QEMYOyGDqz2g+xq7UxikPdTj0jz3e4Q9NX2PPdqmo72f/LK9GNocPKPQq70gJ6W9oKpT
                      uxXLxb0A0sm6YF5lvc22xj2wgZS9ICO9u6gh4LyxdZs93GwPvZhaHrydQsu9uzqMPfOkiz2Msre8
                      3Xkyve1VwL0AwN66QDE6vVF6yz2ePQg9MTqbPS6UMz2wUoS7i6DHvbVJqL1qrkc94mwQPYJBUj2o
                      saG9gAo+unrnpr2of3o8+YGlPRN9RL2HJ229w0VWvY6nNj3uXnQ9Gq8SPfNZIr2jG6Q9+OatvCcr
                      Jb09lIe9QnErPXx60DwAi3E68HJwvUokKj1T63S96e2lPdhQZjzO36O9IGbUO3fMTr1AGJ481+BE
                      veD+zrwQZlK9QqlVPVCxSzz3LyG9ANC5u3DTxL22wz49BJYOvQB3Kjq01J68XrJJPR6Tjr3ra4Y9
                      UMEevGDhv7wKQyi9qtumvfBuVDwUlZk8SaTLPdIOFT26zhA9kYasPRwe7zzg6O+7h701vWcpZ73a
                      6VW9qENLPDlRoD0VA8E96KiKvQadfD3DPr69keiaPdgEgbzl/6I9mksOvcB2CbvBo7U9TvFyPWvu
                      pb0Sh6G9mBijvQAHfL3gufI7eTi6PSKOPD3qESm92o44vROlvT2tbCS9s5eTvbq0c71H7Ty9CK61
                      PNDf5ru3k7s95qFXPWqLWL15nLY9oMqJuxuvrT2lbcs9WOqkvG15qb2wbBE8LaShvbCR6LtrUI09
                      2O1vPJHTmD0ecwM9wBlLuyc+cr398Wm9oFUZvcAxhTx9TJO9CgxevbT3+jxilB49YioqPdi8MzwD
                      FK29ukgYPcJ7ET2KcJy9qMKEPAIsMD3yOSk9MvkFPQM0vb2Iv6c8mpYFvVO8nr3/B7M94TDCPSvy
                      qr3SBmI9gGBBvGqbUT0tc2m9aBCAPMBfTLyorPq8kuVAPWqYS71DYE+90qVJPaCc3bs9fF+9M0uN
                      Pcys6bxaAA09y96kPYBBkjvwWAC9whY/PUBvyjoAP4M7oBD0O1tThD3W7wI9yk1avbLgTz0qN3w9
                      6GMuPADGfbuTL029GBeGPO29Ob2GtRa93GTNPCKoET3AeEk84z1KveyxjzxA2g67E62pPQAlqb1l
                      C6K94RafPUqdJ70ppqc9wDlRu5GMoT0j3KE9uaPFPWF4wj3a4D097D6AvMCBHzsA3bs8D/ucPfiv
                      3LwmNnU9mCk9vMLAbz3AeP86db+tPdAJ2DvQj547F9eIPYrEE73WT2o9ccy1PTd6xD1yC0Y9PzWj
                      PZTR/Lzq8Zq9nuEnPeDwtTyLlpA9kcakPW7ZHT17OKI9AHUZO7k0sj2epio9YRCEPQDMCTyU5568
                      EOgkvNmgnj2g8co7nR82veHqkD0TjHG9AGjgO9Bbmb2A4dq8EDnKvQo7p70hbps9IwCvvcLaMT1I
                      dI88IZ+WPaUhpj1Acem8opQrPRcqSr3r8Lk9Sk4CvZpktb3YYF68gBVTvCE0qj0dmGO9LlYlPTLY
                      Cj0rybc9wD6OvCcZfr24gJC9U8N+ve4JLD2ul0M9JraUvcajF72HN4E9+xm7PfCWj73DO5s9j4O6
                      PR7KmL0w7lO8+2m1vWqDrL2aBx49g8IyvfngnD1I6Y88INDbvPoPqL0GPQ29WP7EvIhMrTzAZw48
                      CT25PYdnJr1GsFU9nTqoPfbDqb2onaY8YCZXvZubwj16Liu9p/hPvTDftb1A7Ry8B4GnPWAMiLvK
                      fj09IG3FO4NZhz0Rf4M9QFMOuzAmE7x6MA69Jqh5PYNWwz2inAQ9ADo2vd5nhL0nSLI94De9vUJ9
                      CD29IbU9MnxEPdINST2q9ye9B9eiPdddJb1CVEI9ACQhO9hCqjxLccC9RLTwPDLHlb2m5E89tYyZ
                      PbSznrwt65A9int1vW7Smr1tO7E9++LLvb6LcD2Q9Ui8X0adPQDtlLuYsiU8gr1bPYAVuzt3FyS9
                      PDMEvZtjwD1Qyz68UKTFu1jDIzyUv4K8Ew1ivXbujL01ZaM9rzPDvWgiQ7zkHhe90a+QPRvAsL3B
                      m7Y9YF/VvBURtT229Iq9DmZJPfd9Lr1agoS9QeODPblHiT36OCK9nLeKvSAqjDy2txW9YCR5vTrJ
                      HL3ZWb89eaiMPeLIDD25DJI9rURrvaCR2LwiB1Y9nCf+PGXvor0gWVC9Js+hvev8kr3SE009bPac
                      vMzWubwIfNq8dIOZvF6xLD0AjnE8/rBBPQGvhT2wu7S7z/C6PYEhhT0oH8i905ywvSBUvTsm4zI9
                      0idBPV34tT3M0ca8OOXrvAAfKTuBvJI9QT2YPSDIo7zNrZe9CG6xvKlHqT3AOsC6EOhWvZQ+FL1d
                      CLo9ouFbPWDNqjw2+Xs9JfW+vfvvr707mq090LFevNP0pz0Iuso8F5W/PSzSzDwIYNC8PWHJPR2q
                      wj3Hlr+9XtIfPdiDYrygW6u7Bp8cPfFmnD1ARTE7fq9wPZvvlr317J69wKA7vAUGrD3oLsq9RT+9
                      vXkgnT2geS07zteRvXcBmj3TdV29uPaAvbrVOb0iAXw9HZBwvfNolr0OBTc9jX0pvfSx6zwXSbQ9
                      kCJCPEKNST2GN5y9FxmhPcBAQruwox08xfi2vechxj0wVrc7+XnMPWAgertSDBk9ujoOvbQjwjxn
                      lFK96nZNvWsBl73gnF+98BAIvK3AlD2KaAM97h8uPd2PuL1gyrC9ejJDvZdSar0BrZs9/b5+vSgS
                      tzwXkUS9oP+suxCBM71YL6U87B2FPND7SDz9SYu9Sxa0veZ9YT1Jcrk9co8SPQMEfL3EqwK9BvKn
                      vbtKoL3o2M28IA+hO0qJHL2md0U9wkgUPSwdg716ug89EuiXvWhzsr0o3ry95rhmPYOgjr1OIaW9
                      vZmnvWzzuDy6aS69LQbEvSj1PjxgzIS7CE/MPI2viz2nYak9mpJnPdPgtb1AV0E778W8PQo7nr25
                      5Jc9AtJKPRdOtT1A6ka8qLOXPOBEy738gNo8vdNzvZkvgD317a49aDHZvMAaO72bDaI9JLDnPDpg
                      Dj0hv8U9jCPvvD1wuj1QM8w7yAzKveqmnr2GuBK9aJ63vG39wj0t7J69GPUpPCbkYT2gN6y98qIp
                      PbCveDyydyU9NKKrPHQvyjwjjaq9V/BKveaGTj2yiTY99S6CvVhgvTyBbYY9IMCju0CXs7q6yJW9
                      AJgwvAAoQjowjF08RlecvTRoqrxB14890OkQPMu5pT0w4Di9sGmsvW3Sx71VpKE9e26ZPRiujDxw
                      sVK9axqsPWwu9LzYLxY8MO+yu1RU+zxjZki93Lf6PE0byr1HX8m9jJ2WPIb9MT12UH09Bs9aPVQ9
                      jrzIFL08sDVQvKKcUD1ulJ29gpVMPQBjabuAvfe7/7TEPfK7VT3m1xo9QMtQvN4WYT3Mab68+N7j
                      vN8rzL3Yqjs83b2Cvf1Bp71DKb09eIKzvN6spb04yJi9ktsfPbe3uj1jQKC9UjE7PbebQL2gEpQ7
                      QCgNOwC89brHiZE9MTmLPe97yL2AriO95hyevXTVhzywWzk8rfliveBpjLvO4Bg9+Z+JPSKdhL1S
                      b289WRuzPTS4pDxrYZe9bUC7vV4qQj35NIo9xfyRvcs8k73xuYY9jDjWvPGswT1n3269HzqpPTK6
                      Pj0ACO868GNDvYBWczwSDT49JGrZPGg3FjzsFge9qyvFvXOLlj2sH/e8YBSQO4JeHz3AM828GDoZ
                      PIdnYL2MOoq8TbmjvehcszyMH8W87IrdPBhHAbwSMyI9/cySvTVFpr0wQ+47H4m9vZDvMTwh5Lc9
                      eDacPADxGzvucxw9YEqxu9AXILzCDXk9AGq+OolEgz1aZHW9yvxlPSUZgj1h+Kw9IGHVvCsRub1j
                      W5m9+j1qPQ/Bw71TprQ9yDrKvCAdxTyiezU9Os9GPQCgZbf+iV09kwAdvaRf/Dy9Ey69rEuGPL1p
                      hr25moY9aoajvTKiBD2Uy+E8xZe3PcylhjxXTbK9iuo5PXdQer203KA8D5a3PXnkhD0YAnW8mMSL
                      POGfhj10qoe93nV8PdeZnz3AW3K7tmirvcfokj3kHAy94JWMuz+Nmj0glZ884JzCu6A9wTt18MS9
                      M62+vUe+Pb0L15Q9Omo9Pc20ZL1XSZs9RPDYPC1hlT0jpYE9jOP2PMDQybqyvz899D7RPBc5iz2G
                      JAU9YGJbO+DcuL2whI69unqhvVDkvDvwc2E8Az+gvQRZ1zwr2ro9oGcLu7FXlj19QsY9V7qRPR9n
                      yr04z7O9NVfLPbBW1jvLjL09UUu8PeWHjj1uoC095i4rPRhb57ygjF47fQJZvazq+jxArJw8oG4I
                      O1gOUjxsaqA80OcxPMdLy70Aiwk8ABUpPLDzprujKYc9gEXcuugUM7zMJ6U8GEGDvNu2qL08FOc8
                      IyKRPUClE7t36XK9YFGyPDwZiL2rB6K9iIGvPDJ/PD2qrVq9DOiQPKIhrr0uFDc9wJfavICqSrxt
                      BYM9Z/g+vWZlmb0K+AA9ZSGwvbsCnz0nU7i9l8amPYador3DMEu9OaePPZMXLb1PEIc9FJeLvBcy
                      s71el149W+yqvYDnmzrcLtY8G/TFPS0myL011rw90NzdOwLVej2vG5M9DKeHPHhfvrz+TpG9zffA
                      PZg7gLzju3a9ACC7O4Q62Dw9CXe9ABd+OtBoWbw916Q9itwgvWQr3DwYXxi8cGMIvWBtl7xZzow9
                      yPavvHPIZr1xrYg9gLrDux5uoL3opqq8rQglvWlwvD2w/e67+ocbPR5pmb29Fx29ZEHYPA8flD1Q
                      Fxm9WudGPa5XMj32IS09H7mjPcC9Q7ugblC9tn40PXXZxT2rg8Q9tGS9PErPY71B8rc9PuioveAN
                      ur2LTZe9ehsWPQDMerkAkuY6QTGIPTASmb23giO9qABCPMcTyj1GFlA90m+LvVBGfb1lXpK9KCnP
                      vCYKDD1iUZu95thSPQy4+7ySbCI90DtfvMKabj0NsBu9ShqGvQwTx7yJzrg9fStkvRduuz0xq8s9
                      zC4UvYqBNr1wAhS9wVyVPVlLtD2LyY89qAtBvPyDCb1OqFA9XLTxPE4WOz2AZci8zQh+vUDrvDqo
                      lyw814/GvffFeL1nsZA9dCWVvJVpjD0O8IK9wGU8OyyL37wC/Bc9SMGEPH2fhz0ooJ88bMi0PCvE
                      xT2K8R69+zedPZqgCT1AW6U8h+inPbYySz2Eovs8vUtPvXF8wD3CV2s99/YzvZqkWT1oI388LEgD
                      vWDfHzvm/UI9TrgAPbVAjD0e0Zm9KoFCvaChEbsY3529VBv0vDVqlb3sXtS8kocVPVpUJb1gLjG7
                      g9N2vRVhpb1qGkk94+zJPaU/vb1I6dG8ur0mvdpoOr23/8c9QCx5O6x757yYUjq8yigmPYIRrb2A
                      jpE8XRuSvQCV1Lvgm9y7ZKjrPCd+Tr2MJ4w82LduvMPexb18te08o9KePR4NAj0m+n89aEWLvID/
                      FL2YbIg8k/JjvelMiz2TCKa9vSJVvQAfLjuBdbE9l2/EPe4NJj2aYgq99vMMPYova73SeSs9qAcq
                      vJnjoT34Jea8cB0XvB3rib1S7Uw9PpsnPRUSub0/ko49aIk0PMjw2LwAndM7oK1PvR3SWr0gQyS9
                      pqhOPQ8dv70A57E7UZCtPaqcf72eEVo9HnFUPR1nwT3kk8087XgivZJmMz0At6G7XU2ovQJIXj16
                      yF+98by2PS3yur0fOIw9VOgSvRJJJT0YJZu85B/7PCeeG73sbJE8Npk5PYLWPD2M+fY8FITSPMZz
                      Fj0uCpq9gBJ/vcP6wb2gLZi92TuYPUAMiryjmZu9AEtLPAAaZzzr3MQ98kkUPfi4xbxgXWW9zX8h
                      vUofmr3Hw0e9hy07vYyP27yJPLc9gDHyvDZkeT0ARYk8IBauPOh4iryiybq9PYAwvZqEgb2EFhS9
                      etIlvVQ4h73++Bk9XsSNvfRAsrx9ysY9nSRGvT36tz2H8409skopPX4dkb03p3+9ekhqPReVS72u
                      Jpi9CCmoPH1/mD2wOZO7NdCNPZPcqL1OgHo9MDAzvIBFgDxDYWS9tVvEPTx1Br1owTy8s0qtPVCA
                      Tbwzb6Q9De2gPYwDtjwTeFa9dCytvFg+PbwQtkm8KKaTPKzdsDwnDrS9VjScvUiguLxzBy69OhRg
                      PcgfgL1Atze8mvOgvXUuvD19GTe9kpAuPR37G71KKwU9rLqePKv+tj3Xj5A9sENnvOGMxD1N7Iw9
                      rYe7vTJhKj0HeYk9X77AvX1cxz0L27o90PzbOyreRT0ACm+8YLZeO/CAdjymM0c9akKBvVFykj0o
                      /Zw8s4dvvQCgkLgo9kW80NanvQBZAzutvsI9aMJDvDC+fLwAGua6YHyHvVJXQz1TgJm98dLIPYuJ
                      or0cQd48WKNyPErkaD2osQe8YN/BO+KmfD1omSi8KvgTPf2Nvz3Q6xq8dF+8vL65pr0obCO8rfw5
                      vf3pNb3q9VW9GHAbPKBo57tyu2Q9Xrg+PTJ8bD3TWKU9HWxzvdUcrj0zTpW9F7KiPZLVs73j2bg9
                      LtWlvbSbkzyYYoi8/R64vZT2gLymkJu9NiIKvZN+pb2QZJ69GPtTPIBWwDoq/Aa9enmEvRBNFTxw
                      hUS9OlVWvakKkz2NGHG97NiwPFDNUb3/iKo90F5tPMyz3Dyfhrg9voqDvT3dkL1pQac9a0rGPadm
                      Ub0SWxk9wH+TvS4cND3SZmU9eZ2OPe4xh727e5M98BcGvDRpB72XRZU9NKWFvR4EDz1raMs9ILfM
                      PKiNUrwg+rK7UJL/u3EaiD1IoLG9x7C0vT1CjD0aUme9FtqbvbSl6TwdAsY9LLmYPAAvFLyBG6Q9
                      sVmTPeHWlD2SI0U91LrxPODSyr3ZHro9Y/6ivY0zeb3qhW49wARcvVC/v7ug/5e8YLDtvNXfpr2o
                      8Mk86966veDPMr1apEK91s85PQq8NL2K+8C9QkiwvVomDz0YFEa8QCOgvE92iD3oiJE8GIqdvabe
                      LD1Uh8y8eF2zPACVqLleOGU9j9upPZdvP716Bia9cyXHPRnctT1ZEbo9AKzVu3iGyL2kA+c8GhF6
                      vY+Zyr2QWhw8cNI2PO8Zmj3KqFS9qc+YPWb6JD3C51Y9gqQtPdT9l7yS8gA9Y3lBvVJCYj3c4fU8
                      IIKgPPqJFD0L1Yw91khkPdgll7zS7n09e3mQPWb5Xz3eGoS9CVvDPWGfpj2/Db69PlKAvdR7u7yd
                      mme9DEGYvFBCy71gR6u9gNHSu95+TT37o7s9A7kevWzoqrxFAMw9QDrPvKaukb1tr0i9EmVPPVWB
                      xj3vWMI9gxSAPaiLMbyQxSc8lOTUPFoIK73WdXw9baaFPYsls72g4GS7UrMXPWVVpr1NbDO9XrsD
                      PbuDsL1AenO7iEyKvF/qiD32MRi9tocBvSxiqTxdF7u97DPAPDATCDyyQy09hk0ePQDIZL15D7w9
                      gHAvvJTP5LytQZi9zU28PUeglj2o/KG9ApFEPajgQDzNmmK9YN0wO3ir0bwT/Ue9cs+hvWJMbj36
                      Fyu9d/mWPR1JmT2d1cq9OdHDPVAjvrtphpE9MpUEPd9EsL0sRfe8aEYgPLCyvLuobLu8qHajvISW
                      5jygn6i9dkAaPYM2wT1uVnI9UELeO6caLL2M9ey8IkNYPYLePD0guKO9I0Jsvaw81rw900C9mTO9
                      PYBUnr0wBRs8IKqqu9gvk7wYOxc848SdvdWqlz3VcaU9Unk5PWCnv7vCgQk9/owcPYMwVr2sdaW8
                      WCTCPOKck72Y/q696/ukvU6RJj2XXJc9zEgOvaj0YLx9KqG95yOdPWaDm714Q5E8UGybO6JRFT3A
                      IZA8zt0KPUFFgT1g/7K71XuePYIWuL2xops9UJ0LPEvupr3aSzq9x4+8PbiAhL2ERew8YjwuPdie
                      ITw6BiI9BtmcvQX7j71/8qc9qLRbPACTULy2IRO9evNEvePCpj19h2m9FZ2rPYBlHroxTbY9cuKC
                      vUzDwbww4sK93bHLvUAIUztCIFY9U2J8vd1pSb2Vjra95cywPbMssT3SRUU9YMClvCgaBrxIRMu8
                      LXKIvY3eyL3delS9Y7/HvbqeGz0j+J+98/tivVSUkDwq3oe989Umve3Kw73Yr0e8GmcLPVBNiruG
                      P6a91LsDvfmojz1Qa3U896CEPdkmoj1A5KC9FmFtPVB/UL1Z8MA9UPNoPMbXRz2wGcG7oLLFvGLk
                      pb1RH6A9IPlNvZR51LzAxD+8CgoKvZ6YZj2XGm+91uCovR/MuT0Dnze91v8lPadsVL3KQkq9Ml4C
                      PSKJED12WE09GQy5PeVWkj2+o1M9mn57PWCg47v64xS9SD7GvPl5jT2pOZ89if+7PbryLj3impu9
                      FoI/Paqknr2Ym8c8+ID+vGZKGj0T64I9yL2KvB1Znb3s29O81hqHvcxGsTxFloM9wEh+vSAtTb3H
                      FEm9MaSBPcQo1Dy2cau9ABk2PLD7hbvg1pK8ScaOPRKkDT2FXKQ9u3PJPUCEGzuqkxE9GdOYPUd6
                      sb1zD6I9DPUCvVBwlLuxO4g9M8i0vbB+Qrx7e7y9oA6LvHBcZr0P8K49bWiFPevfnj1ooRI84uF0
                      Pd7yCT3oHpq9YgudvRrxqL20P8q82bG5PcKcQj1MY408kDoTvKwTBL39SCy9xx/HvcZdDr1Cfkg9
                      pyFcvQVBsT12uBW9Yg55PeAKGL3/9Jg9oKAPvbUMyb1Koig9xDXVPGj4BjwhpoY9rcXDvbU/sD3A
                      2zE8dn4nPRjQib1ZgZE96BHCPCwx9bxAfKY8BKX1PDS5wrywddC7umcbvUWxqr19ipE9aIcOPAD6
                      BLvlQKs9YNghvQF1uD0goRm9mvYKvYG8yT3ggiK9+POKPIZZQT24oeK8UIyQvbCgXL0KN6K9VK3t
                      PPmgjD0oX5y8wx3FPanBlD1F6aS9DswvPTfDvb1IEZg8B94cvawFwTxjBUe9Fe7CvfNJH71C4GQ9
                      0kR9PTPcvT0FS4o9uNagvH40hr1cWQW9/2LJPUJVlL3Y1pG922ONPYI6KT0m7Z29eQzMPRJ9Hj0o
                      XbW8KmQxPQB19LyTWHm9FHmLvADZyjyD0MC9ZSWkvcajYD2RvZA9t9KSPWSj8TyHnVu9ya3BPTKl
                      pr14uLk8sHPMvVDT27swYBg8lkaAvU4sLz2JLbw9jPjfvLZ7DD19MlS9jxa8Peq8q71x2ZY9FgNb
                      PcCeG71+JFs9PJXePICeur3q4Ag9IOXeO64eoL0M7P48ep5pvcD3Kb3dRY09cBgOPHSVjLwwmbO9
                      XWsavVUboz1mUxe92nFLPdBOajwAOr26t+K2vYyF0LxMgc08UD+jO7B+nTsyFBo9lXmHvdgCQzwF
                      n6Y9sg13PTB3Mzx3RLo9AgIePQzTyjz9ax69bD2CPPqacj2CXg49C/6WvWAF4jsAJQc6odWGPXoF
                      Mb2H6ZA97fOHPT97y70vW4c9BCzgPPFLmD3UKs48rz64PdC7Vzwd1Mu9S3mivVjck73AXj+7WGBv
                      vDONSr2gZQ27yBuCvMZrkL1liq29IgFXPU6GSz0atiS98lpiPRM+vj1QW4A7k98hvW1fnT02Cws9
                      k1govQKPAz3gWI+8NESSPKeYdr0HiHO9dzKuvRmNlj1ggHI7FGafvIeza70Kh1W9cEOjveHcqj1A
                      dKS9ampVPTcgc70AWuA5cvg/PU0OmT0Pa7+9FM+PvIgSjLytnYq94BTcu1ktsj0AIte6QEUbvMpE
                      Sz1J/6o9sls0Pfagfj09Voe9I+QuvULlvL0tUJq9AMEYO+62Tz3M84s8YHQ3veAc1jvQ6FM8wN0R
                      u2D9lLy01OM8GAhLvMiqkDwokpK9ZYivvW1Ry731j7A96umDvcrRMb38cOA8/DPXPDdNnD1bq6e9
                      KLOevdMlYr2KjLm9zQlZvdNktT3zAY49ATSrPU30oT0sEMm8JwpzvShQUrywVCc8foYDPWbAJz1s
                      d+k8sLyMOwpmkr0tiZ89ggs9PQBVVTqgJoW7Jp0pPYDM5joCBxI9pMMAvSPPK72Ml948N9NhvdFW
                      kj0w9qk7fHMKvYACtryCgGo9aZ25PUoybL1pSJM9AKGWPPDWYL2vuMa9Fu0LPfzV3Dwk7+A8rDeQ
                      vBpRy70AFro5hwkpvabsJz1qI669sF0FvLo2dj2qtxy9VGuOPBxQiL2F9oU9j6eoPQCWEL2wi5o7
                      kWu4PSvppT1NFZ49nlNDPbA+rbuCebO9b93EvZ7pnL2y9xM9lIuXvMzrprz6wgQ97OvXPH8xjj2U
                      S+68WHaFvNhSHryPAsW9WGAgPDOhjj3aRlc9B3PDvYpuST39MGW9AKeTvOuRqD19nKm94OW1O19M
                      pj2m/DU9Anh8PZAxbDxKbSM92FC/PG3ypT3hi6k9KGO/PB1rnz3wWGC82ONxvKNQc726h0O9ohIM
                      PdIurL2OQgc9weq4PZjDM7zIA4m8RqGevdZSdz3QG469kjwfPYUTxT0KS5O9pncYPZhev7wLVpY9
                      WOOpvEAPuDzSYzc9JzA8vQBQqTzuK4W9dK7KvHT797ytWiy9NwksvcKMWD0jVKy9GMa0vB6tTT0+
                      l149dTGkPTqkvb1Uhrk8V/OlPfjvxDyA4Ms7sHIZvcCv5ryP+6c9yma1vQBGNjz/+b49IgFBPdY+
                      PD0w+6m7ABxvvNbRgr3qWlc9K4m9PWr8Uz2cLvc8oRLJPWiYrr0qu1+9ADOOuQRi5jwbPrA9EcK4
                      PYYoBz3z1Ey9YMxruwZFhL3g+5C7zSCivUbtSD13k7U9FKKFvdfLlj3r64+9NoKYvU5+Jj1gKXM7
                      /BPNPIWZtD1qIQI9MLKjO4P/kz2GFp+9+Li0PC7+Uz1TGWm9BcyVPfIaub0zPrA9aBSNPAzl4byC
                      NI696CnKPJRviTwAy4o7XidxPR/IjD3c0Aa9suMxPZidvLxGOwk9on7CvYbzaD2FGoa9pqBuPQCa
                      pztLFYs9KpyZveY0Dz0p0Z09gG2zO4CPIbxuRhg9MkUmPehxVTyh5sM9BkR0PWoIpL0nBzG93xmS
                      PcAKxbwa2lg90LhHPNhc37xwHQA8Yvc3PeP9Ob1Y5gU8yMXvvPVAtb1UzAO9x7K1vZDkCDwQali8
                      k4TAPQBxLrveo429AMZBudAbmbuz+Uy9Dea9vQcbrz0Mx7c8Su2QvYWBwr1zr5i9b/SOPVu+ur3n
                      hTm9G6y1veeEjz1q73o9yPm8PHCFCLxoo5u8FtxnPQB18rndESO9Pz22PR1ym71aGD+9zLz6vBjE
                      przodAQ8LraXvYqIyb1STqi99uJ2PcA2EryVlaq90wakPSCscL1TMSq9q+ORvcD7UryX7mu9Rm9v
                      PViV8bxyDJe94tloPf64g730cco8Zg8GvREghT0k3/k8e1G/vZ7cTj0gE9s7dNLXvMoRVL0A8tk7
                      no1kPdF5vz0xn7k99zZuvVDGdDwjF5c98kapvcDbIbuJsoI9LMiPvBoTVj2QMy+9XL/8PJrKEb2d
                      xUK9Y9CUvZe7kz2Ab0C8XcWlPTejVb21Dpa9Lm9zPZNVa72wDXa9Y1i5PV7VSz3QA4M7sEMtPOvP
                      y71JiqE9SB3KvXTtrTzhpsk9qFk8vGD2yTwG8Ie9sAZzPFlLjT3T3DC9CPPgvJC9Mjwgt1m9X12Q
                      PcLxND1QD3a8M/GDPWoSXr0CtR090q0rPTMFZL0iUai91OapvMBxtTzrAJ09s4FFvVcQgT0yiTI9
                      M+KpPU0kM71S7TM93jw9PT9ptb1D9rw9RXygPUPivD0lYJY9of68PSmoiD3LJJQ9EGNMvQYQGj0A
                      Kei7zoAvPZNhhD0pDa89YH6iu9bThL1grKG8gH2JO2IMaT3zora9LDeTPPBvj72Nsca9HYwsvX2Z
                      gz1wfpG92/SuPQBACbjY1s+82hjMvSB8nzuWOBo9oy+xvYBsnzxSNcu99M7uPJ3UuD1Yh/i8AM61
                      OhIWsr03vKc9qELLvWBJczvYXyQ8kNB1vCOEsL2HAcW9uBG3PGg7cTwgi6y7goZjPe2whD1SS2c9
                      DsYePWB6tbtnA6k9SoUePeqtxL3Oyjo9zjBpPQCjELpTATS9wH8fO6Ilsr2oRuS8eJWzPLTbi7yg
                      WLM7LMCevKpdL70QJUw8y16BPbCimDu4NIe9KngevQaCcj3aMXG98EQTvZbjFL2o/Mm8w1szvSWh
                      kz10HOE8EGSEvWBJYbtMqIm92BecPB7PSj0HT4M9rUcnvZukvD34vLW9UEH8O42vi71ck/E8TCrb
                      PIgztr3aX3U97cs9vUrvAz1dIJW9pHjoPGsekb0wvl+96HcRvK5vOT03xLw9gImVungukLxsGcU8
                      ouUUPUOltD3gr/I7U5KbvZRq5TxdR1O9Hdu1vTP4qz2L0b29p5uaPUJIUD27i8G9SA7jvBp8or1g
                      JIq8U+OLPdjTrDyAV+a6PL0Evaoqe72Moew8QIt5u1qBTz3mtgI9pM3mPM2Nor0q6Mq9q/6TvTqx
                      pL1cUfg86hhSPcB1QrsKSha9UL2wu2AEbbtnuk+9y2qePYetyb0NIZ29Q6y3vQgzxDyO6qK9AOE4
                      O37SNz22LoG9lnRDPcKEgr2jL7O9Z0tpvViWYLyAS9c6rx6yPYBIfb2vRLo9vLMNvZMkk725mqQ9
                      S2HMvQt7vj2nWcy90sINPQpOHT39k8U9wPNau6zboTwObXM9u6qkPbBrqjuhaps9kHE9vKxQwLwu
                      LXE9h426vSpPFD01pLu93uRnPTt9sL09Sju9mIsJvA7zRT3O2Km97EKMvcO2kL2JvJA9oy6+vbqB
                      e71paMw9n63KPSzz8DwAEOg73sxNPXCCAb1/S449lKYLvdAdKrzQJWW9egsNPTh3hbywXaC9GtGw
                      vbFYoD33Gie9DVJTvbE1lT2A7/+7z8zDPXTcvbxcDRK9CMybvMDy/boA6ue6+GXcvHRSnLyo98k8
                      k7U3vVDhTrzl94E9BQ+3PURNDr3h7749EgA8PVAnsTtBcJA9QgldPaC32jtae7696ss5vRCbQDzK
                      IrW9euo/vetxsD3ihIO9ApmfvQM8jr2pEMg9bbp5vQahCz1Hw6g9GPAxvADwYLyQ7J+96ZWEPTLk
                      Dj3sHYk88CFhvNPbTL1NXKo9FTGmvUO1wz0SEWE93UiovaATRr1g0fA7ktSCvdagGj2DdKM9DHu0
                      PFXBsL2qq2S9BwFgvarYBD3oLKG8aZK8PbvGlr2ArXk6MC9iPH0Cq72o+ni8CIPWvKw6o7zVFa89
                      AssNPbTvt7wKFKe9+uhLvQCWoDmxJ589gCDGvfpDOT1Xlso91LflvBJoOD0gdcI8UC/DvVBfUrwR
                      SZ09DQRHvaYEnr2NXFq9O5+cve0ber3QXiu95ee4vYzjgb2h87Q9hQ2GvZg4GrywZXK81pFiPWSt
                      5jxBWao9K2fGPWf7y71g4DS9MANOvIaNAD1qzcG9EX+MPRQjrDyMYs+8gEbtO8jzrjzCxhY9wC7z
                      vDCX6Tu6RYO9favEPbKjKT3Hh8s9MA6uO7p9Sj3jnqU9yHuLPCKjPj0W9Qy98dehPctptj1cfOs8
                      sJiXO4DnUjxoLO28NJaEvOj287zXlMM9lR/JPcxVubzvhsG9I0F1vd89rj1FV7c9F2+zPQcKUb1o
                      +qa9KCzIvZwX6zxGqFA90PRJvLAhOr2gPCQ7QLR7PEFPnj1UI4e9UB6kO4L1rb1QwYu9/SKpvZaR
                      Gz3AVkQ7+mkiPShhnrwQj2Q830GnPR9HmD1UQAC9YhEZPTI+fz06OnA90+F3vbLKHz2d4T29fBn6
                      PNmosD2Y3Z68eO6vvGmVxT3Y96a9+qhkvdjYT7wQQ328WkqpvZgFkr0SEUI9OCugvKxl77w2yRM9
                      lU++PSrZJD34Ypa8zD6nPKFrnT0pNZA90uxrPaMZaL1Rm4M9iVWHPYM/wD0yxB8942XJvbmzrT1W
                      gBQ996dKvf8Xoz3znZo9lFnDPIAIhbqRXMM9au82PT0iw72wTBa9uYqpPWjnRzwBX7895lGDvadh
                      s73Y+6+8YKXdu+hCA7wR96498B0IPHf1tD0Fx6i9ipY1PYKRMT1oJSo8urNGPQA1mLnca/Q8ng2Z
                      vQDktDpx2Mk9IjVFPQl3jz1aicW9EDmUvfDUS70QWVa9GuJ8vdoacT0PY7s9+xO+PYDCyjsHy4s9
                      FAqJPPiThL2gTYq9gEDYutN/y71Jmbg9qci+PVTWrrzgyri9qmwOPeX3yD0K21M9MJvXO8I2mL0V
                      1aA957MkvadtH70irmI9fAvxPDAwWzyhZLE9/xenPXTjpDxhCbo9Zy7HvaDNyr0AVve5UDCyvQ7M
                      Jj1NuEG9gTarPcqbVL28Pf88z1WDPVZ6XT2ACA68OeGQPcVyjD1AICG7jSqvPY8wx72ym6a9jH2G
                      PLspy734op28MItEPGjGDjwAiJw7sM1KPMolOb0BNMM9MphsPYH4jD0siam8QqZ2PT2jjz36jBc9
                      vROfPf8bsj1y2qS9m6yfvddlbb0gOiK9oACHvSrCKb0aL2I97geVvVq6BD3Xyme9bWIzvbLybj0U
                      C7o8IlR8PdpMMz0Apf65qyO9vQsPjj2AzYE7rel6vSIJWD2BCYE9Y9aDPSTa8jyg91Q7/YOLPZsY
                      jz3okNu83WqwvQSr+DzL+qy9JzK5PVa0Sj0xXpg9C0CGPT9mvT1shOu8W1eXvYV1vb0XvE+9Z1eN
                      PbZ5eT0GlAm9IAadO6iUfDyAnVC9AJwsvPpjPT1cffs86D4tvKCFh7uQUlg8waO4PWL0q73Y3U+8
                      AG++PAgJpzxzDDe92NWKPBAyKr1qKny9qPrKPBixtr368Ia9qgVDvTCivL1d4Wm9ZIYXvbZLXT0Q
                      v469UCMbPDgskTyyuCo9XFf9PEzR2jwAGU48caTEPaoKX73Xd4g9eIOoPJhQMjwnmxu918ZFvQLy
                      Aj2wpsO70IkkPOhQIbxThYI9qoQ0vYAKFLq6l8O9dOfxPJU7pD1Y5A6871PDvTHCrz0t14E94ut2
                      PSuqu70PQ7E98OiWvTN/rz2YN9687X6TvSiJ/Lycc+487VOrvWhy87yXnLY9DusQPVrxCr29HEO9
                      hxgjvTsuhT2zaaO9euJaPezb0zzMd7k8Zvo9PZKcnL1eH5i9Y94dvYlLxT1T6TG9INfOO6NLfb0C
                      uxw9RJMHvdDON7xwD8S9gF+1PH6tNj1Y6l48S4aLPUm4hD0C1mc9DBLQPADhhDz+hDE9TrZAPcel
                      jT3QGBa9SJyGPAkviD0wXCq9kHpdvCxxzjw2EhE9akUGPbXSpL2yXau9GFFivADzfrzl6Zo9azCO
                      vQ/yjT3Q1rS7gIH6Ou7sGT06FTE9SsUPPVQcnrzv27s9ZohMPRAtcjy7VaC9tkJoPbgU/byA2Zk8
                      JhoPvdoJyb033LI9WNeGvPNyWL1dQji9/h4FPajIJjxWiQa9tNWmPLVkoT2g4Hm9ABS+OhSqmLxI
                      FYW8mTKvPYC+lzsKM5W9AOG/u1FkhT2WhRC9oJiyPPoNi72KFBK9ZMoQvQKcXT0K1Z69LSCvPbAj
                      er0tecy9EpkIPb0Vsj0aHUy9ul07PdDEgTtAIQC7KCpkPHMDMb1yS5K9+mYvPavCvr0zGaM9kmp7
                      PTBCuTvQcas7CJ2HvRXMrD2YRlO8hBPfPKN7mT07Gbq9BrM0Pbfqsz3tem295/2tPbSj07zaWkA9
                      h9fDPdRs9jxwCLO95PTmPKAwYL37Iqc9rh2PvQKVMT2gnRe9KLc6vEUImD2tEIa9ej+QvRMCMr1p
                      oYM9NjlhPWVGrz03WsU9OsyzvZUrrr2bcKm9js0aPTVVxb3137o9U2K0Pcwj8zwSww09wwCtPQDd
                      0Lw8/dY8cEgbPFJqbj1I25K8TL2KvfYdlL1FX689+oRrPcMmrD2wUQ69F8WLPed4sL0PzcG9tJey
                      vG13w70ofZQ8oDiAu5Xyuz21iJA97HPBPKlrlz1myXM9GGdjvDbfVD0Byrs9A41xvRkcuT2qKke9
                      KB2mPKrGVr1B94w94oeOvcChODzJmLM9M8SfPYqbbD0A4CK8QiQTPQCBm7yyk7m96P7tvAoTgr1I
                      /JC9qK8OvGhxhzx057U8Eu8qPcNIxT1i6Rk9kUqcPepSBz0ikIu9wLShvMjRyrzqMwA9IqWEvTE6
                      hT3s6ua8WYXEPbPya73tpqi9ZuYRvd/zwr3drZc9zF3NvMiy9by9qLa9qFBBvJBWJLy04s08b1iW
                      PVdvnD1u/6O9sEu6vYjQob31BMU9pU+CvR8Px71Nhas9FAqtPCJ4ET0Na8M9aIrnvLy8GL0AXrK7
                      IrMePdvExT0x8oc98RbJPaX0jr2jv0G9K6GOvUuIxT345648I68nvcAAQLzOFk490J+Vu+6tjL1A
                      iwS8GGxvPBA7eDwTJcE9HUAwvYwpujzARkk7ABx9PIJzaz1u5n094uW0vcIobj2Sqlw9mfaLPenu
                      yT3jD3O9V/ROvXMDmz2seY48YVSzPYxZ0LxPcoA9AErBPCitmTwGDzA9UiinvV7rWD2TkZK9rQ+4
                      PczXubygJXm9YAfTvAtNhj1ywWk91wx3vXcXKr2AOVe9QzZ3vVN2nb16SAK9YCnru7Oaij34Pq08
                      0LMHPFehuj0PC589gvhpPRM2db0bj7295/knvRaZAr3qkSu9KSCwPdxQ7DwdwbO9UqwNPXp2mr0m
                      UU89MwS0PbCLcb3vr7e9k861vaY3Lj0FhMo9p7xPvbvYlj1ZP4o9J5nJPSS18Tz3o029WBobPCj+
                      27xQK6q7syRpvZ0px70AIZ07MF+Gu6qPP73YKpu9R5Z7vVBbqb0S8zA9alJsvXPNTb1GTAc9ipZe
                      vcB6tb3EQeo8gHMrPLpkH72uiBQ92oFEPUf4br1rF6C94npbPR3UUL2gGxq7GFBFvHTK/7xXEFO9
                      TKbCvF1/nj1AT8c8M7eQvWhkHjz9I1W9dt5dPTmHhz1U8+y8CAOCvMf7wj3/mZk9TraFvcPhiT0M
                      SK+8n06nPeyPwrxZ+aI9DdOTPbnvqj2euEs9CZq7PSCtRr0UG+487u0NPQjqpTy61Wk9YE0dO53w
                      KL1hqMk9Y0S9vUUzgr0AzJm8mFukvG6LEj0cmoS9QplOPaCeuDuZM7I9Gv4mvTSXir0hfac9GPPf
                      vCvDkr2Yc3u8UL0SvQCQZrg1Y7a9UEivuwCJFTxgqoI8NtAZPQDqyrlIQ/K8nIyCvaeZWb23HWy9
                      6BbvvEVMsL3qvrC9tFOBPKQiAb1iekY97bu4vUQk7Dz2lxG9CN+CPFlfuz1Ae1a9qmo8PYiwubzS
                      Xry9KnrEvcAFaLyMeuI8zBz0PLj8lb27f669fYi0vejxHbwAU0w75k2svaz+nLwsjY+80qw6Pf63
                      Az0AI+I78sYUPSskk71Q+rk7SRSlPc7iez2S6cK9pnJzPaAjq72xrbI9wjxlPSJScT1+IkA9kCh1
                      vLWUoL3RRoQ9m8DJvQe5KL2qi5y9qAqSPHbqHD1shJm8IFruvEqFXr1RnMk9UtBFPeLwvr04nqo8
                      mNjDvIOGcL0Am2g6A4cwvQBWozlW/4y9ogIMPQCjTjzzvpI9XXepvZsPq73Y+Ji9xK4FvQAbE7sI
                      wKg8MNo4vR2PIr1oE0o8sqZjPTAlnLsaTnm9Gm8TvbALBLxY0uG8clO8vU/2sD2paJE9KLWaPOA5
                      1rzQQT28I71MvRiE9byCLFE94XSQPY6hUj0GLis9NfaqPYr6Pj1IzsM8IBaxvR7SJD3RN6s9gGNT
                      vJesML1sZaA8cgdPPdnsxD0oJpy9PuJTPUTg5jzrlci9GGwGvAiajTzWRWs9ZKP/POmNsz0mvDw9
                      aRSgPWfVqz1Lfsa9eCW5vR/Ppz3s6sY8zNjUvJ2ekD36ZmK9rdmGvZpudD1hFJs9ViaovdpMDj2F
                      MIu90PkcvUZAKD1poZM95aWvvcMFbr0Sigw9027GvboKQr1qGA697dWGvSCFkbxUXu28Smt2vd9A
                      nD3Gi1M9vZOxPaEfrD06Mzy9kpF7PQwCgr1spfm8KTLHPeiWRrzajzA9OGK8PFCg5bvtLx+9RQeL
                      PUCsiLwnsLu95FLxPMIVPD3ga5+7+WbEPfBIPDx3P1m9SYC2PRNsuz3w7T29GbbGPf0Hcr2ILb+8
                      9sYLvYDimbrv56s94FTvu3epLb26Mq69xQasPZLeQj2ooLi8wmnLvbj+gjwwosy7Iyu2vfl9jT0H
                      p0u9rQnAvZopWL0aThA9QF8ou5v5xL0yXBU9DHnZvDkrvD2gloK9O6PMvdAwtTuy5j49rL3EPLKU
                      tb2DQ8o9GCiZPGDpDb3SbVY9cwqnPXNqor1ekiE9bC7SvAYfMj1OXp+9LfcqvXgWj7xg35Y8IiUV
                      PQ3rer1wVQi9NEGqvIfWuz3hnas9iqg5vQ1RXb0nBli9WlwBvVPdhz1q8cW9cEQVvG7Pfz2TuBm9
                      +djCPerCGz0g+Le9WGsmPGBtjDtZA509KemKPW0/K71p07Q9At9wPWlEtj2gT3O7S5iXPfdPN70w
                      Jo+9FY7LvQUboL3uCDk9pjEIvccCb700f4M8jcuYvYxL/TxsKbw8iA2TvADefjvMOek8N/KMPQzE
                      iryAi7C6U5e3va4tMz2wXpW7oKwGu6Cvur3aqSG9+AL1vNGhiD3yKnU9+5amPb6+Zz0FR8K9ggkQ
                      PQpLAL3YwuK8yuhJPRgHt7xgNpY7wJUAvEAHL7uLaMc92GCuvcvkjz2lu6C9rlgZPWmVsT2KHwy9
                      8lxxPSPthT3aUZ69bbavvUBIT70KSHW9QT6/PXJgIz3qErK9KJ2PvO2ExD0XjrU96hvHvZUGqz3o
                      Ur68FDMYvWCPQjtge8O7MvwfPRzz1DwBNpY9q0mhvdBcZ7xQqlO9gqVcPUgGwLx0NMq8sByjvQkn
                      oj1Q7X88llYwPTT6g7wwBzi8VI7IPDgMxTzAVMG8Kfi+PUCPBr1GegO9gs07PbB6fbyTd4o9E4GA
                      PSXOsj0QqXI8IBmUPIphMz3+Qqi9EBJuPPsbgz1B08Q9dEgIveCT07tS4xc98+ZhvTMggD2Qlbu9
                      pZKDPdDFab2JyZQ9asrJvUAFMb3mwU89ACrkOcNQRr3AsTk74BOZuwCjezsABre6tfS1PbwXBr1A
                      PWI7/f1HvSY7KD306ti8SqU1vQA3QbrHeiW9LN3ZPEzDu7xQUzq90kuMvY2Olr0CJaG9qy67PYAZ
                      eL1rUK29bRJQvQYRID1qvk+9SXSKPbsvsz2DKak9oBzcvKDdcbsAhrs5rjBkPSIBbj1wgl+85gyn
                      vWLrPD12zCQ9BaqNveIOZj2YBDC89OmMvIZCWT2shf88AEqzOVAk1DtuDI69xB/VPDDNIbxKMSQ9
                      GL6tvSf/yj2gHy87ABmyvfU8wL0Mepy89mhKPVg7eDyxCro9MjpEPeJxSD0wvUa89ZOJvdVSiL2r
                      d7E9uD3vvAJKAj2eumw91DewPNNjxL33Pri97ZeAPR5bOT1qp6i9gHXsO1IgPj3Sxbe9WJ0SPNMP
                      hD37vcK9slZnPbV5yr2aXna9WmVmPQb9Nz0Dd5a9+ueFvUgc/Lz7S4M9o7HMPbAier3iVkQ9ypNl
                      vfEptj1CHB896PCYvO+9lD1WxBs9qmhHvTd1WL2ImsS9kDhFvBolMb3lWMY9SqQbvYic/bwFu7u9
                      yi+jvbqYpr2XFV29xiMPverDcb2oY3o8/a26PXarAT0AG627Yn15PRAPUr02yWg9zBy4PDeQcL2c
                      Vds8lBzWvAC40ThK6Sc9Lh0nPUcGnj2OlCc9gMOOPL0ebr0ndDu9wAwKOybEST2m3xk9vhM4PZho
                      e7zC8Hc9+piqvfA2cb1iXm898aaEPRO9hj0Qw0u9AC1kO2DLlrva+RI9zSM2vUiDwrz0Sua8ONrx
                      vLpLUD3injo9WUedPcyJlbzQSgE8KsXMvQB1Ezw24nc9igVhvSx03LyAYsA8AHSou0oZir0Lw7k9
                      ADPIvVjPKDwxn6w9RcCWvVgieTyR1sA9I9eRvbDUer3QCpy94qnKvRhnMDy+9Go9jYq2PbxQBL3i
                      GBQ9CsIQvcZsjL0w6xi8gEKsvWINt73ACXY76O40PNhgkTyU5eg8f+22PXFBnj0XGq+9lebJvT5j
                      hL3A7hS73jUPPXxM9zyZVKE9oTDJPQL3Pz0QR8C9NFDyPPPte70t8ji90vlIPYAM0Lsg6bw8nX9L
                      vRXxrj2gq8s7AJBHu4lmkT1jhGW9NYS+PdguRbwIKbS98R/KPVihZrxdu1u9nbElvbXPlj2QvFe8
                      zRtQvXgGrzwhZJw9SC2TPLHunj0QT4C9yxmCPc5bCT167X09QDbFvQDRb73Czx89IMq7O/AZLzyp
                      d4E9kAUZvPJgVz2lQa09CAuvvXRTEL1cLge9ad3EPcpgIj2GVCU9XSOUvf7tPz3QD9K7gopmPcDA
                      TTvDvLa9mE1xvKbVQz0IBrm9+em2PWyQlrxSqho9rQG3vQzj7zzgF8A7wMlcvAKMMD1qiS+9F3mO
                      Pao2Dz2auBK9Cb6xPf3PrD0FKoK9LY3DPdnVmj0csPE819TGPfDMZrzg0My7iUqmPQ6Eej2XZqc9
                      ijpQPXJ8bT2yim097bSDvQBD+DvaqGU9CuHFveJkLj2AGTY8icXJPUIbqr2tUrA9zYurPfpJC72A
                      zqI7Iu6AvfpyUr3YeQQ88KprvBpTib3g2Yi7IhQKPbQGl7wrCJu9/mJvPZmQkj2Veci9RvRSPei+
                      hTzwwi+9VA+MvaBzhb005dC8Fg40Pb1cqz2mAwS9oDRsO2DSTDttgr69Oi5ZvTb6q71wP2e8eZeX
                      PZJsrr1dTzK9BbeFvQu2sL3shOO8M+ksvcPQyj00lpK8M34wvcDsV7tUzw298HQePCZAEj2nsla9
                      Wlw2PZL+Vz2aEgM9Ke6zPeInjr111Ka96rYMvdHMlD2MF9g8kMx+vAphez3DQZm9KpIiPT19l70d
                      Fco9UWaYPY3Xbb3jsmu9sNXDOxZQjr3KOGg9wKZDPMhdibwgpuu8OidNPShsyDw6Rri9MDSVvbKH
                      Jj04gsK9lFjevGElkj0xP6A9IKTkO2irtr1yJz09qg2yvdCipLvh4Is9gOvZOsO5M71QOmm8ossq
                      Pa/Du71Vybo9QwI1vaBXkL1R/709lpMYvT24k726EkI9+VW4PYB1tjw326E9UtYZPTkkxz2waf27
                      A5fKPcNIyT2HeLA9wAEmu4FLqD1UGea8/RB/vQHbsT2dnpE9UK5XPEJSrr2ti409SIOevMzF+7xm
                      v3U9p7eiPXHCtD2QzW08AH9tu4D6V7xHq0m9D8iyvRf8er0ic3M96bWGPcBDcL3NWYw9Vp+ZvcSg
                      1DxLJ8G9stRnPZi4ObyKEBE91JgUvQlnmT3iKbC9ABMBOtpoBb3mZgg9mRKcPTW3mD26AGW9V1sy
                      vWCZ2bwoQUw8hwdhvT0dnr07PKY9gEDBPDrif70n7SO9wMlyu0NZJ71QQMG9vR1BvWxs6LxivFk9
                      1NXmPKR3Er0s3Q+9ADkzusMdnz3X2r+9YkBVPTOsxj3YgrC9AJgbO3jWkbxz3KO9IDTbu3G5oz1Q
                      Jx88jrWJvcAQo73uqRo91pg/PdNMlr1ezpq9YotcPXm9zD0KIjy99IOIvEA9xTo2mwU9YIEbu6gQ
                      jby43Mi80UnBPZh8w7zsXwG9hN8VvRCQn70mVQM9spxjPVpNnL2bzMC99+tTvWkQpz208BO9mbiJ
                      PVuByz2g3PK7NO6DPOeJI71QiMC7ItIwPVCdB7wA3pA7sG2yvVD1SrygPJK8Bi01PTqqob0g0Gy9
                      I+5AveATv7zF/Km9TIi1PMAzqbxzaL29Sa6sPZLpmr0nDLK9lPmIvLgPor3NDIi9O/mVvSHayT1+
                      DQc9+znDPeLvaT2UNNu8qlUcPSFWmz3AXBg8p+qAPT71Yz1oAZe9KLjJvIobSj3QvaO96G67vfZ1
                      mb0QTS29+ZepPb54Az2ABRa87Tw+vSNEIb3sL9c8y4GQPdVLgr2Uzqw8pbCevYi9/bxCP4i9YHml
                      OygaRDwipSk9sLvFu/PKeL0gMNC8uBWqvSgcir0yYRo9GfW3PRRb/rxA+Wc7gtHJvSt8mD1ysiw9
                      GDhzPPtwlb3sTeE8c4SmvVOfOb1Q5EO8bLvwvFwm0Tyg8Xg7pee7PcJItr0DZDq9kaaWPaAgLr2D
                      mHe9yTaZPXSniTxZVaM9CKfMvKIobD1svvm8UTyOPeNIWb0wPjC8MvlPPVDXoDt8oeo8Q/iiPezt
                      vjwGiGI9WYeuPZduxL16QKq9cBtzPJdhHL0jqna96KYXvFg2GjyXAZM94JzHvaRt7jwAwe27d1FH
                      vQuLuj2s/6s86KVwvAnEnz0I6t68M52OvVpQq71O9YK90YWwPYBgmbqsv588LDWTPLstzD2aqbq9
                      gM4oOj0Nl72focs94jgmPQrhhr3ep2w9oMpWuwA7DToo+va8+NOLPNlKsD0TRqM9wlfCvTAL6bvA
                      +/O8ieeCPUhmyL1HPym98biaPXChWTzQBzy8hc7EvSgE87z0tPi8GMqvPApSEr2dzIG9iJW0vYhH
                      hDzClG89ATTJPY3kR71T5o49kCStvQMQyz3PMrO9rrKevST5gL1Y4Fe8kJmRvcOZjz1nBrs9gEi2
                      u0C7AjvSCTA9QJMTOwkpyj0XE2+9sNP+u8CEob2SVHU9FTXHPazR9jzhr6o9qhQ7vQmsyz1MXYi9
                      kr0qPe7oOT0QQUC81PHnvKexa73YIxo8eiAiPWy2ujzwOFc88NkZvaAzO70p5so909fDPVplIj3w
                      N8K9V3x+vQDxEDqVSqM92zOTvSxE/7yXP329mbKYPSbaQT0iDJu9wNCSvFKQTj2SeQs90MlmvSho
                      5rw6oWu9jfmhvQ4BID3d1FK9adKyPWDP0Lv6DRU9Eh8SPdJuYj2ASCO8YutvPR9Lsr3/2cG9KlIW
                      vfRN87zY/tq8rSaSPRprXb2QzVg8qpAIPVrdUT2iMGE9TTa+PQrWl73S/kI9YHN1vS56cj0A/Qw8
                      BHrOPNG2iD0eX5y9wPUku8o4bL3CbkU9WpRqvZLIjb1gY8q8swgrvcBFJb0AvZe50PiavdDXor0L
                      17w9XLDSPPeUZ70BObY9eVmGPVt2wL2ECYa9EJBCvH9Ltj0y5kU9kMlQvGc5Ur2E0fI8WEuGvahs
                      ljwabzW9GN5vvBhtTjwA/pu9liNcPUS32zwqrB69+DCHPPL0or24Dby9q1mrPTI1Tj3DGrQ9FcuB
                      PYNBcr00DsY8GuyEvZHxjz25RJQ9laXCPWD9kL2Dp129fllkPQIhED0FB4S9HiuNvUzdDr24aKi9
                      lLOKvdoWej3ioGY9kktrPbrqWD3UvPg8+3W+PatXkD1Vs7S9kkgPPQRu5DwMvNK8nWCrvVMrzL1N
                      kDW9NSKPvRsjpr1yk0Q9MTK2PXl8oj3oiam8Qj4gPQ7KOD1oGZo8KM+DvIBV1Too/xK8ArRKPUI2
                      CD2whlG8onlMPbMoKb2lLI09YHvyvNPXhj2zn2u9BdukPZgVC7zqNRm90OQjPBAdaTywBnW98nZG
                      PZSfi7wQOmy9oClROwnYmz12KVo94MWIu0SS1DwmOXE9T5SuPcCU87pNy4g9dtebva71bz3a1sS9
                      A+WdvXi08rxCGAQ94L7GPNA32juASv+63tqUvd1rhr2gPgy7IA39O+g2OrywyZM7R7wdvVhQljzF
                      YoC9aFu+PK5JHT08Zwa9KuctPSj5YrxxmII95NvYPNB4RjwsBOM8cpq6vXg5kjzqcx+9EsOVvShC
                      vLyxLao9LLsBvaqzJj17vIA9+gR5PaCPy70sjfy86MuXvNi2d7yABvO8IC+dvEHplz37R8C9T82v
                      PahavLxa0ys9F8eePaKVXD0UZ+U8o86tPT1fxL3Yfno8YPZrO5DrRzzYKTu8grhoPYK4w73t9749
                      6PAVvHR+pDwkKPA8IrhEPfHTxT1QdUu9NbDFPcbYFj2Azx+9oP7DvajTib13sDO9li6rvY3Kdr2o
                      W8C8IXW9PeJDpL33sbU9C3eVvdSChrxyWBs9a/mEPYkQrT3xQLc9dss2PQPBiT0Vurc9xAP7POYh
                      Xj3gXfm8KkEWvexKlDzgafm8kG0nPJDNaLzyCUE9aieOvbfMoz1MCIS9biGDvaYYMD20Gc88rybG
                      PYNsNb1QY/074Pqxu70fgD1/mps9AIcaO+f1tr2QA0Q8YmVJPWs3tz2UO9Q8YDoIuxigh71VYce9
                      RGruPP2NJ73A9Iw60QqMPW4lg70W42U9CcGpPZh6DTy6BXq9DLKHPICu/zs5jJw9MI7aO0DQAL2h
                      p8g9XQNMvaADKjvgTYU7OFiqvDTMgb0176092pBYvSe/lD2Y5sQ8CnZgvUZcJT2A7Zm8KkOqvQTR
                      BL0wjK+7hBLkPJP3Lb1jIVW9qtNuPQMpvb1X1DS9aTW2PWY3Fj0NxsQ9sh5QPeiOrDx4fMM8kps+
                      PYDD6Tv+go+9ACk6O9INRj1UPMs8ciOOvYQR9DwA9Aw5myCRvTBMYbwCX2090m5JPYJxQz1LPru9
                      bA0CvWDdMbsi6lY9kMwSvcmHjz2fOZc9CLelvUddVb2oh4E8aG3TvEfugT1WtGU9LotBPVGDxj36
                      S0O9AA8/Oo9tlT2wcpI7DC3OvGBYsDxT+3S9jhCWvaV2qD0UtJe8MCGSOwzOg7xUe7g8VytfvR0b
                      V73MW8i8bxSRPeyCmjyA+bi9jWGBPRPOx709lKm9dkB4PYABHbwAE8G8jglnPQGqxT3Y9Qg8eD2m
                      vGhRnbzUiPo8sNKbvZjXqTyxlYo9rVu1vTxb1zyCQmY92khyPeqgbD3adxW90B0avE0NIb0YROm8
                      uhBYPR1Fcb1Cwzs95A3kPMEjwD2h1bc9k0apPQBKW70mtmU9MM0LvHECjT2dXkK92MmRvDhYlb0g
                      9e271UWEvQOhVL3dD2q93amZPXGmrz1dsZ29WYybPYhRvTwhOLo9soM7PfK/ET0VCMU91QfKPWKQ
                      AT1o+xk8a46tvTFauT3XLbm97W+OPapFLT1Sq2U9A7JXvYkVnT1Av8G8AEYHuWlWuT1ikwg9Qi2v
                      vVAs0Ls19rk92koMPV4RZj2tDHq9FFKJvMqbID1aXH89IeK9PRLVSz1Uvou8MFx7PLKQXj1y32w9
                      J4tEvZkanj3pL409voeWvUAYKrvTwna9wAWLvGCkczsHshy9iM2KvbDGZr10D5k8wIsVu+LUs71q
                      cbm9iMa7vKDaVr2YHGi8ZCIQvcq+bj0q8Me90FUmPAioyby01e88/mFEPYVIlj00u+S8OvZTvaB3
                      kTtHBma9AK8Du9DBXzx5Brw9IOGpu2Hbnz1A0E27osF9PcPGY73yJTM975yaPVya8Tzd6Cm9Tvpt
                      PXoSVr1rXKk9HUUgvXBOf73Y5BU80beiPbgLvTygMZ+8aPt7PA0ofr37tYM952SWPVUhuT2E2/Q8
                      l7S/vYBPObzaM2k9mzGuvWgWHTwtph29fZZpvYMoG72gFve8wNwBPBe8V70ExPw827rFPZWexr1+
                      KxE9ikBNPaDgvb2E0/w8sRLJPTGznD3yMEQ9J+izvfqBb71qixc9wuAIPTHspz01ULw9jUm1vf81
                      jT2SZ2g9wpwrPWapET3zBVa9gHJBvJjyUzwd8Bu92u5xPaBAODstuV696NBzPGtQhT1udwo9dKma
                      vLzn1Dx+hjw9N5VcvRDIn73UMo684EKGO6cXJL1aFFy9s7GwPUD1ADz6lHG92HMfvFX6nD1sNrm8
                      CzO/Pbx2D72ZIq89A661PT5QVT2K5hQ9X7XGvblowz1U5NQ8NDfUvApZR72tuLo9go6Kvcncrj2E
                      69g8sOXGvWdgUb2OzHA9MNpHPLwF+TxHTXS9YLGZvMFmgD1KaTM9BvcVPY6MhL3YcLE8FMHePOCl
                      Jr1Tomq94OymvPN2kD39cJ890k6SvcFUyj3oqBo86/aovdZoLz0zSII9IPOqPMxapLwQgmO9AK/5
                      O2BMkTzQ/ki9QJ7WvJqTAb3Uh8M82COrPIDbMb0ORUQ9qkZ4vR85w72YQiq8n7iwvUq6ir2wCB+9
                      3OfXPNMCwL3qaMG9C/epPewdB73+xw89mciNPSjgk71gkLC8EAl0PBNynb104eK8uGezvCDNrjt5
                      /rk9kai3PcLGMT2e7zo9R7CjPQqBJj34ao68aPMDPFJnpL2ZwJ49LdW9veBU+juWwRI9U427PRDR
                      ub1K4wa9QKacvVlHrT3SpjU9Chl8vbA5oL3pRpI9MJ46vdOgNb2Q2Ho80Hd/vBe6s70T5HC9qI01
                      PG7Lcj2Uh7Q8Sl/Mve7Xqr3KUDY9YH15uwD9BrxA0Zy9OSqYPbVBsT1AXWu8F4eMPfNrXb2Zprw9
                      zSqYPdDcs7t+lRY9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1NzkwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MDA1NzkwNHEBYS5kAAAAAAAAAIBsuLrAPpY8W4+1vYDes7xB9Yw9YN8KO+6Gh72y6wg9
                      Y8eTPevAij2qBj+90g4rPV8HoD3ZuKc92BXHPKiRerzAwWe80dGkPYo3vL1gl9C8iUa+Pf9yhT2r
                      WqM9TamgvV3fTL3DXb09MEKdux/qw73/R8Q9J2iwPbSHjL1312y90BnnO0aOfD3G+g89BKH0PEBB
                      LrwYfIi8eAiAvUg10LzcSus8g6EvvTBjWL1NWpu9sfqUPULlFj1AJyo7NEiFvRMSvL3JMKE9jBqa
                      PBgU5LwwX7e7SAaXvCFTzD1EsuM8auR2PTBzFLyQnyO8wL4rvcACeL2zkLg9+AamvJA4AjzUQ4k8
                      8B8vPLYZjb3NgsC9BjtePVOcv71aHWG9TPL6POiR37wYrXw80tMePXYHhb0YSrC97pYNPfJBVj3Q
                      B5C7t+AZvV1+gr3u4jU9i4mjPXACNLx+hEI9NzCBPQ3onr2e8I696LcwvOqKdj3g3Iu92IqOPGrv
                      Cz15oMg91GG1PCEixT0KOWA9xtFnPWKBRD0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1NzU4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MDA1NzU4NHEBYS5kAAAAAAAAAPBxcrxyo8a98O59PJkAnj1Z96497GaMvN5wSj3WfVA9
                      zBXUPIbobz2SdCw92hkMPV0NMr02KmY9AKK4uay5sDxg+b+7NCnePBQkw7xgd9C7ISi3PeO0r70e
                      ZRY9OkFmPU2jkb2UIIa8G5PAPfMBjT3Q2yC9ktQQPaiCdDxAWMI8waSwPR3/Z7144bu9Cw2zPUa6
                      E71WjHM9RrOTvZKGfT01Fay9F+1KvbAyIDy0svK8QH2JuvTh+LwJQaM9bikEPRifsb1SCTg9wyRy
                      vYAB1ruAIqW9cHoGPLfaPb16aL69BzlXvfg7sLzrc5Q9e2O+vV9Oqz2aE7e9ZpRsPXpVFT0eO009
                      ECg9vehNjL2+8ms9vutsPRS5pLwR1p09OjtevW5VbT2niyq9vrgGPbDoSDyXQ4s9ENcJPG2Hcb0I
                      zp48QoMxPcwUB73QkJS7IIjSO+icIDyuCWQ9g7GoPTplNb24t7k8sErhOyoSLT0EZvE8N08+vQUT
                      yz0Ctxc94MKzvFLKKD24ooG8AKO8O6jko7w=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1MDA1NTUwNHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1MDA1NTUwNHEBYS4BAAAAAAAAAACe9Lo=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
        - 1
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        hmlqOvUrUjpzk6c6c5OnOroWEDqxxSM6ZlNMOmZTTDqEQU86dvOdOtyLUjrci1I6hEFPOnbznTrc
        i1I63ItSOgmNRTpgISs6k6qjOpOqozpBVwA6bkTzOSwlGjosJRo6rYxVOiv6STqfNY86nzWPOq2M
        VTor+kk6nzWPOp81jzpP5Jo6qVySOgJNrToCTa06EPAEOoRpGzpgRQE6YEUBOn1Xhzos9bo6BMtA
        OgTLQDp9V4c6LPW6OgTLQDoEy0A6T+SaOqlckjoCTa06Ak2tOhDwBDqEaRs6YEUBOmBFATp9V4c6
        LPW6OgTLQDoEy0A6fVeHOiz1ujoEy0A6BMtAOvydWTxit3I8tjQYPLY0GDwpBLE8s72bPCGpeTwh
        qXk8iiF2PBR7ITzTSHI800hyPIohdjwUeyE800hyPNNIcjx+HIE8aQuVPIDXGzyA1xs8orzGPBqy
        0Ty7d6U8u3elPI/gbjxMkHw8aBoyPGgaMjyP4G48TJB8PGgaMjxoGjI8i6skPFhELjyNLRM8jS0T
        PFndvzxnHqQ8jk7FPI5OxTzndDw8R20IPC9MhDwvTIQ853Q8PEdtCDwvTIQ8L0yEPIurJDxYRC48
        jS0TPI0tEzxZ3b88Zx6kPI5OxTyOTsU853Q8PEdtCDwvTIQ8L0yEPOd0PDxHbQg8L0yEPC9MhDw=
