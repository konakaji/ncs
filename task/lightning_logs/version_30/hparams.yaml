N: 80
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.15
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA1NzI5NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjcwNTcyOTZxAWEuhAMAAAAAAACArk672zBxvgZRBL4QJdo8SkJyPvxJyz3Yn1q99se5
                      vSZtUT62kUy+PMOTvayU173cNu49gLbVvG7TH76Iul89XQCNPvl4kT5jPxO+BIanPQx4jz0a0ZC+
                      EKGIvDAt0b1yaqG+ggFoPsrobD4gzoS9WMNbPQigIj0xRJo+xA+nvqb7dz7+MGS+QBmLvX0rlz7y
                      PSs+QGAmPmrtn75A0728PhSUvvy/y73nLqa+sk5wPvC1+r12mhe+pkwQPsDOrTzA1Xm94DxMvIP1
                      gb7Mg4y9GvxgPrvVo773BIa+yLScvsjgC77gKyi8fCWzPQXShT54/nE9q8RdvugDSj3Awcy8cN5P
                      vqTDqb6EbZO9tyuXvjwukD2Ifiq+AOAFuJaART7DulO+MLkjPnAUxbxCP1U+Aj0UPrzcnz2T40m+
                      4oFnPnpSIT4QrLc87AyGvVuskD4WATo+OyUOvussTr7QTq69FDrgPZLkKT7IQ2Y9ZocKvu1FqD5G
                      TAg+r2OKPu8bgr6CYzc+pJnCPZl7kz5RVpc+sLv9vUBfIL4E+u09Cg8xPgJEor5jex2+T3qavjBg
                      2b3ijIK+ky9RvoD9lD0ikTo+ohFoPngjVj1QEwU+8JygvepIpL7Yzyy+aupQPryIrT1m0ks+0K/z
                      vCKAdD7qJkY+jBqPvpoYTj5Ws0k+7NfjvV4zTj4Qf/e87CHLPeCGuz0UXbk9Ois6PiBYU74Q6qS9
                      0qZzPna67L2sA9Q9fP3tvcCJR73NxoU+bsQaPmCoHb0+7Bw+FPKlvYbAer6ScH4+K2xbvghJFz4U
                      o9g9G/tvvvbxDL7kIvw96u0tPlKYTz56zHs+LmRkPgSU2j1AnYe+6yyNvoLWRD6kVZ49wBDQu0AW
                      9r205JG+8AEJvoB1dDuJuYQ+HmtDvrL2UT4zbxO+MhEEPm7sP77m7xk+BmLVvbwgg73EDqg9Ispk
                      Pp7hTb5OvGs+Qf6CPiBd970KrlA+fFnZvWCxgT23vJC+1psvvj6/bj4kOoA9MJi6PHoLh75o5yq9
                      NC/XPfDejr4Vd5Y+IEZ4vSiZT726/kI+t+2TvvpRMT4wRtK91nTTvRiJI75PFpo+yTqXPpDv/b1X
                      OoW+amJ2PrRZwj1eCFe+k9qKPorgWD7ggHi9Ps10PiBCjr3jAZ++wIEsvZ1/pz7xEIY+4uw7Ppjz
                      C71TT5e+OC9IPQCf6LtQvbC9nfeTPgAqODqJJpQ+kGqBvO/om74ArgA81TqDPhAcd75Ch3U+pqkT
                      vvB1Cz7LWlC+YJP6vfrnZD6mHfW9ANVfPWhcFr5MeMy9wPkXvbKcHj5gsgI9FLKlPeD2Ib7w00K+
                      GMd2vWJPFz6wpOw9LDGavi2oqT7Auy+9ALTUOWhiRT2QpxA+cKfBvezi6b0ArJq7gEtYu+DxdTz6
                      /FQ+UqJkPjCs2jxwHsY83opZvpiXAb1TiXS+IPQjvUIeFz5zcEu+cqiovrBvoj2XMos+NgFdPgER
                      jz5MUOI9j4uovrDy3TxQiA6+YN30vUA9jr3aSzs+sDZTvsAucD08/P89RZupPhoCJT5413w9P9em
                      vnNLjz7AVJG8kPSlvM5mKL7A98c8CBhzvUDeyj2mdZW+MFaxPWnJpz5e+Xe+Cs0rPgyXhr6oRk89
                      AKKQvXqvND6i4mI+iSGRPmEOlj6ALrC8tFSrPTiFFz6MLLs9gHgzO2x34T27ynm+IOgcPQBAxrcs
                      lfg9fnZMvrxwnL1a210+4JB/PS8sgL6QlQU+HlwvPgrJTz4A7kC+brYHPvpLIj4Gy3E+9QypPthH
                      Jb74WCe9zsQAPsOhir44vjU9KMsNPfD51L3bqA6+8hqpvhhsCr4Aq0W+oPQ6PXoEob7CXGw+rrEC
                      vkAfubvNtZY+4PFkvgCBhrwwraG9/SqlPpqnpr6x15w+0LT8PFZEpb7e8Cg+Jt2CviGUgD7K03w+
                      qJJHvWP3Ar58J/2918OCvr/jh74A37879NeZvj+BnT75XJA+NEmEPWPpdL6GQT+++fGVPvB77j0M
                      e9u9kJ6CvuAsPb4uKmc+0NYbvjechj6AzEG77BikPePtpj5wfYu8wtGavrxM2T0GhMS9uHQSPuME
                      m748eIO9krqCvr6YLz5Aj0e9ACnLPaLvXj4qgWs+IhqAvhtthT50aqK9mjx2PqZGOD47r1W+TtJW
                      viwioL7iDgU+/SmoPiA2H7yIExO+g7pmvmhpej0acX8+/XSPPjhTJz7AAp68YNNHvjiDXj3q/0Y+
                      NBLTPQCDojwAil67oBMIvhBInr0GW6+9qMA1Pc2Poz42OEw++fKkPiBLSb2jBJY+xv0Evmg+pL5d
                      JqA+dhLSvVytij0AWnM6Gk0ZPjpUdj5yBZO+qx03vrJyNj4qzgM+gOmaPC5Vqb6GCo2+dOCqPVTb
                      7D0Aj7E9IvRvPh5qUb6cv9Y9HHGiPTJqDz6Wn2S++GNkvcyEqz1IkiK9OP0fPXwjgL7IqWC+jLuK
                      vtM4nL6Q7pK8hvE9vv/Wo74y8RI+4EJRvfsgR74CzTo+mFihvmPbN758VaG+EEb0vCuIjD6gydc9
                      Xi0jvlKpo75GM/W9tq1EvhDnrbz4jUI9VnsNPh8Rnb4z0aQ+rnMlvsB7pDutl5A+FqapvgCXmzo8
                      t929LBSMPQeOm75cJMY9ukFlPt3GhD5As/i90BshPkBnursd4pQ+wMq4u8anUz5Qz7q9I/Uevt6A
                      GL5LxKY+AExpvTSkh71ADS49dB2Ovjs7R76QLoG8MqF+PopOSj4o6Ia+gCK6PQosQj6WUOW9EJjC
                      vLB58LzEGZG+jlMTvvMyDb52ClG+VigpvinvnD5jgQq++VyFPovYS77QFdS8DOP5PRsScb6a2Dw+
                      GDAVvTO7Pb6GWXe+zQOiPuyulD1Au5s7AJ8YvLyUh76aNmE+wGrFvQ+hh74AnoQ8AGPXva7nWj5Q
                      Q+g9UCr8PRh3k77yCB8+gIzIvO7GWj6W5QS+zvQZPkSrm74I1HW9DpcJPrs/nj7TCJQ+OpWovmGY
                      kT4HKpk+uF0TPnNrbL6eQ3M+kFeVvRYqyb0La5i+79mePmtDbb5cbdE9Ig5uPuWpgj6WxWC+Vjxm
                      vndfkD7hrJU+O5IOvusVb74WIyc+A6kXvj4zMT7LAA++2zRTvkYCvr2w7Py9vySOPiDYUrxcy7U9
                      QEu7PCA8ILxsnK+9U++bvsa6bz4jSza+NwWkvuQ2o708XcE9mqMLPmU5kz5qHy4+VFOXvZroXT7Y
                      qDE9wPPSPC6aBL7hR6Y+FkwhPvza2r1C+1k+ytsZPvh/Hr6hAZg+FuA0vrC5l75ANzk9iFtqPU62
                      PL7RaYk+oLrXPY8UiT6OyXA+mbicPobNq70iCFE+Y0CYPoCoQTtQvOG9KDR5Pfj1ZL7w+gA+7Li7
                      PU8Skr4rDlS+VOKbPQCjTDx6Mmw+pXWXPtqkOz6SFT4+NploPuHqmT7QsMY9mO82vgSpoj0T46Y+
                      ALC7OQAEDDtAQfk8oL4nvXbnbL7o5jk97AmQPSAPNb7w6JO90IfXvFK2Yz5iCUo+wdqQPoY2ur1M
                      pcg9TfKlPsCOx7vwZhi+YGq8PSCGQTxGSHa+V3WQPvhUb76CDBA+ljSdvkARHL70sI49ICgePJD5
                      wzx4rV+9TjZ/PvAfuL3wSWq+KRqhPkBVBD1jbVK+DpOOvsgDCD7mr8C9sKKkPYBzj70Osw4+/Ji+
                      vbANz7yYlHa9smwqPviuXL1EwpW+LFDdvaBPAb2M0cC92xiPPgSztz3OyxU+OPgjPvhEKT0ABMO6
                      WHNTPYB2djuAxUa+SvtwPg6GLj7QgpQ8OHwavaDiMrzsedO9aKNFvhBwnLygfGA8WiVoPhfNhb4T
                      wUK+6cSPPj6xG74WF4K+PYilPnaOLD7Ebou9hldEvjyR4T3QF7w8KGgdPnC4172ILy69Sq4qPqS9
                      jT1aGQQ+WgF0PtbTZ74AYau8WEoYPuBGir0hbYI+E20Evm3Xlz6bdyS+BnT4vYLHVT6AsGk8WIxq
                      vhjZCz2xU5o+0u+PvuYoJ74gx0M86PgKvqoSJD5Q3Iw9ZOyMPaV0hz7A7P27QFpcvaNgnr72lcW9
                      mxFovr/kiL48kp+9ON0HvWB9WLyAb7e8wgd2PnAWID7DGmu+xpFyPrjCQb4mjgs+BoFxvlZY3b30
                      rMM9cLSKvF4fnL7GeSg+aQOiPohDaz0AOMo93PydPQt7Sr5QtqI9W+yXPnrvbT7uyCM+LCHrPR4O
                      Wj726o2+nNe+vUO+ir6w8PW9AJWmujGoiz7WMZ6+YFswvnMMTr7UIIC+sFKnvSz7iz2jNJw+SuWS
                      vp2OgD52V/+9fs1hPjBgIr4mnyM+WpsDPsgSWT3mxru9zoAuvjKIRT4fm5S+CJJyvRKlPD6qmHY+
                      dudjvg67Eb4oThC9eqRvPoCssDy9hJo+1pyBvgB0DTzSPhI+GgVfPh/slj4wb4O9EaymPgZ59L3k
                      8oK9fhVJvv5CPD4Y1yC+YDckPHb/Db6auKm+bCLzPVD98Twg2h++4jQrPkQEoj3KbW0+HO2EPQA7
                      KT6o/gm+AI69PEp0lL7QwKA9mFxuvnDhxz2aqWk+QPvCvGYDrr1QxRw+vCC4PWzmjr6Z7JI+HuQj
                      vgCg1zluKzE+di1jvhXfhj4wjEy+kyuUvqnJmD76Wn0+8k06PoBtEL42ama+U/pavsJ4Yj6P5Ja+
                      aLoVPudEqb56CUY+DDHEPUCsHj6veaC+1KrdPWjlXb7SkTM+mvtkPoCMND1yLmY+pC+TvhjVET27
                      bE++AD9uvtIuWD6WvZm+cLprvlwV6T07cFK+Vrl6vg6+Wr4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA1NzUzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NzA1NzUzNnEBYS5kAAAAAAAAADASxLwll6Y+8KuQvag7GT3IiUu+SPMAvlQmkT1MhZu9
                      PrZIviYQWb7ICFA92tFmPmYwn74NAKY+jmsCvqg6jb4T0Dq+2EJXvqgmRj3avpK+cLLGvBYiMb64
                      FhI+HWWEPqtTRb5Qpvo9XKzkvQ1xnD7Y9ju+8DDovMBCNj0hE5E+HPLgPWqZQT7wGNO83Z+qPuJZ
                      aj7UU4a9K2hnvp5Shb460Gs+NjE4vlviAb7eg5u+ZJugPWj2AL2DDEq+IkCjvno0qL5sMr49LI7v
                      PYjwI73Kk2c+T6apPjKDSz6I+nq94wCWPiJji74gfQA9qBx2veeHoL4QsDy+MwkTvkLHST7wnCu+
                      C/KnPqJJbz5eIH0+qgFrPinmgT4AbOe9yBkIvWxHnb0akjQ+UEonPnDc672K1To+mkERPnBQzzzM
                      HcK9MM2tvGImqr6W+j++CqpXPpAJmr3YsZ++UHRxvhxZvz0y4p2+VrYKvjS+1z0ZaqE+9g0gPoKZ
                      jr52SAG+gGdjOzAC6jxbrYI+IOS/PUM6H74=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA2MjczNnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjcwNjI3MzZxAWEuECcAAAAAAADojx48nU6HPaiUGLwa9xs9jN3VvByB5DzAqTK7bOKC
                      vCCn4bwAPs26kqgvPViBuDzAfvi6cxOxvbpHRD2xw8I9XhKqvVCXBTzQ8i29MlZIPTMOlL19IZw9
                      Yz1IvcjA2bzAjZK9HY2iPaZ0qr2zGJ+9Hd6Vvdfjtz3AyAS9qwKcvcAtLzuxC6s9cpLFvQltlz2f
                      n5Y9xm8ZvSkdiT00SIG9ifW+PeDlX71Dr2W9uLGmvQ1BiD0Xjmu9nHH+POlJhj2I+K+884I5vfBr
                      vb2Cwkc9X9egPSUrsz365BS96IYFPPB7Rb2CkxY9QMcSu2BG/7uAp/a7c1k7vc0gwj3XC6+9bh8T
                      Pa3wNb3A8Ci9Bh5dPfL/AD0d3JE9/zCPPc0+sj1qljM9coQhPTTDyjx+zyc9pY3HPVgvtr0KfE+9
                      1P/pvBjH2bwAwjU8IaSuPVOHyj0D6Kg99icHvep9aD3aOli9oBw/O2juJLxQ2ZC9xMAKveD3pztj
                      mVe9YfXCPXJUbz1vfLM9nZVgvaqTeb3esXU9sI+nu9svvL0FbJa9yn0IvWhNbTwpHJ09PNUVvWhw
                      QLzm+XA9b0q5PWLafj23/369EPA8vXjgjLzvy4o9ueq9PVbIMj0STAY9KhxCvSb+mL3AL/O8UFfZ
                      OzhRpbwvUry94FHQu0rnTD0y6nk9BIH9POL+CT0SB289Sj6KvWAdi7ua85W9AJm9OwA0PbwAntG8
                      oJl6u1APVrwACi68vxiuvb7cRz1NQS69ReuLvaNZoj2TUMK9GgPLvWLSo73oQTM8HsUVPWLSNT3o
                      o8C8SJezvbDwDDyQuUK98FsKPCp4Tz0CZJW9LVRMvcBK9Dr5K7k9YPCZPB5ybD3QZEW9gI2OuoD0
                      XLzAbMW9KP2pvByO0TyC7HE99AnBPOgTZTyN6Yw9jGagPJqsSr0YBiq8CxWfPelysz3oeFy8MD8W
                      PPaEAb2IHrM8yNGEvEjtwDwwPU29M5tAvdzm9DzfzZw94lVkPTOjSr0wkBm8zheIvfemy71KEJG9
                      rwSuvQDOY7y/w6U9pqGIvTi747ygjty8TOruPFDjVzz2E6K9FgCfvfRvFr3msZ29HqaQvVedXL11
                      vbM93iVaPTV+zD2xQa89YPfuO132tj1MAqM8SVeEPTqWUT3w0SC9ANFJu1iaErzAi0y93kiWvUCP
                      CjsURMg809WwvZHSgD2uSaO9bE+OvF89rb0I6vS8MF6QO1g1ljzHIUi9ZPz6PCGHkj3YNR28oHgX
                      O6CYebtbP6U9mI9fvBoeQj2Il6G8KOoAPPPpwL1gOcw7MgBpPfVAy71KoT49uutYvdmCjT00NqG8
                      jTudPRpbs71fcsy9QqMVPW0vSr317Ke9wPqKvA0gWL3qQRc94rMnPTRb4rwlXsG9BdeRPc3LwD2Y
                      3Ds8Z/WNPcl4hz3LBMe9YKiPPA6OIT3tRKa9stkxPQ3Sgz24iMU8PR3IvRJ1dD3Z7Is9uCqxvQt3
                      tr2tBHy9hiwBPe4ZBD2EZfo8LktVPVDN5zszwjG9lDMNvXQL+DxTr2C9+nnEvSdoY72MMMa84BqZ
                      O+As8btCNQU9qU6fPewgzjyRbsw9cvyiva4KZj0MDe+82cG4PayljTzljYE9jUmuvYy/rrzfubO9
                      Y02zvW04yD1Zb7I9nVZpvQDqxbuyx109Y6JfvaakCb2gpcY8ith8PX+clj2wnKk71rQSvZ0iXL2w
                      IHC8vSbEPRNvpz1dZZQ9bM2wPNkvqT2qMg09UUCWPUa/CL0wwgu927eYvefBWL3jHMK9tf68Pbvx
                      u71PBcG94JGZvfAWvL0HKcQ98oEBPbqreL30DqO8HOblPGhI+bzG9xG9VKbJvAOdIL0htZo9MJHv
                      O9OBuj0DqmG9fp42PZMdW71C+3Q9k4XLva+ltz0lv609VIKvvDlhyD3+gFQ9Z1eePSehnT1lY5S9
                      IMCQvdBsuDvjW5W9uYKJPdurl72BKrY9AVmNPQbUMj2NEL094FsfvQDfKbp26Xg9ECxuPLtBs738
                      5dk8sJL+u7/Iyr3+OVA9WiMxva7Rq72ZVI09HcdNveflQb0aox+9uE/nvPgJoTxoO8c8wH+hPKJR
                      ID1sts88M3AevcoKDD3MB4e8UGd0vQCqTjywosq9vwaGPWiPP7xIUPK8/5utvU6NJT3B36s9SjAj
                      PfAhNTzN8TC9mYmhPYCo1Lwfd8U9kKAEPEmhvz0NQKI9DefBPfEcvj3HHCi94KzbvN2vjz2GMRg9
                      ltWNvZgryTxo35W94lyVvdrTPT2UR5U8hH75PIwi6jz+UTI9xC/2PEQL4jzYqjy8aWSmPS2SQL3h
                      Ia89qiMMPQZZUz3wwha8ZzakPaZPmL072ME9f5nMPXpGRj3nLTy9TAnBvIoaCb2Dekm9aYGLPREf
                      uD2gDIa8sdWjPZuHp71g2Gi7lBX7vGjEorwA3Sm9vemlvZsZvT1D5J29Ou8OPYVsqL390ki9e6Wl
                      PQdEN72g/Wy7UIxGPLJoTD2iwJ29WfyOPQBm0DqMS+O8xpRVPRvos72Y7EI8IsMQPeAGhDxQF3o8
                      wAU1vWTl/DxusWE9+j5yvTC6pDt4WZa9eX24PRAvVjxq/yo9qFMTPJRrCL0eKKm9/IHoPK71az3E
                      7BO9lFDiPCo9vr3dSUq9BxXJPdGggT2+u1U95Xaiva5dXj2h4ZM9QKViOxHNvT1Gn6C9HKngPPRy
                      2zwQcWa8QxmQvaRK7DzwA469kiQjPc0VMb2aDgs9B4SIPfCSpb0YzBo8nKYIvcdPTb0oNC48nJj6
                      PFeAXL3AAWy7LHe7vCAy5Du2RAW9SoQdvfwmEL1dS3S9rtEPPX4pmr1OKkU9bQuqPRzehL2K31+9
                      gEOeOjVTx73qizc9VpUBPTKrLz1gXLE7CqbBvU4hDT1SXbW9oDxnvR+Doj22Hko9EAp2vWCHkjyA
                      oRQ8jYKLPTl6wz2sSeE8QxcbvYCE0TuI/sC8C9+LPbDNv7tozD48jfAgvSjTZDxAY5M6aGMBPECE
                      KL0o0/m8sGZivdiqt7y60VI9WrUavdIOob2jOzK9gEkIvRuDnr33zUe9rmEvPQK/fD2jZzS9fxnB
                      vV3tW73uY4+9bxGaPTull706cnw9o8d2vdiFDLyzJ6e9aN9UvOjk27zKnSi90N+duxRI4rxsLq88
                      yCORPMC1RjycHQ69UKbsO5+ErD1Sh7q90RixPRheYjyYHpm89bC3PbhflbyICrW8nq9oPfnkjT3K
                      DS+9LN7XPLCpkru9HU69YBQgvZWrnT2AJ3u8IyxvvQp8OD0X0Kg9wqJUPcd4oz1od5c8cvxXPQNG
                      tj2xGLE9vyWhPXStpTzsEpE8wDusvAnxhT2hpYY9Sq/JvUosLL0058k8BrkiPaqVk70Arp26u1Sj
                      PZGbyj2r24o9cpyRvXUTvb2iMQM9/YTKvSzq0ryKbSY9IDbfu2juXbwhasg9JU6dvYdmsr1AiAU8
                      n86uvTljmz0MTPy8142tvfLaOT1Y8/K8IyGwPZASM72nbF+9LQPAPX4uST2lIZS9YL+QvfTMi71g
                      k5E7EGcmvcpPIr20swi93EUCvWAqI73C0om94Og1vZMMsb2g2UO78ZCtPQHmtz20ysi8TSiWvfTA
                      3zxYCIU8JoskPeNuNb3Uu6Q8KQrEPaAQP73IWJa9YJSNu/qmVz3jA7A9L2GbPcBGYjvf7co9iogz
                      vUrvOT1SpFs9eqdRvZW+wL1Ark29yBOkvQBUz7oKZcG9qXWlPV7yaj2mEi89oD2ju0BvVr2jmbs9
                      MniLvaD7+zttIx+9gNymPOZJB71gFS69na7JvZjYdLyZ78c97PuIvEDzq7wQ+Qs8ZxV3vVPgbL2Q
                      JmU8oD82vQpcB720Fra80MIOvNI1fj1I96M8TC/DPICdbjw3vMG9xW2QPTONYb2qACS9QJB9u4AY
                      ujrqBBK9vt19PfHqhj3tUYi9ANpGvcp3Dr3YU3Y8hCzdPHJ7Ez3UR8W8AB/YvHNffr3KyEo9S+7C
                      vYJEwr2yqpS9R1gtvdrFw73gB4G8ugs+vSNQXb0Y4js8JZ/GvVBpc7y3uU+9qisNPcClLTxfCbW9
                      eYSUPeEPzD1i81c9tCOCvTORUb0CqRI98AY5PCM4pz3KeiQ9CiVOvfC3hL1sirw8sRCnPXdVyj1C
                      2Tc9JqJJPWoWXT1tNGW9rKXRPFiDkLxH9HS9WLfPvL0XSb3168A96zKXveS76jzllos9EPtiPKVc
                      lD2C9HI9YHUzu8DL4ryC0zY9NtIJPYgFyL1gsjq7s3tfvdS66LySa5q9N3NYvUK1ZT3F7Ko9CPmv
                      vN9blT0wX9W7ap5APTBt/bu0UZs8aKdcvF0wjL2usWg9gNKsOyzvg73yjxc96EOcPAMOnL3nhrI9
                      AMWAPKDLvLvMBuK8k5KRPbILPz2HNMA9/LLPPMCRNTw/pKQ9RGaHvTPAkb0lq5a9U47MPSi2DDwi
                      JmQ9jTKqPVwY+jz4SMS9UZLMPf/KvL0vncW9anBuvdAfb7zofvO8FpuWvTgzoLxGlgC9SsVKvQCM
                      BLrQHam7mPtSPLgTl73RL5Q9CJDZvMDYdL0+85e9FcDAPWgIEby6vni9NfCvPfjAmDyoVck8xkRh
                      PS4TGz25P6M9PIn+PJBgZTx0Oe486rSJvVCZGLxL9b496Mt2PIAgIb1hvqs9cu9xPZaoCj0rp729
                      ytLFvXCBdjzbRK69IKjVu3v+nz2gRo27oNawO9oRDT1S3xY9XDz/PMxrrjyFBr69W0GOvZcExr0A
                      Pem5/NDlPG61CT3KmGa9UiK+vXCdi71637+94PT+u9hFpbzJ08Q9TO6KPLjWur3P8aM9gLiJvCpf
                      LL1A/A48n/mdPQ/PlT19znq92DsHvECkCjxgYPa7iEeUvZgzWDzqFm+9D6ixPVAf7rsAIKe9H+y0
                      PeYCjL3SvnE9KD+ePDZ6ET3MPv28/TkgvdrGm71gEtu88FDHvaU2uT1rNLk9trM4PV8Iw73Xb7g9
                      sBwwvIdJR703AcY9LNLCvGO3uz30Jsy8DVpNvazUlLz5oZI9GUaePaB7PTsQW2q8uPGEPMB2KbuQ
                      mgC8Yam7PahFQbxyYSg9cu0dPRC/QzxMr6+805yDPSlthj2AM5c7ds1BPfpYhr2j6aM9ZMiBvek6
                      uD291ne9QKFyO3eusz1C5hA9LK7VPP1PhT1tFYs9IKWyvbK6OT0i0nE9HxPLPYiNmDyNfLc9zOn+
                      PCDhZr0wCby7HuldPViFoTwaV4i9hmmJvTqMt71AT4O60x2WvZK1x73SbTI9oL7jvInixT3TXzu9
                      awjJvQZ4Aj2jMW69BD/XPLv8gz0Uoaw8a3O2vUC9kjpSjmw9NU6Lvc70Gz01dqU9qG/svNA/3jvM
                      eKa8yLrDvQrqR733u8i9D+W0PYCXlLtTicE9TL2YPIASnrvw2RG8FAn3PMqETr3vPr49Xuc+Pa7A
                      jb3S5Ym9mjEYPQutoj2gwWi9+m4mPfTohDxN9329QOp+O1LUCD2Cdbq9oBv4OwgYu70AqAc6YFyp
                      vRjihL0ALG674xmTPRUclD0gAoy75TqXveGepD3KHm09mcaPPUBhxbzK11I98INivWM+ur3NQ6Q9
                      LBPWvOyhx7y0bO48QGBvPGcwGr1yRcq9rSiZvbfsbb1gBrM7xZWqPbSmpzy3L8U9NOfYPKn7xD3q
                      XTY9n4K6vbBZBDyASxw8gEZuukrhqr1Ywbw8wkJ4PWpxU70ICvu8T8eMPa3Gvj1DKkK9bxnBvTGK
                      pz1cvBW9ELVXPEjYwjxgJqm7Ra+EPRjTlr0gAb29mLinvMAKhL2wBRI8QFqLvOlfhT1HeFC9DOvA
                      vMBuyrwL7qW9ywzAvYDz0Trq4gs99f27PQ7iTT0AmY+8ABbju5tovD1xiLo9fGT+PLr/s725bp49
                      NA+LvXqsy73VFIs9wE8bPAJvwL0UJIW9U8GgPTDVmjvilZu9HbuNPbgF+bz4H8A81zdzvQrvvb1W
                      Q5e9IAukvTfEXb0Ab6q7ANG7Oyxpib2gF5u8THUGvRW/i72jNYE9otMCPSE3hz3K0YO9ExmJPdiT
                      q7xArx48KLiWvfC/vL3Q7zY8BF3/PNOlWb1vx689WnyzvcF/rz0w55S9Pr8dPVasBj2ifWE9iAmS
                      PBZZLz3B3rg9QJATOwT/4DyKz5q96ncfvSiD57xI86w8Y8/EPSLwwb2cHwS92XuIPdXEuz2g5DM7
                      7YupvfUap70fB8W9AudwPU6XJj2hH8M9wCeovBFGuD2C1R89u2eRvUCwJzyonBy8el2+vYB1vLqK
                      Z0O9Fd6lPcEwlz0Sfri9RrwdPYvZjD2zzba9TOvevHq3Wz297n2924KhPZgvDLwTH5I9HVK/vaIG
                      OT3H1Jk9QJHDOtSz2rw0TdU8qK5EvLCLAjyQtzo8PzvBvX1loT3Q8BG846ZPvSJWOD0W+WM9ovtX
                      PaXZiL0CM009mgdxPTzU5jwAhDG6+WvGPaKsQj2ABoq9CkERvT4/Hj2Ksmk9jFyJvWIsy71v6I89
                      aAg7vMCnfbtUu/m89rEYvXkwwj0QClC8BfKrvbyqgL3MbpU8ag0BvaCuPzt3lro94N6oPGw+jjxv
                      ScG9gsDJvWCMDjuCoV49RBuAvWD+bjtGrxi9RC3YPD1KUr1gq5I8CnkRPWBThjwumQk9EBh5vDM7
                      xz1uQlE9CrCmves7mz1Hrkq9ROYAvcCqVTuQq0U8PcE4vWGRnT1uunE9dwOePTCK7jvwCgU8S3DB
                      vfbICD0rfKi95+txvW8zrz3i8149gMDQOnDvCr3Ydxs8k2KXPUuWpj0qtcK9AdTGPR37G73YH8y9
                      JZqDPdKwDj1Xl5s9IFmjvBC7X7yqBYa9EaOEPUsslL1v4K094/64Pfz7BL3S+EQ9LH7OPA7QoL2V
                      0789GKIJPBsMrL3oZLK9aFsvPP5AWj0ARwM6Qj16PUsIoD3nkkS917EqvWBd8rv0Y6u87WO+PWHb
                      gD07/Y69nFcDvci7izwgMcs7bNTHPA2sPr3jOsa9FjgbPe7EVz2UgQm9IBZavW7SdD3pq7w9igZg
                      vRCzA7xMZr08qPxVPIG3yT2jDqW96KJIvMovUL1tEqK9YEiWvbK2Uz31xI89pZ+wvRiG4byqI0U9
                      hcmavQBdsrlY8Xm81rJ3PUrHZD2tMCq9kBZpvDp6tb1g9Sq7QCVyvUIhRj3M3eG80Mf3OwxHtDxw
                      /X48c0ulPaB4rjzzfWW9YLgcO5DEFzwSNzk9i/2kPQDf37s1n569tuSOvapKJL23NLq9FECTvOxG
                      l7yqcMS9/SHEvU25sj34aOa8NcuPvaMfeb2gTJm81enDPfE7hT1oW6Y8kRiJPQNbR71KLmy94JB+
                      vc0wuL0AmKS67wydPeuZqT0Id828IrpOPQAUDzpRrrU977/CPTy50Ty4m5O9urNwPY64ob0Lxqo9
                      1ZOjPYAJtTrSeL29O3+OPeqKDL1aOFO9su1ePWtHvb044Oe8MXOqPWthoj3mh0k9CD2ivcoQA709
                      w8M9xFYCvY3QPr1D/169toZ6PSbBIT2o5Pe82ICtvXugnb1dU7O9k6pVvUCELLwMatm88iGIvRBR
                      E72tdH+9YOp3O0iRxbyTBMG9MpcmPWmnvT1yOAk9wEQBPIi2oL3m0lE9QPUyvJIfbD3pV5M9+9iO
                      vbq7bD34/aI8aMU/PPaLBT1gqSE7sIc6vLjgkDwAJ7u7aM2mvR+mxz1wdFu86EjqvFJWrr3XoMU9
                      8BEEvAoiaj2lhJE9GrUtPXgX9bziZay9n5TJvQZjND2QKlG8TxmEPc2CqD196269x4V7vZgPy73Q
                      yb67MMJPvMJ7Gj0Tzps96i08va8nyL23kDu9OvdzPYMMIL0CxrS9FrwAvWAjYzvk0M88oOC3uxNX
                      qr1Q7He9JfGaPfdUOb2gvUu9gr0qPXSs57yX4ZE9nXclvZvzrr0JPKU9AqwwPXZlfz3aLmQ9bUKr
                      vaPybL3YZx88cJIWPECsBbztrpa9aC28vXgUyDxyDbu96FJcPKZuUj0DLsO9WkaOvbYkVD0Igpm9
                      ABJGvSyL6Ly05u68s/XDPQidjbxCj189dDeCPFBIXL1lIa69GiQnPWAZLzvAcKs8CrdEvQign7wA
                      hIi7jNiFvUA09LxgKgK99K+zPObhXT07U8u9yrg7PbA00ztQuou9YcqmPUnrvz0SEGw9H5uBPYA2
                      jjr9K6W9jTvDvUp8KT3idls9quSuvUC1q7xmzxU90JrGvTeFwD0QwW2965iUvbNNij21l489k0U8
                      vWEugT39xMM90ypZvSzw4rxKfFi9pQa4vYp9oL39nLK94MmcvJBcP715uaU9cDa1vfDFO72NQlm9
                      4H3eu+w9jL1as3C93ZegvXfEer3sN9e8yJCGPM+Fwj3NWTi98jtMPQVivz3Nboc96PpNvHCNDzxt
                      50O9sPWNO4C5YzrSq3k9OsGEvRJiHT0TEku9Jq4gPSALgjtY8Hs8LN4TveNotL2njz+9lPqTvD9X
                      wr1G3wE9EO0avGBE8juobR88gISqu289ub1NVLC92LUNPBhkfLx08Y88wH6DvW74cj2Azt68IP8T
                      vXikkzw4C6U8hyK5vY0grD0JFrg90j8APZCECzwJZb89iMuavVRvtbysVom8ERHLPS2noz1H8ly9
                      eTO7PXlEiT1M+d48MMK5O49+jj3PRYI9QMBxvIbPk713rC69orOjvXBWTDzMqAC9SReSPfAfZzwA
                      +uM52ggpPf+bwr3i2S097qVMPaDXBr20d9E8QBI2uzK9Yj1dQrS9UvYCPbhDzDxyKaK9pJAUvXow
                      VD2QpyA8AI4hvDhNv72YbJk8WE/+vJi+FzwdNZO919B4vdD9w7uAAmm6sohGPShuMDxf8bs9K6/F
                      PR36ab3kP9w8YzuqPRqWXT2eP0Y92yGoPSkLmz0dAz29RgR2Pa09rb2oLnQ8gMivvLLGJT3cv4q9
                      wFHIvYwo2LxFt5697UGHvQhVyLwHdBy9wIRvvYxyoTzXp3i9bJ7lvEpHrb3hlIY9qDDkvMjVljx1
                      OLO9BNkAvUYYBT3UFe284qkePfiIh7yCZBY90L5SPCzKu7yWCjo9h0vHPajKTbxmqio9kbGJPWPg
                      qz1xdpc9tD6WvFhnqDzgJaU8IPRUvczs7jw5/p89UK+TuycgHr1RZaI9TJHKPHCYHjzQPZ69Ie2H
                      PaKMsL13rSC9gGEHPExEu7zoIJk89F/IvFIthL3m4RQ9xlgqPYa6fD1dWpM909mUPcBBybw0VYs8
                      gPK3O0CkTjtyUSQ9Q1KZvTUTzD1I9MW8zapWvbUqnT2QTLO9QJE5PNblfj3KNDk9AH/bvHcbyz3S
                      Xho9UHSQvQrBoL16pn699O3fvLtHkr1zD749WLouvD1/a73w+VC98O5QPHyBDb2AfCc8TpaGvfst
                      xL1gOEK7OuZpvdvqnT1aEiK9WtEnvZLsfz3op6W9hhY+PfzS0DwGoWs94C8ovXhaojzw41E8fI+I
                      vUAqJLySsyU9wQG6PXn2nT1YR6C8GWSRPVZyWz2FnJE9NIqrPGnrnj10nco8zAyGPAxCqzxWXQm9
                      n/iRPVJnxr2YEiu88BNFPBCMwr3uNWU9MEgTvXrdbr0iOnQ9116sPSOaIb2Lo569N2Bjvdh0fTxU
                      a/Y8i0LIPRp7Cj3AyD+7qKRRPKewjT1vKr09qCmePNBhSjwV9YE903Q2vYyz3jzzRCu9YLs9O4Di
                      nLsae3a9UGf4uz5Caz3R8as9IH6uPFPQb71zA4M9QF43O4KUuL3cwM48mKvEvfBalb0EXxm9qqgX
                      vUDXxjzDr8O9x0DBvWB6Qjv0INI8sjFIPWhDQDyqpV49/fzHvdP5Or2dcrc9zH/HPEv4tr0HiWa9
                      Wii6vRJ4Rj0QaD88pghrPTTsvzz4d8G9Ird4PXIWYT34Sei890MhvRhkMDyElIS90ubJvbFYyT16
                      Kbm90CAuvCBr3rstoqu9U1qivVKPJj1KylC9OA/svN2wiD0meyw9KhOCvT6jHz3A63E8gOIFuh60
                      VT3oBU48uAiOvUmFsT1R3Jk9ebGcPalSvD2knNI8Ms6DvfyTzjxiUjk90IFrvfAof7wy+1w9Ou6N
                      vQ0fxr0aDB49sDcKvbNMxb1+T1o984d0vYCnIjwqSUW9DRxQvWCljb2gcou8T0HDvYPjrr1Crlo9
                      LRAcvcLIgL1kN9I8LafLPeOBJr2MkJ48YgORvWeOwD0Q7Tu8YIa2vdLOqb1qYSg9RkgYvdCRArx/
                      M4096DGjPOB8Yr0yuzg9Cg4BvWdIZb1LaYk91liYvXWQuD0A8b48tX68vfNZRb0q6K696C+bvGgO
                      Qby1mYA94NGEvfCFOr3107u92JKqPMiXtDxI+cK82tuevUcOY72Kvim9oKmBvEAl5DocRN48alRm
                      vX4YYj0Asz28+0TLvQFYgj00bQK9DOK7PAwooTyXB3298oVIPajx+bxGh4S9h949vSmlqD2xjI09
                      6+i7vaivqDyRW8A9ZFDPPLf/Vb0oAHE8Fp9wPdAt3rtXxqw9Q/97vVgSArxrbra9eDfnvKPPhT2z
                      8LO9+USzPbaSED2ses28yMbMvFfYjj2tHm69/Z1rvZA7jL1/hao91ASCvNeOvj1NVoI9xNfsPGjs
                      xjzAdhO74R2MPa0wtj2o4yu8zZ3GPaIvp72Qr3E8SfS7PSPDhT0ALZw7wdK7PUyzhLwIXKq88io4
                      PSAxpr2wk0u9UvWrvYkWmz0WFQW9JjSevd82ij1sTQO9I+uPPQDux7tA0wq8ZWOTPbLePT1dZco9
                      wKn0vLIvJz07fqe9RTCnPRAnRr2Ylb086GtgPNIeYD1gr/m7DPmMvKwP/rwPUqw97pKnvUK1wb3R
                      MpY9MLomvToOYz1Q8o69jVO1PaLwYz3TGaS9ARmKPWxWjLyaOzk94yvEPevPwb0ooqC8CXKGPQD3
                      vDxL5bG9xIH+PAg/n71wlki9wKwTPELKGz30wrm8QPcauyx5rLzo87S8LK4AvVw96zzfs6g9Yl6u
                      vXjOp71no5w95bfBPRgSs71NeKs94VGzPSEnjT2JT5s9YGidu1BgeTyYTXk82KIGvIaZWz0/E8A9
                      yd/LPfdMJb0bxKE9wPsJvSfHLL1mMRg9AMSsu68LnT1kHP481gaEveDD5zswoyq9Jy54varCWj2a
                      qGW9noYyPVDTELy0EO68HcmWvTwy2TxYn3y8ErMOPaKyOT14G4q9hhIwPQ1VrT3tBy29WkEtPQAk
                      cboA8t+84yUcvYWWs73ZCLg98ytkvee7jz15MME9sGuoO/D/bLxDd8C9t883veidfrwAOWs7cz6s
                      PdBfhTu46ay8bGMGvcCA4joaxVG9YfmuPd0xYL1tCGi9IyvHPWskx70XGrK9lUSzPUMnYr3aqR29
                      Dnc6PVBsEb0luKw92BC0vOhJzDzYH3+8fYjKPbd/eb2dElO9YJC7u3XPjT3EXec8JaDKPT0zUL2g
                      wXG7ueG5PSEcoz0sLa88Ccm+PTJRZD2m/Bk9wAh9O7R8wrzMnLM8wLWpPIP5X70AA8e8sjhXPblm
                      hD2YzGO84ytNvRDen73UZgy9Pc0hvTCCTDx0g8E88oh7PTnQwD0r2Mu9Q+QyvTWbvz2k1PA8YjGG
                      vaTC5TzGAQm9F0m8ParAcb0w1JW9t28ovfeDZL2DzVO9gmpvPVSTrLyJeIs9yAKlPNPkJ72oyCQ8
                      gCbtulC6LbzNxKu9ehaLvb7KHz2Mo928WptZPat0tb1i9ri9MPsjvVlvkj06zLS9MiJCPTAciDsg
                      PsI82j8BPQBgXDegbio7QDYWu+DrmTva9Ww9EA26vUCxuLrjV2e9lMf/vHXtqL3nN7w9QB99vdS8
                      37wPD8w9N+DFPcnikD0qhlA9rPXEPEqADz2vkL29MMfOOwyXqrz47sW9jUJFvRavAr2jyKg9RoQr
                      PS71Ej1AQ8Q8rr+FvfCHFL28Uoa9sxdlvWCwtzsMyec88yWQvQwt+bxQ+529yAWYvDJ7jL0XAKU9
                      DeRZvVoCS73m91A9WIkmvJh0ur1NxbK9+faWPTBdRL1gRpu8EX+EPaDHwb1qqGg9CiMgPUM7ML3V
                      7729CNWkPC8Ehj3UMuI8VYONvQAEATm3mie9QUS9PThz2bwU86O8cBsKPDBQUDyK22g98ZyXPewX
                      Dr38SYi9KI5vPJCPwr0AtGs7E7SRvcANgL0NH529VCryPFGAjD1lVK69MMt5vAn9vD0NR7s9cQCp
                      PdE8uj0Du6w9Bj2ZvaCyUb2wuFg8GI4FvADYNjpZGMs9Q7LHvdZijr2FIr095p0VvUDz0DqA0/U7
                      TuZJPQ4Aez3GcGw92PU9PBiZdjzbIrI97B6LvXHqiT0ANLg7sGApPFDHw7tABIq8pW2Mvc5tmL21
                      mZu9cmRAPSI8TT2DjK49KGXDPId2uL1e+Ek9sND9O191rz2Ot5q9oHYQO3RmujwNcx29aBhmPNRA
                      +jxirFM95XuLPXChIbya5kc9qjaMvdi4z7yYxVY8rwOxPWCwFDtw9RE8AHOwPB0iW73SWjg9wITG
                      PET/3Tw0Ar88ANRXuagyBzzB7MY9P8TEPfC1S72Iv5K8qEaAvIUPkT0YJy88wAzCujZsDj0wpoW7
                      0BfBu1UhmT1wtLq9TFeEvILJaD1Kwm09XfqcPRf+Pb1K72q9F1p+vb5RAj3AkpQ8vE/pPPrPCz3B
                      5aw92GvKPMwyiLzpu8g92FlOvPKrYz1w6Es8Dw+vPewEFr2/M7q9WHCUvGiaQLyIloC9UkwaPVDF
                      kzuoG3e8ArGUvZHagz0AoXS9YCSvvX5qdz2gHRW7ADODO52dmr1iO3U9mhMQPfI3zL0AfEC6Hixm
                      PSVfoL0016w8sMh7PGrCVj1YKaC8s+GdPQ/3yz1Y6x48cv0WPcxyirz1Fag9KI/FvJpBoL0uWYe9
                      rQHGvTilrr0YZUE8mVqDPcKBGz2yvQ49EWvFPbctSL0ty8Q9Yt6RvYethD27yMM9PVVQvcCy67p3
                      6ke9ZU6SvXSFgryzM2e92DBZPFQnoDyBbbA9zH6wvBEThz18f+M8tZmXvcNFiT3UPIK8I3i9vTZw
                      Ez2wEgG93MOMvSeOYr1FqLO9ruUePRM6j72NaYS96n4+PWxDz7yg0xU7XIrpPPVYlb2wqLu9DP6d
                      vCBNmDu7BMy9Y20ivfQ7wbwoun68N5udPbfuv71qHkQ9Snc/PdjfdrzFuLa9OI23vej+i7xg1mM7
                      TtdvPWBEpbu6kDk93syjvaDg8LsjoYo9gHaUOzoxGb00kcm8GP6jvEZQrL2Yx8O9wcaQPSV9x71U
                      h8S8CL2Nvdkxvz2iNys9oJa/PPpWT70/a4M9DnRtPe5AWj0GZxW9gIiBu+lqnj2ZFoM9yaWFPXTj
                      nTxodim8aIqCPIAUgLtjKpA9RuKnvUAayLwd08Q9IlY+PegxvDwC4FQ9sTyqPWC9ir2jtos9dX7D
                      PSmrrj1QkR48BzKRPXnFkD1PcbG9KDObPEIafT1wDgO9YFE9uwo+RD3wQSO8sCCzO1mQxj2mup29
                      i4WzvUeNxr1NhKw9bIaYPIZsDz1Quu+7K0u7PcjNzLw3z6U9+5a+Paekfr1YtXY8QHwnOwgo6Lzt
                      AIy9hDeIvfQC2bytULc9KNFKvPA/QzxgVZq9Ztx6Pc3wP72AIsw6QBdIPAzNvjzIFZS8h/RovTC3
                      GLwEOt08Vj4ePUVDj70JLI89kY+iPXTmobyg0SC98AElvNjJXryAwmI8nsqlvV71KT2wnzW9rUGE
                      PVJLxb2NI4e9rnJ9PfqpHL1w6129iYTCPW0PtL0UfpM8cOxGve7ZbD0ObiE9QPAhu5vvlb34f7A8
                      +Bn6vPbOQj2eORo9wPKHOmNLxb3ztG296+mAPbS2+rwSpGM9krUhPUANJLxXcUC9MHd8vfjdjzzA
                      0Zk8/huDvUw19zw1EMA98klUPcOJGr1T8YU9tP+DvFjlSLxXX549rGmZvKQI3zxLRIk9RxChPejA
                      BTxGQDo9SxPCvWqlgb2L0sk9TJgOvfFetj0oitO8gP/YvGCkEjuDLbC9ufuPPcBPbrxVb6I9q8iu
                      PTh5qr030cY9HweBPWDlpTtfiK29PTBcvUk0kj1RNMI9+Ha7vJyM7Tw9PT29s6qEPfio8bxJ16g9
                      li5nPSp9y70+g2k9ZNPNPEDxsryxCLs9dNLUPIocUD0mLls9tGKFvb5eCz3lTYc9FyefPWPztb0l
                      P4Q9fJEZvZ/4sT2ZBss9oNGzO5DdNLwYCCs8wO0ZvCBCxLzUu8g8kDQzvCzTFb2eCoW9EoCYvRRF
                      9byh45A9lgRWPYBJhbvbYqw96K+SPOwP9TyRHMI9rNiHvIxWmrwgb/K7nS2RvdQGgrxNoKK944C0
                      vdaWMj0YBa88x7ZLvWZbVD34wKK9gkcuPSiH5rzwW0a8AEtcurGjjD1YtXA86b3CPY2MhT0wGVS8
                      u1W2vT6GBj3KKD+9vHfRPCEytj3+3Ts9jmqivcrDOD17EL49TSUrvQCIa7vMatU8c4qkPapFqr0z
                      d5s9tgmsvWKYaj2gWu47mpZ9PQBMPzvFDcE9/QcmvUBt0rxWnj89I+ukPc6dn70SGRg9zr5rPTRA
                      rLwjF8k9lDLTvCAQcL3ZI7U9UKvOOyTizTwrYYc94/qUvZR1g71w9nq8/Va1vVBgfr1V05S9bQuX
                      PWZleD0wpLS7yZ2MPQS6Fb1vOKM9LIqxvNdAX72Ql3O9rF+EPHP2V71ECM88ouO0vfD2C71d/Ko9
                      Js2PvQCC5rwo4SG8jGrzvAyuj7zIYrG9MKgSvEheobw36La9e3aFPWKbfj17cro9O62vvXfbS70q
                      2iq9ABFHOw8evr1SFgo9DUiIveeKyL2guGY7sNuyu6DPpzzIp+e8WyTMvejLCjx5K709AV2KPVjF
                      +7xrt6s9yF+UPPeEt71AOYy8YLPTOy7cWz3dPym9GC5QPBEtiD2APns89jKfvapirr1ADuW8+Y2m
                      PdHpvj0I2LS8fzSaPTohJT0UN6u8YUuqPdiIkDyGMKu9NRSPPYAmVjxoIp08yf2VPRBELDymniM9
                      pXTHvXZ6kL2X4489LDmhvOIuh72YUbo8TKWIvaCNf71OsEA9yF//vCfKvj0Y/ck8svgbPR1tkj0R
                      AZM946CuvVS72LyK9XY9HUy4vRo1ez1mRx897FiHPKfUcL1iQVo9IxegvRdUjj3mWww9ACLSuYDv
                      07rR/KE9huNfPbhOhLxR7649Q+tYvZiX/7yMRwa9ODmsvRq6B73AZwi8avAjPUIuDD24Ed68F4K9
                      vW//nD1oaGQ8mDk+vNBBezxefzk9QF3uulbkEb3CDCk9WMr4vPYtGL2QWFy90y4xvSByVr2nZ6U9
                      2qp9PSgJm7x6cJi9OCOtvFfQHb22rYS9zB8CvWJHaz2dOoi9YKHTOzdyQL233Ks9GFfKvFprCT32
                      n4a9ba1hvbQlpbw/KIs9AAkivKjuPzzfyKU9/lQePZe5uj3NXpK9piwPPXfnrL3yHYW9KqCjvb41
                      Cz2mFRm9tRiYvWp9vL3LNLU9CgKxvS0yrD0SuDA9wnfBva1XuL3zc549mZS4PbQP9LyoVUo81xOy
                      vSzWh726L4u93qhpPSafbj1qI0u9kD+GvT2stz3IQYO8rsSRvRJmWD0h9KA9FuJXPb4WNj1jdMK9
                      5XTDvc4HVD35/rc9wOkoux9yyj10Qcy8UJwxPKB84bvIWIc84p4UPehMtr15Q549AOy6Ov5wAT3Z
                      TZs9ih5YvdvOob3vyLS9K6KYPUDnSb2Am6I8t0Z9vdO4wj3q5Zu9e6KZPRS48TzQuKG7ciUMPX90
                      oj1KaUG9PmikvYCqHDw60ky9A0OOvZd2NL0LG6e9HdSsvQz94zyN1Is9AAeiO/obDz2aczK9UDTQ
                      u7mnkD1wkHY8AQGcPdeAwT3Cync9OUS5PWiBwbyJBcs9XlkEPTDFTzzg8om96i5bPUDZaLtYUJ28
                      KWSmPQySlTy9QTu9ghhgPYQk+zwwzh69DJS8PBhxj71uFyY9rE2Ivf8MxD2Ku3c9QH4GOxvvlD0w
                      dXw8Ku9GvcAygjrYmoO98aSQPU9BlD2TzCK97z64vcMRij0QMl692DkHvNEegj3a2qS978WYPQ38
                      K73sI6Q82jcdvS63nb32So29GCD6vIDP+zqn8Vu9SSaYPeWgvz1A7Hu79ILyvLOMIr0vQsY9I5+n
                      vVgbdjyF0Z69/0iuvZNUW72IFse90klZPYcvYb0gob88Uc6WPYXBob3DGkq9NISaPKI3Tj0NKa89
                      iTWmPXPdmT34zI88htVTPSaQAD2ZcZU9Cf69PQDbejrnxly9PTpcveCulbyAYgc8gMkuvXcDvz1R
                      Z8k9/0qyPV9ckD3WZ4e9wXa5PatXwL1twpc9vr4wPSpnTj1FnLG9+XSWPVR7+jxgxT27oKmavZSh
                      pjyxlZo9EfK+PW7SBD33rG+9nwq3PciPn7w92Fu9UmoGPT/+xT1Qzzm9xYy4vZo8kb3m7lU97miF
                      vbG9ij16IC69UoG6vbLgCz2SDRI91w1FvV3gQb0eLBA9k6zDvUHegD3ZxpI9MB/Ru6Z7ir0f/bO9
                      5VaQvYDYtjroZpK9KLaRPDBCVTz5Abs96J+9vOJFGT2A58A8qyKmPUBqfTwGeTo97YVvvVBAf73d
                      L8K9YJdIvf04Jr1Ir/a8snobPRJpuL2j13C9ADDgOUCkQjtXooQ9u4SePRI4CT2Y7oe8eoOJveiT
                      iL1QHpi9AH6Bu0zbzjx1Arc9IG0Ivcgji7yP4Ys9Br9pPYkmyz00d8O8muEpvYCs+7rYazU8I//D
                      vWtwoz0Oeau9Tae5PfjRkrxEWhe9OLWYvSqEJr2OcB095Ri3vSDcyDxUnq488oQLPcRB9TxjnSG9
                      Cm9svbAM2rsD1509Zd22vfFFiT3ADei8mdWNPa5EEj2TsME94w62vQAGnb1K4H+9HoyivcR75DyY
                      Plw8o9YxvZBcJ7wYlcG8gN3ou3O9x72CPQM9wA6mOkAQ0LzATQI8cPJ4PB6Km73o/TM8YSi9Paet
                      nj0ANv07wFNIu4CJyztGtgA9AOsKvJSk/zwqv3Q9AFcpvUC3g7pwxCW82k9UvTBYzDuASoo60Yic
                      PaBySrvrY8S9LJ7yPPcNwz1ortm8kIs7PLD4MjxKUFe9aM3mvLIRfz3CO6u9gOmcvD0bnL2uTX89
                      gaDEPQEynD1UAqq8sNl0vJL1ST2S600950WDPaB+jr0VUrW9NFQOvYDJgjq242Y9phwePfb2Oz2z
                      u8g9UGXFveocDL3mWBA94A2wuzjGxrxrSJw9AljCveDR9zsAWl05w4p4velloz05TMA9h+AyvY3x
                      lz1Qo8O7gDOWvVJeEj0Aj7+9KL8ePN/miT0AF8G9rhQOPR5epb3QHoi9cC0VvJz8gL2Yk629W4K7
                      vYiDuzz2TFE9ffiUPSFNoD3bAag9IMWVvAo0ST2AyVK9XxyUPWJ7ir0NT5s9YrA3PVDNp72w/LK9
                      MFFCPLIHIT3796496mCrvdvvnL01RZK9x7fLPdrVST34ub08gZmZPaUjl73khQ29Dh9DPZHVpT0g
                      +Mu9QNE1vB6eTT2gik+7YVOkPSAF9bwwJ8a9MGddvU55az06mgS9ZHALvVc0iz3QIrE7gFtJvFk0
                      xz3wl2w8illOPeYuEL0Ends8gLY6PNDxnb2JR4A9L6SUPRpTeL2ivqq9ZYmivdrRVD0C7mM9+rwa
                      PaCVqjtz2749jt2RvQqxkb3IfYu89YmXPcC0rr1YeIs8mrsGPY4PLD3I5qq8QGK+vAwNgDwOam49
                      ANqCugW/uz0i7pO9vMsTvQc4ur1Nm8i9DfMuvaC8C7viIBw98PIpvAK1XD1eC309jNjavCzUmLz6
                      Iz29DAGsPGK+Pj2j2L49wA5ZPD/whT2Qsi481J/0PNBcv71tdB+9MGbOO2CJTDuhzLo90cGtPcDG
                      hr1Z5rs9oP1vvUzN4ryGUIO9KBsDPJl+wz2v4bk9EJpbvciKqTw2MA69oDK4vFYwjb2YFGa8AJ4h
                      O0BslLwAXHq5TqwHPSBusr0qMm699OujPOVpx70yQKS9LFiJPAaLDL2DdZW9xutvPUeqJr3oFHo8
                      kGp0vD9ux73rBKO9kbLJPb0cgD0iiMG9gI/SvOI3kb25Y6o96Fo3vDMPfr2t1YQ9XUK8vfaYKj1Q
                      y3M8YBfLu0CH3rqqugK9QkqxvVQF57yRgLQ9qEAgPH3mwD2Ofn09PgQ6PSJmeT1gR6W7wPZevDCS
                      /zsOi0U9i6/EvQR35TwNshq9ooYSPVdSrj0ErRa9JmojPZ+mpD2nGH69EOeHvYtdkz1NeUi9skF2
                      PYBDhL0iXaO9+RKHPTDQ47uAnjs6O6Govehwub2sZt08XwSlPWC0Cb1S82M9BjQMvcCxdDvvbpM9
                      jSZFve9MtD1+M0Y9YQ2+PdpIaj2YrIe9jSLKPbDA7DsilCQ9d0EzvRQTuzxnIyK9mvwdPZWlk708
                      Ldg8EZi1PcpcCL0U+fM8n7qIPdgAd7xaBXm9FoF6PdLSJz3wH0M84sk5PVo8cT2gG9C8yAyGvLJa
                      KT1QuKi9LbNDvcACVzw07s48bwyAPX5bCz1HRMU9NDCYPLLJGz3woFm8o6OKPfiIi7x6Sio99aSo
                      PTGyqT3ApVO7kC8kvAo4mL1Le7U9XFINvZwy1DxAZ0G7KjFQvfjtwzxqznK9gSjLPZi2yL1ZaMY9
                      aDctvABGFru9bYa9ya+sPZ5SlL2fysO9B6ejPSZ1TT0Xg0O9woFMPUGyqj3ivRk9ydyMPbpMjb3X
                      /4k9dYWsPfnbkz1B8bk96XHGPQAHGDxgAa29zjUGPeZZET2Yy0C8GAmEvSBDqL3uRpu9wK4euzpF
                      pb3gL8874TusPcCUHDyADvu7SLPnvLKVRj3QLra7KOAGvAZBJD1Kezu9Fv+TvcA+cTxKrj89jKX7
                      PNApljvMANk8htMsPVDZfr0uZ5G9zuI+Pdl2ij3SOgM9zCGRvMAMNTuU7+C8FB4JvXj+x7xsSOK8
                      mpiXvb8JsT27l5C9dJfSvGdqa72b7Z29o5iUPZBmJL2SwVc9gC9/PIr4dj2S9aa9HiJxPdjRObye
                      wWw97UG0vfOmjz2AbIm8sPAlvIT47DyynHA9WIspPKJVIT3wdFW9wOVLOwdKoj3dUcS9WLmkvCKv
                      Tj2gUp+7/VK3PSIbu73oeWK8ympYPfaADz29hau9yQbFPdqjYL3lHoE9rugwPUy8kDxpirI9oIWB
                      O2Bgi7yqfgC9HcVhvdSjF7105dY8ccyiPRpVQ72HmKg9OcaePUV/nj35qco9aJiVvLBWpr06XqC9
                      rs9lPTE+iD1d0sm9QJhDvJ6eLT13nmS9YbSQPTjYm72T8xq9rcx3vdCJj73p2pE9rHGJPEFnxj18
                      bIG96HRDvBRtDb26G7+9IdrCPXphfT3oW6q8YAVKvTIsRz2u0KK9mA22PIjc1LyQzYS9wJ9BO3bp
                      Tz2wag69wA5+PELCBT12zoa9QDA3ve+aoj1gYoe9wkAUPY2Kfb0gXqa8jIvEvC3ky71j0sI900fJ
                      vbHpjD0DOIM94rRYPWLjLD19rK49Ty+fPRl9uD0gnf68F1uiPfonG721mro9mMWfvHk5yD1S1mE9
                      kLlnvEbZHj0zrbU9ACvPu1ACYbyU/oW9B6tLvfmWvD1CsgE9AlbGvSQ6+zwStWY9XUKZPfAKSTzg
                      87Q84nFaPcL4NT1eyFg9XmZFPXiKrL3gHKa9AFdnuwDxiLuMTuS82shLPVKwfz3dMDK9WCMtvHe+
                      lD3Cs1w9wECVPGgMv7zA2JC8dz8hvUoTSj2nByq94hynva6OHz0pRac9ABMDu5UDrL2Eyf48VayN
                      vdIPRj3HT0S9NOyHvFIsZz2dESC9kdSGPYx5ljwk+c48ba2JPSrAZD00joq8UKxAvA0/iL2m5gK9
                      gPmHPLDahjvBEZ09YM03u34Alb1YLvS8xmRHPYpqGz1DioE9CGCqPH+5yT3ivIi9QwSXPeBsvr32
                      iBm9mFYqPEiVprwYR/i8VGDSvNfld71nxLg9W3q4PTBxTTw9Uqc9dtw0PSZjeT2iSz89J5A/va7I
                      YD2afU69jXQ1vVAlqjsqJ6+9OaibPYtAoD2Wg4K9fTeUPZQX1LwP7cc93iMYPdGrqT1j9o89bZU2
                      vbS2kryoQ108gM6oPABe/bpLmZ49ZpwKvYJziL3gGTO9aHbCvVLys72TL6k9jDa2vBGPwj2MRJe8
                      MA05vPqTUb0VXpM9gPPMvP7mRj3zSZ09VUKXvTdJwz1AtS694vtYPSsFrz1uVEs9t7egPVB9ybtT
                      IZi9+XGjPZRt27ztOY69eELIPFCEUjy5bZY9AEktulh1QbxQnBy9ovlDPTxk1jxwwcC90+yfPQNH
                      wb3VoLA9Krd+vZSWDr0XJWC9epctPbSj1Ly+k4O9Jn4+PaD4tLzYeY08HeGMvQOjHr0AHp88ZhuQ
                      vdCBgr2A5tC8SD2qPO2nij2cXd48tWOCPd65Az1xHIk97Kj3vJ8Ftr3Nhbo9WJ0OvGhj/Lw9vzy9
                      6i91vd2mpz3g0Kk8ACECPHiLsTyx4Y09WmArvQXDzD1D8z+9Guc9PXMbrj1HoCa9g+SPvaOybL06
                      0YK9BFrTPErPk70Cqxk9qKmnPEwNsTzg4qo8M7iqvUBDbr2SD8u95cO+PSi6t730NpA8qKNsPIX6
                      wL0AhWu6CggHPeexZ70NZLy9fM+JvT3Qm721Ips9Nv2pvcgXorzj9jS97o8NPdWYrL2Taos9aAS3
                      PHDxML3o1AC8ayXMPWDJcL2mcRM98i9uPQDVgzyG8hk9uP+SvcW9ub0jaD29kHMMvYFiqz2a/aW9
                      0BQRPPCgrb3Gqga9examPRD+QrxAtZK8cfSbPVgnx71NPba9ssAdPaE8hT0Y/BI8eYWfPagnlL0H
                      t8m99QKbvdDmfTzbKbY9TLXrPKhvxrzxAJM9yAWgvJ4OEz0KyWk9yNGfvJAnB7zJwaY9sI8NvFAh
                      ib2sFf+8+vl3PQYDCj2Ru489iGGVvb3+vr3U+IG8GvtSPQBCKjwYlwm84bHHPRTPFL2RX4898Dpi
                      vFoUgL3onKG8PdtEvWZ8VT3v1cQ94EDxu23Udr3OTDQ9gEY2vCofGr32Jm09nfCLvV+drb0abY29
                      wPTPvD/HyD2aj6+9ALMPu/AcN7zSpI69kC0QvUC6abwVLLi9pWiZvfKCcT1qzma9ANCyu8vWiD1I
                      Y4g89txTPdqsgr0zIXi9lBDlPH3zIr0jT1+9VD26POwGhDzArwq7gLhqPLDpqDs3c769NnwUPWLn
                      bz0akoG93batveH1xD3iblI9Zza4vYA1pLzw+H08h3S+vR3cm72FfZS92cGYPe0IsT2RWLw9sidx
                      PfmTpD0wvFi8x3fDPSpbYr23xx69ntxQPerqf72CsFI9VYaPvRbACr18sIi9dP31vCOOpb3qrUs9
                      jiSCvVpGmr0jtMC9EjFkPejXgbw1Qsw9WEGvvKstn73yt1M9g8JfvaDhnTyg8su8FnsXvYZmWj2M
                      L4S9OPfcvEBGNDvIkJk80KrKu9uzij282dI8FB2+PIAcP71B5IM90m12PQAZRzppV6g9ma2dPd5u
                      p70iTmM9uBewvdmbgz0GcE09nUC6PeyMvjyg7Wk7BgSMvcBGHTvAes06DbnHveUylb3eMRU94pR4
                      PSo3Lb2PGqg9OOmzvCJLEz23YJE9eGqlvML5Ej1A4247bp5TPb0bqz1BSag98qFKPR0eX71gFpe8
                      8SaLPXVypT1G5wQ98uxzPbjJp7z6Kxo9wh5APUC/LDzjKz29Q41uvVhwrr2wKjQ8vdaSveNgVr26
                      7XS9jpYiPUr4NT3AX1q72hs8vdZoXz2xBMM9+umEvauwp73gwLq949eiPQoZMr2Rhcs9QHt4PFCu
                      3DswbKO7ASCyPaUftr0xCqQ9V+ZwvQrGmL3agWO9KMwVPACM3bonR2i9t5rAPXTby7xoTLy90nA3
                      PQeJlD11LY+9EkhZPUCoMb1juEC9im1sPRLEUT2KcFS92KGave01p71zzC69t1QwvQ9NwL0QIpq9
                      441nvbDlkLtgMFw7FuIFPSqVJr00Ieq8oM2FOwDAuDawlbW7GauGPeD7rL3KT2c9SbDCPXDkLr2w
                      Bke8SpDLvflKwz0yi5O96eGYPSPVvj0aM3q9oIxoO3cIgT25+aA9mmSOvQrTjr3ZPpM9sYO6PRIv
                      Nj0A8845hcfGPYBxNjz+jxo9dk6TvaD+Jbsqp7W91ztavTJDAz0ApQO8ku5yPWTb6zw9Szq9kj9Y
                      PWDosDxZO4I9sDhbvSPXqb2Au5U7uUWSPVhP0bz4o5C9ipVWPWEvmT3ABJm9p3SRPXAsCL1YTgK8
                      dkECvQCTLzqUQN08KOeYvI3EWr2K9TC99Zi3veokXr3HDVq9MF/fO9COKjxot2k8auErvcyDEL2T
                      15q9vzmsPaCcXr0wXm282iVVPVAUQ7wwQx+8euoUvcIAhL3QIXG8XQ+4vX2ZvL1XWsG9l7lKvchN
                      lr1SwR89iSO5Pb81wb0jK8K9qI/GPPVQr71a2oC9UyqmPUC3y71ACjc7CoXGvQqNAz2/o6U9W3PB
                      vSAGOb1t1aU9QsIlPdkkuj3onFA8Qq86PTrOnL0I76a8H3SJPWaqD73jjrQ9PNWDvXIOYD2JNaY9
                      C5ePPSDQYr0K62w9LMuIPB+4tT1+iz09CVaIPaq8Dz3TrXG9rm4FPUmtkz3obwo8hJPSPFcCTL2h
                      kpw9ACYHu2PQor3+vDI9mid0vR4+Oz0eKko9oID3uzfupD2q1Vk9z5G5PcHBzD3xEaQ9EB6SvRZf
                      eT02L5C9wseFvVA8IDyAfKW7neeSvWa1Bb0Cm289WF2bPBga97w+7qG9SNSdvLYLIj2AD4S6lxaV
                      PfKBED0Q6kc85S2XvQGFwz3IQfS86uLFvbG2pT35gYw96vgxvWRCzzzCNXg9mqQbPWDnw71dUrm9
                      Z0KAPcD4I7t9zb29rZImvQCyljq5WcU9GVC2PVJgcj0AbKS8pEYEvckriD2Wl0Q9AHgFOo3CP71C
                      gSA90HNcPC0Hvb3YEng8NH/vvAraKL2yzBU9vm6nvYhLy71NVsU98AQRPO3dfr1IRIW9WNSPvaAP
                      HLvMoty82C20vFTIkzzfypk9ZpRGPXOfVr16Yhm9qGyOvao1P72A0f07KHg3vDPKhz3/3J89xjhk
                      PWQr9zxldZU9Z6gavTqsAb1tZ1G9IOS1OwkFtT3QGSG9yFKzvEBhlrqSmz49AFUHOr0owj01+Lk9
                      hzIjvQO1mb0h3qE9NPSVvEDk9bzX5Mq9MKp2vKMPOL1Fs5O9kKw7vc1Km70tm5I9d6mOPSgebjy4
                      kY88MA0WvafJyz1yAjw9AACINTprF73CiEo90AVEvFjJv73TmZ+9qN2evUPld71abAW917eXPbGN
                      xj3Qhjc8VcPEvTcgyL1pjKA9uKirPGqyRD3KHp+9DJ2ZvE8euL3CBjI9nWSFPVfVWL0APK27SAvH
                      vBdXM71o/Y88AgQlPbBEX70Aa2i9DGXpPE4xjb2AS7e98JYUPFa6g71R78Q9AG15vE4OTj1QioQ7
                      OWmvPXDxGbywMuQ7RsxrPbBRgjumUwc9A82sPSoLRL0CcDw9lX2zvYNEq72dd5Q9qHo9PL1wg70d
                      HJi9OuITPRgdALzYKcu9GKvuvBlbkj1Xs3C9khtfPZJmMD0Uh8+8Qg9xPaI+PD3o6H482qEXvXlR
                      hj0IE4S8oUefPWi2mLxMVt48SllwPUiCnTzFPYS93RKRvbSjiDwtWXa9yj4ePdhxv73ChWM9oNfi
                      O2KSNz0x2oM9jI7/vLKKPT0me6a9SLenvK4+Sj1S9WY9vfuPvVGvjj1xpaw9AKqwvfXmuL3H7T+9
                      ZWOaPZfKeL2JfZU9YlM3PQwtk7wGlQa9DhEKPeDzv73qCji9yJ2UvIv7oT1D7h+9KEpHPLAwwr02
                      DTc9FGqzPFYweT1NJ5290AUUPFKekb3ptok9TwKbPWURrj226Q092OVwvCqdVT3/6oI9gHm9u8Xd
                      mz1bRJu9Ru6gvdcucr3Quou7uUSXPSxM4rya2V49tGbmPHK/YT1g1QW9YZ3JPTBOqb3o/lE828yM
                      PVhWGDzbdsm9WG0NPPoIaT3ayKe9hL74PAGSuj2oo8i9artmvQ/Ct73aYae9VP2dvGKPWD1kH/g8
                      U8S0vVqIvr1QejW8vX52vZ3viL1DBnO96FS0POT8iL1Ehf48ACRCO53zjb3C78C9SjrCvbmNwz2A
                      WZ27MQeoPZKfdT2A1Iy8WFnBvMGRpj0SBI+9QA2RvWrZLT0rpcQ92AHDvXnhyz0N2ZM9BFHvPPiM
                      mzwu2aq9Opk9PXfzrT0oMa+8NKjMPHCobL2CK0I9UtskPfcInD1AMWE7k9xWvdChH72ihWg9G76c
                      PfYfVj3WuB09OjV4ve5HJj0wuda73aWaPc28Gb24Rcm8QBoMu9ghqb1CKyw90H25vep7Qb22aQQ9
                      +iY1PSC/Qr0AzpG9PwGrPc2/gb3EvRe9fpw6Per4Jb2ATbG9KOuovT/wwz0rk5q9vS6gPaCsQTv9
                      +DG9QAHsOnfoGr0zcKe9YpovPTiNlLyWyGQ9Ajd1PYRf7TyzkH69CiYRvbyJ8Tycsuk8aC8tvBgi
                      HDz9fh29yvdCPdCFQ7ywk5e7piOAvSbWDD1PBp49RRabvfM9vb1/a4Q9mIdBPHilwr0oY0i8d2yA
                      PZD8UjxYmBC8v7G5PX/Jkz2IDp28PwvLvcSF9DyWYT49gEjfO6llxj3b9Jo9MA6wO5PvNr2CG6u9
                      DW6XvbMfpr1neq+951qlPejhTLz09dy8WEMEvLczqT2Ks669jHj7PJ34s73OVRg9o0KuvaCJfb3t
                      RSG96glgvZJ/Zz3ifgI9/YqKPfo3F70ID5C8uoJLPUBeCTsJA6E9M5invRghYDzQsC68D6qOPSBX
                      2rtSK1A9KImvvFCGF7wA3Zm9QASxvSUMnb3bIq+9rMqZPAKsnr3wTkG8fJD6PAixgLyXorA9Fx7M
                      PYvGk72RwYM9Gs9wvYHjgj2bW4s9cMU8vF3zmj1uvJW9mLqmvCITBj2gTIk82au5PX0we73hubo9
                      6OSdvOihWrxYwqA8ixmwPVCeRr1odj68qjKmvRCcYL3iuCo9EDuHvQi9jjww80i9WrR7PTJ/WT20
                      /Ya92XOOPRSXAr15rYE9+t3EvdKel71lAoE9TNmbPAAQ/LmlWYC9J5xTvX71Vj3Ow3A9pk2mvaSH
                      0zwHSLW9+FSbvHRo7DwoPQs8MJc1vYDspbwvw5c9MBXJO5jCHLwMoo684x9avbOJR70AARu7s66u
                      PQAWo70AiRK9U+80vfALAL2seee8wG8HvOxflLzu5Ye9YhlTPW7SPT2q2TK9zq5oPSoECT0hrYs9
                      AKjsO+rvi73kfRi92L4gPMhIjjztvYO9wK8DPPPtNr3aqFw9ordvPZpxBb0RAqU9Faa5vVD8xbug
                      wcm7+Mi6vHGHsj2OcmI9HdcwvdjES7xQ+7q9/gZ8PRRXrDz2TiE9o8ONPevCmb0qJBm9sLvTu5Rr
                      7DwAvme8Q2HCPWWhyD0hdqY9ULGAO7AfYzxam1u9EESwvRiwizy3aGy9jG7CPCE1vD0li7e9DWNR
                      veArxjtmfgc9IFngOyyRE72gT7e8DFGovLgFyby0Xp28LL+2PID8+zpoVnK8YH+WOwJ0tL3TNpG9
                      7Fa7POzVyrwd4bs9Ih8yPYLKUz1QpLO9Y7dJvZbSE71lVrC9f0a8PbDWvbuSBSs9sJ11PAyitTxw
                      twa9cAZdvbvWj70ABUG6OeKUPdhKcTwRcqk9smcePcDLFLwAZRC8E1SHPSExwT3nPHO9gIWvvV3I
                      lb3LmbU9lYiCvXguvTyMLO68CHiNvVLmTz2we+O7QHquvMasbT3FHKo9cvR6PUDdejs3G269T5at
                      vdgOp7xXaCS9sgQoPeCvnzwwEyc8IFfcO5TSqTxOS429zdpnvVDcMbygMZu7WRrDPZe/vD0CyzE9
                      izHGvbH/yT1A8Dw7XBEWvTuVpb0Kay09SM21vL2ajT2nGzm936a+vTv4pT1Q8UI8nQ1XvcursD2b
                      0sq9Va2jPex8hr1skOs8AC3rufQQ5DyUjYO89TC2vXn3xD1t0cM9S6vJPVKwKz3oq3q86wO2vV0x
                      xD3uVQU9ExucPZpFVb26zy+9cUe3PQczK70eSBE9sDAkvYKfqL1op/W8OG6QPDc6sD1AFZa6g3iS
                      vQbjEj2vD8k9wT2YPWielrxM1qW8CV3MPfB1o72QaFM86vFmvWcnX72UCtQ8wGKBvHlTij3uSHs9
                      gtxCPXZDbj03vX+9InVSPTEwkz2L96q9OuZhvTQDi7zavAU9SGKWPHh5yzxEdtc8A2SwvaNwQ720
                      Bq48OlgLPdnqyD3ArmC9LUMpvclZnz2rjqI98K8qPKX6nL1MTrk8jIcMvQDTTzoZgZE9ACAVuup+
                      xL1gMPa8WKS7vN1ynD2rjLW9YAyzPKCVKjsThlW9UENxvfBSKb0gd1C9NgGivRoYjb3PgbG9ACOZ
                      vEFKgT1TJKS9HXkdvTUQvD1BnIo9sMUVPDCLNb1pM5w91oQHveBNb70C2109rHLrPIBlVjoHbsE9
                      hT3KvYPDXL2SlFk9EmHKvXLAkb0Htog9Z+VPvUD11bw91K29AMkZvfq4Jj3w8cW9+RK0PavirL0A
                      GcA7MiTJvew6+rxMygS9z7LJvSw0xbxPJ4s9ESeFPYANiDySiUA9obPDPXfzSr1MtKk8MWKOPSkL
                      uj0wBDS9CayxPcEgiD19SLM99kUjPWCwg7xgW9s7eJrMvOMnjT1Ns4u9+p1+PVqASb0DnpM9I6dG
                      vUoHCj3MbN08HqwkPde0sL3CgEU9Ld4/vTjEo70wwh694YWZPcDlILzpmog9VO/CvABjB7xA1QW7
                      IwLLvfFRlz3Q/pS7kCQMPI2KYL3NCzy98tMfPaWimj2NVJo9x/6PPUfHRr2aSX89AHbOumjcOrwi
                      7lg9iwLEvWuOqz2A1l86Wv2tvSxFqDxqTTc9QwNyvSlepj3KxRC9QPSOvKQ06jzxoL09UoJ4PQA1
                      UTwX1ii9EIwkvMKtOz2d/TK9GKwdPO6wGD3x4KU9AAKqOW1mtb1o3yC817WCPQBlPzzQ9Iq9HxXI
                      PWwZ2LwAIUQ8JdiOPZBObjzi0Gs9zMSTvDbYVT2yWzg9sGe8u8p/YL3ijmg9pVWsPXh5uLxn9DS9
                      6uBGvew5+rwHo4Y9MGb1u2fHhT11+Ii9bLbFvCEdiD0iBU89Nu4qPWrly73xioA9GLOGPACWCLvM
                      uey8fSN3vY7cNj0Ao7s8eaaUPQQgAr0bVri9EooVPV6UaT3NzU+9Et4IPdYnfD1RZbM9lbKbPSkd
                      yz1w0QU8jHYBvQuPpr1yZCY9WFIzvGhtQbxAAbG6aLHDvFlIxD3Q4M87evRpvcW+tL0BdbA9wFyL
                      uhIffD1sWPo8kGtFPLeew732hCU9okgrPTBU/jsJ/Mg9AD/CvYd3Yr0COEo9rT3DvVIWiL1qfm29
                      MtJsPcDwFb1/eYk9wPQJvA7Zob27msw9p5ppvTVeuD3gEs27yDyLvUuPrz2vA4c9GP1NPIqqFr10
                      adC8yUy9PfBFSzwqxCu9Ms8RPU0vk702LJq9UDocvdiKTTw6JrG9bE3vvLBBxb0oNaO9rFcRvbDm
                      eTxoRhS8+J6FvIRm/jyqgEK9dVO5vWppkL22CDM9VE6GvGfkNr3pNMA9EeC2PTJNHD0ak4S927iS
                      Pf7Bm70jyzu9UMQdPFLINj1d+bE9h5M9vSIQLz1b6o49cltgPb69ej2HoY09SaylPcLfaD0i5lo9
                      BSeTPfqhtL2hk4o9mt+CvT4dXT0PrMI9ZsUgPQCw97xiGHA9GtMqPeiq8bwCSlI9Nzm6vWhDbzxS
                      kKe99anFPee3IL04fIm97niYvbmgjD2lPIw90FtdvEcoLr1onFe8zAe3PO2LyT1ampS9rOaJvGiR
                      grzYkJI8IwggvWrWwb1oiay8mHCivX1Rpr0ivnI9oDBJu/4JGD1JtYs9gEsfvXPSyz0CSVk9vwCS
                      PVZRcD0AoPo6wgotPQRFC72K8Re9/fuBvdCRyjsNLjq98F44PJQalzz6YUO9/tyJvWwmA70w7FO8
                      0vtQPYr1B71Qg8I70EY8vfz40TyQdpG946k6vUuqsD1mLiI9qqimvQLnUj3jHos9IQbGPaL8QT1w
                      cpy9SkofPXO8ZL1Gmgu9Hu0NPQdWij14g608rbxCvc8lrz3VkMw99C+lPJsWzD0gjrO9t/6+PQJ1
                      nb1zbLg9ox2rPXd0Tr0K/xy9EJ2/vYcejT0igTM9AoCivVAwgzuaR7O9Tc+avbJiKD0jkC29cnq8
                      vbBg9LtmTEQ9LZ5ovRxE6jzZhLI9V8h/vQKfUT236ci90Km5vZJPAz1fub09p+g4vaAHyDvGG0Y9
                      EqIWPYC8nrrQO/y7ekdmPQ4sIj339B+9AO+1O54uej03/mq92LNAvHNroL0wfMa7tBrAPFREqDwb
                      fsK9CJS4vQx6iL2oXIS8gKWTvBN5pT2o2n+8ZkEAvbpoMD2CNFo9I24zvZSxvjyA6Li73aOuPYcO
                      oD1sxv+8Q4aSvSIkPj2Opxc9ogh3PXLObD3WTpC9BW2ZPdWyt70Yopo8VSShPb7KdD2fvMm98BI3
                      vQAI0rkNUWy9Uxx4vcxw1jyzsZC9BZOBPWLeUj1WFws9gOdtPP02mz336U+92BzKPBwc3zz3xSa9
                      cplZPQTL8TzlV8a9jtI9PdP6p71AJwC9DJ6fvAjMv7xodZu9zX6NvRAXa70AtV46StBTvcTB4jzg
                      GYK7sM1SvFrMHb0nEDS9J+ofvZhUt7weAZW9yjdMvcu3gz3wQX48lMa/PFJXcT09VJu9azyePb3D
                      ij2W3wI9ABW8vUABEjuZEK89ANrpucyrrrzKMb29tOTnPNJsFT2wNae9mGgYPICxU73CJDg9OQfF
                      PfwD6TwZX7w9iglDvZmilT2M+4M8blo1PaBMc73HryG9rO6FvCCYibtNqLs9CCjIvdFrzD3RGr89
                      UrtnPX/cnD3TY5+9nkxcPSjbALwAzIQ8YKziO43Qsr0wi6m9ciIpPdBDh7tbe4s9hWuwPdASFDzG
                      RlE9cohHPcWQhD1b6549T1OqPVAMkrsFfpq9tEIAvb/Clj2rjsu9arwrPWx14zyap249cEtsvVoC
                      xb3SiYC95iR8PTLpCz2ofFW8QaGwPT6MlL2aa1g9uDHHvfdIrb0QK0k8YBXBvbZeET2KL8a9niBF
                      PZN5qL0z57A9SljFvVdLw72gTKU7Gt1AvdqQMz1g54I8tB6dPA/nvL3FcLm9TS+2vVIgSj3c/O48
                      QoJqPRK2DD3XPbA9QCCivJdxu730mIU8RqOdvYA9lLpokEk8AL7zOnNtq70S0QQ9ClwsvZSfprxD
                      oow9RbXMvcIqp70nrWe9z2uiPQDgyL3qNaq9IGCIu5RPDL1DZ4w9hiZBPRLQXT2oyW080W6JPTVy
                      xT2MQZi86pBuvVwLB70QTTK9fdFbvQRPGL1A+sG8IaGwPQCPyb0dKB+9IAL3u23Qqz1sE4Y8KA21
                      PFf0cL2aHx69mGGHvSq+UD0N44U9x2t0vfU1n708MuQ82bySPZ7Qmb3Xd5s9jOTjPI3Zoz19lo29
                      B4N0vUmqkD1fJos9gNH5u2nmyT22zqO9kG07PHZMND1/Mbm9oj6DvYBF57qnFjK9SqNVPa+tjT1U
                      BYg8ffI5vehrvrwDI5+9A9B1va3hnz0Uu8K8NCWMvKrAt719C2K9LqNZPegYyL22XC09LjR3PSB4
                      nb3wjX28GPnzvJOEUL2fxMq9rz/FvZt7lb2AunO6XbW7vcCsMLscGes82pwVPXuytz3wfyi9IDal
                      vcnysj1O0Ho9vLyCvaC47DvFG509bOiJPIpODr2SRTY9I/yOPdP4rr0ji5K9yto1PcwGrDy5IoY9
                      zBHnPG4jdz0bJYc95rAtPeYGNz2iRSo9M2qNPXdJlz0544M92mQKPcy0rzyQ9Fw8KKylvVnwij0n
                      5V+904FHvZi8BDz3p7E9X0HMvUrQdj1HLKE9rJ6JvYpCLz3Y1oG8eWaiPRM/ZL0tvZk9Xfu3vbyV
                      6jzgn/68oP7du2MNab3alkG95zyuvUAnfbxhd5U9ruaOvWM4qT1VoaC9NV6kPcih3ry7QK29tvBS
                      PQA7lbxHVWK9lO2HPJMakz3CM6G9HQFyvbiDobxg9E87N2DKPYmziT10sqa84B69O9ptDD0AY3c7
                      ICN+vaDh8jua9pi9FZ6YPVrmPb1AlWG9cN9xvGRJ/zzmZ3A9cAsqvCCQhbuQ+Q+8l9ScPaOrvr24
                      2Lg8TbmAvTr5Q70I0bu9ogBhPf6Dkb07R8M9+c6yPcNlo73sXJE8NvNSPTCChjv7x7k9cxfHvYZy
                      Aj1gC7A7gqB5PXpyAb1gtUg781PHPX+zwj0lFbK9jHOaPHg6wDyVMpU98K1lPNfQab1GpFs9t0R7
                      vY1dfb0IRsa8rfg9vW2Zj72UC+y8kQOXPRd8O71prMw9AKoPO6O7sL1jozS9YL3TO+o8D72+Zwg9
                      UR+YPfpeOL0kg9I80DFMvBVuqL3VnJo9k+xxvRRm/zwB0Zc9CsBQvV2Omj2dWiy9vlBwPZRcsbwK
                      EVw9YIZQuwr3IT3jjKy9XJXQPKgtVbxfzYE9QEmBOvAkPbyYWP68ri+hvdDTsb3q0ji9AAZ/uTNi
                      dL0oYQ08CWaZPfs7u716qXi9QIaGPNCIZrz7D6O9zUUjvfmKiD0IWJq9qIa7veO3lz1QZLi7Ge+N
                      PSMVkb2yUwQ9DoArPfAcPLzt5Lu9DBO6PGVHnr2zVSW9pO4NvXrdbb1Db6k9+JSevEB1nr04pcK9
                      me+gPf8Nuz2Ice+8cJ60vTHapD2KHoS9QBhJu7f8sz0iGhM9WNLyvOPEnz01Wca9V4NnvbRWmTyD
                      xx29yFWmvGCyBjtrMK29QnVCPdBlB7wyCWo9B9govepCyb1we308DZukvUAKgr2sNcU8qUDBParE
                      Cz0wiAq8GEsQvNpbMr0LGpu9umcaPS2+c72t/7q9fRiAvVBDoLtw4WM8UJN1vShf+bwaJT+9KOMc
                      PPDHfDxUCsS8lRWuvQiplrxevGY9qAOIvWK4Lz2IvsO9eAGCPPZglr3Yckq85gUNvfT74TxawmI9
                      Yw2TPQk/pj3s2by8EEhvvCjuGrw1KYm95QmZvdhFdDyA9Y88AGyXux4HET0e1BQ9jrCfvf1IRb1w
                      exw8bgSivYPzqj0xV7o92f/IPZc6b71zfZW9sHrCO22npT3KyQw9ioY9vY8Dlj1n4I090m5pPdCF
                      8bu2ZJu9VhwtPS29sr2w+PK7KF7HvaiCJrxiCk49eJmQvHuwpT2urDc9lJKSPHJEez2npse9KpPK
                      vd86yL3agqK9k3Y+vU6Hlb3t1jy9zRwivddumz0O5CI96PcEPPVOhL2WImc9m2zLvSt1tz0h2549
                      dUi/vaUxnD2DNro9jBDrPOa+DL3YBY69lrRkPTCC9LtqrxC9PvklPePMKL0tFJQ94Rm0PQ+Ihj0r
                      Gpq90n80PUD7Y7vDfJa9x4jDvQB/ZLzAhgc8oP22PBARLbxBTsU9tOS9PNzq0DwAb2G8kvoyPXBU
                      eLw8KBC9QIwmvUt3lT16Vzq9qLPhvMoCfT1U4py8ogoAPZ+rsb3GklU9ixC7vXrsI72V/aI9QAOl
                      uofLqj3Gfw69QeqBPU3dx70hKMU9+G6DPPAeTrxdgVa9UoZxPWRO+DzA97q9IEJcvd/Lnj03dEy9
                      2i6lvdgRmjzA1K28/KjzPBCcib37xrQ9DMOVvNKlVz2yXKO902hMvQzY2zz8Sw+9JylvvZESxj0E
                      KO48QGKAvPozhr1Az7K9yO/1vMONqr0AGWY7LnicvZH4xD2xDq09oG9Pu4zhmrzdXZW9CJC8vPrY
                      tb1AQVy9QbejPWAmLLvTcZ09bTdKvTC1xDtm6am9sDuyO6Sz8jz3Qm+9kONQvHiR2Lxuq5O9Lbyy
                      PbPOw730MZY8YZOqPbfwSr3Yncs8+lhbvSgZCbzqx6q9IXu2PWG8gz1w51O92dSlPQqVnb23Gag9
                      QCswuyBYhbxtdMY9HnYqPQy9wjzf+cM9MIF+vWAryDwAx8I7PAcEvcUfvj3+p4u9kDc6vQOqR727
                      YJa9wAUUO0CXNzwepAo9UVzGPVZdXj2QSlO9fT+2PezLgr0MZOU8LpaZvXDXR7yiQTM9TaxxvXbD
                      Sj2aoBo9QK5Iu6CHWTvg8Ma8YYiXPYGPvD0wTDs8LvKTvbPojr0bo7k98XegPd2Uqj0MC5Y8ZET9
                      PCf4I709GcY90Pf7O3qlUD3qzXk9pXe2vbAU9LsvZpQ9oIa7u5K9UD3LtZM9ANWuvQoxcb3w0YW9
                      4I3Wu4BWrztuIVM9ubS3PbBCMLzkSBm9Gv63vcIEdj125zU9A2jFvaKQOz0uo2U9jXnAPYq5Gb3L
                      vcy9kE9Zva1agL3zVMU9AL3HuQ/Vsr0fgpI9AAiFOUBArDzCGVQ9hFQSvR5DMj0w4Hq8nV21PSqH
                      t70ivhw9KFgFPMcpYr1LdpK9ULqXvdsxnj14O8G87eqhPRICYz0jrpq9tNiKvDiIjDyDdIQ92CX9
                      vBj2jTwFG7Y9A7ZpvfYLcT2SJ2I9MElDvFewgz14GsS8ujIyPSjxh7zqGxw9MMQ+vZL2PT2ARkm8
                      rAoLvRBkC70vPa09zKesvPc9Vb3SI2c9kGIOvLxe4jwJiLw9cPImvYH0gz2TRMM9MOmQOwtTo730
                      Aq+8YNMWvYC1f7qC9SI9OjXFvR0gbL2nzrg9VZqlPb1wnr0wwNM7rNebPIwGpLxi51c9M7KhvfXD
                      iD3geMu9faJ7vWg2aDxoh228avcevbdcqD1luII9uqMgPZzc5jygOQ67gOWKumfNar3wfMK9EnYb
                      PQDOvzkOTTQ97B6IPHIlPT0ACTq6wFCeOn/uur2RI4A9x70yvWl4uD0eNlY9F2ZNvTf6qT2zQsG9
                      D6ivvWl7wz1zFaY9upNNvfKOMT1zjbM9IIT3vAA6u7yNdT+9ZFH9PNh0mzwiWTM9Uv1fPVJzy71Q
                      Wrq9AGL0ubAFzjs2bRU9XRSkve9cqT2k3uw8RXakvcI+GT2AxJk858NWvYU0uz19R1i9wNxrvQU3
                      wr1WrRg9YEpWvShcKLxItK28W2KrPYdwNr3od6q9H6ShPQGktj1F17m9ilZ9Pap+ar2BsMg9ut1Z
                      PTsAxr1iuAg94Jrpu+x18jzUcIy8k+4gvQCJQbr07788pQ+APQebVb3yAJ29fnV1PYMls71iaQ49
                      MFgkvWpmGr3qqJa9k7OPPWheVjzli4W9TPmFvRiujDxJN44912VwvTkNvD0qR2W9YCT+uxntqT1l
                      7Z+99BoUvQbzcT2GRJ29ZzVKvQIEPD1mZ289+joDPZeyyz2kv4y9AJ0jO1v6iD3G/nE9mO1+PIBw
                      uzwYequ8dISsPMARYbvUcLE8XUB5vQAa9DqY6ve8Bw5DvVaJl71ohhI8HXxjvYTF6zwz0K29hthh
                      PS+0tT0exlg90O8fPM1Noj0P4r899W67vYZwAj1esT89sI8XvFkslT2AV+W72px5vTYjhr1AkUi7
                      yjbGvVciYr3vZq89AZSkPYsojT0A9AW6wXKPPRCXs73sEeA8bUtjvUBh2bqvocW92gPMvTCpdb1d
                      kbu95psCPT7XZD14+788RIzsPFTV7jyA8oe6AIFjvc5JgL1NEcw9YBxCu8AcebuCcng93WNGvSAZ
                      sTte00k9cyCKPapsET1Q3Lq7CmWSvYrRFr1x4aw95iYNvTU2xr1K+hs9IpqzvUzk3DyEKYq9fNny
                      POvclL0Nvos9CcSTPRiCgTxzwDm9DNKaPP7CfT1rQMs9NRShvWC5wrvy9Ts9GKn9vPJZwb0NDZQ9
                      pVuqvSjTrjydSMm9vEuLvU7EVD3Absw84hAPPRb7Xz1ExOM8iDP2vLYaGL0vOZE9KkMyPQ6iHz3N
                      5kS9Fa21PUxExTxwaai9e43HvfhPnr1rXbQ9AEIYuyxolryAaJs7Sl8QvQx0ozyfcbq9kv9nPalZ
                      xD1MlIW9AHk9vfAfSb2sGb482OLCPEGquD3YVZo8c0+IPbA8eTwAGNm8QR25Pb3HP7294Dq9LLfI
                      PNDGHbzCA3U9wBmSvKiVlL1yLSU9DaKdPcyarDxHGbY98obAvedrxT1Y/7G8yCi+vA0oZL3rWrq9
                      GL25vB8XsT0SJwE91ES1PDtupL0RIbg9ESCgPZhjDzzz5ba9fdCWPR2vkL1g8i+76L46vN5hHz0Z
                      aI49fTLFvc6qCz2KtzE9zBLZPKDfD71BxL49S9mbPUM+Lb2Dj8w9QMzPvLU7x73T/609MkF/Pbpi
                      Q70CjkA9ACs6OwY4hr04Xse84DPFu6AxXrsgIuU7TH+BvKT58jzUPrQ8uD+3PCDY/zssG8Y85Pfq
                      PMgVmDx/BY89FCbHPHM+d73gtBC9qHC6PJgnN7yzIrs93EfnPGqhUz1yLyk987StvSSBB72RqKg9
                      stVlPZ2Bgr2orgS8eHLJvGhk6bzMk7C8wq4cPZNyiT3Tkaq96iJIvZIsCD2YxPW8Vr0cPS1mir1j
                      op693PULvXDoQzzQmSS90tN5PeBEnTuo7JY8Jrd2PaMeUL00Buo8WPTAvSg4JrxQz5W940OVvbGL
                      oT3QQDq9DKaAvYcpVb2T/7U9eTPCPfrUo725wIw9gLpwOuzgir2xHIU99vwQPd8/oT1wu2K9TrQF
                      PSeaXb3hgbE9GASVvL+Lx71rC5s90rU8PWsnmD0YYzo8sHsIvbhCs70awBc9+mAnPRAwB7yClSk9
                      SDPKPDAKUbwzYZA9A2x0vR/AzL0GuXU9+nIyvTw50TxVhLo9s2ppvX1iJr2SWQQ93ltuPSKtXD0A
                      jVo6a6PCvaDY9btMWI88gKTqu/aEbD326zo9NTigve0jWr2jCjq9NEa+vIdQSr0Arog7yOXzvBkl
                      oD23law9gAtjvPyJ+zzoUSG8Ddo9vfeuRr1TV1K9poeDvUNSKL0e7nI9B6twvcvymz368G09hqU8
                      PblFiD1YqE68wnV2PYAwJbzw8wa9IrWGvV4Qq72qm2S9saOyPXQWl7x3ule9AEjNvDJWED3iZyw9
                      spE8PScCG70UQIA8d+Envclukj3ZU4M9ZhR1PdAHZL3AqXa7aJVcPM8TzL2eCUQ9Hb+6PcRNEL1D
                      MsC9VGaxvJ6LUj2Xnbe9bf28PeDL9zsvVrA9lzdOvR7wZj1yLQI9qNuZvFCODLwka+88BG/pPG0S
                      oj1GzYm9ylivvaU/oL0pf5A9VO+WvMceyT2a3SE9NoFnPTrVhb3vYKc96ERyvAL1WT3g8Oc7eut0
                      vdNsU71B7ZI9qmG1vTktlD1tQMa9Gnp6PfTUxjzSA4u9UHpxvGo5Qz3A7Fe9gOrdO8CVWL0me6G9
                      1/GxvdNxOr0FwK69GCDFvI3CiT2BaZg9EqaovcPSvD1ACn69H86oPUXspb3ioJq9UhMIPbsruz0g
                      Q867OrcbPVI2rL1D5Z29U3WqvRECrj1TvGq97I2tPDUDsr0CvHs9OkWevWxh2Dxqn5295XOpPVWA
                      mr2vm8G9AFi+vACW/LkYMX88Ki9DvQqzBb2PyZ09oLQVvTcFT71n9Zc9Lyy7PSifKLyl0oE9Hceg
                      venluT1gMSy9gIZtPGYscT3w8ww89AuMPKKKgb2WIYe9zyqjPSybqjxkNe488GZ1vaSTDL2D/0S9
                      qbiAPUmjvT1gXWW9sAZcvFVFoD1elnk9mliavYoFGj1w9mW85/mIPQ3QJr2qXZ29yJm2vOBEeL0f
                      r8E9+dCePUcKZ700YYi9J0Yyvfhpo7zuTam9GAVQvOjt57w1P8G9oNbmu+7Am71QKMy7//rAPbQl
                      2Lyam1o9+eemPQc7NL0MUKo8CHX9vHM2mz2gnOm7eZKnPYIpUT3yPAQ9YBg1O8X1x70A7Bm74CyT
                      vQAexrxReMw9DkQaPcrKPb2g4jM7sxQ6vWxRsbyDGyq9bOmZPK/7jT0g0SO9Uq5HPRfCsL2g1SI7
                      a+mmPdAFZrzzwk29D5mRPQK3v70iiy896/WaPREWrT15OKI9xkcZPYNNSr2gpXE7iCq1POPfIr1Q
                      Q6u9pEHVPAIvaT3siYA8oM6yu4lUuT3dRTy9wI8qvNAmC70tVJy9wCwbO9vFkL2uaXo9YA9HO7hH
                      nDwRWYo9s4slvfVcrD2oXiW8jeNNvZDOULzddb+9GMsnvG68HD2zS8I98ExcPJ5GUz0dUCe9OKeD
                      vF3jbL0QSEq8REbSPBQpFr3j1ba94AL9OwBk6LqeVoi9c/FwvbPjcL0GzCI93DKIvXHcvz1yzjc9
                      Y+uovQCFZrraKGw9fzalPbF0wT1opi685ghtPfu1lb2a7qa9+NWhPCb8LT2H1Lg9E7hJvRb/kL1t
                      F8E9EC8bvGwY2jwI2IS9utmEvXrJUj1l+q49cyZBvcNxwz0oz7i8YGspu22THL2furW9sn1tPaLO
                      AT36GIm9rsV0PcChhjwA8Ba9ansfPV6BeD2wAlm9wFg2vAiL+7wX65E9/bWZvQBHWrpsPOK8GkEn
                      vexj/7y1VIm9agfCvQn+lz30YZy8JbOWvdRx1bzCSUU9TrV9PWWYjz3fc549CFiWPAGCiD3ct9c8
                      gEZ8vdGsyD2vtLi94M25PGg8LDzAwTs8dMkUvYXhv72WUAK9ap88PRtXjT0qtaK9BNn2PKT26zym
                      ewg9ItMxPSDlpr1WSE89WLeuPAB86jtn7as9qxzLPaxGvTyIio+8Oo5WvdBtdr0skuQ82O/Hvdf+
                      f738hM08AH6bOwAuBr3QGH88ZESFvTanXT3Q5+u7vdKzPfHWqD1UA/S8ONmKPMAycTvYy0A8GIgM
                      POL1KD0/uq296pZ2vWNucb0Uywu9ONWcPPDuor2gs327kJN6PCPJwr0M8RS9Yr8QPfFWmT3SDgI9
                      ZtaQveSP5DztbEm9YMf3vJApQzx4G729+s5VPWi7vL3jqEa9oZO4PRaeJj0M2dS8M9OlvRAQrr2w
                      +w+8cC9qvDoUwb1/tsG9gEbyuxg7lb0LcKU9fb2avaDGwjsAfMA8wimgvYTAB73Q9RA8hTrDPRtH
                      ub2keuQ81GOwvFfhiT3AK3O8xOP0PEyy+bwY6ca88pW6vVKcjr3As5U8bmuovahxZjxseoA8r2m0
                      vbuIkj3RkKE90ruJvdbSUD2ARcC8r8mEPZd+sD1C42s9RG4PvWlLrz0ylC09CY+2PTr3EL3HSoo9
                      Di48PcFhkD0isgc9EAfGvRfqVb1NwjW9wjmdvQHHkD3xVao9iGCnPIBbnTqigl09dVuQPViM7byA
                      WCK8UrCgvet7uL2BoYw9pFTOPMyw6jzpo8Q98wN8vb2gSL2lApw9x0Rmvb52BT2ujZ+9Ng2avRzN
                      hb1QUaO9g9eavTTb4zwW+ge9kbSlPZD6TLxchIa9rocLParEYj0QjUS9pdeAPUcfRL2tUqY9yKKh
                      vCuFlz2Jg789ljx7PZQSrbzAqE883Xu6PZhA37wUUrQ8VET3vNk2nz1i2MC9RhaIvZEgwD3gmlu9
                      oFO3u6HIoT3Y+yS8tD8Qvdouwr0dWMK9U2aKPZWZtj0NXEe9wgVPPWiZkTwYQsU80EuHOzGNxj30
                      WJM80THGPW37mD1GmAo9rQVIvc3lgr2s0qO8AlmnveFQmj06tXY9g7uUvcApfDs9zRy98Zy5PR0D
                      qz0qRse9EAwavYVLuT0Voqo9I7O7PWBxTr1iEHo97p5mPS1IU73Crmg9OTmBPUjysDwwOO87J7GL
                      PUxtzbwaf1U9u4LFPWDkVr1ADd06uC2KPBjrHLwjS689cVrEPVBiUjxHKYE9gWWOPfBYTLxwh6a9
                      MuQ/PfAFgb3AePm856CQPYBR4zpUkcw8FvwTPcCAhzo6wD49HaZlvdIqCT13xLk9qnJbve1IUr0R
                      F4g96t1cPSkauj1Q25G9ZoFsPc8Ir71Si1U9vLbYPE4cBj3GyGs9DsSlvU1RTL232649YHIjOwN2
                      Sr1lV6i9TiciPdvnkb10WoK8lTGRvYLrdD0974w9szCMPUq4ED20wtI8uKTMvCp2i71NmzG9WNNY
                      PJ2TVb3mPCI99nQLvaRJhr3A9zo80rVWPacdpD1tu5y9BZqkPQupub0Ag3u8LLPgPGJmNj0D7q49
                      bYV9vWSZ0TyAjoi8dOHpvKEyyj35K6M9LxKHPcDFy7yxYbQ9mKoUPOj7or2UArE8AJCrvDPOU73Q
                      HJC9uFehvbPOjL0pXsQ9LpsCPZjbnLx+4aa9iU2HPTk/jD1iZFk9kEYMvP9Lgj0Aixe9UCd4PLeU
                      pD1DziG9qg03PZ+fnD3U+K28DFatvLBpN73zX7E9ujCEvQ4jVT11+709am0cvYD4m7rq+Je9jqcA
                      PeBSzbzMfsE8IKWlu6yaAb1enqW9qRLFPZLHTj2AM7C9MNxyvGMsZL2Tyia9KkujvVDYibuD2sS9
                      iR6QPQDAEjs4bsE8UKd3POfiSL0b+Lc99ukhPV06Rb02OYe9ErxRPfJwJj2WgS09OACPPJCmS70U
                      SA+9sEDeu7C/9LsA/wO9/h8WPYBVfLwYJi28gkyrvc2fc71QuZ27J7wmve1byT2sQPK8QJ8pu4Ma
                      wL2gBmg7mqDIva5wkL1ZJac9zmouPXvWyr24+oa9HkcoPUCeXLsAPVE8Og9NPcBbErtKRCm9Dshb
                      PfbsXT2p5a89oCNivcGunD2JNpA9a72oPVgPSLy2zE49nh0mPSC81rzTUrM9+jkhPSAtgzyZcKE9
                      3DzuPEC1UrzA2gS8YL0gO1yU4TwC2yk9J39/vfr4Yj0z5Wy9YI8pvb7PRD3WxgU9UYqTPQacmb29
                      OZQ9lkOQvYlWjD1QUD+8R/upPak+kT1d4IM9HHLrPDM5vz0wVyi8F4Ovvd7tDD2ADQ28A6u/PbNE
                      pL0KrBg9hngEvfwr5TyM39c8rezBvdSJtLyNWY29SjqQvUB4GLxQhBy9PrVdPaL5vL2SFnc91eLC
                      Pahkj73hoK89hEaBvUBEnDyMrPa8BridvZ5El72vOaI9M9tlvcoJwr3KNUy9czF9vQS76jwrGru9
                      gOkzvK2Hyj2ahiM90NknPJOtsL3pDZA9ffivPVqMqL0EefM8sDxJvSieHTyGTzU9QUmoPbKeET3e
                      PDo9SuRKvbA3Sb2cXQ69OxGOPZAoZDwOx0898nCvvX/trL2YgqW8AN6FO2AzJztrzss9iuwNPaho
                      nryeOB09NBHyvN3qr707JME9VtWovfcupj2gepe7999mvQnYtz2zTIs9Lk5FPehHuL1AFyy8V7i6
                      vYMHpj1YSMi86A8mvLAmqjsAdli5KqNcPa6POz3w8CU8v++TPWD2MTuQTze9ymobvaKGpL2Clru9
                      e+C8vSMdrj1+HnA9N25yvfoYaz0MwNA8BnoQPZAwTb03X8y9kYOVPd3YxT1CuFQ9bSu6vfEwtz0P
                      Ra299U+GvZ5SDj0gQ5c8K3jLvYHTuz087Po8aDdMPF2VWL14VJk8IbDHPQC4gbrH6jS9AUyrPQCE
                      ATwdGUi98NpuvTJjfz2S/ko9WZbDPbROCr2ql1C9CrCfvWMEnT0Xz6M95KfkPKiuJbzWfqm9xVeQ
                      vXenyr2Atfi63b2lPVE1qj3gppC8dNaovCBBwDyTrLQ9r1nBvegnx7zIB4C8o7mXPf2wfb0QXSO9
                      GqtPPU2Qyb1Ul8o8UL3CO+Hbrz0R58Y9jOGKvVENrz2MRIq94i9+PXQJjjyMpsS8xKDSPODdA71I
                      Vpc8qfSYPcRh9zyI9JK9FViZvWB9lDt9WFG9khokPXNQub2SDxQ9sHdNPGXtqL2Aqfw6oCQIOwDC
                      tb2s/5W8BxfHvSjznzwwc+A7PYNQvfIBTj1u6zE9i6q3Pfpkw71gCTU7PMgUvakEqz0gzn294o4F
                      PRTMtTzMyuY8vDgDvd9aoT3Q0kW8AAwyO8WOrj3ANym7jMHlPGA48bsE3P88PfQxvQMaqD35Go49
                      6DFVvJO+Vb0GaYm92OjmvJuilb1AidQ6eupzPSQE0zyTgrK9NQ6MPV5ggL3tujy9sq4+PZ/qxD3d
                      ZEW9QZ20PcBTFbuEaNw8uAGqPFtIwj3s1tw8w9ZQvewFDL2KMk69oJyNO3dBIL3SGxg9OESJPIBf
                      67yKGjC9J2uYPRkjxj0IkYW9sAc0PChMUTyv+LM9Icm4PagdHrxAdWW9CEiLPGdkQb1FXLW9Pf93
                      vapiHD1WCiU9THyCvb97sT2S+Dw9bfCDPWDARrvflMM9pbm6PRuUuT0uiAE9nCoYvaBfA7vAlLM8
                      nQKKvdGXgT1uyAM9ZpWcvRTf7ryyYTQ9KJWkvVDzDzzOc6y9maOTPYAtS7qs/Ni8sJVwvS6JMT26
                      SLC99FHkvEHJvj3PdZ09In0rPcZRCr1gzME78jBjPbvvjj2cfA69prsMPVCC7juUpeK8qN4fvAnk
                      jj3Y3+a8kUKmPcJbUj35i489Zzk6vdiO/bxWZRS9VNqpPAxUgjw9abm9wkyHvSmDlz0EUAK9+rJC
                      vcBMLLz+HYe9qGfSvNn2kz1w9gI8wyxOvYAWlzwppIE9IFqRuzVzyb0VI6o9lbnIvWPqpj3S7Go9
                      4x9Pval4qD1aTVa9eGyQvPFdsT1icEc9a1+9PYClKDrqjgK94J/CuwCFfzzAE8C8Gpl3vV02Kb27
                      ZZq9lt5aPWSK6DyodlA8UXa+PZJciL0/O8G9whRXPSg3IDxypHc9Iey1Pe9GsD0F7L09J+jFPWCK
                      nrz6ejc94GOLvXjvgjz+KkI9AAlRvYiXgLx0D748CJOXvThpkb38avw8IDWyvWCCizwXAiy9Daye
                      vfDgB7194JA9wmgMPb7fSz0pzYg9Z0qwPY65pL2jvbE9VcGmvYiFg7yQ6aS9CTm0PaC3TDvt9DW9
                      yrJovdBcMrwbg4o9b4exvf3/vz2guh69kkIKPY3aXb3aDiq90WyMPcr1Kb3NIDu9dfjLPcE5oj3L
                      gZG9anBzPZLnxb0Ai5q5CoFEvdH+vD0XkD+9arYGvTrjTT3Kiyw9vSXLPZtjpz0acBA9MiSovdiN
                      lby9HXy9rVmAvYpnPb1YgV28RWmWPVOmsb1zo7q9GnJ3PeBckbxkxvg8VS2hvUA0Lr2A88s6sNJ2
                      PDQavLxgFrA8hXLMvTboCD0AKb28aDAHvLIrFz2AlnI6myebPY8bwj2Gy309qlgdvQgfoLzTGY89
                      ThZ9PWARYTtyizI9rZp2vSQaCL3dI6k9G/CZvXfSsb0jyaQ9AikLPTSEn7yAOA28ImYsPaa1jr3A
                      MOW8gD/mOhuknT2KfHw9Q0y9Pc3qrj3yFUI9Qd7JPWijXrzWqmk9PYqrvdCs0jtXeiq9gH04PAcW
                      J73IKsy9/oltPVv0mz30R6K8JXPCPSO0UL0IgJQ86Dx1vCN4nD1ckeA8hs5pPfD4PL2TvEC98DQK
                      PGq7dj0YBVA8UD41PJFgvz20dwK9fnASPUa+JD0VrrY9hbvCvYxdk7zQSgU8GOPxvLSuz7yoSKc8
                      0Hp+vNCKiLugBV27uiNvvTzIgr1AUrq9MoYTPdF4nz1Yx968rU61vSowLT3FP6s9EDsIPADUIzn6
                      d2+9Cjt2PcwohbyAyZe8YLknO+94wb0wW/u7IIRAvZ5DXz3nwmi97URUvUu2iT0gi8m8XH0Yvavs
                      ob1Yh5G9KFosvMPHmz3tgWe95lyMvXrQMT285/w81/N+vf/btj0arzo9MGyYvQCqFLsWZB89sM35
                      O/coRr1Jasw9wDHEvVq8Zr23Ibk92POqvExRxrygpyW7cjpwPYDfkDyW0TI901CUvVqFVj3qOS49
                      Qfy1PV0UmD06OSc9SgB7vagrIjwgMNm8A7FJve8dlj2Vsba9kOIbvEpTDz2OkQE9En6BvdRFvjzD
                      DVq96HKoPFAO3ruo5rG9tnGgvdTmwzzYG5292HtmPFIYir2tpcm9QiAoPXXVjr0TQac9si+wvY0u
                      fb2jx8Q9eWOLPUgA8LwWPmw9TgwLPWIjeT2+Rou9IPH9u+7HVj0Visk9gALKvN5PSj0DWsq98vKQ
                      vW7/Zz1dVDe9LUNhvSVtw716R1y9HZXIvZAQITzlt6G9H5DHvZB9ErzXYCy9oo+7vXb4Yz0qbVW9
                      eN2IvADVVzodKHW9AIOiu1NajT1DRJS9IoB3Pfi4oL3oN0Y8XGHiPHb4Jz0WYZm9OxC7vUnntD0i
                      vXQ9qBE4vEAd/bzTq2a9ymC7veFpqT3K2T89oLosu9BkI7wM3Mq8BsMPPfYCfj1Z4L89oBpBvarl
                      qr2C9x898wtavXhglLzYH5W9mf25PY1Dxr0ziSa9CQ+XPSSxi73kHoa9WF6pPEZmnb0grJg8cE8u
                      PJtwwL2aYU89BwCvvagnSTy0Rak8KCF8vM4qHj22KU89AAU7OuMhxr0SPr69sEhMvBSsmzxglhy9
                      z9jHvWL0DT1AkRu7uVWLPWI2Oz0gb8W9dP6rvDo6kL3Ano88CcC8PRhbH7xge6U7Nv+FvbCZlzt0
                      k5c8x0qxPRhQgL0t/B+94SyKPcA+8DoAjaw5MAYKPKh+Nzxg8Ra7RhtqPXY2pb3z0cg9GuMoPVpZ
                      GD2qrqa9AGJKveBBgrywQ3Q8GaaPPU9+wD31GoC9PvpwPVqSbD2s1KC8vamYPTiTub3pi8Y9hosL
                      vciJuL1uglU96+yavToJkb3drck9WLBZvIsIxL1tEp09DjBrPXhDwTzmaW89KwuOvWDfF71L0bi9
                      5qMkPSrGBb3gX5+7S8mkvcA207zJnYY9OmsPPTpGKj08vgy90GqBveuHq72iqhg9LtymvapVNr13
                      k0y9QHXJPJosWr36AVK9fjgMPSfOML3QcpK7Igw1PVesqj0Q4nk8EypEvXCVWDzH7Zc9KPLnvMcM
                      Kr0lRoI97DbmvIy+vjwTK2K99RKmveI6sL2Sdho9MGe/O+eaoz36YGK9TTqLveJtRz0g/aQ7YKwF
                      O/Odwr0QRhG8zgQcPQD5YL30Jd08SF3kvB6AGz0AKL08UgY5PWTL/TwzcqE9sKANvcPrUr1noVe9
                      meigPQ6pYz1IRLy8N3aJPRRayTzYB7Q86eSGPWjFnbzY3Du8pYG+PQRX1TxJ3YM9BOb9PCmSxj1Z
                      8MU9YPqtuwCoELrOLKO99GTGvACqS7kFn4S9DsmCvadRnj2MRZY84K+AvJDnMzytraG9oxqyPdiR
                      6rxgL7a9FCcHvfCrbrz4Q4C90MN5vGJRAT3oDrq8wH6KPAWKgr0UvM48QMnxvBndvz3injM909SC
                      PRdFjz1I+NC8JqQEvWB5/7xTqsm9M2vGvRVkwj1gP827S3bCvUMjor1a+W+9HPwOvWgzbbxMau+8
                      QCTQvAA1AjtddZG9ABxrO9jchTwuHSU9j1SEPayLkLzsGdg81xwvvUDyILwtrD69B7BnveNqXr3l
                      ZYU9zaWvPeSJFL2ouj88X4a8vXOvS73VG5Q9OdqCPXJwPz0ATQq61BuqPAA/uzxgi7O7zL+DvCSP
                      6DyZvI093+aVPTDYqrvdg2e9kzMtvQuzub3eLhs9nh+rvZwYDb3rBK+9j0GPPcILqL1tOcc98ymg
                      Pa0zhD276bM9LnomPXNXpj2QYAC9jCnBvL1Cw72Mea+82OibPNa8Wz1MrKW8ZPP5PDVdtr3BZ4s9
                      g6fIPSJCCT1gDmO7yeqAPagJ07wUMeA8s6LJvYFuqj25usg9swPGPRp6Ub3eLA89UttWPSAAu7xo
                      /jy80Pk+vMiIqr0COkw9gOiROgATyrsHKFu91FKKvCDclr1C4I+9u3u8vcFJkz1f9MC9j8qlPcwi
                      ojx0FM+8VrdZPR0Fk71gEoe8586KPfCYLjzTXEu9KASKvCCdp73IFou9oO7WO8h8wr3T97I9DU2d
                      vRpYMr2KDaC9mtQKvQwwzzz0gRG9A+s3vfafEb2lDp29+R6uPRxrGL31ssY9AGedvWmivT2d/kO9
                      JkyZvWRT+jwIEbS9/ecZvYpRU73YSzC8AE12uupbVb1nYGO9QOgTO9YcJD0FTrK95SyWPfA3Zr1w
                      sFO9AKqLuUjOhb1qAg+9dXKdvRfLPr3DQCy9bKsDvfBvazxAvV27Oj7Ivft4mb3SWZ69BTq9PSPZ
                      y72XLcO9KxXMvel6qz3x88c9bjBBPWRY4TxHHl692C6IvOflPr3siOO8w0WkvdGGgT0kyvI88Nls
                      vJyli73gqKQ7qsAXPdgT3LxgHek77PaDPF3Ycb1r0py9gNyxOwLCDT3SLXY90KapvW2JHb0AKow6
                      6wfFPUuBiD0AVjK7dObkvLpsAL0FxIg9oB2WO8fcwz0adEW9MhBSPYU6lT3lIMC9WnRpPaovUL2f
                      y649Yt5WPcs/qr1W8B89m9u4PWinRjzxD8I9XyqOPWPAlr0rpo894sEvPfgNvb2Isss8Q6g4vZ5V
                      WD3MGM88+fm3PccNyj25e5s9zeCVPZKgWz3g/608t+CvPeMiK71JTJA9wJ7GvL0prT2Nb8E90BQj
                      vcj+jbwJn4s9sPiUuywlgbxFQ8A95e+OPYKKSz288+48aFVzvJJrLD0flLU9oMyOu1Fukj0VrMS9
                      t5ZfvQAACLfbup69mJDtvM+xtb3YtuK8EZSLPceTLb20qru8IH84veYYXT0A6qM7gXSxPd0cf70R
                      hKk9KLSDvFFRkD3EYoy9+lNyvRUXk71gGbA7d3yyvax/vDxghyi9UI9hvV7yIj3KFxA9GUyxPVj2
                      mDyA+cS93Z9UvUE1hD1I0NS8/U6dvYLlkb1U//28VUaLPfdfsT3qH8W9FU7MvbH1ij3E2NY8l34h
                      vUD6QLwfJsc9AGzQu4xZ/Dw3UcY9qnXAvVXApj3YbF68fOfTPACs+Dup9YA9OUOrPZzP4TyQTaC9
                      /B6KvZb0Kz0mrYq92XK3PQb+PD0LArY9chC6vT1NT71yfGw9zt07Pfq4Kb2ygLu9R1tqvbCiyzvT
                      Xzq90+/BPQNInb1iL2A9NhYdPQCPPzrBU6I90ElaPFb7Xj0A0G+6cGsnPF2lXr1p6oc9kgqDvXBu
                      ZDyQqZO9Ht2lvTa0gr1AtIO8c2pwvfETsz2bvLO9OjoBPa2Blr0MKLc8MGjau7GYoz0AFL+9DFqw
                      vKISj72wq5S9vdx+vTHDvz2ADn68rLjhPKycjDyIzPK8aji4veST/jyWJW09IIqKPBd3xj3ccuk8
                      g7N1vTSIoTwqw2S9qME9PGL0Wz2bt8o92J/LvEr5DT2Zho09+GW3PJjrpb0TB4I9rMifPP1nH71K
                      k389msmJveq3tL0UD8a8f924vQD0HLm2Vzw9PWRAvdGimj021TQ97iUuPekklz13kRy9WK6mvABX
                      ALwHy8m9PqpDPeJoNT0mKJW9jr47PZCyX72jz6M91/tEvfZZOD2GWQY9MOqrveCsxrynrzu9qDpr
                      PACitL0N6po9QDXKOgCfdLpiIqm9klscPRTJwbzychI9+di3Pa5jcD0xF7M9u9i5PZ0cKL2ITMi8
                      lBWFvM0yvL1QnhI8ULBsPC4hgL2zhFu9gMLvOmBiTDuANdG6IK/1u7Nhuj1l85y98NlqvdC3nr2F
                      Dr09gxLGvVmqxj0YqSO84lY3PXBWSDy+nJi9oGJyO2LMqL25u6I9gMWJu87mZT2oJsa9Mu0CPaQ2
                      7zx6UgK9MUOjPZK9Ij11V8I9LDfSvL+0wb33V7W9MOSMvUr1ib37eoo9ALgJPNSftjxOK2Y9MC5p
                      vIBsz7z6hbO947FnvYPHnL2AlgC8gA+yuqBw7rsyOpC9UCcovCNsKr30rJI8InswPWpxYb2A/ao8
                      aA06PAILyb1I48U8jMz0PFSb2bzz9Vi9eheEvZ1Mwz1dhJg9wLxnvRW+lL3w9kK8gP7nvKpXKb0A
                      UTM7gOSCvZsHnD2ilww98nsZPSOrPL1Hcy29ctZDPf1Hvj2xAoI9QFJGO8qLCb1zckO9J2iFPVUn
                      sL1d8Wa9S0aJPTDSxbusVqm8wt0jPeYzbD3kwIS9qNICPLB7FzyZ27g9IjtVPYwe9zwAFvk69BPQ
                      vMPYer1SwTs9UOpoPNB5Zr2CzYm9jvEkPWsJrT1ILLU8qP5tvAiZxzwaBxg9O9aXPfvyrz1gIEy9
                      s1/KveLRrb3Ieq08hk6kvW1jS72Iv5I8C/SkvbzlzzwjJDq9f9Gwvcgy+bw0WhO9zey3Pfuogj1U
                      Hs48k8U1vT9Eu73Qm368sautPXLWGT1ian89gv06PWjRfrx8OYO9l+xwvahyj7yymMG9Wjo1vVhG
                      rL3gRKC9QGNSu/q2Yb0jWac9YMa2POhirb0Skk09mGZEvBe7bb3xT6g96kxpPcOIuD1tR0+9GmYC
                      vX/Lwb2ALE28oseBvacsJr3QtIs7jL+5PC4/Rz2o1zI81mKZvVZjlL23cLG9hl2hvYAnFDwQX3c8
                      cRCtPbhFwbyiN3g93HcKvbYrl72RH6Y9wqVjPdh+RDyH/qA9qeDLPafUpj3x9KQ9sEEavbmHsT1g
                      3Si7ToeSveZDOz04f5a9YoAbPVAHaL0nzFe9sG2COzRW5bx36qs9+uRgPejhrb2guZW95rguPTMr
                      ML1UR6i8go1/PbLTur22mDM9jUGZPYJcej0RCag9QkitvR3pGr0si828hfiyvbDMCzy4roQ8sIT4
                      uwyWt7zAPgY8A7e5PRDkRr0As4E5FrRoPQAieDxXKXC9mIY8PKYVqL3JCcc9JdrIvSAywr1KLm29
                      cruUvScjsb2p2pg92f6sPdlGtz0A05q8IVrFPWjAg73jS3K9kuwTPUKrMz2EtoW9AB99OkBvoroA
                      SgW8df6gPdH4hz3tA7c9wBFTPKe4kD0MGuM8ouQQPTovM73atqS9ilFevQNQtL1AhDa9wrOivYQa
                      8DwHcza9QImQuh4PCj3ODXQ9iM7TvMbGRT2olb88WHMHvC01pD1Ys8i8hwGTPe09w73beMA9/qsg
                      PRAob7y+tHA9yaOePQACW72a/Wq9NNfevMoMVL0DHBq9gHKDu9lUvT2AboO7l2/HPSNAjz0wP3a8
                      UMhnPISX+jxdH2+9r7y+PWCIfb2SHEc9OMSzvViiybwAy2a9TQMzvbBaC7xp2Js9YyCVvZ2Fab2m
                      1wC9f8eaPXJcmb1w0mW9AFssu3TqmDzn3cO94qZsPVoiBb2QuDO9YpZbPXTb+LxJn409KbaNPSgo
                      orwE9PA8RsWYvQwy6zzwgYK9wzyAPRDuYjyAHP66/4nLPUBhMbuSfI69wMi8vDrSCT10YbO8pyC6
                      vZ9xwL0NykC97G2OvINDmj0avA89BKr/PGzVrTzYoio8QMRePMCrPr0v6Mc9R+OAPTk0qT17k789
                      AC7Wuuc/lD3gw628Und7PSwP5rxWYFI9cAiOvSKCaz27yIY9SiEcPdZaPT3xEpE9+46cPWjQo7ya
                      oCy9QNF6O5KRTj1Q9KO9uM6kvYGSuT1C4CY94Bz1O3OJSr2PO7K9I7l0vSKAcj3A+iS92LiSvV6F
                      bT2Y4sq9lRasvY9DxT1i+yg9rTezvc66fT3gqKS7oAwGO6xr1DwAZzM70IjQu0FPgz1YAFG8Mow/
                      PXC/LzxaSQi9pC7RPBv1vz1rOII9shwaPVhSYDzG+xS9TaRwvawxDr1kNxi9kEelvfDDrL2QKBq9
                      Xvs/PcWFoj0eVwU9jE7TPAelSL0dE7e9mCQnvJKkYj254Mg9ACeovOoyf72Np4s9UoN3PYo8BL3S
                      VH498CMGPJqpZD3QSgG8EZezPeC8rbx+ExM9sKKfvaFAuD0mFD09F4C6PUe8IL3+fJ69LcvMPY2z
                      Ib2rerA9onGfveUfjj2qTT09QtqXvRhwpr2zs489MC1APJ9Djj0mYwA9DOAFvbjXq70MgI88Zh4L
                      PVAl67saIRU9AFvbuQoWG70SCTQ9q7+QPVBtlb2czek831eAPVrjd71uAUo9AJj6uBWoor3YfK28
                      DCTsPJrSXj3pScQ9NxYnvXO5kD3y3Bc9yUmSPQg5wrwWyS49O4CIPRLAaT2Dfo69xQG8vZnjiz2j
                      kK+9fjMcPaeXJ71JA6w9QAa1PPsny70SLAA9sFBovQAZLruiU2k9duCkvbBs3ruKFpC9R4GWPVAL
                      k73x7q09F6/DPf8GqD0UQJ48YIG6vP2QHb0Wsz09Gp9HvbEQxD0OJzU9WN5ZvI3mjb3Q/pu9+xet
                      PRcQWr0IB6e9Z2zHvXW4xL3g/8G7KACHPNEIpT3DgFa9fs8/PXkVhD3XxzS9oC73vJjZSjwgqfm7
                      KG9lvIgesTyaCWu9nWc9vVOhvT1YHJw8VgBePYjN4LwA63w87ndVPQD5db3UoJo89wduvVoZej02
                      XJ69skJBPQAJKrp4wom9pztXvYy2EL1ziZI9eRmsPRp+wb0ujUM9LsYhPSAPyztgJi47UwOCPTRr
                      xDzWmD09g5sZvR1jlL0nJ7e9pwJZvUBGuzxgdbs8YUKyPYFjtD1k4/w8GtdGvZrzhr1AzKO9BK2J
                      vUTLA71p4589zAcAvU57JD0eoEE9jt9NPWk3lz1XGI09Uhc/PfU6yD1emJe9mHeyvJIqXj2IKaq8
                      l3E0vRhADrywS3q9IoUEPf2OxD3Y5SC8pn5CPbSx3zwgw+a8WvJkPdjyADy1Z6W9o2cxvbB7kLuK
                      Tym9KKOVPPoSID0Wcp+9cih5PWgPPTw+thg9YF0PveBMkTxP5Ys9TD0WvTgW2bw5xr896FHCPCO2
                      bb38Y9U8sLxCvezv7TyobGM84GnBu9s3pL0tnKM98E4CPDKjr71Il8g8Y61tvU2eib2pU6o9WUSw
                      PWIcmL0zfaE970PKPXLfBj2AIFu8CnAKvRS4vjxndT29HTOxPSgdvb3QISm9AGLivBJKu71AHIi9
                      wd6YPaqyKr21qLq9h+5gvaAcqDy7PZc97NSnPO2iZb0AWQS92I8vPFAog7sAAYM86yygPejCwDzo
                      m1m8uoR9Pdr3RL0TV669Gj1XvUC6ZburyYY9+JeuPCeSnD2SVF09WKOpPMe4Jb2U5pq8rpNlPbQr
                      zbwA6CW7SpV0PSfSwL0tl8s9Ep4wPQq8xL0j9oy9AKxau11/TL2qI2e9XTaRPYB6Cb3nxMW9hixa
                      PezJwrwYIIu9Y6ClvYj9rr0wkXe92Zq9PdXaiL1rYMU9rwS9vSyIwjzQoaS7KsFHvQWEwb3kZdE8
                      Ax06vQDxXDwMw888c4fAvTDCYry365Q95I/zPHYuFT0r9JC95SySPUU7jT0gZQS9bs0mPeABwLt9
                      ER69kA0evDGohD0UIdm8wL2zvaAhIjtiyEo9fi5PPYV6hD0u2149WHSEPBnBij1Apqq8YJZVvdnI
                      pz3yEh89tSSdPYDOjju6WVU9TmM9Pa1tqr1Ad3C81BzJvIwxojyZv8k9sIPvu9HhnT3Zea49s3HM
                      PQASyjuwDz69yKuUvAB14js3bnq9QkVgPWKRFz2meJW9Lc/APVL4wr2plaY9UsxpPdbFoL2sI4g8
                      IHKwu/PNnD3uFxg9AM0CPE48Ez2XU5g9sPynOwDDnDkX1mq9AKM+va4Sbz0p2Zg9t+99vTcmtz0U
                      DPu8nQLHPafWmj2dS1y9Ais4PQPqoD08qAq9KosJPXUznr3I/YK9wBaNOgjn3Ly63YO9UCMMPP0+
                      ij1LtpC9ivJcPS9Hiz16Q5+9ABu4PMIddz1IRd28XTO8PRC5TTyHXT69IPi3PKDKqL1Tbci9J1t/
                      vYyauTxspuw8QrRePbrdcr0Gjz89yAGbvYJtt70Gt3Q9StoYPQrzdz1S/io9EhEZPdiKg70+dBw9
                      nwyyvfriTL3YWUu8oFS2u8B5ADyxj8Y99T+BvV3Onj0Efs48QHMcvdDhh7s6t8a9AODCu/Qp7Lz6
                      Uh49Jlx/PShKF7yIZKK9vid/PQpJdD2MRJW8AA6Iu3cJuz0ABiw7sMcfPFLKIj0wwBk8QLjjvK3x
                      Tb033jq9wNVrvbCBrrtQQm69oxhTvcCPbTviTwc9Ma2/PcjIx7yypIC9KAuWvArPhb2Ff6Q9DW6Q
                      PWUbkb0gWdw7YE+Cu5f+Sb2IMcm8rvoePaTf+Ty6uiu9skCGvXlcuz31WMc9pITTPHM3Rr1Fb7w9
                      7S91vbqEyr3SDkc993tZvSAkkrsybpO9sFAdPCDfn7s0eo08wSOlPZhkyjxNBLy982F8vWdeZ70l
                      n4I9acuvPfrRx71nLye9DVVIvUbxOj0IQo28J90dvdZUBL1Q0V+9gg9MPQj1sTy+szQ9dRKwPfLq
                      fT3uy189E2u/PSVawb1yvxE92APvvMPwM70wa3u89i9gPVC9ir0wZzG8nR9EvalItj1zwXy9Q/Vd
                      vT6WPT1QRj+9XaspvYyNgTz6OzK9wEqlvACoCLhJE8k92aadPW0pzL15FZU9YqdlPcfcSr3dj5C9
                      EutsPYSHAr2b1MA9JkE6PSxlj7zF7og933HFPQr/DT1qk7+9KKVLPJiA+rwQGLu9QGu1uhgBoDzf
                      X7699QimPZqCdz1QgGG8lALCPICTSb1zaZw96KuOvOizqDypr4U9aEGAvZqiET3QLni9gcPKPcVT
                      qL0A8Ga7g/K2PVNkp71ZVZs97AKoPIFhpz0IMpa9RgNoPZVxp71juMi9XSzKPQlKqj2Lkoc9gPDl
                      OiA8vbuTYW+9QisAPV1hxb2YTYk8TmNHPRJaPT02Xkk97T6mvTuPs72As/87zn9JPeoMpr0MFc+8
                      QqI3PfKqSj1ngpA94opXPTA4VzymGEI9e0CbPcC4o7rAD4w8DFrZvNJGNT3slIo82U2XPR1chj3G
                      /EQ9lP6DvRhwurwQk0M8lnETvaD+7DvkmPk8ueORPQDdPrqwyUI8qAyrvIBcWTwJS489yXXLPSNb
                      s71afMm9ABoquy3Nvb2tDLK9UIM3vC3ZxD3kpRW9NETYvFr3Cj2nras9/p8pPfoqmb3avRK9GTXD
                      PWoqdb2SQoi9GEyhvQWstj3DM3S9VKQSvddbiz0675K9BuQkPSi8bTy+Q6a9QAhWvTJyRT2Dcsq9
                      YACRu2ExgD1/xsw9umlBvbTwCL1mDyc9ZlhDPWgS0byeJ3g9E/S4PZf6pj0EeeM8IDanOxiEjr2M
                      BNG8VqdjPXszwj0QAUK95EX0PFF6pz3Hkje9J4CsPegowrw0zdY8xfOOPTDabbwuTGM9sq1ePe/v
                      mD16TQW94KwzvT4KBz0+0Cw94NvMu0YJgr1Qtee7UYuYPVpnID3tV6I9TBXwvFjGy7wAIy29j9CS
                      Pc2abr1ozUE8GnG7vRV4qr2o8KA8aL5pPMC+Ezs7hbc9gLHcu8yiiTyAerG9MF1XPHaGo716/1q9
                      nlcVPXggsLyg4p67ZkufvTXIvb1fbJg9KNqzvSy047xA+T48XiY/PXMVij0M16k85tNwPZgRubxo
                      9Lq90FQlveLDm72Zw5Y9zOCgPBLQlr2guT29Xbq2PfE4mD0QKiM8QHKVvIAo/LwgBp08KOUmPH6F
                      Oz2X0Tu9chR/PalnvT3eolE9iJ23PP7oUj0aIpi9d1q7vQCgQb3LL6o9wCIiO3qWAb2QdlG9iioe
                      veJxRD0A5Nu60IebOxATK7wzlF+9WITJPGC+07zDYx+9WommvbnYgz0glrs8tyCePXNkw716vkI9
                      MuKfvYDthL1Vdae94AS+uw75RT2a00W9I16nvQ6FED2a/h+928+dPcLYJj0wBDU8U1ZCvXTv3LyM
                      jqg8gPsnvYD9p7vcmeI8VtEJve1Qrr2AxTS6UlUPPcPYZL0vXKU9aN1iPFiL7Lyw/WO8h53CPdAN
                      wzuwT7C9t4u1PRI1FD0AhS07SvJxvSjHebw8+AW9W4+qPY/SvT3zfcA9ttsYPbe/yr0MEYG9wqOm
                      vdM2kL2X1Te9iT6uPeyI4bw/qq49pJTUPP4fNj3HYHm9KnFtvfCURL2AEnE6ONLPvASaEr3gmaK7
                      qarAPRMSXL0hCpQ90E9xvICDwr0VDsq9dwAqvYXchr1AnZI81L+IPDLXbj3kFQ+9+feLPaQ+1Dzo
                      xZO80HJEvdIKfD0KXKu9V6xQvUvGlj1RC6I9zTInvdi4jjxRVZo9CKHJvd3wHr1QQbu7+FSLvDIp
                      cD3TX169mNXCPLPnIr1epxU9ww2oPegIajxg+zO7j2GtPU//pj098LA995wZvcUSxr2g6QK9R55Q
                      vXJFKT3wvVa9GM8wPJAOer2S8RY9a5uuPZovvr1TCCi9gMZyvJEIiz1mSC09I1jHvSjKSjzQLLy7
                      LEnwvGOHSr0Hx0i9MMXcu9i9gjxsf+w8wEl/PKDKfzt8LgW9ws5XPYbcQj3Ym9O8MAaBO/Z8ZD3X
                      22e9wLR1PBDAYrxujW09GoTDvdBfq7tYXnU84hl7PWQezjzI3fC8RdSevcTviL3TZKG9z+SWPa18
                      rT1gYPQ73o1bPelWgz2iCQ49qjpxPRBGTzwANV46ALyjOuWWqD3Rvok9qoRvvWq5Nz0xfqg9AO8I
                      u/KxGz2AQ5G6sFSlO1RFDb0A2Ke9IFWcvIrdfz3YkGU88Ct2PBfomT2M6bu874WBPQBYTjw0b688
                      ftMrPdhmMzyYqcU82B4qPK99lD3PrKM90D5WvYI/cz0Ciri9cnw+PXW5nD3T6Sa9QBtrvCDS5LwA
                      pTU71amLPaYLGT2YrWA8UK1+PFDzvLvJTsA9sDBUPHhbobz48pW88jljPYKUfj3YCX68J/mjPbmY
                      wD2qKTe9mkgJvbk7jD2TiYk9cpGHvdR63LwqGRC9oB8/u/lJpT0Wg4C9i5yrvR10Ub1SCB09ALUy
                      ujcrZL2S3189RJSCvZBMcjxa2Mq9D8qkPaIYtr04stS8CKHevOzElDyXNJc9d7+rPee0Sb2cBom9
                      jq+mvRigDLxf7rQ9NNGxPCBywrwAFla9oHKFvJhrQbwwqGq9GmZTvZ3Soj3d+Jm9ookDPZiwYDzU
                      Ipi8cSm/PXb5Fz35HcU9AMhlO1f5gz2DcCC9D9q+vTgCxzxgBq68byKMPZAxIr2AMSe87ZhGvUXe
                      vD2LYI09KiydvScVhz2te2e9AKBhObI8vr3ha8o9I+2WPcBnjLySbra9KGpOvLeLPL2A4Ma6dF7o
                      vCJZJT1Q1dO7urEDvWa9HT2dq8I9F6rJPcp9nb0AOBc7hvNFPYPnUb0wyRe8OJOHvA0ExL2FEJ49
                      EFB9vHJVh72g3OO81dmDvWJlXz0KYSc9avc0PTyL2jzjzrw9oGrZvHeokj2jXJY9jMXiPMNIKL2F
                      fpu9B9t3vUdVcb1stcK8QM8hvCDCoLvyBA497avMvWAYB7tg9tQ7qoRIvSCdtzsmpHY9OV3KPYNy
                      Mr2YqF68efDFPerJYT1WVH49+Mmgvfc2s70fUr09mRWMPeAUl7vhBKc9S6CXvQwYlDx2iKK9Lfqt
                      vVuGmD0Neny9YLJUu76jPD3odSg82t+XvTp5Qb1Vt6O9f8iYPd05j71qHES9j8DGvb4OBD3JTMs9
                      emN/Pa2ZSb0AgJ03
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA2MjgxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NzA2MjgxNnEBYS5kAAAAAAAAACBQ/7wwFG+81Nq+vNpeir3oMUE8OZSpPRoMFD2vPbo9
                      a/ulvSrUfj0PqZk9YMImOxiqJDx9P4Y9/+KzPYADabz859k8fw+fPePmrb2gB4M7MAMAPHy2+zx9
                      dFK9Rw+5vYnLtj3XWbg9WHYDvFAWwL3hYqA9SmlJPSqHzL3Y/7c8OyKDPSTn1DxG22E9HpYbPRBj
                      Yrwg4bi9hqsAvUDHGTuVuoE9/V6LPSgHRrwY+5m8fczIvQAwBrs2w6S9hKjPPE2bWb1MadE8Soko
                      veiuy7yilQA9Kn2ovRCDQ7zw/gc8yzSQPcB/HjtIdom8GCw3vC1yZL0eckc9QO5fvPwBA71eQgc9
                      AkG6vWFSpT3Q0Kk7xiA6PeXOgb1vpaE9NVqmPQzDj7wT8mK9gOuKPOHvhT3wxVI8lZakPcWgmz3F
                      17u94GuAvNgBf7yAeQm95CYFvcA7NLs93Iu9geSZPUz9qzzWu6y9NkQzPZgvJzwKVXm9zQJBvYp0
                      SD1jvkO9NLrPvC3XxT3sDIe9zrY6PUMumz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA2Mjg5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NzA2Mjg5NnEBYS5kAAAAAAAAALVOlL1jqGi9iA6jvW3PZL33ybQ9bffBvWBhorwQ7Hq8
                      dixBPb0ps73Ciyk9IOikvZOUyj1PwII9Y2mvPdL+LT34mr+8R/NFvcDmGrxi9WE9HnFdPajo+rzC
                      N3Y9tLCyPAm/iD3RArI9IHLOu/YsGb1Y7G68rEzoPKB/mTuhLY49dvUxPQCqP7sNhX69wMDuvEGR
                      sD2KERu9FDKlPIbrej1pHps9J1g/vYrJfr305PW8Cq4GPf25tz1OuE49AHNrujoXab25U6w9xA/R
                      PKBqvzyvD8u9kAYBPEDQezvi3R89DaetvWz/xbzi0WI9xyG5vdD7T7wpjJc9mDXLPN6sMz1KZ2e9
                      8WCyPQtDuL0C5Tw9erhbvdquCj0sp808H4DLvbCndDwmDWg9esU8vQAqpTkMqpg8y6qRPQHVyz0Y
                      FXk80L8fvKjyJbwxGMQ9qqw8vV7hh70CW3s9SVqqPRXujT1/qrM9Wl8QPQavlL0AuZm9fLbvPN2j
                      pL2NUpm9lELDPEBZ0rzJ5J09xJT5POLIkb0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2NzA2Mjk3NnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2NzA2Mjk3NnEBYS4BAAAAAAAAAAc2tz0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        R74NO7zgBjvHNJw6xzScOkX1yDp4qdo6R5yEOkechDp5NK46jXC3OlBjyzpQY8s6eTSuOo1wtzpQ
        Y8s6UGPLOsse8TrICxw7Oa+5OjmvuTrZEu06S6H+OrSRnzq0kZ86uIa5Ou0m/zq56fo6uen6OriG
        uTrtJv86uen6Ornp+jqCOxY71TdGO3fN1Tp3zdU6uiUPO+p+MTvr0wI769MCO07QNzvI7R07EwY1
        OxMGNTtO0Dc7yO0dOxMGNTsTBjU7gjsWO9U3Rjt3zdU6d83VOrolDzvqfjE769MCO+vTAjtO0Dc7
        yO0dOxMGNTsTBjU7TtA3O8jtHTsTBjU7EwY1O1CmPjyYWkg8av+sPGr/rDzseIY8byt3PJXHyzyV
        x8s8ph+bPH5Qkzyo3YQ8qN2EPKYfmzx+UJM8qN2EPKjdhDzeJWA83CwtPJOIkTyTiJE8VvljPGVB
        VDwJWqk8CVqpPFmokTw60lM8XWZXPF1mVzxZqJE8OtJTPF1mVzxdZlc8auAzPMhUCDyXyXw8l8l8
        PJfHPDxkPxg8ao5OPGqOTjzBAxM8VBwrPM1HFTzNRxU8wQMTPFQcKzzNRxU8zUcVPGrgMzzIVAg8
        l8l8PJfJfDyXxzw8ZD8YPGqOTjxqjk48wQMTPFQcKzzNRxU8zUcVPMEDEzxUHCs8zUcVPM1HFTw=
