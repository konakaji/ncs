N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwMTkwNHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDAzMDE5MDRxAWEuhAMAAAAAAACsm9s9ABi7PACwiD1KVlw+m7suvmomRz6nZpM+Lk+F
                      vrvYYL50MtY9IBGNvppgTD58jvA9ducqvikakD5S2TA+vfCQPkBSlrtYwHy+yJAivYivlL49iqc+
                      /HD8vWBQQLwaFkM+2u5ePizY3T3AcMi7sqoIPsRViL49zqI+TA3cvYK1bT4WVCE+QoIHPjCCs72h
                      zYI+mtl/Ps1spz46rWs+ynICPodrpr5a8Xk+uI0XPvBLCz5kgaC+KPUhvnC6mTzHSJO+vtxcPgNH
                      DL4EBKM94m6mvpfQqT5ucpW+G+Unvui2V70Js6I+dtFgvtDV3zytdZE+ZFiMvpN2kz5g6GO9Bm22
                      vUCssD0CzQE+GFgoPbB2xrxwvME8q7mcPv1ipT4hK5o+mKRgvkxE2L0ksrY9dgslPpPKJ7529zO+
                      0DLrPV02pT4wVyO+gFIsu7B+2j2yUGk+x6eGvhuiQL7gEQc8jAKHPWClIzws2cO9bCGzPUZFHD6/
                      f5s+oAKovTAjmrz7koi+YG9pvMBH3b2TNiK+gH1avtgWRD1K0Xg+rqx0PmD1gL3mMFa+4sNzPnpD
                      Tz67uTi+VpsIvgjKEz1uY1Y+9PPuPbjxMD2whL68+L0OPY1Whz62faG+p3SfPrw6lb6lxo8+Opwt
                      PgLRNj5QwIG9x1COPhguCD7AkNc7KBUfvvAStz3gVzu+8Z+jPs2Zhz7zj1G+WQ2kPghuBb6Mt749
                      UDAcviv3bb4gw0E8kAkivgCoRr4zUVe+fKKhvs/Ngz6Qmqw87DaKPQH5qD6Qvu+8RhW4veC73T3Q
                      ah0+kNa7PXgdTD1KmYi+u7WTvnjLAr4QW6s8gLoXvBLHhb46GV8+YttUPuDwDLyylU4+HBmdvpDu
                      4j1OJaa+uO1ePfhicr7M2PK94tpFPiphUj47oZU+fyaIPoa0XL7VpaQ+8PPmPD7LHD7ApqI8bqAE
                      vn5Plb6hGI0+XLrQPayM7703VKe+lCGnPciEAL4g01y++T6FPvLumr4AVh09YKIBvlA6Or7gBX88
                      /NKYvdjpQj2QCoG8WEEKvUBk97v2smI+NhMmPsYh/L2AZkI9VNuBPXZBSj4rHXO+6skyPs35gD4z
                      n0W+iIIpPe2Ikj4O8CO+KieFvoDwqz0OqQi+Zo1SPlb/OT5wqos8EikRPiD6NryY0QC+1C/nPfho
                      Mb0AYeE9iB9GvQplHz426i0+e2pTvmUPoj6OPHC+IJsXPnpdAz4osCY9jKzKPXPxlb4wZ9c8YKhQ
                      vaCrOzyQL4O+Uj5kPnCqML7azko+VADfPfHzoj7Lgk2+s90DvhCKlT0Sq24+PXaXPrDTuzxjPHO+
                      uFYcvXEqoT7PsoI+kKtxvnsXKr7jbZ++2OkNPoDyij1gapq+s5JwvnOQO74Hrqg+3+CEvmwC/r2W
                      Jb+9i3GRPuCYHDx8sI6++rVNPjQDm73Hf6m+AEviPcyH3j3gzXK83rNxPsDwPz3E6sY9Rq4wPvKt
                      Rj648Tk95IPwPZhRX748J/y9AYGKPgDGLD2lBZA+FttFvsBqJD0ADE87MNYYvoYgzb22MZ++1i0W
                      Pp/+o76zTqS+1GGBvoQIlL1cPpS9eJRsPfPbVL7SrCM+i0kpvkClpD1FO5k+Y35Rvs97gj7N+oQ+
                      cDn/vOCdfbzW5py+Y2NavjLWfj5+5kE+m3WKvgB7GL0opBQ+kMG6PDN8Xb4RH5o+1lQLPshmeb66
                      AY++6weYvjBJ472gSxO9FnIjvlbi+70Mg7O92MCmvqC5eDza4JW+4B7BPVnMkz4AQV6+CcOQPkkT
                      pz6dcJw+UA7iPdDhMb5Qrr+9uOGfvmxetz0ERck9uN49vkAJRz292pc+uqU/PrNjhr6GcgY+nBDw
                      veQfkr1qhUU+rq1XPsC13juWGmu+kBLBPUaWjr7KfTI+LmudvsCMkLxCLJi+HNO/PcqsqL7w17E8
                      9GeYPZ5xML4Axzi+x/mSvpVMlj5Mv5m9DJbjvRQghb6+wKW+aDIgvjselj6IY2w9ElpBPtDWOL6O
                      ITa+JHXbPTaSH76O+x++3nRuvjCBzbyw6aM9kh8RPualCL7QcLE8AG+kPG6WKj6QKI09+lxMPsMn
                      l76MWYO9+GyDvpeYi740vc094DMWvHRYoL3I+Gm+Sziovuk9mD6eB22+HtugvuKfk75NQqc+cImd
                      vLi5db4sVJO90AO6vegZO71gK5A9UK6yvMQJrj0I3WK+wp1/PmwmkL7As/q7mipzPrJjGT6QC/s9
                      QF7hu2vraL5eRYK+d0yYviObpr6mCEQ+EKG3PSxWjD1QhiY+hrvGvX49eD5wGXq+4KQPPRoUVz7K
                      FyQ+pk1nPl4mND4AaI47ABTZO1q+jb4ICwQ9lyeGPgBtHT34VQQ98gtDPkB4nDwQtpW92pFSPhdA
                      gz4bz5M+hUKJPiDGQjzShjU+iKwnvuk0nz7oKHy+gMxfOwhePz0A1zc95jtNPtEoiT6SW1M+xs2o
                      vhCzUb4TjQy+RdSdPmbCBL5AtR69s6NRvsbm5r1X0KA+OKdQPbwCvj2E0v49pbmjPolDjT40ndg9
                      AkRPPrixbb20J4S9vZGOPtyC4r3DiQ6+g9IpvgBtmr1rVoO+m/sdvmCxLb0T8aS+6bWYPiFCgz5w
                      21++QqA8PuDJJL2QRuE9wDzJvQjkSb4ibAs+4MuxvRZoHr6jjHK+ZZCFPmWWhj5gWyG94MzGPaAA
                      NTwrUSa++N1cvdhgpr5gSJ09kDGqPXRz4z2QZ7u9/cuEPjxqyz3aKYO+wFTgPQlTgz5W+2s+Zies
                      vfAk+T1zSIy+hB2GPdu+Xb5OIGs+IJSIPbF9hj4A8/K8MHR4vu43Zj7gpVk9/pqXvgw+771caps9
                      2ModvZCELb4o1Qa+IrKgvvZOOT4GWCM+O8YkviA2Xz0eg0Q+0I74PEYa/b3e7Du+Xn5NvlhNHz1h
                      GpU+KmQVPrLlKz5Ynhi+4LsuvdMogL6G/ty9h8yjvsbrOr5SlVg+MaahPgtcjD52cjQ+6w2WPsDD
                      zD2AkHw9m4h8vvTfir2iCg4+bAqrPUJsXT4AtDe+0E+tvcrJPz6ObhW+5XiBPo5RJb6cFYE9XgEU
                      PjSznr2QVJG8nkaAvi1tgT7YYji+IHhYPIBzHz44ARU+w9ZQvpAz9zzWYQY+YDSjPcVbpj67oAi+
                      K9OQvgJdh75b3iK+MH/QPXBFgbxeWUs+yEJIPSA5rr2UBss9r7OAvttOjD5qa38+BuYZPkC2Aj6g
                      TG68OT+APt7KFj5YBQ29kGjuPNMhlL6oKyS9DI7pPfgCFD1g03K+xmZQPk/Ohj5afUg+2ZSkPjse
                      kL5+EWI+ezqRPjiFAT0wR4G9pqdvPqMpgL60L4++4NsdvQJlHT7gZFy+3iUyvjCkUL5csaa9guAb
                      PgBdbjyeIKa+ExZYvkiESz2AsY48ViJsPkOdDb5zcAu+kMGivWR4tj2wQSW+m/RevnTk8j02BNW9
                      AG6bOwwGmD0grj2+ABzDu9q0XD56uF4+BjGgvuCOuz0Taqa+VAOqvayssb3rtoU+PoJTvkXehT4W
                      imK+ID1XPQAkrLvmpyE+CGUMPeCVEz6+QRy+5BmAvbXljT5sdve98Pqkvt/2gj78TIE9cL7zvMA8
                      pLxgCV88dMnvPWAzuT2LOju+jgZivmsTRb6Af52+HD3rvQQf/T3oTTy9cHDkPZPdXr5gFk29ykII
                      PpY4/L1gkuw91A6BvXCGJj6Od6C+hhOlvmwO/b2/ram+WhICPtjOe73LcT++3BS3PRI8Lj5uwXK+
                      gcWHPhtVgj4ACx+8kCSqPLt4CL4ySJq+AKicPM7LZD5WS6G+PhQ/vugtKz1fBoS+oViRPlXjmD7O
                      yjm+mscrPhBCP76u13y+JAGOvYPTaL6p75c+WkiCvsZ4Tb61EZo+INJdPDEkmT5ti5Q+3st2vmhu
                      PL44FGq+O3kPvnCCzzwWE0E+kFjPvEARGb3wgWu+uu9nPmSk3D3Ao2y9nhYLPgAmOryQlPm853GF
                      PsDE9z1DEX2+FkVuPrwqwz0wE1m+wAOHPNERiD5yr0U+wJT4PBCAJD6qpD0+nHfqvVwlmT3wyhg+
                      c7Wmvjgraz1ig1A+uB89vZLxYD72wkw+jH/nPYA6YLyAwP49kKipPMajND48i9o9fKiVPVgEmL5u
                      ryE+Ns54PiZ39b1AVjO+iO2LvraaeD5Wn6C+r2CBvri1Fz2ATD+9AH7JO8MPfb52Uju+nqFRPvnS
                      lT7LKmy+mockPoBKHL3ga3k8gEhMvc5sUT7AKnS+QH+hvhA7Dz4iAkI+kMddvpyXpD2WT8q97qNY
                      Pr+ukb7YS0M9oAigvmufpD5olxw9+M0ePtTuwj184ti9Zh6dvtiFBz624wc+S1eAvrLaBz5XtIq+
                      i/mCvrBs3DxYyz09JB3DPf5ThL4k5tc9/UOqPgKbh77QPq88gJEePTA94ryXT4y+C8NFvmMAQ76A
                      K7g8KTCRPukwpD78Rb29Af6lPrB/7T2YJ2m+khATPk5apb5eA1U+NPW6PXZ+RT6tOZs+wC1FvtDG
                      hD16IiY+KHyMvtZSKT4bUZ0+fOynPUPxfr4gYRm81HHbPUvJI75YSJi+BPvGPRiTLT0mQQ4+IM8i
                      PugjAr7AQlU9fN29PUfJkr7gWgg+EFWYvsQ22z3DkgW+yHpxvka2mr4YlxK+TOqJPcDuk7w96Kg+
                      vl1MPijiUz2yTYq+QIHYu2AbJDxcOY09f0eIPiSIlb5Iagg+fgRcPrQd1z2My4o95mSRvgDc0Lk3
                      DYK+ADVWPcAtlLxG5HW+2LNzvRgaFj2w352+MgdGPtAdpDw=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwODIyNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDMwODIyNHEBYS5kAAAAAAAAANzXuT2I56O+R86MPlDgyj0ZBJ8+PNrnPea/773gHm+8
                      ANmUujaDPL5z2iW+4HMoPjNEQL6XRJW+D3OivnZFRb5w1sI8xCGOvra/+73mDFS+heeoPkA5o7zb
                      HjS+yTKJPn+Jm76JNZA+TCW5PWDSYbzGg9q9dN+Svf2ulz4kL6s9fTWQPu/Ujj5EBeM9zh6nvgYX
                      3r2rtpE++/+UvmWelj70zJ6+ric4PrY3XD4TB0q+lks4vlj8Ez1mtTS+NkZfvnr+Mj6UfuY9ErwA
                      PorqiL5zbES+5s0yvlBDdb60wqC9zJqoPW5ARD7gTI2+QGQQveLtUj7A5p08f9GePnv1oT4Bu4I+
                      uB1DvlxinL0dhJk+4PQIvXYuP77SBJC+wshFPmRLjb33iZk+M2FgvvACDT5G2mM+4IIMPYAk57xE
                      +N09bo6IvjOmK7471AK+elJVPuaqUz5bWqO+YAI1PFx77D2omRS+KeKePpBE87xce5y9yMWlvsCX
                      Cj3TknK+BiF9vvQu5T3AJHE9wArmvOG8lj4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwODMwNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDAzMDgzMDRxAWEuECcAAAAAAABycVI9MMCaO5S4z7wAnv457J+6vDAMiLuaB7m94CfF
                      PAARmTuYeNC89pBgPQCW1bv+OkQ99IrAPJrJKj0AzSg6YTOhPVNxjD3wFsa9wBTNOh1jSL06ME69
                      QFnUvM3tLb0RDLY9IrwvPcHyuz2Tbki9zukwPYA2EDwpA6g9ssd+PWhWCjxas3+995dCvZotLj0s
                      brM8fVUevU0VqL1BZrs9IPtfvXe5KL0o45y8ngRVPa++yz1ocW28llgSPRA6Tjz17KE9rGzXvF6I
                      Pz0y0xY9iEzTvBjl+ryKukq9jbzFPeyc+jzoG068uOm/POgtvr1kbeE8/2atPUo1Ij1gXY+7yWrB
                      PaNVYb0aFk69B3KNPQAP/LtOTZa98MVuvE2Nhr1TgnW9SPf+vLTHhDyiblI9bqUjPfayLz2gi9s7
                      nRGyPQLLo73ddck9PShuvUH6oz0wuAk8hcyKPV1+cb3yIU49B1A8vazhuzwYe0i8qEXZvF0TmL1J
                      dss9eEuLPJr1Jb3icxw9uqMtvcyA1LyogvK8hcjHvZ3JYb3Trqg9FRS3vXreCb0g5JC8x31rvbop
                      TD0mjBo9AJ46uz9Grr3NFHC9MqldParQRb0aVEK9Rg+hveiOZbwdjJS9bAjevIwJhbxMybm8QLrB
                      vDnFsj2oEbY8r5DHPTU8p72YlBU8SqU9vcKaOT1rcMi9MDlivbrBfb1gs9u8mI+LveoWlL0jvZy9
                      uZLBPforYz3Cujg998bEPTaPLT1QYMY7fLLdPCCkuLxSb6S9kJUMPKqBnb2LmsI9vk1aPQvQjT0A
                      yWM84FzvOzoBLT0Hu4Q90ES2O1roGr2CYkU9upEGvcV/i71AD4q8lXW8vTB9R7xxw5E9UIIVPA5A
                      Ej2AD4G9EhkBPUBiL7tGtCU9g62gvS0oYr3j7Ka92Am6vfuQkb39Laq9NeigvQBVGTqAkY69rxOw
                      PXWCtD0mMiY96hA+PeBF4Lwi6wI94MhVvTnQyz0bfp+9msQJPaG1qD1AyDY84D2NO8BnUzzA+RW8
                      SHKGvSthj71DKKO9QBosvYAge7yUsoi9m8KjPc0MLb3WBwe92PJWvKBy1ry3onO9lI7PvGg93rwX
                      SGK9vVidPZPHU73aWLy9+AyRPGjn7bwaSIy959JNvYl2gT06XDi9WDmGPPQf0jwANxg7x9C6PU5T
                      Aj1QsRQ8X2+4PVYUXj10opG8IzO5Pa8Ow70KKHs9FrAbPYyWh727tZ+94IeQvEpvNb1d3bY9Ehsq
                      PbjPuTyaD2G9yZjBPQjijLzwTnW9cvuwvelIjD1Az4W6zU+KPcJwKD0dSnW96klOvQVSkj1xdZQ9
                      UCovvYKcn72SIjQ9aC3BvbQhzDy/OK89qAVLvC75aT3lMqw9G4zHPe8duz1tpcs9DDvEPDrDfb01
                      mZs9086vPevWnj1Gjpi9UhooPVDJlLvyAy89ITOPPTERtz1gseW7AtxTPdMjqr1VBbq9Q0+5PTjq
                      jTxNv7s9xvoiPYLCXD28R9g8wIkrvNergT0ASag8mcm+PTsFur3Ierw8Gz3IPYLNVT2gRxI7xDf3
                      PIi7gb1Zl7g9gP+2u4NLUb2QISW8NR3JPSDH07t/7Jk9eISbvE0bcb1w9AE8YIvKvBK8i73q9XU9
                      LyS0PUZMHj0z3Gu96f3KPduEmr0Ihp88Be2vvUDupTwQOQS9vDMXvcF5jz27Ysm9p29Gvd9Tvz0A
                      ajk8cFgwvLZELT1mlD09UI1wvQd7W71ArDk8yL3XvHUrp70gW6O7eCWHvPADary3yn69BAzwPNiU
                      2LxLFpi9aMuEvUDytbxxXoE9rbBhvVNfvz0ghfy8MwMfvawY4zzqCAy91kOSvVQu57xPH4U9e8Wq
                      Pd9Spz0sMOU8MbGTPbInTj3o4x08tYuQvX0STb0MoIa8YDVwO0+oqz1KGqG9nm8KPSSh5DxicBY9
                      lQyDvWDwQb1A9W29A8ZtvT3CaL3jxhu9WQScPbKoWD2CEqi9WNd+vLr5RL35B6w9saG6PacGlz0g
                      mem77oROPYrRNr2A8f274ISZPADrCb0Tqbc91J6SvIrHAz0L+rA9cOFKvJj14rzqhSY9fXuIvawH
                      +7wQcjO9Z+AhvSCGhTyaOay9wZK1PbpLS73wiy48qKRmPOBWvr30Aew8aDKpvEbcB72N48Q9ijdI
                      vddVSr2W2Sc9sgMXPeVlr73Z2rE9CpUaPYDeaLpiLEY9uDaXvCNVTL23FMW9kLmHvcPPar2av1K9
                      EzrMvQs1lb3P/qo9WMxxvCLxHD2AReu72h09PajqGDyzx4494/GbvepmRT1sRdO8QBWPPK1Ai72A
                      Jdc6VGS4PNLtUz1Tqpo9YLr1O+LGaT2kydw8fskWPeBF2TssKdo8QF1XvPC/SzzvEso9VJv9vAZJ
                      Dj1x27M9fB7ePODSF73ggZO9EphjPU1ASr1fMa49ACPtvEBZrrze+Rc9UOZ/PHv/uj3aEq+9mI6L
                      PBpgEz0NMXm9wNgBPNh3jr0A21Q6HehdvZlcpT2+C6e9+L7CvACfObwHer69pDnzPFD3tjtGHKO9
                      CWPCPWyM0TwQwYG95EfkPBBupL3Hups9kTuPPWqHML1g2to7gLnzvCkttz1x+bs9j2/BPTrid72Y
                      O7+84AkkvV5hnr3OKk09SeyZPX1Usz26Hlg99DW5vIJeLT2wRZY7zcybvUWYpz0NZai9WyKWvdFS
                      gT1AJ8m6AiVtPWowV7284Pk8YyN3vZKMFz1DAjG9YFWdPI3awz2H8iK9GvpMvXGpwT11Zo09p8Qb
                      vVq8hr3ZuaU9QDfkvD7QjL1xqsA9MFxnvIebhD2YLJc8SEG4PHUYj70EIM88C1ygPfCQFr0d2ME9
                      hlmiveFbij1vB689876vvftatL21KL+90vZ+PbQ18DzD/cY9MIW6vdBAFDzVspM9W5KQvdrlXD0q
                      uh69Qs5EPajOzbwaNHs9qEL1vGwn9DxKjXU9zMfbvBmyuT3SVjU9kK5ovbpAGz0AbWw8HXhNvezX
                      67zAUlG7mxeSvQlGgz1Qlie8wfK6PazUgrzaEik9NqAyPYa3dT1sj6E8MDiXOxmioz0X7K89Siei
                      vYBdy7w+hAU9z+eAPVUClr3QrgG8PqGrveCSsztyzUM9LIaKvDztBL3KSTy9J9KIPWzf9zxU6Km8
                      EBMQPFK2bj0aDWO9dn49PctlzL3opMc8A+KePaCPvjtw0j+9hvwzPQDc/LudITq9IkonPRasEb3P
                      hIA9U2SzvS2HR70G3wM9Ujp9PZW9i70h9aE9eregvUDmnr1QlLC989BXvfo8Sj0Yivy8rklCPYHH
                      oz3MGYy95hZwPfMWkD1eOWY9IDnmO+qRib3eOmM9GB+pPFpEfT0CazQ9oLgMuxjHk70wX8i9APoB
                      u82lsT277p89ycnCPVosZL0gvdO8+gjBvefJsz2Tq5y9dZiQvXVZl73wt7O9A/JEvfqzDD1Y6Jm9
                      gOuruxihmTzOvh89xkcDvSq0ZT3w0HA8EF0iPLg/u7xM+ra8YPWovKN3db0FIqI9ioxJPUUIzD3H
                      QHO9j1i9PY1Pfr3Auru8cfanPfpzE720GIe8v7CbPQVPhD39B5y9KuW1vQi+pbwvo5U95i1NPf2u
                      Nr0OhqC9DZjJvT4fl71AOLK8oHSrvADkH7lddE29LHuYvEBZtzytwqK9/SO6vVASlLub5r+9zIOa
                      vHJmVD0ZCL89gbqEPeIoTz1syJK8rQZwvdYKm73lMZs9moOZvShzNDyvOqY9d2NTval0sD3ABnu8
                      ovd4PbLgQz0CpEY9gGzXuxMwo719ksO95w1kvQfvMb0oVFy8cHeXvWDBkjzNKEK94G2Gu+3AnD1Y
                      RHa84ay0PQ/upD2BK6U9k0A7vRXRmT1uJFM999U1vXNFx73TRbQ9Lc2fvUynA73sh+I8PW+SPSeg
                      yD2ljbA9QIxauwChTjod8so9BtAVPaBqZr0iLkU9GFHkvGKwVj0tT4M9DEmmvCoUgb2feos9kgNh
                      PZndmj3zZrk9MFmFvff0hT0zbcy9gOZ1vbcZmj2haYE9QIFNu4w/1zwKol89GZ/IPQqDOL05z7A9
                      YgawvcbwYj29kny9TblIvRVktj0CF0E9AOl2vaI8ED3Yj7o81OYNvbNptL0IraA8UTSePWZalL3y
                      jmU9biOVvTD0sLuD4Fa9Khx1PfpKXj0ZYqI96E1FvECpHbvaBw69LQarvTEvrT3AQpi6sk2YvYdE
                      tj06TXa9quUNvRg9OTy3Dla95uAOPePqIr1IAYq9fm1wPXpkHz3vfLO9/k0kPXrBk72Ku7C9zSly
                      vYj4j7yP+Mo9rYxrvd01Jb2MdZ08aCASPPL7Lz0NaJU91JLDvJRErLy9v8U9SAeSPKrfQL2MKJC8
                      4Q2aPUdyvj0A+KO7l3eRPcL7DD0DCZM9svKpvUNhpr3MMJC8lNOLPC0MYL3F56i9Z62yPeK8PT1A
                      ZA08LfhlvZWKmz2OOaq9cgh+PaDdm710F4m9DeeovRh7Xjw3B6Q9NAnrPJA4x70WCy494hJxPYAZ
                      2TpIUoe8zKS5PLtZpL3HyMS9TAATvWN3tj0DFyW9AFiCuvXzs72wbWM8U91Wvd3myz1SGHw9zeE9
                      vclpkj36t3M9m7ilvTQX/Lzx8Zs9KrtZvegLGrwypQA95MwLvRgNabwxt6w98qYRPXPHkj07A529
                      c4izvcupiT3teoG9gO+mPF89kD0/Y8a9OJO3vcjzurwAsCA5776EPRrmPz0HBH29At9gPZ3AVr0U
                      YZG8UEdUPO1CuD3wh0C9XEQQvULIID2mZgU9MyiwPQ6koL2dvI29ZiGZvah8vb09E5g9OkfLvRip
                      OLziyDY9vdNvvdATSLycUeg83Yg+vQxQ67zwDTC8oQ63PW+wtr1o9Ug8DGafvMw56Tysg5o8QHjJ
                      vHi55ryr6aA9USaNPZUJrD0k/M88d714vWhgZLxtPk69WE+qvE+Eoz0dKRu9jWo7vafMRb2Xali9
                      YMmBvSCTy70R+po9AAz9ux2uxT2YIas8IYDJPaBFbb2z+3a9Sm4zPUxbDb2TQLa9WEmmvUolbj1A
                      tsM8rRgivbA54bu9rZu9FauivZATub0tKZG9JzSMPcJziL009Ou8z0CcPcC8ujxxbbY9GAQePICQ
                      wbuoH7S8nV4qvSzu87wKZ3k905qivegunLwo1Jc8IXOgPWjiKDwyJ2w90DQovIlsmT2QXWs8Uzyb
                      vf5zLz3Y8EW8EjWSvZ59oL3IxaE893a2PavZpT2AHEG9gomHvcXRsb17Lcw98MkYPLDsZ7wWd049
                      2Fi8vBs7vj0AM8O9iuk6PWACGLuUEti8tBnQvGrKxr3QclG8dRWEvViPgDzg37G7FIjePAWXjT0O
                      WjI9GCouvG6wbD3+/249wNmivVBmVb06uxg9/O//POy5ojyGbjk9UOsXPACIGzrYRM+8KBhLPC6t
                      Oj143so8i66aPSGypz0Ac2S7QKlqvaAaaL2YbL68+uBrPUC9EjwukjY9iI65PJrZMz3KgiK90uBM
                      PUBen7zyGyk99YGtPaZ3B7016pS9dmY5PVYqBT19Gck9qAo/PGaRSz1t1ZK98SCLPTcLLL1Cb4i9
                      4MJDvY84vD0R1cE9gEWuvY3Fkj1ASe86J8pfvZP7mD2+Tgw9b2zLPXKEor2guP+7cT7APfB5GL06
                      TxU9CKzIPG9AqD1CDMy9QHWivN83r70bWLK9A/SPPRnNlj248oK9tNfrvFJKND2QqAG81FGivJOf
                      H73ngmy99LeqPIoDSb1MW4C9QBx+vWaxez1A/q68oLsnvbJnRT1ASJ28QtZMPdhGzbyFuIu9MavH
                      PUMkxD0AApg6kINJvLDlnLvavrG9k7vKPdHBjj1yjJi9zgYlPYbyST2Nz6q9rCfNPLgHzDworCC8
                      qKc9vHKlXD1iJn89O+7HPeyYzzyO7m09damuvaiFDTxIo/K8sGC4u71dqb2paZM9crJmPcQB0Tza
                      5am9+mEivZgWL7za10E94O2XuxHQoT1o8Wo8WC8ZvBLlHT1gt/68Kl1qvRllwD0S1Bg9QeqSPVAM
                      kLtg4YS9uemOPa49Bj3SOws9tMjuvHrRXz1//Lu9iPnSvNusnr1yo5W9t3ywPT3arz2/Gbs9c1Op
                      PVggn70An5y9SEyUPI0dsT1k9wq9E+2VvRjYp7wMu4q88HgfvDRDg72T6a+9yiJKPXYknb3jSL69
                      4vMQPZa9AL1wnpm9mvuzvV5hUz1AAei6NlcTPWPYfL1oL3q8GD5nPI+gyr0YOck8Wb+/PcAhMzxA
                      xH28i+y5vQfSRL0R5qM9hspPPazF/rziHy89SHeXPG3zg731trM9suASPVkitD1Ti8U90HhTPJ2q
                      mb2gNKQ87h0LPRcHbr1gxx674NChO+ZMIT3x1rE9vXOfPZc0VL1Ai8a8oUinPX5MVT1YIzS8OkNl
                      PRdlPb3GmR4940KyPZDchr3KtmK9BX+1PQDkt7zgUtG8bEvzvB36kL0ohIQ8A1LBPdaTOz3Ay6y8
                      wBwTvHqUrb2A09Q7hFTnPKHjvj2KnBI9/jISPSRI5Dw64rW9s0NyvQb+Pj143sG83P+EvUzLnbxj
                      Vk2916NLvcD4djzFjLk9ejoUvcBwDLzt68g9mJFbvNtkoz2fwpU9wRTHPQBegTz6/sa9LWV0vaDX
                      r7u1uae9UcvHPRbVmr0ARHE5ClmfveAe7Lu874q9hvKEvTzDB70jTZa9qp1APV3DX73OMXU9QKBW
                      vYPRbr07abU90IMkPKssgD0WpQ29XL4TvRJsTT2t4i+9AS20PdPOkD3+9CQ9ADU5uztRlz3ykMu9
                      sHCXveqKQ72YJrA8QAkjO4BmDjwWqiQ9ePbZvKJTRD3jmLi9FsBuPfCAfL3OUAc9MbWmPekEvD13
                      +x69qhFQvbkjjD0R1q49fNHWPPKqIz3hqrI9Vhemvb4BiL0wwg08gAmzO+xPjbxSz1o9YbmEPSBs
                      nbw3OYg9zDK1PIbWjr3skPq8rk1LPYI3Rj1ZhLA98YGJPYNHqT2rNJk9gF1YvL6Xfz3ez569MDJP
                      vAg/rDxADoU89m17PXeuw72gIUm9siK1vejgNryl6J+9GLC1vGlhwj1S2XY9xgY4PfZuAr2EWfA8
                      Y/dnveCOojyKG3S9rIbVPKB6ljx745Y9qLc4PFfrsz09VVO9qOvZvBwzg72mTSc9CD6evADW+rs+
                      Go29LLGVPO2YZ734Vpk80aKLPYAF9rtsic88gKTrO8OVtb0PiZE9+ySQPVjmybzgUx29K6O0vQtg
                      lT1kLuk8rKi+vOh/ZbwC5wM9noFjPfiT57w6h269htAgPdjiPzzQ1z69LLfrvFihHDwSIHk9Td2S
                      vZhYEzzkbuY8QbmOPRBpt70op5G9A9BGvVoSPb1AibS6wHAaPI5AVz2n+bA9eOiXPMYOk72WzzM9
                      Ys0OPVRZuTzY8mU8lLCdPLb3Hj2Rh7M94W+bPU24oz0S15u9lJeGPGjFQDwzpKq9rmgVPWuuxj0N
                      Zqe9vV3APfNMoD3wtby9B7scvdh9Ejyi6q69/HEXvcOGer2APaM7tCyKPF12q73/Y4k9UYOcPXKa
                      RD00y9I8sLrtu3/8lj2Cg2g9WPzAvTPBO73gFQ69OsirvWWvjr3aDBO96ZiZPfehNL14/qa9YKcl
                      uxGMvT1gM4a7G5yKPT1utL0OtYe9ivRtPZN5d729HL09YTqSPegdZjwV8aa9GPqdvED2uzyiGAw9
                      4wLFvTA6G71a+AQ9CEj6vK0Kmz09aLu9AramvZiivDyy/ks97D6CvDpMSb0uAZm9ujwoPTBHiLsW
                      JQ49bak6vYz7+jxWpmc9Fxc5vUPFtz1g0QY7Ln4vPSi8B7wAUHc86Y+VPTCRHr0TYFq9APKNusU+
                      rr2yN349UouSvXAgDTygftG80ajMPeVVvr1acT09I+pdvTlEiz0q0T49uYKDPbL1Ez3S6i89N4Ws
                      PcLtaD1VWb+95muYvWApyrygrhK7jltXPdciX73idaC9AIiEuJ7sjL1AXb48DIm9vEEqrD1Ahpy9
                      GiKUvVDv0Dsghoa8AD0zO/LmDT1e3Dw9xf+GvZoaZD2QiFi9jD3JPBiNprwsm/q8csSWvQYdAr34
                      4dy8ePmfPFetpD2YxAg8Wo92vWPXdb2AocO9ZY2UvZgg0bw6BFu9a2ujvYAtijuu8HM9ea2+PTpo
                      ab1V2pY9UFjsOxg3kryBlr49HvYCPfsMkT0AUIo69CbAPMIfxb1LMKC9jEGxPEQM+jxDYla9dVmG
                      vWjlyby0Efk8+vAWvWfGyD0Yeua8Q6TLvaCNgzw9FaY9P4S0Pa3+WL0SF189iiAMvbvGo70kN+U8
                      OhhmPX8XvL3VBrO9avkjvTJxTT0dMT+9CSirPbhpjbyDosi99iN7PRL5Wj0Pzqk9WJ1GPFrPBT1Q
                      xOU74pE7PbABc70oBZw8udCMPVcUHb1moHg9AEVAvW/1mD2sJM88LO+fvBdqzL1uRou9oDvnOwDr
                      0LwmbCM9yEmVvGirsb2ef4K9YqlWPeCus7ss+rE8vY64PYDAG70Fm6O9C2/FvV1edL3SjLW98F9r
                      vAAiz7mNyIE9vQmlvU6bqr3olaq8mCUlvEYPTj1T2Du9CUrKPXImeT0R+Iw9BodYPRLQKD3ooIO8
                      KWGWPYg4zLwAhEm6q0+ePXIWJj0DCZ49iYeCPTMkvz2z81q9GJhkvJdYxz3q7V49alkjPYisrbxc
                      btc84Ifju+xm27xghky7KkxLPczpF71mXxs9ALT5OwpRk72f8Kk9eceVPUPKnr3Qigm8oLvMvZQX
                      8rznTDi9MBBoPP80gD0SznQ96C5vvM4vmL0NS2m9n029vc6rnb3PAJc9CyyuvcAAg7zpvr4902qX
                      PVr/h71YAQK8MDzGu0nEnD1oAmu8+HyoPMCZertgW9K7HK2Dvb3cbL2y7MK9jk92Pc1OK71yEI29
                      Wx+5PT1/nb2AQcQ6mQyePUA9BL26G4O9CQ+0PVT5tLx9/Wu9owErvVq7dz0Hj8O9f0KSPZBLFr2Q
                      MYa91P2nPEARvTwAihw56K6ivDWsuD3YcSu8WG6kvMw92TzSHwk9Wde7PaL+Mj29EX+9A8qrvVIx
                      hb3+WxM9Mg4mPeouTD3Ysj+809qpPVTd47xyOnM9gf2wPfEglD2kRuk8Eu95PQFYhD0y1nw91z2/
                      Pddxrr0ancy9agMMPXTp6rxC+T89AMrsu+SW8TzwaQW9cyasvaWFr73a4Fa9cnCYvWPUNb3Y8F48
                      DyC7PXpnXT1/D8I94j5LPazej7zRtI49mxCRvV1xNb0wsii8z9KwPUCFCLvujIW9WXCpPV1omj1Y
                      xQS8Wnl/PV+Toj1iJEI9slJTPVCkQ7xAYC+9sJdYPNkGmz3nmnu9IW3GPQMJqL3527g9sf+nPVAC
                      AryCT1Q9QeeAPaA9YzuSFqq9AH8Hu1iNxr3Rhcc9ovRuPRjgsTxgK3E7cCBPvKgcErz0Q4U84Isw
                      veBDgL2Vd4c99MDivNDqM7wCwMS9i9rIPUALbrslAbi9aDGFPFqzdz12rhE9igCyvaZxHT390oy9
                      DeM/vfttqz1dnx6984TFPTrRlL3tkpQ9AP4wPF3arr2ClSM9W+bLvaJgZT1Iosm8i3CSPeLCtr0I
                      bJI8zyymPbo5RD3pP6U9DSGrvcqJir2+LGo9S/bEvcIhmb0MFvE8eqyJvSJBKD3GOQm99P7VvLi3
                      o70lhp+9MBo8vVN6hD3sMYO8rqgdPVNRjj3wES68Us57PbDt8TuL5pe9ujt5vc2go73yBBA9M2gn
                      vTanqL2mbzU9rTKBvaQa+TzCaV49hU2TvTttpz1os6o8AGDNOPoBxb2PZoo9InMKPc5gkb1ghhg7
                      mptMPQJ8LT2AeUs6sG7qu38Vsr2GEhW9V29gve50Oj3sgBa9M++oPbBQUL0Q86i9gOEqvKjpur2k
                      iNM81hVZPXE5iD0UQQS9RV3JvXSFrryQpaS9StY9vYC3s7sUEcg8AGBYuWzu4TwpbKo9gTa0PXpm
                      MT1XW669ws6fvSnRsz168ba96jdtvbuphj32TjM96IGRvYkXsz0drDC9QyFXvYDdjTwY8aO8Vg6c
                      vYCVEby0eKc8emt1vXNmyD1R4IA9UIxrvPJDUj1q75+9FpSKveAgwjy0Mr08FXW8vfJ4m70APF28
                      ADuFuVWmjL3NNGu9K3i4vQ0VnL2oC0A8gENBvNDKXL0AB9I7g/OevZLyQT02IHA9KEeRveiPt7yI
                      Ba69QXOCPYeQT72sIvS8qEljPJfSPr0mi149UIIRPCwU4jwC+UA94CUGvZC1aTyD9l+9DnGHvWAY
                      bDszHpc9EgUUPaBo3DvYrQq8B3JVvUXfvb0Hb0m9YlulvSMgxz3Aqyk8Fzoqvdq5Xj3CqFI9Y/qx
                      PQBGuLoA+ta5isq2vSmGiz1HPEC9bMmOvPrsdT3Cplc9aIbdvHkJrj00mMI8trcKPT7NFz3GVGs9
                      jYqNvUcYpj0V1Ju9aJx6vKAs+zv/Tr+9TkRbPeSq3TyUico8yamZPejYkjyw0I+7AI9PvdaPAL1N
                      37o9rastvTNbO733Mrc9xRePPdKUUT2GZJq9OJehvQr5v726sF29h/6TPfAjELztoI49jJavvCDp
                      7ryTSMG9uUS+PaE3hz2YJAq8WkGnvX53gr2mJIC9DdqPPSBJd72MYxO9AIKMuev9jz0Wu1Y9fcSf
                      vbfXw71IXsu9IObmu/eXkT1gQ3e92J1QPEoOmb3Q9tA7ACSqutfvMr3rNJA9MvrHvfm9lT2TrcW9
                      ANEaOmMZhD0UcKE8gDs/vba9Bz0wmlW9DBGzPLA4Xr1jwTW9WNYjPLJUcD00RZc8+amyPVMyWL2d
                      nEm9Y2VNvZdFUL3jyV699ikCvcAWxrydXMA9Ue+IPYCJtzsj8WK93NXPPH1Vwb3Q+wW8GdmaPQX2
                      or2wx7K7tv9gPWhiyL0XBk+9EuhSPYAv87t5Dck9LO+EvMBrrjzUTd48dl6Avdrvlb1azB490Du2
                      O6CQzTtQnxW86OM8vBPShz3I+rE8YrxRPZGMxj0C3C49AOHkuzIKSz33Tqc9KuB3PSzqhTysSPU8
                      igwpvXr4YL0fr8q9tswWPZiAnjwq5DM99BebvIrWGz3HMiS9SNXHvL31sT1GIDU9XQXHvXX+jT0p
                      8Ic9LeYdvTRaEL3g2sq98DpOvLGyhj0ypgk9Yr4lPYoJMz3D6aU9YFsXO3OgL72SxGs9jOTRPOrf
                      PT2dvja9LKDfPCaxBj1R4rQ9u+DAPRr8ib358bk9NELoPALLbz0QoiG9ipQwPeGKgz2LOZa9wENT
                      vDtKq71554Y96jk/PQDWv7lQt0S88TCVPXpSRr3RFrU9Wn+mvfDWOr36XAA9c0BQvZifjLztBI29
                      kaiwPYBoxDsJAoA9g5i8PUr1Cz10iew81BisPLVixT1WfAY9EmZ7Pdeear0KVg69irtWPY7HIz3L
                      hMc9Fw1hvdAoc7wIybO9CsSrvYCMxruLn8Y9oi42PZlRtT2g6CK9zjB7Pd9prr2DNye9V8E8vZPP
                      q70cTtw8rlU6Pe/2yL1hyok96BWbvAX3k734JK68WMMtvBiHcjxP5YI9O32fPQByOzvq/0A9ABh8
                      uDhXxDxTRsg9MBtYvRlotz2InZe8xKsLvY9lyz0Ma8m8dIzFvAzfujxa/1W90Gs5vCAGfL1uqC49
                      AiaDvRBgFL0iJD89Ip2dvY4OZj1tBkS9TqGPvcZ/ST2AWkk8AAjxO/TPgr3t/MU90BhUvHL9AT3Q
                      sS+86yCevXh3lbz8FQK9rVwxvVjIgDwAwLY8kwwlvTq7Xb3gRJW7TP/BPPrpIj3m0QE9K8WtvZKK
                      dz3vYr89+S+dPZOZqL3izEE9yADlvKGhsT0CRHg99XiAPZWLrL3i4xc9KEB1vL66AT2PU6695baL
                      PRcOdb2pS589OtRFvRmttz1Zl6s9UfChPfSbhLyK1n49KFdSPCIYrr2C9ce9WDwTPELLED1uQZ29
                      gPvkujIWk72nB3a9IPIuvQ7QXz2eSUU9bQSoPZDfSjw3uaI9Wg1EPdcDs70Bc8E9dpeZvYpVub0A
                      S7k5kAlIPMDblLzyHVo9uj6kvcA3ar3vfsg9gDIEOtOcV704/pQ8fYDFPVrIQr3+rKC9mNYxPMBj
                      K72SGlg9t4oavbAVUb0oz5y9SUKgPVAE1rtXpaY9+qNdvQBm7brq3ig9MP3Tu3iWqzxYWJM8kIBP
                      vDSCvDw+JC098fGXPeBB9bvCGFs99NYDvcAtSDugjMW7DGvzvFbxfD1yzEw9VDfvPDuysz33yLC9
                      4POxvZ2aO71g9e+7xi4IvWUHjb3kVfQ8beWtvSxy7LyOgp69+vpvvWzsqDxaPcy90sOXvWCXkLx4
                      Ud28/sqCvaqNaj3wZVU8UJR1PGNhTr2CRJe9EEdaPD18J73sNvm8s41zvQo/QT11HcK9NuogPR3S
                      Z71wgre9KBGtPAAiozyUhs681s1TPWyNpTzcHv08viQKPRAKML2sku88SzafvQCN/zsA5l+8NezL
                      vQMKlz2U0dE8zJuivO8OjT0J0ak9qr9ZPSNYq73bzLm9qMiXvN4MZz3jkka9+BO1vEyIq7ygpo88
                      IM2nvF7tQD0ti8y9ABz0up1jzL2ASMA8FU+TPV1nn70YFlO8UggPPTDMA733UsY9irILPR2KV73s
                      Fsm8AE2JOdAJf7x6pEA9UJsCvbe7oD0XoLq9pqQlPZsujT0YsAg8rq9QPZWHhL2wBJa9yTmPPZKk
                      Fz2WeBC9LHrYPPMFor37vp29uITGvRw77jzXyp49gHQSvW9ivD3WJnI9C0+xPZzcDb3QvzW9epKU
                      vUewy70TNpE9cNUuPKhIhr2cyus82iULvflwiz2VSoC9NBi/vJWlqz0Q5Q28gC3MvZskx7313o29
                      2jRmPa2xwL064AA9AHdgOl9axr2wWVe8IECDO7gEv73skKC8arervaAa/DuiWjA99GDJvNjssjyz
                      7Ha9aK57vNcaub3lzso9z7KEPVfvyL2U+PI82oFlvbrwn70wT2Q8w9G8PahOiryVkr29eO2NPDrs
                      Mb0phZQ949a+vRBCJTzQSA88Av16PUAaCLuYu8S9Wwu2PbDHorvDH2q9gCCPuz7XIj205808oKuK
                      vO4OJj0wQ0W8nEYLvavJmj0TPok9oS6ZPSiwZjxVO489RSCPPVAOkLvKsjA9cCluvCebnD0Zl7Q9
                      rqEoPdhDZbxvA729SMiCPKmDiT1IM+W8bEDAvHAEmL09ZKs9sqEbPeAnobte5Im9nNH5PENqJ739
                      RbC9QJSLPHo8Sr0qjBY9WEX8vEa9DD0o2AQ85xuIPbbHKz1NOl+9JIIRvTmvuj2qCnq9WDoOvKiC
                      v709Pru9wJl1vIpGBT09rbK9+3KxPcA/crwzUaO9DFnSPJXewb1AjmW7IMgTvQX7hb3mtSE9/lAW
                      PWpPtL3/RZM9nTaUPcDnC70wqTa8ACiTuz0cyz05WbQ9ZT6bvepHVT3QZxU8B9SCPV0+vb3plJ09
                      fV63vWfmrT2QXRc8t6JgvdddI73e2I29mhlLPaJ0ir0Kemo9sDc+PMV4uz203eG8i3KaPawA5TxF
                      AKo9UOqrux1jKb1CKWY96IAKPKApTr3gn4m7CXS3PcVypj3mhIq9KskgPRPGx72LMoA92BF3vDLI
                      bj2wyRQ8OLiTvIIgmr1A0e+8k9KVPaMiKL3hcaM9Sw+1vV+5jj3QMiy8rlZlPYAFADrAWo88DJzh
                      PO/4yz1gEoC7Dt2KvaSB3TzgaIC96dSHPeQkzTwwY9G7MnwBPYdktr2KFAC9u2msvShWfjy0Gcs8
                      ePq+vG07nD3XWr+9ey66PQPKvD1YBUM8DDYQvT1Mrb0oRn28srJXPeg2qjxT55C9zFvPPJokVj1w
                      ZUq8KoB3vfLYUT2w7V48GF84vOAzozwENP88L424PSeweb13aXy9DOXqPFp7y720RxS9IG73vAn4
                      xj3gLK07IUHKPVB1dry0J5o8sKFGvUDgAbyYhzW8DKvxPBfEhz2qQxi9mCNSPKjsPDxQkSa8HLsE
                      vZo1q72jxKA9PxLJPWigNjyz3rY9H4i9vTc1nD1mvlg9Epw9PV+CkD0APXu6jYFdvfTP0rwX5EC9
                      AHhUPHDHH7yASgS84FiKvKAHL7sbysk9hb+dvS7vRT1A8SO8vtU6Pa+CiT24n5C9oEkSvQPkij0n
                      12i9ZZirPWwwmjziiVA9TqovPf/4gT3IlMm96CwavDQ61jy5fZ49kFoRPMRs5zzQFfC7gJ25Oujr
                      Ezwm9DQ9aDijPDujj70ArH455BrqPCm/oz2+RVE97VGbPWjla7zbIZQ9yaapPWf2tT1aWlK9cUC8
                      PdK2p71iUHk9nFnPPADJor3YWTM8kptNPdB9r71NORy93wm9PYOhfr2etAs9tM39vO3fxD3kOfo8
                      zBDTvCNhbr25SKA9ZD8VvYjJwry0vcW8QFRJu1LNAz3Evhi9elEbvdLpCD0gwJc8gIfLuti5rL1g
                      FZ+887YkvUA1czttqpo9rQZovTpBWr1YaqM8Q7c0vQSc4zwfvYA94P/lvPdXLL2h98c9mD4xPOKN
                      qL35lpo9mj0Kvdigrb2YW7w8kPpQvMLNp70K6Bg9YMILve8drz3kktE81pMOvUCGW7ym/Z+9yg1b
                      veJuvL1jqma9hHDfPFiIpLyxUcg9bUDLPf7SGT3YNZu8EGhnPIS4gb1Y+o69qbPEPezCwTwur6i9
                      /u0SPaxOmzy1Iae926OiPcpqcj3Jr649QP96vc/jvj1Oxoi9YDW1O+AQ4Ttw6mw8AN8QuknFoz2o
                      SmA8anB5PdosdL10n7W8FslfPfelLr0pbqw9GmtjPbCZFDwoQX887s08PUaNEz1G3ZK9lCj0PFpd
                      RL2P67I9l63HvUBFEL2ttJc9IIAHvQo2ID1ablQ91NDpvMgE2Ly9y6M9IHvnO0ApFztMCLO8QqmE
                      vSO6iz2Y8P680EV6veiHbrxHCFG9igNBvaT53zxq8I295h19PScIjT226ic9vQCZPTg++LyATvK6
                      4oYiPZBoAL0MCfU81HK6PDnkqz34d6e8QfCXPfHluD1otnQ8nYO0PeCrWL35d6Q9erFtvXLQWz3k
                      Lu88L+OCPe31kr3FZYw9hIPSPLqqrb2V/II9Qr0kPdTSgb2NP12923XHvXoPOj2Mhc+8d3qqPRKQ
                      bz3doZq9pVu5PchfxL2l2aG9ghIvPeOJl72oAu+8HR2xvc2rnL2AydQ6+tUHPaOmTr3AqAg88ZGK
                      PVC05TtDRcE9Wr4SPUxegTwnTmG9ZfWrvWx0oTxogmW8ABTHuE2Xtz0ogbk8oEPiu8zVsby1qcu9
                      tze2vVBVa7wX3489OvcnPcDccrzggPw7M2WYPcaLeD1w3ia8mlULvd2Nq73D7ru9c6wkvUV/kb3W
                      Dgc9mowQPUzyzLwKp4+9w75CvfGVsT3yZUs9VRTAveajOT0jU1y94UmaPbrpK72A5YU8sj1ZPf9N
                      tr3V16A9dscHPQABRboQ47e9AA8tPOLtiL0wR9q7KNMWPCFFyz1CGD49UCDDu4C1r72g36G9Jnog
                      PTQjgr0o/aA8tMKpvNApZL06HTW9DpxsPYLEJj18x4y9kb6CPTC9c7wh4cI9RrAEPTm3qD2SpBA9
                      EuiSvU6bnL1Ad5W6sMAgPGm8tD0lSbq9QBMhPE+Psj3DwEm9dEDYvC1Ytz0lmJu9NJipPIDaY7oB
                      g8U9K7/JPes5vr3owkq8t0s9vdAHxTsNip49lTOnPUBrYjyYi5Y8nl4rPRK/YD1lZok9Y9ihvWuf
                      kr0ffpk9/RTIvRLAHD3bk8a90DewO6BcZL2sx6w8DVSjvWlqgj0qzww9AOd3O9gSoTzgq3C9uAOw
                      vSN7yb2pi4M9lq0BPWdrLL0dR8Y9QnYjPS3elD2AD8m9bU5pvaGVqD3OWBg9eDSmvVjCBDwAKJs8
                      SavLPZj1PjyMdf680NQCvC1gTL3AQLy6JRalPaDeQL0sKe+8uwurvSnFij0tO4e9xc69vYAqUbxa
                      XLq9Vf2fvQAbUbzq8a+9TvVsPTAorDuzBRy9G5e+vQCTILsm6Yy9uWGIPRr6YL2ORaO9XYyrvZiJ
                      qbxTqsK9u96QvQAs5Lq6kyC9GO/ivDpZQT33AXG9EMYXPOobm70Aw8o5uNuMvRlIjj11l6e9s5O9
                      PdoXAT3aTxk9x2HHvWArfzvBwbQ9tRqpvZKiUj351ps9vcy9vQADW7p7EMW9Z4crvUp2r72g0r+7
                      luFpPbLvy71lsKI9eEmCPOZJkr3QJYA7Gl2ivdrptr3YWqW92B0nvKjuxbxIbvK8oGftu48ErT1C
                      0Dk9Ct0QvX+ZwD0okzu8B64cvS1XnL2yt7i9AM76OYrgUb3UCd88GrtbvWnWoT2wlm+8NzCoPcpq
                      Nz1KOx696iJ6PUpPTb1tQ0q9FG3FPFzA0zxIRru9qpoePQNjRL2YRkw8DrYZPVhbizxolZ48cr0J
                      PYpra71Ahl47UiMFPc6AET3vhcg9cCNuvC1bQb057Ys9t3m8vXqlUz1LLa890YrKPVvesr2A3uI7
                      QZypPVOCwL3Tnx+9ZeS9vRInUD391Z+9gCq/PFJlMD0Ac8M5Oo+IvSkzxT0qoCm9OfK+PVKgBD0z
                      Uqy9gDuZOm9Gkj0CBpu9s+pcvYLkWT3CBzc9Q5M5vRpXSr0a9B29ALrhvG5LMz0QunQ8QwmbPfg5
                      jTwrq4+9AspCPQATb7yqhn+9DAT4vN2Aj71Zp4E9YFCwPPjBxrwn1nm9TRW0vZJUdT3ULA+9jb+4
                      vTZ/Az0S+Rw9sEDzu7LqLz3QPpE7Ja2YPTRwuzweKUQ9YDNyuwC4GLsyWyc9TUK+PSjDfrzQzLc7
                      6J+TvIBFyLvTqqW9sJzVu4iyt7xBiZk9LQGKPWjikb3xY6I9B0CBPcKkZz0pSZY9CyeGPfdaX70y
                      7wE9Pi4rPdyOg71d7ji9kfaCPRB/Ur10wYw8JJr6PFCe0TtDOba9ca2kPaSg8Tx8dM88tKaNPKCm
                      crvjDKy9AMimuS7meD0/zZk92VyePTr4Lj3A9Ss7zDr8vKaohL2UQIi9uuOtvSrBXD3wrGk8UDQN
                      vCDRiDwy+0c9IP+Vu6H2wD3g3bY8bn09Pe1WWL2RFZM9CCbwvICBqTwoLAI8GnVnPderzL1MEK48
                      MN1aPPjayzwMRuG8RzZivYULtL17L4+9/kddPcDqPLyOAHU9FLicPDhozbywwYC7G2uvvYBcFTzm
                      v389nLL0PMGjyT2MVIE8oHKaPIsflL3dsou9tu50PZO3eb3Fw6g97YGWPbYnXT3uqh49lOD7vPgT
                      w72yp5m9aHGWvVhPaLyAUgC80m0ZPflQiT0U2ci8G1uRvVlykT23lSK9oZyWPXd4U70YvIQ83Jzt
                      POb4Xz1pYZs9NlssPTM8ab0SHmA9jmkzPaCEVTu5eqA97WeCPbVIjr3Aemq9mOM7vJhoZDxlF6K9
                      nXWvvUOCJb0U59G8s25Gvfn2pz2RIMs9yGT5vLbVLz3Q/PY7Aae3PWvVuT2QLWg8QbydPciepTwM
                      R/g8h3IwveKjBj3YOFs8/T0bvStiyj1FP649ACdSOtu+sz3InI48FKa0PNNggj1Ik968G+qjPdXp
                      hT0JZq892E88vFMMwz1P16497uNpPY49Dj2C0H49TGOJPE1bG71A/yY7rFWMvcD5QrxbQII9z8Op
                      PWLgmb2SSwI92q1tPewShL1RwZ49aGeTvcxLkrxY6468kyKQPajyhbytxGu9ON2fPCQm7zzQuaS7
                      k1K1PRgbBrwYSDk8U6rMvRNkrj2614a9a+KsPQAC/7v1zcY9TWU4vQAPvLwHxG298JKrvUPIQr20
                      HYC8tpNoPRZ6Gb02aAq9rVbMvSBPTb1aYlq9sczCPWttuD3tN6E9GGs0vBxu1TzIOJy8MHdTPHSU
                      jDzAjDO8eEOFPODtRb1jtcW9p83GvSu0nL2YO2Y8//ioPWXAmj3FDsA9qKBJvJpoBb0JFqU96EuZ
                      vEdrOb1ATAe9Gj0EPcrwG71qHAg92xm1vbDYozsAyJK6EI0MvXB7M7w2oI29XWmHvf4ucD0sitc8
                      GAA6PCmXnT0j4K09ZzOvvUdVoD0wa2284ueQvdDiqTuOHKe9GLsUPGsExb20dNW8RtUAPZNtTL1M
                      4+o8qqpOverSDL1iAJa9NCUOvXIQGT3o4by8QKusunCYEjxgVyq9CgOAvYCU+DrpfaI99m1lPV5I
                      Nj0mNKe9LFaXvGxgzTxg8hO70RPCPaauNj2yMcG9tWaBvbriEz1SJiI9UElTvD3dlz0eakE9GKep
                      veJhAT1aU0m9gvvGvXkEtz3iNkg9xOnVPABMgzpQgS08Ey+lvYW2qz3CoGk9FRe/Pb6ng73332+9
                      dYqGPaALiry7uo699zuuvUCCZLzAJUy8AzSKPXoMkr0n7ie9kx2evZbTeT1AmAi8Qpg1PTlSkT2M
                      UJ+8ssRmPTG8pD3/qII9zHCRvO2zgD2k9fE86KPtvOoWbD09S5W9WIG7vcoAp714evy8bdMvvagq
                      87zFtpM9aDCuvdaCTj1Q9t+7TsQTPSbHkL15fcE9sjY7PaAIdr3ASLy8VwOTPTJFbj2UMrk8ztGG
                      vQUeh73ybx09BYm6vaDCqTtcKQa9ikYFvbAq0juXhcM9F8NOvWl8zD1vO8E9u0apvRcyMr3rmce9
                      1lehvZHMiT2iYFE9LdarvdAn0TvMrBO9sPUQvb2sf72O6zM9kVCsPe0SS71KJXk9BzeDPdBx/rtQ
                      FkI8UHgNvYYjkb0QP5e9wE8uvRWKpL2iCVI9UBgVvCf8wz3Edd08UmAOPS2VzL2pEIY9I6STPXUO
                      uj3Zw449jpN2PUmhsz0096M8TEbAPCPeH71AxSC7yeqKPdItTj34O9a8+5WdvdPOX73kGRS9QJCp
                      vdEroz0gf/a7QqhZPcmKqD0tQ6+9DWlPvRhxxrxKdKC9ruhAPZH+kz1ai8C9fNraPAAEZrp3+Gu9
                      4HC5O5GBwj3ktvQ8WNytvADUjbuAdLm7jed9vUifvL3tqTS9AFa1vJB3CTywARC9Q69cvf0Ijb06
                      orC99JfGvNrESD2mtAg9h/PJPXvOuz3g95o7+uRpPRAuH73Cx149/aRavViThDzwwxa8IH2mPHu+
                      p71CjSk9UPoTvTPoR73Iady8qfWsPaiODDzyFmA9jseKvV0wy73gRu28oE4RO5yhCr3m3xw95uqK
                      vdW2rb32aHs9EMYFvZYTlr0gZda8vTiJvQA+6rxC2wQ9INGyvZghUjzyNTY98pZfPVXxmr1koeE8
                      gAmLPCivNrweKwg9pNHdPCe+fL0jXrE9cXaFPfCjDrzTUT+9QyZzvd3tyr0g67s8y5WnvZD2Srxu
                      VhQ92FghvBb4TD0Bnqg9thlRPTAFGbwVmow9+Zi3PZSGsrwVabw9XHriPCjCbLz6NAk9fdedvcAT
                      Vzzw6Iy9LnJjPahpfDwTWxy9FBuTPChxOzwIobK9IEQtvY0dKr2Dpaq9sPjJuy0Fsb3Ay1c88XOW
                      PTqWtr3Qed67Qi0zPUUXrb3F86K9WdrCPcdjLr3xDLc9QMsmPEAdELyyJjU957O1vQAUHjtQqK67
                      gJU5vf2JX72JJLg9M398vWidETwz96a9XYVDvTKsnb0Dhsa9AVCJPfTDsLxi3qa9wAIrPKt/yD3p
                      TYI9BkguPUrGyb1QYq69jtaKvQXarT3oYhU8tSPEPciVgjxVj689tOeIvHVEzL0LcZA9FAftPJbz
                      HD1dhME9qJb4vGvHxT2djUq9oIlAvVEUuT2zKCO92Po4PJmSqT0A+o07QJt1uwLmxr2wVGm9XuNK
                      PaJyzL1agp29AN4uvbCoFr15v6Y9Z4O2vcYQJz0QU1S8s/FkvUPImj3tmIS9hWPBPTJLhb3d1ZU9
                      tmMgPXRX5by0jpc8psZ9PYDZgjyg4re9G6+rvS7CmL3y8j49qeTIPYCcjbpEB/88/zSzPcAKoTzI
                      era9MPY2vXcPzL0evQE9AFlyPMwwxTzjKqS9WDKiPL7xbD2a88O9e6K6vU5XUj1zjh29Dc+zvQzF
                      zjywifa7xAHpPOEvtz2gOsC84JfWvF5nXz3aSsi9QJcuvdBmCjzwThW8gNs6PNbldz30peM8u6mu
                      PUAZPDuoLsA8KPY+vCqxRj325zU9EEx8vf0mtD3ApGO76FYWPPpVJ71jnKg9YEG8vZrMaz064Ym9
                      tp0gPRQ04TzqKsC9qmm+vTFkgj2oGl68awi/vZKdID0h8IY9qng7PZKiub3V9pe9ImNHPUAdLLtK
                      mQ69lYeLvWC+tzsoet+8zFacPK62nL1M3tK8ouFoPeMvOL3J6Y09eHKhvRLXDz2+U6e9l4tJvQCm
                      UjuFr8w9RnFTPddafb0w0SI8ycOiPW2PZr0Su6e9QLL/vKKIdj0PLbM9yBitvYxulDxJg7g9dCaL
                      vYxVsjxQI7I7xpiAvdx1zjwGvjc9K7qiPZjG3bx3/ry9tyiwPdR00jxdI7C9CsRBvR6LBD2bsbK9
                      7FG8PLewS73sseo8WL29vWqXfz0dC1q98wU3vU1pxD3Ou3Y9zih+PTgOrDzAmDm8UgNzPdJaGD32
                      uFg94WqpPUhXvbwAVw26FvMgPZxd4Dwxl8w9mrUiPc0TrD0QdU28VTamPRCNGb2pjL49zAEVve25
                      wT0yAws9F2U+vYAQjrwXbKo93htKPYRfzTxYiAe8QSKFPWg6cbzHeJg98DtGvX4YJj2YuKg8yAu+
                      vSnWsD1QyF69AsoVPWIsfD1ApIU87pKXvRhfkLyD1Fu9/cVRvSeauj3A9CC7wOOOvYD3njyFfss9
                      0oqYvafwt71CYmg9QyeSPUcAXL3N6bC9nZpUvSD9njzHoWS9H527vVipWDzNsaK9LIOTPDAOrzts
                      Wcu8wcGiPRgL6rwaShm9Wt64vZpgdb19I3q9KDe6vD7cgb0osY88ABNRvNMyQb2AXRq6deXDvcDK
                      DL1IoJw8Z+DLPVP1kT2g3IS9A650vTLFDD3Gsmg9FhsGvU7Scj0bAac9YFdWvTIcYD3Qelu96lll
                      PUBBNzy6rgY9lsOlvaoAdT0wBis8CHqavXrFMD0rY8K9ZjwQvR6rPz2w42y9S9yrPUVBxL0eGZ+9
                      oFgVu7Sb+Lzazbe9ZYfKvYDabL1wDTM8OjFnvUjCqbwo3Lg82NOEvUAgGrtZRZA9sk9FPWAfZruM
                      G8K8kk9FPdS7ubzQPy+8B8NNvZlorz0Y5zq8Q5DAvUOtTb2DjKM99JKxvLArN71Il6886KcIvBZG
                      k72gY5+9APnAvSxlmzywKzY8M6yOPTUesz3wGEc8WBisPJhsuzzIP5i8sKofPHyN0jxozs28gzNM
                      vRgkkTwCvHA9sgSZvboaDL2ZdpM9HfNWvUDquzx+NaK9gLF3OoCUEryqIhe9mj2Eve+hhz326Qc9
                      4Xq9PZt1pz2YnMK8oIOVPMINMD1Dmxm9zlJKPbKBRD3j6Kk9qhcBvb/Nsj3AZwg7NUeivWhNUjyn
                      hb29mMS0PIDj+7zomim88uELPbjCmrzYtXS8QHBvu7WIzL3KzQy9wuMOPWLMGj1wK4W9Y1srvQAg
                      NTra/I+9ipeivfjxoL2yhmo9p2GrPZ7qCj16Hl49wBOyPFY0Eb1Giw09N6aPPVvSqj0B/4U9ioTM
                      vY7VWj24WIA8Mn0sPQCxGbxmYIC94NGzOxaRlr1l0pK91gZyPeJ/bT2mr4K90IlQvYbVCb2w4SS8
                      NzKbPZPlXb2wEuA7oTuePVtfpz3QQsc7Cnp8vfg4qL03qTy90YDIPQgqjzziqFM9SmAsPZelxz3m
                      nA49vDLcPMhivjwiMWI9y42wvYfuY71g/jK94hi1vV9Dyr3QvRS9A+W+PTX2mb3QBXg8wCWsvH30
                      bb1o5L28DJOhvKDzvL3qAqK9+ayWPXuPtr2ggn879VStPQotV73cKxC9CciOPdh6vTz9DKA9aBwU
                      vCjJzLwyFRo9LppKPUq4Wj2Uypu8VU+6PbC2pL1aOQ29VimIvYK3UT3Qtvw75WWnva40bj2WgAk9
                      wIgvvPTc0ry6hwO9DWF8vSAT5zvAk4u8HeyoPX2jmz1aNm491Z+pPYfniz1ZMIQ9aCeWPAiDg70o
                      b7K9TaFKvafaQr3g/d67wN2dvTCNNjzATok8PvWMvWhDiDxPoMm9eIi4PP3YbL0yE8y9LOWnPNao
                      Kz2+h1I9ALdWPJizIzx4KIi8WBA4vHiNhjwB88I9jEbJvFMeG73s6q88ASKvPQBqFjtgioU8qjYl
                      PcZQPT3RysM9gZ2ZPUqdmb0ZOpE9/3yvPc7WpL28oBS9Gl4yPcD/V7vYapi947KaPdAs5Lut0Xa9
                      sAMqPFRH2zyr38e9x2bKvWnQhD2wc6m9TmuRvdCi7zuU77Q8gtMwPaJ2XD3oseS8YXuKPRSotbxr
                      CbS9aMOxPJuQwD0ndS29FEOIvLWFob3JsrQ9Ev4APXN3tD2JUqQ9AzZ4vWzz9rxGK4a9Z2m1vVeL
                      rD1u4m89YFVjOxKpbT24mJK8sNSCvdjwkrwow9i8yc2UPVApSTyQyi69WQSwPQrqAL0nXG69FgYS
                      vWi8xryMIKw8CgSIvaD8wrwKtkI9xvVaPVsohj1AMBu74ByavIhljrxIc4C8L06yPTBp7jtViJo9
                      3d+FPeoETD0kHNI85qFHPSzu7DyR7ZY90B4DvRChb7x4mLu8QOXhuoZ3Ab15vrE9phSEvZQK6jzL
                      YrQ9Y6DFPYClCjqUr6q8KEtrvAccVL2J8ow9Y6FLvQq2sr32uYS90EqxO1vdpD2QlRG8rapLvWAl
                      1DtaImC9EJMpvVCknztdHR69x3wovdKrBz2EMQm99zMrvVKnAj0+LD09HeS6vTBzZzwxoaA9S6ys
                      Pfggr7wwRqq9NsdjPXKFLz03RXO9bEayvBDbqr2mIhw9lEbvPEDiMruEm/U87ReYvZrOVb0AcgS9
                      Wno+PYAk8jqi4qO9GErEvZOqSL0Amqm7bPmUvIYKOz1kwvg8sKfNu3+JsL2ADX+9Ko2dvaPTKb0N
                      try9V/Y5vbrNgL1gOYo8na1PvSYfZz0A+F28EMsQvOXKhL2nRx+9vgUKPUDZHLx7h8I9b1nIPZSx
                      9zyIYoq9igUVPcrYfz19t8s9gP4gveDCk7zw4kI80UmZPWtvwz3uPXA905+JPbBLHjyV0qC9AyIq
                      vegaDzxHdB+9hf2IPWG/nD2n/VS9aAJwPBD4qL04zL+8HTyJvf2JkD0BC5U99TmGPTtkhT0PLMU9
                      I2Vxvf4YAj3/Pag9zJ63vBh9h72shc680OZyPJUdxz2gPUa9VDzZPF2doD26rZa9EJ5FvNp+gL0o
                      oEw82WKVPSjZXbwCLHg917qdPYakmb0E5Oc8oD5Huwl6vD3ayQG9mIFoPBpFYj0QlcW9Yc+nPbrM
                      TD228GA94P63vOjAzrzkNtk8EKBKPGascz2Ad+47AFFnOjSW5Tzgs+S7GuBzvSaNTj0yGBw9wNlG
                      PLiX2ryUtIo8hHrcPC79ID2AJcy9jouhvUAdUjt0xLW8Xpl9PYBqLr2Tg069oN4eu+NcNL1Kxpa9
                      KJOePICgzDt3eUy9ggMmPdg1wrymEUE92htNPchDyLzT4LE91SCSPSnTkT2mNmM9Z2awvf5Xl70o
                      UQc8kAczvJS1/jwv0bG9k/davbGmrT2q01E9nEoNvaH9hT0mB4u9Xk5zPZvnmj3SMgM9tc62PcsX
                      sj09srO9zMuzPCZzCr0E1OU88LsFPHlUwD0gzUy9YtC5vUJ0KT09ZaS99/hZvUDFHbuoGyQ8PEMR
                      vQNvRL2FBKq9sJ2gO5Qc3zwyly49LAewPFALHjxJJcg9A3GxPRU1kL0Zvok9mDk0vH02WL0mKDw9
                      0mNMPZptkb33XWW9Yia4vSFtmj0AfJK8B2s1vbYldT23V6k9CJ+/PIMByr2o1ng8SuZ0vfqlbD0n
                      0LQ9kPg8veIEPD3YjE88fWRzvYa4B712JBc9JwqiPZC9xr2i1io9G4qCPdWCij2JO6w9/wegPUeW
                      Jb1zfTu9AidWPYvLiD1wfwE8UHHvu3AvKLwYR/O8JkIDPS2bpL2oeYC9z8KIPez3oLyIzYO8rci7
                      veg3ob3z64y9hyOIPdguo73qfE29sxdAvZrwZj0CFsa91IyfvG+wyD2vo6+97N6ovO1RQL2BGrg9
                      luuEveyZgL363j890EyLu8bZZj3Aoyc7AO6Avbhp37wC1209oNM2O7cppT0Deao9oKcgO+Qu1TzI
                      9LU8tUejvfjktTxll689hUW4vd6+Zz02f6O9d/SVPbpZJL1gW4a8AG2xucAIsb20ysq81KG3PDEu
                      vz1YGSK8xF/RPL6tGT1Rf5I9r9DLPZYfFT1h78I9F3Ynvfdrqj1TeJC94L7HPAOzK70UTAG9wLtY
                      vSO7Gr3VbYQ9pA0FvUx1lDxqfkk9CtJ7vbknnT1AbMi80mJ4PRi/vb0YoiM8zb55veaGhr1AOF47
                      AK+6PODb1Lwtn6i90AapO6aPPz2sbqu8tCHNvJlWoD1bKMa9d9aXPQEopD0GVAC9MSuwPWAFmL3h
                      pK494CUGvciJn70McsE8XfeavQNetL3l9ci9iFTUvBRS5DzhicA901fFvd0SPr3N48c9gUGgPVAA
                      OzxH3bE9lBfZvJdhLL2YsN+8SJ29vCdrmz3Rf4k9099evZrjor2w+BG8Y5CcvSLynr32F4e9HsuT
                      vVlywj1aYGu9wH7lvL5jTj3gu5E8wkxuPWT++DyjE1i9LmwvPTWdyL2WLYa9PQ2nPWuKpb3p+ag9
                      2zmGPeJ3TT1mQQg9rCv8PHSs5rzkiPs8+pl5vVgoLLxKQmU9gJwRPJJnID1gb4k8KlsxveCMkbu2
                      By496IvkvBLmCD3kdPE808mlvaDUcrs45vi8wHsZvYDVXjyg/K482LaxvZAUBTwAVFi7rOGrPDBE
                      Ib0unKm9uObvvG2abL3wu0e9WHvSvCAjgrv3Ljq9WnomPW82qj2J3pM9jPzxPEbgAb38mOA8h2yq
                      PfHfpj1Ov5+9a4GcPQDTMjubraI98FtrvKDzRDssBKW8FO/0vNy28DwMrv28wpQgPSPCnT3Y4Na8
                      50DCvdfyhz29dIO9INrnvMONXb3i5j0986dvvTlswz3kWPc8iYWvPZ3HT72j5Ry9PqkXPdk3zD1r
                      BKs9ff6hvXJeOj0yiKq9gnJSPcO2Rr1MYI68TmsSPWlryD0SlhU9mbuoPRTZ3rxQFNM7X+izvaT5
                      Eb02eI69yZTDPWq5Vz3AtwS7+3Crva2HX72SNFg9dHQRvTLdSD05LKo9zPO2PEPNKb32KG8904xm
                      vVOLsL2oSKw8S9isvaPVeb1AMG27E4J9vfd4YL3MuwW9gNQRPNEBwz1Q+Y27L06EPWIemr3alcK9
                      sD85vSLpFj2goEU7eSizPUL4i72ITKK9PpNIPTSskLxdNcI9ANoquRVwi726e569ZcCMvX80r715
                      Coc9rL+gPHq9Kb3omFw8tUqfvbBskbuMN/c8z++rPYKHez0YZaK9agEIPSL9cD3hM5c9MxWSPSby
                      PT3CjLW9qDOmvWO/vz3AKZY8nmCKvSFnwz1JIp89DO7NvLD/tb3z6KE9wFQ5PGRozjwwfmC8V9VK
                      veKyBT20A8A8U27BvTDulzuhTY89MgmBvZTY6rz95DW9gMZ4vRNHNr0Jirs9Z/C1PfOjVb0E3Ye9
                      oNmVO4Jobz1pWZU9cj1LPfP+jr1wPHu9LEzBvM8TzD00N/A8wJNcu4pKSj2hKsg9rN7kPB31h729
                      rXm9F9q5veZxDb1s+sq8SmVOPe6mID1ud5+9Wpe0vcqQfL39Cq09A8q8veonzL0YDLS8fe+xvbmg
                      kD0qUkO9DKMRvTN8tz3S72E9x8HEvTCnrrshHqk9gMN6PFSRvbxjvJO9Mig3PYxV7bzU6pM8rgNB
                      PdSttrwijFA9XVVevRi5m70mJlU9siItPVU6uz2ni8C9zM3UPF2Biz0YHiK8KzKwvbv6ob2YPti8
                      gRejPSPrQb3jk5s9DJoJvRJ3ST3yLBo9q1rIvcS04zzZ/MY90A7oO6Dt2TvWboS9p0/FPVSvkjwA
                      Y347bJ3JPKjIpDzgvpm9wMbJOgAAd7uKDqe9Z4obvUqsMz0eJVE9wAsfuwIUNj3Yu1o8AOggu7rg
                      t727QZs9QkvIvUMfZL2H+p89o78jvRDMbzwlL5u9KyaWvV91pT3TI5s9JhB+PaZZYz0eVUM96Vup
                      PSFuvT2ihQk9CEapvHoLW70RW8Y9+cyvPUwJh70so6u869uWPettnD08Xuc8gMRJvNCkw7vCGTM9
                      vv6CvWB8Kb0iDGQ9WtZ1PQ11vr3+/GU9Of2pPaSJ/zwAbVW6yLvhvC6NKz3OcBY9yvEvPbFbjz2S
                      KBU9ytMhPQDxN7yW5au9LUm1vRjlljylUL89EMQJPPejWr0VHaw9H5GrPWBb8DsKDB690KM9PJjI
                      3rxABhM8DITNPH67Lj2AK6S6R66QPZWCkr3AdtI66mAJvYvnrT3WVQk9D5K6vcAIf7zIVKQ8jGyb
                      vFt2jD0Y6S+8oFrqvPLPAz2W0g89Q7qoPUhvirwBE8M9NWyCvR1rhD1AJAa7mJxxvCqZPr11grM9
                      SB3FvI+hkj1Wd4O9yuVqvYAV0bwqb3c9qQSoPWBZ4buA/J+9LdeHPRW1yj16nsa9N3SXPUBbKrtU
                      s6w8gqohPUf/lz1PMrq9OuRqvdhavr1/3MS92HSdveyO3LyFtKa9Jug/PQ9YzL0dojK9bZBCvfDa
                      fr3vNL+9iZvMPSqOFL0JtaU9whGnvTBPFbxq3gq9gDlBungEijxXIqk9dPWOPGgR37y7mMG9bICQ
                      PAC+4jp9x2i9anGTvb13br2Ees08Mh+8vdOHOL26Hl+9QOMnuyhDGjxAp3S9PXyQPRPSiz2xCIU9
                      FrcKPajZJLzIy+C81M7dPMMkw73Yj9u80LqkvQDwbbz/LZk96lVmvZrHmL2gtcE7gBSmvWBqDrsr
                      ybe9hg0cPZZqor0o7LK9qCwFvGSsCL26I0w9APNCvABQozehNcM94LeuvAACyrxC6SU9tksUvcrs
                      UL3E7/M8JoQFPRLmaT0QuFU8ddKxvVjPSbza7K29wrJtPQCwPjiwH8U7gOd3PDJHmb3Qlii8wPMm
                      vM1mJb2U16C8xt1jPZEHlj2w9Gy8vL7XPKBHijtQjfE7rL+1PDE5tj30Lfc86IOivalXpD2Fa6k9
                      gAfOOsjplr33Psy9VhtJPUWfjj0gcXu96B9qvPIwlr1tlcK9EohVPScNrj2fQLi9GjEMvb3wRL1q
                      /oq94TyhPdrPq71gwKC8vKDoPIAxkL3wh7q9YVqEPT03Ib0AUAG4cpRDPefvUL2YQqk86C3AvVl5
                      xT2ntZo9bG2vvJB/EjyAnXC6zxC2PUB99Dr6SwG9KKpQPPO/nj14ZLw8of2+PUojUb0U1NQ845Kp
                      vXC4nr0Ftp89hG/9PMBOV73U7og8jMrpPOw5uTzijZq91h0IPRA3O7xwHSa9+vtXvcAZE72TpJw9
                      pjsAPWMQMb2WbJS9rDLIPHh9h7yA/3u8sKajvQB0/zrBR7k9y6uvPWBuFbvT6La9aANqPKA0obwA
                      uJG4/Q8ivTrFeb36gzC9QvaqvdK0AD247Lm8NhcHPSpDMb32XRS9YKS6PE0EsT3oBjY8uIXXvPFM
                      rz2Vt4+9CtwUvRRzu7wAI8Y79JihvNBtbL3WnxE9ZQSCPfm0rz0Dhqg9KPzDPG09uD3G/QO9qh+8
                      vblzuT1HgyC99wuoPQDdzrvAqTy7GNptPP4tID1QUMs7dt89PZqExb3JQYU9DKHePAsesT0+Py89
                      IDT/u5OkdL1Zspc9LE/sPOSV2Dwrj5S9ImPDvVA0wLtYb769/gFuPQDlgTmksdE8iFH2vCKQbz2E
                      Hfs8YsBxPfpQlL1Wf569SJ+DPDTZ9jyqy6G908ipvWCAuL3DEYo9J1o4vaDo3rsjV569Oh1rPUFP
                      xj0G1nI999dpvVDSkruyuQE9mnkzPbQd8jzQyiO9MBa/vZUilT3QErE7abaYPXazDT2HUra9/Cv2
                      PEpmIz1gv9Y7hVmPPbDU1btq6qu97YmmvTblLT1Ap5C9mh5aPahYnjwe4zc9cAQUvGmmvz234GK9
                      vxubPRddiz2D07Q9uvVAPdUQxD05PKU9FPXZPLlkgT2+G5m9SKiAvTAMz7vJxbI9ejRxPUGKoT3h
                      Fcg9QBEvvcxXi723GEa9fR6NPSNFVr252LM94YWhPRipaDyaUWO9WiwdPXHYtj3hF4A9qeLFPdoU
                      rL3Ybci9PUBQvSEZpj0C0Gk9Yt5MPTeXG72gpf282t0JvQD2Jjzz8LG9qO6fvKDj67xIj6O8gci0
                      Paa3qb3ov3o8tHCwvEcTuT0AU7K7IFRZvRJGPj3yKlA9Xo9aPVSgtDxYjbw8G8GaPW4naD2sxcc8
                      hN3YPKyJ/ryo6GI8AGBYt0j7mDwMXqi8WArHvR2dmT1NcZW9WiMCPXCwMbyw6De8QK1RO03iXb2m
                      ZyE9576/PdgFPTxdsE69ePe4vcHMxD2ymW09K+W0vZCbNjyTEB+9DHfyPIxL5LzeWAk9MxGivVjJ
                      vb3Dn7y9DvGXvb7EUz1gwZ+8zxXGvXF3yT1w+LS9/q1sPRjYnjyVebu9JfC5vUu4qz1de2O9ypsG
                      PYoGZT1QskG8RHiLvdKevr0GPGQ9lq1uPZ5yFj3rvMU9UxMsvS2fSL3SShk9al6gvairaLziuRY9
                      3s5ZPaK2nb1gtDa9mx/GvSDVwTyum3o9B128vd07mr28MYe9nyGUPYCuBjwYyeW80mB/PcQlB72o
                      I8a8YitsPaFekT1CHA89xKvuPFqPab3gC3a9Koy3vUnvvj1zOb+9wPq4vPC7azxCV1o9INPzvADU
                      YTlEi/w8l6dLvQKHKT0pnos9sjIxPfX2mj1CFYW9AtMEPZ5VQj3C7UQ9KIxcPODmlrwN6Yu9bOXK
                      vPKoaD2YnYU8vg42PSX6wz2ukpu9rz6qPca6Cb3AHtW8sENRvPdOQL3QHGy8Bk5/PUbnAj2Klkg9
                      KtvAvZjQLrwXXli9AK8yO7wpBb276sM9TTDLvYxf2jygxCa9ADmFPNLMub29OzS9l6yjPYBJNbyg
                      +Ui9xIL3PFoTRT1U5qK8FDGEvWHZyD1nlF+9fUpMvZhLILw0E7k8rJQHvVswuT2wDPq7wAbOOmBW
                      BTtK0Xe9Sg8HPYBBBzx404a9g2LLPb2pi71JLLo9PCYRvVDSjbsyaTY9x3YvvQx30DxAOFM79FaD
                      vKrjej1gyNQ7YJ+pPJe/Vr3p3K49dCXiPGIAbT3uvmk9otLEvWMRNr3dSna9ymoOvWKBKT2iNl49
                      mjJavaM1rr13r229vrFsPZbxi73kl4a90PIMvEiUtL06Bmi9Di1IPbISUT2ZUIY9gkaVvW2jdb0u
                      vKm9gam8Pf16gb04yay9SKqIvGo4ab2wRIW9KjCIvWh8i7zDgKM9TR95vYYPhr1efY29AK2ePDdn
                      S73KYnQ9ktgLPa5eAT2pfK89YGR4uwZ8Gz3gdve7L2uGPXLTm73ASFC7H2bMvacjfL0gXru9UgNC
                      PRHFqz0AUGK7sNOXO+FHgD2qwky9GtNRvTKXED1iqL+9ZSaxPZqgWz0iuAY9zfWePRVMiL07xMq9
                      ZsaivaAMnjyw+A08f8SFPV01vb1aPiq9AaSrPYDhdr3eXYa9m1HEvb7Nqb2qPzw9RVaGvcU5oT1m
                      DZy90od3PfBWKDy6LyI9jX+jPePgoT2GthW98KNBvUJkEj1d6Ly9rmeNvfM1br2YbIS9AOtNO/W9
                      rL3XbsC9YHzUO1BlnztZqZc9pqGhvcBpNL15QbU9gfWXPXAmaLwwMia9wPqmOjU6lz3A5K+9guJY
                      PX4ZEz0gqSu95Z2oPcojdj1b9ZQ94I6uvTHXmT3QCXK9+kKiva8vmD2V0JO9VWiXPYLuJz2wiy28
                      jfCBPYd7Lr2Tgnu9duVVPVj3mr3sVwe9svRBPRebyL2QAnG9F1SAPTDTX7zIoLa94VvCPRD5aLxM
                      19I8APZevT6xKT0t67o98CGxvdCpqr2EDdE88+rIvQgitL0yjqy9Wp6jvUCXzryKUwy9CeyCPfUC
                      hz2YnmA8dEKMvSw7kzzWp3Q9i6q7PaGclD1Ob4O9+Uu7PY/zyT0ZjL49Q488vYz6mzzA+iA8Ob6c
                      Pc73eD2yG3g90iw/PSeFcr0Eu+88avSZvam4vT2AEZg6Gjc4PQA0YbnuHyI9QFdbvDf5pT1jZBq9
                      Mh4yPQgntzze+YW9QMcnOzDAsr3uCqK9kPmvvZaoRj01m8M9s/rHPUJnGT1zGEO95BIBvZSw1DyL
                      FpQ91H/9PIAqSTzbR7G9UCfUOwLfFT10Qp+85wE+vfT4nLzEMN08QFMuPFYRZT1Y6k48OpFiPWzB
                      pLwSnlo9gH1hOocwsr2ABOq8IOixPIbRKT0oQAe8rMvOvGJNIz0AFsW5wB5uvFSu3jzzyjK97u8F
                      PVrwXb3gca27ilcRvaLbXT0aalQ964bEPQq6YT0CBzg9QNdsvYCx3Lw3+SS90wFAvYCogTyqaE09
                      R/0ivZMjNr0QjnW8AzmjvTUvjb2SYIu9ePewvdAGJb0IwYA8i4qLPffNK71M3Aa9eB6yPD9kvr14
                      RYg8arInPW2oj71iZCc9wf+3Pb2Fpb1kjvQ8jfbCvbQCnLwUZt68QJOnvW1qoD2xpMw91IGTPBgr
                      L7w9Wso9cCdUvDAf8jv/S7M9B8JBvcVikL2Ahxk8GeyKPRAtE7yvAbA9Qv8HPXNTu72o8WO8hDLR
                      PM9Uur1Oww49Sp8Lvd85pz2xU4g96B4ivL2kmz2AfjW8WkAHvW/mxj0AY/a7GKdTvMFLyz0AtGC6
                      mNYpvF2Ihb3A3TC8NjUwPUeKX71Sm6u98l1oPboSZz1VgLA98Qy9PVChGzxoL168IIC9PALcRz3u
                      uZK9kJEQPPpoTL1zKTe9xgIRvfTuoTwuyUw9MqYIPX0pSb2A/zc8UPaOu5JhWj0lf4W9qBKbPGBn
                      yr0S/Hs9TZy3PZMunL3gWNI7xg1fPWXRtb0ITKY8UANLPGTI1zzQXVK9ItKNvZsHn73Vf4u9WEb2
                      vCjI/rw68wq9W+K1PSdnlD2E2/g8m3/MPWw8m7zX51m9v4WuvWaNJT2Y3708gAAsvJ7JFz20vIK8
                      NH2qPMDPtDxkBvM8UPvvu/rNgr33ZIE9qtdZvTQFgr2xe5M9ZuY5PUBXGrtYnbK9YCzRvJAPTTwr
                      uZS9wAm+vDlhvz03e2290qx+Pchkkb3y4EQ9MU+2PXO3Wr3TQD29EIYnvHC3Zzx6/4K9mrNgvfQq
                      yzxaCK+9fr5qPelTgj0yzXU9vZeiPcNAoz2wtJC9CZKRPbDkWzzhe7U9sKYEPHv1hz0C0UA9DeVJ
                      vSLdub0g/co7jpdzPUCDmjotVrM9yvsZPYCxtDvn17I9Gow2vV5MQD3ULBi9xmFfPd0ekz2pt6o9
                      87m/vcB+F7sAEHM5AO3OvEjVujzGoom9V9s4vYo8SL1dzom9zP70vPCmR73AAGw8NjZvPUQL0Dwq
                      0189wCb3vBYso70AiuS7itJSvcbFMz0lRsO9bblLvaOyvT3MUd085rgCvc2yXb2QCK29KFY9PFD9
                      XbwNCk69CymcvWpxPL3gEHi9XlQ0PZRo9bzqMbS9bADJPId1rz1ryI+9Tu8CPbOtrz1SmTY9EbSh
                      PTXtiz1IeMm8A667PcLeEj3jBMC9diQIvY0pwj1zaoM9v0S2vdDTCDzq/ic9gEX1usjmgL0mA1c9
                      +MXJvDZWSD3WtqW9QEmAvaZ4gL0gUMA8QIMGO704gz0GehG9FErlPAZcq73lbYc9bZ6rvc2Xwr2z
                      ccQ9rVG/vTFBkz0sVOE8KtwPvYh6hDygiKq9NeCUPbjd+LzNvJQ9bWtOvaAgZLvF9J09HlJwPYAO
                      n7sS6rO93eu4PQmOqz1+lUI9Q8VSvbKpqL1KcYW9AqQtPVhLKrwgkNi8w4fBvSarhL2DZqy9keGa
                      PY0cYr0tJp29gRG4PcKrhr1Lb5U9x3Z/vVjBo72AoH68OjonvQDIHzuFDZq9osJwPaC+PDuzEqO9
                      RgGsvZaNMj1XZ7c9qGHBPAAtVTqtV4+9hdanvSJAMj0HzcM9kBVOvKDNczurwsU9KCpWPNMWxL1w
                      K1C9a7C/PYpZHz0qS1U98qQjPavmwz11DMs90+UrvUp6Wz1wTGG8aQeAPWB1ujsQLn08uO3AvE13
                      QL2Y+ga80aecPesOlL0ieE89bnibvUNpbr0ADZM7Weu+Pb2Ckj1AFeW6iig+vcPURr36ire9fkCR
                      vfEXlD2Om2w9Sh2gvWCkADsTNCi9amTKvZhn1bzg1+67uYGhPcthrD0WADo9ezewvcDsQzyiEJS9
                      Rjs1PS1JxL1xGLc9arYtPQKjVD1BjKc9RbvJPa17lD026CA9zcl1vbqRUj0A2727iDOvPHKZdD3S
                      MCY9MazKPRTEwLwoiP28bBPNPFNjT73UXYI86ZexPU/koT0M8fI8AHsXutSjijw7D4A9HWq/PcuG
                      jD1ynjk9sLy9u4CbvDuAM7O7cDF7vdCqh7shf7M9GgAQPVDiJzzYc7A800yXPWKNET0UIps8oISt
                      vGhZeLyALx28EUGJPeiBQjwAo0a73bV1vfPnl70iHl89rQOcva8+kT0rZqe9jWeEvRR14TxCc2g9
                      S0CxPUjKib1XE0u92HOovUBqSbzj/JQ9IEXzOxiMwL3dLFu9qFOaPANnqT0UKKM8CmqnvRcWlz0q
                      RUk9APoRuVO3Kr0wzcU7h8ocvTpGW71hsqM9DkElPaKiMj0A5Iq8NhdgPZuuuD1wAkk8jAyKPCAf
                      Eb3KB3y9vf7GPc+dgz0FxL89bZmsvXTP3LzqrVq9RFsEvSCMy7zaesm9AFG2vQm2tj1g2zE7gAol
                      PDw/gr2t71e9NYm9PXWdsL39JJ+9zsBIPXd5Xb2Dp4U9ZtENPbtSiD36+7W90kQlPZJ9or0WqRK9
                      UEA8PIrpK71jRlK9SsOzvcLYXT16f0894RKcPe1Krz2uxW491OD4PHCDab3m8Zi9Sp9oPey50rwH
                      fT29kClmvC7YUT303fy8Ak1DPewnrDwU8Nw84Liju5ZqkL3AsN86Omx6vYpJGz1Ni4M9esGlvTKW
                      Pj0gmI48heWWPeRy9jyCpzM9mptXvWjpK7weIiM9unpPPWG3lj1gUom8/QCoPUYyPz3tfLG9aXaQ
                      PUNOvL1XXji9xBrtPAePY73MJ9684z+QvVAvwjtno7o9kz00vS1wqD3CHAI9Yp+Qvf1YmT2y22s9
                      5MYDvcBuQjvJo8I9jIkFvVI4Wz2EoOo8jBLGvIjUuLxmfXY9MOtgPHwJ0TygO+C8aKWovVb2Vj2O
                      LyY9CYDIPbBHTzyw9DE8HwqpPYjm8bygG3m94LY3vb1Nrz1Vmau9dFATvZDRIbwa07W9cvNaPfgf
                      uTw4H6K8TvEoPfoSML1saI288u88PSh33ryt3X+9yxKZvWz7xTwoIJA84DLtvHQyhryXCWG9APgl
                      vFB6ujvurhg9cWGuPXpJb72QvwE8KmUlPdhxRLy2rVY9+L+yvIB9mrrQzMO9vczGvd06yT0AaPC6
                      knZrPbD0/Lsosfy8ACEDOpFhyz3g1+u8ANEHvbJXt72ttZ+9pqZgPeCSpjuYy3a8RVyvveDAq7xo
                      TEC8mCBEvGNCXb1q2Li92ceOPYqnID2tLjK9oHmTvCgWTTyd9a89BC0FvaBPfr3faq+9aS/MPepa
                      R7120gG9WBkMPBTD/7w3O5k96noDvetbvj2BO7A98R2kPQOkuj3AOVK9YGzNu6DstrswZ6G7Qndt
                      PaJklL2gavs7Lf9kvckCjT1mkUU9bMfjvBi2rLwt9qQ9tDHFPFsksD3wJHw8AgJrPSF0hj3WEnI9
                      BJAQvUDPLjy0nNk8I/2NPUCajTzwjYy9hU2rvb0Ml7237z29RfDKvRJbQj10+Au9AF79uoiTkb3D
                      6Yy9QbWyPRc1kj0ad0G9KoeSvf3QhL2AbYY7Lz+IPUrukr1AUCM8VUaOvdDFNr36XaC9m4aZPVI4
                      ST0CvkE9sWW2PbDjvjv6XkC9ylwuPbBpkr0AfQO7AE2gPKg3HzygXea7qH4mvACC9TlcF808MOdI
                      vSqdmb2cz/w8EskYPYXPlj1qG0Y9nSqivZJhND2S3Im9iJmjvBA1e7135cC9imGlvSP9qj2zUy29
                      ktxyPdASdL16MXe9S1nFvQAxsbvdqiG9Li0sPRSGhjwWPzo9nsuHveGCvz27NMm9MOW6O+UVmD0S
                      2Cs9umy4vXARoL2orR48agvKvSBh5bugU/g7ix2ovbSU6LwWCA+9NpkpPbI/Zj30c/C8iPGFvMCI
                      UzscWQu9KF18vGP9f73wzyO9IOqfOz2Xor23rXy9IzcfvUr+Ib3BCY49EKN1vWSIA72aNFm9mMUo
                      PCpcDT1sJPE8wA6xvACRKDwAaG29De3EPbIRXj0qjBU9s8AvvdWHiT1gjo87DggbPdCLEjxSkh49
                      g5qQPSqbF71J4Io9TklAPR7hVj0AHgy7Dd2Evea/Db1RErQ9DNGHvbCYmrsAnZe8raiHvU0mpT1V
                      5Y69odPAPb3/oL16Dii94Ou/PF/1wT1QdsK92BCrvSZUCr3owH48Ra7IvWq9gr2AYuo6Te++vYem
                      Qr1LXre9iPKAvKV3xL2AW9y6k+4lvYBlYrogQw69MQO0Pd4sjb26RSG9POcUvf1qpr3M4YK83ymm
                      PT0Plj26cC+9Yg+JvWyB/jw4cJU8FNUWvQaqNj0fLoM9wjUPPdhkrbzGZxK9R5GLPYjzvr09YH69
                      21aZvbDwbDzSQqK9Gc2XPRg/t7wzXlS9brOBvaKXGz2MztS8Zi6SvXQrrDwoFJk8qamYPQ1nN72E
                      9eM8B4mxPV1gpL0+wZ+9g/ZuvVprx734apa8Cv9xPfs5vb0qRRA9SjhqvSYvDL1Q8QI8yD26vUhk
                      ob3uHAg9M+tzvT/Iuj2MzIC8IRC1Pda5AL32oG49MSKAPWTR5jwtFii9wItlPHlZtD3QkwC8In4X
                      PTAmNLzqvWw9UtRfPQgJ6bxyXkI9aGJfvKIHHz0yAgo9zC7pvBD/eLwohni8IZqwPb+ymj0Y8Vk8
                      TCHYvPrgED0sjqg8oNerPHiytrzs5+I80ga3vbYFCb1CpSk9thsBPVpaGr1wioW9QPt0u52iZL3z
                      M369wFPEPFCmHL3jk2e9oBRpO4DmrL2tAjC9Se+FPS3aiL0imB09y6GgPW8VtT0KbUm9wJNKO7vK
                      lz1gTrO8GqFBPd3PvD1s54280E2nvW3uPL2sf6S8wFpTvGxR/DyND8E9AIguvM0Cjz3qqT49lHnT
                      PEz7qbxWqls9EkKgvY6uKT1Qh1A8sI9/vL8duj0n71m98f+EPRQqybyAymw6w6yNPVCuNb2s+pg8
                      M57LPZYTPT3gUao8C/W1PQAWTbtDXIw9dmFhPayD37zDqqW9QPubvNCfAb2Mho88YAUEu7KEUz1D
                      p7c9YIQUvXqORj0YTYI8XZefPUDOcb2+fZy9g9+uPYBpZjzo7bC8WEhgvOzY1bx4+Ki8Q9vHvUps
                      Xj2sfLG8qfiMPabKeT3aisy9oamlPYhJkzzecmQ9CqJavdqBqr2AXLy9gJB3vQAgXzuuoUU9AK6s
                      OfbDjL0TDFu9oB8hu8JZMz1lbrg9Ki+DvVjFwrwnanW9qAxEPDpvfj2AGJ66YlkRPciEur0NL7e9
                      knsLPajvP7zCRVo9J4FJvf7Zh714Kss8MfTLPYBOl7sb1pG9Da2lvdCwi73Ac3q8I1i+PZ3iuL2I
                      Bo69ANlvPCpQlr2CalU9gLOkOjYLST1gw7Y8Y4NbvR24TL0m6Do9POXaPNzp7jwfUJM94t5QPSHi
                      yj08Ewu9CGeWvF7JLD0TjIg9TSCUvS01W73SRnQ9GCszvBoAY73LOp+9YfaHPaZXKj3CX00911Bb
                      vRi7fzyTjzW9YPKePASx1zxgSWI7iB+YPCBPy7sYaJa8cK0wvSBv7bvWGpG9ihI7PdXllr0H+Ky9
                      CZyfPU9UkD3zlpy9X6GOPSDXkL1whi68nn5mPVIGST1A/hq9sLR5vDtxl72V0r89klFoPYV3hT1f
                      zMw9QkMjPTmlkj3zZ8Q94PBmvZYqqL2A+8q9YFEQvRdJrr3+FKe9FtGKvVKoSz20osm8AbiNPef6
                      Wr2LGY294RuQPYCbq7oDu8e9aLdQPGELkD2ggoI7gQu4Pd0agb0QYQa9AAc5vChAobygr6+8FjqL
                      veflNr1zvbk9mENrvDRrpTwUcYW8QEOCuqjwKLx9Gz69YoeGvVpHF70Ma6Y8gNF3vdMDKr0oNJu8
                      Z7UdvWDm7zv6EXc9iNiuvMGFxz3P1LA9w1I3vbLLDz0/lpc9/9SrPfPYJb3kpfI80nK3vaonRj12
                      ChA9mgFYPSIXFT0dB2y9csNpPa59eD3+hi49kOO3vaCYHb06Syc9tOSQPLv5or1AIRi9+OTovMHw
                      pz16WCW9anp7PcBbfzzI3rG94QPHPW7QFj1a3ZS9pZutPQZ8VD2KNKq9mBElvOdtr73n7K69WEgm
                      vADWdr2QhFW81N+TvCrFKb1oeYA8OPHmvPwJhL0V06y9AO0eOhZJhr26Wwi90MHvu2gq4bx7Gqo9
                      LXlWvdOLwD2tfpu9ZiwfPXrbD71jUF+9KBtbvAD6wjmg7dk7ALh+u/DtYbxA85q8wJERuyZmKT0A
                      3tE5BUKDvWNlxT0svoS932i5PTprbj2Xzak9XZBcvTKSED2v0re9vrcOPXrbs70g/zG9Op84veDB
                      lrwCsSo9AAgTveCuSb2w2jO9+PyKvSf0vD0Dd7c9osmwvdpvRb3FtKO9Ui4PPR+zqT1jXS+9qs8N
                      vd35hT0yL669++q0PToiKD0Syis92YGRPZhC67wHK489/bPJvaIbNT3qXHC9dhEVPfIBET1QVBO9
                      nCvxPOL7AD00zey8LddAvZg5BrzcDt48rfFzvVAx5rtsGMg8NqyUvR1wyj1oTdS8ByOWPXUcg70z
                      0Zw9kgkOPWCNtrumLj49WK/CvbjY5rxAYxm8nldAPULaQz16X4G9T0CbPUxBxDyA17a9ykbCvdiS
                      FTzNX3u9mE6oPNBUMLyeXoK9MM82PE3WXL0UZ8+8o7q/vUIxWD06QVs9AEP7uVpHcb16GFK9BSa8
                      PcDdersAEBw7YJSgvUCRW7zY1su9RUCBPbkMkT3oZwC8fbdqvaFixz1AXeG8oGswO8N2NL3mvxk9
                      LJrBvB87vL2VwIE9udzDPQBNWTow+Eu889JQvXkHmT3OVxs9ov1SPa1itL1g2fC7o+pVvZiKp7za
                      G3k9mOgwvPBXEbxNyCm9ABQGu8rEk70sAPk8jYCaPaBpjLw9k2C9/mN/PWBhQ706KT+9B60dvce6
                      hT26fU89GPeVvSTP5DyaO1+9eSm3PePwv71AIXE7IAPuu0P1pz375L49++KXPQ5BPT1Te7I9EtE7
                      PZnMsz2OcXU9RnxaPTXWnr1n0rW9ENi0vWhSqr1aDwQ9QCIRPEeSJL2weQW8feCavTz7zzxpOqc9
                      i6qlvaB217yVSsw9ICHgvM9Ryb1THlK9hy8ovbLiMT3aHBg9MpsSPf6kVT3VcbM9+KvEvUM/lb0N
                      gJ+9yo6avSBInTsQrgm90jEnPShbFDwY8h+8AIDxvIK/Jz0TM5W9FCnVvA6HHj339Ge9+ayVPawG
                      +jygVms7GJ+SvV3oQL1wqHO9/0+vPQA/yDtHVXO9YSS2PVhlILx4hLO8XSfEveUvlz1KRYK9yglR
                      vfhrr7zMcPC86nYWvWCNjztDA7u9BiNzPTT03rw0Ewm9DN6UPAChTDr7sb69dOizPBDcQbygDzw7
                      YGxzvQS87TzwMRu8bMHbvKJ1BD2uihw9SXmsPceYSL0KGGy9qCCWvdKngb3DKcg91O6oPGionjwK
                      4gS9RKbsPKCGurtH2x+9YC0xvXRJrbyNkqW9TxDBvTb0CT2g//G7EChwvOzu0jys0oy8TLrgvG1G
                      hL0KckC9F8V2vX48jb2aZT094d6NPbCDtbuyMx09wNtYPHuykj3230I9QsgpPQrVdj26XhW9rM2J
                      vVimY7x9wFm9wLUQvMBHWL0nQEy9FT6dvZbXPT1wtSW9jAquPGpKDz1SgGA92D2lPCqZlb3GMi49
                      p3hWvSzouDyxxLs9wAR1vP1ZcL3AJ1m9DRiSvUffab1gJLI8+eiaPbBef70VyZk9AnEiPaDZrTzY
                      APy8rRQdvXDKPrxhHYY9gJSqvJr1TT2oWLq9wPSSPPPKsD3YDtW87XRSvTYabz2g9Pg7eESZPOTu
                      +jxxYLc92BlQvASJ4jx4bo88gGTyu4CkALx9+FK9egMZPTAbm7svPbe9O3idvWeZy72Yooa8rRWk
                      PeAxj7yYTl+8aTKiPRFtnD3AbUE7jMeRvPKPDj2o6a69eATKvE1vOr2wGMm7jXjAvSYoUT3gR0G9
                      bPaIPDAfmb0QZrC9dcucPRzc7zxtSaK9DuSdvQBSaL1t37G9uFO1vVChD7wA/ri6VzGBPbSjF702
                      AHU9QGybvDC+5bvNJJU9RpdnPbCXpb2xxIY9JkaXvQBMa70YXbK8rQNGvfHmgj1Q7o27Yzq8PaiH
                      Vbw5WZY9VjsQvS4NnL2m/wU9AMrluoOptb0w5Ny7y426PYydmry/vo49AKAROiAxmryGa1w9OCGb
                      vWakFL0w0Iu7AoAoPYA5prqecZG9Uu8IPVupnj1TpoI9QF2MvVTT7bw2yhI9cT+PPU1wfL2K8Vu9
                      t8y+PbCZD71I45A8vdyAPdAnTr04jLM812yZPaicyr0jkSK9acDEPciegryvqK49CutNPf3ouD1K
                      D2q9VFWNPNiHcDwAZ6y8PL3TPAeEML2YyiY8aksSPbBsTr0E2s88I1dlvfPCb71X/oo9wHFoOwCo
                      hzyNoim9GnGjvVAJCbzKRqC9IE6ZPF+lvj0AACO2QB2WOljzxzyBK5w9N0C1PYxWjTxYBpC9QPhv
                      vKMUJb0NDki914ibPaLAir3gNue7crEEPSJUZD2y0W89wEHBvTA/R7zD4mm9SBaDPJAnHb2c8YK9
                      gDIXvc0YXr30qJo8tLyKPHD0DL3aJY69I9CYPcRTD71dNqi97G+LPEjVtzw30749AvlOPQDMdjvF
                      X6A9Ls5XPZDaRjyqdgE9it46PU3DXr15osM9wH2CvRuHrb2/rZo9otESPYjlwbz3KcA983MavdbJ
                      hL2KfLe9V4GxvTh8xTzrhcq9oIipO0+Noz1YgFW8KPZ0PGkgxj3A7mu7AaG0PVZzlL2oUTa8EJ4i
                      PELsKT1uNKK9vyvEPdIVIz19aIc9yj7LvcRe3zyQuzy90C4Avd3ExT3hP449WmuovRlMvz3fMJQ9
                      9oRKPRQY5TwKrV09dHKRPNALL729Ppu9J5OQPfi/yrwrcpA9AEalvTMoYr0wVK67/DEFvc2JKb0A
                      Ohk58xdrvdh5bbzeuYi9GAahPE7Kl73XQK29r4SHPQEryT3kzNE88ECAvYAzLTwn3Fa9XtkOPe7z
                      Rj3tDlq9guMsPcCrADuIl448wBrQvPtIvD1afG+9qmAIPbCZ07sDj1O9awvAve8St73KoKK9intH
                      vQYqEj1A12m9jgiGvY3Ebb3V+qA9bL/3PORzEb2vPKo9Y5CiPeDXvL1Nvp09J2u2PehOir38XQq9
                      nAzSPJdZXb38M4W9SpcrveDxOL306MG8oM5LvVc7eL30BQm9qVODPSnEuT2W6xs9vWacvc5OMz0S
                      hLW9GAsSPKBTpbzKrU093HrSPP22qj2qNFI9uFCpPFH+rD3mUR49kLNpvDGmhj3sasO8CTGAPRPk
                      ar06Sn09QJU8uwJ5PD2Cnce9pnWovcpTcL2azQC9PB4MvdNEkT3GTyw95QqnPV3ZYL14+5a9WnU7
                      vWx/vzzAwqk8Ja+LPeERrT1aDmQ9qrZcPYAAijroRCm8ADMcPIBmijwu0Vc9TvCgvU6yfz0j5bS9
                      nUFtvd3dIb13FGy9h408vd7JMz3IFpQ8pox/PfrHZb2B6aI9++rCvd2joT2wKLm9UP/zO6DIG7si
                      k5G9UETzu3LhtL2At1+9QGAJPNPqs719vrk9KGXxvLcPcL1zJLw9t722PYo9SD0TPaW9kLYGvDae
                      Ab0mkAW9ulOnvTD9LTyKvhm990SxPSighTxYGLc8UB2Vu6JVFz1LJpe96PkqPDJGMD1Y7zE837ao
                      PYo/vb17c7g9wCLzuizSE72K0SS9SrNtvZIaHT22t0Q94OHLvUV8tj2zKq891aapvXY9bT1ATxc7
                      BNzRPHD6mr36MEK9wxGUvVBCbb3aODc9uhtevUFfhz2nT8i9iMWXvVS8vTyVT8a9lG/mPAB7Zrwx
                      v4A97ESrPL0jnT24Vcg81wZVvTXhgL0gQDe9xuekvc01pr0GZ2o92gMbvRBaALwwuhW8W0PCvdJX
                      dz3D6ma9ldGkPUZzaT1Q1HM8AOK+vRwcBL2g8y07gpVUPYAJd7pVNZg9Q5ecvaAiozusX+u8s35V
                      vUwPkzzFg789iKzivMPBur1Ngcu9zYO0vUjzlbwQwUm8MIqjvS7pSz0147O9wNmPPBswnL1CzFc9
                      wBqQumO9Ir3dcjq9ALICu3gz9Lxza449o/fAvfiMn70nvx69GjBSvVJqWz3YvXK8dUC2PRBlD70n
                      raU9ACvxO8ayqr3HK8I9rUrEvTJzYj0MXos8gK+COtDXoLuAhaK9TZ+cPVCjUzxEPPY8ggJEPY1E
                      lj3U7IO9Ml+EvQDQ3jk7Qpc94n9LPWjHJLy9+ky9wORbuxQvhjyMfsM8nNTPPEy4njwuY149EgQB
                      PRfnkz0PRsa9Y36oPR1qNr1SkbO9XcQwvYAGczzoDsi8KVWcPdHkyz0a2ou90Ku9vcBeIbxU5qg8
                      LDyuvJrXHj04JdK8LFSfPHSBibwToDe9gu5HPRhhqL1zlII9gGLUO+mLwj2ofkA8D+HLPanyrz3A
                      G1C7choWPbScsjxBp5o9z77DvU3Prz3KyCm94MCdPBMmNL2dg4y9LE6XvD0swb3wKn68psZ1PXcG
                      Kr0udJa9YjwOPawFm7yA7MC8cDdZPAHNlz0AoM076IphPNqPnr0gH6O9wFZ/vek0hj2STsS94D5h
                      vRqbAD1gVts7ih5yvQgxrLyjxTK9sAzyu4n+xD23dZU9Uwq5PaC39Lx9qqM9BtQqPQLmDD2osa69
                      hAaDvWq4AD3YPlG85S27PZpIGD0OGCU9gF/3ugifkL12haO9qJhivEf1Vb0jqF69YPvbuwBzSTyY
                      Kqi8AfO8PaHLiz0Ahnq5ZdaGvSqyaj2U39m8QoZYPXpxKz0Pzsi9J/KUPS2sTb2x9Ls9GAiWvJhE
                      0bzdRlW9amlPvU3Fqj0Itb68NYqVvbhcsb0E+us82cmWPX1wRL3yvls9wLw1uxHKnT1HgBu9UUuP
                      PeBl/7yDkCa98gsSPePvu70Yf6e8AjKEvR5Saz2UnZO8sFiDvX1Hsz3gN468xL/YPPMHrb1tCRy9
                      xsmgvdRkxDzUn6w89zUtvfX4wT3YE1Y8Es1tPShxTbyOYl491IfsPMA4mr3+CiM9QHCFPJPKer0w
                      Tbu9QFmbOsDxBDxQYpk7hSCWvdBMT7wTymy9GpdOvQpdHj0NBIs9AEeSPAMGyz1n5Ve9NjsKPeA2
                      Zb0ALYM7morGvT/TxD00uwC9QMxvOwDwMDlAtkK7IJsOvRTx2zxhTsw96Dx7vGo6Xb0AZhM82vtm
                      vWN+d70C6F49mloEvVd+zD31Fp298B9PvCK5SD3MS848A15LvZfRS719+4w9MAqguwbolb2SsjE9
                      CvA8PSQ56jy9j8M9vf5IvZDPbbyYUw68ChMsvXiZpb3je1i9kk9/PapbHr2MNYM89NrAPGlFsD0A
                      n9m8tAexPGj9U7wnBLO9EPd2vMDMeDu0iP+8rBetvE4IUj2A85C6DZ6QvT0OjT0Ao7E8T+aJPShD
                      vzwCGjQ9dw9QvaB0hL1gU9g7jaKovXo2Qr0Acjc8ZlBpPZ4Ej72Rp8k92B+RvVtPyT2AbS+9clAH
                      PS2ewr2o+oa9FNqIPJSL+rzQfd47iiMPPeOtRb1WwpG9K464PcZWF73sC6Q8r+nCPSa8kL2GH2s9
                      wHA4PADkFbmgL+u8moZjvXjyqr0JC4Y93R4evfh78rzc6s48RYLMPa5+Az2Tw3+9WDoLPFK1Tj0D
                      dJA9NskuPbmrlz1aSUo9mgXFvcConr3rS6g9wVPCPTijlL02xZa9sMB0vAIkID2wF7s7v5WtvUwU
                      iDwWqQ294aKuPVqpLT3XojO9jeabvQdgNb2MsaU8HhWJvURc7zxlE4+9PSxovQBHdztowDQ8EPmq
                      vQpvaD26jiw9GaK0PRS7vzzWOgm9gI3Pu1j+VTznq8E9laKIPVhw57yAeck67fogvUNroT21/Zo9
                      iIGtvWFlnT3mhAo9aoZVPchex7ww+ZG9QwMdvYp0qr1CyKO9rMv9vFinlzza1Ue9GZnCPeXpnj3M
                      Mag810FkvRFOsT0L+r09rZmdvbrfaj3qcmS9gLM+vFN0HL1KmQE9Ii1KPaYgcz3VLIu9MrViPawz
                      4TwSNJu9qu/CvTAkVL2wRZ87QAY4u+x/6jxcKuo8Gr2XvdB6rL2CMnM9gOD5O7r7Nb26MVy9KpRh
                      PWPGS71Yn028IAHHPNiNtjw3hag93m4oPYAclryYvr8897G+vVBIVb0aLj89KAxJPJ1jIb0W3EY9
                      8t2UvUdAsb34ov+8iUeBPWeqxz1IT7o8YB3/Ox6RUj0YoZ08xp4AvTBhy71glqK94/FdvZRi77zm
                      tz09OqJSPelAmz2g81i7VArZvD0CUr1KxWS9B5IkvSX3jr2tI4q9zOuiPD1dy726uWg9mO5yPMwu
                      17wWyBs9qKBjPID7crxg8vE7AAYmvUbKYz0gNs28oNd9O43Onz1/HaA9sI18vB4+pL170669JCOG
                      vVj1VzwGIDQ9HxC9PaAkf70Mbti8Xg9+PVDRXLzI/Zy9IyCJPWXUvj14/7087N8LvSz0gr0VQ4o9
                      1JUNvSytqzwgVKQ8/f2lPZARS7yJyIk9sAU4vZB0ajyZVoY9iUKpPbjuhbzCSHw9V3ptvQC9t7sa
                      Q6a9YL8jOy1jsD3GB2c9MKgXvWWVjb1bC7y95TCwPV6wpr2M4MA8JjCKvWwBsby9dJA9iwWjvQyq
                      F70Ndru9Reimvfuax73Ixrk84OjOu/ADUb0mBpO9cre3vWCHP71I1cG9CuttPXgNhr0X/1i9Mnml
                      vYhAorx4g7S8SFWvvWCbsbzThrO9dpwiPWKEDT2TNMc95xkqvW1Htb3ksO48tJf7PFg/lTyq/HE9
                      rSU0vbSRF70yoi09cNOpvdXEnr2tyLK9YFrqvDC8xjsowoi8YBu8u6rKdz0qdi09fcxZvfoUtr0F
                      XIG9CDafvaBNpL0Ucvw8MReIPVNPdr1AjgO93+SBPTkPuT2Anz+9gIDTukoher1ejis92FOxPNKS
                      RD3gdtQ78q8NPY32c73+qBc9Be6hveo3MD1p4pU9WHpaPMBhVbsLh5A9AJ9IPKwl5ryIToO8wPW0
                      vYD9V7oaa2M9ICzSvPfONL1GYRC9yrxCPYLJfz0qkQk9kilNPb1SoD2wYTA8gbmFPZgcdzza9w69
                      tc6dvTKwOj1pjLk98vsRPQUvub0ONi09YHrzOwkxkz2p7q09MuxzPTsHuT1gMqm7JhwVvZhgMDxT
                      +JU9eHbYvP38ur2g1Su7aPAaPHNfnD3ICLm9uPOvvciwpjzpp8Q9RqsWvWCqn7tMOqM8GyOjPZ5V
                      Az03E4A9B4I2vZp8kL2upo29lfK4PcDXnr1u4BE9aE0gPIB2X73YAGa8zCS1PLjapDwAVxa794yk
                      PZFChj0/ObQ9cvBzPVBEsL1yXT49zVhcvadHaL14bbM8R9jDvYfzL73wRgu8jviKvUw7uLwi4ks9
                      uuJnPWBKLr1wAau9jIrePAcMPL04WrW8idSoPejSqDzUUJg8N3ySPcBErbqYSCe8W8/IPep9jb3v
                      fL09x86tPaCDm7txgZ89UPI3PCiK77wK0Im9jt1EPV40ED2Spgk9OpdDPSjFdjyn60e9gPyzusAy
                      jjwAKiC5PhV+PY1jxT3wKA884MssvWDulL01ssQ9AHBIvAE1mj0dwXC9sm5RPV/7lT0xPIo90EeM
                      u6Foxz0In7W8snXMvcnElD0wz5C7aFY0PH0DmT1RUco9IC2YvIoDu73Q0mS8ZZ7APSuMzD2yqCs9
                      FNmGPCAhRL0X/Kg96D+OvHqga73AdD+9ALBHuB/KsT20Qwq9he2ovTrVcL2AGcm8XlxRPUDOTLsc
                      nAO9rRGYPYAF5zu2ZY29gNbBvKhUwr0ioTg9FDnKvMArWbzi9T09LcHHPQJ3i70RT8I9YJU6vZKF
                      MD1ArNe803FWveK0h72WIX89k2qiPSbDYT2wE+I7HmZXPexsiDzvQsY9JDrZPP0HTb2wUse9oIqR
                      vZ6IDj0SIUA93mRSPSHLmT04QJK8npOovdcTwT1bdYU97SR+veBhxLu7WbG9mGWiPCe6oT1oUn68
                      l7BBvUDI8rxxwsM9NX2/PdOjrr3QMfm7APifO1Lxxr1XuLS9wEGXvDJHwr2MRxK9qnINvWC3tDsQ
                      ay29Itc1PdkOxD2Ozhk90MGQvVbjlL1y+2k9WHUOvODlG72odyw8R+GRPUChGjzDNVK9ndNnvSYL
                      Er2hA8A9RzjCvQCqGbvR8aM9qr4lPTqlcz2IPuS8CzyXPTBuBb3snvC811lUvYyOm7wiCIG9iPXP
                      vM8Jjj0VZrE9INxFvbKehL2obWM8oHOku4AvXbwjZ8A9Z3tIvSCnt73QymI8gKNuPNn5oD0AUEo5
                      IrYzPQDqyjqK6p+9hzo6vYB8+ruIYpy8+lx3vVKbUz3JArQ9xaS1vdwhFL0niS69H1uLPaA717vR
                      frA9gE3fuwR87zz5mb492iglvdAcy7vzMya98IZNvO5cBT2YWXG8NDIDvVBgdr1/qsU9+PrfvB0P
                      KL2KKAY9SM2lvcHSgz34XKM8LMHNPO7wEj04nMm9uly+vcBvmLzt44O91HiAPKBya72t5Lo9AM9P
                      O71Ruj3kn9s8aSWtPbtFlT3Wk3491pUEPRm8yT3S1LO9mfSdPTdQsT2a7zG9dioBvZiqLLxLkYM9
                      +O+uPM0Wc70lr8g9KO+UvQAxKTvi2su9CF7IPF5qLT2aRhw9kXOEPaWVm72HREe9WkwVvdclI73D
                      9kO9uhFsvWC2gr0Xu2K9GGAyPGD2rDxAWm87sYGaPcrrJj2YSFa8gWeTPcftQr208b+8v2aZPRIh
                      DD0p9cs9f66+vdyfib0JtIA94BiEPGBcrjsAkX26Z2krvVp+cj0KMhe9qpVmPSstkj2gdES9UCUY
                      PN3qr70hIbc9dNzAvDhCzDx7dbi99J2IvTXPnj0MJwO9koNGPaB1nTyzUZ+9sBKyvdKTPz1uLns9
                      oDG2vCJXOT3l1Io9yssNvQDjMrxtLaW9qEmUvR79Bz0BVcA9A9HLvSTZ0jxCUz49YNEdu3CoErwJ
                      P4E9byjDPZcoKb1J9aM9QJ+/PABoU7u6P3Q9PpQRPUwWj7xAET27UmFlPQJPbj2xHcY9oZCGPUa+
                      Yj2gdYO7Wo5rPdjTVzyAAsE6QlJYPZLLPz1VAIg9Io4WPR2rSL13moQ9AOH0vCfTxL0AGJE8KiBV
                      PXpDFT2UruG8cZyWPS9ylz1bsoY98GNlvJqPeb0yhTw9NkRsPbgHorzqF1s9APW9O52cnD0m6R49
                      Q1rAPRjrpr1gQOK7En97PaFuyj3ArVm7mg15vQjMqr1MdIq8sicgPUxUj7w+gyw9rb7GPWTFCb23
                      UJk9Sit4vedtbb0oHze8WIqcPFxM6DyAC5w7MIj1u2V1s73kr/U8kimGvWD65LsKIXQ9EhwFPa1k
                      iL3wU1K8pQGGvQqfcD1Nn6q90G5RPKFgiT3KpSi9QEkpO/seij0XCrA9IKGguzq1Br1QHNO73Sya
                      vYhKxr0wJZC9sUPKPcubtb0wbj29y3imPfeonj2OEjA9JVbLvbuKhT0tq6C9DfEavRRTA70uoqW9
                      1KuLvYkMqT1SnRk99dCwvcHJwj0orOi8GNKJPL3EkL09WDS96i5OvRSupLz3Yb89YGZjvYN/qT3I
                      o9C8Z705vURL9Ty1dZs9lPsDveLgRT0B05897b0xvTrtIT1MBPQ8yipKvejAtLwjJ069WFLNvB0Q
                      hb0hHZ09vRmbPVKwgb3oNLe9E28tvRJBBD2qm7+97cWOvV2kxj0wO1I8CIyGPECYFjyd17W9wvus
                      vTiWoTxljKQ9dWy0PQDAK73zH8q910uZPQbWfj2QIWq9mJHJPFCmtTsVU8y9CMiLPK9Rlz20Boe9
                      C5e4vUDtqDprGqC9FAnePBr/W73Lfci9AMZyvXCBlL3xbYw9QBelvWoaIz17XK+9202CPd/ewr0w
                      14C95n6AvWAojDvApOy6MllEPWrfBr2YVp+9jxG+PY/qw73WmhI9wFMvvZTVrjzDga89gVKMPcAW
                      Szvrrb49f3iXPeqPXj2AVjm8YY6bPbUbvb31w6q9WHeVveQxzjzgc508wHIzPNAZBbyMLb+8mNMw
                      PGh4rDxzsLS9ILz3vE7gmr09Aie96IB1PEGmtj3enHc99A3jPKoIgb0Q4Dy8IIyVPKiXmb2DyVi9
                      xeWavaIVVj1Kvau9g3yZPZaPkr0IYcU8iGqYPLp+Lz152cM9rkN8PYyRDb0sDZq8aGzAPMBvKr1o
                      ttO8CFqovSrjN71KfsC9AMgkuhAyULzSOAU9IFahu8BFFjuCvY29wCn/vMAjI7uSdR89nsF1PajT
                      fTzeC0s9KKXBvA1Kgz13Zas9gPK8Ol+Krb1UtYm9pbKEvRbRTz3QNbI7aHugPFLubz1uJlI9sKwC
                      vXq+Qj0dCFi9dhgWvfq9DL0deMs918NQvW3+iT3Wfg89msJbvcHkhj2SxQs9oMI/u0pWVj1IAoK8
                      05eOPRrBa73dkTq9wH4OOxR8wjxxWYU9aHeHvOBttTxuu429gt5aPUKzCj0Adno747KrPQRt5Ty4
                      QYA89Zy9PZFYlj2abx09AC3huWMtbr0fJMi9hSezPS1dcL1RfKE9Z4pBvZArPb35eoI9WuplvcNk
                      bb227wC9LIrjPNEGrT1EUe08sKqPO7BiSL2E0dg8cGBEveK7Dj06uV09a9qQPZEexj0UZuo8Tf/H
                      PSoqDT2gzIc7gO1+PDaMRT1GVk09obC3PXp+U72dWpi9inRhPUrdQ73yR7q98kxsPQCrgblLYcu9
                      wMCnPGCFKLvaNGI9QBsNu8A9ob1niiq96TSEPSCJ7rsqYkw9Qu4DPXr9HT0t82e9AAD/OT/pxj2w
                      qFm9YjwNPTBVR73RJb09DNv0PItNt70yXDI9oHweO+hEyjyY1wo8mRrEPTrEPT0MZ7Q8lKaDvV24
                      ub0yCHM98LQ/PACU5Ts19cQ94aDIPewsjLx198C9GE2GvR2cV71zNGK9gJ2gOv0mtD16OKa9pbOI
                      vYAJIjxqOiy9YERUOwBlgrkoBRy8WMRKvOhrMLywN+u7gRi2PV11ar3zq2C9He9OvQDVSLzoI8i8
                      S9i2PXCUhb1eKA892AgQvIBPpjqcEfo87AMRvWjaKbzx2ME9CbqwPSG/rT3Mbbu8gAWQu6uimT26
                      JwU9aAX3vPSVozyUlOQ8qM20vaJ1TT1qKBy9MsgJPVDRC72gpbI8dBUWvesmrz1a41o9qJGLPGC3
                      +TuAtR86iCqnvXP+oD0YQiM88Fs3vUJIy7019cC9X+rHPYAqGLo6o4W9tTy8PbDZUTw41vy8zW5G
                      vcIqiL1gxCW9j8++PQQI4jwC9Wg9ZqwZPS2WqL2TbpS9ZokZvbi+u72Ve4e96FRyPFjmQrxAnEC9
                      YEb+vEKBcz3KcRE9R/LHvWgYDjywsbm9zdtfvdhkh7yA+sk8QUKzPYWixD208Ku8upt6vWiDOjzZ
                      jbE9hzN4vdL1aj2Mwfy87C+AvBTXtjy5Ebw9M8vLvfCwBzzOiCA9QQetPfAzo73ApgG9EI5avV3H
                      bb3SOrq9UEZJPDGboD1Ggk89iI6TvXPmj72qqzi95s82PbJtJD2YtWE8lXXCPVnKkz3C7QI962WT
                      PUzY5rwFqrO9oeCuPWpVUL0QnB48IgUfPQBf4bxfSLO9LfPEPdlupj2QJMK9EodFPa3TI71YcsG9
                      gAxMvNBE9TuMMve8wLyDvBWZxT1ANHC94f7FPS0EL72I4a+8mPfDPLK/bT0wmn68KUXFPdZKGb3A
                      CmQ8lKyFPHbLbT0wbvU72u5IvdjZ8bz/9rc9lGSIvHiDmr1Ct5W9yIiwvAQg+jxK7YG9QOpOvJiv
                      PzwSxQE90PtVPLy37Tz/xLI9YMN5u2D1+buwV/s7TMPJvM//rb2Joo094eeGPUQd9Dx6Th09FRSy
                      vQGcxD2plYc9COG3vJKbMD1wwCe8Z7KkPVuuyD3tscG9GDFSvNQXoDyAuuM64C65vBf+rD3Um8q8
                      AJiPOPoWET2P/og9wELMuuDhvTxsS++8wGykvflehj0+fxo9XqxdPamBtz2gNiG9DuSYvUoLDb3t
                      IaU9eOaYvVN/Rr3tkrG9mMELPFughz1SYyU9omthPcBskb2ugTs9tPLmvAL3ND12fn89EtgZPRjY
                      v7168Bk9rFuvvHVZuD30a5g8OJTFvFhecjycivo8uqo5vfoWdz03LTi9MIlHPEnJmz1y6m49Uryj
                      vUgby7wwznW8oIJ/vfRcgbxIh8Q8qA2JvHZTib1nTly9jF2lPD2ohD0AaBG4U1Z6vZiry7wsWrq8
                      d6BYvYA84byPyLa9cNauvYBk9zvNvWa9UDc5vXIeUT0cgfw88ItWvYn8kT3OiXY9DBqAvWqmpr0V
                      EKG9tGPSvDaDaz2L9Y89eo5YvXA/Frw08aC88TS+PeG1rz0KmQI9MA2Ju4rmJz0OgCw9bcOfPQbp
                      Dj0DGhy9cBYDvcntwj1OtB09oR+iPfB+IDxQ0+c7kOREvPLFUj3QwjY8DNvNvC4fq73QC3A8IL+K
                      PKBru717K7y9nw2+vRqJFD06kZe92M3XvKAzHbswkpa7IE2mPGjdp7zz4IU9GBM1vNBeAbwgh+O8
                      +EaTvABBoL2A8K08fQqxPTfHsz0dbny9DUdVvaq9WL2MYPG8wcnJPd4wh7291ni9DV6yvUuxtz1M
                      fYu8IyONPUyOAL1gf7c8t1sjvQYNaT2Yj8+8jLKMvdQyj7zAtda8cEY3vKhWyTxA6I+88uRnPfcB
                      tr1p16A9LXa3vQOmyL0c8Pg8UUiYPWALSzstupA9zKrXvJWKgr0gtpq8x/1gvWCji7xCeYG9MMck
                      PHhpmDyiujo9ZHDfPFFBnT2yWQY90L6YvSw1/ryrkpa9gO64OsAuwDoog4O80PVevLtejz27+I29
                      UOsbPHLLVD0jB3+9tF+wPPdUf72orC+8sLazu6CjVruAE6U6WOddPNXwgb0phsI9DRaFPcVdtT2X
                      ODa9jMyQPIhzjrxBTcM9kpl5PfbqIj3JWYc9ABxLOVSKm7zA22q7sBTAvVOMSL0RZLU9mNIIvNgu
                      LDyAAdM6YABwO3ZZCr3W8lc9f4yxvUjQubzMjKQ8FilGPRHRgD3ywpW9DDepPCiCDTwA7Ri9TQ9a
                      vVTsDb2Qxm08LButvPAvpb0dSJ09XzGwPSGFpT10Y/Q89DeJvZb+UT1kbfg8SDyrPCjVjTzyFwo9
                      aHDovEgGoLzgEeK7eD+bvALhVj1SG2Y94PS1vRFjyj29IJi9eALFvEtjjT1jFIc9be+5vdTL8Twb
                      g749jqs8PTnUkj0AVqq8wjwJPVelxD0jPHK9U6wvvXHdkj0Ee9M8o1CyvdpLF73dgYo9bKWdvJ8I
                      nj0OkJW9UmRRPawA+7w5Qow92stPvUaAC72TllS9gF7LvNILDz2KLLG9SlkVvQDaqjvqGoq9DHXa
                      vJS0wDyuJkI9Qn1FPaj8iDwbEY09jEWIPHj1j7xNBkW9EooYPZJkcj30prS8A8CqPYDn4zoj6aQ9
                      m5fFvcjKyb1zNpI9suwAPT2xmT2F0pO9QdSKPaQ/gr3wJru9YN2dvd6uKT0UibW8YJIGu6mauD3a
                      qHw9AbeIPZKfED3GZqK9ZGKMvcJVOT3dEso9JBryPO4Wcj17css9vJoEvVs1ub2y0zc9quJuPVj3
                      rb2byss9aANIvI4Faj0TE5a9TuYGPSyG5jyFvLs96wmovaCJ3ztAxnq75/0dvZKDCD3a7HI980CD
                      PWIEVz1APl67KvI9vQK2Yz2C1zc9qNGWPELDdz3T0Je9KKFovIO0cL0F0ro9A0eMPZb8Sj2DkUu9
                      Ftd4PTCfDjwyxic9kmUiPeAk77vfqbo9HuQIPYqjUD1yUau99qVtPfAySbw6sUm9LeDAvQCgxjpD
                      dlK9vollPTuAsb1YyLY8EIkXPB7fbT0Aaoo5UgfAvQBzUzrWsho9F6Ydve6hor0msAq912qPPajz
                      ybwlX7+9xbGfvR3SQb2zcac9sKi1u/1mhT0E64m9uoYIvULvcz0N61u9/Uw2vbKEMT22y0Q9GHIT
                      PNrLCj17pqI96nxgPYYNdj3yuTo9IZ+OPdLEWD2S6EQ9VmxsPf36O72afIC9ANb0Oz2+wT1zvKw9
                      RYWXvQyI4Lzq8VG9+oOavXBPLry9gqg9MPPau0CTLrurJrU9H6ORPbBrcDwACsM5DmBtPdeQL72q
                      D6m9mD+yvaCUWbtuu249fjGYvRmIoj1SpHY9IDvcO5+Kw71ieHg9D2iDPQA9X7yShRo9PhAdPazT
                      3TzA6047YiRYPdDOXr3Tp4o9Ui9ePWyvuLxG6xY9URO0PQFXnT1QTam7HeRLvfKKWD2ELvg8l1h7
                      vapGZr36Bke9Y5kivZJew70FlIO9jUm4vVOfrj2ALP86fg5bPcpSYb37OZ29GhW5vc2mtr1mr6K9
                      iYulPRATUb0k3dA8wtt1PW7iNz2Uv7U8sdG0PWZAEz29+LC9awepPS6vmL2F8a89d3aUPYpFWj3z
                      to29WNyZvFijYry1YrY9vQh+vUhxmL0ZzpU9aNhUPE9xkj377Zu9C+2ovaDsHrswt5Q7U6p7ve4C
                      Yz2eyl09PO7ZPPLiFD2Z9cM9OZubPWCM1bwgmJy9gDhJPBrZYb0gNRq9lMeTPOgdOTwYcas8kWPM
                      PaAqT72/pa09zKHBPF08Mb30QqY8Pu4RPcCaL7yqqRE9uk1xPS+Xmj2gkEE7QmEePeCuvTvk6v88
                      KJJlPDQJ+ryaF209kSrGPZADYL3mzT89EJUpvGObYr1Tpzi9+E6EPBYALT1Q/p07wKBMvHlenT3T
                      2YE9vVaGPeMqnj2HVV+9F2MqvVa4j73CTsC9wmdzPejQ+7y4s8G8qXewPUMSij1Up4w8biYgPXKq
                      WD2vZbq9slNaPaSQD72+OBM98P+VvYRj3TzCjSs9VODFvCgtNrxrRLC9IdaaPZCGPjwcHA29SlZY
                      PRhxFbyKYnA9oO9RO3yjEr0AJKO9wth3PXASJL3Ql3K8Z/ddvdn9vj0D2qy9GHGWPAYseD1h9rg9
                      omDLvWCsUb0YYIM8Bn1NPeDxtjugObk7KZ62PWB1TbuuSw89SwizPeG3sD3G7w89GEzMPNdIuj0L
                      Za096k/GvaIFib1AaCq9wHBSvQDvpbuqm6O9gaK7PUChjTroJz+8Yi0+PU39ZL2Cbx49bE3bPAD0
                      obyiX5m9dWy7vZJZfj3rx8Y9IDu+vblqwz0Vaqu9/9WEPQJPRz3VvJC9Y2SevZLTMj2QGAq9cIsR
                      vGRC1TzG7wo9QOclu/qQVL1qLRC9uio6vaogNT3TZZg9GBe9vc1ouz34mv+8fKTqPIfGw72hFLI9
                      niuCvbCtuL0mC2Q9vuqJvXDsLLxX8cG9ANhCuggk+rysrOM8aDloPMA1ibwI+Ny85mkqPcTa6zxS
                      0si9IjQIPaM3mb2y5jo9aVHBPV0bZb3eYVY9LlUoPcqFTj3DiK89kFBwvYBhSzya43q9KHePvOD3
                      ojvKYUs98uI7PbpGET1AGgM7gAqKO8BIcbzJt4c9ADqKubB7wjudUGq9JdiUPRlzvD0n6IQ9sjAy
                      PcWhqb2z7Te9sLnYO8hQr7xQDBW82stmPaBi9LuChw89bguTvQCwGDrtYFW9EJ8CvGwUlzxNTce9
                      7Mm4PJrgEz3ArhE8cH8NvMgJhLzEDO48P465PYzw/zxAM/06yGP7vMAqVry9dne97oBQPVUGvT3j
                      08o9uKfHveu3qj1QphM8QK7BvbjMzL3NN7w9QLQ8vSzupLy0gPq8LMCEPKBirzxHv7e9VY6NvaRQ
                      +zyARu26J5a3PbDiQr22BFU9PX9pvUCSBjw6vws9xQuVPZw74DyjlKA9W1GsPfpwo73cDuc8Ki0m
                      PWmTuj2VXqi99JYDvRptub3o6YS9ME06vJTNnLxHsri96pRJvTyg+jzsepG88dejPXjWtDyvA5w9
                      bcOAPW2CuL0ccoG9FwhevdCN9jsRYcc9WXKcPZO3PL0yIx891VeUvTCRFbziBA49rIPUvOJ2iL0K
                      rXw9cMM+PLdeoT3CjLG99BG+PNowJz26zLi9vI/0PPMegz1ddsQ9n/+YPUNSWL15gZ09LjAgPWDh
                      TLscbvw8EAS1vVj6IDyX3Mk9QP3zOijqR7zgv+G74M/vO3edfL2oN1m8MjSavWKoFD3nVr696Wiq
                      PT66Zz1zNbU9PrEwPaN4fr0Ppbu9UJIlPOOguj0owUK80OUTveCS/bxW/HI9gvNWPcDgE7zAWVe9
                      YC5DvdrJfT1aD4O9Fr8uPSUblz3AGOO64CP6vOHpsD2Ti569uEbPvGhwWDxQYlQ8XHkCvQBq2bw6
                      EQw9q1qrPRsPqz1szsq8pyB6vQ08QL0AObK98EgWvWJUcT0dyU29MD/vO42WJr3tLVS9po4TPeCF
                      kTsaNDw9Z2IqvQ9Xjz0Rv589wDMUu+Bzwjvjjny9YOpEu+hQob2vr6Y9WV7APdrTSL1Zb649vmef
                      vbgsizwCyRM96PIGvIwrwLwwxoA7asIcPWX9tr03J5Y9MZKWPUugoL2Uw7+8o7havXnHpz1edC09
                      siJPPQ5Zor2ZF5w9irJtvbi2obxTYK49goccPYBizDrPV449bOXkPPzw8jyA6KY6wisIPew4ljx6
                      Ehw9XmxpPYq+oL3/Z6g97OrWvEAHQzsHOp89AbSoPcKaaz1Vtb89R2quvQAmw7srxpE9oXypPYgw
                      j71ZC6s9k3CvPXD8WTyKAlO9wrhvPT6cST2BGbY9ikohvfp5Nz1g+EO7QJJwO0DJdb0NQHa93aVm
                      vXqOR72ysKS9MGoJPOAf1byLase9BRDFPf0Tvj04F7q8UB2lOwjfpr1WJAM9QwaRPQpoHz189BK9
                      IFuUvXtGrb0awpi9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwODM4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDMwODM4NHEBYS5kAAAAAAAAABDWR7zwZZi94ioxPRH/mj2zymO9UJhNPObNlr2ANcc8
                      InsVPeUcib3iYUc9ZPvRPF10Lb1ZuMI9vamrvclNij1+A3Q9jwWJPV2lmz2luKC9UOjdOzedUb0+
                      jBI9VM6aPHrUXb1V67k9VVufPUCeHLx38oE91WWjvStivr1CeXE98gMnPcEWqD1CHFw9HkMmPUM7
                      W71x2pc9AdCjPaiEIDwCTTA96m8LvfKnwL2YE8U8ljEOPcCujzroVII8V01FvbkThD1C+EY9YLha
                      vU4JIT1QRHk8IByCO5mgyT3Sljo9LNuIvZBRETxMZti8PdGcPQVqij3pfqo9EN1gPGITFz1spr08
                      UfuEPQ8IyD00woY8WoupvSxIDL1tLHW9TZNdvTB5Q73IYYO9QO2DumowAb3hnJo9d5FdvWzVw7wA
                      uDs7QHdAu+RZ0zwnuXu9RKkAvT1JiL0AusC76rdWPYaFFb0I+og8gFC9O1V/lL12In09yemIPUBh
                      XL2FhbE9zDupPBNRWL1PhIw9bErBPGDrwLs=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwODQ2NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDMwODQ2NHEBYS5kAAAAAAAAABBWfTzZLZY9seCCPZQ+ujztwiu9ZEbdPAzq2bzhRrE9
                      2F/bvLh2gr3C5EE9hDCCvSkghz0MK748QKWdvTP7jD0nInu9R8Iovcgmib1aF389Z2AqvYbETT3K
                      cnI9KqSEva8ItT1zUYg9Y5w8vSDUe71AFBK8qLEWvKJPYz0aZGS9ze1PvVcVxz0j66C94d3BPXo/
                      FD0vILu9Djqovcgtz7ySGgw9sJcRPOC0vDzTapw9Y42EPYA/Ub3veb69klGXvdTp2Tw00dq8+IXp
                      vHD/TL2UN9C8gLb0OwBsFrnXP7G9mvEMvdgqwb2r5La9n4qNPRB/Br3wKoa9pVeePUQy5jxGTxU9
                      kNE8vErvML0rI4o907ZDvUDXTzzwtiM8YN/0vMDrQTxKOka9eeGfPe2Yc72DnjW9gmIHPa75pb3o
                      HNa8OWakPcDaMLthTo49gLr4uuLetb1vbMS9BhyEvXDJIL15N449e/i+vepGGz2W5xG9wCgivZAn
                      HDwV46u9ukUUvYBLBTylbsm934CIPcBCkbo=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDMwODU0NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDMwODU0NHEBYS4BAAAAAAAAACI8xL0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        778WPLIQTTzMgp88zIKfPN8UmzwSZiE9fVdHPX1XRz3ESA08sQ5bPC/IhTwvyIU8xEgNPLEOWzwv
        yIU8L8iFPB8i5zvxOVE8BJunPASbpzzKdEc87AbSPA4L5DwOC+Q87bTsO4zdJTyMjlE8jI5RPO20
        7DuM3SU8jI5RPIyOUTxxMu074I0XPPgKWjz4Clo8JY4vPA/l8Dyzz9g8s8/YPJ7odjtPNsk72Lfd
        O9i33Tue6HY7TzbJO9i33TvYt907cTLtO+CNFzz4Clo8+ApaPCWOLzwP5fA8s8/YPLPP2Dye6HY7
        TzbJO9i33TvYt907nuh2O082yTvYt9072LfdO2YYlzpNJl463csOOt3LDjr33xI6TCCNOSWHZDkl
        h2Q51jehOr31TzpLQio6S0IqOtY3oTq99U86S0IqOktCKjpBGMU6QrtZOmLmBzpi5gc6k2VkOsHm
        2Dn3w8c598PHOTh0wDpeU4k6WmNZOlpjWTo4dMA6XlOJOlpjWTpaY1k6Yg7AOhVLljpz7VA6c+1Q
        OvS+gTquG705Qh3SOUId0jmHgDg7UmfiOtp2zTrads06h4A4O1Jn4jrads062nbNOmIOwDoVS5Y6
        c+1QOnPtUDr0voE6rhu9OUId0jlCHdI5h4A4O1Jn4jrads062nbNOoeAODtSZ+I62nbNOtp2zTo=
