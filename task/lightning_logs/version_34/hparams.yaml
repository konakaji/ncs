N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzI0OHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjM4MzcyNDhxAWEuhAMAAAAAAAB+vyS+Hgalvvaodj7TZps+/sdCPkDHE74ALcs8oFYk
                      vWByqL6zn4C+wLqYO6x3nT0Ktzw+QAeGuzgBCz5AyFe+0c+VPgC08TsK1ZO+nJ2dvXAXrLxQZoU9
                      KHgMPqB7Dr4KYic+I+cavjY8Rz6gpIy+2GRPPfqAFD6AUCi72thjPvsdbL6hS6Y+uuJpPsD2zTs8
                      JLc9wAmUPMgiN705CZo+POGqvfjDX77AmLU9mYySPrAPhL1ohnm+nrV6PhJfNT5atGw+EsNcPs6u
                      YT7TFJC+LPCcvYAVWTwQH2q+eH8evWsmiD4QwZE9jOiVvpgeUz3gzxG9bJb6vaDfDr4Qouc8bPyn
                      vsJFdj5dpJ0+OlNdPrhdBD0Hmoo+EFwUPhbU5b1HW6U+uHCcviCQXb4ozwS9gAUQPWBxgb46/20+
                      DKLWvevlQb4AHmy9hlfDvRzQjb6r+n++a4oEvrxd6T0IyUm+2LgqvmrkMj4yujo+NmQxPj+BmL6Q
                      dNa9M8hOvtj8OL3ARUC95c+ePlDaFz7QK9W9qDURve5ZBT7MCpC+uMxWvlhpCr5oCiq9IEAJvZLK
                      bT4QwR2+sgamvmCOAL4hO48+XPCYvS7DS77qplg+hj0WPogFHb5l8IM+xoHtvWiQKb3oEB09NQqN
                      Pnz3tj2f9Ji+AB7nvOCN/70gF3a8ViynvsC49D3Qh/a8cL9tvlfahL7mn1U+a/CcPrzq/L3IynW9
                      IFcqPpZXO7500oI93F2Ovg5wFL5aHhI+6sJZProlKD7jNAW+IKYrvu+wnT47cz++0zWovp4FXj4P
                      T6g+IPYbPiBPS76EIa49mU+gPsxUhr2CmHg+4z0Dvgy3or6AA+M8WNIJPUNRZr5a3aC+kJvGPDZX
                      c759rIQ+s+VMvmjMCL7exHk+EF7PvROqMb7r1aC+/Y2iPryR973FeJE+3dmcPkjCXD1h65w+6BxC
                      vnMOQL7PeJo+cYCOPorOFD4gqCe+rhEHvnNCbr7E2pA9ovpWPqnkhj4u6yw+4MZ8vQ5jTr4AZZm6
                      /HuTPfDmML5xraU+H0qJvsDL4jtOaQa+esQwPhjwE76qNgA+jrNpvpIMLT5Xmpw+wP96PZCoDb7Q
                      sMC9eMUnPq9si77WPyW+DrNRviDDVbzegzy+cJWovG7ERr7bE4O+vHOYvQwawD1Q6Ag+fAGDPfw5
                      mL4iDF8+q2QfvgDFB73z+Ha+j3eUvqALdb7eJj0+f9qKPryqjr3mqU++YEU1vmxfpD2JqaU+SrV8
                      Pnlzlj4QSOS90B7pvMoreD6mO3c+6+4GvkY0Vz7Y1QU+NGuBvWZbd74C1ae+hmcKvmk+jD7c9uK9
                      NoJbvnoWEj5wpNe9OJaLvuxckb14Rmy+Q7lOvq1Ekj5SlEQ+qCUGPZMUM77gc429IDYUvNu3hj64
                      2wu9231+vhxrkz1IuA09QNfuvebtUz6uaDw+nmI+vn84pL4AB0u8qK0Mvqyxyz2/V42++dyEPitp
                      Lr4+cZq+AHKuPUqhaz4kPJO9IudaPgMYqr6cOKE9XFPmPRPzFr4mq5C++vOCvp77Nz6/Q4y+Qlte
                      PogpS72Gq0M+MM7kvOyv5j1cSZo90JKSPB5aJz4QUCk+ANZ2OuDqIz6LEy6+OMR+vlBWmr4AmAK9
                      UDC5vJRXnL0DcpU+mSuPPj5uDr4Ah9Y7l7uVPqCuM7yKUmY+gECdvWi6Mr2oZgq+A4ZVvuPBkT58
                      vJK9uJZdPfgJJj1SHDA+4rt1PkYc/L0a+Ek+zuhWvu2VqD44chs+IFX3PXJcLj4HIJW+AKkrvGAU
                      db5Qlu88JiJDPqBcMrxKdko+Thk5voOfFb6ArZ+8IMIQvYhMQT2Qoem9U/CMPuB3RD3wR9a9Tvia
                      vghVFb7PEaS+Uu8yPtS3iD0ch4i+Un1pPoagEb4wcMi8zz+dvpw5jL2Z/oA+IJ2pvjHTqD6gMca9
                      YheQvsCFPT1Igk69nMenvUB2i7vidVI+NJn0PRCApbyA/+28gNxfO4OpA77AS1y+K0NuvoBW+ry2
                      iL29AChavcjsQr1mtA4+owEKvj8RoD72QRa+bJW/vSam6L2Ab908CvZBPgC64buQz5i8IbqPPvpw
                      bj7MlOA9gndUPnM0P75Aurk7W1xkvrNKV75SiWo+ABgJvV7pRD7sAOY9bfqfPp5FW74o/3e+76Sk
                      vq3Enz7ws6i8kLKsvbiCbD0YbIy+ULyAvcQx+D2SMXU+eotuPvI8WD6r20e+bidgvmDnnT1kINc9
                      dKfRPUC+F70szqU9Y7pRvvhzR76N7Jo+AHD1PVBF7b1+OwI+nCaQvphwfr3SLnM+aCB0vrAH2rwA
                      FsW7kv4TPuiQBb0SNVE+zGaRPWDlb73ofG09oIoQPA2wkT58bd49QK/wOw6Jf75YNl89do57vptJ
                      FL4LXJG+AMRsPaARJz5h15M+2wszvtZ2WL724E4+myKpPkWgoT7gU0C90JKRPYVOkz5tUIY+GaWK
                      PpDbjDzkX9E9wWqmPkggZz0Iii6+cuZfPmIQcj5wcJ484GYdvTtEjb5Adyk+EEFovkSnmb3k34S9
                      GNhyvnCwX749+Yk+XE6ovQiJPr4AAhs75sazvYjFAL2gVbk9T3WdPukukT5Xw5i+1jSVvkCGbb1F
                      gJ4+Ng/HvTDsYb46bhQ+aNRrvag+YT2GhcS9OxdzvmBCATwAs0a98pmmvurIFT6cBtw9CnlCPps9
                      bL7U9Jy+iyxxvjA0tz0A4No8rm9cvjA/kby0s/g9iDIpPYTV8D1AH3a9QLlPPSlHkz6C2jg+IFxP
                      PDA6zD3gAsW9yB4QPS5NXb4UAcM9A5QHvtY1dT4bf4++Jj1VvlLQLj6YYSQ+qyZPvtDcWL6MEY49
                      3oxuvoDAU7w8XN89QNrfu6tvTb42yXU+po/bvZXomj47LkO+2p58PlAtyz0cuNi9WMtiPbCjVL5w
                      5Sm+6IpfvVLwFz6XWIk+DO+ZPabpJz7CM6q+aJomPkBS9j1YiBO+GAtmvnDK/r36Aio+VOCHPdbk
                      PD5GN4G+7NywvR0skD4WZTy+8NwmPtBNgr2Kjkc+4oCovtOvdr6Mr7K9IN0ZPlKnDj5wVbu8oFZ9
                      vWx/rL3AHr08Uq2cvgqfQz6WzYm+eCVRPVZQIz7Drpa+gLTTvVRjoL32I5m+tnpnvsClJr6O03w+
                      IJIevWt6D76itjk+80xavnCktT2/46S+xhuYvjqIdT7spMW9aItqPUyVtz0Afv084DhiPZKOTj6X
                      +Zu+FK3IPU2kpD6YzhU9GGEtvfD3EL7gOy69KKtjvabnMb4avmQ+UOz/PZs2qb64NyM9+zVQvpr5
                      hr7wY8W82NwKvi72HT6ky4C9gKx4O1wY4r2PYoa+MAEaPmgqcr743hO+QEOZPQj8Cz6UHYy9ChVQ
                      PiYrpb6KiEU+gF+BvaYcGL4k2YE9ECkCvnq/Sj4UbNc9IHo3vtPjH77AgL49uodFPsi1HD5GhP29
                      y9UavqCFmz3hwKE+r0iZvgCgFLiQDOA9gNHXPGigFT5wVOo9m0dVvk3ElD5WBFU+gP/sPev2jj6M
                      4Oa9vlNoPhbpX74dC4M+GAMdPjDh+D04BQy9gGlyvMNCob4oBCk9gMu0vYg9Gr1WhU2+mzpdvubM
                      pr4A57E6KNwsvTDc/zxQ1fs8KLaQvtO4mr6zeAa+szCMvsuzGL6x25M+WVKWPuAfOzxwe/O8Qv4o
                      Psx0y72Bm5Q+nDjzPb6bPb6SMEU+ehalvpxanr7fFo8+wYCoPg4Xpr6vxqg+OEo/vSIfCz7YRqm+
                      viwBvqiqYb1EI489iiFnPuBUsD1po5c+CJh5vd6BED7kA6K+Bp1lvliNMT0gY3O+XJrpPYAuDLwO
                      Y2i+2y8Mvgitcr0A6rS9mkVzPtBPXL5YU46+VyiFvh71kL74kzE9seaOPuw9zr3Umtk9ayaCPrzm
                      or7W6829mAA/vefCqb79h6I+oPA2vfKGPj64HAm+gBtHvWMMlL6ScBA+qkZfPq7QCj6qEp++hsy1
                      vTb7kr7gdgU8om2UvsDDBL5SzgM+lksQvmhxJj7UEIi9gVuPPhk0pz70DtY9KZ+bPnFoiT6KZTw+
                      6BshvVCKRL7cYbw9Y8AGvgKZcj7A6Xi+09oQvgJVED5+rUq+pgdnvoTOqb6r3UC+ZOWfvpYAir5T
                      XzW+BW6dPoJXTj4QtpS+7Da9vW1Ehz7WL42+KgKoviC5lL0AH4O9CjB9Phbs0L0kS8Q9mzBdvrC1
                      xb1AFuA9rrVrvjJLDD4mxSq+tqonvoQmiL5g5OS9EKHkPXBH+zzGvC2+ML+WPKAZcrxG0sG9ro0p
                      Pp79Qr7ztZS+OL5ivdD9njz4uVK9InebvkpXPD4a1Hs+E2GgvtsDI76t44A+SKkjvioBPj7svKi+
                      PsVmPktRnz4qyjA+AGKJvk78QT6IYxo9nfCjPgTeo76wYjO+QM5yPVDB6byQ/ao8BuvHvUgCf77g
                      OYG9lscpPmaYTT6itzQ+jtCGvkDJ3jumCd69nuhGvriSZr2LXB++1AyVvoIjcj6IqSY9hiE0vvBu
                      hrzwcQC+6LxrvpZG+r1AE969wLqJvLsNlz7q1kk+sL/SPcP4Y75gKzW9KowTPo1Mjj5wa32++hZq
                      Pq7qnb4E6KO+njBrPrGWkD5gLoW+WK8lPju6nT4aaxs+zoBwvnKucz7Uco2+ziSbvlwwzz3W/Y2+
                      dHnCPWyWhT2yKzQ+c8eRvkLFaj77xqS+gk5HPjg1Eb6U1qa+RBL+PcDxRz2OzWM+vtJWPlNgc76a
                      7TE+sqVHPmDAmz2+CRK+nhQ3vuuxB74wIPs8ZsasvV4Gcb4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzMyOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2MzgzNzMyOHEBYS5kAAAAAAAAAPyw071WgXa+AHJYPGCduL2g2yy9QnwNPhDCrz2WMn0+
                      sxNXvpDGbb6QyTm+MA2IvSAL9L3KgEg+Ll9XPlQ2tj0A2509wEjMOwNNgz6wZJi91v05PoC7CD3Q
                      S468XsidvmhuZr3sUb49fwSQvqAjFzwA9N29ACAPvk0Kij7e6Vm+yh4QPhTE1j0YRR8+NjyxvQBu
                      JDr4Ywq+MEqXPBjqZb1jIFi+7HOKvcAacT12kdO9OKs4vtmfjj7e+ZW+wIzjO8ZTeT5GVZ2+gLKf
                      vpPIB75rfYS+6CQ1vvNWCr7UTPU9cPPIva7VXz6knom9lALBPXREyj2+sTA+5j9xPsHAoj6atGA+
                      dOuBvUbGOz4e2Ak+sopIPuRBmz04zie9jo8Hvu2QlD7gEVC8PLSdvszp+70vaYC+sK58vky4uj0b
                      SgG+Fs63veByVL6xv4g+HrgZvuqLdD621sq9hEiJPZjOTD3+Igy+ANFdvuJ1Fz7JeoE+/vcTPv9Z
                      oL7Drx2+q6SbPjEkkT4IXi++BpduPpiuYL4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzQwOHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNjM4Mzc0MDhxAWEuECcAAAAAAAC0WuW8ncZSvVgywryjdka9DEjUPPESwz1iN5G9Spoo
                      PdRXiL3AemC79AQRvcraP7384Qy9KJKIvR+Syj0HLzm9PSvBPdibqjxA3ro8L6e8vazQvDzB24I9
                      qCJ6PPuJzD2Jhco9upFsPR2Eyb1AvXy8rADFPCj6wjzvRrG96EqxvffmvD1AMRK8a9CbPUCFmbq+
                      UgI9dsusvcDoozys/9C8+72zPbqdmL3YwFg8gu47PeDFNL1UC/s8haCpvcVOq71Kqx09LQ7BPU5W
                      GT2aNgu9LVGKvZJbib2Nmo69+QeePT3ZTr15Saw900RXvdG4xD3bhcc9RuAGPWHZqT1si528j3CF
                      Pclbwj33WU69MF8VPFq0CD2OPoa9EEI6PDR0g70NALo9QOOuOowesLygVuG7FM2ivCfXwr28Ac08
                      XZCGPahJX7z88/g8voVwPcdxGr046de8wfWhPbVSm71KhQy9N2DLvYDlEL3C14e9w53JPfJZUT11
                      zo09Yt57PSGvoj3WeHU94IO+OxjEtr0btKS9MgMEPQBisbvUKr08mIYjPOm6yj0AH3W7qCsXvHe/
                      tj040cu9aic5PU3rpD2e0529u/+wvWLcFD3WvKm9SvRxvcrzHr1zoFO9YIoIvREUgT1CNXY9hm8O
                      vVjnr7wUvL28M+c0vdD/HTzEJtU8NNAEvcwahL0qp0y9KKOoPH/oxj14Cqa8ULzHO4wr37wAxGI6
                      wox/PQAJNDq138A9rCPlvD3nQr2gb/A7raeEPein27xDEKQ99QuqPVLxMT1IsPG8cPUMvT5FUD10
                      8O48LcK/PYDJfLoK1JW99+tkveiSM7z394E9cBupvcp7c70mLw69EGUDvQkztj107ba87qaGvUP+
                      Rr1QGXy8KIhqPFjsq7zZk5k9SnRHvRXoqb0yUXU9DdlRvfLeEj3QfLq72qp7vZ15yj0TN0K9U57C
                      vaUHuj2LFae92A/5vAAumjuDU3e9JdOyvbQx/7yzzbc9TcArvTvHsb3AV3I8rsMTPQjVrL1BqrI9
                      YcOAPdeYP72picU9gA2qvWCt9rx/KcM9cLR8vc6pQj0F/sI9wFdYvLCkxL2sjKo8yosAvQmfpz0w
                      h9m7awW9vfj0izyy7U899FOLveyvvzx7+Je9V4TCvUfQwz0A7X+8ULQjvWByijst+qA9gB7Gvajq
                      djwaPhe9AP61PDJIQD0w3lW8y7/GvTgdor3nDCa9uKT7vO3Uer3K+L+9opwnPf43GD0CZ6W9wLy9
                      vRrpET2yL2Q9oMdSO4CvVb3kiOI8UthvPSxbvjwTzsi9pto1PQyF/zw6gCI9KuslPYM7Hb0jgES9
                      WLiNPLz+7jwoHkS8ZplFPXd7sD0AAJ01ujuAvRwZ4zyAH9Y7/ATsPOrhFr0OS6y9wI48PBgrCTyE
                      m9A8QNSFPACFOzywazq9V6a/PUfvbr3B7L09LDG5PBA9ETwBg7g9oBqHO0LxTz3AW1o8zrlwPUdl
                      Xr0gyZy8mKpXPD9jqz3LRKe9E0+hvXsPgD1HgWK9w8hivakijz1re8w9sGXLO0oydj1hZJo9w9OQ
                      vT6JAz0bmYU93QCKvbXipj3Qtwq8AJuyvUnXwj3S7aK9U2/IvSbDlr3wFwo81suCvUd6rj11csY9
                      Hp8JPd0qK71Qa+67CH+cvEDQI7ygkZi7jIXsvDOmwT2ezqe9C/rHPdR4iL1SpLe9VuWHvVv0uT0A
                      0Aa5RpUiPYGkyD3q8R+9V29LvYgbjL2JQYc9oA7CvYC6z7usovC8QARRvEAVZ7uDIaE9QOitvM3+
                      Tb3bTJ29QDM/vFi/PjxLRK897cR6vQ4urL2h3649K0ycPTN0br30mw69cv5JPaDWwrvN88I9puei
                      vX9CkD3I86a9RD//PNS79DyCPR092/SrvVKri73nAEO90D2ZvX2BlD1qJHI9JzK5PeDZ+rsJsY89
                      XA7jPJiIkjwo5Wc8u+WGPZBRWDzOnj89eqWjvRqndD3BzIw903GWPdypzTzYrqi9WEJrvGA7/7wU
                      H8g8aHWLvGz8hb0AvjK9UkWovchn6rz0BJG8AK3SOWhPtzyH6Ve9QAPLOuHemD29wpK9Zx+oPUxQ
                      7Tz/MpY9cIc4vUgL6rx3DoI9LFWsPOYamr1Qw4i7N6U3vcKcpr0AOJa9SAu8vMpajr2r1K29H/ms
                      PbLCrr2kiIi99I6nPEqMO73IK8O8tOAWvSUjvz2HDK49AHluOxTOsLzm8gk91Te4vQBCnbpVHZ69
                      svfLvcBLvjwWFEc9VUbJPZuUrj31UYy98llGPdUByD3I9YK8aQG5PYWPlr1aTm89S2S+vVBSrLvl
                      6ZI9uko0PVDkob3HZ549th04PYATwb20Dfo8eKHGvRB/Q7xCDca9mNqzvCSF4zwAtn87I2fKvej3
                      mb2V7LW9rnmCvaiip7yvQq+9hhJcPWhHV7xq8gS9Uf2UPUQd0zzdPpA9v3yIPX4PQD01hrQ9Rps6
                      PQDrlbl1l7y9WD2QvaVZkL0Gvwm96kB2vdTUjDxweki8M5WRvQAlczqn7Xa9GD3CvHFcqT1JnZg9
                      RiYGvQq9ob1aEpC9LcDBPYNfL72TWKg9uj9hPZrNeb09z2i99NjQvMK3Yj0Yeqg8K5CcPTdBar32
                      0hO9sOO/uzW3uL1mfhw9kAaLvaBAM71BCoc93kiOvcMpOr1UxJo8rf+aPddPwj3C3lg9sylbvRyE
                      Cb3Hp1+9oe+fPfxh2Dzi6RQ9/0nBvYqFmr0i0Q89Y8eDPXV9uL3vJZc9/gw0Pf3Gtr0ptK890qZq
                      PZxl0TysT488ikwIPYD+ULpM1+S8LAgCvYBQFbxQJoy7eHKxPH7DLz0F2aA9wz10vSH1oj0AWRC7
                      AHMrOzhfqjyCYyQ97dufvdnXrD3MPcK8uQ/DPTr3TD0EkvQ8yyqpvU07lb1nm3m9Cv5YPT3sx71Q
                      3y88a8HJPQDf8bzk5fc8KBA5vA4sKj2BQIM9ewelPcMHHr1dtac9jaetvYwXuLyAutO8M9upvSIx
                      Cj205QK9RN/hPCPYuz3XXn+9yq9dPT1Ihz2mWwy9bVyXPcdzfb1JKKQ9wk2IvdTFiDznjb496NG4
                      PC8jsb3WXjk9LZ88vboODD06BXQ9KjMjPUzk3rxe2W49HY+LPSSy+zzATs86oNQwvZpyUT0nKBy9
                      MJ1UvGnRpD1U4um8EZ63PZe0iT0avIe9HJPTPNRI1zyHDWC9KjscPQYcIT04S7c8dRPMPYncgT0h
                      DLw9gOKAO1FntT06sLu9IWyXPaXvy70AmxG83jw+PcI0Aj00f9c8DzKpPciWx7xOHYO9cCAePGKa
                      QT1w30g8AD0SvXSRiTz0Ipw8gs1qPRe4nT1QDzS8Wu91PcAEQ7w4u+C8KJAKvGLGMj3DhDC9kzFR
                      vf9evb2gprA8ulEvPUq5Zb1Ts6e9bGSVPACXmL2Gj0E9IHSpPDlWoj1Jm5Q9+f/FPQAcBjngkcq8
                      EIcxvNB1Pzzs2sw8tyJ6vUFWsD2JmcQ9YR20PQJRTD2U68e8sLXAvSQH0Tz3o0m9EOAZPPr0Tb1x
                      m7I9agywvXtSsL2yigc9DK2GvAlXvD1l45G9cO1AvI21Yb0CUmU9wrHAvYAweb1gnBy7SLSBvGwo
                      3TyxMoo97MiCvUoJYD2Gb1Y989aUvWCjHL16ETA9cFtfPCAYuzw/lq+92pARvUffOL0dTVm98yGa
                      PeLwIj2qwGO9/A4VvVhVHjwD7LM9AWO2PUbeJj0X3q69AKO2va72WD0C/Xw9xM8Rvf++lz0a1Bg9
                      Y75ovbpdPT3AJVi9jImBvJfVwz2AGHW9Ak4HPQBONjuShw49yc6GPbwy7DxggI47qxWRPSLVLT0A
                      gJu5AGT3u3wWg71AU+o6QFBGPA8/zD2ClZC9mOiMPHdTtj2AsoY7TL3uvDAzHr1CvyA9YFF5O5Rq
                      yLzwo2Y83mpgPes4oT1728W9AEY7uX3exT2ATkw8jlqpvVAKWLxxjJA9+JHLvCLdZj3DvC+9tZXC
                      vTOTf70qYzw9UKkEPFY/mb2Kp5a9wLC6OuDSurvSVqm9AKBVOlpIJD0dlFW9pZeQPYTIAL3xt709
                      bA3cPLBoVjx2QnA9uk5IPc7ZUD29noE9EKUcvWFHhT1z73G9EMicvQQh7zzqt2a9o/QgvbMpSr0Y
                      JBK8gOFfOuhisr3r8rO93Yt6vVXJpT0gBPI7kyfAvTq+tb195Hu9AK5fvRn5sz0U3JY83QrGPYg+
                      m7wOJ5a9c559vbTylbz1UsO9spSAvRDWb71JQsk9bolpPWiKpL0ylre91xZ8vWFkwz06wmy9YGNo
                      u3m7hD2YwTW87decPZQ0ir1zYke9zbV4vYKLVz1Q3Fe9nv1rPRrKJj3wcoG9p5Yava7eET3/VZE9
                      7vAoPbxs5zz2oHo9a4qVPY3Ctz3/U709bJrvvF3KiT23+2y9KDojPAqBOT2z0Y+9ICK1vGr7LD3s
                      X5K8+X/CPcfUjz0CXjQ9QOHFvQAsir0jgGe9rSmXPUdjjj3us2U9IqsWPYuhu72HRLK9IDHju43B
                      mj26rCa9F8gtvdPgLb00vL682ldgvV2yM73dP6w9xDPwPHi+oLyejSY9Xj02PYgQwbxWkyA9IEOC
                      vKBt2Du4I8K8scC7PZQZkjzAXZW9zrKkvZrqiL0tW5k99/+7PVQHFb2n8p09d1VAvYbmcj00NMK8
                      dKjLvITQzDxFKqs9ChqCvb3mmr0BKsc9wUuTPSioIjy2x2A9w16yPRKkLT0dm4S9oL87OwzW3Lyy
                      zJm9Uf+PPWluwz3XS3W95/RIvUIqbj1gnMS7KJIcvK9msD0C70U9aHEBPKNmfb0AjPI6xXqzPdST
                      97xXA6Y9dE39POZ7ZD39YWS9wONZvEHvvz3oWaC8qLHcvJ3AQr2gzCs7ntU7PezlorwnPSW9k2Vx
                      vW67DT0jDzK9cn8jPfCNXzyY44K8KKOEPMHNoT0Ybbk8+SOQPYB9w7rYQbO8krVyPfHItz0J2Y89
                      lO3nvG1vLL3Sp1A9G8bFPSI3BD0sO/68CtdGvSwKubwaVFI9XLcHvd0HX73n+Ue9IDSkO60Noz2Y
                      8dC8eiqnvQsAlr3iTD49DIzkPNyqCL3YSac8KBl+vGqki72FdY+9KslNvTyO3jwuAVk9bHbZPJfE
                      QL0A1AE6gHUEOrZaib2qM149SlJSPe5dg70nM0u941BIvUYPWz3yBQE91XebvYACpTx6wDI9KNsr
                      vKeDmj2tuSe9F3rIPROwfr13TLE9NWaevaCxwDt59JI9g1SavdoQbb3KECm9xuwTPfBDa7y2xGU9
                      d4HFvdWmtj24l9i8s8GIPTrvQD2aAWE9bZmKPah0mb1Q0XK8LIUZvZuUtD16j2q9NvQNPdgMDzzt
                      E4C9w1WZPYLXQj2gqvu8L3jIPWDgu72aaV09ynErPcz6D70UMPo8NuaSvShfrrxVnZA98i0bPb0u
                      eL3wm0i8zgKJvUfEdr0Yu5y83TqFPUmvrT1gOIi7MH/au4fdfL0Mz4a8NhhSPRiwqzzeLCE915pG
                      vTh8lbx4xu686ggYPS2pQb1SYmg98a2GPZDGOTx7EbA9OI+bPAX4i72JCK0955K3PWBsmDuGyZm9
                      Tb6OveOnjj3Id7G9gIrDu8tkvb1UTIa9ULVmvEWAk70hrYk9rOgHvTC2mLvCizE9UpIOPeuDoL1a
                      sgW9iVWTPSnHrj3w8E69eK/IvC9UmD2tUZY9wwUavRbIaT0RhI09HZjBvb6AAD0/kqk9xde9vTp8
                      Mj0QBRK9XkIKPTAecb1Ypxa8WFN/vPIEFD3mcTw9viwEPcGCqD1ztZA9TA3KPIKAKz1ACHu7236r
                      vUq3Xr1Szr69he2wPReAlz3AfWU7QO1jPAFNsj09C5Q9emGYvVBdHb3b4LO9o+6jPY36nj2DmYo9
                      OkUtPVaSTz19vZ+9MJUiPAcKP70jCpU9xpsBvRrjVT3lOI09JTOPPRBHPrxQGbM792G9PV1dI72A
                      bpq6S/DBvcGbxT2jgCy9FcWuvae2kz2gPq877IKgPJe6Sr2og1W8qQyqPZgSZzymVC89I3e+Pe4v
                      GD2tMpy9gebCPUAGDbtgaEu9FPsJvY2SOb0INYa9weDDPWTozTxfMIk9eJeRPFPWGb1KamA9czaj
                      vXvVk70goPq7DXgkvbisk708GBm9zayMPYrwqr097Ve94FeDvU1jNL2Yu4a8udW9PVgXqzxwIkg8
                      TOa4PCJvYT0s5pS8UAe3O4pCmL1AtBW8wHnXvAg4sbxg4/28HrVfPS6FNz3BOco9IkGZvadHsr0S
                      8DU9UWWOPZm9qz1Q57O78e2cPb3ARr3b/YQ9F/s3vR7bYT3eVg49MeuRPSbvA72CgCw93SrCPUBE
                      cb02Oio9ZoomPQCC97mpJIQ9wjRoPasQvr0sKxe9Row0Pa2WtD1QsF293Y4avU8viT0LdLC99hOf
                      vVfQtb2k/PE8DbeRPdSutrzOORk9lM/hvABQtDrKdau9qMHtvGKvRT06dyW9Mp9MPQsMiD26oMi9
                      oJsvvTqKVL0AWQI6ANqtvDeiIr0+zAE9M8jAvRnZmD2QWSu8jWSDPYDE57wm6XY9oGjiOxDWGr13
                      bsg9WJa7va5VcT0q2HY99Uu2veaTKz09/cC9brtwPaTghL3oLb88MugKPXpgKr1DVmW9gshMPTLW
                      AD1vtb29E8LHvTfatL1SzF8990+tPR8zuD2Y6wO8Y5DEva0Snj1tTEa9UGE4vAiioTwsFwW9IAeH
                      vZ26Qb3BN6E9sBYhvA6Xo70AIZC8HVm1PQNrer2TM6Q9S923PQoGaD0CNQI9KsERPVHhjT0r+cU9
                      e5iJPfQEs7yo/FE8el2UveNwlr0H/sO9bE7GPDofAD3DNro9YOIXu0BCArwnKju9bOTnvJhdpTwB
                      fYM9wVa9PQAfIzrt4Hm9bM+yPCqfMz3WZpG92b3EPYfJyD0A0bC8gyiRPZBkIbwgzu285zOtvebH
                      cT22CTQ9U0THvZsFij328hU9B2W0veJnQj3smdk8OLuzvYBEx7qgChO9re2rvWBn+bsY/8C9GpMn
                      vdW5gL22OJe94Z+aPQA25Lr2BGQ9Xe6mPQLrVj2ohCu8cvknPRZ4GD36hSi94rXDvbDyrjtzxVO9
                      gxiqvRJet71gtYm9IHrUvHLyUj2Qo6q96BN/POjrrL32dxU9sPjbu327Mr25uJ89HfErvf40Lz0Q
                      4jI8eIe4vKCwxr1AlSC7fSepPQBYVLiNKsk9wCh0vV4wHz0yHGk9zHvPPBfHfr2KiXC94EC+PBPl
                      S71zpIg9ID7tO9Vcyb3yFho9EAEfvfl5qj3skRK9jAykvHB1RLx3VKs9QZutPfJrfT0ty0m9IbaT
                      PcA5kjzJ7LM90rIIPWFloj3AEJG9NdTLPTJko71Tcqs9mNfGvWx7wbxQcVm9+/KkvVjLnTzJ8pE9
                      86xWvQA4abzg/rg8QAqjvGLEWD10qZO8iy2hvRpqEz2YOqY8IEyUvX66mb2q43u9CmwWvUITcj0a
                      1Vu9+rdavft8nz30jdK8WvdZvakKvj3y2Ck9ZAfxPM6mKD29L1O9PAPQPFK0Uj3/JKs9B5I+vbfr
                      hD1lfZA9RC3SPCyr8LyUfYW9fJrWPOieejxLM8W9fYDJPfSeDL240oK8ipS7vZDpqL0ZrJQ9M/PF
                      PZWcrL1VprQ9y367vXbyCz15Sqw9WGOdvApLLz3UM788YInlvOLcPD1i9AM9wCPKPKwf+zyYCgc8
                      YOw5vcCboL2SoVg9mKiIvOrpHr2hCaA9gKIUPG4DeT0AZpg8XvSVvYBqLL1AAcI8gD3uu8Ckp7x6
                      qoq9KBucPDAdjLsEFu48yE+AvQCTfzs0dO88mjsOvQKrRT1QeW88yieIvfjAiL0/rL09MO/WO1eX
                      eL1i+2Y9oJ8cu/jEwTx3Pro99rxQPYC9gDoAaFI6M+drveWesj0AzMO7IF2BO+D7b73OKkQ9scy5
                      PajE27xQDxS8gaiHPU3WxD257cA9R6yXPesyk72wnIk7UL2mO6JJzL1Kbn09uk9nvfWkiL04H+q8
                      dsVVPfqXur2w1nk8ECk0vd+7pz1z7By9TH4VvcX1lj1A37263YxEvS/5sb2OKDk9BFvnPHpIaz1t
                      Lbg9+JKUvdgDFbxYsry9zK7cPD4qQj3gIIS7EwM1vQCAybuJgbA9Q38fvSkapj1oZmU80IPCO+AY
                      vbuAjxy9MxFdvchQrzz28kY9WKlRvBRg6zzUeNk8+om+vSChkTxAfAO82AKDPAZAUj0K7h89uASu
                      vQAMhLwAkkm9rEeTPDw9Fb21Msq9gIvLvCLGEj1vEqs9juccPREirT3D7qo96OGEvbcYfb1EtYe9
                      D1LAPeyU37wH1JE9AHqduw9/kj1shPG8jWWWvTAIwL3yog09eoo0Pd3NdL1zAju9AFI8OwzSm7yT
                      o7s9ea+lPTVjyL3VlqO9wPUnuyAwIb1Yd1Q89OcPvc9Cgz2XYqc9ViE5PeVEqD1YdBw88HgavAXG
                      tL1gnMS9gBmFvWCEgjsr+sQ98tBfPTYiYz1thaM9gOykuggylbzwuQi8aIWUvUSjEL2kr/c84eOF
                      PRgTXTwbJJm98nZKPa5TpL3BIK89YIQNO+CHvzvv5MI9UAy8O+RXAb1ZHqM9FPrJvEbpCr2Bn6E9
                      HFCEvQeILb2CJTk9NwJQvQYtVz24n+i8hXuUPfw9Br2ky9Q8EDN4vQB2J7naQ5y9qOFUvBuky70K
                      x5q9Qs0APRCYWL3ImYM8XwbMPUwpuTzJjJo9QV6ePS/kwb04FKa9ejkQvVlKhj1YCte8UPLpOzpr
                      Sb0U2ME8Lf+gPbdzOr0njsi9oIhbu06Xl70YQgk8QOUou2r5Gz2MQ+w8ylJwvaCXc73aKiW9qlwT
                      vY/6tD1YzJU8F8yePVgkGLxoTQa8xwumPS5oi71Y1MK9ACizuzBdPr3sOt48dTDMPSqTWz0gD6a7
                      ubquPXCNPDypqbs9oM+6uwj7lTyuj1I9M0CNPWaCC71VgKI9zZmiveMicb3+MX091VzHveomF71y
                      jQo9jopvPUh/vjz0Yr48WVqnPTeJgj3Q4Xu9QgV5PX39lz0wJb27vjQNPRuLtL1gmsc8c4+lvcBN
                      P7uTUXS95Qi8vcHwhj0g1po74x7MvZagFT0L/6+9UHn8OyBGm7wihlE9qWCIPRgVarzouHQ8UGyK
                      vZYzST2bW7K9WVuEPWs+xL2rZZM995LJvXg2vTyq2TU9lZKPPVHhtz2cAom9xllKPVj6aLxh8r09
                      kSOnPVLzbj2dCZu9O9SfvQ7rPT3PfLO9Ch+WvcyNgL2ATES9mLahPEXnoT0GwwM9lCYDvXX4x734
                      sPu8WusBvbtvy71Lbci9im43PVokJ730vo0833W0vQAhqjvDm8A9pvlAPSNwO726M1O9R+h0vY46
                      Nz3AgPq69jxCPT2wYL3P0YY95u6MvSqNwL2D2U69FnYlPVr/TD0KdgG9gJxZvUAdnrxpsI89ghZS
                      PRudhD1yhVo99E/6PECbUbtekaO9qoqGvcylg73zgIk9c052vUCgWbyAqCM80Ck4POEfnz3oQqy9
                      GrCuvfNWxr0qoFM9BrY8PeA3ijtzhrc92U6nPYhpvzyRqLI9wFw1O9DmWL3j5Da9LNiAvMqTfD0H
                      DTK9oPu6OyJyVT36hie9ZliUvdthmr3P9r29qR7EPQaCLz0LpJk98VuxPUx55rwijaq9rC+FPGhA
                      Djw3y7m98Nx3vB4GOD2+OzI9TGuGPO9Ghz2JPbk9AtRCPYb+VT3CGhA9ZkNuPXs/lj29Qii9GLVq
                      vLAxxr3AO068v5+SPWqIUr1U/788qNDBvFiZ07zrJMq9kDshvFJ0Xz2ALuq6EHdMvF8bij0gKIE7
                      90yaPcukuT2ui4u9IRS3PdNWwD3YKCY8Dd7DvXDDDjxrLMI9MNwtvIE8jD3+2Yy9oQ+mPUDDJDzG
                      VI+9ORasPUULvj3YDpo86EfGPP8Ryj0hCp89wAJQOzQO0jzMQA296KwjPKamCr2ivTE9QHUlu591
                      qD3IRKK9s5lDvUSQ+TzQjCI86C2fvOKnZD3G4wc9kG3KvR2nmD2Qfge9XS6YPa36ub2a63W9QPQ9
                      u7NPJ72vzIg9bts3PRJcMj3N1Lc9PK8CveivFzwRHZg9vcCTvRHduD2Sri49dw2+vdDCLjzjLDm9
                      CUWNPbqlCL1XG5I9jHoEvbKLaT3QeCU8fgMhPVExvT0MtNY8Rdi9verbwb2r2K09DOTlvPnEkD3h
                      vbU9tBXxPKh5+LwtIqs9E2tKvdevYr2+Yzk963fKPWA5ubujnY29XuGqvZS6ijyNaHm9JEP9PI2d
                      qb3T5Sm90DtSvZ2ZPr31Mr89KCIYvDhf77zmGEU9UOSOvdd5tT1CAh090vdxPX9Npz0IFLa8mUyH
                      PQcgJ720Hq88ocKkPeqWBz0Q8Di8Cba9Pa74kb3I7pS9wC6/vJ9Olz076Jk9MN5iPJtCwr171q89
                      AOdAu7HGwD0zpJC94G+IvHoabb3wmjw8bYtFvQDkvTw08pE8Y6OFPSJpND3Jksw9sJcuPFJwYj1a
                      Qoe9Os1mPbjOnzxS76q9KOqQvTOkv70wmHa8KKG9PO2+gz2Ur8K8gHp6OtcWG73ad3G9RsYMvcNB
                      Pr0QwzE8OusOveAcuDxzsJ09nlhiPcpsPb1t1nm9ByvLPXBlc70C2Dk9+cWFPUYdUj1C6VA9m5yX
                      vZqiCr0ixwA9GomsvZApXb2z/We90c3GPW7vfj3IZYE8sAmEvSsEjz1vr8k9KLDBPKG+tz0ZV7E9
                      dikWPUD/JLxO6Ho97DqAvRMEyD1AN8665lVPPcJ6pr3EY4a9io2UvQ7tpr0A2767tZrCvTWoyj0+
                      AGo9TWhJvQv0vz3j/U693y2CPT0yyT2mdTA911hgvTCRnztCf0w9Fz5CvboaAb0yKoi9vrB1PZgR
                      W7yX97k9IB9RvRjuZDypzaY9cJNcvJQb9LwoioI8iIjAPJKmBz04eoa8U2Oovd4TQz2wOQw8LpYI
                      PakRkT09LIy9ODKbPDBC+DuAWhA6GyCkvallwD3sI+88H5SQPXAFU7xC8Ao9yGu6PIApl7u25hQ9
                      oCz1vGijT7xkN9c86toKPa2JvD1OmDQ9qqhAvcAXHDuCink97UlcvdjOpLwF+LK9Um56PQi9+7ys
                      RvW8yEWjvEx0CL2wbY07oA80vUC6ELtUPq08gA+SvG1zuj2oyr29stJyPYIoUT2ZY5Y94pRGPagS
                      BTws4t88Onu/vQoaUr3BMqs9HlUaPU9VlD2q4Hm9/sebvWHeiD2OkVw93UHFvWAq2rtkuu48TbCE
                      PSOWsr0qDyA9wkAdPdC6vbtezqG9YW2/PdLjJT10SsG8JcbDPVg7czw09uK82g8VvbCEUbzdbXm9
                      RpMxPfo3d70QhA69WktCPf1aab0Ov3U92BW6POLWMD0RG7Q9AIVKug3Mrb3a3HA9YtoUPTZOgr22
                      PWQ9Oi8zPeC6/byOQRc9TAOovMj9iTyaM2A9X7+OPSNEwj3wesm91H29PCBM5bx0RgW9umFyPW3N
                      pT0npC69wPBQu8iYib0WTiQ9XJ2JvZHsyD1ATKQ8UVmdPZA8fb1Nyr896NYMPEDxu7wQdhq9M7g9
                      vbBBEb3Dn0u99DCuvAk+qT3Azk88K1+kPVH0oj3sTIe8PRiFveCc0LzoQae96NQhPDo3OL3ktvw8
                      rFYQvRhFIjw3LEe9oMmjvO5WaD1QQnK9ALEWu6YlSz0nfSW9YlpbPTOWxL0oLps8THrRPAZROz0K
                      WjC93V+ivUo2Mj3zmpq9P5uSPdTfgTw2nRi9DZG9vUouMT0Tsqu90OSKO3J6NT0/67m94Pi6PPea
                      xz2ArwO8HcggvSqDCj0ohFk8i2WAPYpJib2A+ZY8eqJSPRjAyDxgWv47F0aIPYK+wL0YKpy80Jiz
                      u1YEDz0OOgE9Sl/AvYYoCz1gzPa7oEWvvDPNqb1QrGa9V9zIvVaUIz3saqQ8uX2uPcHkpD1avBQ9
                      s7shvYOblz0Aaii8gOPuu1Z8PT1ULKs85RCRveyAsrwyF8C9Ud6XPUwDzbyQriE8KZq8PU6tXD0Y
                      h7+9BxDAPThogrwWRqm9+GyvPGJMbz07F6Y9gsmMvQS3/TyydTA9fvgEPUD+67ziUCs9FVmBvTrA
                      Sb1tjC+9cG5nvCh5KTzF6pc9LQSxvRb6ND1KWm+9c9YzvcAqTTzCwns92DNWvADBKTvgiL29YFTb
                      vACOiDsfM5g9/iOWvXfSYL3VirE9aOzovAdylz2gFES9bB+5PNrSO73b08u9OBflvK13KL1Ae8E8
                      6i9ivfdEsL1k+4i94d2QPfTqjLzLTpC9mN1/PPC5Ojwa0w69OEu9vWhAnTyxOrA92jI8PaixOzxo
                      HSA80+A1vUemiz0jIj+9Uh2HveE8lD1AD5U6nzSJPVAHurtjWMS9y/eJPT+myL2X7TS9yjBJvVd/
                      lz1AY6O8oY6APTF1qD2AIXs8Hp+BvQAF3Dnms1A9dKAPvY1Ulj3iiRU9qgi9vcswuz15fZY9GHKZ
                      vVutxz37W5c95YPIvRADETx5yp49tyZgvS1boz0Sl0w9WKxmvAP8lb0sx8Y8ing9vWqIa71NnHK9
                      /lAkPfIcez2XQ4Y9iTOIPdIZZT2ALh86wNiOPAcQbb2w+0y9jazMPVLWDD34LZW90n1bPaL0bT3f
                      spA96MQMPFBRzL1Yn529DAaRPMWAob13CSO9Q/OkPag6iDymsU89qV6BPUkxvz3QOwW8KqmHvfct
                      Wb3UYMK8sDkJvO3Iir1kO/I8eynBvf0yt72Cr5q9wM4TvBG3gj1+ang9sx2yvWWVur0gHge92GCf
                      vVSVuTxjQqw9ZnWRvdGlkj1An3C7Kg82vcTAir1a3ou9pr0tPTd/vj1gJRA7AVmtPSgV67wOY6S9
                      4qwcPYAFBjw0d+e8sEuUu4AaFbwtuMS9jDqUPCcfsj13YsW9wDEwvWg7ITyqtHI9Sp+zvUDrxryT
                      pla9FjUmPXMBy71+5SQ9QI9hvaBok7wFXY09lEkDvTtopz0AvNg7bp0pPb48q71A1Cy85+LHPXZ0
                      Yz1q5SE960iCPUZsob2q4V09ogxEPXBIFjz3Tb49whcBPaVHxz0C2Hk9lHHpvEYzpL2Yt5q9UFlN
                      ve5aHT1Z+L897nIoPQykvrzLQbA9mCG8vJMByD0SRls9KE3FPAYdVT3RF4Q9GmRDvaTZ9TxGMYO9
                      cHl1vPx2Cb03OcA9KnwSPTI+dj1tw6a9nzGxvaBJjzxMjYy99D/BvGJyq71jVLc9xxKVPUPvL732
                      DHY9tumKvfEnlD3m3TM9ACN6OgCX1LzZer091oY5PYQw8DxAf8O9x1HGvbqxDT24+sK9ykZYPVqL
                      Yz2Iy8e8rf+zvZj2qjwgTYq7BqwFvbRUkby7TpK90E0JvBPYiT2h15g9OKf2vOo1EL2u0IK90PRi
                      vWpvsb2cnIW9VH2hvBXtib2CRpa94C0yvfGBnz0cOIG90vVkPYOHcr3H2x69ot4FPZsZuj0KowY9
                      k/2APVRUlzzBLcw9bLKzvE7hIj0REYA9st5pPa6aDz0YBpw8KEyMPMDlFDtT8xy9apWZvTdiu71T
                      wJ69s+uTvVYJrL1oDL68AJIAvfNzL72So289g7emPcIqlr3JRIg9QlQKPcFUlT0zWzm9/cpfvRhJ
                      PDxYNvC8MBgXvOJ+Rj1yR2I9u16svR8fzL3/Gsu9AoQjPdMEsD0ey6y9jB3+vLaUWD1zaye9+xes
                      PZjNGDzos7a9cHxEvHVBpr06Piq9DF2APOG3pz0Asp694FElvbL9Dj0SHsi9RcacPddivr3M4wq9
                      4Oz/O6B3AjvAv108sPBSvPbdVz3yTCA9KV2oPTMvyT0QD6+9y96qvYqQSr2wFvE70QKXPcpzPL3A
                      N3e7QLPEuog28ry+EV89YOGXvAUPjT24BLq9LS69PZgRCbxX3V69B6VOvSnAxj0ApwS60XCKPW1/
                      uL1gU587AiZEPcCkCb2gK/Y7/Ui5vc7Dkb1Tepc9eMCxvDZ8jb3iEFU9EvKyvWfBvL0SqxU9Ftyk
                      vZKqfT1zXCe9XRaHvYRfA71AyEi834WePVv3k71StVA9EvSlveOKXr29ljm9HXe4vSSQ5DzhKLY9
                      YuoBPRszqz1AyGw8asZtvcjAiTz/a4U9YLydvXb4Jz1XTm+9+8y9vQA/njxDGFe9RxDBPZNxsj2f
                      cca9cYatPcJoZz3BE649+FqTPIsDmT0D7p09KEJUPOnggD0wOx69fUXJPRcrnT3KOSa9VX7EPXDM
                      O71tT0e9IlNxPaiZWry/irC9cUjJPQAKdrtUmrY8widXPTCD7jtqYYC98SSoPZIkhL1uDh49APgu
                      ui6Gn71IV4294HKruxCYwr2AV6k7OBfHvIxnsbxAUua8fWppvfN5xj0jPMk9DJvSvA4ccD1DSi+9
                      6FcUPEqkVz33mDS9ObaDPSAb3ztTrpS99j5uPcz1ozzZWcU9ssA8PaaAgr3nrh69R0yxPfilgDxP
                      SLA9Dj4sPXxM5DxU0RW9O1rEvXOnGb0ufmM9YMnFvP/Vtb3D9C+9zByDvXxk8DyjBLS98mVHPTbF
                      B70y62g9EFyDvZfxvb1CPxo9moQFPcL6TT1C+Dk9Z9qtPR2uqT2Ki2K9I72cvVgtkbzHXCy9DMDH
                      vH6wcD1gNQY73263vfmgnD2V4aG9tw/CPbLgeT3pdZc9lJTaPMI0Rz1jPJq90GIaPOk6tD0amTe9
                      QE+NOil2tD0zIMa9t45QvbI5fj2kZwa9o1xmvZg6xL2XS8M9ZGrePKrAIz2Db0+9RbaqPZQnpjyG
                      E6O9YlSxvb7PFz2ooy88SpUhPYKTDT3MOvK8WlpvvV4FWz0ArxG7xwOtvbSiwTxatia9cKhzvT4n
                      bD0PBZc9b6+WPYiFxb0M6908ywaBPSqYDb1x3Mo9CqqZvY1WsL2AkGu8qNIXvErhUb3QmRg80PAv
                      vF1lvL1gXDm9Ink1Pe/yoj0GKB895JX6PC9OyD34dso8V5A3vbLZST37paW9cBwWvNC4IDwJlJI9
                      oL+Ju0B3JrsAqn+8asBWPY0NPb0jtDK9XWeLPbGJhD2h76Y9yF+TPFeRJb3NL789MGAIvSqcMj0m
                      Shg9AAGIvaj0ljwDnY291HbPvFxx2jwADuE5NGiivAdwPr3py649+ucJPbK+HD0gmqu7YhwOPQCD
                      eDy2DZW9FTe5PX1vH73cdtc8CiwoPZ1Hvz2gre68+56+PV7UWj0A5B29o3KMPYDUhr2335A98lUR
                      PbjKxbzrl4g9S+fLPXpKoL2qL8y9BXSRvZmXoz1AjVA8Iz8nvV26iT0wXdi7ekYBvdj8G7xIhsA8
                      8lMBPQCpDzszx1y9SVyMPTaCfT0glJG8wlNSPTHgkT2Ai4W71RvCPfrXdD32c249pXOOPYU6jD1g
                      J1A7wEulPEBVr73XD7e9BCv/PGyer7znPDy9YH8KvayDDb0Ha6M9J/NvvenayT0o8Ii8i0uhvXLn
                      GD3Nrji92jF3vWWgmb23IoE9mhREvR9jyL1lfcU9BhZzPR80hj0tF7u91sUEvX6RZz1mGGA9/QhO
                      vdgQvzxQBpk78rCdvSEXpT0I1cy8jBvxvDp5pL0NoMG9gUetPbI+ir1F4cU949VZvY4XWj2lWZi9
                      68SGPcBhcLyTLcu9oLFou+w9vjxuyA09fm8QPWgEXjzAcPs6MBvwO310sT3FXKy9zGXlvP9nwT0C
                      qnw981mcvTyTCb3bmKW9FCHXvDhQs71ZgIk98uwPPcBzkryN5VW9IMwIvfE7hD2SRmc9DQFtvZRk
                      q7yd2bU9BeKrvcBN77zHoX69EQCaPSeUiT30Gwi9gAPOuyCr5rs707a9icm1PXNuuz1QWsS70xzG
                      PdKyej1EV/U8Wo+cvZkpjz0iUJy9gPTIvehDiDxL66u96tpwPTfdx70eqpm9jtE+PfANJ7xAlx69
                      Mx2+PYddyb0WBRQ9VDD2POq6sb1gbbY8i2WOPffOiD2Brss9d7KsPSDzv7v0Eso8zY3EPegCv7yg
                      9pU81qVvPR4nhL3eI529PmIzPdYxSz2Rf4w9liigvQCUk7ggV707SzqrvTh6mTxNS6Q9PQRTvfXa
                      yr0Iuo+96ArLPJDEcDzA2zi8F8o4vez5nDwsDoG9wAJBvcLVgL2nfHe9IDS5vZY4Cb2wQla8uT+n
                      PX1lZb1MQgm9+vAzvacHIb2rPL092/S5PUgom70RFqg9EgMmPY7Bi72o2cC8KshdPYD67Tv0jpS8
                      WjGEvc3oM72YPMm82fGHPbxM0jwALYM50vpmPQDvqrvgbO472F+qPIAu6bzsh4a87RaPvaZ9Oj2I
                      SMy8zOzTPCg/6bzACmE88lMKPQa3ST1AuLa8veTLPeoWUb3o+3w8PUOTPf2Tkb2g4JM78jR+PXwP
                      A70OO5a9arVAvdRL9Dwr08W9wP2JPJgKHrwC0Bg9YPVbvfM8Z73YrsG8t+devTTIvzzf/MW9NHvU
                      PBY/ob2nzYM9asauvVS6/LwAfY+71FzRvEIJDD3vqss9P3e7PUjesr0Ybc68HutkPYsTtD0QwEw8
                      yJmOvOJiHT0q73U92DbLveB+xb3CFCo9iJumPAm3hT3PVck9dXyiPXr1H71m/XU99xDKvYKjOz10
                      LL68i66/PYGlsD3IAP+81wi+vSDD57zd8Yw9r7GvvdS9Bb3Uj8w85Ry/vd/uy730U/O861S6vWOT
                      ur1AJFW70MMYvIJCxL0X+Ti9aSynPTf7pz3PTog9eKmRPJrzBj3Acxu8dqIvPTlgyz0rSog9OisX
                      PQycmLyAIuA7k7KVPRi0I7wc69g8KrNwPeL4ib3YBxE897GOPWBrGTtP1Kw90koZPf5eir0ickg9
                      VrtKPcbLoL0hfcM9eOyuvMJ9Jj0HYMO9iBW8vKjeYzyaD1M9UH8+vIAAwrul5IU93ZLGvaDWRb1r
                      0ZS96M2hPMqaW72DHZm9cQDMPfY0or3lXsq9aH9dvGKQkL3jeX29yrdKPXebtj2Aaec603KZvfpP
                      k73RxLw9Mp50PYoAsr1K8ny9FRfMPVie0Lxxpb090JldvRTSEL2JCcg9TwK+PZrIZT13TsO9AeGj
                      PfOWrb1Cdio9gP4tvNfyL736MZm9wM57vbr9gL3dCUa9AHgWPChKJDwgOXe9WfygPQC1Gbzj3EK9
                      6Lr8vF2pkr3G5HY9ELx2PMinsrxVrZE9GIy5vPIQDT0aEhQ9AIuFuY+wqj1+q0o9JQCKPfD8cb3z
                      xY295GQLvQCylrq4qeq82qtdvfJiSD11LYq9OQGYPUjagzwUqJM85ghqPfC9GL1cN4a9gHZvPOJL
                      Rj1i2Ma9HVsavaK4aj30b6K8AG03u9blQT3FTJY9O1GdPWjTcrwMO6w8SWizPea+oL3A4R+8qdfA
                      PX30YL0yTnk90teqvdZZkb2YyWI8YL4WvVkNvz2XBnG9SEbPvNYnKj396Fq9iMWsvZjaZTxMOei8
                      uVubPRYhCr136ra9ivp2PeRMi71YGxG8nJcZvTD8+zvbcr69zP6dvGij9bxpD6Y98GuavYoZWD0q
                      wp69a7eSvWU5ob06UYm9wGl/PF6PBz3A1n+9asR3vXfRnD3oSl68LauOvalSrz1idhE9WSKSPdDa
                      Ub0glKI8PigZPQcEWr2Bc7g9oUG3PSowm70gpOy7HRyMPVhlALxvQMS95dqnvUrPR70deZW9aNVs
                      vKHEij3VRrY9ujoIPeZ0TT0TzMU9y/6wvbCHfTyxMbs9M6iqveiJJ7wIfro8Mq9ePWd8H70IYf+8
                      QMGOvKoIUz2YnEA8GpEEPY4JND1kvv88RfOavbCutTttAI09a0qPPULwcj3H50K90wuevXVejr0o
                      QHk8beuRvVj/IrykXPI8fQRrvWDMEbvQuRe9eWGnPYgIwzxWBm89R4qJPW8ay71I0r+9IuISPZKM
                      sL3qJiS98GA4vGKibj3/Yqo9gtgaPbwpir1AWJG9bbCdvfHQjT3o//K8gApLPLClGrxgfRy7AhdH
                      PWT89zzg5r88GKeAvKygjLxyi3c90MiJO+fCsr3LZsU98zyjvUBqoLx4gKO9SrpEvWc3dr0O6zE9
                      mKm4vGC94LsVKaW9iv0VPdGHlT0sjKG8IcagPbUytj2jism9ihG7vQhmwzyfFMw9ckUyPQPZUr0s
                      KfE8euZ1vRgNw7ynnjy92EEyvIgE77zaXiq96oJEPV1gvz0S0js96sPLvV+9v73l0Ku9IllrPXqM
                      Tj2SL2w9sFjVu4K2WD23hSq9oFV6u2gaOry7bZA9Hg6VvUOAoz2sh+C8b+iSPbPLxD0OSjY96MLx
                      vMfqar2/FYY9lHnwvHM3tj3SMaK9UHi5u0Moqz0AD1C8Y3u1vRhq1bxt9Wa92JaSveWxyL29N2S9
                      uNPEvZpeZb0MPdg8hUaUPbT/p7wgSCi9mrwVvYhu+7zB5rk9ANx1Op5ZoL2qW3a9UNXjO4JLaz1F
                      vrI9AC9MutQ40zzAWI08IMvavD3Zd73KV1O9JeC3vTLMMD0HkWW9gMqyvTSL9bwfKYQ9T/mHPQLx
                      ST2wmQ+8aQqQPZL2az0s85k8UNkYve7KQT3s88+8rnqOve9jsT3SH2A9wONtuzDNy7vCkZS9pycy
                      vUC5aL1jK8i90F5GvcCHx7xdIV+9p787vbCfgTuEst48ja4ovTmFrT3wyh+9h2GwPejnQzwtlCO9
                      CstCvXihxDxK5LG9G7+EPQBVkL2BOZE9RZm1PRY7JD2AyJg8HRkkvSB1qL0BrrY9wjdUPV3Jhb0o
                      uvO8Qo1TPTAVKzzdk5U9mJurvOBXpbvfxb+9JGDlPEC7frzoGc686rmJvXIgND06bEy9WE5ZvIom
                      jL34b8U8MwxTvQOAtb1GykE93tszPXYMID1IXe28RDfePGfxsj3JfrM9ZuANPTMTjr09hb69olYl
                      PXR217yqyT09bG+GPCnZwT0EzNA8GWG1PVjdNzxA0bO8oA2svbrvLz2wFSi90GifvYAEsLrUHsY8
                      kOgmvHIqYj1iXmg9wSeMPUDKqr3Q/kc8EC9WvHnvmD3sBrg8LFnwPBBkTL1M6hS9jECMvVLgQT0A
                      WBS9DKaCPAHbkz3EPeg80AYGvOrDPz1e4oO9wqJEPapRer3JE8E9NzWvvYDc1jrSczg9x9R/vUru
                      JD0sxL28EnMkPYE0gj0lT6m9qBA1PJo9r71Afko8WplOvejwhzyg4lE7Jr9JPUCdqLwAGBi40ZbA
                      PbYRqb12QhW9jGKFPACgy7eiLDc9Y5+HPdzih70qB269KxPEPVAK1LsM4IQ8RngkPQ4Rfz0gXKG9
                      0sMBPQrySb0J2I09Y326PVgZabzQZ7+9MscQPQCkWLuS7YG94JGYvdKMET1QKii8y/a1PRJxVT1g
                      T8e7gFihPBTu2ryMnOy8MuuFvULiXz1iOxI9CyyPvYD6ebxDlbM9B6sfvYij17wdWq896ENfvHif
                      4Lxp2Zs9kPUFvEDqWzs8chK9CWyNPfVNqz3P9ak90NUCvEge3rzi23U9dPfJPPXJtL3C+UY9zas3
                      vSWqzD1oG4k8oPl5u7YNE73fsbc9HfU5vcCdNzv2Zwq9WS2NPad0s733SCq9Q9ukvROdnr1hLMM9
                      ijk2vew967zr9sS9DIDBvPQG/7zzz2G9SA6EvQr1bz2+ZwQ9HhQ3PZBYb7xSOnk9F2HCPYhng7wU
                      4tM8YQWpPZ1FHb2wjzI8OLGPvQ1phr3Pfqo9pS3MPd7no71hJro940Q2vWLSgb32Zkw9Wsp/PXRT
                      3LzaoSK9BwpBvcKzvL0d6CG9195pvS5Rqr2gYKg848NBvWlynj2QzmE8ic7APSZDCb0uBSs9Y7mP
                      vYyNg72GKxi9jkxYPYKhmb3OqFg9SdKmPWmDyD2kke08rttxPQi7sbxDTJW9COa2vedSyj10V9C8
                      WsUMPcJ7ej2i63g9w0Wmvfs/hT3mvDQ9ALAAOfOga71oJQs87Mq4PEA/yDrv9rU98FS+vcQO0jww
                      0kW86CwxPH1Uxr1Ay1u99g9DPZzs+zxMtbS8h683vaHogj1M3tG8wNTnOmndjT1R5L49g9lHvfDc
                      n72HTJM9LVgkveCA7btCIIq94pQXPfYTcT3a0S29vUQlvX9OrD1FAro9iNObPOsBlb3KCxw9Ul4F
                      PVKOcD3Y3Dg8UIyhu2aRSz3kn+w8Z+a6PaPysz2rZ8Y9uo4ZvTN4y71l+Ls9ak8FPdXHwr1XS4k9
                      iLq3PPClcbyUtKw8besgvR6bdT3ISaY8+wG/PWDBgzxQoCS9975ZvQNzSr38xNQ8xWKqPeINsr1h
                      dJk9RtZXPaB8tTvo0JW9faGHPYrLNz3s65+8Y/1svXRUsjxe6So9ioIJPWDxn72QupK9Wm01vVW3
                      yj111LG9gSTGPWBzLztygwM9wWOqPUDXKbs3SI49DIHVvNiHFrxwKS68t9qqPdKSHT3gTle9rv5z
                      PVRUjLw61iQ9vb+4vcrFPr1hKZI9lzCVPaHgyj1TYI89Fhl6PdqHNT1wpzm8lHjFPFA7KL3n9Ua9
                      oKcuu7lgtD0Amkm7ULkcvXShvDzUAPO8gyOfPXg10bwrSpO9Orq4vb24nj3bW4g9mlhjPXArIbyg
                      D6a7WDRxvBNQwT3WEHY9FFr8vIBs3Tu2eYa9kF0wvIoaCL2/aaM9L6G9vRu3nL0tnsk9QOZkvTjB
                      yb1TRp89oJ2GvJ1VwL20Meg8f2nFvf4JAD3oLX28Wixuvb0xPL2ipB09aKV1vDLcu71P47Y9Ki4k
                      PZ0zhT1ozI08PVWjPZHrqT1QP2Q8wpo+PTQI5TxiUUI9/0+HPdDn6Tti8ls9T/y8vXSN2rwyvDo9
                      tsNQPRApXL0iN8a9jRtvvXNPmb2gWh87IB+KO0CcbTtirUU9QG8nu7DlGLywNCW9fEXPPJMBtT3A
                      cEK9QfvLPcC0qb1k8Aq9sw2+vQOSG71pcck9MFUdvdCUBDwq/3I9QgMaPcpLHj0Sgx49mOwYvA1w
                      mb2lxr29ojozPerEo72M4o08qv87PcuggT0xFIA9dH6lvKcTOL2Ywas8f57DvSE5qT3QGnK84xGg
                      PYL/cj1ARjK9CNahPCF7gz14msG89hIJPSUJj72qkl29x8R9vdR/wzwAvzk7+nIHPRtqkD3Al3c7
                      wGREu+xk2TzhJLo9D7WkPWRhzjwg2PO8ljuYvXDTD7xHD6w9WReiPWDSers2YQY9xjGBvfgoqb3w
                      pVm9Rr4YPdhVnbzQZ529HUFYveJiuL1Fa529zkgqPaccqz0DdSi909ogvcwFB71ho6o9QAHNugih
                      jL0jdJC9mmt5PUrRmr1oQTG8EPiQvTbyST0UdZc836vGvdLzJj0wqqW9s9MzvXFwlz2R/YE9QEZw
                      O2xDCb2K6a69og1KPdFvyj1XMcu9TPzzPJAou70Ibry8EkS9vQAtKDw6rB89YDYovcBLFr2K+189
                      PFH3PL3Bcb0YhKA8JNz5PJFHxT1d2JQ9ABFdPDL9JT3PO7K9eu9TPRws0zxCJkg9mCuSvWktvD21
                      TYe9oLEXOwjs6LxolsO8Q0fKvQBHpzzHFki9tOKEvJIRLD3AR/a8MMOoOxq3lr1b1cY9oF9zO2Sa
                      4DzzF1K9zo6YvaL/LT1gBb28NC+OvIrZFz2kVAK9Sk9MvX8ltj2AG7w6AHXou4KkKT22ZTg99M2D
                      vQp2Tz1ZHMU9wGNBPEzz/DyQjxq96GXJvb34U70DI5Y9m0SvvcK+QT1yuBk9IBJ/vbiWkbzV7ai9
                      F24wvWPkKb1siq686n15vaghIzzj04M9g2LCvcl+rj3odb+90ERnvHAUWjzWZkk9TpCpvYDFP7xg
                      TcO8XWZGvZhIujzU2cE8Y22PPWPpeL2YEle8APodO0BPgbzqTRi9YIR3O+KhHj14/am9GKSZPBgA
                      GTy2sou9FiZ3PdPIur3wyT69tmIOPW3WT704W/S8sKjsO4CaRr0u0kA9zgAQPdNxx73gjgS9PRur
                      vQ1yhr3Q0tK7FwtmvXmhtT0gnd+7OownvfhQiLyFQcQ9R2OTPc+emD1mZgI94yqzvVUBkT0/9729
                      7A+PPMiWqTyAz769zsEyPQc4pD0caYa9qq0rPZAyfrygWhY7CnA2vcpxAL3A7A29U8OZPTe/rr24
                      /Zm8AHRKudBvyjuNgrk9jmVnPS7Bqb0iVnY9/6GxPcgfxDyH4S29LukqPdCItLsQZTM8TfJMvUs1
                      mz09BXm95mwQvQsloj23lsa9U7uuPf+cgD0wH0+8mPACvAZTpb2g3qI8oUrHPeIlTz1zZsy9cBVh
                      vAPksr1AFAU8SlAIPWQD+jzTI5+9unJ8vVbOAr0uXxw9KHVlvOoNnL2AJoI6wF9wvNgW2Lwwuoq9
                      Jh+GvUp4DL1DJMI9pwdbvYCyurrw/Ds8gKy4vUC+ZLzTaqu9hZyyPXKSJT1T+JW9ALDhO+3NkL0i
                      xh49Lx+mPVN8Or2kDIW9IMigvDAne7yhcoM9fyTBPZ6unb1lJIK9aA0wvA2wH71qekW9u/3GPWI7
                      GD3z6Ik90Hu8O4oKMb24sMO8fiJOPS+Lhz3S7zM9J4i5PShMjL3QdSQ8M81+vQ47HD2tz3u9NnoE
                      PYdHgj3aY8G9XQU4vWEmpT2gmb28AL83PNCDo7vufpO9A062vUd9OL1Blro9GY+NPQJPAT3GczY9
                      rNgRvZNnX701lqO9zZ6nvY3lvb1Cgsa96txDPcCp7rzvx649Q3lpvVihpL2ABBc8EOOavVuNrL2Z
                      Ur49RMTxPCBEoTzASV08Z7etvaDX/bsA3vC7IOWBPIVEp73U54A89D6ZvCZpgb1kVPw8wHiqPB5s
                      Nz2TG3e9TTxZvfST1LzsC7u8NBOnvMD/lzzN36C9zcqdPdbFNz1oNGq8bgxvPUmusz3Zla49Jnw4
                      PRA6LLxwzAq8XPwUvaLByL0YZJG96Wy5Pfv+nT0g5Js80WekPThroTy9X3a9bHoGvZgdkb1Dapu9
                      8FA4vUqFKz2wemO9OmQMvRZFLz0AWJE6/+zLvezphTxNKbS9APAdO5TByzx+Dpe9afWhPZ4oJj2i
                      ems9CDfEvFPzfb0TPF+9o1CyPS0+d71n0U+9XdsjvRRC/bw2vJm9WNSHPMwx5LyjKzW9AFYcOTZA
                      PD0wf867QbC7PYYKDb2o14I8k+VcvZrwIL3QE0K8PKUXvYz5qTypdpY9o0evPWDpb722kWA94j+s
                      vS+rvL0AC/A72KaWPACMqLh0kYU8AILfOi/2wb2J2549ghVjPbsgwb10sa48tDa8vD91vT1kwoy9
                      McuwPZcbt73Mfqo8NoJSPfKHg70NI269l5o/vSDIyLugssW7zdiXPSe3Rr0FPJS9MWiFPWCe+zv/
                      77Y9lvxkPeWwmj06Fjk9GCc6vEuIlb0AZ1y9l68yvbZtfD3N7Jo98DoBvXi5ljxqP0E9TLTLPKjL
                      k73l6ry91HvlvPj/mbysIbY8C7HEvbePrj3o2qS86MgpPPd8xb1mOQs94qIiPbbTmr0d7L29bhGb
                      vUCgPL0tZjS9+8XKvWB3xbsTtUS9WwalPermZr1gCei7UGVavEivub2fcbU9Rd2rvWgwqbwcv9k8
                      D6OlPQhcmDyAuRm9Z2aAPb25U73oLx48tsA9PaguCjw6Dla9wBK4vIC6lzzLeo29ejacvRlLrD1P
                      lZw9gAMXPF3Gjj0xibE9oArvO+IHSj0Ar2g8uOmgvCgT/rxgyTu9R1DHPWvjub3KgWg9abCWPRkI
                      vD1Nxl+9Zr+avWww/TzTNUS9z7TCvQaDE73rW669gGfDunbDg73+RmM9EiSNvXYgpr0qe8u9o33H
                      PR37u70aDzU9hgl7PfC8dbxXYjq9IYO5PWmkoD3ohcm80hpdPS02vz1JwqE9MuRMPbjLlDw52so9
                      gTawPYZJNz3+qkE9/Z0pvYUrqL3uXXM9NucRvZqxy73fpoE9MF0XvMIqXD3KT0u9gMu5vQD4hjqA
                      sJi8tMXbPN1ajL0W9o69ALIsu+CqkbyAVkE80FZNPP7nq71AaZK9CI6IPJQZE70SsUE9r3a2Pag3
                      87y+waK9E8t4vZnYtz2nzzu9khpHPVPmUL19aq+9td25Pc7WID0QmKS9St8dvajIkTzdqry9jcVN
                      vTzaCL1jR6U9leDKPdIufD1ZbLk9EkciPSJ2Nj2ORlA9lOzWPJPSJr3UGK08gCO5vTUUuD22a1Y9
                      poNAPQV+zD0Cnlg94vtmPddjM704OJC8KjowvWmHyz3aLXe9GTXBPUT90jxMk/68e4qZvfhahLzQ
                      mzQ88G8aPN7En72+r0Y9gqc5PSCQWr14JMK9GBvSvHSEoTwsIPg8dbWVPdJEBz2wxPC7ZvuFvSr6
                      UD3wrRG9wix2PftVk71sVbu80wgzvdPajj3SHnQ9zFasPFwP1jxDXos9pALuPOhSbTwQk7y9AHUo
                      uzorIj3QrrW9dDmFvChFKjxYQKC8k9KRvVJCUT3tvX291N7iPHTIjjyLh5+9vBbcPBnFjz2NAbG9
                      0BMLPN6mGz0wY348IlxxPZ7wFz2vM7i9ZmipvWlUkj2Orhk9Yup9PYuClD0TK1q9Fm0KvcTTAr3D
                      p6M9i3aaPdTokLyj1ru9UiwFPbDLNjxmTAG9sMrcu1iXt7wSMq69yo1fvSD2SL0rJJ69khHLvYNU
                      xb1ebRQ9qVWEPWKkLz1CaEY96CCYvPDWL73QOnQ8wod5PXc6VL0VeZ294zCpPR/Qmz1T1JM95gsX
                      PSAvvTu5fLE96pJ7PbCFPDwoT4Q8MhGWvVi3krwYUFe8b2q1vQDtH72MnPW8CvE/vQOwvb3Ap3A8
                      GZvKPYQJ8Tz/17C9UkeavXTU2rzHQFC9vJsTvQLAJz3Baco9IAvFuzABDzw/MJ89gHrAuvNKuz1y
                      /ms9iPS2vKfQsr1tMDu9oLtgvaK7LT3v1Mi9JO0OvdeMyT0Ou1o9lwEavXs7v70d4pG9ASiMPWNf
                      Vr3Q5Qa9O7WJPeEjjj2ItqU89J+7vKnFrj3QVnG94zyfPe+qmj2jHEO9c8ZzvSJtVT0wr3W9mZ6p
                      Per2kb3FdYK9QAHQOiohBT1KFnC950WfPaLUWT1+uKu9Fs5wPUJePT2rO6O90BE5vLo0ID3qMTU9
                      M1Z9vRtgur1O9SI9MjK4vZQv1byqW8u9RXeLPaYmlb0qXjA9rnEwPQCrD7yjr4E9b2LEvRnXnz1w
                      WQO9fiEmPWyg9by8ChG90z8yvZOnI72tOYu9HXZevbABvztrSJS9XR55vSIlFD3P6ay9Utc9Pfq5
                      Fz1jN2a9cfeHPRFFsD1ggEW9GnB6vXEinD0/JZg9UMfyO6nswT04hpe9g247vV58IT2YeEC8oO6o
                      vcPYhD0DYR+9WmIfPbCoMDxkU/w8wDKkOqgF0LxI8668gOd2vGjOgLzI1+m8J3NyveLrSD2409y8
                      0IQYPEBHCLx77769MDQiPDjFxTxISYm85KQHvSD0vzsAOzg7TamVPezVozxVs8w9+8GZPQCYeLoM
                      QYK9GBlPvPnXqD1IdsS8QAr8vJAOaL0jYoo9rKaYvJDLRTx4Ga48B+RsvQC3oLttTZO93zOhPW17
                      t71ra6s94yypvayk0Tw36Kc9lKHqPPMtlz0YXYi9coWyvUBCLbvEof48oCevuwgovTybJJK9r5Sz
                      veAB+7vwY3O9w1m0vTGHtD0g5iW9XoJ0PckCvD3juJo9QERjvU1aiL2o8WS8IcuoPdrlaD1ATmi7
                      9iYDPbCaDr0AZ2U6FKiPPEDMqjxL08I9AC1VPAwM8zwwbyS8NpUXvfWEyb1KwVm99wJdvfqgQL3g
                      yIm91b+7vSCsyLv51rk9Kg9QPcCfqTybHIM9+tkXPXobUD3Qw3q9axSQvdCVML1+8KW93SLKPXBa
                      B7yROI09PSGfPbHasT0AbFM8UHR+vEKmGD3Bvp49oDv6u7K/Xz1gC3e7Mv2Jvembkz0U39e8FjR4
                      PZLzHT3XbUO9PxO4vcl8lT1QhdM74PXJPBtnzL0sto08xX25PYAchzusk/88MteAvbKIvL2JSbA9
                      9xUovZUkqj2iP7+9Kz26PfBgx71QwG+9NXWsPacetL2S+3k9v0+4PYzJrDxxS8U9MLv2u1C7LL3r
                      m7A9QjojPYLDfD2zCb099NuWPJGgjT2eEmI9pmIaPTeUUr3474G9wrOmveXGjj0w0kU88CEpPL63
                      nb3TZzG93zuiPQoidz3YGUs8uMSUvYlTvT2qIcG9hpCOvSAzvDwGZgI9AN7BPCz9ybyaNsC9Mysf
                      vdpeZL3dKYG9iEfovADRNjq0oaK8OEbovJ3+oL0Affg7FW2pvXLLu73Nxi297IO7PAiVmLy3qKg9
                      SlI3PUuatz2ja1G9ivZivcIqaz2aTkQ98ws+vTARYDy/KaA9LLbyPPWGpr31orQ9gPkEPPc4N70g
                      1uK84semvRieaDyRZ5M9HjwePQIFFj2APyk8N580vdV2lr0e7w098owlPZxz3TzAyUG9iXKbPcAy
                      RjxCLVY9nkenvQ55Zj2c6Ng8SOONveH4qj2I1NG8WCk+PMxts7y7f6K9wDfIPFs7kb2AMp48APYe
                      vECxirpOwHM9gDnqu/Oyw72XYyK9ogNIPeoSBj3QM+27QLscu4zIxrzLcr89BBPyPCfByD3HoUK9
                      4DWgOwics72TA3y9hYyHvW+gxD2dvLM99ISIvUQ/gb0JEsY9ps1CPfSsw7yVqZc9aE1lvOHcmj3C
                      kJO9HUXHPWouqb3WhgI9I1KPvfDqTjz1Fcc9lYPCvYrDlb1nW069Ohl+vfuXpD34QIa85dK+vUTs
                      1jx+IYi9wzu6PV2IN70jZye9FpUWPVrABD2MhaA8tMSQvIazGD3oCaW8B0JNvXFinj2AQR26NIcZ
                      vazwxLyNN749Ggw2PRZQmb0yHmY94ZGWPUDZCL09DWO95jhFPc4FOj3go647XTWAvdyt7zxDKpk9
                      ZybHvTgznLzGcQo9yr2tveHcuz1QPvC7gSSwPb0BxD1gmFw7y4muPVmegT1gVjS7Ywh7vdROiryA
                      Gwa9qOS5vRIEAj00nYs8oEdyvaougr22kBs9LsuGvd99yD2D1ES9geeGPeyO87xau529yqenvTAR
                      GTxT9669CmC6vReBur262wo9qPx9PPLdfj1sU7u8hYKAPRDwpr1gJva8DGgAvQwC3by6yU69/ROT
                      PWdVwT0oDla8eoaFvUKEKT3zjrg9ENM4vEmXjz1g8cO8TG8Cva8Hpj04c7+9EH0nvVx8ib3Gk6a9
                      79yOPWCe97vt+He9Ak4KPWz5iDwePU89YN2gu8A7Zbzag2O90Kyqu6BceL0A8hs8tpwEvaDMkDx6
                      0w89vj8XPR63LT3DSJc9ALBSuzAUCLxKEDK90IYZvbJUFj0A+le8266JPTnBhz1dHoE9sN1jPGaY
                      dT3ARFS9eTqaPT99qT0Rxpk9OjdHPfrzbL3THIM9bAORPFAUbzyx5rg9cn9bPUu0tL23gKE9TK7k
                      vJR4oDy5zrA9gTGVPQj2yr3K/2A9KIIlPEQc7jysHgW9AQy5PSxL1zzE6+E8SiAqPR3DXL0Aq4K8
                      jcFGvWhfkDzaL7S95zKgPfrRvL2AtnW9OtEAPW61kL3jDCa9BqFSPbaucD0yrWk9jfBQvVo+ED2S
                      NAA99P2GveCFB720yau8sEJUvACr9jmBD5w9jjFxPdgbrb1FXqY9Ee67PdgCZbzIxY+8pjgPvVNO
                      cL1nTGW9yLzfvOBnJ73teWS91Ov3vEDSQLuYkn48x7imPfZwAT27dJu9BnmqvXrGT73u6lA9OllX
                      vZR47zy2wxG9QPNVPBh6bzwoMpO81NrxPDBAejxgieY7MKRKPBRApbxdjGy96GjIPDpAEz0sqPK8
                      qJyjPMTD7DzqpiQ9LEm/PNDTwTvw4j69GzqHPZhiRrx4iMa97MmBPLGEjD3StE894R6yPfhNlDzk
                      GuQ82eubPeifZTz2Rpm92rstvQcSrD1nxII9ubCwPWFUrj0YxiQ8aOQAPCUEwT3KGwQ9FxPLvTBu
                      sL1g98e9ln89PZOTrr2kjOw8EjQCPfKLPD3Yzbo8oAmUPMIoTj0oth080N4YvOMkeb0Z4co9WI4y
                      PHErmD2AGsY6+AOQPAnmkT0pqbs9B0hNvSqmXb32wzA9aNthPDVYor2a/Im9YY2EPUASpbza6UC9
                      wOhwvIJeET2YibA8UOVlPBV4rj2z5nC9fhhrPTTelDzXjji9flSOvYNJIb0W+3M94YzEPdsks71K
                      +Wq9iDbIvaAy1rweT6O9NJXBvJ8Rhj3O80w9PVY7vbKeJD2aajU99FmXPBiUHLybcsM9bHXCPAov
                      ir19ZrE9vmsTPZPKML3+Soi9AGF0PECE17xpHLw9cAM/PCyGxbzAwD+8niMNPdNgQr0ijGg9ZAUP
                      vTCbFL1xEr89sPuBvb1eLr1r4sS9MG8SvcClkr0MlIu8sayjPZIoCz06gki9gMFcOgB0eLmskPo8
                      2ASMPAB9ArxHqMC9PTCavTwD1TzWKwC90Z+iPeO5xr2KCcy9KUS2PctkpL151oQ9lEeyPIqQOD1S
                      yz49YoKgvcKiSz3t6ZA9UOOIOyJncD33abO9JweqPY42Fz37rbE9k3mjvXLvwr0ko9w8rgYsPbRL
                      0rzcvAe9rIrXvLJBJj1Ddpq9gmiCvXHEuT3gkQm9IuFfPQdGrT1fVrA9TR6nvXNWvj3VBci9CZ+b
                      PVrwJr3HESO92uuevSA80rxypQQ9WzaUPeV9lL2wamG8rBf8vI7mob0SeTs98BUAvdTxE73IntG8
                      9t8PPXuBuz2NXSy9gLHxutQ/szygIpc7NhBDPSqAbD2gvbw7taa9PYLvGD0NlIS9yMzmvJ1weL0A
                      RDU8ipqKvYMbH73zN5q96eusPV0vy70aSE69XBLlPDl8ij0ZAqE9AKj4OAAYnTn0y4S9RAfuPB1g
                      pj1KFXg9c07APVUHoD3TM609OLSnPILsNj3aJ4W9JELOPJIlez124p69UmXJvc0jxD24ksw8E/m+
                      vVdLmD0Q0gE8vj6mvSdsrD2/IsY9lmAJvZtrwb3Md888qy+1PZ9CwT0AdWk89UTIvbLVnb1Phca9
                      yOOevG+1nz34Ysu8IPWcPD6cWz0EgOE8VyRPvajzrLzLT5+9HRNsvU7vQj2A6OW8qBYnPJdhsD34
                      J508eXiYPYUjwD2wYCY8//myPSLvPT3RjqM9oH7Fu57Qfz3JVcA9DpifvVQuBb1HGF+96Q2UPfhI
                      5LzAOSU8cGtIPE30Kr3djFS9MPjaOzqIV735Pak9YjxjPWddNr0A00o8uJaUvVpoaD06Ynk9ZhIU
                      vcBDCDy026e8ABjSOOfLwz1gc4k8gLfSvFgILDwY+Hu8NNujvJbNfz3AvSK8kTuQPQCuo7wmaBS9
                      tDCSvKxH4rw1BKq9kikdPXKdST2NHZs9dJXjvNZoBz3q6js9DD2xvMCuwb19WF69QEIKPB55aj2o
                      cpW9asHFvTZaF73yoUU9J5QkvTrFJT20VuA8VweXPcDTcr0gDde7zmAfPZ7jVz3ehYG9Jm0KvTEl
                      nT3Aey87iN7lvPASHLzGTaS969COPfj+gTww43Q80CokveoDI700xZS8XtGBvf4eXz1Aw9O6vjOe
                      vY0Imz2nw2i9AFKOuScFNL132nO9JcWuPbBbujvMdZG89htAPeJDzL3asHk9Art2PWxtDL1Ukqy8
                      jqB4PXDOFDx4nr69EnZbPQy5obx6Qm49VGSnvKbCFb0o/bA8R/KpPSDemLwQjEO9qLCvvbBOdbwI
                      E5y8HUrCvWBJqL1ariC95m2ZvSBuljvSWE89/UMavXBxTL3XN689ghRqPWD/NbsePom9kc+vPVyZ
                      6jw4qqQ8xmA5PTpdib3Imp68IOq+vCq0Hb2VBsa9UBeZO6RtAL149IM8KishPYDhsTs7RbQ90jtQ
                      PeJZRj2x7I09SDDBvMB0krrwoxc8i5qYPaSqGL0ylAs9QoM1PWNOvj2B8Lc9uRezPbBNPzy9J0y9
                      KebCPc2oRL16giI9wvmevbiBvb2CShc92t4KPQxppzz+1TA9V+6UPVRuzbwwjO87n/SAPURoAL0K
                      GQG9yfmOPf3enb0W7ko9JSqmPaAJ0bxTyEW92t6EveBu8TsvOZY9zcOavVvPwj3KLDg9qtaxvdAO
                      3DsgxrG9kixUPe2ZfL3QCaO7t2I8vQC6qjswwGu9aVemPfYLpb1coO08VcWLPfm3qT22+4O9AvMd
                      PSlMsD1Mr6I86aG9PQQs7DwQ4UO8JDSEvbd/bb1AURm9QAqXvCwSCb0vd7G9KV/MPSiH7rxoTjE8
                      M7yqvdnooj2yQ6a9gE6gvWa6IT0564s90IlHvSFPvj14jI29AARdPEizvrx+xBg9kMd0POj8Crwm
                      1TY9+BSMvE+kyT0am189oNjGvLClmzuA+729PXA4ve6vLD3no6s9+WCJPe1uVr26P349K7mAPc53
                      UD1hUsk9oMdfu8BiyrwSQEE9cwKkPe3Jf73Qhem7IJksve0Le710+g69lOexvFJQNT0ihMi9mTe1
                      PedVVb1Yjb682mBjvWditr1ad1M9A025PeVugb2NWDq9WJ+jvPCmBrwHoSS9w1K5PdjrxDyA5Ay8
                      es8OPYNuTL2iwb29GIx1vMYlST1QFpA7Bp11ParbPT3qqsG9yHruvCV0wj3YALq8U+6uvXFOxz3Y
                      19G89OylvEAj3LyF1KC9X1O7vbrcI71jXV+9T7ulPSAqN730tuM8QBAWveqEcj2Kw1q9h4RavdVO
                      y71EUv48GqWZvYg0yrw2rBU9dmA3PSA5lL2qL3+9GJs8PNgbJ7wAkJG6ZaiavVhobTzCNoi9mk4u
                      PTY5kr2gG/o7SuwQvZS7m7waCIO9Vr4qPQ0HOr2I6rG9NFKpPKAgvzyQ3gu8NDKPPKDFur3QvNc7
                      YUW9PQDn/Tviy8u9aNUsPADQuToACdu7XaeXPZbCNz2I4MU8AByPvLYomr3wxVK8gH6evbWhgj30
                      pNI8bDqQPA6XNT2t1IS9GvYKPTjy+rzWBXg90ihuPei9PDxpKLg9aF9gPCyKnrxU+6M8oGXiO0Du
                      Zb3MwOE84PjxvIZmAj1DnDC9ttNzPa5fGD1W05698O1yvGjXsr2js229wEaFOoDyHjznaMy9MI3Y
                      O2wD/bwHwVW9QLGEvfftRL3mSHg9nLURvVF6wj1YCrS9aDScPPDMV73QXJs7gAWuOrW5mL1sltI8
                      yTCWPcaFqb2C9Gc9LY1/va0YrL1tncE9J1t4vUwY4byeqWY9oMtZuwkJpz3W1m49eMH4vMJdAz36
                      OgI9pZezvX1biz3a2DQ9ILSavObpiL1sH8w8yQKBPVMMZr0gXjm9ooRMPVLKm73Uog69RluGvUJd
                      HT27fre9QFUvPJUnqb0otIy9x1XJPQvewj3IX4W84kLHvV3BtT07Rqi9wussPa68nb2cPuc8biBU
                      PWCfnTwNUpE9rZhwvQC95DljnMw9KDZ3PC67BD2YSHQ8cj0kPbOByb1MrJA8GLBhvEcGrr0Q4hI8
                      GFSmvFuwur1QL1G8lafJPWjm37xZD6090CoXvSYAbz0QR1O9smmtve2Rhr0h/a89LxTAPdB1arxL
                      Cps926mIPbY1nb2gcoK7kyOYPQpCMz0mLBm9QO+ZvEDtc7wTYYM9QINOOyfAvr2iLSs9sOW2u4CQ
                      ZL14cKQ8+eOaPav0j73m73c9uzDLvYecKb1O+1E9PTxCvYKDHT3FKJ89E8jIvXXVwL0Yj1K8rDSv
                      vIDgiLsiHQs9Ci3HvQpzH72dScA9gDq4ug6mOT2Xb4E97HyGPMCS67z87xG9QM+kPGsUsz2qLKy9
                      dZquvWBp6jstNyC9vQPCPdHKpT1qXn097CiRvAAVzTtirSo9Osh6vUBugbzImo48YbCEPamkqT39
                      q8G9Cnw6PVJTBz0becm9czghvXvtoL0yOZe98TC5PfrgX72zYow950FmvYCgmrytPB69BugjPeft
                      vL3912u9dqYMvQASjLrai6C9GNG2veCBF70POsy9xyNjvYPHsL1eQqe92O/avIB8dL1Ije68nYte
                      vbF9hT2czAC9tKnJvKCd5DvSBlU9VOf7vOcqvb2+JqO9Au9wPaWFhr14N4u9qT3MPcOPIb0Cbik9
                      FM3sPBIKDT0Leo69UPXQO2gooDwSWig9sAVAPPnQwj1yq5e9i62OPQAjXrqSdgc9pSmcPVCqYrz9
                      kZg9qqsovVTD87woqqc885Jtva85yz3JOak9QEctPDqqtr2y9bC9oEcgu1S0jLzo8Z+9YKRxuz6t
                      Mj2SIVo9J89dvbBehL3oiRA8pInZPC7FDz2yNnc9IpUzPR4ZGj2ASgK8on5sPWf9fL1XAJg9kKRK
                      vMLIZD2A28S9eCKhPEChwzoC9F49SqspPXciOL0h5qU9hzCIPahkPLx4NIq9AEcVvFjUoDyAiP+7
                      CwGTvV70hr097789YJSru5f3vL0rsMc9CdnGPQCwwzkgUg69mhJyvf5VED1gAwm97NGAvACkVrlo
                      7a28A5ylvW0AvL0gQL68Ru6lvd05hj1sxwG9V3DBPTvKoj1vj6c9W9mCPUyqhL1A3cg8CUemPc+T
                      sb2/z7M9E7y/vQzkkLwjWza9sDRFvegmsrwgX4A8wBiGvHc7vz2m5Tg9iXnMPQiqj70jK2+9ks+H
                      vU9Qlj3YYa28GTGvPck+xD1geEM7SzO8PVCs6jvVwrE9tDvrPCgHtTxo/am9oGCRvDczRb0HuDC9
                      JzF9vUD5yTxw0h282CwGPC2ljD2q8Li9nf+fPcOasz3YMEo8whxEPfRhwTx4Eqw8CvDGvbjRx737
                      zaa9mEiivbS6nDxUoco8IP6svTN5R73jWLa9ky6PvVIGPD3Ll5m9Xg+rvaiDJDwgOEu94pnIvWzX
                      h7xkoN88iN+ZvYaXBj26PZO9h1GrPeQ1zzzIFci94lkoPZYoQj0t38s9JWSePbmwsj2o0Ks8AGt/
                      vAQAB701foI9hn6VveDEYb0+23E9gGrnvEFInj3w92u9xvk0PS4Vgr2K02W9+Lu/vPgwurzfKrO9
                      2R6LPUSc3DyiYzg9cEsivO3Vt71gWiu7QNFtvYp1H70t4Ei9wL7tulRD0bwUhYi9UQquPeyUibzG
                      Iay9Z+zJPXefuT1IY4E8WGqBPMo+Xj3BSZc9dBiLvTcJxr2BlZQ9oTaYPaAUEruBhpI9tbSfPb5N
                      mb3eWQ890GQfvEoQWz11NI49hqYKvQ+3vr1pxoY9ADFgO4AvD71rI6s9wIqFvBJ7ET3Cpws9jOWB
                      PJj1kDw1cIC9QAYtOx+Yhz3beZ49qLdAPNsBoz2dJDO9+cOhPXUuub1NrH69oIq0u6NXeL0W6ZG9
                      1LLovI6Yob2k2+I8Ox+IPbD4jr33Sye9/ePHPa9doD3xWL09ncW2vQKLGD2AVRm6LA+DvN1rTr1p
                      U4o9dKDYvFfNuT0f16k9Tg5jPWPdG73AGXG7YCSWvZthuT2gpOU7gMjVvENvYb3X5YA9AAIwvVdo
                      pz0anUO9mBVYvAhElb0gi6G7e3elvXSluLx6C2w9A9qUPYm3gD3H1mu9ZkQyPc6BWT2nlDK9jiyl
                      vUwM5LwMu5s8D96UPXAjTL0C9IW9ImIAPYMsl71Q5Jo7AMFru37bpL3AZPe6M0pcvbpNNj1QUyG8
                      SxbHPRT52TxuyTc9I8OxPYyEqbwoPX082levvWLvED0g5ZO9w9HIPQievbyr66298MtAvdB0vb2R
                      CIE9SbrLPfRoiDziJA49N3mTPYARQ7x52YQ9LEaavMjAkjwhDME9P8i8PXoXFD1oOtS8c4kvvZ38
                      P72UW+68a5movXustr2wFxq9t5FcvYj+nL2Y5xK8SgcKvWqpRL38S9o8yXS5PQoobT1Q/Dm84K2G
                      PGA6xzwF3J89zHOvPOC9qb1tDnC9KMy1vbmMqT3fN729RphhPXZ2Bb0sIYo8mD+GPHmxjD2CyAs9
                      yk53PY/euD19a4I9Tf22PeB9n7ucjNs8llkoPXTQ/bwmCRQ9mAEbvCvTwb3S7Xw9tPCLPAtCvz2I
                      nOy8cgopPe0HMr1gmcC7Xno4PfS1/DxLHsy9Dog9PYAL1LrF7pG9XqV2PQAvzbzAVIq8haiRvfJ0
                      Pz3q+1u9AHmHO5MEqD3am5e9amFtPWHzvT10BRi96AxIPKyyorxkCOM8TAiEvdirIjxhp7M9MuRZ
                      PWJnSj0tK4S9cvKHverXwL2KHUC9AHfuu1AHrjtANg684jBaPeyZwDxUU5I8TmARPcjApbzCR1s9
                      nYiEPTwsDb1NL8G9deDGPah/BLzs6N68RxDGPQKMCT2ak1y91ncoPcDhSjvwS8K9h0gbvcVmiz2g
                      GWO7x1+pPXmjqj1e00M93D6LvSJ+fz2hQ8w9APs0O8+zzD2KUzG9KnQDPTDdSDxYxKi9Z3qfPcVy
                      m71Dch69WihvvWHGjD1gGo88e9WKPYBVurwm3lU9AgMpPU42UT30DrW8aMq2PDr0Ij1Ut6K8Z4uG
                      PcwR0Dw69F498HO4vUqOBD0Nq5K9grAaPXgxojxBn4E9DEyevBeUmT1MDwa9IpK4vRBZIjzNkJq9
                      ZEOEvQAsYDvR5ZM9s2GnPYZ3bD3zIEu9sReIPVCn3jsPers9QncgPcOumb2AplA8gLfaO4CWIL1L
                      Hsm9/FjRPBZtUT0KZD69Zy6SPRiRtzy66xC9rjuCvUCgWbxIy8k8oL4fu6lxxj2Z7cU90pI8PQCy
                      trlDmKA9yYqyPbDxTTzFkcE9uSiYPSrFsr3g05a9KVCtPUCzwLqYKok8MtZFPSWgkD1XAro9Uhpw
                      PXiIyrxgncK83Tp0vaWRmT3YDmq8ZMnqPGzCu7xDbIE9cu0XPZ0niT3ibQo9tilHPYKVWT1Jebg9
                      +dOCPS1nyL3IZr69EmVNPfJSJz1ljpu9SrBSPWMRl71zRz+9oHulOyBJoDuyuAs9vh8CPe3yxj3w
                      9zC9KqFlPRVsoL3AB3Y8W56ZPRYml70Y3IA8i8+dPW+vmz2vPq89lCXRvLTN7zwsyva8aO3LvNhk
                      GbygFCW9Ev8mPYYDJD1nhGW9CTymPd9jyz0H2q49ULb/O4cOf71y1Wk9bjlhPV1flb1qgW89Q4q+
                      PQI+MT1OizQ9ozGevSwL+DxvLp89U8nIPWjBljzUIYI82IoEPN1OP70Y6GK88goOPYOlrb0AEFk7
                      YAXAvNBAAb37nZs9FRWTvX49jr1mP3Q9rYynPQIDr720d4Y8MMASvSAHdL0f5rU9kPWqvTCv8DuH
                      W6s9eTKvPQBbRbpHin69NGbePL6NZD1QvmG8bQA+vfuYtr1A2Qa9AJkPOhFjgz2ZLKo9Ru0gPZTG
                      Db0Qbi+8NEn2PDriUj1Knno9xuMMPdCVo7tguoY7UcW8PZG+wz17epO9FSXLvfC5BTwrY5U94sIP
                      Pc2ITb0T9pO9Sn9ePYpKX735cag9eTS7PbOKmb2Ro5Q9tFasPKg4MrxqNWe9wJV5vMA4wbrJT6M9
                      U5eQPbIjq714xZc8VcaUPR3cxj1IlMG9cOAavXOtp73IJsY8kokEPZEMuz2U2ru8+rUcvWB0gb37
                      ccQ9wQmSPfKlAT1SKTQ9e4asvXTsAL1AJ7c8zDCWvEmQhT1yDjg9F9d8veOUIb3Ya8Q8uL+1vWK5
                      KT1FIMy9GH62PAD6+LsoZ2s8PikbPSDej73QoCy9+2atPZTggTw7fpG93byvPYcEmD2iI6m97gMF
                      PVIoFT0UH8I82Bj+vA45fD3idG899WGuPU51qr05PpU9qFm1veO3sr3trVW9bL39vBD/qr0AuDW8
                      azzIvRgoXDxu/Ck9cQWePcIQhb0WKAe91Ya6Pb1Err1CY4C9wK8YvMD9ejwoUyw8stqpvXTG4Lwn
                      zJg9PhhtPQTn4DxEEvs8XxfFPR2sHr0QPgm9OjVBPSNnKr302vA8SCaVvb/etT1gpFm74ml4PYqj
                      CL0jS4s9KKsoPKqApL2ovHW8gO+RPI0Tab2oAoA86kiXverUmb3wHly81tllPUrNd716cjA9SKGq
                      vPC6Rr1sq7s8qJVYPFCRLLwTiCW9Kt9JPXY4rL2Krrq9cngBPfICtr3k6+g8mqmBvYoXCz1nhKE9
                      ZhFQPULjPj2lGck96n4QPbIINj0nIss94NKRvA9zw70MHPa8FMW2PNLKUD0P8q09Ro0SvaZBdj3g
                      Vfu7IhQ8Pbsxp712EQe9RQetvTrKxr29Ghu9T/mhPc1qe719eFS9yJGRPOrQrL1whSm9nQV+vQ5D
                      cT0AspM8pgdOPXZOfD3AhrC8oJjmO3qsYz2a47i9qlYAvRg2kDxFysi9b6jDPVB0mr0OX2M9EnyH
                      vQ0cxz3QFbW7Aa2TPeV2yT0UG/k8+KeqPDY3ZT0AFvY5mfG3PVC5wLtAWSs7Yi3AvYCMsrrigy49
                      JBnzPAVSjr0ywhY9zY+nPTvLjr0iJ3E9giQmPbBYvbu6o7C9ohaUvZbwWD2eFjA9QGOqOhQvzLzB
                      1K09dt4PvVoBdL3BqaU9kKVGPGgkX7xQXzu9+2aZPYDyELz3Rz29dK+9vIruSL1r4se9VBL6vIf4
                      L73wHhW8ANDVubMjUL2QJgu9dioRvW3QLb0cAAC97h9ZPfienTws1dw8ELUuvGGmsj3a+0s9Ase4
                      vTiyjbywyxS8oO7wuzA91btLMMw9wrc9PURsBr0gCuc7jpNvPWVToD3IV5S8wN02u+4bDj0M3Ie9
                      qnQrvb4SJz3GORw9AHlrOh0ryr0QIWO8azaxvQrmSL39zDS97RYyvSm8qz068x69drFKPYxf8DyC
                      q7K9IhJoPXfOTb0AvWQ7wNctOyBEwLxe94K9kxu0PVRH2jyppcs90Ia5O2xS9TwQSBa8nQ6aPVBr
                      0LudSp29jmkWPQBQKbi3QCe9KbCSPSZNRj1OS6S9y3mDPc0Dhj0fh609wAqSPKQoEL2s7Yk8oBOb
                      O4XygL3y9gs9FOuePGN6R70Hnb89dFoTvaxHg72xWbY9AMEBu5TVr7yK1RE9SqIePY6jMz30G7G8
                      0DtrvN2We73aQRa9Qr91PSVNoj1GzyM9OncxvWcMbb3NYCq9K0eqvRh8sTxMdtk8++u4PTLvSz0L
                      0rq9KXCWPW4VoL0ANxW9wN8+vHnjoD2Ajgk8Xs0pPf/vsj2j1LA9JMH2PIp9sr2QMCK9tQqmPXoh
                      fb3YG3g8kN11vRN6Pr0k9808/aKePZhVZzy9u6E9CZfFPX1Hdr10c4K8+eqtPSYHCD00vJe8wR+0
                      PQVfhT0qxMG98hclPTIuMj0kj4G9gKSgu0i0sDwtTY49IOxHvfC2Ur1AhCC7rObzvJ04zD3oaFs8
                      WCVWvEqnhL0UaNU8veWQvXklxT06qmY9QkyJvYDtOL03wK894tFqPRZRDL1K7sO9AJQhudiPJ7xK
                      Ywc96PtCPBi+jrwXQ3K9AJ6DvTjG1byoPri8SaKTPZKJNj0DYlS9At5VPcDQdLs2TkA9AL4au8os
                      DT1xXqc9graQvbkyvD0IhZC8zHeqvFgHZbzi9yI9QO6NPLK6aD3+iW89lKCsvFcywb3pOYQ99qMo
                      PRDkF7y83Og8IHqmO9QfgryDV3+9SCyevGJJUj15qsw9qKn8vCB/jryd5FK9GPDkvNeRXL2OdQo9
                      35awPcpqET2lo4E9xCrlPNqemb2AkqE82O+Kve+qmj02D6a9zS6fPQdBmT1ocDk8FIEHvYCU2rzf
                      b6Y9WiZFvWIDdD262Iu9iFjjvKA4/Dts8P28NNjgvAB5dLuegKK9oHpQO3BaeL34mZu8UIOavdEw
                      yz0QSk08qpscPVIjET32W5298OS9vaVav725wYE9G1KXvSDGR72opZ88CpsZPcg+lTzAV8g8nowZ
                      PeDl8bwAy1I8BrgnPcOqw71wfgu9AO8/O3//yr0q4UG9QGkCu2DrPjuz1TS94C2RvBlGyT0p+7g9
                      UnBdPczK9TwQ4i88RqgyPegDfzxiymc9pjxXPRPXQL3/5cW9lwxlvfH1sD1HD1u97H7jPONoar2M
                      45q8NVacvcx8yLyO/Ka92eatPRhsWbyDWME9ai3Cvcv/sz1iLx49cM0ovFD7AL2AGTe9mdGePUjY
                      3ry9FkG9yt46PUeeP70ox/+8so9tPYmxqj3Qnjw8K43FvfPYQL0xDaE9h9HDPRB7lL0jiZo9PTYk
                      vZDDxb0gsr48gEWzPHmJpz3vG7E9gE3XO1Bvhb3QTT29ah8xPWBQ2LtQCD69eptLPdWDmT2jJp+9
                      sUSbPX3pjb2wENy7JpU6PaCqVDt1GMW9uswIPdmGhz2TSi695h+ava+zrj3OspS9flwxPUjDvzzo
                      b5O9CGnevC3hjr2deYo9UlhIPZaaKD3QRdm7lRjGvRCQQjwTGE+9V1savZSi5Lz8YBO9kwJYvXW7
                      lj1vLby9bT1XvfbMJj0iqxc9+QG2PRlktD3DJCG9sQOLPZgrI7xf1KI9Iox/PQCbQLxmOnw9kqZk
                      PTs0iT1UPJ08kq9wPcw36LwwbCq8GuVRPWNpSb2aGAq94hxNPY0vr72nh6o9iAqHvehuybyWVB49
                      sAjcOxLXob1gG147PG+GvYCaTzog18I7JLPcPCkYlz2iJ0c9xzqCPbN9db2Aj7+6UMnruyGfqz2R
                      ecM90OhkvL1Vb71lYas9h0i8Peg057w1VYI9CJ6avTR6kjzQQja8wrcePWVUuD3ghKM7RqiUvXX8
                      yr2BEYQ9RdCkPdDQWL2s8oO8AFJtvVkHjj3ayGg910+uvdA+KTwaT6a9WIDlvK/9hj3vq8e9U1C3
                      vXV3kr3A8DO9NwWqPZEnmD3IEMq8A5RYvSjzYzyAtKs6UHoBvJe9Hr0w6Oi7sK8+PDDXjDsF+LI9
                      WWemPUhVx71ZO8Q9PFHrPOFSsD1A8AS7QafGPRZah73tO4E9nYy1vYP0rb1aywO96CNSPOJLGz2g
                      xIw7R26MPWXDsj2656y9ZEHlPDJxTD3xhrI9svVLPSB5/bz40pe8s/ONvQC5lLwdr129+06dPWrQ
                      oL0mOaO91mCRvVD2pDti1h49VSyTvcC1qDzReoY9DgB0PW3vkT0Rsog9oyjHvbOCyz2to4a92UqT
                      PVg8p7zQQwU8d19Evf3gyj2k5Nc8ARywPYeGNL3aFUu9CSe0PUL5aD3ANge7bg5hPSiFmrz0Nfm8
                      z8jKvbyj9Dyd9z+9QsBhPeA427u/acs90j19PTg4p7zkBs882jMRvfZ3qr2RAsI9t53BPeigS7wi
                      K089G3uxPcNSyj0PSbq90jaIvRgKKLygm6G7rs5VPad+a70YoQw8zb4jvavEpz2MZ9A8+yOWPRFH
                      rT2b7YQ96eC/PX/Rhz0APRc8UMEMvB1IwT2T9Fy92AFKvIbPAb19Ika94IDEvRqjO736LFO9wPAf
                      uxrqPj1emkU9GrQ3PdmWsT0aNEG9WHGBvKiuRLywbkW9FgWGvdDEQzxgojC94q1UPaZVE70Ai4q5
                      PBHYPPjv6ryi/3k9PSIuvWKSGj2/PJ09tByoPHslvT3WZH89TNyjvLqAnL3jJ5I9bJcWvYr/cz2j
                      GcQ9vbxTveCFwjxjd5I9d2BVvRXdhr1y8zs907WrPdtspj0OpJa9fml3PcRo3TxEmAS9mMsUvJOK
                      oj0iy2M9kjKbvTBp6Lu69hs9tpkxPedNLb0b2JU9w8skvb+ZyL0UAIk8ophYPXNIJL0zwZY969eq
                      vWq5Zr0zWMm9QJY0O8K2ej0x1I09uQWMPexmB714e4I8Nf2xPWje8rwxDLc9YqRaPR0ukb0aZJi9
                      Unx+PS5Daz01O649mHNPvL1LXb0wbxK977mEPezqxrxbsLO9o5RhvSlzwD0gNVm9EChCvcq6Cz3r
                      38u9bjd0PUrQrr20fMy8cuI6PazHnzznTxu9dGeHPMAYWLziuxs9ujRqPRWwn70gP+w7ZoIEvdQm
                      sjxQ4Co8oFv4OwDlLjqd9Fm9zXNPvQCkE7reSls9jgItPfjWjjwAcCm6j4TMPcwe1LzAAiy9oqWp
                      vUfUxr1AOdq8DTRjvWCdibwqoWa9WFSsPMlvvT0zIbg9nr6cvSJlmL0t8F69DldEPcwpy7yg79S7
                      qIOIvD/rkj20Hf08C2qZPZXIvT2qw1c9g+mbvb3CI70QQ1M8AELVOZhPq73QM028xrM0PftDqD1S
                      kVs9sO4nPBOqqT1gW6C7rfMavcejd71JLMQ9kqOtvZJRID1NS3a9ZroQPd1dZb2ggNq7EHWBvYBp
                      Tzq55Y89sv1IPeoQSj2w0aq9Ie/KPWhSBTw7LcE9q0e2PahbhbyTQh+9Awa6vbAf+7vSo7e9L+6X
                      PX28Mb2Pcsw9dUTLvS8Tv70htYk9YH03u7KQID2QuTa8Xde+PQAufL204/Q8MwiQvQBAeLfkyPA8
                      6EKoPLT/27xH8pM9KJ8QvIrFhb30mgC9+zKzPTtdqj2YFHY8kzLFPfAwJzx5VZU95osRvfMzpD0A
                      Oc+8jCb/vBcjsT15Wow9QvktPcDkyjq6XzY9ZYqlPUObUr2YCis8bZZzvY3Mqz2TE8i951JyvQhY
                      wLwIOom8DmswPdglbDxqY8e9pwozvS5tkr1oLMI8l9NKvcqZOD0ATte8IFsNvVdpJr19T8k9jpmN
                      vcI2ND1Oj6G9ayqWvRKtZz2AF8c7zZW5vcAQebyTX4Q9js1fPYDlIb1YHY+9MEPsuyOWiz3Q+zy8
                      VKb1POI5RT3lAZc92E9EPF79ND2K9Bi9sF4QvHh8q723bZs9RvxtPRsXxL0F6cW9WOeYPIZ+WD1b
                      7I49uDiRvYLLQT2kRoi9jWxwvQy6/TzDm3S9aM41PICNy73cpgW94xqtPaSZ2zzeTQA9oOA5u6zH
                      nbxjCJe9G12uvQAAlDb2hEc9Yu6Bvczv4zw5ZYw9+YuhPRi3CjzwVZm9clERPXWah73gWOW74IqM
                      OwsIsz0ArWo7wNlbu2CgKL2MkLW8QSDEPVqDDz342Ie9MB2qvecoSr1gWRE76GJavK5/Pj2CgWM9
                      vf1WvRnhgz2YBoS9kN0fvIGxmT3QkHI8bqpcPSxLyDw/A7A9jX2+vSZSC72gkxa7VMOevIFXkD3j
                      GZs9U6QkvZPVtj3AEO+8VMfKPEqzUb1QRX280p5TPSzyir1sBIa8AKdOu32+Gr2HpmG9ieeaPbxt
                      6DxUl7o8GSW0PYpFFr0Q8nW8IHuKvYyk5zwAypu9983Dvei1oTwttEa9tpqTvRtTqb0ocKI8ETKJ
                      PeLZbD0U25A8B07HPdclGr12cxA9gMzMOpp0O70U77W8IE/KvACJVryFlYy92CRxPEEjvj0te7Q9
                      kyydPfAhcLyorwo8NiMdPSAj8LspMMw97sUIPVJTAT00M+S8pjmlvRI3QT0Y5SA8gIf7vBshq72i
                      okM9Ez6lPWRP4Tz35Mm92EsLPGHwlT13o4o9VBSkvBDZfzxBJZg9wCVquzjqgrziZ3o9dMv6vArV
                      ML3oNMW8++G9vQCuSjxsetq8YPPkO8xEwrysbNW8MByZO/h53bwg1b27MDmHOwBXjzty2Hs9U426
                      PYsdyj1atzS9RvmZvTqRur1gQeQ7sGITPFjUoL3Tany9sAe4O4IlET2nrF69FRWmvSR93jwKlVa9
                      WF1CPAB1WjxKpma9GgKZvdm8jj29w5q9THvAvMHosj1Z/qE9mjQwvT0Leb2brII99xqFPcBqYLvg
                      7IO9cK5evID/kTvgdR69lsugvYIjRT3jBHS9sQuLPZNwlL3k6N08/nNxPUyrgTzgepw8UMX/O87f
                      gb1tZ7w9RJEKvbpiHz2Tv8g9xS6uvUjBqL3KYny901GWvd7iaD1Y2aq9Kt+QvT1wrT0mpQm9N3Ix
                      vQCuxb1f7Kc9vQivPSKah72z8sS967aOPeEMhz12ul89WVGQPVCvoL1ycAY9uDGyPORm4jzgU9I7
                      MkpPPSB7D70AehW9EEZbPDTztDyYCTY8MgMHPZcxv73c29Y8G7mjvQ0AkD2YKtC8hY6IPVCGSzyC
                      nk097Oy2vMhdlbzyzhM98Lk4vDDhfzwnQK49fjtCPa1Wdb19wSm9m/qmPbA8GL1Agly78JsGvIAQ
                      WLy8f948huaQvaoKor1PBcw9hBTfPJQdkTwU3o+8aSGfPXBzG7wTUbs9pV2KPeFGtj28Cgy9tJSg
                      PBqWp70PWKA9RmVtPYD667tKkUI9WxmWPRTTjbwTEDe9IFaQvfceQ70wR+G7MKwWvJf8fr2oe8a8
                      7cq/PfArTTzojoi8ZOYMvWjUKLwDs8c9LhF8PYPWKr14Noi94lt/PcjB6byzWFW9mM9zPL0ivj2s
                      eK4899KEPVCidL1nV5A9ahG1vbyG9DxfvLM9yHHfvGlhrD3OtZy9N5BBvUf+qz2ilB890rcYPesn
                      oL0Tf6W98sktPcB3UrtApc462xCZvcyq4TyMw8m8HDncPHUti71otte8aPj3vN0JxL0DKXe9AOQB
                      OtmUmT3gpYm8rtsWPXpwSz3hG409+X6fPaAFhLwx7Ls9WGpzPIZaRj1jPDC9A7duvZWWsL3QW8O9
                      6MqNveeCyz1m1A69vY/Evdfrvr0kqvA8Xe2aPTiMgTyeck490HwBvcsWwr3avDG9YdaBPaovbr2C
                      Sjs9Asp+PaGdqD1QbCw83cSePS4cFT2COQ49P5vCPdmAhj0ZzMM9qPOFvYCyCTr4bs68fVsvvZiK
                      ULzY+k28HxGVPcFkyT1glTO7WLiwPJXfsj0ji2a9V0i5PWoaKr2WIQK9Tn8dPQtnoD0A1ne8Dbeh
                      Pc4YWz2kl/U8lhpuPT+Dyb0S5Tg9JcubvUw+ojzdNMu9xlSJvQEYnj3NWqQ9T7qzPWUkiT36fVc9
                      AC3fOxi/ZjzAPSM7UJ8TPEHihD3oBem8YODdO+7wkb0A38Q8AGQ2vF7/p72KscC9RH7yPGoIGb0h
                      a649fsifvcVbyz0j8WG9qop5vb4GWj2wZ4e9x+t9vafysD0qMgC9oXTAPUacRz2otha8wB+TvZpC
                      ML11eb29aiAVvUfZiz2NsX29glASPXowaL1S/iU9qyinvWp9y722Kqq92NhqPACvMbwaKzO9UjIa
                      PbJkKD1+xFM9yRfDPQrwGT2xOsg9UBZmPCdsN72SQls9dZCvPSgTfjwYoZy9cp5WPYwUvzyGLRA9
                      EFhtvXaKbj2Kxzq95/XDPVdIb71Z2Ks9AD3JO8tHmr367Gw9TGfvPJObtT2YyLg8rYasPd0pgT3R
                      zYY9KxSpvVmzvz1YQ8y8mD2lvNC5cbzoY8u8BqCQvcBRcDumqBO9GH0ovApxhr3jnqQ9PSW8PYCW
                      d71PiK898oCjva49Fz2N4YI9gKeyOh5DoL2ceQa91a6ivdflY70rxpa94CGLu6q9Vz0UPNW8j6+G
                      PZBtl73WXwk9aBmMvDQGz7xaTIW9PZOtveJSfD2LbsG93ZM2vSyiqbwYvOW8+bvCPcauOj0Kkr29
                      8CVdvEtXrb3ucGo9iCiwvQJ7mr3diaG9u/KsPRD8Hr0kaOc8hSjLPaDzaDv2Zns9OGH3vKqOWr3B
                      2qs99e+DPX64Yj3jjKW9y72rvVgd1bxLn4I9FKHrvFGHoT1LUsI9mlWyvVi6GLxOiaC94jlKPYBa
                      PL1Gm469QLK6vB0Hmr2KskU96DlgPEnUwD2mhYS94+UwvfZ7IT19EoM9c7ioPeIIh70qd2c9ODbB
                      vJIxuL2Dbhu9fbYlvdgATbxzuZ49anMIva68BD3Uf6M8Dt8nPSSn0zygUzY7iRW1PVCteL21lqO9
                      LFz3vFqBXT1zysm9qPYGPEclGr3ockO8cKNBvdqFXj2o4YC8VMiKvBhoDTw597w9oLOJvG+Eub1A
                      MXk7hjsWPcrHZT2QySe96Jh5PPAUBDy+eRM9MSGwPUs2jD2t6Xu9pnxbPR+mwD1DH8W9QrOYvUSl
                      9zza7ri9sPhQPOdhnD2Qsks8eiS+vR/Mnz1Mi8A8hfiJvWr7MT1ULLG858LCPVfNL73rf549atF0
                      vQBQ4jdYQBU8VAPYvJrJCL3wHCq8QPwfvPOCn71rcK29WIyEvIBzC71Cfww9CCmvvWZuGT2LzqK9
                      5iAFPQBikzqQf0q9T1KLPWs6hT3U44S8w9+NPRUsvb2R8Iw9dci3vb2opb3is4a9glBbPaqXFL2k
                      58w81hh+PVhSSrwg3uQ7x1dFvfYmcD0Hhh+96K5mPEA9c7sA1J86QqKuvTRMh72KJjq9WGO4vIgd
                      ob3AbKG6fsFJPT8MxD1lIo894Byqu3nAnz1a/AU9p2x/vRhvBbzRfaM9TqI8PXP4Tb2L2qK95HnQ
                      PLDz1jvgvP27cJJYPMOzyb0ZLck9o5aUPWg9vLyIXf68NLLkvFC8wLtQrXQ808PIvWMZrD1i2Yu9
                      KPlTPJqznL3XvZw9PctIvRo3KD3MBeW8qmsBPai/dryleLE9s8SpPX0hoL3owKq8WgwUPZDrOLwy
                      KDk9pydtvUJWYz10cOK82oUxPZhs3ry0BQC9wJglvIMtjz3JNYo9gEEJvPImfz1mgnI9qPV5PCOb
                      pz1+t2s9EtoxPQCc5Dr9JsA91NSpPD2Twb1aMiK9h6hGvcDSFbsA8Sa6mpE1PRaCAr0i4nE9SfeJ
                      PcfPur3CI189QPMSu6oPVL1HjUu9EIEWPHhP27ykY+o82uw8PTAwk73qCzg9pmwOvZaTCT3AaAg8
                      AIpHPJPATL3PQZE9WP7KvVZDUz0aa8S9J/u8PYfXqz2Qa2O9QJAWvMIanr3Ail69up6bvaMNtL1A
                      AjS7C7OAPXMRtb068n89st4OPYc8KL2w9xO9R1ugPa3tmr07B6G9tEPJPLJ7jL2k2oW9ILasuyBp
                      0DtejYW9rNa2PAC2LrsCbUQ9WOMpPJyNAr2Ajys8Td2FvTjx1rxnjlG9gDTDvIhU77yojos8QH1T
                      u9we/jyqmx09IGavPEJqMj0r7ci9D+K5vVeoL71Ty3e9w9nKvSJ6Uz02Bkg9tlloPSCk6zswaYC7
                      HNDOPJAOVTyA3X86g06qPUDvXryAleM7n2HBPdIcRz1A6Z68AGpTO4ziyTygqPi7hKXfPP1UzL2y
                      Pry96eeTPccvmD2Yuzc8NU3BvZIJcz1iPxw9o6plvfrmZz3gI4K7oFnLvJ5tfz2tsoU9kuwdPUIG
                      PD10y+Y8msAAPRfVUr0AREI6AFVGuqh7vzyAlWe8coJbPbOAIb3Ywe68K8e4PfANlb0wh/G757FU
                      vSZmqr2CtUY9ThqhvbO5vr3H0rS9EFYVPEiTr73AMI+66hAJPewf7LxYZ1e8mgIzvdA1g71hu589
                      9SbGvRcmMr1y7m09egpdPVF5mT1hEoc9gKBhPLZTCj0YynU8xxyYPSngyD0ia4u9gODNO4CWxr0b
                      Oqg94ybFvd1ee72gsYO9zq4fPaKxAT3soJo8oQ2tPaxFE73jIHW9wGQtPAAE/jsw+Iu7d/FfvW4S
                      dz3A7Cy7EBhNvPobpb1gAnQ76uA9PWohNb1ax2i9lKD3PPn2mD3I04s8pGb4PEB9pLwwW767Z0gv
                      vc0Dpr1e60o9tdicPZC9h72JsLQ9UA+oOzhAn7xvELM9E2elPWItbD0wTee7sDmcu266Tj1AE8I6
                      C6eyvQMYnr0YAW48yxmivfLxEz3A/Ui9VTqNvSqPFT0464M8f1jLvdr8X737T7i9J7ltvaTl1zzd
                      EI29/Cv7PIArxbtCEn09s1a1vZjGoryqhDo9+LXkvF+rhj0Q5BG8sH6ZvZKVRz1o0hC8clSavei/
                      yTwDXJE9+ACYvGNBbr38ShG9tHPgPEJ0vr2jkaO9c/CavS7FCz2xm5A9TntnPWpbw71HYLS9IYKU
                      PdQX2rzrgLo9sgg9PXDqB7xQUE88cN2zve2LtT0cKgW9r4yzPUu2kz0qQEc9mCqHvQAjsTziKlU9
                      w0C8PVqHGz1SQA89nsgjPTCEhrvihYm9+eqyPXH7gz3k6ek8rK36vKCzrL0yZLe9QhsLPVDTwDvD
                      cUu9MFg8vZWZsz3AQzm87EKyPHKbRD0d6qQ9YLTAvUwE6LyJH7M9NMy7vAAuHzuAoFy9CHDDvVsL
                      sj0NPaE9txiMPXSk6zzQdng8DQ6FPSrKer0T3hq9DxqUPZHnuj1Yxkg8kOmKvQJEFz2MPtk8QkkR
                      PQhqgbyDmRy9Ao0iPZAtF71DCEa9oIn+O1cXG710ygC9xPwCvQDIUDugMyA7ABqdvewWjTy9fLA9
                      dBf0vGwBkrzTQcg9YHnFvdPlb71Q2wm9Y41Uvb0bYr1tZ6W9ltQHvWYqWT33tIU95d/HPWq+SL2X
                      PmC9YJr8vKo2wL1jHky9rjZPPTC6ALyMhs488LaHvT1/nL1rOrw9WMBgPLQA8ryonYK86VDEPYbp
                      gr2Y/RA8oKaHvAfDPr3gHea7TGnvvIQq+zwioxA9M+yOPdQclDy3Sy29feozvXSCqryhWLE9OIOb
                      vdknlD0gS9k7ZPPRPOcpxr2Nb4q9gP/FOxQW1Tybnae9Aoe9vWTh/jwE8v88/K3OPLA6H7wlPZa9
                      EbWEPTupsz05iYo9qhV8vXgeh73mOU09w3VAvRhRjb2U+pq84G5KvQNpeL3OeZe9d9VkvUzerzyw
                      wFK9eG6uvPhhrDwwkFq9mN8QvIbOir1aBay9gINMvCwWhL2iFQ89S/CYvTPkuD0/8og9YElVO6B+
                      4TuSGWg94IoXvT6zbD0AJS07QPYsOyBLh71tuEu9e1u+vXB5Ir29Lxq9di8gPZiRFTylrr+9tsJV
                      Pfh0kLw+TKG9t6y6PeMBpD2dih+90CiiuyrfRz04Eoi9KgqBvcDIQL06uwE9lFa0vFFDxT0oiKO8
                      hMTUPMKoQj1bHZ29dLKvPNb9mL2xI6w9AEDEPGPXjr1Udc48ku6rvU40m72o/pm8UHOivUeaV70e
                      Fi49VLf/vJlaqT3SZFA9dhBjPQEbrz0rOsg9SXiLPaC9sLsYzR68HhZJPdJwaD0eJ1s9QvPDvcJh
                      wb3oDt28qk6zvXrQmL3KK0i9mE9KvDBqtL13BW69WtWMvVA55rtiaBg9F82xPV5rj72UuO88/1u3
                      PUdyfL292oM90mEpPVgNsL0wTw295b2HvQAwcLhQsXC8CHWbvcfwaL0fwJI92GV8vOY1dD0Y5nu8
                      FmoJPZjZJ7yCoBI9BuCgvQAlhb1WM2Q9o0vJvQ6ciL3IR8m87bPGvR+jr73Asue6Q+hwvZy3FL25
                      8J89ILSxvWJePj1AqBK9AriavSd+ab3G/Qm9Au29vd1iY70aO6a9JzxYvaobSb0QEsy9VlsrPRrH
                      yL3smuc8atpDPS0mWb0jLai90pt9PTggijzdYCi9X8rKvS59Pz1w7lS8Ooymvb04RL0NGsu9dDy0
                      vCjtE7ys0IK8Fto5PYCp2rpPPcq9YJAPu5k6xT09U3C9ACxKOzNTiD2dOMK91N0TvTAy1zuWspG9
                      WyDMPbc+lj0Q7DW8fTzJvZ1Cir31L7m9cDmcvQBfUb0j7bm9IBPFO/3Lgz0s8J48iLuXvKB2Izuw
                      SLC9ftlJPcA8xrqAJoi7aOzAvJgsojwpiaw9mqQ4vUCNfryAHyC9NZmHPRAjqr3kadQ8MuhoPZQV
                      2rzBxrU9WNAKPO5EVz1M8tC8Y++KPeB4Tb3Qbym90wokvYNOf70QpiM88tZfPWiPBDx5HLY9FoIQ
                      Pf/5qj2adju9YvW0vRiKjDzHeqE9c2QkvRjFBTzossw85/KKPYXqj73yh5y901iNvcVhvL2QuCS8
                      gIC7PG+qtb0SxSU91Kb7PNoWGT2KCh69qP2nvaAIXbvZxcs9ZV6PvVB6TLyA/SU801+5PdByer1y
                      2R09TeGRPQD1HjsYlhq8eJqtvGc+oj3A0229g+ClvX02iL2n3q09ilBXvVpvID2Aw8s8naB2vZ4W
                      Lz1gRG67fmYUPXcumz1Yq/y8DaLLvYLPYj2gGrI8GQCZPXyD4zwovdC8sYSRPejoa7zNhFe9lWa7
                      PaL9Yj3RwpY9ouoyPfpKND0aC3I98YefPX2Knr1XcGm9aPUUPKgeP7zgZrC8iMCkvcq9R71A47M6
                      QJ+vOu4cFT0pBbU9s2lxvYvHhz3QtTG9/5izvdYZbz2g4jS7CMKTPPPeYL3AzGM7l1BLvVPtJr2o
                      PyM8NZ+hPfMLSr1oL7I8QGRXvUiq/bzxnJc9UK/qOyltvT2k7NA81BmsPNJFgr2yCl49AMxBOb9r
                      qz0vrZ49KyOwPcg9iTw35FO90AxkPIvoyT12Ejs9O4i3PbhmsDwYRnS8BJLoPENOOr30+K689YSr
                      PSPIzD21x5K9Jtp/PV7VIz0AiuC7jbXLPYB/vbvKD4u96Ot6PEDvaL1OQpG9Q+kivfV9j71AUv+8
                      scGdPe64ez0otM68BuE7PahvoL3Dgam90AJGvJZYHj3cZRK9hiRuPXYklL1gHDy78HktvZFohz3h
                      gq09YOWYO5Svybz3YiS92oR0PWgniTymln89wL6tvXgAz7wTtJQ9GIcAvCjHzL3A1pY8jFKhvPMI
                      wj2aUbS9NO3bvL0OX730GQS9/TyRPcxTs7xApI48lBTIvD3SKr0TqEu9NqcKvXAoXL0/2ok9qLek
                      PKLsRD0toI+9DAa2PGK4yL0CR1Q9JxdAvYK1dD30sM28ercEvSONrT3Iqqs8Q2KtPWfaIL1wek+8
                      QsaOvXdKc73sbeM8ztUlPQxW4Dyc09c815pBvSJPs71KdGm92UOJPai1tb3IQKM8OTCkPYXLwD3c
                      AQS9iECWvfhcrryAHNu78U6YPbYJfT0M25Y8ZfnLPXOjrT2O3n09GAgnvBFizD0w7D+9m8zCvdyP
                      3jzSRL29RogGPSxN0LzAAO+8jYqZvVdZNL2gqNQ7bHrovHgfwrzoEYG9GMnHvIyXgLzvg709GU2s
                      PRQfybzdZ8Y9gRfBPRmdiT2CRiA9+YOPPWdJuL2rDcA98KVMPJRoFr0VzJi9IFeqPEUurT2tpSO9
                      EKVUvGK0lb1nvki9hUTMvRVdmr2Nt2K9EA2yvYYcaj3+NwM9kMNXvEdEmT3AWay89CKmvBqDAT19
                      A029b4W/vf5CYz3KDlK9YvRaPSHPuT1Xkqw9KJY3PGfxiD2S33E96FSGveMDzD3dTkK9TIa3PNGd
                      vT30R568ep8mvUGXqD03Kzu9A0Rsvbgcn7zMXwG9oLWOvFhXmr16EB29N1eRPTI3ND2gLQC9GPdR
                      PPTp17xM+rE8DQA1vfAVXb2+iSs9eQKLPauFpr0XtrU9LaqCPQpVLL0wark7CnZ6vZoQWT0vJIQ9
                      Wx66vYmWiT2HL7e9QDU3vGadB70jxia9WMHTvNhiVDwbday9mgobvYIGWD2gCO68uoWTvYXXhr2m
                      Ug+98LyRvULspr1tr1K9wArWOh2ivD2Wxyw9kW6OPYb1AL22wXI9LP+EvSjyOTyDrm69vnBuPaxb
                      8zwARt87tayIPQyImjzgIYw7vZm+PVSk+bx3U4g9CB6yPBweF71A3lo78JYIvdDa/btGvY29wqM8
                      PSrzPL0MIqK8GSWAPQBeDrzAeq29ih8rPc49or0jKso9IUyzPVK6fD351Lk9yxaZvZu1iD1YZOi8
                      +CCwPEglqTwZbIc9R7CkPbAX/btokXa8wPBou2AA2rtYbsw8ffxDvawPzTy620k9oDqYPKxsiryF
                      tpG9/EcJvfOzIL2ALLK6gDOIvagP8Lyr3pa97SuhvUCkaLyhQbY9KXW9PWrlBD2wqgi9sLETPGBV
                      h71qM3u9eN/HvNJJDj2owxC8UIB3PILQJj3YTnW8ouY3PY9GiT0AYAA5EFezvcAYbTuRBJc92Nay
                      PICeMbp6HT89d71zvQCGlTuzBCy9LmN3Pb62Bj0KCTq9phIXPfY0LT3dd7w9aoA5PV9+gj1s4pK8
                      zKa4vGqQUj2V8qU9OCm5PH1ws71SzxQ9oCNru2ABE7uwJHC8QO9+vb7pZT1Kjzq9oF9kvWgNfzwE
                      PO88TGmFvfVcnz1G5h89hS6OvUCaSrsg/h29KipfvQDj17xKonI9LbhUvb0VqL2n5p09x1XMPdJI
                      YD0K2VS9mHetvYAfpTtCeyI96Mm0PFBWILxu7T09uD7zvPEIkT3S9QU9SnO7vSBehb2Pj7s9KuZq
                      PTFVuT0Cay89sKcnvC2csj3hY549sHnAOyAOsL3LK6m9wIlhO4MMnD0Nwrs9nZqwPaD02rwA3YK9
                      YFVbu87MBD02DEE9MZWOPWlVuT2kofk8r+efPcBgZLtDIYk9b5GIPab1Ij17YZs9/NrfPEU5h73Q
                      2mC8MGmRu9D/mrvAfFi94sYePZvvx71rzqK9ylUZvVqZj71726w9HsOhvfpccr0a9sK98LwZvEEN
                      pz01iKg9mXyFPYA9Gzw2MQE92OB+PC0kab0bKZK9o2t5vUPbhz3+sno9ACw3u4gPrbwWpRe9RzOQ
                      PaIEhL0fW7G9IOOrvOIDhr1zhyi92lcqvaSq7zyoEdi8ch1ZPVYwir2AVvy6ZWKdPclthj1p0KY9
                      Oha2vadtZb12PwQ9AGh5uFEevD3A8Fq7uA+NPEBMjLyonHc8uqBCPWj0P7yMILM8W3ONPUjMwbwy
                      sko9eoqMvdaWYz0+Oqy9wR27PTTaxLyAQYQ8xOz6PIjZhL3duYS9oGFPO7Egqj043p+8atkhPTDj
                      NL1A7Lo8gIIevNCjQDxHYR69n7vHvWmntT2u8C09AL7muwBU4Tv7xpa9fau0PVB7Br1QUTS9b1W1
                      vSWry73wS1m8nOgEvQ4JjL2RF7A9U4bBPY3Vmb1QRuc7wJDhOg8+ub2q90E9sKCuvbr6wL2Q7yi9
                      CDawvXd3rT3oOuC8ivy5vRRy9rwnm0y9sFMTvbANQL0AIOi7M9wgvR3FtD1g7LO8E99evaCvpTu+
                      Y209YFKjvDA5qb30NoI8qkkIvQzR+LxYWTm82P9ePECgWrxsOJi8+pAsvSrlAz2sGM68cMLKvZgp
                      lbyihXQ9YDrwO/EDrD318Ia9LKqcvGhzr7yU3YW8ErdePWBv6rw7HMw9bxCrPTdFkj2184S9QsGJ
                      veNyuz1ACHe8FDeBvKFHjz02GJi9UjGaver3DT0oFIa9kBlGveg6Hrx0fZI8FD7QvMwy6zye/B09
                      eQmEPcO7a72L7Zs93WHAPXNeNb16IG49zGrXPPswqr0DGSG9I/xXvQADVjrA9oW9WrtNPQCLJLo1
                      3pm9aIWJPPwL+jxK0IG9Qv9oPXjmt7yYgZy8mhlEPUAcZrz+jns9qzunPffTpT1uW5y98+uyPUDC
                      vTxzlcO98eOhPdBG+zuZXcM9LHj6vPW7zL08wO08x7s9vXmNqz0Gx2c9rQa5vQB5GToCl2U9IOma
                      PNp/HT0JxZk9DVU3vQJLVz3sQoe9WBhpvJO4db3HqHG9CSGLPYDwnTr7pKY9sJEKPPx4gL26lXE9
                      EPoUPCKAFj1Nzsq9dJu4PHiyyzwqFMi9rNGSPC1yv70ZPZE9Mi66vQxG7Ly9+7U9dOGwPABwBrxg
                      wDY7KqNSvfDlWbye+Ie9OlzHvWayeT14qPO8/3uGPeC5rTuAuyi9mdrLPYCUJLyazZe9acmxPQA4
                      5rqolFU88NI+vBVDsr1nLkO9J9tdvVXutr0YPMC851u/vWp2ub352o895p+evZiGODx/t6o9Q34v
                      vbLHOz1jtDi9E0CgPem1rz17Io894xa0vSKqw72Yhla8ls1aPV1zsz09ajm97JLQPOXXnj2a1lo9
                      wO2NPGKgUz34fsi88FZWvLD2AzylxK49REb5PKCHTDvArxe70PwAvfsfwb3iT389uGKCvDi3vb2Q
                      WxE8RTXCvVg1bjzmp3I98u6uvZg0qL1YqJG8LUmNPcBmkDqQFka8kbCAPUIIxL0SC289y/KyveN8
                      f71Op5G9eHyBvYUTuz2wekM8mNc4PHA8Jb1/SrG9mfq0PUC6fTs08eE8W0+9vdZwfj0VxJA9GrZG
                      vZjYgr2toIg9HUZZvf+Pmj0A/X46G66aPQGUoz20sc+8QWi1PRAbejx3Kqg96D0zvBJPQD0ZmJo9
                      4x6tPTgLqTxghIe9IHlJvWjo77z52cs93TM/vZrZxb1GRl49I91nvQWNgL2s7Ky8IIOWvV4FFj3z
                      sXm9Pk6Jvarzi72zvpq9T/ObPZdtmz10RxK9oFA7O97rTD1aPp+9AnFHPebOHz0Zzb09tN6BPLoi
                      YT3aQlC9FgdcPW/ysT1zC7c90PluvAYwbT3NUTe9oCcKvUXMur19xxy9tRWtPZn3mT0KimK9QcHM
                      PULUPD2iE1U9ytErPS2Foz0i8W89k50hvZ+Erz1AL668xiIfPZimt72pO6U9a1CNPXYFjL3WSBO9
                      cv09PVIsAT3avay9IKFlvePCrL39xpM9jhg5Pfpiy722l3o9sOTmO2gfQ7xnBkW989ioPfFCnz24
                      DZy9/QUivdnqmT0QtDQ8AIBXvRJIAz0SGpa9PaN/vRrGjb3zTzu92K2PvAsDxz15Dak9kDMnPDiP
                      s7yolMy96AYZvDnMmj2N/Lc98CoivFDrtr3kEoW9AIMPPEpODT1V2sm9U9yOvQNhjz3sC/s86W2S
                      PTTg5ryUn7M89MKRvK/Jr70CpTs9L9y0PRC7Yb0Qfki8GebIPRXJkb0qfEA9TE6UPG1IuL0dMbU9
                      KMd0PDdfnT301JI86e+aPVi6V7zf0Ic9FcfDPQA1RLtgyaI8AB5LPHC9Jr0lNKw9FsOhvdBccL0O
                      9qC9rnh9PT4VMz1Vtco92khSvRmKjT0f3Mq9NHHovPAUs70gUpa959WWPZKGgL0Y3ZG92DPIvVLk
                      rL30HO280OG/vQBAHLv1IKa9GoVfPag3uLxAvQ47yguBvan5gD3dDMe9KXCDPcAHKDs7nJo92taD
                      vX8ZpD3AXJ66ucSKPXJyFD1zNEq9kr9VPaYGpb37bJY9z6m2vczo3bwwIr+745dxvfokZz2Aapm7
                      uLmKPOacRj1gj7i9rbbGvcApbzvYxok8DlhMPQAOer27wJq952qBPfZ+cD0C4Xo90Ou4u0OLSr0M
                      Stq8iGeWvU9Otj28vRC9eK3GvWssjb1adMm9KsOGvdBP5buQHmc8L86GPWbhSz0sCYU8wEECvH1i
                      hT1QK148Vq85PX7Xg7209sm81lkZPTL/vL2wNvi7wEbYvJZdXT0BTMI9wb2oPWgpxr2MxoG9QiJY
                      PRd2a71TTji9F8hRveJMJD199pk9hg4CPf0vlj0ygXs9zN7KPKzr97zHRsA9ecqYPdw78Twjmyq9
                      1pclPZYyYT2nPo49mvQhPcjom7yANtq8rbLFvbFwvz3LqcC9VrBYPb72BT3Ucui8BYO3PQBuqr3X
                      5329ckFRPXiXjr0ps5Q9XpeovTbkDj3dV029gHymPJG4ij1k8OY8YMyxOxw/8TyaS4K956zKPQc+
                      Rb1Iqvq8YrQ+Pdyv+TxL9Kc968exvXRNtDyMxKi8yXWjPdTb4jyosoq8HZSCPdEXjj0SYBw9iOKz
                      vdNKYr24N7G85qhXPUkijj3XMHG9s7m+Pb6yQT3NLpg9LC2LPGCkZ72lDcy9DRl1vdGqhD1u/mY9
                      mGkRvP8gzL2h4Jc9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzQ4OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2MzgzNzQ4OHEBYS5kAAAAAAAAAHIycj10ibG8xdKdPXGtkj3zRGy9/nqIvfj4iL2/2Me9
                      e/qnvb+1kD2WkVQ94AcSvRC3XDxdjrc9OsmVvcoxZb0GKSg9NZa0Pb1gpj31cL89+ipuPaAanbss
                      T4O8crEdPWghXzx4Mpy9O7W0vWAIRjsAdrI6AiZgPeM5kb2d9oc9YV+XPTNaoD207PY8FldLPUNe
                      kj2ozGg8IDCrvUw/5byA0SC8zt2OvSCm37t64DE9MIC3u5Pxlb2AWbw6zHCLvF7kdD2U8Ni8EGkM
                      vOCG6LvZ7cs90BtXvFDCH73BBKs9YA+LPCfGgT3dDK69qhwePWfiJr0fWqc95zFovSimSrxjhrg9
                      FNHWvDenab0yekY904W9vdDO8Tv3vci9c4xuvSNKJr24z529bRt6vb0Jsz239qA96hVmvY6OAT0H
                      xUK91aiIPTUawb0QOiC9ktabvQoXDz0cyoi9V56tPUc5Q73q5ES9pk0oPepuv73wp0K96Iw8vC6h
                      kb2u2IC9BxGrPdlTkD2F8Ie9VhpdPTA6Qbw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzU2OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2MzgzNzU2OHEBYS5kAAAAAAAAAOg5dDy7eJY9MAegvfA+Gr0WLlg9cejDPYCuoLwQ5A+8
                      4PyMvb1kmr0WxqK94fSXPX6EDD1KPJC9xUaVvX6HOD0G3mI9vzG/vfi8rjxiplA92s1uvQAqT70v
                      LYk90FtXPIZvdD1aH189etVuPegZsLyG+HY9U+GUvT1SlL1LVrG9QPQsu5nNwj2rO8u9pXSMPdZ4
                      XD0147o9O1aavUtClr3gdY29FLT+PCzfszxQLH48UXSYPdoJTT0gtsK83z7DvbmXoD2pV5E9gIGC
                      O1NZnr2yMLW9gPF1vSIpSD2/Pr09mCEQPPvBvj2XlsM92g2nvYDRKbrhJcY9pvehvSIBnb2pUcI9
                      DOuCvHQNCr0oASq8PHUDvVBWKzz9aTi9pIrkPACWC71fMqw9AGBeO1YVDb3d0Iq9c+KhvZsxvD3Q
                      LIU7MP4VPCD79DsVjbI9QvMNPcARxrysqJE8QuqpvYlnzD3HCMk9qGKevFWbhr1648S9TTSwPcWk
                      vL2JW7s9WOb9vJHPyz0jriO9lAnAvPi2zL0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE2MzgzNzY0OHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE2MzgzNzY0OHEBYS4BAAAAAAAAAL0tmD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        GUJqOwgrIDv2B1I79gdSO+dC2DrOPcI6aKfROmin0TqqWGY7lSUmOyM7WjsjO1o7qlhmO5UlJjsj
        O1o7IztaO1Z4Ljs81+s6GMoEOxjKBDvrMh07cLu2OoyRqzqMkas64G47O01OEzs/+eU6P/nlOuBu
        OztNThM7P/nlOj/55ToPAZU7lSpaO29xjztvcY87Ou5NO6c/LDu0OhA7tDoQO6qXpTvWiEo7QY6M
        O0GOjDuql6U71ohKO0GOjDtBjow7DwGVO5UqWjtvcY87b3GPOzruTTunPyw7tDoQO7Q6EDuql6U7
        1ohKO0GOjDtBjow7qpelO9aISjtBjow7QY6MOxmQGTz7mGA8wEYrPMBGKzyTV6Y8ATO5PKOVqzyj
        las8tiscPPqDWDw71yQ8O9ckPLYrHDz6g1g8O9ckPDvXJDy7L048TYiYPOJzhzzic4c8/dZkPCfd
        xDxmrNE8ZqzRPCrtPzxpNXQ8gmycPIJsnDwq7T88aTV0PIJsnDyCbJw832zxO77jJDzwyPo78Mj6
        O9avLjx22FA8+Gp5PPhqeTyLPdk7sZ0xPNHv/zvR7/87iz3ZO7GdMTzR7/870e//O99s8Tu+4yQ8
        8Mj6O/DI+jvWry48dthQPPhqeTz4ank8iz3ZO7GdMTzR7/870e//O4s92TuxnTE80e//O9Hv/zs=
