N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYyNjA0OHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc2MjYwNDhxAWEuhAMAAAAAAADAU6E8vi4OPvuwe77FppU+yLByPRrScT5zR6U+KiGI
                      vlpObj6ARsG92MMjvcD5QL7IGFS9ADHhu/DOyz2MvvI9diW8vfaA5b3Axcs7BtRUvisoFr7AAwQ+
                      5u9ZPmC7DDzjeae+K7R+vn8rhb66sl0+jMqwPYdIkj7AuuI8AMRmPAC8AD4+kSi+SMlpPdjEdD0w
                      0yK+8CXBveqCbT7QKeg8voEBPraBFr4EMoo9zBr8PWrJPT5C0qG+ijhIPprhYz7opg++Xgg2vkAq
                      KL7mthc++2yFvis3cb7st9k95CuKvaYCRb7jWY0+RgNvvv6XlL5CQXA+Gmw8PmYOfD7W0Qc+ZMCK
                      veKjPD4g6WA9yEBoPaHypj67pJq+Zt5ivl4AMb6GnJq+PB7avV0zjD77Aqq+raiFPjBlp75wjaS+
                      MJTJvDMcLr4Aeyw9fuhkPpbK4b1IWVi9eIQ8vrJRTD7YP5O+EI2JPBEJoT4Qxto88kQDPrtfqD5f
                      W5A+qp8xPn0IhT74uHi+tE37PSDG/r1ok0A9CJZ1PS60Wr5C1zk+VJOQveYeUb4QFo09162IPoDB
                      cDv71G6+dvs9PpZvMr7JOqA+bOnavUAa+z3cfZK9EFauvEFLmT7CRic+ccahPqRk2j0HhoG+EJ5k
                      vn9Ijz7wpUq+4EhUvXqpQz4ChlI+61ObPsDBTD0cya69r0KDvlIWRT6qvjs+yJxOvXXUij6mzXy+
                      Uhp+PsbUcT7Op56+2FdUPQg5Or7Utsw9QFZZviBRb72QKPO9AHeMuoA2bjsYlDe+Rp3mvcA1gTzc
                      tuQ9CHRYvgz+2z1wVLa9PveRvu4DGT77sqi+/oJnPoAfVrug1kk85laLvgCMvroHZJE+EMfKvdMp
                      hb4QKLG9HYSFPqMtkD57tV6+YZCmPt53PD6kqMQ9AL6zuzJUVz6u1wi+9qo4Pjygsr0QIs+8rFGZ
                      voqSFj7z4Ig+Jr+lvloFkL5Lr4k+CBwLvS6Mcz5YIKi+lpUlPmCvlr3Np6c+BgfJvcCvFr2sKJu+
                      6m1PPpQXi71Vq4M+r6CDPoKreD6CCnE+YiWRviavtb1cp/A94a6BPpZNZb5icEI+FEj7PZiAPj2W
                      SLu9imNKPkq1Nj7I8w8+cJ++vBjBaD32ouS9LtdbPmtAG77GtxM+oNsGvh3fnj50qps9VkY4vnyy
                      /T0Mj4++I0kOvrofRz5b+J++4ESDvRqLdj4kDI6+YutzPhA8I76ymXY+aEFHvgyclb7gvRk9Brs/
                      vghRFr3YLWS+C8iWvgCb+r0ACaa9IG4evJXfpD4ybG8+0CjTvHExhz6GvGq+cJhkvuL7Zj4kgZ49
                      FjsUPvxW+L14Dky9RaGdPuQp9j382+u9AulTPi4SaL4zMqg+ru5RPh0Chz66vxI+iKotvYC6tT0A
                      lje84D4rvpWjhz4T/A2+npNmPra/Lr68M9O9INGZvVD2uDxg1to9CuJ1PgBM7rsDfEm+wLTgPOau
                      UD5vw5U+IEVDPFB8j752PFO+ICo2vFAefr6oOme+JGOfvd7dFj7gHE89ABvOvMg9PD3QAeU8wMXs
                      PAigGz1hGqo+fj04vmPmSr7WQCW+ZMSUPYD9BLyQ3kO+YJVgPRF4oT5wDr+8kJvVvIeYnT6gkT09
                      IOYkvlD40zzlfKY+QiosPuBQk71rHm2+TE6kPZCm7jxKGGE+mPEDvpaTY77AzfI8372iPoB3OjtQ
                      tdq80KmqvpoGlL5MfPs9oKZ3vVBqZL7WvYO+pi3AvVSexT1Ais87lliGvtM8hb6QG/a8wD0kPZIX
                      az5qLVY+RKfoPUDThDtgdwo9gKJhO2HdqT6MwfC9yFUOvhDRl75c9YK+UAfpPcDPCz1zlCa+LhMo
                      vkA+3Lx4bJy+bOiXPYATY76NDos+YKMLvca2cL6GC14+CnkePoA7Xz3IuoO+EulSPpCI+jzg9WA8
                      rgBUPvFFlT7mWz++gJ/mvcYmHD7giJG9TiEPvpirDT2P2YW+zsIpPut+B77yFEc+4UimPuAMdTxC
                      dEQ+UsGKvkainL4wdGa+bC6TPfmJjD5w8vm8yH9DvUt5mT7AolW9FLmJPSJYDT4fu6a+TAr9PUzW
                      171fEYk+pPu0PTDvmr63F4S+WMIevcjwXb3grw89aLdXvk8Cij7W6Yy+qiZ3PhLRKj5CQVc++LoT
                      vjHFoz5ImUA9zGGgvTYweT7WieW96K5rvkjwbL6CkKO+qYSkPheqoL7QRMc9CFpoPWD0br0GAcq9
                      3KTHPWudnr5iizQ+8ACrPAxYnz1/G6e++PgxPWAHub0Ogx4+TbGJPlB2jL4GqHE+fESqvihCBr3K
                      DHg+rGeEvgiDTr2gisi9QK2LvoMCeL6bw5e++p9gPhYXdD5M1L89ygRqPrFloj74DhO9pTGOPli3
                      Lz0AiM48ciyUviGfhT6LWIw+oOVLvFTIo72PuZa+k6KbPl0jhT7LRqg+mPuBvkF5mD5A8BE9QATA
                      PPh1dz3mnZy+ZMbhPV4+Ib7RGIY+YH+mvWCNxj3A01u9VEmIPQBjvDxMKoO90kZJPnY0LT5QEZO9
                      EA/GPXALqr3ejSa+FArDPdn2nT6AcrK84vtcPqxoxz29C4g+HO/8vQzR0z3D9j++OAcuvXmIpz4g
                      8RW+cQmCPgCY67tL8Za+YxmVvtjoc70MobK9YI44vYBy+D2Q0ru8Jh0JPtJrLD7rJhu+4rIhPliW
                      Pz1AvAE+TWmnPkBp0L2wwOg8awShPqKaSj6GPwS+nqVjPvyAkz0wzr29/k8GPk7yo77XyoC+LInH
                      PWMgDr5YVDq+q7BAvupDTD6Qmts8HvgVPno4dj45SIs+z5WdvsYtiL5AOso9iHF4vrD6mT0g2gM+
                      qlhJPoaCQ75xSZg+wCnVu0qDKz6qklI+bGOGvWQolT24NlG9ZkysveISND6cdfK9nEm5vUAOvb1G
                      iAi+lDqHPQCl2rqM8J298HprviiLI74ADbC6sHyoPD7cMT73uJe+q9FfvhhiNL2wQOa9CGsbvVin
                      qr57Mle+Zvs5voggOL1cF/a94DyyvZqtdT4edDA+gKuSvuAJBr4rioA+FmN1vhhxMr6gnIW9MJbo
                      vXAZ8bxgq2S9tPv2PUxytL1YY4u+AHq5PM6KlL5Sa2k+4HB0vRggOb0bPUm+c5x+voBNTj2g2Ke+
                      qnc6Pvs+hr4kdqq9CrimvoB807zRk6E+IJQnvSj6Z706OSY+GFJSPVpxYz5cbpa9unhsPrGMkT67
                      aRe+tqnGvQbDbz5/tKg+c30tvnYgCT7wJP283oWIvoCLMj24hFE9k/amPkDe07y4Awm9Zy6WvrCM
                      iLw2H6C+IHVqPHCy971FLJM+MMaFPEr3OD6j9GG+mBMAPpBu9r2Agj47IKHBvVQB8z3Q7ZK8gO+B
                      vPIPTT7jem6+Sj4OPgBJUz1Ah/472BlSvebuMD6gOJs9QDKFO7hJN71A08U9eJlyPajaCz5YTk89
                      e0YEvvVykD5o4R0+HCyJPWfrlb6WXXU+QOeDOxQ05D0JfY8+aKgmvsCHhT3kMfw9rDO8vTZ/AT5b
                      o6S+d2SPPo0/nT6pcJc+TLOEvf6eez6mSma+5ujVvfiqFr67/0m+JwOVPqTQij1Q9uU8JNWRPaMc
                      aL40bu89wEZtPQazh774NkO+dOufvrIflr7J04Q+HvZxvlDWij3cZ6G+IDqtPcDZqD1onhI+5Ebx
                      PeoUUD7TMHO+jFGjPXekkr5w/ia+QrgRPgOTmD74N0S9ZA35PQAlF71glj09mPwQPXpYnL6+6zu+
                      xSOpPspLBj4YfpS+ZqiavljeHT3WdCc+Y8ZWvobLwr1SLUc+gIdSO1WChD52c08+AvKmvg6SXb7g
                      fEQ9kL3qPfY+Aj6qFX0+mppdPiCD7D2A7Zy8hmOvvWupgb54iDy9ZnM5PjycmD1YpCq9Rn5gPqpQ
                      cz5eMzc+lgUmvnq/RT7iMBg+EgMfPgZ3JL5wvoi9k4cBvkOqJb6e1je+McSFPrkBoT6A1bU8MIQd
                      vp6qm767Uh6+s7sevt/lmL7og3m9nhhgvqbg073JIY4+oP4bPqTwpr3lUJ8+zgBnPj/Blr4gVTs8
                      ENbavKDIhz1w8Js8bJrMPURWlr22Wlc+qPlHvojqLL3Apek7gOiVPfwprb0ojQ49AL5EOhjMDr3o
                      Y3a9k5QhvoY0EL4Y6UO+yHJwPVu+aL7qiKe+ICiEvYzWtT1A9Yu88t1kPq72br5+gU++SJEQvqAw
                      ZTyQqJQ8MgpAPoBLPLtbewm+j3KWPpO/iz4DPIo+ANY4vsAyuj0sLIs9wLRHvhCnkrwQYe29gFDt
                      vFj7Yb4AIdi6Yg5CPvvfgz7gCWU9cI2kvGLaaT78juC9q7N+vvhkl77O/1m+QO04vkKgkr76xkE+
                      wIGhvjoWez4wTLq9/FiePablKj4M6O49TuOjvk5nKD50YaU9lofWvUAvNL7ReaU+JklpPil6oT6G
                      GB0+SRqbPi4mlL7815G9gFD6PKa3Ib5zGhW+T++ovpUhkT4wZXe+x/WTvkgEdj3LakW+8Fn5vHwB
                      xb2M7NS9YmVcPughGL4E0dc9a7A6vn4eFb5MQLY9/jJYPsD9pz2LqJc+duLcvVi9KL4QKIM9plco
                      vsgKdT3GToW+yvg+PvXLiz5Anpo84AnqPbIlMD4TjG++sm4kPgHunD5JaI8+nqZPvhOsAL5AedY7
                      Yg2ZvspWKj5ADGk9YKnHPWCQYjzstqm+6ChLvZNbqj5Ynga+PoYJvoi4SL1780i+Kz6YPiyqir2y
                      BnU+DnxRvhr/ED6gOVc8iOgRvuyykL1U54q95Ae1Pba0FL4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYxODIwOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzYxODIwOHEBYS5kAAAAAAAAAMBqCr0gXqK93z+ovlhYID4aw5G+ZOecPYAQdD3yI1Y+
                      ENjJvWYPcr5aNHs+1CSCviLQmr5ssN49HVqZPq5xmb5+Oae+e2JmvrpbMj6ywQE+9CegvrYIUT7+
                      xmm+Lq5mvsgzAr4+9Cw+dBz8PcBRljuQruU97F/NPXCya758yeM9V2iWPpaxHT6aEnc+xJ6bPQ0P
                      jD5gFGq95DTWPZyxnD3Q15c9inxaPqpcPz4E5qm9BuOsvZAu+jyeKCI+8kgzPtXWmj6fnJK+PNXD
                      PWgsP77A3e672/QdvoYMVL4cPYK+SLJuvS67Tr5W7WM+6IgNPsZBz71Jm40+tt9tPjoMhb7Bj6k+
                      DHT/vbAS4L1eoX++uOUvvZwDnb6uckO+o51jvkjWTj3C0z8+E2Rdvk1UqT7Y4QW+QY+MPiOHLb6c
                      VcW9J3KnPmRNyz0AeJQ9Dn5sPtVAgT4+hKW+fO+LvcsShz58BvM9RtYmPl69Hb4owQ2+qMxZvZpR
                      Iz7gvns8I/thvgM4XL6obmE9LJr+vaRQ8T0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYyNjI4OHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc2MjYyODhxAWEuECcAAAAAAAAu6om9B5NsvfculT23n7q9YQuVPcBOF72A3SE6lZSc
                      PQAvC7zYasu8oJN3O0/urz395Is9Av1/Pbpnyr20mA+9QNpRO9CLkbsAXu+6au1BPVVyzD222qi9
                      HhdtPQBFITx1x4o9ZvdMPWptJz2Yhcs8DDHWvByg7jwAqQG8sJD0uzoWgL1e3JW9mGrOvNDrWbzS
                      olM9ijIqvXp0Mz0oBsG9gJAzvFJWbT09xmC9ljMQPWhFZ7xg8g27m7nJvZkDqz2gG1q9RVSwPW4Z
                      h71hVZQ9bmQ9PbBgPbxI68K9UA8nvPCQeb1fX7a9bHzFvPGWmj1iaVk9evCAvWCbCrsKMHc9nuY1
                      PSnDrD2j0Ee9020cvfb3Oj3HE4c9GmV8vR9xwb2Rzq89juUuPSOEyL38FuI8iq8IvdgdcLxQGSe9
                      12WQPaAIib26hj09gFZrvUbmWD0nozW9+HC5va07a72AbDy8gSaYPTDMNDxwz3K940WYPZBiXTxm
                      6mU9BXbJvafGWL2i83Y9A8iVPVZnTz18xd48x7O8PTinkb0wVsy9rD7vPFQZsLzq34K9gGEPvcdx
                      QL0u1Uw9QDEcu8ruqL2mG2U9ajRmPczT87wg5n29nYy5vRLqJD1gzvQ75FOHvZaXZD0Fgcw9AxOT
                      vVnCjj3v1pw9A4g9vRPQor1aYQm90US8PXUAkz3z8h+93dHEPYuPtL39u6c9AARWO58prz3BKos9
                      lmKivYDETL2HcJI9UvdLPdoGpL2GJKW93aSavf9Itj02LCg9aJ7kvNbWBz2+QUc94h9HPQDoSb2/
                      +sE9j6jIveLnnb36hB+9QkNtPayy4TyY4Bw82OmevJ2Eir3gRJO9OvpNPZS/u7wOLgM9ANBhuGWc
                      oj224gG9V4O8ve0MM70CmLW9qpGDvZ1awz2rtay9dRyOvbCFFzwIhcY8ML1IPIZvCL3wp2k8gz6v
                      vR04iL1KmQq9avlRva+8vD1vu4o9GCCKvCwUzDwSm1Q9aymyPWuEgD0Wo1o9nbC4PY0wGr2i1529
                      KocQvcRW5Dxa+0A9+bSgPYARrjzAjvs6nY0/vYMETb22XW89SJm5vLBi6jumDwK98BQmvIINTz2j
                      nsy9ylSvvdJfIz26uHA97idJPRLikb17O7a9oGSluxiOt7xHB589IEzTvHesjD2MVZw8ANQ6O4Ay
                      yjtohl+8ivEMvdCDGDzSPzM9XiNzPSxOs7wwYm29UvyrvQAslDvY63M8sEmQO2bJWT2eRSs9wdmH
                      PRE1sD3sc8m8DqgoPcY/LD3czhW9o0GXPQAaK7zjZZk9INjDu5UMnT1v54Q95rpDPdSbxzyBD8Q9
                      ULSnOzM1Ur0XPD29QHntulrvIj2pFZY9VZmuvZ3uyz0mPho9QHoivK7PdT3f37C92jM2vUz10DxM
                      4qm8NEUQveVTp72VEZo98pssPSq1oL1yUrG9sj2SvdEjmj2xHcI9o5m7vVDwpL27k4A91CS4PDG3
                      lz1AXRQ7wPjCPNIZhb2hkMM9Xd8nvWR1Fb2OCTw9F5dLvS1WqT0TRsi9gF3wuupyMT3Dd5096w2Y
                      PUjGvbxaCqu9ns1OPRje+rx9o8w9buuOvegpgDyAqjw6lIqFvNMsy736usm9DpwCPW+fv72g3yy9
                      KoQbPYjKrTxY0Q+8WopWvQTzDb3HQW693lmevVKFnb0Ad3Q6+zKZvYfHTL2oHmA8dIiGvIgpk734
                      eI08kXaKPU6XIT2qdBK9dC68PBherLzynzg9wht+PSZzET3wgX28Uk0uPQWHgT0vurY9YilsPTSM
                      17xkPhW9LzazPYp9aT0Ysvq8kXimPUyPrrwzu6y9L1GSPRBaS7xRSKc9A66vvfC4Vb0jYZE9x/W7
                      PbfZyD0cw+o80PD5u0wG07yaQcG9ddW7PSqZG72wAa07cDJivWCGpbxsdAu90OgsvFrKe70pW6c9
                      6FSUPHZ9Bz3Yjpy8E/yXPYMqGr3Ow2w94mcgPTEGhz17JcY9KFfOvAMHb70QhHm8tLLHvLhLs73Y
                      j4K8zVcovR4DZD2tiTi9wGqgvH95hz2syYI82hGHvV/usD26cjA9sgoaPXLJez0K0iU9NmiPvaoG
                      XD20dek8taSIvb0dkL32IgK9yt4svXQ77TyZIsc9uj/KvTDHy70AO/U7o8iyvShMyjz2jKS9bMeW
                      PDZZiL3KUUk9jMXjPEMlhD3Yv8E8gAxmPCAPhr0F6J690JzWu6CskTunsJU9Uv1jPYrvID2oAbm9
                      EHQXPFqRS73AVlI7rjMQPWpowL3RDsA9SqiivVPAsL32w3E9hPvQPDaWcz096mG9+mjAvauCoL0b
                      Q409YCeVvbE7rj0U74c82IDMveDS2rzKA0s9lI6OPECcSLs1P7k9LB3jvDmLyj1KICs92nxHvavN
                      sb1Axtu8daaWPQJ6j70IWJu9AtNePT+xwL0N96I9zWPAPU1ycL3KOQa9fn94PSBJPr17qKS92vW0
                      vZ/iqz20KfC8+OCqvMwX7jwIu968Cf65Pa87xD1bE8W92PBNvEzYgDxAA0w8ADWIOzbNKD3qnAi9
                      sqIUPZ0Sxz0Rp7k91r1VPVj6jzwAsze8KgAYPXkJhz0DKsU96I4sPG1gNL2wjsY7o1lqvQAqWzwH
                      pKU9AOGpvac4vL1QLo+7amhDvZJtLD0IxZK8kN5evexeCL2w0yc8jpqZvehiVrzNyFm9AL3KPPpe
                      MT2tHYA9rcStvSLaGT30evu8EJ43PPylFb1jrj29SgKfvSPepD3D40W9YqZGPbiekr2chhS9Y2PH
                      PeQ95Tx4Joo8YnEvPQjKu73EPP88aC0TPIBAoDpitUI9Mr5lPSu9ob3oMDO8PJ8VvUBiFrys9OG8
                      cy5uvTBLhLvdcrc9gzQwvfUFlD1S2jM9ZbaSvQDGLzyLkaC9W3u/Pd78ZT2736c9pIsJvRBsmr2k
                      T9g82AEvvEuro70qLXE9wJ1ZvT0NRr2/x8C9646ZvfbxYT3AqhA7aONrvFASN7ygz8Q7bR3EPdQ+
                      kDxRvqA9KVSAPYPEYL3A3Te7JbWzvYAmIrqY0dK8x3hkvTedSr0A5hQ80/6GPdpuXj3QO8y97GnP
                      PFL5nb1dKFC9cPxRvXBKB7yVUb09/xKfPZ1bgT1gK6Q7ZJHnPIx07rwgWI0721uGPdFysj3bkJK9
                      dymvvRgiVzzrs4k9OW3DPYICw72P9Kk9nuJfPUjWv7yjmMo9u66avQCwCLun1Di9oBqfvYfYQ73l
                      1Lo9JkOrvUz4tDzHCMY9iGe0PCBgjbvgeie94JOMvGip2bzZ1KU94GW9O8c7yz2mxYy9zyCRPTo1
                      M72+0oa9cWiPPTnwxj36dSI9OX3IPWW+yD0GSxA9RRihvf5EUD2BAbk9qAKrPLRN5LyG/JW9cyrK
                      vdONy73A6KO9ThhXPXBCCzw4wLI8YNhYvWCe3Lxd2D29eledvVC75jtAF028qDe0va0wTL3B2Kg9
                      9f6uvYzMrDyVJ5290qlxPWkOxT0Me4s8WY6FPVQIg7zL9II9UqPAvUQz6TyALze8pxzJPVJ8NT2A
                      YP+609SCPaz0gLyKO2E9nlmQvYBYB72otXy8YNezvWu6kD2KABs90CcxvaIvHT0qDDw9yd+ePdM5
                      Vb1eHAo9Y7/BvSkFjj0qtEU9pv0UPfpyUD3Aa0U8He5MvRAUXTzM+4S8Q6t8vQCSaDvQdqU7Lb0s
                      vahvmDxJZsc9mH++PFBTnL2upkg9MGOtvTIPRj16i3s92p+RvUBTLDs6H1M9gDsRvL2XZ736GIC9
                      q9SHPajdbbzgRJI7sXHAPQJfHD1ofbi9IJO1vCnCkT20ERW9rv5nPe4JTT1QnXE8jJH6vJgvcjyt
                      Rak9V+KsvZTU+7wipTI9c+dVvX3Pm73qe7u9I1PHvQC8UDpU3YS9QAt0PD4ECD1dvri9lb++PVQy
                      rjw4Uuu8r0C9PY1yfL2gMhg75yU2vWATobugDtw7ckBtPQi4lDyEZQq9dCaHvGPger2ADNA6dXi+
                      PfvPqr1YRCE8IyunvaAJ/7tYX9e8AAFIu8o/Lb1Mc4u9ajVLvTpCSz0a7nw91ktZPSmOqD0pt6s9
                      qCqkvaQ11jxJrqQ9zEzzvADFx7wt3DS9QJQHvG3hpT3Cx6S9gNWcukYvLT3nrb69ALYjPAQk6zx5
                      5KI9pryZvWBLQ7uJ55494GOluyR74TwzO269VbK8Pe1CX73m3jo9I3Q0vQ6rTT37rqk94DF7vd3L
                      xj0Ne5w9IG+kuzSMBr3+4HQ9kxu1vcDQorqNSGm90uK8vcdwuL3wSSg8alQ4vUy5gzw6pzs9wISw
                      usGuhj2UKr+8p59kvaDoPDuIL8i9tN3KvCrZMD0MupQ8NIqzPBdzYL3ggpY89f6qPdbCGj1TTLo9
                      tt0KPR+ryb1QPK69kueZvQ3Yjj0CWXs9LoeEvRp7CL3rtpS9jY+3vYBNlzyKBRa9MCCfu8evcL3p
                      g7U9EFZcvSNoiz2E6+c8YXCUPSOeY72n8p897dSEPTLqtr1ygGc9XoEWPXawdT09ZqI9GJFavBhN
                      RDx+T1s9P8KFPePKdr3SYFU9I+ajvTdoyj0+/Vg9FHqEPHDSjL0ANqW7GEdYPICJY7y9Oqk9nHqD
                      vWy28LwwD5k7iC6IvfVDqj16Tgw9i5yvvT0nkr1YUZo8wChMOxnliT2M7sE8in+fvREdtj0o5Qa8
                      QJUMvVCIpbs1o5a9RH30PAFyzD2TIFK9KyuivVAlQrwyjw4941mrPQAVO7tVgJ893qSCvc9bsb2U
                      pcY8A1K6PRdVrD2g+li952o5vcPkV71Mjrk8uk1sPWy8v7yFV789wJ6wvB0abb2d9rK9MVW2PXKb
                      Mz3YDYu9ueaXPSYOPj2Y2Lu9mkYPvYD9vb1qRoW9130evUCzLrzQNC28Dj2EvY1RZr37Erq91ZTM
                      PUhMjr20YIi8GG7BvABevbqRJL09MyiavW3Dqj0qVsq95GziPAOFJ71akg49SCOMvXVMsL2b0q69
                      DuyavXjPlrxW2Bc90u1yPSZDez3tr7m9QlYGPRg1GjwzhsA9ZVKMvaAUVDspL6s9QnB9PTY3nb0L
                      Ha09ccyqPaBMvTt+IhM9ZHrQPGDO7btlvZe9ciwMPUbpXj3L8Ls9gJzqu1alKD0Sv6e9CSiiPYcs
                      y70kKYy9QsY5PXcoc71CNV49nlSTvQD3TLrIFaK9DeWcPaQT5zw6/5W912m9PTCGhbvg34i7dAui
                      vGh2gb3ix2c9ANziumIeBD1O3CM9jtV7PQetRL3Ssl89MExYPO44Vz3e2UQ9+v9pPQQq8jxWD6O9
                      YImnPFfoRb0RMZ89gCncu2ovcT1lYao9RaXIvdWwzL0Tj8g9NPsIvXNcr72GAwq9vQCyPfyiir0i
                      /Fs9cKxsvLCkTLwALEw5ES+9PdAdDTx+qmw9oBj6vF73IT2LAKC9NnGUvR5zq70bULy9qjBQvXU3
                      sb3tw7q9A20xvWC+Ob0N/429clwNPVtVyD34BqK8uzquPYCuuzqjZHy9GLSuPPBrS73YKtC8elE0
                      vRJoBj0EhYi9tu5hPSbcfT3sJ6K8OIHIPHJ1lL05qaA9Pt6pvVhqIjzT3cQ9oFGSPMPypj0wJya8
                      FXSRPcCSTL2D/VO9wK+yvNjklrzgX+m8wNzUvCh1AbwSNUU9feNAvVT+wryAZpu69MnZvLEbyz0u
                      TDY9KhIBPS9Nnz1xx7w9gBUyPEC6KjynTLq9C/SyPde4N734jsM88/XLPUFazD0bvMc9whNrPT+S
                      jj2sSNY8hoCqvQOcn71Ua508wMzpuim/nz3QpOu7V8eYPVpjGL2wsJ67xwNmvbCBhb0SPZW9rgE3
                      PYC0CjwO5lc9KP+2vL28Ib1qWUM9cm98Pb3Av70MW6w8BdDAvQ8RpD1YAbK8vuIQPV+cgz2UIZ+8
                      qDgNvD2BxL0wPbe9qHcePIxLubygQaW79fS2vXSwir3stfW89+xtvXQN7jz94229jQ8zvb/gnj3w
                      5nK90leVvQUwh70DGoc9ukcnvcmhsj0AKsm6sO7ju7gxrr0R8cs9WK6PPJFivT3AcrK8yqBCPb4u
                      TD1YgYy8duEoPQCyPjwntiC9YjijvSokTj04P4G9+9WKPcDlyr0YMbe8QCP6vIA0qTzN1LA9oGWz
                      PDOxtT0tOJE9qglIPfyw8jzCUms9+gBnvcbyFb1NwJa9TVKIvTsJrj0mtC49o7JFvfY8Lz09zZi9
                      lE+qvGJaHz0pg5M9rCH1vIb1fT0Y4He8oPS7vIHKoT1qqDs9AstMPfRk9DxWU0o9VRDGPePqML0q
                      yh09IpUJPaLVtb2Wagw91xfFvbC14juAa6W76l5gvUCLpjpt95g9WPXsvPoDED22KmE9U2Csvd02
                      q70A/9q8irkQvcMdZ71AaLq9APaeOWDuq73y7JO9908uvXonPL30Tcg8OhcOPc5PUD1SQIO9y4Wt
                      PSDusTuUQPq8/f9RvWoXh71Vyqe9ZnhPPZwT4zx5Nrk9gJ5AOkCFVLyaQam95lc+PRTAizxg/Nu8
                      DPD8PFE5nD3CrIC9KXzEPWBYrTzXXcq9OYuNPSBmqbsVuoS9PTAzvdR0Fr2Rgpw9fl8QPUhC1rwZ
                      Nco9YKD8vIqTVL3tfqm92L1YvIUNpT0BCoQ9t81cvXJWcj1la6u9I3SgPbtsoj3CR2E9qsyUvZrO
                      Wr27gJe9rCzVPPOrS70A8ZW7CwbEPaD4sDzMKfs8cW/DPf4rHT01asO9d/KaPQD99DmADWC9kMjK
                      vdBUGjw049e8dea0vR1nab1CvWc9KJjCPLw1BL2UttA89QWePcxzirxpxsA9BnoKPfu7qz2Xw8u9
                      jAKHPP4ppr0sZ4y8fbdFvY7Kez23kJw9sdqMPUHqqT3QXpi7xeuxvZLIUD3Ptrq91Pu0PGyFgDwA
                      3Gc8uaCiPVaJaj3hVq49rwKiPc7fpL3gbvi80J3hu+DwmjuxeLI9xM8Vvd2Bjz1bLsC99rhsPXAu
                      SDwtXHy92H+BPCmfhD2AhSe9AvcNPUVNxL0Xg8S9sP97vBexer3tP5e9TZ2/ve5DPD3y77e9+yij
                      vS6eSz0L88a9ihUgPfRA+LzUNJ+82Jz0vMaVk70X1Z89gLm3vDCxijtrrLy9O4WjPaAPWr3EwOw8
                      0RDJPee9Wr2rIrk9kI5NvSL0bT2neZU9tj83PW0hxz2yhqu94vx0PegCYzx7v7u9+mQ6PVg4bjwf
                      ncU9tqomPR6gZT2+Z5m9k8Y1vfAOYr0/Nry9gEjHu3Ycbj1gLEy9jJmpvKGhwz2twoI9lyS4vSiM
                      YTyQwbq9fLzZPO6vGT2wKRG9hWe7vQDzdLs0J4e8QOKkvRiu7rzb/qi9OwO9PafaZ72o8tS8qltG
                      vaw9w7wYko88IceoPdeMWr1zBJs96IqNPBV7or2ISaA8OKi/vJrmkb2QTyu8oG1cO/BoNrwNF1G9
                      6MmzPAU/w70gCJs7QpcTPYrvS71P3r49FjJyPdATc7wnTmW9IQWTPaDxAruSUgM98UWiPUQDDL1g
                      HIi7fB3RPIA0zzoX9J89bNykPLEnkD2+fIW9rZmxPTSBpby2m0g9lM8NvQC93Du2z2Y9Ih4QPSOk
                      vb0K7lC9vUKOvRL5tL0xeKw9KAzCvIb4WD3noGC9NuIOParKFb0Ro5E9I8GpvShXxb1dbIK9sA9B
                      PNoDPz1bxL69K3yWPdTbjDwps489blBRPYOLMb2zHJ29GoN6PeaPWT3N0GK9WPMbPF2ErL35Qcw9
                      ML8RvWJeET27oYk9JPzUPPRswzws3rg8bpoKPYyIpDxRIYU9ljyavSt7wD2eMYC96HZBvNJGCT1W
                      sFc980HJPcXDrD1wRVo8cpmCvTVRgb04kZy9IObsvOyZoTxxRJ49pmKhvbe+hD0Tumq92CJNPAlh
                      hj33nri9uvF+vWDHIL2C5Wc9QKocvJDBALyA9MS7QkWZvdNAsz3ohXW8gCfVOlRen7w+eqO9U7ab
                      vciQgb0S3jw92xOoPdN8v72UEQq9MnVsPUFfmT100pq8cRvMPXM5yj1Ax3g7GtpSvbKvXT3Q9TE8
                      gFQHPEppZj3eESs9qk5IPdBf2bujx8S9P5ucPeTO+TyAnwu8ChfJvf/+lD1QDlG9wDckuyR56Dzq
                      pEG9nR+DPYKCdT0ilom9BD8PvYD6ZLwCSJW9/td8PeLRhr0g8ka9kAIuvU1qyz2GSzo9FKjyPEAd
                      H72aty49vhcbPVP8gD2QbR28aDAVvBakCj2MEJq8u82zPTDqe71PtMm9BhRvPUejoT1OZTo9WDPR
                      vOr7rL2I0uu82Nw+vBJJBD2YwiE8c6ZcvWmuiz2aJkK9WHLzvNggCrz7HKM9rpViPbICTz2AGy48
                      893IvRVSi71gGDk7SACRvRnbyT3xMYg9Iux2ParzWr2Pc8M9jQa1vcCdYrxCjX89xejGvcBgozpb
                      Xpe9hdy/PZ9OxL1Ywpq9CBqCvdyK3TyCBgY9jEzTvFQNyryz24M9p/9HvQJKTj041Io87CvsvIpS
                      Kb16RT49zvsaPabhcD0YXQC8NvcXvX0kSb1A7r+9Lnp3PYfhJr1gkHK9bQabvWqLc73nq6U9hfS+
                      vSIFVT3q2Vw9uWLJPb72BT0wSTq9y3/JvdBzHDyKYIm9qG9rvDBw6rsajAK9wbSpPUxsoDzbX7u9
                      8t5EPaCdB72TwE29LHXCPPdnjT0DS7o9n1KuPQLXcz3gIMc8IcHJPUpzhL0q8By9HXJQvXgmprxL
                      Lcu9cnccPXp8Bz1Sj0Y9HddhvUG3jD0yvSU9wSuHPfS7xjy4d/G8ZztAvYK9JD2gq4m9MSSQPUoI
                      xb35BbU98go+PbH8qz00KgS9on4LPTQ6tzx1eqi9qbPGPQyO0rwtCpk9VKqTPCAGur3nIYY9cvJI
                      PTFalj3Mnfi8BqFHPSzXmLxpYII9umZ5vUChvzq6CgY9Yl+DvdqHxr2w7Ck8UIlbvdRYuLwQzHk8
                      XbSQvcy5zzzA6au9QHUOOwgEjbyKQ0g9tJYIvWLnir2b88O9gu8uPcwR2bzMppy8y1zMPSEDpz1C
                      KzI923DGPZFJmD3erVA9toUXPWCkk7xBBcM98FWKvaZnB71un4u9KqWVvcY9jL0uYoi9jktyPaAo
                      4zurzMU9U55avfG+pj1DYo+9CBiZvL5Nmr3KxjY9txXMPQEWwT0Yszq8eHqPPLSvnrzARii9YLSx
                      u+qYtL1fyLE9qphGPW1gqL30Qqu8Q5d9vSZ4Ez1n3MC91P/YvIgjhb1Uyoa8HfqGvYDo8juE/908
                      oOb+O8Ecjj1A0mq9xSOIvUtblb3smI08AJBgPADxELwk5g69QLSmvIOttL1xfqc9N8K6PepVJ73l
                      la49L6OAPRj/CjxYi6G8k0oavYpXOr39XkW9WlCGvQCvWztSibC92O68PBr+q71dPLY9t9mePdM4
                      Qr2AEeY6wjABPQLNQT29Wbu9FdaGvQBFErqw12S801yZvS5zGz1noCC9RKj8PFhFlDxArhG9gj6D
                      vf3TLr3YmE48GE2SvBRKzjypr5A9UQqgPaOKtr3KcSy9Qvk4PbDRcr1o/GC8wXWWPf0uMb1ChVc9
                      SUqnPaS64Tw1mLo9MNN1vajDX7zN78M9gA+2PKAlHzuQ7Ze9FZbMvXSUiTzwnzu9jJrRPHqgbT1+
                      4CY9k8OqvVGJsz2iNp+9EgFkPQBUVTnHqso9Ay5ZvUBLcDuyTFI9oCZJO8A7sbzdMpc9orIRPf74
                      dz0jJrq9aGFevNFctj3W1009D/22vdG7vz0yXkk9koUDPfMEOL0r7LI9EUnGPYD/jTpgOx27YAia
                      vM32or0yOy09gAIFvVDT8rtaRD49y7+YvQCQv71QLka80aGqPYZeKj1vSa09NgQ4PehXfzxzWZM9
                      ZELwPHHjkT1L9oA9wAhAuzDdWrzyRBg9ouwePQaBOj2X/n69gnFYPTeoX702txS9pVqVvRyTib26
                      5qu91/txvaPhqT0i/zM9c4gxvWjkuTzhF8Q9Ohg3vUYCJj0kuO08wxWgPcgf4bxhnYE9bN3zPGFu
                      kj22F049NnMTvZ2mu70ZEas9mvJTvUU/xz35y6U9w2m2PTRg/TzMgZK8jViavSqner0sbuA8hLqJ
                      vZb4GL0x77A9T0moPWP8iD0d/p49Oj5dPRj/QrwpppA92s+3veTDAr1NEsa9hH7ZPFO1iD0SKqW9
                      Amk6PfihwDxNRZE9jELtvI5yXj0AyN+7fVNXvfYQKz3TY3+9PE6HvVuisL2zPrc9YASHPESu7DzA
                      sFY7l9yQPT2xhb3zbMo9IsOwvXe2V73FL509zVycvfRGzLzqslK9xIrOPACL6rmzm0K9FnMqPXIR
                      Gj3LNrC90OvPu0G1xD2gYCW7nOSJvXtTyL3Ywk880p3EvYe0Z71gRdM7FrcQPah/Dbxh6749lhgr
                      PQpHkL3EydE8UOiTvZ04rD19p4W9epQyvbKZTz2tfme9u1G3vfe4Or3nSTK9itozvX0bWr2mxgk9
                      SiQtPbDJXb1i1aG9oGyVvY7UQT2p5r49IM89vZBuGr1+y5q9uKLCvQD3QjuC/ri90hQNPbAXg7s2
                      c6O9UHTVuyyI8DwzkrE9EZ+MPX59kr3tjDy92AaIPIxz0bwI2Yw8ev5qvWL2bj0YJzS8DRhAvXMM
                      VL3SQmA9sNpHvRZybD36XRC92C2XvbOke734XZ+8tCGgPOOBHL2g4aK7wM90vRYGNj2ITps8bUdp
                      vWhwM7zwrnw8eLayvc2asT3OfIa9bnBFPcG9nD1ZTME9ney7vfLZNz0U5868c2A8vWKrDD1YJLe8
                      AOY2PJ5jn732rXM9UioVPQK/qb20rcI84Iu2u6+Lmz06MMO9AK1Iu8JzHj3Es9U8HyiPPeDh4TuP
                      8bC9RPn2PLBgGb1Cy209JhikveizU7zdwEq9yhI1vYDwnLsxr8g9REcCvdTKkzyYObC80L0nPNE4
                      oj1qbUE9IIELvS4tQD1AmMO91qASPdQZpLx42N+8G5/Ivb2Coz09R2e9ksMbPZcBhj1A8Y08r8+G
                      PcCZgDwZ/rs9bDzcvJ6jYz0kdc08t/q5PbAVBzyMx8U8CMCrvOBHgLw6WI29AOgiuLp9i71GP6m9
                      jumfveomab1sCIa90Do5PN7olL3Y8Jw8arM1vVFjuz2o47U8wn2IvaBgRb2uZZi9ugwhvef/uT1O
                      Fl49h+JDvbpCaj3nHKU9wERYvZkyqD1wAX88YBqyPIkTsT3gyLY81GeuvNG6oD2R/4w9n3SlPSAa
                      2bxqYb69Yn0qPU5ibT1ns0m9jOLHPDC3ALwfGIU9J9KDPaInNT2Yf4m8gBq8Oiwrkzy1MYK9QjI+
                      PfjVtb26qDc9ozpDvRLuHj262LS9QpxVPVyY+DywXt27+qc4PXubkL2XI0q96B3CPNghsbwg+569
                      YeGqPUa3oL1555A9HpSevYMElb2ouRO8QH+7usQB0jwtRY09oD7tvBJVs717Ubu9vr6bvaokYr2S
                      qhY9DAXYPESaiL1gCAu7fnyRvUDUer12VRE92Ye6PVkAhz1Ahws8bNHgPBpFUb1994K9Wv4Hvaty
                      pL0AhWO6WAUWPJDxWjwsbLW8HP77PG1cxj1bKbo9F7Q5vRqBn7307I88aGCdPOBzpbuAMTK97dYn
                      veDUpTzgP5S78ieEvcx88jyn3ag9xBbYPEYtdD3kfus8GjFIvXA3ZzzBEqE9RWCfvRoptb2rVrQ9
                      kOJ5vJNCzL2HybM9olcOPZp1D72Qk629fTrMva2+zL2wJKk7f6G+vcm+jD13Qnu9I4q0PZKGYz2e
                      PVw9EMosPMeLOr1NREy9vx6NPXRFnjxzqMe91uY9PeO4Gr3YULE8S5+jvSgBmDyV5sG9cFNvPIBq
                      vTzQ/mU8BT6uPQrWVb17da89AF0bPHSJgTws39y8MJU9PE5PGD2Bnsk9dkWKvaoNbz247d285Avr
                      PN2Cwb3oxJu9HfrDPXqgCT2TIZy91FT7PCgEary0BM48Gn9FPbCMNL1jkl29AKytvEznBL3g8YS8
                      EQPLPcAZaru9iC69yigtPZRiurwCMng96x2pPSI7ob1QDbi7DeRavVURs73zXG+9RvAVvWuorr1I
                      4ZY8Ws1IPRM6sr2hhIk94t0JPWU8pz0Qgi+9YNC+vbDB8DswYQU8OX6UPeDr/bw9cDm9o7ttveKn
                      FD2TwWe9sPSAO8DDF73PcKg9FJ3bvFwNAr0AFdy77apkvXc3RL3/BK49OIGrPJjyM7xYV6O91HLB
                      vNinLDz6Mgo9MczGPdiYVLx7ocg9AiCIvadVKr2Kd1w9Z5t7vapUFr1CvZK9aby7PTKVOz0tWGO9
                      2kpovVtlij2osXk8JvIePSjuurzYacQ8YH4eO1pByb1gruS7DTiePe9eqD0Dfja9jnOnvbp3cb2j
                      u509I8ydvUi5+LyAqt87ngJSPRi8xr2Ahxm8OnqjvVoTbL1UyIm8PJj7PKB9njwg1TW98P/Kveyx
                      CL3t0k29ENG6vZwQ8jzKv1k9QC8OvPX8oL1PA5Y9NPPBPIBSjjtGkhe9IKGQvRgMxrxdG2698glI
                      PT3Irz1fVbO97PqnPKJxKj2sBrS8jqWNvVAvLb0gMZ48NHjzPMAyVTyv2I09mhBjPVoDjL2UjLk8
                      WDN4PNzS4zzUi+283gsPPe87wz1U/sk8RjVAPURIhb1YBVK8gnocPdUSxT34iIO8mJOIvLeSH71C
                      SD89iKyxvZfmkz2X+ze9arAtPdhcADxobSY8eSS7PSY5Iz16PBc9NayfPd3Xhj1Bgqg9hh6QvWtN
                      rT28sM48X3mwvTVIxj3ChMy9AIiZvIBbsb1ARTm7gIWlOr4tKD3gQZ48gjBJPSMWfr2OnUA9pLPy
                      PFjvl7wqjMG957FovYeHdb2yxRw93J4OvaAvzLvQS3K8QNA1uxgnajyCQGM9QeCxPU3LkL2r1rA9
                      cvq8vYVgvD16M1S95MryPFclRr1mD3M9Sg2zvZCjgb02qIm9wJZ+vbqvab2JzbM9iSG6Pat+jD07
                      Sbw9yPravIzzEL1WKm49ViNwPTfakz0AkQG6TACGvcDfsbwEohW9Z9iGPcwuozzYn7y8QG2vvZDp
                      YL34f5W8NpwfPQCnxzwSn2c9g9y4vTMNpb1a8QS9rh8APVmFiT0ghK+9hGzVPH/hvr3GByg96c6W
                      PT0JhL1HH4A9oLEhvXmwpD1w5mC8AOw1vLC15jvoyZy9dldNPboirL30WMO8rmcBPUi7+7xwOre9
                      UO9gvR8BmT0eay09QBwoPFMDHL3oSLy9RznKvVrhbL3l7IG9hG7pPG21xL0NtJE9cD4bvaVWsT1C
                      nFg9APxiOnL6aj0Arr27INHju5IoTz0VpbG9Q2mNPRTAEL0GADg90YSzPViNnDxyKWQ9yrAnPdo2
                      TL3hb4U9Rj2fva6ohr1gr5S7oiaxvZrvgr2B1I89oAuuO/+Kvz3kwN48YMiAu9o8Or0AONW507OZ
                      vXL3Fj2Xpcc9qvKova0WYr3MJ5y8VgRsPez2F71XYos9tbnJvV21hT0ly8Q9gFfYui0mgr04FrW9
                      3Bb0PNjHir2wlQ68gKKnPBvJuj2uAEs9WQbBPVDYp704cZa8XCEIvaCHoDtzhyC9+s+bvRrUA73K
                      my69AOoCueh/fjyetQc9ifuDPTNxML04xLG9wUquPZbEDL3Cz4m9RwU+veiYdrzx/pg9cM1vvAyH
                      5bxnpWS9B3OLPYw0rTzoCqC8/j12PUDrXDzmqV89WEQfvMesuL1sZoY8Uuk5PZejvb2vBbo9nWKj
                      vV7JMz3EO9g8aLGWPDoWHT105eg8owCfveMKnj0yGAs9VkBsPVfCsj0ALPq7411FvUBWXb2Gfjw9
                      DRCMvTl/oD1QEi6902PMPdKOdj3znJ+9wMOovRMJK70038S8bc2kPQt/nD19ZqQ9MdeDPQJDRD3v
                      ubm9ON+WvNo/Vb1uIay94vM2PSawEL0mlko90UqIPWqNA73CBHE926zBvadjub2qUB492Du8vcha
                      87xo61M8IPPZvFIhnL2DNaE9ITy0PecfUr0eb6O9kwvBPXhZwzzcuRe96hIVPR5pKD3AvZO9MtBx
                      PTfbs73Y3gq8WEmxvJia1bykYwq9lZCYPcTI7DzbR5A9l8lBvRjREjx+XlI97ED+vN5Ncj2g93a9
                      5CjqPGDaATvNdja9YMjRO1ffRb3KE2G99PDXvICrwjzAlE28J+GwPQDvKjqZlas9gqBdPWygEb2e
                      Qqq9ECBzvGBIxzuDgqs9YKHjvK1qj73o1l68aA6lvSw6CL3Q1Dq9AJpKPBEwqT29i6k9RcnCPUKp
                      dD0MENC8Vbu+PfDgQzwh74891qAWPZs+nD0GdT89jZQfvTSmib0hFog9wMJPvdfFpz3gubG7qBpU
                      vJfpwb1wLh28oqRFPaDUYr0C/zk9aeCPPUAyXb0IfOe8UME9vBB2GbwAgrQ6trNDPVhQe7zAABk7
                      mZipPRNLqD3JWbo9EVmhPSAvqruwTdQ74hBZPf8ynj3DxZW9jAWkvBPBnL2geN47LcypvXbior07
                      JLI9vTvHveJVp71rto69pVOXvWBi07vjnMS9+kc+vVBjFb0gqZG7/dSmvSGckT1KDcW9MVOVPfQ8
                      Cr0BLLA9/WdlvYkywT0IjPm88PMlvABJtb3weR88Ciwxvb6iIz3IgOC8NGSwPLxyh72AVKI7BXiN
                      PTo5MT1Nc0C9ggU+PTj6zLzAwQ88R2Z0vdhQD7xQKmq9FW2LvVgSPTxlzpI9YFENuxbblb10I768
                      LbO4PQBvUTqWo5m9Tod/PQCNdb2oMPC8KPpKvOBip7svm729kiuHveyZ9jzXFFO9R6tIvQC0MbmO
                      9GE9mn+4vWeUrb0wNMu9SQzBPVoNJj0wWsW925yQvWwX0zy2wH89AhctPTYybD1HWlW9oJMqvUCZ
                      LzsQ2xg8kiyVvYBgZzw1/6M9AKalud25I72NWMg9EsZqPTpqaT2A3as7wAtuu4AirTr67Sm9WAlW
                      vFCN6zv4I7q9ACABvFx48jzUQds84CfGO22PlD3uIgU94HamOxNpsT2kEOA8QKtVO2Dk5buKeR69
                      raiLPUrcor3A7l07Q4JLvQDVVTuyXHw9yuVqPWamh708cQK9Ice0PfdNd71gefC7CdKyPdAYvL3q
                      z4K9QVG5PZiTHTwRc7Y9bnE1Pe/shT2Q2b29mVTLPbCspr1EmxG95nkQPXCpLLzeY249AG+bvYgC
                      uTx+UU891K2RPOrqXL1YeC28UGd6PKxznDyOnVA9gqRCPUcytD1olbK8i8OZPRI6xb067H+9FcPH
                      PYBE9zrtkL+9Qw1VvWP7j70MRBW9gKmuPF5wHj2NeIg9VxLCvd6sHD2PYcm96JuCvK+1uj3ClT49
                      hMfXPOz6jbyU7YW8WVuxPVAwDjyck4C9BVbLPR1Sgj1u0zw9qJuMPPZIGb0i2Gw9m7qsPSg6kbwe
                      LQE94rBVPVCdzLuQwmK9YvMOPQJ8Xz1Lzbg9wIVxPCbxDb0qbjc9qGHGvSvrnr3HNcM9DcjGPdAb
                      Mr0SCay9rYaNPWLuJT1P07u9sJBxvfbtdD3w0Ti8gBrhOw1Vnr0AVUG6KD9dvIAgBTww57I7IDSs
                      vcePxz3AAKO9QBWdvGIZMz3Le7k9g0zIPQVMvr1d78c9yhdnPbAuvjvnVVW91nk+PSdmwD1KLsW9
                      YCj1O3MTnb2wz3Y87MmnvFKsMD3LoKS95anIPYBqlbs7Vpm9sf6lPcrdkb0wRE29pYCqPeAE7Ltn
                      jB+9/W6nvT01Lr1zfL09JYvEPYh2pr2wiHA8lD+2vFhrIDxVMcE9Gr0APUdvu70aqjG9gE7LOwve
                      rT1Ajjy7o7e+PchzhLzPxMs9iY2mPVA5A71sN5G8eOqNvcsqlL2l2529knduPQg+qrxm/gO9GOXK
                      vYeBNr3O/Fg9hjNlPYirob1o7d28qSKvPQyEhDyv/oI94JK0u8C7MzzQkNS7x0F/vZ2zgT1hvbI9
                      qv56vZD4MzyiKh893Y+vvcyPrzwODKi98VuOPTa2YT2hccc9yplWvTQPmzzcZom9YAVXO1hwNbyR
                      1JE9YKpxOzYXgb2njlu9pDoLvU92gD0AzCy99/NtvTJ4dz0IxKc8dxNzvfha/bzNXrM9EoWtvdfq
                      qj00HLy8WAoBPP4DbD3AFze80P3Puz2Dfr2s/hC9HR4vvWYYob3qS429xNj/PCBhwzsAINm4OjYJ
                      vdMoe71IpI29FO7PvCsJgD3WHSA9qjp5PelyvT2gLRg7UKTLu+g327wwKAq9wIdcvE3vvD1GWXI9
                      0MuVvWbpBT0yo8S9AKzmOoMOSr0QxVu8bQRBvenekD2+m0o9vZ50vRSJ3DxojYC9WEyyvdYLcT26
                      IRM9IqFoPSNNNb075YA9i4fAvfv1tT1AI1A8gsi1vS4Kh70I+JA8Z0ylPSbtg73W2ns9UH4bPOKg
                      Bj3jyJa96up+Pesnjz3AaSm7gLY5OgZUeD3LGMs9IEKUPGn/nz0RYsY9rFK0PN8vij3pM8c9ekkt
                      vR61Hz03UWq9VlooPSF9oD1mKV898ps4PR4Glr3+13I9FiJwPRC2DDwtmpQ9Fl2QvWN9mT2797K9
                      eqpEvRqQAr2g+NS8I+tmvYbJdT37hI+93RIkvbeEbL302JC8yBiJvZB4qr1FAYQ9V4K9veJ9Wj2f
                      JKQ9K0mePf56WD0Zj4w9AjY0PS0zw71Qt5U7wBnDPIi2j7xLopm9UskxPQi8mTzsPoq9f+XFPVtq
                      vr0GUzM9lMz3vHW6y73tODy92dSUPaijGjwDYKA9tl2bvSYRKz00qKs84WafPTaQXT1XFcs9MJ1C
                      vZ7DOT2Pv7C9Ci1mPaJiTT1758e9gPgTPBCtfjz9WYG9rFm4vBBOG71eIS89iAmyvYw9ybw9cbG9
                      3WWrPQDIcbxSjSY9guRQPfJqr73Q+CQ8FdapvQwJgLyY7EQ8sjwkPeLCYj06QWg9gBmuu/3Pnj3D
                      6oI9nfXCvTw8Gb3xnco9AEl0OxInyL3qFrq9duhEPdAE4TuISbG9ZlY1PUi4xTxOc1Q9nwjIvRLJ
                      eD31bom9g3ZVvUqfKz3NF7U9kj2wvdj9pL3NKcU9RnVLPdCAsbtyUU09S+yePVgHobwNHRq9eRi7
                      PXTezbztZ549m6iOvXeOSL3qvcK9KRGaPWj2ibzxjsM9H2CrPZBifjxKdFQ9w6iaPcobFL1Xr8y9
                      mUPHPTFLlz0z8rK9oAqNO4JKRT2o2B888PwdveoNXT0Mp848ImyCvbp5Tb1S3g49ZU2nvYY6o72x
                      PMY9GDU1PPoCn70bg609WyilvUyBobwLMa09cheevZEinz25O8s936nMvXAmpr18gfE8KMCoPF8j
                      mD074bM9LFeAvUPNY72TtpI9ikkavbq7r73sTPW84N6ku6Czub2I6oe8sDuIO42qmL10n4e90H+Z
                      uxVPsr1QKzu9fq53PYAG0zqN8sg9OFiCveYZNT0nYkq9QEvivMAQGTzjhbg9InsePaBthbwAgW47
                      xv9GPayBCr1wdXq9f1qAPaq3vr0Arve8teChPedrkj2TFaU9tAmEvKZqjr0OkxA9gEm+PNE7kD04
                      gMA843C6PfowBL3Kw3+98FOZvRhf9rx78ri9iACEvNPoyj0qmqu9IjQDPbMRuz1ahRK9QQq2PQK1
                      ED1NPk69M6XMvd6MEz3igVw9MxlwvQRG5Tz2nWQ9m2TBvVjyCTzgm6g8opYwPQpqQz2tgby9YiwQ
                      PQBxcL24Vd+81uI9Pay2m7wgKJa8+F2wvNVHr7057oc9nsZqPS7pNz1j1V29sGqku9hXSrxhyZE9
                      shGfvWEwnj3VEsK90CkKvbCXYbwA4sg6MHVTvOgIvzwO6Zq9oAH9Owx7B72ARc67xSaYvZouS70T
                      ATm9tDEXvZb+HT3nq5M94O6gvNl1uj0AX2m7+PvBvAPSR73gJCS9shSjvTcGsr3llpu9smbFvWBV
                      oDyROa09kTyDPeVGr73QTdA7AzpkvSx9rDzHSHi9PPLcPIDVSr2YgAo852XDPe0ZKr2AbsK6SH2w
                      vVgcw7zTPU+95gcMPaC+M72zwHm9zNrMvKoEXj1wZ669SgsSPVBGJrxRQoc9tYvDPTVmjL3Ff8g9
                      G/K5PW69KT3Y/ZG8FAvkPOybyTzhDbg9QFOjvZ3fRr1sFuS8SJ+cPPzy6zx7R7K96P5+vHi2tb07
                      +Ky98MJ6vae/wb24aKC8FmECve2Fqb0tVJ89+lctPf0rpL2//MS9RCfxPGCJA7tVXJG9f4+/PTfu
                      pz1SYms9aInJvZhYd7wx6L892vccvdQ3hLxKHQ29oLdyu8jskrxaD3u9dMsDvdIBNz11do49w9ZH
                      vQO6vL22hqO9MeyKPTerSb0yFBs9cOlqvD0Slj0ir0k95HLwPFOtzL3oaZi9kfu8PeBcizy2HzA9
                      VFf5PES1E73RqpY9zDGYvGVtvL3IIZA8gBE2Oq7Taz0Aou87zjw6PQu0tL2oALa8XCn9PKKNUz1U
                      lxa9KH+6vABhsbzQ2tE71OmDvYLKCz36EXm9mEaHPMmXxz2F5LU9TtolPe7VDj0m+X49i92WPT+s
                      tj2oj7q9cNwsveS98Tx1wog94Mn3u7rGIL3QFd+7bBKRPH25vr3NiWi9QHxNOxJjdD16VFk9IRHK
                      PQDcDbp9RJQ9y7+XPVJiDT2jJow9Yz6LPcvJob2U1Nc8LipuPYAD4rztgTK92PRjvDNRQ71AVJe9
                      3MyIvX5VHT2Xx269WxbLvTQi9jx7fMQ9wCQpPOACsL3yFU89cvAsPeP5Tr3oJhs82TGOPYh4jDw9
                      Hnu9NfjIvfhimb2Nxpa9rFXXvHBXcDxiHce9B3xovRqFDD3amTM9Ig1OPVA097tv6Ik9cDTBvf6N
                      Pz3TSXW9qNxaPI0ngT1Q90A82MuavC1mhD0UOvK8sc+YPUBoabsggWi9hHn4PH0pkz2AM4682KBX
                      PM0Lgj0AYF68WnhBPaBcpr1SAYG9LKzZPLvUnr1wnGI8MHCbO3A/KL3dUqo9cH65vUaKfj3segu9
                      beq1vaTeFb1wQjg82/ygPZ+JkD3Npzi9CkksvaeBGr3A8lG7AAyLOwD8aTuntpA9DEiJPJirkL2k
                      /tk8gKR7vImimD0/YMQ9aB60vbWDyz1no0C9owOcvf04nr3zQsA9wI1GvVQX5rziEAs9ybDIPcaS
                      Fb1bsZ09APY7vIWRjL3KT7C9uK+OvW9buj0itC892uu7vY+OuL1RzrQ9bVqHvcjMlr3NHry9H+rI
                      PRCzCr2oLxM81EqEvHecHL2GaXs9ykS8vbrITD1yKFY9wGJqu3CMT7xgKmE7QC7dvAWTmj0f78G9
                      bpKDvTqwkr2TKTS9nEwEvcPPyj0+hGk9G6e9PRV0rT3sv448hTrBvaZJFL3ltKS9ksXHveBTpLv6
                      48O9LS1MvfIjTD3Qj6i9rWWnvQwBy7x3Qiq9JdezPUEMxj1XdMC9BQSyvZ5dDD3GUwU9RaeEvbpy
                      O730q7O83C8IvQoFOD2AiI66MHZNvVovFT16R00905ZDveDPuDuwbaK97fIgvTs1x70t9Hi9dik9
                      Pfqkf72gAqy7wlIqPaAB3LybHL29dgMqPVAHyr1Rdpk9M++pPYBN1bvrOI29rpsqPVhYRzyAq1w8
                      PfGkvQp7N70b2re9ScjJPfEUzD2mX0g9SB3IvNDf/jtyKCQ90fKdPVt0yL0EVg697GSFvHBEJDxp
                      5oc9hqIOPW0DKb32tiU92zOTvY19Or07MYE9Wu5nvSJip72MV7y8CIWqvHf6sL16K209TVSQvdjW
                      dzwU/Mc8nfCNPXA5pr0KpIW9rtqIvczl/TzMvYC8WsIDPRC3Rb1Ccx09Y/davXrjhL0zQEi90hXH
                      vRBzoL1U/Kk88GOPvWLGBD29OoC9aLATPOTk/Tzn+8S9co8oPbJNKD0iVxE98zwsveqyor3wNnO9
                      ebuqPbrDdD1ncLe9Fr59PeZubD1a+Cs9Ida9PV71UD1VDaK9cyKtvYcsxb1rcLk9zraOvRBtYL08
                      6tA8G3fJvbf4kT2AOa08wJWSvZi4PLygG867bc+tvQBdTLyMP4I8M+4jvcq1Vb1ATGi7izCCPQiO
                      3rwAA6W9qFfUvEwj1Tx98im9LCeyPCW5sD3CRT09fpCWvdXDpj1W56C9etEGvfwc1Dxaaqu9cKBf
                      vA0OYr09KCa9GPofvE55CD3STMi92o9xvYDF27u9YTa9iM+NvWDnv71mbl89Mqs1PStAsj0om3C8
                      WUmbPdMcdL3M3Iq9B3DFPWGyqD16aZe9ANwVvN08ur1eA3E9QtETPW+ohj3Afnm74/mjvYm0qj1K
                      7JC9hxKLPScMJ73baZy9IUWnPbWcw700cIe9PzO+PbCyuDv/rbY9aGkTPIAhyDwoZ/28+XafPaCz
                      3TugH0C77sdwPWWKlL2oWdW8tucNPV00l70HlFK9aKJGvPIXJj32GBG9E3e9vVkDtD3W5CY9RrUm
                      Pc3kij3YsHM8YHpgvYR15jxJVKY95mNJPSFRgT3i8Xs9m6mPPTHwjz2uK4K9gs8zPTXlmL0cF/o8
                      TfBZvQCA47sKwW69cjcfPZSIt7xHn6A9UQ+mPRUjgz3Vpam9hEDtPKkAkT3TjkS9HsdLPaZpJz2h
                      ysU9r/y1va0dpj07j7E9Ki5yPRDubrxXqMQ9iZmVPaC8fL2NT509AEgHvAqvBr3ADzm8DBqBvLC2
                      Nrx65k29LNjHPIfFyj3b4ri9SeO1PYW+iD3Sf8u9Y5RPvfxjBb0a+CC9STOGPWK0bD3Y22y8SHiU
                      vIlkgj1oBZW83QmhPdsNwb3GNpS9CjxoPaAEwbtSC249AKrrvBSjhby7MsA9KL6gvFi0gTxX/rq9
                      dk94PV5EaD0w1a47gGg9vDL0UT0ILbI8suoDPVjVnb32GH89MiFpPZBvL7zAtUC850uhPdYFDb0x
                      W5I9EF1avUhVtr24Ooy9ZZvBPdC5bjyKbHE9q7WsPVDVG7zQzFg8oNqjPFCcyr3M6vI8DJOIvWgE
                      tjyy5nk9OI7cvLAoILyQmna8xfuGPQ1xrb20bpk87rs5PTPLKL1b/og9IiQMPSpFcT3UAwm9NGzD
                      PFo4Nz2T1rW9Ge23PcAAgb19Rsu9oTHEPduslD2Qf2m8GWCsPYTm7Dzs3tU8gHhLvLltxT1Gmy89
                      tFaAvDFPyz0AsQg7mGltvEBDk73j/5I9TjtUPZpNYb3Qkbs7bbSXvRthsb1iAYy9QEmhPOLpmL2C
                      tSY9xRy9vSy5+byQ90M8qFZAPPCjF7yiP1E9jXKsvcBRUbv7G449QEotvE5QGz3C92E9zGmRvIjo
                      orwGxnw9cR6TPbeNu73HTx29esYZvTsmor3by5C94GaOu9WEoj0AQFA8wbiwPXhOlL0oRO+8/f+p
                      PRFVwD2KsrS9KMySvCCDubw/YKE9Qn6svcOohT2rsse9VvegvfX+r731rsU9wbuNPbQsx7yqoHs9
                      xXK2vaIgXD04oJQ8gKBEPD2Gd70ydZ69mOUOPIL9Jj2KU4K97fdyvfSL/jzYvcS9yOzKvBhvBLy9
                      wCC9ExY1vVCT77uYRmy8DAWcPIDYWzyAYIG8D3qBPSPmwL3EwOg86LcpvG5gdj3Kqm29aAjKvOB8
                      y7yUivc8clQnPQDnfryiroq9yVCTPQg4ljz3eyK9aDv/vM6IXD3QM1m8mB9vvPrbnb3Ukp88vpGD
                      vRI4Fj2cQtU82JpevH2qXb1TiXm9TH2BvCC4g715s5w94TqNPQsuhj30lpm80FcYvOiJK7xoef28
                      k4HAveCIqb2gUGq9uFSrPPauEr2WUQy9YJTJO5eMQr1AB7A66mQ0vb7gMD1wOEW8IlAFPZXWnj3O
                      EGc901gavSfjxL0EBM48UkVIPaOML71b7ai9GPL2vHGamz3DpV69FpcCvcptLr2uWiU9ADqYOaoJ
                      Rb0bN6O92ikQvZQmpbyy9Cc9LETRvMA9vb0oshi8qiySvfSoD71QJay70EaMvQh3pb3zUFO9QJRR
                      vQl7gT0qyQK9o+k2vWb7h72AZQU6AE/3O7odD71wllO8QMzCvAZ5Yj10RpC8zaehvYzh+TxgbGC9
                      N3XMvR5qGj2qAIG9yFPHvNxT6DykWhK9RbXGPQxg1zyRxpw9IFjFvchny7xmZaW9j5rLPUp6Rr1h
                      a7o9jFOQvDo2OL2idA49cmzKvelhkj0NFD+9J10bveEFmj2IPbS8EkhPPYX9rD0Hyzi9p+KhPRIH
                      Gz1yDB09po4zPYw3jDxqZG69ClATPTn7kj1vvbA9Df2kvaPJU71HBj690EZ2PGRu6Txsda48XEwE
                      vSBDML30ytG8Q+pfvWrbIr0zVaw9hz+tvR5OAz3A8xu86+G4PQGOtT1sqZc84aiDPSJkkL0sgts8
                      QO8LPJAaWL0uXJ69KU27PQEMyz14ja48mLqdvNLBKj2iTyo9cMMaPP1PPb39npW9Am4ZPQCyC7uk
                      s9U8eXytPYIpgr0+eJi9oNFIuzGeyT2dlcC90O90vJPGWL3SwC49GFiTvJpfbb2UfsS83iEnPR5L
                      pb0+Ilk9wAsgvFSxr7yYOau96v+YvXMqxr100Ic8TUPIvUxrF70AIr06C/i4Pfh0trwhP6c9gJtL
                      vfFBqj3WB3s9yPexPDk5hj0AkA06IRyFPZJRYD2AwXq9Kyi6vaKYbD0dZUy9dVvJPVapLj3F36Q9
                      sFW8OxHzkT1T5649wrhAPeBaQL2E1vM8KMAlPEXzmj2g5u872JCKvCiJdTzKl0E9gM+6uj44hL2w
                      /rm7zVqqvVJVfT2CkKK9cFZ7PKIDmb2Nv6Q99KvtPCAD9LtVT7W93JDiPD7/Zj30Tf48FJfmPKg4
                      uL2oOtW8R6+lPWYiEz3SwkA9A05svdDOCL254Mg9GJ8OPDo5q71+LFE9sAVRvCCU0Ts5gJQ94pOJ
                      vVOFu72AA5k85sdiPbizkLxPjao97vtDPbNMkj2bI8Q9jKGpPN9Gpz1od/y8EEojvRuQoj2AkHm8
                      QAWruuoiw73oBJk8YpiGvXJ+jb1AQcS9ZsgPPQDLyrkANGG5MO0rPFRii7zIFL+8ts1rPVrePz2A
                      78Q8rHrTPMeQHr1C7Rs9MLJ7PLqFPL3+eBA9UJ1sPAwhpLyASp26KCkVPKCw7bxhQK496oAovbB+
                      9jtGnWs9UKPEO1Rpo7xa6Te9qGLDvAKwh70vAIY9d/NmvR1cJ72UyZA8C1movTqShL0gDJq8CiiF
                      vfosXj1pHZ898u0wPX0uqL0nQri9xAAPvXDmTDz6vlO9+OvnvHDdeLxs8oc8TRAivSj97bwa3wG9
                      OoJPvRQdsrzALhQ8AUS5PbCWObwnK7I9krEWPfTT77xpNoE9aMBqvDkyvj32DJu9ANjaOzHZpz2y
                      zVY9zgZwPYZbq73N73S9jB3svL6idD1A+p69vUCPveyP67xhwqY9gB1NuszohTypupM9mjgFvZQg
                      j7znb5I99hVZPdJSGD0A9Fg8MLlWvK1hMb0wXkG8+m2TvRLybD1vP8G92jRxPfq0Mb1gQ4Y7J/Mz
                      vSgHeLy1d7O9SSqcPVoTBL37r789QFx9vANJor2CUj89WI+rvYC6Sr3/zqM90O0YveU5tT3DYJe9
                      4OL5O+htnTyiRno9MPc3vJrJgr0AxKe7Zg8WvXCmPTwAgvU60q4pPXpmFb2xH4s9aAYdPFhZMTx5
                      54c9bBIXvdAwK71HDUK94AqguxQnhDw8RhS9EMNqPN0st73Rgro9QIWlvTdaRr0SGns9/GjUPGBM
                      Cr2RSKc9zqkbPajgv72A85E88iR6PXxIF739iyO9YNN6vV0mr72ZZpM9MB8KPOKRCz3q3US9cvkB
                      PfQUhL2AgWE81N+zPMBCgbr94Ru9pVW7vVKgED2wwkE8YrgdPUCPfDvgKKM8MIGJvRwzAb0d/489
                      lcCkPZzMjL2U6s48j2rBva23Pr0YIyW8zUuLPfkpiz0SbXc9j1qXPXRiqDz5nos9ImNrPQDEQbzY
                      tik84HCivFN3ML168Xw9eZCYPSCGsr0vi7S99HKJvEb5Ej1k0dY89EeKvRhjQzxdM589Ch8OPdDF
                      z7tDYFC9A7xavcVnob2saci8wd2bPSiMJTxYfxC8EC4VvUwGzbwANSg6gu8WPYsGtb2D2mC9jvdR
                      PSIOHD3oUhA8sEITvF1Fa72B/ZI98Kd0vUgJ1rx5ooA9AGgRvbB2iLu2I2o9ICO8u+pjOz3ayC89
                      R+CrPTRywzyfZIM9kTyMPRK0Bz3sSum8GkkFveCi+buNyCm9/QSzPTCpyTu9uI09JhyEvYCDZbyt
                      74w9WL+6PBkvgj2aRVM9ZYyKvaDPo7wY2AE8+OmyvXW5u73zCTa9Mz8fvQAsQrvpLLY9M6qOPThY
                      nzzAKns7SeyuPdorIj0A7ZE8ID0ivV4PjL2A1zC8rGzevJsoyT0VoMS9UmEzPVC/Ur3ogo08zFee
                      PFUAhL1ylEY9vg6ZvVAz+LtYWa29oZ2PPSkrqj1AR4q9E/i2vUDPxr2EAYa9ApQiPZv3wb0bhoA9
                      1wawPeu9qT3TZVG9U5WwvZqQdj0q3Bc9AkadvRu9qD26CKm9qO9DPJUVkD1gH4m7g6KQveKCLT0A
                      1Dy5Q66QvQO7vL0ZXa89eNyZvG2Iab3XV0C9jGb1PFDlGjzY+E888oRSPWrru72AoH+9LeulPcs1
                      pD1gzP+7MnQYPTDjVrzd8B29aL3LvTC5wr3z1au9H4+kPfqTFT14+ao8Mwm1vRDbKTwgQta84Obq
                      O2VihL16h7+9cOUevNLJYT0UoAK9bE/kvEKtiL2wlfM7va0avf+7qT3CTCA9Bl5RPcB4gbz0sLS8
                      I8qPvbQexTwgmsC7YQiLPQBDX7tW5Qk9uF+LPDCQXzz7asq9ZVyYvToSr72ZBaY9poMKvfKvrb2Q
                      mE29kc2gPYBTyjqAqYq9MmhoPWHDyj1KvFo9+tJ+PcXspz2mPzs9weiBPf3/Hr1YIJo8KGm1PGzn
                      2rw0Mfc8/26aPS5qRz34rYq9ZzV8vYK4tr3f07Q97ffCPZ1cIr2AEie9WBipvADrCDv0+cY8kLwL
                      vNmOjj2nv0G9aMCKvbrqFz3Da5G9sHFDPHTqqTz6I4S9UBKru8dzzD3C3UM9tMbQvIURwb2RDKo9
                      zY6NPe5uSj1w91K8iT6DPVHIsz21ism9UdGMPc22t72AAk6941iePaanfT3CkX09Y3HLPR+ThD26
                      sxs9JYS6vZbbEz2Vxaa9AN+PO6uevr2gjES7p65IvQDZgTxjupg9ySqHPULQdj1NgHW9h1OSPVvh
                      mr0WvmQ9pXidParHIr3oVGQ8+P2qveC45buwvNK7oSmhPeUpoz2iBFQ9WFBXPJHYpD0AwIK8eslE
                      vQ7xBT32x4C9g7u/Pb0kPL251aY9+ZHDPfIfXz1aTRY9yGW1vKaWVz3YQ2g85YWpPYMzyr0AsvS5
                      kzm7vQDwMbrO6IG9c+ZVvYACi7owT1O8OoQ0vfppGT3d1bQ9cIJ7vWLSOz1ydJy9h6+/vWApkzuA
                      6KE7yzadvWO1mz1nJkG9oOusO7oYLL1v+8C9Ey++PbQii71Mvou9QSuZPU3jMr2Jh8U9wNuDvZ2W
                      iT3g+dE752+yPQDndzsQbjQ80PdtvOjHwTxyWjo9qu9PPej7SDzXhzi9yEeUPMRn6jzgj8M8AlGU
                      vc/XyL1sB4I8AuVuPR3UZL15GZ89Yt4GPSCr7rxQ2wi9iP+SvMD3ijxggl07Yj6JvSwRAL1q9Tm9
                      hwVFvTOpxj30rZo8ABkQO8oYi72YArS9/UW7PR2rKb3yISs9cHUJvJDPYL0X15w9BMn+PJm2jz1s
                      f5C8+++dPVBuITwTL6G9YLDJvbQ99rziPnw9TeaivagxczzA9sw6c6ObPVQF5zwmmgW97IOBvWC/
                      3rvHd7E9Fg9RPXk1mz2UBoy9sDIpPLcOSL0KySO9ov80PbKmMj3l95q9GDl4vHqQk72wA9+71bC1
                      vX5Sbz0+8aW93uliPcN5xT1CqrG96NujvNTg6bzG2Ho9MD7Nu5esub1DTny92hkWPY7EUT0U1PM8
                      UMHcu4BUzjowW7U7ewWzPQz+/7wwi/g7+jeuvfkoyD3PQrE9LHq9vIoKqr1gDUS9NJP8PDS47Tza
                      aJK9CiYBvdMclj2toiK9p0S7PT1mvj2QLBW8rjyIvegno70LkKc9COfuvFWEtL2CMH49knpiPZRM
                      9ryeV0w9apYpvfEukj1Wh2U9zAfYPOAvobyYniW8oNHqvHL1Uj23b4c9Nj5cPfJmWz1An2I8NFXo
                      vO4sez1wfwa81+jFvdhCkb1g9E27DjZkPc0LO71tW5g9aMi6PAAimDkRYpQ9Z4muPUzGjzyQb1K8
                      YowXPV0Sjz00ueW8iHaLva3etz2gLOG8DUScvSBjqzxQxQe9qZqUPRkmgD0+sH49lT6tPaAThrsr
                      Gr89km1NPXIQTT3uLoC9NFefvEsmhD0Kiqy9B9fLvSMttz2tuES9qGgyPIM0iz20tsc8jwmmPZ87
                      lT0iARQ9GcS8PXG6gD2tgo09QCfDuqGrvj34ipW8E25gvSCJwDyvOMG9nxaVPZeWYL2Dg6w9JzI7
                      vUA62bwdCIu9xA7oPEBI9Lz42rk8p+HJPZcGrz3kG/g8r1GyPaAgsTu0w7C8ct0bPVCDvb3WsHE9
                      a7GovdaVSD0m1xK9Z5qRPUeWjD0y6z09OhNsvWCQ1Lw01eE8qD0CvJN0lj1yti09ZokSPaMEkb3S
                      MpW9rJT8PCq7Fj09bEW9MweVPZIjMz3gNt28mNQsvIo5QL2ZIbw9BfydvZDwA7ytJKI9Gqh4PbJB
                      fj0C9gs9QPqavcwlvTwAQNK4+osevVFupj1ROIk9SDHDPBjbrLwa4ZO9gEhEvGiuRjzwXz48bDug
                      PCGdpT31OrI9cBJePLOnwz29BJS9IRyBPUkLkT0kh/w8F9PBvfFavz2g6/k7mcewPaJ3Ij3YJfW8
                      YnQpPYmEvz0r+bS98pkfPYDaQrp+xXs9DCjrPCB9wjs99ii9kH48vNCC3buHnxm9Z1SNPZr+wL0a
                      ejC9XVywvTV/mb35lqg9PVSQPed6qT3BUqQ9yX3FPVT3ybx4pIe8nSU9vTyHjL2aH2U99M8FvSZ/
                      RT2etqK9eF2ovFsQmT26XQK9TZaivXdYjT1Ug/Q819JJvWKmaT3bBZY9qCGHvAEWqT1zfKW9ArLH
                      vbBYGLydZJq9ogI/PREgsz2RdcE9amU6PcDSvDpqXBe97pF6PYMcxT1MbKG8p27BPbZQi73QcsY7
                      NAPwvLAMObxAZqA8N7xMvczE1zwDSJG9Qk0oPfeQlj19x5u9Stq6vZSDDL0aygg9/oUgPduppz10
                      nY68AO3/vEAEcLzZvoY9Xd1ivTpyFj1YpzW8XKMQvQCrCr1yHLK9rK28vGHyhD1hHqI9COCxPK6N
                      pL2sdLI8ttugvRrueT11R8M949SavcikrrxA4u28dvcJPaEjyj1sqak8gBXEu6Xcwz0jX5u9dxnM
                      vSDD87uqco29jBTYvFA/kTuxdqQ9/Zu+vdgFMLwxw8U94CqJvSrCGT0wizS9w+xzvWBDQrsABNQ7
                      4P00vVgjhLygULW9YJJxvQWUmr2B6rc9w+iPPYIcBj3I8am9NMyHvHcgwD3ndWS9usGrvaoolr0w
                      PMe9s3lgvVpvF70Ha4Q933qnPWLBCD3qKy69e56yvZD+tL0ykSU90YavPVgSvzywGfU7oNNTveJn
                      YT0KqAW9egdWvQCR9jsyGZK9YjdRPezttTzEE+M8Et8IPbE2vD0oFsG8gOikvSlYxT3pKsA9ag9P
                      veY9Bj2zAWO9MNI/vNoWAL3A6EY82XTEPa8esL2Sr6q92M/QvIChT73pE4Q9lwZCvSIJaz0ecpO9
                      CFaKPAByXLzuTVg9QKqFvI0XgL2+eBo9IpVaPea5GT1aXHS9V88pvXrGcr3X3LI9euaQvas3qb1k
                      2OQ8sj1ePccoN70gYYe8mc6CPaLYEj3g2JY8ngd0PTlEhD1p6aI9AnJtPaAYzbw87PY8kE58vUOw
                      jr05XLw9xQ+4PcCMLrtBuIQ9UtGcvYDPiTyg6nu7MMYhvRgIYTx5Aog9Rm5QPQC4zrxAJ7K6Lkx7
                      PbSg/jxgEhE7YIzRu6KTsL0dnnO9O0uUvYDV4brgF5q9qx2GPbAIwLtiM469GhO8vbByr7uSalM9
                      N7+9vRJfUT07q4Q9i4uNva33xb0MAZA8oJCCO8ahcj3g9Le86N6YvAb9Ab2UTfK87A+OvEikizwM
                      J/E8QgEDPQDAaLk6Bb+9u+aYvTexH70oNQs8MGMgPPNkvr3zE129OkeuvRBeVjwgGKy8SuwbvazX
                      vryMhaa8x1QavfdPsj1YmYM83WicPdW1tT1CqBo94L7kuyMXzL1PU6A9iZavPcaISz2CXIi9YCN/
                      vcid2LxQxv27A5mpvb1/kb0Ahji8eB2OPOGkxT1kmNg8ogZhPYQ59jxRj8I9EF0UvAAUqb12tAO9
                      900cvainO7zHLFW9ucmEPbkvzD0CFxc9V40dvRZmLj0kngS9WAYevN54Jj2q8RK9I9N2vWT90zwA
                      vEa8rt4nPUAxCzyw0HY82ZvFPcdLYb1YqFQ8AEyvu5LoiL38IAi9cvhqPRKBdD0KcBg9BgkAPbJi
                      Sz0AYGQ7sylavQCIfbqVHMw9O4rHParMHr3K4qu9+RWaPbE5uD0LVbe9zLLmvCihqb2K/QE96GaN
                      vBLEPD1oDBK8kyxPvcqoEL0wcO07KCeBvUvzrr1yfFI9YJETveV6pL037xm9XZtYvdqtMT0vw8C9
                      QbquPXqdQb0AkLu577W2PSBq37vs6uy8k76NPRPKjD1Al708Ii1fPdWapD2tH0m9mDOsvUACaDtA
                      6U68AM6Du0DdnTwonps8GspLvbDduL30oMY8OUC7PaDNnjv6nKu9c4azvdfgsz0QTIC9EvJ6PQFj
                      tz0705E9klXLvaf6yz22mC09YDQAu0o0Nj2XBmS9DZK+PRqOqb06/B+9Dk5EPUwQoDzq2Ey9MEqs
                      vezWzrykhtU8MSa8PVogSr2je609C9+avUt1oz1IBb28nZ2WPejGQzy3cm69cBkgvV26sj1H4Ee9
                      WD1PvIB6wDrsb+O8nOX+PMvmsr2AwwM8fAPwPJfiw71l4aC9ckVWPRlUgz2sigK98IZYvHsYiT15
                      qJE9rQ14vbKRKj2+tC09B5qQPZTXhbwa2be9XculvVDrqbtDDp+9SigAPUQ97TxS6Ek94OmDvZhw
                      CzzYTlM8tuWHvW0ve733ipE9TgwgPWcxYb1wGAe8VvoCPUT2zDwo38q8QFvxOtaNKj16UXy9ELoJ
                      vZKMcD2PucU96E16PHJGTT3Z4rU9sIkGvaHuuD2MzoK8uvdMvWgqsDzJo509tlcLvS4op707nKy9
                      Zul1PVqSB72O4J+9sIAoPLbcET04l7y9APB+OM6cLD0Cgg09OgR/vcZVDr0Lw6Y9QLkEO/cgyL10
                      85O8xmQRvaWPhb0lIqG9dLb2vBAhQb3yqzk98Bx1PN7gDj1CMn490R2kPdjOe7xjTbA9Oik6PQDg
                      47rW2Qk9Wa2ePSC4dr2s6oG8mDyuvCAxojx+zp29cH5yvI0lWb1o9yE8TK0KvU9HkT3Mho+8zLve
                      vADlb7wI+tK8OuZnvUkloz3wBaO98Om0vaiBxrx+d1Y9rTyCPepss70Fd5S9iQGTPVjwrL3Qqay7
                      pFfjPIY1kb3fjrS9DAnjvDfrpT3oC2u838O8vQ3Xwb0dJEK93fkvvTT7CL0jY7C99EbovB0fLL1P
                      x8K9NR3JvUx6wbzPYaE95XqYvXZyAL2tzoQ9oDuLO2vbsT3XwHa9rNOoPJRdubxXz7q9VB2Dvcp6
                      a70A/2c6bPmRPFY+lr13kTG9AFlqu6BhG7sjvXS9/rgWPdqpKb2HoKU9XjI9PZoRtL2AIea7Nzth
                      vYBhGzxknPw8houEveP5G7002qc8TkU7PbnygT3+RYO9YAaoO/cyYL3iQ0I9XTm/PQA9vTsmWBK9
                      QgTFvWJiUD2SnTA9MukJPYqcu712iay9JyiEPaLryL2R9bs92OypvdYKdz1YgDU8Wrx6vWCgm7uo
                      3Fy8T+a+PYNyG73Ck049EkKevVB6O73Kqni9ECeFvSyZhLz7lKq9yzycPbRbijx9grq9UGkGvOld
                      xD3iDAw9WERzPJhIqDy61yI9oGWAvU1AiL0sTsc8OlqTvebrib1S2ko9s065Pcu2wL3wWDm9hNAE
                      vfh0k7zi5xk9jSl6vbDUhDsJKrM9ot5ePUJLej2F9q49EvwWPY0rW72LtKA9ljcGvXL1Mj3ACiw7
                      jT68vZ1jlr0+CEU9dOezPInilD3iRiI9rLOJPCKzRj2C2lg91rtgPSgGhDyCmDM9kEttPHrgGD0O
                      6nQ9xEjzPOVgpT0pv6U9aIY/PElPiD3qdUm9IW+4PYp7A73OrRw9sNzDvaHEhT2AwNk64ppAPZpP
                      Cr1c7wq9mau0PVj9iDzT5nS9gO/zu7QFr7xySD09mL5EPDhIhTxniC+9AIE1vIxmiDxCHpy9zJWV
                      PE5zKT0k5uU8X72fPaiEoL16tzw9zXJOvXqLWT018a29sl0KPYrIlr39eb29kcayPd/Nsj1Naqm9
                      IIPIvTUdrD0Aftq7gw/HPQifizwU3PM806yuPf1JlL2Cdwk9cLYmvUC6X7voE2e8aNi8PD8VvL3Q
                      Hu27t4pEvVzpzzwVFpS9zx2ePZCvTr1wdnY8iJ7GvFCe6jv0EAe91He/vKaXSD3Urv88/cIdvTZ6
                      qL15W5M9AGaUOmwRq7wQjR686EhQPFpoIj30lvM8WjkiveAIvzv0IPQ8CYGOPTA9gzsJMMQ9VYCS
                      vbh/xLx8Kuc8mziPvUgcqLwUW5C87aiIvTpnNr0i5y09cyezvZDaKDw1p5a9OmmWvRu1jr031iq9
                      inJ1PcEZoj1wGw08E/VBvXzM5zx2rRe9gM7rukiCpDy14Io9oMXvO68Isz2PD8y92AZNvAcaPr1w
                      +0i8NU6ZvTX+pz0r7qU9WA7lvKNXsL3B75k9fggAPfzdhr3bVbe9CX24PeCKTb1g31U7t/CnPdW3
                      yr3uoZe9R65yvUTNE71ohl+8MHBOvCq0HL1Dr4k9IgI4PdgAKTzTi3G9snK/vc1lW71+lw49oPXH
                      O7AQZbzgPTm94Fi/O/Sj/DytKmq94HfPOweJX71Gvqq9IvN8PVAYezzy4Es9MJTZu9HoyT2yzUY9
                      Ar5BPdhASjxX57S9Sp4rvfrDfr09D6i9YFMFuwDUkjg0TIC9R2EsvaK/cz20dKQ8h9dqvTCTH7yi
                      mSo9tzZOvQ4ceD0NlGS97Bb3vJN4I71Iuqg8f7SIPcmAsD3XmHO9oy2cPaB/i7wgIJO7AABBO+ip
                      27ySXW09eTOOPXpYU73ATCi7O6q6vYBrwbxK5169qIRavKUBqr13Uq29B2aUPXAwzL0Z8cU93e5j
                      vXpCZj3TrIY9KAsSPPSf6DwNLUi9VJTfPADnar2NWia91JzDvJBSSbxVBpA9qA8cPNdmHr2TLZy9
                      IOfjO+g2mzw+MTM9NcezvbiXlzxZ44c9KqolvTJsgr0QhTq8ymAXPd0dy70KSjQ9grtYPZRPzDxA
                      K0m7AdqgPew1gDyAer69EEJjPErYHj2pzso98w2gvRuQtj2B6cY9oRbMPRBuXLxmBZa9ELxZPO/w
                      pz2mnlk9vZ4lvYGkyz3lWoS9mJiXvRfUoD2UkZ68uHXtvDDWO70AZz08gPoDvd16w72gRsy7CNeO
                      vNo9BT1Q8iu9BtIAPYAkpbt1y4+9YqmlvY0WtT36DQC9ugJYvZmvnz2U/MC8wpSKvUBnFjyAWxS9
                      gK0oPD2dQb33m8C9B7hivYCW3TuQHBS8mSrCPWIefT0gSKu80d7GPZKPYj1gcZ+9YGGoO+vSlD1C
                      x1492m2TvbBoxb1DE7G9cIoNvMN1ab1CoTo9ICOkO8rlZr2Ik708IxZ7vdZdB73G7D49rGuCPHA+
                      YLzAPn07dzFHveBDZL0IJqc8GPIqPDBZHb0AGH88gpxlPUZZFL0q1kM9D1GaPahFAbyEu9M8mjNW
                      PZhjcLygNb47DFbAvOCNlL0prIo9kNBcvQ4mMT2wHng8ML0LvHJ2bT14vaE87I24vPBoIrxUwfA8
                      TEybPCWlkb3ploE9LRWsPRJ5ET04xZ+88QKJPYN5oL3STQA9k0fMPYDH3Ts3WVW9gIumvcJomb0d
                      xm29YHUAu0D0X73yuxc97qFOPe5weT2mIAy94m8HPfK8jL3gpK+7mzOpPajOpjyY+3m8Nu6fvYxa
                      h7wAsUQ7WAxiPMVXw70y+RU9mp98PSljrT3w/gk8SGSAPE2JY73S5Wk92pl0vRq1eb0sGJ08a++g
                      PdjNqjw0Qv68QGCuPDD2fL0WyE09IxM7vU83jD3IL6i9X9SjPUEfoT1qJoK9t3QqvXyi0TwAPTm6
                      ota9vTYXfj0YHdC88KhXvPcxzD0AMTi91uRDPQAYYboAGyA8sDTeO2KcfD0BJ6U9gOqru61oXL2Y
                      tFk85g0APUCh0bqO01w9I3fGPeLPpb1UIOk8feMqve+AxT1LZo29kLt5vL6rIz1Fdpq9V+1jvVhm
                      tjw95Gm9C5uCPa9Ryr3S4FY9ALuYu6wB5bwQZiE8g9dsvRVDsz3Yik08nfaNPbSFurwUibw8jjmL
                      vWCjjzyVO8G9rG/mvPVxtT03lFe9AE/KO3o7Cz26oYe98LmYvbs6nr3qIxM9DaIivTsAlr3oH9+8
                      12pPvdOLjD3TgF69MpFSPfn2gD3kKIe94aKKPZ0MTr0ie8e9wI48vBBWsr0qRkw9bZmMPVi8ujzw
                      RjS9IMLkvPY/Rz1mETc9w7ZXvdnjmD0jdcq9YyW0PaqSs71197i9dnM2PTfqxj1np7m9sua2vTKB
                      Fz3aTH89KVutPWE6gj0osYQ80ApGPFfkiT2JncU9IGugvDK3eD2s5O08CayyPVhV9LxgnV69ZF8F
                      vWjajLwyGbK9zpk7PcAQqL3AZnK7IEmNu36UdT3iFjk9cnVqPROxuz2SxKu9ezm8vbV8l71SFSg9
                      SR6+PeuInr1yXFw9rZJ/vWYIFT0G+Au9sLZCvIYoj70CmXU9uvsjvQBRP7tn0Eq9aFqTvJTEtDwu
                      3qW9SEumvDKQWz1yIh09QEofu4AJWDyIWvW82vArPaMKs71WNmU9W1GZPUPokr0TToA9hihKPYB+
                      TTp+KnA9gM0vvKMGYb1Ayky7gE6MOgeKyj3s44G8UqslPeDukjvxBsE9kr+RvQAfGjzTGqK943Zb
                      vcXFtL1pysM9qOXAvbeCZb0KVkC9GJpZPDSJ4bwSEng93FkGvSiVMDzgjfk7Bzk8vQ1JiT0H1rs9
                      s0F0vaBPfDtyZSc92EH9vKPAqD3gy9G7zBKivLgOpLwNtcg9ce2SPW4rnL3jQYE9reTKvcwoEL3Q
                      8Y47AEXMvOATvzvQTji8sAyavbixpjwAKR48oPwKvXKBfT1dAX29hsicvWg+i70djpy9oEufvObC
                      o73Hkbo9M6JBvRGzmD0+SXg9nnsvPb+cvD0Kj3A9ANqsPEOqmz1RMa89kuZtPevyxL0IFrW8nhIK
                      PYsVjj0IpoA87v4bPSf2ur0l7oQ9qpwxPTBGTjynvqI9RL2HvWCczzuAQ/Q692MevUBesb1g3mC7
                      Vj5aPUiYj7zK/Qi9gEllvQuasL1NDnS9c/eLPQBkVjsA2/o7HSV5vbg0wbx5FqU9EEiQvWv5rr1t
                      P2m9YBS4vQ3ymr26YcO9UDoqPJgfXbyyLbm9I5OOvQ9Rmz1mQkY9BgdAPa0VJ70Oz18984aVveMg
                      SL1N1JE94jOEvfZgVz1AL7m8cqeqveh2HbwX0cq9UX+uPYr5Nj3ai7a9AJM1PPdrnz0AbpE8LiKQ
                      vamixT2CrLS9M3GPPaByfbsCOVE9gW2KPVjJor1Ujsm8FGChvD39hb3p2a49+vWGvTdFuD1DAJY9
                      F2lTvdLGl72pNao9HmouPfYGHD3AaKK9IFCNu+A5v73yimg9SlJgPfDjkL3QthY8zsJMPZtXpr20
                      XIU8ioSavTofLb2AewS9Qm6dvSjejjxHdFy9ACyCO/QNg7w7tMY90IHpO11Pyz1oTry97fIqvcLp
                      i72qASi9YkBBPRz33zz0R5a895RzvRmJhj1q/Gu9jES1PGLsWj3c8oO90Oe7vcjopzzF1oi9AwfA
                      PRjYDrx0ppG85fWHPbo6Yz1Ca109PsFAPUwF6bw691c9EsaavUBaJTxA22e8qcvFPV5bBz0gS/E7
                      7kKnvaVUsL0nlyO9gLJWvAQN5DyBf6Y9QOmkOhjYSjw+20w9CvWNvTX3qL1kaf88gDEbPEaYFD0d
                      8Em9mOnHvbBydbx387y9kBZpvRZ/VD0GkEU9YgYCPQDdNToNU1K9MPzfuxgwmL1CdnQ94OiCu42C
                      eb1Q3BI8gLCzPOuzwD2gBaK8yw26PfN+er1YC3+8AHA4ukB+OjvH0i690HRqvWC1AL3hU8I9D2S2
                      vZeDZb1tyYA9sDiEvdBeCbzWd1A9inwcvZDkvb0gH529iuJkPUFetT2A7dS6mcSwPVdTOr2QGgi8
                      yJ29vOlCvz3IbsS83YpOvTy/8Dz2B1M9YEuCPIhVm7wAiYk847LLvWF5pD2Ssi49XCEKvVaWZT3j
                      76M9QKiDPK74JD26MbG9MkPGvSp7c72HUCi92BwpvM6iTD0TKpY9xeKPPTA4MTy6iBG9rTlTvdT4
                      mTyXArI9ySCUPUyQyjwK3wc9N/LIPZ2/W70UKIY80vIpPT0DLb1DELU9UqI0PbJfOj1PUro96lwY
                      vQC4Gzy65yq9/iarveyOjjzoEee8bHnnPFqUF72oIaG9Q9CoPVWghD2NTLa9JVyrvUHynj1wulm8
                      uo0mPdiKEzzrPb29OAvWvFuImT1cCv48nd24PU/HrT3b/ck9GixgvY1+k70UgfO8iCj6vFRdx7xd
                      u7E98o44PWClAL1NCSe9hixCPRQarzws3O88vUcdvXPAYb2dXD+9QcvBPUcDar0/WIo9RCgBvQK7
                      Cz2W8AY9bPO1vMnawT0yPgo9TjJxPZLEED3opSe8dgIKvXxf9TzSXgA9CyqnPcDyeTtGNGA9bnB0
                      PapjPr1RgZc9ymBevaLOmL0wREa8zUh9vTfGnD0tLcI9dpIrPfgX+rxszfS8ZpBhPdsnkb2iWqe9
                      BXDIvSibE7ySfiI9aFDmvIMnPL0LcqG9lP/LPM7CSD1Jtsk9KAQrvKXxxT1lv6K9qUKgPTHSwz1o
                      Ng28IBB9vQDbGbwQhxM8Th2EvQDzrDmczYa9lnkJvRUDlr0NL2G9wqZ8Pag/n71y/iY9jL79PACR
                      6bsSAm89cG5HvbPDtr195oU9g9V/vYNkb71Uope8knKBvai2HrzAzDG8Ia66PcADnLx6lme9ilIz
                      vdwb1jxwSlu8ul8dPWs+lD1kkfI8YeyJPTS/hjygKOy7+kaFvdxMzzwe+GY9Qu8YPRqgVL3sbfQ8
                      ZXWJPYDezTopc7w92DZ9PNRHyjxVWq29daS1PXGetD3sso08Go0JvRHcyj1AORG9wlBQPTJkm72o
                      rLc8LayPvaWalb192UO9sL9SvW48PD1gB8o8CoVbPcDam7zGTgi9gL3Mve5gSj3s04C8gCqvOlNM
                      qD2UVZY8YLSbO0C6Wr2gnd67SsAivTC8DDypj5s9ZaqyvWxC3TyKTzA9YsU+PaCplzwyqG49BBjR
                      PBNcNb2KMlW9MLxKPPKBJD0d8YY9fvJoPdBfajwP4aI9cKF2vO0Cmb1jwUG9WHbpvIB6vzs04Yu9
                      yu0OPbwGAL2H2pA94FuRO+O4iz1AyD29GH05PMv/lD2q3AQ9J3YyvYDImrx9/J49F0fBvTD02DtS
                      Fmg9QGMEO2mlmT0N1bc9CODCvUNXHr1QeHy9QCtxPBSC1zz6pbC9vXe/PUxf17zmxyg93MsJvbbI
                      Kj1yBF49R1CwPbLOID0vX7u9sJRyvKOawj3tXCW9eKayvL3NdL3MxtA8klcDPTDRlTtOSUc9Bvt+
                      Pd4AYj2bcMa9t79IvfQ7qzyng6M91IqsvBCtnL0kh+Y8/DqAvUDaL7v0rO+8wuocPfAsTL2WUUU9
                      ynRSPUQx8TxS7j49h6ymPQnNlj3yNlQ9NR2rvUlirD01o4899U2BPTiM9rwpcak9OuNZPeszvj0Q
                      5nU8W8qdPXBzPjw+Gj49njI/PReTbL3uMFo9ZwaMPR+tub0I6qy9QHOHvWjzJbxeh2s9RSS+PYd5
                      VL1BFKo9mH1ovNjXhDwioic9AgEyPdjfsrxyK5O9GIGvvfTNzjzBscw9/+eFPSNSpz2BH5M98e2t
                      PXdjlz0XQoo9CtEOvT6APz2IWuO8EM4KPKGBxz3AOXE7EE6FvUUhpb1UpZI8H8+bPQCLHzs0gOa8
                      sA7yuzl6gT01VYS9uSOYPfhsu71TaKW9Nwe8vR61Uz3Kd5q9ILOPPKi/uTwczgu9dNi7vAdfYL24
                      DKy8CZimPWd4xr08TBm9h7M7vQqbtr3DX0e92GBXvOArxbuHjMm9oLalPACUJL2UgL28gIGcPGtO
                      y71wzy88l8dXvZSsEr3QLqW9hymEPS1zkr3wh2y9KGogvMBVrzyMvoE8zB3UPPkXtz0SDbi9qBYr
                      PHcrR70+YBE9sAyeOwzOwTx4mr+9YCj6vJZIID0A8w+8IMHcvC2Hh70yWik94I3wO2h3m7wYtvW8
                      9MjAvPrRVj1yfAk9w8aePdI+Rj2ehho9SDG7vAJDgL0AzCy63s58PSPxkz2g4i+9MLFgPG1Qi71g
                      SHu9XgsrPS0XQb1pjKY94p1uPXYHfj0o7GA8gJlIvZkmtz0hScc9sIiuu5h2lr0omIw8YM5SO6Wr
                      sz0ttsI9sG5cvQBhDzv6hiC9pgycvdRRmjy4aL282P0ePMCFZLudxby9TTqGPb7tBj0DFWy98mMR
                      PdqCSD1Bwa89yowWvZQS0TzIfoy8mAShvdKbIz2CMlQ9yHjJvTotbL1gg0+7kBsCvQDp7zvrs7k9
                      8zLJPb3ajD3Rras9Coh+vfD5Yr0A9ES6+MmPvRQIgTzoIkk8OAH6vJB+WTyyCV89wtV3PRTDw7x+
                      fWQ9UvAKPb6vQz3uiF09ugROvbJzsb3W1WA9AoZGPSFckD05Qsc9gJCEvJOabb0JFJc9M4YlvXVt
                      w73wcjW8oB7pvEPPHr3WVjk96Me+PJiLx71ZYak9gIqYvXGCuD0xIrY9UqdKPRgvyL2s0PS8AViw
                      PcF8jj310729GNUhvHPqsr38dgK99rygvVRJx7yPvsc98OdJvAACeDuzdSm9rR+nPdgLd7zSLCY9
                      ewjAPTlSwz1AMCu8EoVEPWnRsD09q4u92t+evYQkBb3AQHq8BeDBPTAes70pMIg9MvNhPQBdiDuC
                      lU09+5OpvU3YXr2hTsQ9JsWWvUC+NrtH4GO92uhUPYvJxb3qyGO9AJNPu5h1frxyZCk9sKX4u4DJ
                      SbyAET085t0GvcZNCr3szv681oFpPdRRzDwejRg9QTmxPd6mJz2it0Q9sLTbO9GRwj3gLLW7/dJD
                      vSLQtb0GmS09kz4svUiZtbxHZT29t4fCPWMJj702Zzg9PkUEPaAM8bugHP07sPGEvTJsCT1/FIc9
                      wLl1PNRW9zwBNsI9YwalPUZGHT2MLc680jrLve/PnT2/fJo9V/G+PcCXuzwY2Tm8MM2GvR70UD20
                      qqI8kvCjvS1xbb1ts8K9gFO8uyXNvb2W5Ek9ufbGPTrPMD1+OIG9LGjzvIo4Xb3g3M07GuMavShz
                      2ryy5jw9YfXEPfpLRb16EsG9YLBvvXsDuL0+iAw9u4iPPSKXlL1Ko5S92IaTPJ2wtz09uF69EAUz
                      vVooIT1Klhe9qj0NPcDKd7w2a2g9HZKyPYm6kz1zBpy9xlIXPTJpsr2IcoO9IIO6u5Fxuj0xLMs9
                      GNDAPAA2h7pYXnW8gMM0vVKpcj1Q4bI7teGVPWBpTTuwRBk8T822PXfqgD1Pva6900R3vTB4ozu1
                      66S9eO3FPK0atT1o8n88wystvaC2sTsCypS9ELIrve3Hn72I69+8IOyiPCBChrzKcp29wuh4PQ5u
                      CT1VRos9W7e4vZ+1nj1sBPI8GR2WPYrSZz1A1ww7g5VMvaD4FL0ewSU9bObkPHMdf73SLD094HPm
                      vBtFqr0CIyg9NsuOvePvH72FzIY9S5KyPRcTfb1WAjc9IsBYPfDBZLyz1LU9fqAWPfLbxr3l0os9
                      EglcPbDhArz1y469C3aavQBsCrvdpLw9coaivddtlz3gGvu70aq9PSiQLjwZmaA96OpiPJCTWDx0
                      POm89nx4PWtvxz2iXlo9GJOzvKwuozxyBbO9buMTPUn6hj1iMzo9cCQXPNe/tr0/B7G9CucoPUyh
                      ybxhiaA9YBecvUgAjLzXrD29mp/MvRCvbb10crO8oy5BvRUktj1sD52800KiPcZLqr3g6r48gM29
                      O8DwDjtoc8q8jJDDPBbIBb2Mkeq8QL1xvW8DrT2E/e88wJdCvVBmv72VKIo9oNFXuxKvAT3o4aG9
                      84N/vW4jAT1rTZg9/pZvPeYuWD3Ycxs8qwC8vRADTTx2RIi9QV+OPWCAy7v6acS9wP8GO9ArPb3n
                      o7C9uFikvABUNbm7m5O9HkUWPZH6yT2Y03S8b1K6vYD0tLv6Fh69XkUIPVCpI71AnU68/UVPvVod
                      JD2Q0gE8I0jJvX3kM71Ldpy906mhPeM7nL3opl481DrmvM//jz3g2487aFgMvCLsVD3utWI9SZWR
                      PXCQub0MUKI8DluNvaSgi72gEXa9vsIkPaAB9jvCzgA9Puc1PdeVnD0QWHs8SgkjvaNbeL17uLU9
                      etC4vYPqYL2CcTA9QGkBOw4miL3c4N08QF4ZO4Vknz0csPc8Gi12PeIjOz1cxeU8bVO2PdIqPz3Q
                      Kzm8mU+PPdXJnD06VVU90KlvvJ9Vnj3svai8iO3jvFs4lL0jp4o9FQalveqlND3Yfcw8sJxHPKNZ
                      n70afUA9WNEsvFD2ub3QXGU8ZOIGvRTU0DwMdOQ8LJukvM0Ohr3tEMQ9MrYvPcxc0bzM15S8AEKj
                      uWgC5rySxlU9Mk45PaArUjtTKCG9urQIvaDliL3d28i9sS6XPVT89bzYsKg8RQ6FPUcZij16gzk9
                      ANxhuvQk5bxVE8e9AOsIOiNfyL2+LTw94xyivTJxNT2Cbb+9xX+kvU7Zl73hEsA9jp0SPVhvrbxb
                      h589IzI5vSBB67te1qO9MHxLPEgejjy0a6S8g224PbaxkL1U6PO8SuzHvaiAMrxQa028NXS4Pflz
                      jD2Ak746OF7APMCzhL3LzYo9B7orvSL/dT2nkUC9YH1kvaxjjDyMno68fUEfvSfvsj2gMqq99gJw
                      PbUJuj2NOze938qhPbCo7bsdvbI9Nea0PYCDnzyyVxE9isJvPXr9Yb2nEly9wlmLvfBkeb1HkLk9
                      lOKDvJG5qj1KPSW9sY+QPWTXDb0qQx29AqpNPcE6jj0jQjG9uq0yPUIiIj05Jas9Skw9Pdp5nr2z
                      EUu9pYekPQeBTL0rRLS9j7mpPUgX97yKxAe90GBNvBKJub2oFGg84L6yO0ZHjb0KrV89Q06ePVca
                      mz2lZKc9UiKyvSZbYz3Avns8sAY+PDOztz0AQDO9AGmevQgFgrw+T4O96cC8Pfh8ujwDXrK9RzFF
                      vYAhhLuCOLO9R44tvaYFqL2z+ly9mM41PCtjyT2ZW8Y9IAKFva4fq70Q3Am9AmMzPRa/Lz2iH1E9
                      4F44vQTG9zwcSBC9uozLvQAwIToyEWk9KpNHveR5Eb1eape9IutQPefuQL0x+8I9SZinPVJ8pr1l
                      oY+9UeTAPc5zaj08u+g8Y5RVvQEptT3g/Y48hAGIvbaJUj2NM169AiR0PTA6/LtSaU09VtZbPbWL
                      v71QnSG8FudWPWICMT1jKZQ9QRG2PQ40lL1wz1k8QmSOvc3JvT0AMx26XuaJva2Xhr3heKQ9E4OP
                      PWAWz7yJnp09qKJiPEpRZL1G2Ao9QYeBPejPVbytRCa96PuLvGfpPb33Zq+9WqEIPd36ir3jHk29
                      QEAlvZNWyT1q4B09RXmAvQBS37p6BE29WspNvc63CD3WQUI9iyWFPTaEXj29/IG9W+OSPbFGrD2q
                      drK9FnVPPQCTCrzDfzi9HS2cPdxqFL36uW29AscLPQJocz21l6U94vYtPaDc7zsw6Fu86LKCvKDg
                      ujxAJ529s1i+vdiW07xACx69YqoAPZiVYDxCF669kM89vVjOfDwwib690kxNPVEwmj2TEJU9MD87
                      vTyX/jxYaPu8eUiYPcsTmL3ARH48DTrEPa2Ccr2/Tre9C+aOvVVElL0W72o9ihkSPYAy27ozeBy9
                      Sq20vQJIGD3Q4Lk7P0vKvSEQiz3msZi9F71yvfRDBL16kwI9oAxcvXTlCL2okBo8MkI+PXmUxD2A
                      XcS6d2ubPQ6bQz2dMpy9G1nHvWkQoD1i1gs9B4CJPRFPyD0wabe7fq4HPfGblD2Nmoc9rKy8vKN9
                      nz0wXyA82pA9PX97gD0qrSW9rCCuvGmUuD3yRgw9sPCqvQvTx70gvDu9bQobvVRqqDygO6M7oqNW
                      PUAqLr0tfkq9go8xPZ0inj2RlKM9/XJkvVP6Q72538Y9iN6TPGjMG7xwtJ29CsmevcgKgzzS5IK9
                      XrJSPRnduT0AwyE8GK8nPOzd3zze1gQ9DSawvW8qtb04Ksm8HQxfvRfSwL0TMUO9V++qPbXzhT34
                      /+a8rDutPKB/jzuiTA096V+XPRZrB71QdYk7pX6APSRn7DwV57w9CRaBPfJDND1Q6Sq9qNeGvVD3
                      /buYgaC8d7qgPRecwL2wGNY7wO98vTv2qb28dhS9as4SPejBwjzYsMS8gO79OiD5yr1wOkC8Dh1b
                      PSnNqT1sL8A847o5vQDz2zkUlfy8iDqzPModZr3O2RQ9GGC3vIjsx7x9P2m9RkRSPUDch7z4Ra68
                      Q2VfvVTairxQu3i9TDbfvLg75rwpB4k9NdCzvVcdHb1AF8S8BTiOvRtRiz2gNcA8p6OTPfKSBj1K
                      UKG9AA1LPBNKLr3slMU8lYjGPeOjgD3nXTC92Ee8PDTihL1CQsm9k7qZPeCsPL0gL8S8fq13Pf0V
                      Or2gtae9wMJUPECxuzzPJLQ92ZXIPSrHXD220yU96DBGvJM+s70PArC9lm1RPVAZG7zAluy8GChp
                      PEyCn7zpdMI9YQ+uPYAElLoqI8y9gNjXvGEpvz0A1Wg7ZRi8Pa+lyz1D0sO9Yd2nPb3KgD14k+a8
                      QFZBuxDeP7zFrsO907XKPeD+NL3GJX89mIWZPMyGqbydo3S9v9+UPXeAXb11dqC9QF68PF1YKL3a
                      r3M9FR+HPaoAIz0KzCS9VFebPKKxpb0Yqru9ICWnvGeZHL3Y/mU89IOUPFLHKT23sSO9tTinvdjw
                      JLzAvLG62NWiPLyV+jwQHwi9aPcqvPn6sz2qbwk9MiUnPTgtpbworqy9aJLJPCj7g72o8ww8h3Ob
                      PUGJwj0LIKO9Yv7CvSDeibwY6Cm8WpMvvbJWcD13YYw9YquxvfBLD71MS7c8cq6qvVKTyL0IoZm8
                      pzQxvbIeCD1ZAMM9BP3ZPBBqFr0KklS9MizJvbMvTb1AN5u9uIGIvOizr71mwTs9GM2GvanCnz0P
                      obY9lhdoPQB5dTo5g6I9rKSnvCh49rwUaLO8UP5RvL1rPL3IQZW9QG9iu+Nbr72IBZ29x5mvvZOb
                      w72HE3W9sB+5vbAMwr35j8A9YocYPcOHKb2VDr893kQlPaCVazupI5U9PRXGPR2ohb1gz5y9k/4f
                      vSdDpj3A0HY7Xi9gPb1DdL0/ya+935KvPfQ/3Tyx34g9KH6UPDurv730zqI8WFdmvECsKbseWp+9
                      otokPZwu6Dygvse8aBfEvMictTyI4p48xeCuPWKLcD07FrC9cZamPfA9Cr3GGEY9AHS9uoCjZb1o
                      Jpc8warJPdgR27zhhME9UE0pvITdzzyA4MO6rKzAPKzFCL0tw5a9ILKhu1gIHjxNBJ49SqhNPaKi
                      x71iYg097vsAPdAGGjxowlQ8TbmsvXiv87wixIm9R6V7vQkDzD2IspE8Qt4vPejWCzxO8xY9Bol/
                      PaUZoD0c9w69v8DAvTnYtT03I489lJ2ZPKDDZLsw5rO99B69vI7uUj396ne9AS+mPTJxGT3wAJm9
                      FOSKvKgXkzzBNKQ9g3eyPUKYKz12SiY9ql9GPdd4zD1u/nk963qgPT2AUb3wHl29IWiAPRD2gr20
                      4gC9sK1avDSM6LxQHOW70oMcPXBCGby9MrC9ONGyvRpTSb0gzqS9QSyDPV1+pj0mwQC9bVWuPbD5
                      IryNMGi9GNmUveehSL1Jscw9lPK5PB0QY71Se3o94g9vPYaiWD2gQgq9iF+HPETt7TwgJII8Okhq
                      PZmBzD0ts369fWS4vXoHbD0k//o8tML5vKBrFr2FKJQ9gCBNPChRrLw41rE8Ad63Pfpebb1dmZU9
                      4wKqvXrGUj0wsj+8GVaJPYqiTj3Z/oc9+BeAPABKtr309a28SW+nPVTPmLzM/qo8i/CvPU3AXb1M
                      1eu8qNo+PIAbCL0TIV29AE18vJpAwb3FHaO9cgk8PTM2or2v5J89jLu3vOLIBz0d8oC9LkeWveNs
                      Mb2VpI29upBqPYrOEb2UbwW9OQfJPQPgwr0ArIe7dbXCPVfMrr0Do169F0ckvUxNiTxpd8M989ez
                      PZofMr0hb589666WPefmLL1YbYs8jciRPYCF5DpkFf08w2WTPS+dkT0W4n09JyJMvZ4rBT0AQjU8
                      UBCdvY0UkT2Gv3k92LtSvBfvNb0ChRc9HtJuPSWZyr22fig9YDRou2hACzy1T7+92CsmPBT0kTzs
                      OM+87PamvNjAQbz1bJ29OFuoPI38cL0SnUc9ExPHPdqXOj1seg69C3CUvXBYJbzqfIy9TGP7vLf2
                      dr2LXIM94GCdvLt3zD1Abqu8wDzWutB0nb2CVUU9ZPoAvaDAMjuEdfs8oCYBvWi1h70AwiC89spx
                      PVGQhD1Cq349qfGfPcatfj31ubG997+YPf3Dab28vNc8w61dvWTlzzzOkQk9gBIWPBODlT00Ru48
                      yDH5vMGXxD2KbIy9YJDYO0rLDz0AFCa5faFKvTD247vRj7o9n8XEPVCygb3S/kE9KqGXvdkfpj2W
                      KTk9WF2mvQF5gT3pOKE9heatPVQn6jxg2sK9CilLPSWAwz19yJY9sEvHvWjzvb16bW89ryHFvcns
                      lT13KDS90RHIPbH7qD1HFES99k6DvQBYq7sBO5s9II2RvZjRk7wkjtg8l2osvUk4sj1YsMe956pv
                      vYh+oL2dN4E9qe2YPX3nyj0dpYA9YBg3u7yYBL0Mj9e8NMyKvAO6gD1WUy89DZWFvQAOVrsYRCs8
                      JXiXvcdxQb2aZ3+97JrgPKpiCb0tS6O9riNLPeFPuD1gVxa7+VmsPVgEXLwAaeu7bIj7PA4rgr04
                      See8gIP6OrrPHD09Bou9QGdUu6EXwD0QQrW9ZsRKPSgskLy2fjY9OyqsPWInsL1+Rpy90SKMPeIn
                      Yz0QmTi9Hb57vWXMjL1J+709bGaRPABmUbwQnna8LL/kvIlQnT0wd6M7/hpjPd3urb0kstY8oKrU
                      u7IGEz3rvJu9DgCOvRgENLwoG1C8HZt8vQ7GDj3JGp49WgU9vVcBJ73gN+i7jWuDvSgXuDyeoQk9
                      k6VovRZ+Fr0gbTa9IhJUPQw0zTy0l7M8XtsQPRHEyT3qbzE9I85kvUB/SzzK1w+9qpU6PUnOmT0o
                      34G8EnIoPRIhXz3yLTA91EYEvafRjD0oAa68FsViPXCARDzpbog9sIR5PFyihL3iFrO9XthwPVCI
                      tTsAFqO67uEjPVPyML09woy91VmTvaJzSD1Tf4g97HKjPNepgj2+LVw98Kp0vNYDND33DGu9gKiV
                      vJaoaD0wXUM8xoamvcS65TzQZSs8IlukvQ7MFD2TJja9AOVcvFIPIz06WnS9ijVfveBxnzwf+rY9
                      4i4CPTRE6Lz67xG9UJkfvQB9ibm17489gA1Zuk+4mz04o6G9rVa8PcNFtz2b0bU9WDSGvICD1zrA
                      PxS8zTCEPWjMaLw+ey09M+G8vXkzlz0j6Yg9aD3FvLayYz3Lr5+9ABcCPB39Tr1SP1E992U2vYI0
                      pL3QOzu8tsEgPfmsiT3sWA+9YIDEvTmNlj2alWG9sEZ9velBuD0gBVe90c+TPZqmfT17VZI9QA0l
                      PFBemjsAtsW77DWiPCQv6TxzBxu9lS6ePY/byr3tdIW9wPK7OiLjMD0gfHO9mAPZvOd+iT2XoLC9
                      eTyGPVv7j72aMcS9ldWuPejSj70iR1k9GrB+vWuLxD20Bva8xhGBvSsiw71NbrK9OazHPVCDrDur
                      6bm9DC7gvBITCz0uyae9LJ+7vADmOrn21XM9tIj8PFC7t73DViO9Mw2qvbEjwT0g+ro8svsTPeJD
                      ET2gRDK7e2vIvY3Uf72ASQu9ANoTOdPxU73AuF48bWKBvYcetL0dg689ILClvNDfXrxn6Ey9YGnF
                      vKVlrL32gig9jUF+vc3IgL0gSKy7gF47vaBDYTvgDyu9YsVfPUGHxT0MeoK8TBaVPEDevb0Y1TA8
                      tT7Ave4YXT3K01g9KrRFvVRPFL2v94U932KkPXCkN72wAJE7eJfuvEAlV7udApI9jPiBvPjrhL3q
                      E1O9RgQ6PZRLzLxDf3W9owCZvW0DwT3zsE69AL8LuwDsjTyAivI69okNvYC4f7yQggA8euY/PYB1
                      /zvtZ3S94FXCu4rhML1I/Z29kohBPSoDvr0FRY49+0KJPXNXsL1yeMG9YtCLvYFNoz3wrVa9Lock
                      PcHJqT2IY9281uYIPUpFcT3Y5vG8No9JPc1clz3Pq6g9kHI4vFriUb1+GWo9kMAAPHBDfL2dAro9
                      gMViPAhmsTy0kuC8IKyGvMozDb1orKY81WaEvQz/0TzGbA29Ztx/PSBDiL1zaLc9ly+qPUypF72Y
                      usQ85X7DPQCuxTlak2k909EnvVifaDzwhVG9JROSPbkbjj10js88AJ9xOhOuP71+qlY9QNEsvMKV
                      eD2Ix868Re+QPQDJRr1C/mY9YDuYvGmxxz2y0mU9UUKrPSqQRT1yq3k9D3q9PU2luT3wLiY807y3
                      PQJUh71gOA67jcqmveiBsTwidkg9DRhYvcBg/jrwrRA8wDCmPCx/Ab1FCsK9/sZoPZwL4zyaQRo9
                      APDzO3GCnD3K7aS9sORtPLtWub24c7a9zvZjPXn5nD28qhC9AM94vZVDq72wQUC8EBSkvUcnJ71s
                      M+Q8atNVvcQF0TwA/Da8T7W0vdh9jrwAnBu9gN1RPBfIKb0/0rC9XixkPa4wRT14Q6K9Cn9KPYCK
                      9TutXoG9KJGYvbYvbj1RUYg913eQPXOgKr3AFYq8UztZvZw06jxyOkA92n9MvUtNuL38+Ps8Ic7L
                      PcB2wTyoCj28msdNvTfBTL1oBYm9aB6uvFUNhL2Yz3u8gLmEvb9FuT0csdk8ACifuyzoEL2i3Z+9
                      9KeqvAArXLrL4ok9Vh9lPQIDET294me9l9tnvYt6pb1J+Zo9fgcnPYr3Vr1qIEm9qrUHvcBuUjts
                      zYa9JjJVPSHPhz1TpZs9gDVRuh0uf70e1G89aqQvvXrcKL2Q83Q8aHN1PGexXb0oFcW9X0atvUCn
                      yLzNjiW9suMhPYu1mD04naS8ApchPa8crz2Aoc68jcxRvfNKw70Dfaq9+ze6PfKHdT2Pp6Q9HVGK
                      PQhWyb2XO8U9kBgSvUCGWb09eCW9Bai4PTdEM73A9E07t+FXvcCYYDxNbSK9IlgPPTAKVjybzYI9
                      gCZyupgYXjwxiJ89ktQvPW7zPj0itIy95v4XvYDvADywo5q9WlpTvb1Afb0xLoM92tB7vWAbwztT
                      kss9lEiyvC9xrT2NhzO9Bw1cvTiq9bxC+Q89C7ODPfC8EjyNkk+9J6B+veKhbD1PDb89MsuuvTm5
                      tj1Xj6U9gquevaBGNr1woEw80kFwPfQe87zNHaq9gQKIPfCfG71QnQW9QjwlPcFVuT3ygW49UhEp
                      PTewJr0VP7C9AN0ovT5rBj3Mi6W8B5OOPfK1Cz3gs++8zJGfPBBALb1Mz/c822+VvZR2kDwb1ZO9
                      1sOTvWzsurwAKwy9UmhbPSvmwD2Wx5K9oo0hPSRSCr3z90O9gJSJO/e5P70c6vY8cH2kvUBZ1jpq
                      u3o9JtuSvSBhsLwR8MI9DSJXvZn9yz2go3C7xXaFvaLAi71AagG7ngOIvQCHTrzsa5W8IDibvADe
                      5DqyNz09mYKKPboPH72TJLU9NGH8vANfvr3YenU8vt0IPYPolz2AWiS8KcuTPW3Wo70tvBy9u+rC
                      PXvIu72ocz28MLScvSktvj1SlTg96kF6PboZs715lrM93XU1vcDszLx8c9E8dE7vPKIenL3AGY+9
                      stlCPSjpwr12kQM9aziBPVdoab1CaxA9eqMnvWmwwD17zsk9yXChPXrsGj3BosY9juCrvdE1yj03
                      N8c9PrR5PSOLnD2Q8zm9qKpdPM4kQT2ADP28Wy+4PadmG72gYJE8fNUVvQPshD15S6Q9S9nDPe4N
                      Zj3jJr+98mkzPWX9hr0aHns9rPn7PADYlznghi69oitYPVBQ0Tvfhr89LVONvYofND3GhBI95/id
                      PQAvyLt0vtk84MgXvZYOFT0gaGG9KOtmPGH3hT34N4i8B427PeY3F73ials9EPshPCK8xL3Onoa9
                      RDvTPJ0Uab1zMqO9NReyPZWalr3T5jG9bfc/vU7xBz1dkIY99ee0vWqcCL3CpjY9AGi9OdTStjyi
                      L0s9dZO4PXPFJL21voA9tAyFvZqcSL3ohOO87A+rPAkKxT0nxk29yjd+vX3zJr2S+1w9h2l1vf7m
                      Lz2Zw409M4jKvYv1yz0rh7U9LXgcvQKxNj1qBLe9uvd4Pc5YKj36G5a9Lb0fvdVNn71w3YC9YQrL
                      PUo6CD1WlpW9UIGHvcIFYD3l2K89ch83PfJeCz0IV9u8eTe2PaC2RL3BMJM9NJCjPIBc/Tr9fIY9
                      VIj4PGPMoz3AcMQ8c6glvclqhz0uMoS9XS9gvaIgIT0YLlU82ARIPNtFwD09w6098roUPWglw7xM
                      /d484D0bvQhWv72ofyQ8QBREu1hx3rzgsJi8mrNcvVIIfz0TlXW9AAAUvJbjp72Uzdg8A+igPY2z
                      jT04tPe8HcJivZykAr3txJY9khJrPXqfPz2AXbM8ss3JvaXur714H+28qKEpPH+Bpz3QeuQ73Ve+
                      PYBHMTyAnX26z7fFvcLNnL0ghGO9MvENPYAsoDw6wQC9rXl1vc4oqL19TcA9VHz/vIlNpj0KSQA9
                      Tc5AvWjy87wsY7+84DnWO3mquz2Jmag9aMaQvN5IRD1CsyI9mDKbveWWkb3gN7q70aW+PTATHLwp
                      u6o9rIsXveGOnj2IDMm9ZlCFvbA4fTzIgKw8op87PRvtlj149pS8S16FPWqpLL3VZYO9qOCbPAG8
                      jT0Rqrs94JuCvWi7IDwurHQ94Z+SPWLDOz1wwB28ERPCPdwJEL2fQJ093DWKvVi8CDySe3Y9o7Jl
                      vWDyTDvXB5w91HyTPFr1aj17u5w9NO+HvSJ4Oj1VWoW97RiDvc2ppD15Qrc9UnhaPej4gjzsvaA8
                      Og4uvUzhujwhX6Y9aqJKvXqLFL0AjQo867fDPUfkvT0d8pm9GNzrvMBdHTuOK5K9m0Kxvc5sk71Y
                      PtS8Z0uyvbkNkT1Tvcw9YmRAPRiU2rxQ2r678OauvVCagr0JPaM9DkEbPb3eiL0ODqW9AyA4vUVm
                      v72wLAu8ZpsQPRVrqz2w4lG8COb3vEjbpzwUIPw8gS+ZPXLADj0oiIW9ZlOBvejCprxoQAi8oHLQ
                      O61Yor0JKrc9vtpKPcy3iDylsa+9WHW4vPgZqLyQvwk811p5vV2lVr2tXCa9qqt0vaOtXb1QS9m7
                      KKfLvIF4pj1yW009XCyKvTi2tLzXYLG9wEOgvbqVyr3qASM9uBGNvQz6gTywMha9Hu+gvcxM6bwF
                      nsS91V6XPUJgJj0Rdb09I1GUvcA2L71gK7K8OKajvLpWBL0ApSa8iJCMvYqCtb0R3LQ9ACdMvbct
                      wj2wvYK7wVOyPV28Zb06vpC9LKehPICA8zqDZyW9Gm4+veCLJb2Colg9xZbFvfjWob00hLU8qMJG
                      vJ1nj70CVQg9ZbijPa1KiD2tmsC9YY2OPfMEVL1W9I69GdbDPfE9lz0oo6i9YNRjvZJMKz2CSCY9
                      ML8kvLL4HT2YUnW89BOqvHITUj0T3Yy9EaCWPVtihT2ogue8kOolvEnBvj3A0RC7oBSLO+jwqL1T
                      Lzu92LoXPMje5bxoJmM8AFuuu4Z7Er2iH6K9SI+oPBaXor2gFu07PgoPPbTo7jzAxK29aQCMPSIZ
                      WD0CE089JjBZPf1bN70oHA484uhKPfoITD0Aasu77zaXPTPdYr3yxG09ahJMvabSSz1OjFg980bA
                      vdrcFj3A/Fa7K3+qvTCHT7xzLS+9dFHwvJCWN7wzwzq9zCbsvABnPTyJSps9q0aaPR0sq71NeLg9
                      oQ7APXZOGT3ALYy8O/WpPWj21rzi9H092C3ovLDBRL02+EU9Z1p3vUWVir3Inea84C78vI1Awj0V
                      xYk9ILvFvLQG57xdl3G9EuxWPQNdjr1tjJk9UqsKPWjnsjzSLsa98o57PXP7wD1W5VA9UhtZPfDZ
                      DbyZeZU90Dm1u7CiFb06Wzm9sPmnu3o3kr1jiia9Y7WuvYftG70gVY08AHmnvJ4imL0VzKQ9ReGa
                      PUzoC73uLBY9y9OZPeLBBT3ISvW83jUuPRSM6ryjaZI9ApYOPdhxfrz3+Mu9oCqjO8Qq8jwZ9589
                      CNaZPEdxhj3IX5q8TDiEPNInTD1Qj6O7ohFKPUDOYbvd8FS9um4EPdiNj7yaxwK9/nZhPZqtAT03
                      4pU9KHogPIB48bvYh4A8gIGRuwCAUrrAhCC7WNp5vEC6nb2MyMM8/YgpveYVTz1d6lG9ADDyunTm
                      ojzKoXw9F8+uPYp8cr3QK9I7OKGqvWw2trxa/aW9KIzuvFgQSrzYwVU8Rmk7PTb5Kj3lELw9Gl0o
                      vVQr7DwsWI08g0WjPbvTsz3xqp49KenAPWw457xj5cY9w0MvvcpVJj3YpWi84GLWuy18Ir3hAY89
                      0jSVvYyhwrz+IDA9myC5ve0Mxr3JuYg9zHX3PJIsOz0a5mm9w/DCvep2XD0NMYG9GGe3vEKtDT1Q
                      Gz28jTnFvaSuA71ML7M8/LTVPEbgET1d+Jw9mNWOvcTgzjwQ4AI85KsFvUBRBb0dGCW9ativvQDk
                      PbpO73w9eHmivf24rL1VdJg9hgQIvc7FGz2Kizk9UKervdTdkTzDkJm9D/2zvQDOZbuikxo9rLrq
                      vJWzlb00pfe8HUekvfGwrT1MjAW9QKoOPAwVk7yNwcm94V+DPdLRej1AeIe8dBgOvaBj2zu6QBY9
                      R10fvRAMOzy3qym94FD6u95Jhr0gEWe9rAyfPHIxMz2WDE89J3+6PeCQmLsz30+9aKj1vKpqvb1J
                      14Y9edyHPWbjqb2NSba9BwKZPWjIMbx3zIM9NIWFvGdPdb2RX6c9S1vGve2kjL3+ZRQ9OjBuPX4K
                      jb1a5Ak94F6TvDS83LylxcM94XGWPd3gr73rOso9oYOPPbWHkD2eomo9DV1RvdWgpL0yzSY9cohE
                      PYAUpTtIEss84k5NPX0hT71GJRk9wd6wPd2sMr2ifVg9J6TKvXCaUbymfQU9/XpDvf8qtD0KzX09
                      IDawPHObMb2wWR+92ONTvAeYJb14Gt688lVWPX7LAj0jlTu9NttQPaTg3jztfW29YbGIPWphY71y
                      Gjo9qMSRvJo/Hr3YwKQ81En+vHIkOT1Nony9IhVEPaKMSD3rEbO9KM9cvOBx7Lwwg7691JPVPKV2
                      gj0Rr5Q9B9ymPYtCtD3Icba8agkxvWxq0LxmGY29DuYTPYInZz3Q2l489XmWvbM6nT0tXVK9CK2c
                      PBoOer3VM449R0csvYCLnTwD1I09UezFPaMUvj16RwE9oL+OvTeQv71IgpI8lAb2vHCxGzxd6ai9
                      hFr5PGDgF73oKoC8YqwXPTB8b7yA8mU6msUPPeQJ2zwA5vC74v9VPZ3teb2oFLo83h9SPVAxdDwh
                      7Zs9gHj1u+jmLLzSi1A9wqtKPdAId70wurG7qEMkvPPFjT2Qp8i9Cll0PeDAtL0HVkO9MAY3vega
                      ibzJ8po9aK0FPCOTkr2borM9C2OWvbpPGD36Fns94BD5vFC08TvzdsO9iXaYPTcmsb0osgO8gLsc
                      veUAmT3ShzM9W+WrPQN+vT3zxim9AH6YOXLbbj1rHos9Bh4NPQB7yruIJp29G7+qPegGwL1v8pU9
                      nWxHvaNJqb0KX029llKNvVg9zrworbc8ZWS1vYDL8byqimo92KnxvJY5cD0ZDaU9pro/PZkooT0j
                      v2C9yu9UPWcFPb1Wo3498dHDPUqYSj0wEh88gz0qvdhWmb340L+890yCPcI4Yz2T4mi9wA9BPE7i
                      bT1VDpw900SQPVD+B7xgxV27DAGCvbcKHb3oFMo8yCLPvLBsvr22pEY9EIHAvToOQD2CJIe9c5hb
                      vacxrj0CDjA9mqIFvWvpqb042pi8DlkfPeeKoz0ZUYg9ht4oPbpFVr1eqFI91GORvBTWwTw/B8y9
                      +wm4vWMTI71Qc8q9YgjEvYCXPrz5CrY98BnCveJ9Sz2XW7w987QdvZQy8ryLc5i96f+NPcITkb2d
                      XIS9Xh+pvRgDQ7wKu0Y9evANvWj3kzzDfro9DLbrPJgOqbxZZqU90ucdPSKcsL1Wwys9VGarPAyR
                      2rwtiz29xPfRPDJXJj03uVS9KIjYvKLCcD0gm9m8gCDMO+XurT1sqQG9GNb0vBAWYzwFpL89oFxt
                      vcybz7zWPY29qVzFPeOLa72yCks9ml8cPRfINL1AhHo7MGB5vcCQt721fJQ9MqZ+PZevX720Eqy8
                      wmksPZSgm7zD1sG99We6vc06mD3Nd5G9TGCBvE3QuL1AVf46MRaHPfThmjxSaXo9GnRxPRTLg73Y
                      kbg8zNe9PNohL71owco8XWCQvb85gT0kKgq947GfvaSP/Tx6EmO9+qBMPdAggLviAAU96IV1vEuM
                      rj30I5+8GszKvYwR7bwdV0C92BmuPPK7MD0DXZ892IXOvBpnTr1ABRa8yzbHvcy34DwK/TS9C+a5
                      PYxH67w6YgE92I6KPObKnb1fScc9bVsyvSdAbr0TIrM9KmlbPSNtKL2Caxg92GxHPD6Ngr2AoWw6
                      cw3Gvdq3c7291bk9MdqRPUM7yz0oFrE82hOevcUftT0gbYU7JiELvb7Fi70AGCu8uAK3vGAd27vo
                      glE8eAuwvaD7srsnuDa9NthsPfMatz0TITa9Sw6MPUwF+zy7qoY978C7PWpmAL2Q8j68u9qzPYFg
                      jj06n0497O8IvcFexT1ShCA9MMGPO1J0rL0rerI9AL1fu+rTjb34ZZs8MyA8vYDViLoqQTG9OhJC
                      Pazqh714uYy8Qjs3PWRw5Twgn4A8ZPPNPBSdjL0YJZ+9keKNPdBONb0lSKo9kBtbPAQr1TzLibe9
                      /o+hvS3vYb3NYIk9DtNJPVfQe72AZbi9EbKZPSLSWD1qhzm9BC7bPD9Ttb3rHbe9fXR0vX9AjT1T
                      nIQ92shsvRBNALwAMjQ8guEWPVmlnT2IVJM8gGvyvCVcpT30jvK8SaaKPalriD2YD/a8H6qaPVJP
                      IT1kV808y8CdvULZsr2PgbC9UISyO9jEpr2kTIK9vh9CPSDpyryAHcU6iqHIvYnAmD3oRrI8vcOr
                      vYhztrzaWVY9yNm+vam8yj0tUpg9JnZtPf5wBD0CODw9HTgrvfsulL2tdrg96EynvXpxSj0Nr5u9
                      yhSBvXfGwj1mNYS9gPgFvBd4kD3NuGm9wtByPeKkDz2gUCo7lvkSvZf8qT2P5qy94C+Ku7CJALxv
                      bMi9R+7CvfZzjL0umlk9MPsdPILIUj3NPJk97FC3vOt+oD0i0BU9SkwJPRNIYL10+vc83KcRvVLP
                      Lz0a6D89QJ0NPFIvez0SfYK9qMkWvMALDTyCvr69d6mFPcXhrb0AgMa4sOhZPJpHZL0A4V06KLWk
                      PICZUbywvaQ7X0ipPeuAqD32hqG9jFQLvcaKUz2n5sq9HTNXvbgFyTyQFiC8aJqCvLU1uz2gFde7
                      qHrIvUYaJz3NBKc9M/2svdrSgb1uiy49z7u1vboRtb0o3wW8emvGvfAYeL3dRX69d+WWPRgZtDyT
                      3Lk9IjoDPcEPvj0HSpM9+ieUvZ29Zb3p2MY9FMmnvGJeMD2J3sY9/dp2vZkTrT10PO48OXmHPUD8
                      yb2SN8m90kpGPcUKqL0AnDE6yjcOPRc/xr2F5ZS9lxCSPW8pyD0z7os9w5W2PWNjrD0Oym49c0nF
                      vXcpb73ZMa89+lokPRj5CjySFmI9vZ5xvacsxD1A4TI88fKZPcfzb72A65a9z0WYPVR6rDzyMRE9
                      6EhXPFCir7vM/f88iq86PZsWqr04UYe8g3+nvbTV4byB3cM9JAjOPJ71jL2RIbs9sTa/Pa0+vL0m
                      w5m9k/6UvVfdM70rEIs9RwarPQYSGL3ZCbk92lsuPbrID72smMs8nwGVPWH6oT3oxYU8VLX1PJrD
                      HL2IUZs8sOc2PIUXhz0ofgS89eTFPRiCXDw56549EJ5gvfJoDz2cYtA8KG4DPFDQgTuvkrO9Gv4+
                      vQyk9LwkEv48TJWBPISA6jyiomM92JMHvDS00jz/WJI9ANxSufvMoL1uViY91JvyPDDVgb0n/Kk9
                      VMu+vJQKwzwD5pM9CDzMPESphr0KqIe9UAwlvCPYfL1Q60q8AI77OXj1o70hZoM9uK2wvE1ybb38
                      hoO9wM7QukBopr2QqBe9YJhNu+FYhz0BCrA9eyGdvfLyBj1tD1m990pKvaPcSL0YI488wZOvPXcL
                      Pb0AEZw7YTyVPRifzLz03o48HumCvRgoADwV/Z89EsJSPURi8DwyOXc9IIKFO6CEsLvM8YE8wKb/
                      Op0+a72SN6q9UAO2u1APRrxjqrs9cpMfPTCEbjxXLUK9fX2UveiWob1Xose9UL35uyODhj1y5TU9
                      gNeyu8Fkyj0aUHm97Ty1vRTfkDzg4uU7oPI8u9oRbD0jA2m9hZKTPRBpPjyQYia8SPKOvTonaD1U
                      rNw8hZ+iPcAiTL3HtDK9eHOCvRewgD1YUaO9KvFGPSMmtL3iKXo95xp9vboXIL0tfYo9nGfhPBB4
                      yb0UuKY8CudHvcAazzpQ1yu9awKVvbopTz0y40U92NZnvDWTvT0N7Ki9HC6BvTpMFj2f7cS9Bxwn
                      vX+UgT2MAt485KQTveIiZj1IRfC89ESQvC2ciL23PDe9To4lPaBrX71AebU8bhOqveKnrr3sMPK8
                      CCLxvHgUpbwAydg7
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYyMjkyOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzYyMjkyOHEBYS5kAAAAAAAAAEDnFb3kfuc8LfpyvaF5rz2qSzg90Si8PXaWCj0iVXw9
                      XMX+PKyviLxfI649cOV4PJ/Ryb2UarS8O6i0PXDPKDxezIK9dImlPGFKiT1Suz89fhUMPQAdUjvm
                      FmE9rvxOPUtLjz0AvRi68wKevcAGcLsgt+C7xQ2rPfCWbbz2uRo9zKChvJ4OQT0T6IM9UKlzvbPz
                      lb06cAU97VNivcBRKzuAzIk6sNd+vV2ZlL09YRu96CyovGF4vz0AUnm9UQ2iPZRKyrz4pa296uRj
                      vQiVkrzg2QG9AotwPQA1ZbsoAxm84EKFu+CtjLuUsu+8eN6ZveI4AT1g7WE78jUlPbINSD2Vmcm9
                      eK20vACKiTlMSti8qPhmvFhpHzxlicY9RmN3PduGrT1nkYQ9ww5nvTCppTu/fIU90H5ivVeSyT16
                      xU89hC7fPPo9ZL391p89f1DIPcIVWj3w1ge9fWNpvVNYtb2wFHS8m+SNPZdrmT2uc5a9eTS2PQJ7
                      ET2g5AW7AFimuuBagrtizcG9UEG5u0rBNL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYxOTAwOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzYxOTAwOHEBYS5kAAAAAAAAAMCcsrraCT+9eofAvULKmL2gODe7cE0lvLjQpjwKMba9
                      MJzGuzjCgDwA6ru95Ua6PUrGXz1Xv7g9w9ipPYpJBT0gWMi9ab2OPewkE71gyoo8zPsSvU2hJ72A
                      /ty7wIWdvGwvvbwAGCk8bVKRPdjYj7zo98u8zj9ZPTPehD1SyVM9+Bq1vJ5uAT1oR/W8Yv1+PQz/
                      /rxXEzW9IkA5PTCQpjvZob097o6dve2kVL0yQmo9Oo4OvcCRYTuALBI8SLbLvAoOUz2u+X89fkcu
                      PYd7oD1Is++8cm4FPVBVpbsQdx48JzoovYqTEj2geZA7zdiJPXCkJr3mfwM9pXWlPV1Yi72+jig9
                      F2ktvdn9jT0jKcw9uHz3vP2Ngb0ToTK9xt1XPfGnqD2M0oK8ICWXO4bKQD0XZcM9aH8mvG5qHz36
                      SRA9gmzKve2xob2tKlq9kdiVPVJ/eD3YJ7K9KjR4vb6kOj0tiZY9gl5qPbAR/DvgWsS9gA57PHrM
                      x73QF029rnwGPSNgKb1CiUo9pG33PJ4ATT0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzYxNjQ0OHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzYxNjQ0OHEBYS4BAAAAAAAAANDOvTs=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        dgr0O0Q83TtdPQg8XT0IPKO68TsDKP07zFT5O8xU+TuYN0s8mxokPGEjMjxhIzI8mDdLPJsaJDxh
        IzI8YSMyPHINKTyL+RU8jiguPI4oLjybIx08I9L3O4F5FjyBeRY8yP1EPFHcETwKTEQ8CkxEPMj9
        RDxR3BE8CkxEPApMRDwZEOE7XxIbPDc9Bzw3PQc8K7QBPPhzKjyYrgA8mK4APIyELzxwNy88J982
        PCffNjyMhC88cDcvPCffNjwn3zY8GRDhO18SGzw3PQc8Nz0HPCu0ATz4cyo8mK4APJiuADyMhC88
        cDcvPCffNjwn3zY8jIQvPHA3Lzwn3zY8J982PMOr9Dsz8gY8gCLbO4Ai2zvLAvc7btzrO7167zu9
        eu87PemSOzDttTsCmKc7ApinOz3pkjsw7bU7ApinOwKYpzvembA72hDHO25sqztubKs7cf29O2Lw
        8DuSZ8Y7kmfGO92NlztDrsw7FxeYOxcXmDvdjZc7Q67MOxcXmDsXF5g7sqYEPNiFwDuNwdw7jcHc
        O1wt5jtrJq87QAHoO0AB6DuOGKo7aWOqO3lBozt5QaM7jhiqO2ljqjt5QaM7eUGjO7KmBDzYhcA7
        jcHcO43B3DtcLeY7ayavO0AB6DtAAeg7jhiqO2ljqjt5QaM7eUGjO44YqjtpY6o7eUGjO3lBozs=
