N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTIwMHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDA1MzEyMDBxAWEuhAMAAAAAAABo22U92/FQvuTRnL0co5K+IilMPinOoD5mw6O+3LXy
                      PU5vAb4AnSg8AidgPrB6yDwGWIu+bjQFviqrXj4G9VA+JocVPtjBGT4G1++98ldrPuA4KjwH3aQ+
                      3txkPsNgBr4bxqQ+ijaXvnzbvL1QGBg+XVWIPkhCfz0gyMe94GSavWYlJ76acZ++e0lgvuDiCbxr
                      1JS+z0WmPrZyMT5uZGa+uDcKvQBbWTxg4c29BqkHvojYXr5tp5g+/U6NPs0zlj6m2+292yapPkDt
                      BD7oOXY9K1RsvhYX2L1AYKg8gN5Ku0zOqT2b/Km+AOtOvAJHeT6IlWi+bNr7PUvklb7/KYq+s7JD
                      vkDQ7Lygeza+ZlgvvgtUCr57GWG+abiOPiBnyb2Ejvw9PkJmPogIW72GMqq+ecGLPizinz0oaGO9
                      umkMPjnUoD7oRy+9orVePjmwmD5wXIo9cp55Phy/lr5KyGs+MAmBvuxw9r3+x4a+291nvgLxDD5o
                      gy896OpaPS7tQ764nQy+vy2ePnxxob1vjIw+gKF9O4Z99L0GNGI+zE+EvrOje76M1tk9bsUgvmxA
                      rz20Eqg9dx2oPuRBl74o8209DP/7PZp1XD6gQoq+8PcWvn4aRT7A4sg76N+pvmrgeD5iiRE+E4kz
                      vu0TiD4AmA46iCpdvl9wjz5eY6i+ZhdrvgGbmj7ztFW+tpYoPitNmb7MDpO9FPugvcRkn73Q+ZW9
                      hIOMvliuBT2eGHa+YgpkPmbSbL7g+X69wMwBPZ6jEz6QJh2+fPPovXrMST7wTXm+wDDYvL84ij70
                      q4s9VlnQvWDjbr58ydi9bgE+PkD2Ib40Doy+blapvqOqAL6VwYM+1OyKPQDdMjzmW9C9T6GgPikP
                      iT4LZCq+yDNVvhIUez6kJqG+RXOYPuiMBL324Uy+9H+xPdhyG76IZDQ9kGu0vOTTnb1A+6m87Dr2
                      vVvKmb4US6q9AMdaPDD2jbyAo+y82i1BPnwzzL0bkCu+8AtIvt6+lL5TGoO+QMwnPoKFWz6LKpE+
                      CyFdvmbSGb7teJ4+LttTvnIBUz61N5A+1HabvrGZjD52VHM+AFLBuwBQgLyA6kY8AKyZOXMlK76b
                      j5C+6P0MvUK0Pj7gaCG9DKTqvdwsoD1QloC9S4mSvpjABz2roju+1nlGPkkEkT5gNJs9G6iOvgBo
                      JjnAz3a+4LIKPlrfkb6Qa9I8XByWPUjAeT3Uhp2+iP4NPUOmF744rE299Be7PV5hbr6GmdK9AJh/
                      O/EypD7gVtI9DOGgvR85mr7IJFI9YxQ9vlzQ5b0gRz6+pj27vVY+MT5CQJG+UHvxvWudIb4AoKY6
                      xo9/vlA9Kr5/9aM+gA7BPBalEz6xWpw++4eQvhNnUr4WhVG+zKGOPaXenz4oV1i+4I6avlNHQL4O
                      UC8+MHrNPG5sLb54nD++LT+gPjD7ZL61SJw+/tloPnKxGz4ccfi9GCYHvQZr8b24mg09wJfbPAx7
                      gj1GYfy9cE9Uvmr2jb4at08+HySJPkDH9LsaIVY+WKILvuCCD7wzXXG+QGpfPXAscb6+0UQ+XnI3
                      vnCCYL4NiZ8+iKmoviAqlz07kwu+Iuh4Po4PXb6yRp2+4GdfvaAxgr1KIiQ+0DayPMjldb0gIDG+
                      ZMSsPbSh3z2YLyy+9smgvrh4a77PVqg+44cTvqYCpb7cHLO95np+Phzdmb2CzSo+cOD1vAoFSD7h
                      iaU+wjoyPkX1oz7a4jk+IrlPPpbbZ74kf989m2d/vnZbPb5ooVC+MKnovQDtLb0gGxK8SyMwvkQd
                      lL1Ah4E9AGQ7vGCizD2eXRo+jOG/vcaGer7Sez4+Vh1sPgBvXr1oHU+9it1RPgAN5Tsw4vA9c9ss
                      vsWmpT4md/m9lvJWvk/toz7g4F69Zy2kPqAIUT0AcrU9sAWkvbKtdz4yfQs+0IaxPfgnLr3gDH+9
                      ZllePtkbgT6z/Aa+6HUlPjOid76eaBW+cNSdPJK7OD6gUL69zDv2vYBGCz3A5Pe8uiZjPlR1g74E
                      ipU9IeuVPqr4gL4oZCc9umB7Pmg6AT64WBm+oI1RvfRX2T0ACfa9sNtIvsu1X74Arlq+4FNpPUDm
                      Ir2tkoM+yLMjvuDSJj2UlZm9sqAPPmXnpD6Qe4s9/ogTPoA7d73gxSE+i14jvpXcmT6QRKm93nx5
                      vtIuPj43UqO+hrcivuDlDbyWe2o+0LG6PRz97z1x9Zs+AGV7voquez5CWjs+s/uBvql4kT56N4y+
                      KUypPgDAOTlgOMe9JqAQPtAZ4r0zIpe+0ryhvmBTFL6+pk++jpgsvqolZz57fB2+KAgIPtZfQD4I
                      E3K9iBNjvtgINT0HUYk+8G92vtL2l76A7Zy+5MuRPUtClT7+hiC+u7COvlDVzbyofEo9thLkvQ4V
                      Fj6gYnA8X9yLvuqPbz5wbdq8Bug1vuioTL7ZYJE+pfalPnsgUL7+A0M+9oervZFRiz5ioC0+kK5A
                      vuYzfb54Bly9bg+HvoibJD3A1Ae9cFHHveJRmr47e1G+tvv+vTyNjz0KoZW+wEPqvCDMpb3QyY++
                      DpFRPkijLj0pGIM+HN60vZ34lj5AU7A7wJnqPWKhNT5o7z69cJkgvmtOpL5+YSe+fKyBvZyM1j2q
                      RTM+BrdCPuBWJb7VMYo+vA+zPYBCX7v04s498/scvk6qmb6NZaM++7Jsvs1nkz5w/a086G+VvsQk
                      xj1g5LM9KL4TvmBgTbyRQJI+hnRyvu7lVz4Aehs7dlcRPm4PPr6poqE+eFUDvcj0OT2qwKK+3mAt
                      vmlAjD6gvqO+gMU6vU0Zmz58k/k9Cd6dPsgWWD0SQW4+iBV+vSbiEb7mxhO+gE07PZSP6z1Icwq+
                      ADAWukBQrjzZlZ4+GgcWPrZ1lb5+PmW+Ai0HPgDnbDxAw9m7CGpfvZwEzb0AlPW5HlA+vkC44zxA
                      HNw9YhscPtNhK74jIm++wVKDPpuFoj5y4Ek+oC8vPOrUKj69B5s+DJ6/vbmBkj7wjKE95h4aPpjN
                      az0ZrpU+kj+WvjLeCz5MVP+9m02EvhBDvz1yuZS+wBogvYFOkD6Ilj29oM5WvgMQAb5LmF++YBMs
                      viqjHT4QX7g8xpGDvusMYb6iT4e+BskcvuBTW7xnKoE+qDMWvRjaSj0gww09BGS2PTi0ND1ABAW9
                      T3qbPiPkjD4Avk+7ohxdPpbDc75ehD6+piF0vkQ24z3GZkc+LIGovTxehb2ycAg+abCePvQPqb2A
                      eXM77H+mPeTTkL0ujTQ+fiEPPoLvKj6Wjyq+WIZAvgb8J76b0Hm+88wPviYQvL1giXU9tbygPkAt
                      8TvgfCY9IFJ+PNt1Ir5BpKk+WDxmvYvilD6YygA9euCZvp5NSb5z1iS+GG9IvVroOD57w4s+RUyN
                      PkuZn766vC0+JqjEvagJTj07Wo4+GPokPQDJWz0ASjG7wBTuO7cFnT4nlJG+JpI9Pgo9j76QALU8
                      aE1jvdDBFT4GsVW+aYaNPiD0Yz02ODs+3N/7PUiRdb342wM+Qu1mPlPqHr42o729ECKJPClglj5J
                      Gpw+AATrOWAH1b2jWFm+oDg2vUjlJj38fbI9BsPEvYAncrugtiY9ZyuQvpAZ9DzGC+O9W35wviLV
                      ED5I96i+5rc0vv7bQj5Ov2C+lEXyPYajRb6WK8O9ALFYvfjmSb4clse9bSmdPqNvZ75WhUC+raai
                      Po50cT7A/rm7iJx6PZDerr1GIQq+2J1tPfBy/zzvKYK+cB6DPX4VH776imM+YHfePcCmAD7eVyy+
                      f0yivpwi4713FIu+kzqNPrCPCz6VXpg+Ad2WPq5JcT4uMGY+tDeBvUS1ib2hoYc+4BMDvqb9YT7t
                      DZM+1qRhPu7DZr5+MWm+6saVvrjzl77L0ye+IBFMPIh7ID0OaFU+hD6bvgAkGb6YV4++AHj3u3Zt
                      Ar7qKIS+MPsRPvCe6jwUOpW93BLmPcCzoLsA3ae91nczvhxtyD0AjbA6BgBPvvMejT4+93I+JyOi
                      vnodUD4wL4c8tvGevsStgb3Ipj+95fCYPkCId75WEEA+Q6Awvp/Qoz6gwAc9gn2PvhpbLT5j8Vi+
                      z/eNPmfcpj7qUVs+2F1dPRURiT4kcYK+y88XvgJVKT5AJXa+qXuDPhgfNj3UR5a9aGqmviDZiD2g
                      QQK+RjmDvguceb4QPkm+QtFUPtjvnr6QSRs+SvpYPrPnl754OyI+QBaivGr4kb5ILhM9g9eGPq6A
                      E76FBKI+M94cvoBZEL6WIXe+Vb6SPkpyKz601aS9rCj/vZBBxT1o40M9+u8RPjx2hr5evVW+0imq
                      vsyDpr1OQYy+dfGdPoL9CD6Qx609QLysPKDKXrw45wC95qxCPkaHPb46MFo+muJ1PpqjOz42JV6+
                      mvckPtZ2YT5MTZs9Y7FNvgjbkL4j+4K+U0ymPuD9D75SSpu+GJYPPXi2Iz5IPCM9GI9RPdZa6b0c
                      WNq9oBJivaF3lT4cXKs94vOgvgBDjT0A7+o6aGYmPgnjkj5w56W93C39veDOjj0atCE+ELenPKhF
                      c70gLGe+mixtPoCMij3SB0o+gOv0PEhBKj7kOIE9QCumPSvwlz6mK0m+tYyjPmoZMz70evY9KA1V
                      vcDPrbxgaWK9E9SmPvBenjw2DvS9nE7MvYZnU74ql4y+QNj/vMVgpj4IbZW++HALvYZoE75IBGI9
                      TdqAPr55Ib6PkaI+aiwOPvBu3b1CxVA+3IX4PWHNnD7OyAw+IFVLvHCjzDyctry9Hx2CPtB29r1Q
                      Mbu9PqFZPqo6RD52l9i9Ou81Pg0ghD6kWZI9p7mSvp6Ud74=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTI4MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDUzMTI4MHEBYS5kAAAAAAAAACiHmr54Yha+xCXVPTDA/7wAgy08daaiPmBnGD1wary8
                      UKbOPe/OjL4ML8g9I0OOPhoiPz6de50+REDbPYipAz0c7vU92QeePhBVjr6Ake89iciEPsC1jb7r
                      P5M+pYqWPoxDgD3wnRS+7KGFPUr1LD4E4pm+vjYwvmDDdTzKg1c+lugXPu4Qar58c7k9AFKIvRLc
                      ez7wDFy+Fv/FvceUgb4EnYI9uJE0vkrnkL4RV54+sMznvSDbHzwuale+6DuevjzC0L0zQRa+mU2m
                      PikrkT5/8aQ+CjZYPq7jIr7YGF29olIRPoYi+70rwU2+voYvvgDiSDrQ8ti8uEE0vS6FbL5CJ3w+
                      HUKWPtgbQj2K852+ss8qPiBkU71GtwA+YHApPCAfbb1O7B0+NJuFvcAw9rxugH++m/9qvjAs2z1g
                      PTy8M1EsviKpnL6dGJg+rCjxvRCqS77bjGK+vNSjPe5dRL6/jpQ+VWOBPvzhgb5mx/69gPYHvPDy
                      oLzWkPu9yGsjPftkeL4gbUy+KSKLPnDI6L0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTM2MHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDA1MzEzNjBxAWEuECcAAAAAAABt+h29MBmpuyKPfz2YvZW8DfG4PcCIuLyA0/46mW+A
                      PbPSuL36cGE9AisFPcKFmL15Rrs9Wz+WPejCdTwyiV49I1nEPT13yD1F47g9SGzVvBiwIbwodrk8
                      +HzuvErkDb1AY3u93YlIvTVRrT0lAak9yFa7PA4OHj1KUSw9EFROvEh+sLw6l6G9ra2jPYZGVT0A
                      6ZU71P+evNRFkzx/Aq69aksJPUy207z1HKs9B7iNPWg0hb2SXXo9jLWMPPINrr2sx/i8msh6vYP4
                      vD0wCDm8IPuwPMDYTrxUPvU80udrPfB0Ozy7scG9MjgXPY0TRr0QhGc8uv9XvXRhqDzayl097KPv
                      vADqVbn0Ntw8GKidPI3ubb11vak9mniOvTrFMj2AGCI8r9GlPdAw8zssYJc8LF7pvFCCrruEe+w8
                      Di6hvbimpLwZaoM9GXyvPaYvjb2duDW95KYJvTiGwL0kZ9c8n3ehPcFosT2gBLm7tWW3vf75YT2I
                      6YA82IF6PCximjzzqLs9eYu0PcbUiL2g+HQ7Z+bIvZ1wtz2J6os9ndGkvbjN97wopIa9eWqoPUhO
                      zL2tC1e9IqNyPc03Ob0SI1o9Yv5HPZhL4LxtOKe9h9jCPaosfL0B+6g9ZocEPazJhrzTnHC9eRLE
                      PaA6P7tJQLo9TLetPIYpGL2AybC87lwAPTFKuT1x5bk9DUcxvVThGL2KIx+94368vaAlazvvJLc9
                      oIAaOxqhdT0YSp+8ndNpvSx2vryIeJ69wgfFvWtQuD1ihpq9GvsyPQAjybzmmqe91rRRPXN1lz2+
                      Els988GLPZXJoD24vr48qTnBPWz3sbxIrsc8ilkpvTBQsruZAKQ916FSvYckMr2+SUY93sSNvVjX
                      xrzV1Kk9s/mYvQImhL2+8xo9F2M+vVs0vr0Hn2u9WIc4PNaBGD2SQmw9IuEZPVU+h72/9sM96I2I
                      PMB/Wrw2ExY9ZzVcvRB+LLwKpgO9cE8FvE2vNL3KAau93ADrPC3cRr1xQLw92lBaPSvqnb1oOe+8
                      3uF0PRpsJr2dN7M9a+CkPWhhPrzqJyo9rlmFvWBj47sg/4C8+QGEPSifdrwH3qY9inLGvQAg9Dem
                      PQm9uuJFvUk9gz0RR4o98b6LPSiCmLxb27o9UfatPdCr+LumvgY9e9WRvU+bur09xi+96F2oPKj+
                      nb0CDwQ9IKtAvdQv/DyA0eC6sKB2vNDsD7yitBs9VKcRvUVgtT1Ufba8PUfLvQDCyL1Uab08Iquy
                      vfS/1zwfDMA9oNMAu9KeSj3XLmm92Z2CPdB2Z71gUko72TWMPXKTGD3goMs8gMKavJrLR70t46s9
                      AlCnvWBkm7sy0VA9m7qjPRiaFrxqqVm9rTyjvbiXzL1iIj89Hb6TvYdkMr2SMy89+HedvEnGgj0E
                      gc88/3iFPSDY3juJiZU9yIi1vRQ7pbxPtoA9qNG0vAlmqj1YFGa8ZEzjPMq1Nj0+qaW9AMxVOwo+
                      GL10w7G8Jlo3Pa+mxj13Pxq9rkiFvcxM9ry7cMS9oP/cvMe2nz3Y6nI80PpcvYzPvzyDpn69uEnL
                      vOboBT2j2yy9QBMqvah2XjwwqkG8DAjOvBgAPbzD3WG99WePPXqYQz3SdxM9oV6XPcCqLzsigXM9
                      IJmjPB12rL0kTvc8bhmsvZN6L71Hrrw9eEulvZi/vrwJ8JY9g8rCvS4YSD1zJEO9FtwRvfW6tz3Y
                      oOe8EbvIPckqmz2BJ6U9ACvqOcZYAb1Uog+9WsoBPaSMFL0RGaI9sDCevcpAZj0Mq6e8gC+3O799
                      ij2GvBS9sORkPKrVAT2jREK9AORgvZ99iD2gbLS8k22SPfDmgL2WMQo93caqvcNYQ704wLy84MfD
                      u9HVpz3Oz6O97PnBPHyh6zzqiU695so+Pa+0tb3tJca9KuwvPQE+nT15uro9AFiFONlHyT1tTUy9
                      aM/VvAzbib2npki9Gm8AvQrfP72X8cE9+lBwvT0ZrD1OWHg9mKF2vHDOCL0KXVq9DBudPJlfwz1o
                      PhC8JndgPcyOtjztMH+9zKfrPJCtLr3avba92EvOvFroBT1Mma88so8HPasKsz0AQ3o7WkFfvazQ
                      ubwT5nS9AGRNOmCYyb3M7Pm8YKRXvbLDbD0IpuG8oKeKu3LOi72adSc9qiw5vYEZvD0AA5y96xWm
                      vaB/tzuwDlE82JwlvFJkMD3oFHy83ILXPMagn71LKqm9brI6PVjU/7zk1dE8gNeQOthiq73sPQS9
                      zMrXPIg70LwTNDu9waCuPSI9TD2urpO9FQGAvQcHWb1arHW9gGNPPMNWs73KHAm90OtRPIAzwb1F
                      tqm99LfvPNLQHz1ZmMU9H5qxPQKMDT0AdEs5nX+1vY5LYD2+Xnk9fdY4vZITxL0n2za9jGfCPOMr
                      iD0sl7A8IKZOvWaTAj0AutK7CFObPGJcTD0z8YQ9igiHvbAMqr1pBak9Rk4LvYBSqbvmKyA9MKQB
                      PJNCsr3YI5Y8+UzEPcsRyz0g2co8V3DIPd43fT1wKDw8+ilTPR2jb72QNUC9aGC5PNjQIDxLsZA9
                      4911vQAt07nE1Ng8JBb7POMOl7397bu9p8glvWi5+rwA6p68kC4MvfRdpLzR0a49Pye/vQCCSDsA
                      ynE7wDsqPOjRb7z+tQg9agFmPWBp/rstiIQ9EjxkPRg26byFV5q9QFoHu2tSkz1lapw9FsNvPZbY
                      VD0/eMo9K72cvYyt+jxFmcC92eeAPWa1Lz3wvlq8AD8vOmAzZb2K+oO9HwmBPfNsfL3tZme9GVaj
                      PfOIsr1oh5u8oHdPvVZdDz2oqg88valWvRuHu73gj7K8vNSCvQw+yLwkwwO9ekkyPZJKfj00PpG8
                      wAo3Ozw+Ab2shrE87d/CPcJ/dD3lbLG93/awPbhpvrywwyc8oDgbOyboDb3ySkw9t+eyvSJ1Yz2H
                      gYM9oBsKuxf6Ur3AsYO8ldicvahMKzxQxvQ74gNXPTkrmD24pbK9SF6ovVg1R7ySh1I9c7s1vS96
                      uz1TjVW9glimvVO1yb1ZEbY9gHklvExXyLzo4NO8APW2vOapgL2w+Aa9GByMPAD4FTpFl8w9GhBV
                      vYCWJbxHRz69Avx9Pcxkrzwo2Ra85tNqPZGalz1AT/M6ZuUCPW16rj3C8K+9tKXuPALdFz1jtJ09
                      pSbFPSfBJb18Wwy9cPJSvVZXaT0AQ9a5EvAePcZSkb2sTrQ8S9TGPbUytD30ktG8zNCCvL7bfj1I
                      hYu8DE2XvPuIur1J+sA9UDQBPF2Srj1I9fO8fi8BPTQZojyYQJ+86pZZvcJ1Gj2BJZM99CDAPFDb
                      ar1os+O85wEivcmouj1ZCcM9XdVxvbM2cL2SSam97y6vPb2KSL1zVpM94I9UvUb2pr3H3G69H0ig
                      PTp5Zb0FMMU9pUW9vd0nRr3PHMs9EpZRPbAguTtNar49ReKPvRnatz0Wjgi97YSdvf9FvD3Q8Nm7
                      MFnlu6xxvDyUAPY8bBz8vEqIq70iMY69W2rFvewy3rx7JYc9gHiGPKrrJr0HWEK9RktfPVqCur1q
                      0g098xxLvW1HR705tLQ94ic2PUsKvT0ETdo8MUG4PcTai71onWK8APsXOhhyo7xduGW9rYlovdkf
                      sz0J6Ik9vpdlPSgZJjyXzcm9MGDGvbiyt72i7zg9YPzSu6wn2TzAwz69yS6bPVoZh71n4lm9/cZy
                      vRLbCz3REK09w6K5PV3Rgj3AKno8QMJDu8a0HD0A1XY70E8lvJXCvr1AAQE7YmJTPVCBgrudDVS9
                      61yiPQAVA7pwtB08srQBPQ65ST1hXZY92TvDPVt0yT03LK098KNGvbBypL11IbE9qeCfPf1tyz2Y
                      djq87Xe1vWIjgr27zrQ9gH3guoAmlL0nLqs9wgNbPYSg0zxFxqW9iulFPdTthrxojXE8e4GtPRDs
                      AjxyjU89TI/LvPMPf70ABrC8ozYcvWh0j7w2AKq92gVzPfTvgLweWzE9GJmCvU0lg72d4D69s+W4
                      PV+cvj2PCp89587Avb21Tr0SnHg9KETuvFCyj72yHY69gKvVO/5uGT3SlA09AMGgvGALyrxDP7U9
                      NDOfvBphhb2QvAc8hpt9Pbp6LD3Qkck7UO0YvL1TUr3ylYO9CpQtvX2gjL1RZJU90Fn2O6B8qLsc
                      tQW92j8RvY1foL2YSHC8x6t0vcbphr3QYv07JnZ+PVQqGL0d6aW9IogYPd2HHr1R9K09AC9duoj9
                      tDxQIL292CEYPFAEr72DbJm9SmeKvbjI0ryTK0G9Eqs0PdC0vTsYOJ2825OlPSsvqz2xBcA9bhsu
                      PdDgj7tLe5i9Ym4iPUC/mDzqLje9YJFSvX2Nx72qjSu9x2xzvfNCvz1cIc88ytxUPUcktz27qZs9
                      UlxoPa0phr2eqUY9MBZbPNAsJbyBdIg90Ls7vPp7MD0wnU485ZHEvabTAL1Acma9GnF3vVbZcz2A
                      +6e629ebvcsbx70sq7S8ygbCve2joz2fYKk9g4llvRCWfL0IBqG9KEApPGD1d7tQ1Sm8YIisu6Zu
                      NT2oKD28I6+fPcExjz2UkBG98lgVPUmSvT0IoJS9GYemPUQWFb342YS84xiWvQCcQrloGJS8SeKt
                      PROCoT0Ankq70DJtvYCm9joBJY89uPfDvKIlJj2yeKG96hkfvZTz5Ly6ykW9sNJbvertA73wh0c8
                      0aqqPU7cRz3AVW29wn0sPVIadj0S9nk93cG/PYv4kT3KH369OBSIvO3/hL1K6Se9QHokO/Goiz3J
                      36U9OMHxvJraCz2inF89+kt6PRXwhD3v84I91WmjPYowfr1JxaU9QN1Du7CtELx0bYE8m7avPbkb
                      kD1BLMk9SX2aPYsvoT23qcG9Mtd+PbZqAb3jj449Jph3PRfBs70TYo69sOLAvSGAgj2cQxm9VSmo
                      Pe8+oz0Zu4Y9pVukvYVkjb0WBg29RamFPexo/7y485a8spa9vRlvuj26EmI9mNxYPGnotT3uNJ29
                      yj8/vVQoEb3oGsi8beGGvR7ocD1QENM7ffGxvSaUez14m+a891i4PeLKVj1SFhM9kKasvVNgmL3A
                      gJM8qBlHvIvnx73K8CO9qPaIvQC0X7tQRo67Ejs4PQU6kD3Icb489Bb1vJ6cXz3Q9ha9glOEvQ6H
                      WT3mchg9MpIGPXTbkzwUK9+8ijhhPQemiz2zvaG9DjMkPTPoIr1b5YQ9gBGAvHsSyz2YNa28WYie
                      PX1Qrj20WLY8yPONPOwBCr0Y+xQ8cEoOvJFTqD27S5W9lSSIPYsCrj2QFMi9wrUqPe+Fuj3lGpw9
                      3P2CvQkwxz3atxg9symlPZOtar2Q7GM83joPPYCk37pYAsG9OxyBPa9ckD0ghEa9iduyPVIbRT2r
                      pKu9Xe3KvdIEBz1045c8OxaavfZ1Bz0YG0O8A8awvd83uL03UyS9GcCQPZKHor0aYa69AkWfvUgn
                      lbxMsYM8FImMPDDkmL3nyII9hM/SPFONwb0Q2ye8YHwEvfo8ar0Us8U8wOJbO6MnkD1bpcA9qyGS
                      vdApp70kk9k8gAM2vKYKXj0h5MM9qtYfPbheojzoz3E8Vh9PPfeVgT39yZO9lSWSPYCUjzxhAcY9
                      8YOoPfFogj0iZzw9yod2PeGkgT2ghNO8siJAPfL+or2fXpU92ANpvIrtdL0tHoG91lwyPfbZF71R
                      /so9EhKZvVYej702bIe9mvYTPUwI0zx1e4e9aziVvRqdnb3B7LY9AD7KuUI4FT0Rpbs9glLEvYDF
                      CrpAaAO7EjKBvTUqtr1kFtQ8pRO6vRUfrT0/L7S93f84vS4wSj0QJVA8UiJUPcKDWT3tO5i9ApQm
                      PYDhOL1okXS8ujR1vQEtrD3a0U49M/QcvVdYKL0AF1S8ARTKPZK6Lj2y7Aw9DikRPeA/mDuKVyc9
                      ToRvPeJ0iL0xTps9MBKavVdGmT0f2se9Y9yivYK8Xz0wD4g7QtmqvZV0jT1RIIk9wc+oPbLTpb1X
                      gXq9AIyyuJfyYr3ja5o9ZiswPfChHTxy1DQ9sC0mvcC8qLqyGby9DPOUvIyJu7ysV988dVuXPbSS
                      w7ykt/886L4rPOYZVj0T9sE94jtxPSjSBbw/SbA9eI+vPH0/wT2MYrk8p0bEPeneqD2dzzW9+pNe
                      vYFmmz3AIH67mo8TPRpbaj0uYlw9qrkCPbppfT2q3gw9X27GvRRR5zywLHo8w5I5vbRn+bwgOrO7
                      cHp6vPvoqj0H+km9Y7yVvdD0IrztHW+9+kgXvQBQujss64M89/JDvaLXez2i0DA9G0GVPRbWGz0X
                      2cg9U+q3vcojab0zIF69AwGhve+1wD1wxxG9YGW9vA7VBT0lq4g9nWNWvY+hwz1AVXW9mo9nPaoY
                      CD0Y9qC8M5VrvbBMxDsqKEa9ODTFvQsfwb3RPqk9yVGQPZDIcr14w788lkmVvbWAh70mxH09FKgA
                      vZB8PDwgc747JKT5PFaJJj2NqS69n0y0PZqUJ71stqI8wGYJvU/Rt73AeeK8RF3NPMHXnj2H4po9
                      9puJvQPAZ72axGa9wEmfPMyir7yROoI9ePiuPDJCmr2AFRM8OBKKvQ7Bib1aIAm94AqAvcZOPT0w
                      QyG8hr1bPUGPrj3DHT69bUbKvTehRL0UtoW9mVehPR0+M73Aw208D2fBPYDmGLxATIW8QMgIPFsa
                      iT2IQpW8+hNJPbPMhD3jW8S9AmKVvQxc5bwWGwq9Q717vbBXB7wLNLa9eVu8PXvXt70h67U9nXm+
                      PbhOrb1A84+8ee+DPepGMD06G4C9D3aFPXPysL3wHHo8xJsHvf2zuL1Taqg9FOjlvDVavD3Jz5c9
                      VQKLvVjWEbytBYO9m0GRPRpWab30+BC97TKavYIgGD0AK8W5Sn8KvQ2QV70o8z08uGenvWx27zwC
                      tE09TICxPDCNL7w19am9fL/9PGp/aD0SOSk9j8W4vXjQ7rxIYqE8QqeYvRKcBz37csu9oHJkO+5w
                      Bj0t+ao9216wPXk+vj36XXS9f2OEPeUcx70CEZu9ZuBUPXaZfD2Bj8Q92Ra7PWAcIr0kyO88yCnb
                      vEzDkLydjIQ9BiBlPTqVFz3EbwO9aHzRvCAP7rw+j2w9/lEIPbXiur2Impk8N45rvY7UPj22P4q9
                      zeWwvaEclj3eMhM9GHXxvIs9kj0iHKe9STvKPeAl/TviCcG9sJZOPFpYIr0KwDo9gmQXPQhLg7xg
                      5Sm97eGgvTDAT7x4UM28AlxzPV3CxD3v5L+9ihcZvfi84LzwIS69aSutPcK6ST2Q/0i8WGSQvH4t
                      GT1Joq89XQC9vcKqBz1/2aU9SrJ0PTammL30hIq8FBTDPPOLxj2uJ0U92jgWvcL+Cj2ssJo8m863
                      veMFtL2FG5C9Xt+rvRw0D71IF4e8f9e1vSt2nb1U8N48FFv1PADnfjyjj5w93UR8vYgajjyX97m9
                      EF5tvJcJoj1Q9o27FXC8vUyX5ry64Bc96O0JPLpDaj0SGyY9KYK0PWxmzLzngqY9Yqp0PWo9mb1g
                      mSe9IulYPesAqL2o14+9mF22vQenH70womw8835OvZOivb1axWA9gGH3uhIlBD0JKcU96IfWvPj9
                      tr0oE6E8eP65PHJwtr2AhJA8AAarvGD6HLsf6LK9RrliPQ/IvD0QjYe9C6ydPb6uYj3QgIi7YK73
                      O6l4mD3yNYG9CPnCvLZ+cj2AE5a9OuOrvcg9vb12cHY905wgvdDap73q7sK9HjVLPQf2jj3AY0G8
                      NFGFPA1YH70tS429KWmoPZDKLjw0Bow8cM4ZPEzI/Dzo9oa9lImlvKekpz0wBCA8TPiIPBBJXry9
                      ulO9vJDuPPhtgr1LBsm9SKSdPGC37zsHH7e9QnhMPYdpkz3Erc48zy3KPaDIEjtzC3i9fd8rvYJu
                      CD29VMG92CxQPDA9cLxksAW99saSvcDTDjz/sok9lya7PZCQB72xBrU9wL7JvCJCZD2a6Ec9vOcB
                      vbdXM73AsoE6sPKVvbGepz0yu1s9+ZGpPX+opj2o8IS94Ri9PY4HHz2KPSo9YB7Hu6OKOr2+VXM9
                      m/2aPZpfDL327lo9vxKvPYVmgz2Q4zY8KYGnPSgWUTySNX09istjvZRu17wukp+9zlMjPfSmhrwS
                      kVQ9vQdtveXxtz1AtI68jWwuvU3/Gr2+pD09V9xbvYjvpTxArLO90xKgPc07lL3++aC9vtUjPV5y
                      HD2a7Gi9WgHLvYkggj0nMEK98Hh4vQaUJj2HMlW9xLvlPEJjNT2wBRW9Wlqivf2/jr3a2R498j5h
                      PQklyT3zMoU9iO6vvahSI7wXx2W9aYuFPQfgG70A0Ty84hEkPdaupb2I1sA8KJbFvNJ0ST2LFJw9
                      AJrnvDozR70AABE6scukPRLmfj3YyPa8YGmJPBdRIb2v65U9xo9yPR0eX71xp7Q9irsCvda6AT0i
                      KD09EITJvZ1gv70QeSO8Sr6nvSbBFb1ESQ29CESjPONDyr3joo89GjxUPTckMr18PAG96GlZPNCK
                      lb1aQcK9nfc6vRLKEj3205+95x7DPWpamL3H/0i9Yh9kPZDoUb2ZT6A92ERsvGhLTjy7QJq9IzKU
                      Pd2pO70KXRe9gGrbOhowW71PkJQ9kg53PXnlpz0vJMs9YsByPRkhij3IBKI8SutyPd2har1KI0I9
                      mFjEvdvupT1+bZq9wnAEPXBIob11abU98E1FvWFMgz3HER+9WIZMvJWfkj1quZW9jRSBvRGQhz38
                      eA69FlWUve+AhT1skbu8UOK4Ow5dkb0tw6u9J4aSPXa4bj1gUpi7FK+yvODEtDtwGmi8RwbMPWEj
                      yD1KEmE9fbd2vZjH0rwDxau9Bt07PVECgD3R/aY99R2FvfOSnL0jT5Y9wrTKvWANv7uVoYw9MBqu
                      vcTszDxT13y9cNcivQJBHD2Esvs8mg1WveN/l73ny5k93zCaPT2Jrb0Her89qFEevCBRgjvTWsg9
                      0sUWPRqoLj1utz09GwDHPcYpWT1g+Nk7YGasO3IiXT0SlVA9eopFPYKUZD3jsmW9LgtGPYAWtzta
                      Sx89rM/HvNgPpb0kNuA8lU+VPXP7tj1jPj29WKYXvAz0yzyAWd06usx4PWqNHT0aMCI9YDOYvdrh
                      d7151rw96z6wPRjSMjzUlAq9bWu6PTKUJT1QxMy9+n2ovfChGL2a/iM9qv1tPSgSRryAjRE8k3RH
                      vWqyLL2a2Cq9dP6LPPgSvjxpFJw9WTW4PdZ2Xj1btcM9NraWvYK2gL0A8FS8izGUPc4Jbj2BnbA9
                      0u6WvVhic7xXRJs9QslBPSYZAr1zqHO9QA03PPgE4LxQHXK95If8PHpwPD04gso8KO6XvfkxiD2A
                      0zy8o8K8vYvgtL0NB4S910ptvVBrZry1hrO9shZiPee0Y71AOTe8ovchPcDFxLyXJIA9VLT1vN05
                      Tb0Ki1M9I4GjPXqZJD0zF5I98WufPVS2hLzMK488co0mPfMTur0yLjc9qSy5PVL/ej26j3E92Ru7
                      PRgKHbyjf329WKu+vczm4jxYEXq8K7DEPUNfxT2KS1g9nzSyPZLPNz2wLk683s6UvQ5CIj1QtLM7
                      8jBpPZtBgD0UaMw8d9Bxvajmh7woPqW81cPHvSC36byZy4896A0vPBhev72qkhE9KljGvfDtdLwA
                      NDM8CkO2vWftJr1wcy884Ee9uwBV97xOu5G9GhqZvUVPsD3YD2m8TH7/vFNDsD16wI29EFmjvVZ9
                      eD2oFvq8pNX8PKMErj3K7hw9JrkYvXXmh71A4oa96NJuPD28xz0gaHe9HXDFPRQM9zz2rZa9QNHW
                      vBg5Xjxo8HA804upPa+6mz0rA8Y9JZWVPQDKDb2M+QC9qj2zvVDtM73oB+S8oCx1u0JjGT0wqKm7
                      FK6mvASc4TxUe/O8/fWZPaQY8zytVYq9L9aoPXFhmD2a5Rc90nsSPavtsL1KyFW9WqJyPS5nBD2C
                      aCk9GiFjvdOzWb0TIli9QNgzvTXQjr1A9XG8U8G0vVT2g7wPWck9tzA3vUB9jbxGfCg9wGSOvbWz
                      yL1Y2Vy8hKQOvXLGrL195aE95caBvZYKpL3JD6o9oBfyO0diVb1oOJ29bmFxPTARTrwtzrG9Fhxo
                      PZRnmrzHR629wt2nvagOzL0gCeu8su6AvYHeyD19JVO9nkVhPawNyDwoDce8U16WvUNaVb30qLs8
                      xM79PCBDkL1Q3/k73SGHPRUFjz0O5wA9dMLvPOL4PD1DDr29Zc6yvRLpUj1nDrO9QrWnvWLffT2t
                      a5s90kpJPf/uvj1o3S28MgBIPRCdCzxQVnC95/68vUM2Gr2CQ8G9tHkFvcMFwr2gklM74VyMPXB7
                      OzyIEuC85X+NvTFNoj1AbaU69dGcvVOgWL2EjNA8icqIPcppMT0gxJg8IIPHPMysuTx9v4k9zIzw
                      PFgkwb1y8VA9+EGMPF9Zrr0Tv7i9tOvDvJZFWT0F14A9hZiZvcMRHL3hfMs9Ail9PVDzZLxQwbK7
                      jem9vep8Yb2yQCA9aIJpPAB1n7sgxHG9cFKlvSMhqj0ToF29E6V+vZpCPD3BOag97EPpPEgpmL2Y
                      asm9IWaIPfXjjr3Qjfk7wuQ0PQD82LzBtKs9TkaSvc0gPb2dknS9mhGpvfBcE72zdcI908a2vTGB
                      lz3dh1a9F+aSPayKj7yWCAE9vitbPbwECL0y2IS9ou+HvdwVGL3nu0W9gK3XujNJHL2Arne8gNfs
                      Oohkr7xA70S7E5ogvcW4kr3JI5o9Y+O7vak2vT2Ie5i90bSyPUAd6rosDZM874XKvdrIXT3xg8Y9
                      Ao6ivdd4OL0bcII9AMCMNnQAsLwwZNE7rZh4vRht2rwVHZg9w/AwvTSGnjxQOJE7gLHEu4dkIb3T
                      d7g959WJPVuGsT3Q1j48B/PEvdBpCbwe0Fw9xjESvXucnL07sMq9HE32PBNlMr3j5ia9s3ZpvZ32
                      Zb310IC9+hxevWpeST2xyIk9dAajvKiIoDwqk5u9WzmMPZfrlz2sG8K8FEG0vKBzPr1Dp3+9lt2r
                      vZhPwL0QxEy9Uc+YPYdINL0Dr7s9rmlAPThYqTxeGQI9tKeUvCmHgj2aEHq9rbOCPZjh9bzMv5A8
                      bnpsPbCIejxNfJM96WmnPewl0TzHO0i94wnEPb78DD3Au268C0jMvancqD3gQ6M8TArfvHRCtjxP
                      XZw9AxAwvfgmirwkWga9aPaUvZOPwj0ELfs8gBCcvCnVxz1En/08Ou8uvd89iz1tApc9SgdZPQ5R
                      VT0T/ci9swtBvT4OWj2Yqzk8ueGAPYM8xz3484S8BKTSPCRe3DwZJaU9rg2IveAPfb0+y5W9uCmk
                      vZSD0TyDvU+9kWbHPfD5a7zOQ2c9qhoWPfLOQD12qw49UBZyPAxDhzzfh6w9ANbLPLeHM73HoIw9
                      1KK+PGOVwD0sv/E8GZetPdLeVj1D+ro948CaPZczYr2y5HU9+phVPZg0bLzQrxg8AbmDPZDLPb21
                      xYc9kORuvY15Vb3PArs97IjBPO1KPL2wwwq9MRqpPU9ohj2hCLE9A5hEvQBQ+jmy/G490NugO732
                      Lb1GfxA92KV5vMJuh71YEVw8ejEBPbQRuDz4JLu9jbIevUHUgT1zgLU9KAmpvMZlBD1J9Kk9sJ3+
                      uxrkQD36fCm9s9VTvTYrOj3t14E9VowQvV5Gbj3q+ii94LKSvCfHvT3Afx48bnmQvbANa70nMH29
                      TQqFvcJWCj2dIri9Cl43Pb5fob0Baq89YKOqu47bIz2KiyA9Gd2HPcDApzxV26Y9dcWFvS+PxT3w
                      Gsq9ELPMvZRP4Lw6bAI9+rx2vcyywTwB1Kg9FAoBvVSf9zwKlT89sre8vXrfSb2gbPO8I5CxvUDr
                      qzzB9cU92ApcPJEkmD2RgJg9QXuYPczY/jyOaUg9WPFPPEpvVj3AgVM7LftzvdSH0bzC/Q89jpwl
                      Pail6byAoFG96tPLvZC5Q7wQCx28/bhaveroOb3tj3e92vNFPd2ShD24KLI82LZWPK6PIz1gHvY7
                      eKjpvJRMhr0UYuc8jCCJPHwGgb08G+086CEuvL1BcL3Ifbs8KBS+PPUDm73IisC9qE/CPHNBpb1B
                      +cs96CW7vYLQCj0jMpC9MOAqvaDvaL0gOIG7PWmsPWJ0gb22pxo9QC8KvWCoW7vmbUo9YE0xu5Ew
                      qD3n16497XOZvS1OdL1h1oY9KVCePVn8jD3694K9rMDkvCjMBDxAH6S9TNEDvTYfDL1U9ZW8dBW8
                      vOBGgTsnQ1S9xoebvRK1KT062am9BZSrPTqXTz3Sd7W9May6PVDHqztAbWy8NHCOPIBkJ723m4o9
                      QCGyvYFNuz0HfFK9sm+wvbabXT3UzI48QstZPWDR/jsI2tG8UC1nvcCoP7xw/068WSWBPapREL0e
                      l2A9EjFHPbLWUz1Nu5C91Fn6PEMbLb1yQQ89JJ2BvZprRb0Awhq9KbTFPVsAqL0MtOI8iuwTPWCD
                      v7ywc407utlNPaxpy7zUQMC8OB2IvABCUDyy6IC9A6qyvWqnPj2AreC61l0KPaVImD0ozsY8CBSo
                      vMBOR70Ik7I81hFjPTIdYD2phbU94NK7vdCitLsZlbU9aOsvPEuCsT2QxQI8Mt+FvbIaWD3Aw0A7
                      wzgrvRr8nL1PSqQ9nmE4PWDi4TuWPwU9+phGvTlMkz1V1r29cRXKPf9vrz0MSuu8KMnJvccQU70w
                      tjg8PPvcPOY0bT0K/Lm9wAoXPCj3pb25VY89rfZQvblmjj2RR8E9VpEUPXIJUj3qGmC9yB+DvArV
                      Gj13Ur49wDNGPPTqCL1oQic8gLM+vEL8eD3mgBe9AAC3OaZ6Gz1qd129kF8wveL8Uj146Ii96upx
                      PW98sr2QbRO8ARWBPYMRMb1dX1u9FLuUPIMOlD1jgJg96JxIPGc2bb0o6ma8NLHYvMGPqT0Mx/O8
                      iqt9vcCM9byRkLE9CGeAPMt7jz3o8rk8bLPUvHJ0Hz3wH7e9YJPMvEIdcD3XGG+9SgcdPUzOgDz5
                      NYE9WEkjPFTfsryYeLi9U9+xPSx9D70oz5i9iKS6PCp6qr3Ytb69jDD9PNJvfz2aHnc9oPVUuwCs
                      7byEDYG913KJPWZ/q71754c9kZ6QPWDOmbuRjKs9Lf9FvfMyLL1O4wg9UC+fu8Dedrtl5Zm94jYk
                      PZ0SI73ESQ299zy9PWlUij3W5EI90sw7PQDvQbq1aLc9gwGwPethm71T8r6957XEPcW1xb0TX4M9
                      bei3vemCwz26pwg9S+ORPUAsETuAAga6MBCAvUs7tD0khOo8gHOwuyB0rrsAede8S+mhvUMzxj1t
                      /KW9LX4xveB8mjwFa5K9sB10PKcWsT0KFLO9EgU3PWpuWr3HKTC9sE/zOxALVrzzjL69p4yTPcfz
                      Kb3Iv668wE7EOqDF1DsotPm8k8bMPcKGSD2mpkc9gyCsPWCrir13lMC9iXGyPZmzlD0iyq29QBpL
                      vPaQLj0g14e7blI7PRjL17y0cY88WOEUPLm2yj0s6K28J+S9vbTZ1Dy+LB09sIZQvCWthT3CrEs9
                      aEUyvJ6sSj2OtyQ9LafEverWOj0BqJg9QtyYvWpacj25g6I9uGuwPLCYUTwr8Y49wrNpPdlqrj1g
                      G3u7GJ7XvEj5y7wttSu9rB2/vKdskz3mKUg9ngkZPaDtiDx3pbC97GmTPGrULD1H/FG9GP3zvI5u
                      UT0RJJ89zGjCvIzPtzwbm7O9SKKxPKDwdbuf9LW9gFuqOmKxbz0xea09D/m9PVAhPLxQ2UW8kqF/
                      PegWurzQDRO8dW7HPXWLlj3MgYA8XRlLve1ixD0Ao8U7aFVXvAPDqb3ITtC8amcPvda3Lz3iGyc9
                      wNCavXjuy72wVYE7SoAKvYt9o70Foqq9s+EevX6fkL26iJu91KLXPJgSnLzbEcU9WxmsPWqXdj1S
                      3QI9heGmvTrNqL0Y+UC8mmySvRWIzL1dhZS901PKPeCvSb2wlAW8bArgPFg6kDz982W9itR/PbyY
                      2TxQOuw77D2PvJcAnz36TQm9SrG0vSAZjLwAIpi9kN4ovVrzRD1AxeO6dpKNvRD/P71Albq8sKGx
                      OzUixL0hupk9c+6bvViR+LxKgy+9kCIzvBGmlj0jnDy9sR6aPWMvxr0zOzG9SU6fPbTGvTwknAK9
                      qPqFPMfYTr1GBgy9slTIvdTirzywkza9Sg5dvSe9ar024zs9sVKxPUxAEL1DByi9sAq4vaAaGr3H
                      v3K9Hv5wPSDDM7138ly9KXiOPXD4Irwwqjy9E6R2vZ/WgD10i7o8QPBku7AyBb2ma1g9DJjqvPp2
                      Sz1sG/I8WI6dvGjJN7xQ7m88iMSUvdaOUT0Yfsa88L9wvWDEK70K5su9aHEnvLBPL7wAYUm82vKZ
                      vZnglj0g47885yw6vRICBT0S03I9gFLFvHpORL3O8Yu9AD8rvMC5J7uYfEg8Vz28vdHdoT0EkQ+9
                      9AjiPCwEv7xyOxg9Mvx2Pcqub71o4LW9RwhGvaHLtD3asTg9ACGdOwBqMjuA9uM6Yzp9vQ3Wur1O
                      tgk9SHSvPFnpqT3FQcy9qbKsPag/GDzt+Je9CwGbvTDFP71Up988yv0bPWwP+DwAcsi7i/eNPZZQ
                      cz0wxoE7yzynPZBqDjyYaAE8TMr7PKnsiD1zBzy9ltgGvRA7ab0Cw62914e/PVoLuL1g6gY77FaM
                      vLtuqz3wME+9QoIvPRB5CjwPGLi9HYKOPSWIwb1YPTc80AhAvUuItz2F1KM9xposPQBpw720Da08
                      aJ3RvG2web2Ywkk8cUyZPXEuvj0AKqM6kpYYPY6XTj2AQWm8ULEcvD6yID1KG7W9crXGvRTshr0z
                      GSS9fUetvdA3ebyw/am9YKy2O4Dr8DvA8Py8JCHsPF12IL1CJEM9nSi3PWA9ZrsgHga9l0crvR/g
                      kT1aHAM9JwJ+vUWgvT1h4aY9TWt1vadvOb2T8Io9EEdCPKj5s7w2eqK9OhZzPTbJAr1gMWA79MCv
                      vK6IOT1ofNe8oXy2PUraVb3S2AM96GYIPGgUTrxQnJO9iBe5vWhEWrzTQ7i9xjUTPWbRIT0lOpU9
                      7ACzvC1CwL0ugmY9oAj6u1RLrjyYK/G8PR1CvXrNk71qo0k9VwWQPUIDQT2C+Z694upLPTAGhrug
                      6KW8DBSGvZnJvz14soS8sn9nPW3xvD2oeww8LdV7vW2Kpz2pHr89VFSHvCQG+DygpI87mEtvvDrY
                      Er0DYYI9dJvRPAATRLstvra9ceKKPXHSqj2am1G9slsLPXARKbywVBW8+p5SPQIgv72tl7I9s8bM
                      vbKkDz0KKA29G9nLvfJeEj06Ciq9apoHvehHW7zI8sQ81Fi/PAHIpj3wf7y99KL5vBULpD2ajks9
                      wCyuPE4nBD2n96c9h01vvRgYLjxdzoU9tzBivVnYyj19aFu99ls/Pc2qJr01kcC9R9aiPTH/nj0e
                      bJy9zI7KPFSx5DzaG0A9ACHVvB46DT2MQ5Q8AHccvXg6ib1WsRg9oPTfO3QDEL262wC92uIovT29
                      S71Q8J67KF4uPLBnd7xs5Q+9sigaPR1JfL0+vS89+8qlvYbhnb2HsLq9jcTGvUCLlzoZ1ZQ9MAMR
                      vaZ9Dz3S4zg9Si1NvVA7NzzVJ6E96PJ6PDSPi73ypRY9FNW4PFy7gL0q2na9o96evbYMfz0ki/Y8
                      GmIePR7vfz33dcy9uYTEPSICGT2glry9EZ2BPUqykL03dXq9Wc6tPRj5t7zPy6A9gOncuj6nLD1w
                      alO8aA8hvPeYIb0Rz609YmUpPUsZsj1boLW9YjZKPWKBSD0iJ049r4+zvQDNejzk4Qq9j1nBPeKG
                      aj3bh5E9oFfMvPdGR72GT2o9H8iqPRhcarxrjam9qtBwPbAutbv2QyU9kt8dPWuPor2APVq8Ag4/
                      PWEOtD1Yp6+8svhoPaDLlzyDDYs9/6KEPSN6nT24AZs8s486va/bxT199469zyCtPSE8rz3APwK9
                      6HePveIjcj0u7Ek9gMngOvqRVb2Ra6g9dmQXPdAWGLyy38O9ANhNO7A8qDtUv+286yaevWA2BruY
                      RT28APkSulo1Az1k1+I8O8q/vTVoyL2gUfu7lqEnPXjsib13zHO98AhDvXfysj3CLRk9IBnpvPbL
                      ET2Jp8E9W5G1PeNRPr1pkco9clcZPSBvjbw7e669Z8O5PY+Fwz0ra5A9FHKbPMV+p72LuJK9GJly
                      PGA86bt5cLo9NAsZvevEkT071b49c71AvRNJLb2oGzC8jJuZvEDHjzwX3ri9o2qovYdqTb0TsZS9
                      EV6oPZ3aIr2F9L09cEMfvACvcLtUtfi8sMvuOyJEHz327F09A5gzvU8buz1VmZ09kGxkvcPOeL3u
                      mJq9fECHveh1mTzhxKE9qGZdPNqQG70AWsg5oOC7PGj35LxgNxc7rIkPveoWLz2ZkKw9TaVIvaU2
                      iL3AbDq8v9jJvRY+TT0SQTg9mlhJPUMvwr0y2j09L2OUPWBCAzuid2U9g1lxvSrdXL2SpDo981rI
                      vZr4QT3Tnbo9upBePRL1Gz3QyuA7uspGPdDoR71s29c8kZSxPf+wrj1igyM9Xb2xvWqhRL067yG9
                      WOYHvJo7CD2Q8Ha9tHOBPIphaD2vx7Y9lLSXvNRr3rygs/a7w7WevRiSS7wDYya9Rh6XvVjXoDy6
                      K0M9NsKLvdqZVz1AkRu8FF/OPAiKyr0IcpK8+4iSvdGlxj24hp+9QyAgvbhxsrzkQtA8wOMYvZiV
                      JLykXc08KbmAPSs9sz0YhTG8z2eFPXbKVD1PArG9EP8ivKt0sD0RE789GZOJPdh8oDxaJoK9qiES
                      vbenmD3veo89xMuBvbebKL0a/Xw9Q2OSPbo+RD3di4q9IP6TvQY3KT2AFI29wBU8vSlzjj3NsaG9
                      yQC9PbBrab0zaaa9dlWjvctAtL1h8qo9xEDPPLGTsD2Xa7s9QK60vWDcV7sq8DY9mgWyvRRlprwg
                      6w+90x4+vSH5jj3UHYu9sA9XvfX1vj0ppMc9MGusu7FDkz0h+oE9D3/CPR8Ekj3NWC69ZGTSPAmS
                      xj3A0wg8MKtMPGOGVr1SC6S9GssGPUyi4rwquLu9lM7oPLe4K72uBV89ipOCvQnnuz1A71Y8V68h
                      vaq2jL0b3LG9nfhcvQbgeD3913K9ANA9PG/etD0TtZC9UAAyvTYOlb1dQ2S9PdI0vX4JDD0aNpS9
                      wNWNPNj5rL1aLUS9/AKGvScksL30qaO8AFAYuG3dmr32a5+9ItKyvc7kLz32lgo94d+YPaZbCz3j
                      8DC9mBX8vIB9Rr3mXSM9wCt0u9C4FTy9DCG9ghoWPdL6YT0ExNA8wnlLPeLebD0YrW68GhlvvSw/
                      rzziaH09QbK5PTCEOrzMJM888p93PRZOhL3z20+9ROvmPPYxFD0naEq967a3PZ1CQ72IRvu80SyI
                      PR4Xnb1rZMg9VPm2PMAYd7y0iIW8oqkMPfSNlzxwy188c5O3vVp7yb0/VsO9F75QvVjxo7xo8RW8
                      QP7LvHiy27ys8ps8rCyZvCL1XD1qgS69PWd5vZNkHL1izk09NioUvfJ9gb3iz0g9fhN8PXiQlTwY
                      hIS8VDfjvACsArlAAQm8k6OZPepUS701r8q9uKuYvJnQyT1YlnO8B7gdvVoCvr0Agl08gJp9PGDz
                      o7zXaJk9sDiyu8zG4jygge078rIAPVd/tD1gOg69aN1LvMzyjrx5VaM9c/iZPTK7Oz0HU8y9JiEo
                      PU1oLL29zY89LA3mvGDUUb0Yjgg8IDRLvWg3ojzZKIc9Vcm1PVxaD70b0ba9Ql1zPdCPXTyKLVy9
                      0BqFve52i71AyXa7c56tvad7Q73ATyi9IRGIPeZqMT3tbr+9ddeSvWIBZz3s0568SM6VvBQIib3Z
                      M4I9lE/IvGWAzD1zvb49QBUBOyjReDwKwcK9EmqRvU0PLb30/6Q8gKSGO+MDmL2ISI69BJmLvVaB
                      Hj2AuFC9G6SlPXEHjT0Ru4s9Bn0xPWLMVz2Zrro9guIaPV0Btb2ZB4U9zayMvXHRoT3twKG9ACME
                      u3DHF73Pb5Q9IPiJu6rVZ73IwZa9UFYEPJQ6vzzn6Hy9QtsTPeQnib2qdEw95EDNPADiljmiUBk9
                      UvuvvRp2Q71AGge71XafPeOfLL1dZUu9gBjyvLA1HLwwVlW9NpgPPYx5trynix692sqEvaZ/Lj2+
                      Dwc9UIJ9PCMGo714LKi84MGcvH+kwT30RgK9J5x4vcAXlr1HTGm9Wj4YPR9Bpz3gvrc8AFeYvD42
                      ib0IN4W98gQEPSwy8rzK9pu9Smc4PW7OBD2BY5M9wP+kPEPHyD22+lg9rg2dvQjnt7xoxks8LHMZ
                      vRjygrzGMW09IN2OPA3+I73+JKW9uv8HPZzqFL0AJaY8yqZCvcaCdD3TBMS9QAoNPCctM72YeKe8
                      /RNsvdALrjuSHgs98EFjvQ8Cuz2eEDA9bvodPe5Ynb2MW5u8MPM/PHuRtD39/JW9vtulvaTC2DxQ
                      3hc8Ahq+vQDwnzqTRV29Ft4IPQD5f7tWl6y9GrZVvVwb4jz/Brg9lr41PR2Zmj2A/QQ60CfUu8Oy
                      aL1dZMc9AMS4PDoWOL2CV1Y9etNWPWD1lrv1boK9pNX7PGlemT0nSCS9cz+VPbj4hLzV2IK9u6K8
                      vQuaiD2B1ZM91U+qPa8ayr32ED89b6uyvZoZrL2SXw09VBOxvFQXhL0sIom84HI7vWXzyT2bxa69
                      Y8DBvVr3Qz0oFre87CmQvG4xJz0QVJ+9UOjpO1SthTxk2Ng8gKnuOseLoD0zBco9UtFxPf+igT3C
                      baa9wCjovEZ1BL1jH5q91yq8vQBNZrpSyTA9WxCoPdzP3DwwTZm9Iy6jvdrAOb16tkK9wI9yvAct
                      yb136Tu9JSqpPeKwpL2gt4Y8xErZPMZjQz3RU5M91RWgvQFIyj1S6Xo9CpWMveBlOL2cMAa98CVy
                      PE85xb1wm3G8mOPJvOiqpr0Vyoi9MpE6PQCGMDyJDLI9UHyou7l3sD0ePzI9aGJbPMDnBr1wmoa9
                      xxKEPYWmnr2z07S9JJuCvcOfkL0M8Ys85gwZPaizNrxR68U9+1fKPYXppj0YGQu8bNe2POJzFT3N
                      lTu9zlinvTmxuj0wLa27sSiDPZuVlr3DWmK9TWqMvdLaPD04qJo8zQhIvS2Hy71tJzu9mA/svPFC
                      vz0MQ588IFPBvADAVrlM0dg85kOhvSZEQj1Bb7g9yLW9vFCA/bvmtiQ9BUO3vXJ9XT3gbOq7MNOT
                      vTPTtD2Aa6O8pkUgPeQP3DznMcS92mJzvUCsBr1v+Ma92rwRPYDHuTqy6F49aEzrvAww/7wZgLQ9
                      22GYPYB7fTyvYZg963CoPeNqhz0XCFm9IcClPa1eqL0sXP+8wDSJOszxyrwJHIA97QikvfN2mr0t
                      aYK9GL3WvK9XyT2FhpI9+jN9vWbvib3cPe88mBw4vOfwer3yMT4986+oPcCG8DoS6kc985afvR2F
                      SL1iQ289kCVxvNl/rj3TCEO9RqMyPQDa4zrAABW79BfhvD9mkz3bbbS9gVmpPRjUQDwZHas960jI
                      vSMVeL0Ao9c5UgVYPVgssry4C9i8F23KPbCcsL2bLpW9N7umPb0bUr2Af766+fK5Pbstpz1pBb49
                      +gtIvWASrDxaayQ9MJBVvDoOVT0oZBm8S5W4PUaJkL0AqM06+iy/vQL7KD0C2qi9Ql5OPUA6NLyF
                      hpY9WpkxvRDALr2dhKi9UloLPatbwz2K0W09pvZbPTopRL27XJq9JfaJvefKtL2g44q7hBrwPArH
                      Bb0yyZG9Kq+/ve2irz0oQci8vczAvS5so70nq4g9KSypPehrE7wxq7U9sOpGvCji8LxMy908KdiR
                      PRqnYT1dXk29532/Pd3jPb1XSaU9SMGNvOCAvTxG0Z+9I8OXPff2jT1Rqsg9JeatPc+Rij0+fWQ9
                      G02SPSLQlr1ajGq9uvOBvcA6y70SvDU9jAngvK2Yvr1WQTI96M+LvTWBhb0GHk89NUejvTjdqLyw
                      S028J3RNveOdsL0whAe9BnkBPSjcw7wFt4k9v8SEPZUBpT108sk8rfk7vfrddb1YwRo8F4RQvQ1E
                      xL0iWDA9lGgQvebcUz3s4IO8NJWjvLAkQLwAvoq5mMisvWqrCj31rMM9/uBDPSmgrj1gMeg7GA1H
                      PBSKybzQh5i98EAYvKAsfzuYlYS9GpscPSLMZD3yu2898hLKvfC+frzGpX49cNg7vNoMYr2Jz4w9
                      kON0vAp9tL0QFKi9MINLvCjwVzwbbo892H6HvCqMYz0l+sA9qjQYvT1xrr0ieX494B5NvZ0+dr1Y
                      Bo28EqiPvb7MEz10zKM8iwC5PSocUj3Vs7W9QyjAPS1vpz2+1DQ9DCL6vID63zsYnYW8IIqEO/2x
                      wj2AENG8UO5/vciSsr08/Nk8bloVPfMWwj2go+K7ehNVvchJ5LzgtKu88PkfvDdvyr1esT099oqC
                      vcBoErvClBs9xtxhPXdcb70AXYu9dDTnPJCFRDzirkg9FVKkPXrtS73i7VM9AJ9Xum2wSr2JMbg9
                      oMfDvcA6PjsnPKo92DOlvQzXljxCEEM9YwSkPSCJ7LxbZZ69k2yxPVuEub24u5a8HrifvUBBV7xs
                      Kom9sS65PfpKs70O0RE9IBGxu0Z6ZD1Yh4+8JnhrPSfjsr1HXYs9ygpsPd3xoD0A4XO7U7qyPViB
                      yL2MguM807g0vRKOKD1kefE8rgogPTdIrD3Daz29LAuJvQCByjvMm7G8KILZvMjDwb1QLbS9vctH
                      vXH4lT3AwX08KarDPTv0nr0kw+M8UABZPHOqWb1EBfI8wIRevDI4Zz2a35u9Hu+bvSIjDj1QBcQ7
                      AowhPeAVb72glMq8LCWVvADg3bz8yv48zNQGvYlRxT3s9+C8oBmaPENUKr36Nja9VMb2vL09d73m
                      YCY9wlBFPcnOqz0dKXu9OoVePRPvZL1vdJE9rp0nPRCKOb1LYI69AHT9O4DQxTxMQIG8UMeJvbAV
                      ir3NVZ69gLuYu5ze8zz0L848uY2nPSiZjr3AfQE8GsJNPbICcT1AKbY67JGQPD1GOL0yeQw9dZ/I
                      Pdm3lz3wQF88rJy3vIi5jDzAfnU8qtJ7PdQfgjwhI8w98IwfPFX8gL2bYMM9xrZ9Paccij2M6RG9
                      6molPbJaZz2wtha8Hd6cPamosz1Czjg9MzifPdUmmT0YiOe8WOitvBUupb0QVmI8AhNGPZRy9jx9
                      7GG9LfuFvUCiWDzEXds8Dm8HPXzY9zyEavk8ABUeOyAK9ryYWrK8+O2UvWCKOLv59KQ9NKvGvPPL
                      er0ReKk9W1rLPXkwuD1zCbS9t+kuvUdsUL2w+ZC798ZhvTeBb73XQiK9A4q1PejOw723OrW9QAgU
                      PLsnyT04KsA8B6dMvaAjX71EZ9M8B46pPckOqD2/wp09SM6+vdojx70SRng9GjumvYCol72Gu0U9
                      ccisPSAY57t25ig9g1ZDvc21wL0pCKU9pJzSPGyzwzywaVY83XajPfgwuzydqVi9QE+yvc8RqT2P
                      QLG98AQPvU6aID2Y9Pi8762dPY2WqD0W3F09YPUsO96nej2QSCo8APqbu9puJL3jl6k9AqyPvXsY
                      vj0ML6+8pyOuPYufvr25Yoo9Ou+QvcAQdjvjPq691AfQPN+KxD0Qx3W9G6CFPep9JL2n/Jo9UJ2/
                      vZHQoj0qBA491vdaPQCGzTl8n+Q8zXqmPYxM9zxUYKm88n/FvXTJorxgS628zGMEvS39K730AAy9
                      IB/qvCpBV73t9LC9UARlvaCpO70Ai368ZwqvvRgaprymdpa9UP8jvbvpsb1y96+9nN3oPChXsDyw
                      S5A7oCarvcABHLtu2BA9seLIPcOkMr0o6Ew8IHyZPAI8wL3tRnu9mGOsvZB9wr3aNEO9cCopvWxv
                      Fr1BWrQ9Si21vQBMk715Ka09uM6hvHbTJj0gTqy9dAyAPPHcjT07SYc9dps5PUesbb0w/Xy8rzi4
                      vdipoL29rm+9SHqMPAA+97mwzrm7rXUtve2xlz2a4Ec90sGhvTBRfbzzLao9ImeLvRI+Zj23jVe9
                      IpoSPRvgyD2yYb+9UslIPaCDsbvnLsW9EzCdvYyvobyUJ468jDvcvBSO1Twlw5w9QXHIPaw1i70j
                      H6i98NZivVLjDz2CRnw9xwRPvQ5VET0Ynaa9ZCAYvZedqz0Sq1Q98GcGPFpqY73V/JY9U0mdvV+C
                      kT10rea8Q8shvcC2Nr0IRam8PeeBvTJ0JD0AkKy5snLGvex5r7zACRk8yi3IvZNgZL1fraE9M6+n
                      vYievzyAG+U6R4LBvSQi2jzXq8W9nlcHPaDG6Tsasi29QF3pOniejbxXb7m9+l5GPeyUhTwdB4K9
                      1Z+gvbBjS71JgbM9NxZ+vYjr77w5NYU9JGvlPDD0tb30jdi8gP+8uyqBXL0jxr89rrWCvVsPyT2a
                      Gr+98GVZvHNSwL1Y5k28peqvvX5HHz3CeSw9D1TIPSQT9DzLSZ894KfGu+58nL1SXEE93kxNPdTa
                      ozxAf5s8ThBVPchBwLy/rK89sJJHPFK/nb2CYHc9RJL+PGpFk72AlRQ6aBcyvESq1DwcSRC9Unp3
                      PZoaRD1/6aI9+4ihvXM3Kb0a0j69ydimPQ59Wz2lS7k9VmM0PZhll73iLzY9gD6GO9QA9Tynln29
                      WbiaPQn9iD2jE3i9ndhOvbVYmb3gmam7OGGuPKXfoD2Q4Y29a1O9PWzAyrwA+lS5UhpjPS1/Ib3Y
                      PYw8GkBCvdAbR73QYRi8e4u4PSjtADzKZRo9sJarvbRavryg66w7MF92PJbjlr2lw7s9AASlvHC7
                      ezwDqkm9//WFPTrlY71wCay9rmVwPQBEZTtiPBM9kvXEvcVsjj0oe3+8ItFtPaL+Uj1jNLO9KHPA
                      vb2Ra72q6UM9Ea2LPSjoMrztY4y9fYkrvWaWID0Z1sQ9QFUOvcji3rxHrlS9wB+uvXovqr3KxmW9
                      LYVNvbJCNT3UZto88gx9PRJFDj1MTou8QlA+PdqMPb3EjvA8bQq4PW0CP7390YE9UiHEvaqkKr3S
                      E7G96hZ2vf+Gsj1+xiQ9R4m8vTCFuL19mTe9YA6eu3nBkz0ggY27uC6gPOfOmj2BBIY9McOnPdeg
                      t73UK4m8uHOlPJ0Zo72kwPA8mDXuvItil73He6Q9mNj5vJdTYr1yJEI9AJxpu/DxQrwQ8wy9QBlM
                      vAavjL2AyRO9YpEIPbchr71YZTw8SO2kPDhR6bw6mxq9Ndyivfl7wD3AE1k7g+K7vQAIhTk0ToC8
                      AFZfueiTNbyC8rO9BIn9PH7vhr3OB569DVCmPbBKl7sA+xq67MGQvOC2Ir1+TC89vYA8var5u73e
                      G3A91uF6PVpaF70bXbm9gL0HvdCP6bsAEY69f5W9vQhbgL1Ay8a8gklAPfG+wT0leck98lUrPWzF
                      5LxA5Z+6xlKfvVLVQz1M18k8vv8BPbBrNrwjPsQ9SYfMPeJHYD1/Oso9ZHPPPGD4mzxUmeA8KHEs
                      PFISUT2qDhm9LFmcPAXJuD3dvmi9J7oevWLABD0d6JQ9rTKLvcOXIL0AMLG87JXePMwWBb0n4mG9
                      aQ+fPTAEybu4A4k8QJ6Gvf2/fb0T9R29juJmPRhNyr1Avk68NFcCvQ4FfT3E2fA8lGb3PMd2uj0Z
                      VpQ9UWuDPXCnDbybgsc9yrY9PWi6dbxQQIe7I7OVvQCUODr7zJ+9gI5WvJ7YUz19bby98v5jPS4x
                      fD3jMHm9YH09u8DVN7uQtmg8rPzKvMDOJrtaVo69uRC9PXxM7zzpWpM9tFqYvLOZvb1daJg9E1ie
                      Pf8Nvb1l4ZC9XmwgPQhohDxsX4q9872NvYCzerxsNcC8Qih5PQeax72DnMi9J89WvVLIEj3AbbA8
                      96fHPVL1Sz2aSYu9HQSCvQAMPbnCjIi9oCX5uwAmBjslVIO9/y+OPWhOkL306La8Wm5WvQpucr1o
                      44k8rgF2PSVNjj36wgK965SbvaDMM71SDFw9/WqtPc5Hlr0Ki8y9evhvvTDT0rtASj48vXGfvbCG
                      3bul2Zs9gG24vJ9ovT2qn6q9gAP5OkDHvTzqsQk9s2lmvbopHL3S4Xo9gBeNOvLzu70Qulq9AruN
                      vQAxwbyA/YK7nC/YPCcEV70wjqs70yvGvajNQzxA6608ImKnvWybw7yi+WE967ufPZmrjT3gBS29
                      Tjl8PbbQSD3O+Gg9Q5omvdkPuD0ArUw7BuB4PTBIfLzTUpE91e3KPXpNOD2E8oO9GNvCPAc2Lr34
                      3pY8mKv7vObCgL2IhqY8yr8AvZkTgj2njao9lXzIPXCKeDwEP9M8rXidPQ4hBj33Ylq9V6jJPbew
                      Or0swga9wttsPfHdgT1IM5K9ABXVu345Xj1E+PU8Y1q3vcj/6LwhUYQ9fStyvUCcVbtgIvK7oo1X
                      PZZTAL00Wbc83olfPbATsTvAKOe6zi5SPcCmULwYHJG84EXAPACElTqHgaY9YphHPSBN3DvT2Ty9
                      wDLWvFPcXL2gxMG7csxMPes2mD2P97O98t50PXj3vr0ADTu6kHYXvVOhtD0IzMO9ACfHvE3XPb23
                      KLo97UymPbWysD1QYTg80E2Luy26sb0XWnO9BvBmPZ8dgj1zxb+9WvpRPeDEhzsoc4Q8LkxHPQ24
                      Z73XpHm9ICLsO9hiLDy4mYG94s4iPQBHor0AO4S5+DLLPD0Koz2SLJK9ay2UvfP9Vr0VQ4091EDb
                      vIJAaT369HG9AExuOzB+VDwAcEO7SoZIPcAjXrysx8u8czW+PS2Dnb3gNZS7TVdxvbRCkryFKrG9
                      GhNHvVUeiz0C0Gc9+LeQPII7eD3oEye8neKnPbsPjD3B7bI98ZWDPTXFyz1wUUY8YuUpPRLSMD3y
                      McC9xOURvfVThz1o35M8x1MivVQphr2GmQO9LJ7PvClWmT2gqrq9mPpyPEBDu7wUdJ+8/T20vQWW
                      jj2DUak9jAnjPHB0dbx0YbA8c7m6vUCtRrzQlau9YNtLO8dis72QJyu98Ol5POALGL1poLs9yZvB
                      Pcw51DyWDZ29RITtPFh0r7yQAIi94LFmvdRRwLyAsqa8aMuXPIyV7Tzgmqy9kPZwPBCrur1Bqp09
                      kO9ivKjXe7ytCHG9gHO9uvfktb2Vuqs9PC0NvUArpzoqbV29W5CsPdj5XTyCTcC9TGPxPPL9aT2E
                      EPQ8/xTIPaBGgbwbBa89KKnDPFjQqb0AoBu6fcupPU1Ibb2BeKM9WCOwPPNjtj3kctA82JR5vN0u
                      mT2SXKq9aEBHPADYHjrC46e9Abi5PTMeMb0jF3G9nhY+PYLDAD1eMj094vVtPbz5ir1Qg4Y7knsw
                      PQNbjr3okre9c0+9vYgJu72qljC9l4KLPVY2oL0w4D08xmCZvfrBYT1zbWS9a1CBPWDzPztS1W89
                      P0amPSDNsLugAWo7yvIzPdi0b7xUr8y8U9qUPRC2drx0lhe9+MzQvLW8qT03dEi9MoMBPYA1jzoA
                      Wra6FoQLPbRekjxp57c9CHOaPEpwu71yMUQ9Xewhvfwaib1MD5I8BTavPet3mb0oU0O85/a1PUD2
                      YjzA53C7eECNvcOCd70A1gu5DfS+vZAhYryirXo9AJQBuqg0/rxIs5I8oLuIvGACfL2dqq89U5Wj
                      vZkAqz1ZVMg9tBSovAdpXL13oru9FUOAvfg/lbzAAfy8QdewPevjjz2e8Eg9kOVUvVqBMb1AhXY8
                      gBSROoJfKz2GsgM9M0K8PZC/xr1Dlbi9wP6wPP2zKL1Ja8Y9acqhPWXPhT3lt5S9r86bPSi/aDxl
                      5Ik9AGXZuYc7gj3QPwS98vA9PQDrfzqGYIS9YIe7u8xJubyUCNQ8ROrhPEC0Y7y6ihy9hiwXPYe5
                      OL3R55Y93CIOvffDsL2AMLS9mnITvYqnbD0YeEA8UHA+vHsMnD1FFKe9XT9jvXkQsz3XCLU94Fyb
                      PJrSDD3gbv+7U26WPa0yOL2XO4Y9YPVFu6iMZzwKbTM9gcTBPbW7pj1+PYy9EhlfPVD7NDzAsTi7
                      YFrRO179QT06pgs9ozw7vU5Kpr0OBHY9CvJOvc10hT2g4T29z/WYPcB4tzzb/MG9gD2Au1jTAzyz
                      nl+9aPTGPG75nb1Qca+9wO6xPELWIT0y8ig9mv8WPXSH/TyXfW29M1VRvbp0c73r/8e9YhVwPVOK
                      ur0YuGS8ZqSgveKbUT2GvRE9HDncPLkoiz3arlA9O3euvQC5jLstkbU9IaKYPf98jz1ozWi8l7W/
                      vQxMu7wYAIG8BgdDPUy+A73Q9Dg8yL6jvXD7LLwmGTY9PnGjvahNxbzo1oI8k8K6PdixzDxsJqc8
                      /moqPRD2Hb0R75g9Jt1KPTNrvj3HX2G9AI8Vuuq8pb07w6I9ABB/OJbyjr0AbtK7bX+dvVf4bb16
                      DSo9wZ+MPUCHy7wA4G26jnQyPdDTpr3S0Xs9ANjquKDCrDtQrwm9YNAju4erb72dzcY9YAequ6sY
                      qL3jN0u9EFyZvfi3ubxEIPw8NOGUPKAhprtPB7E9ouQOPQCViblm5I+9YJTLu8TV0jxLIcI9AIc2
                      u9oQGb0AIAi5MjQCPaBdoLsnS489HU6zvV6Gh724b6M80JqROyWZhz1qsgg9elUHvSWhoD3U57U8
                      NLSrPLAmODzM1pq81Oz/PFEGij04xcK8jJWXvHiipby6WzC9cvBtPaCLlrxNYrc9L3euvbmnrT3o
                      M3o8pzvEPU7GaT3Tyzu9gKo8PMDsxro6PVg9KCbjvNTEl7wG+BU92JeyvREYnj2ShgA9sfaGPY/q
                      xz2dFcY9tIHwvDRbqzyslfc8DMrjvDIgPD1G4QW9havGvQAGULkCkDc9WCS0vMr4sb3xeqI9WoVZ
                      Peg7rL3HW3q9oVrEPVv3kD1tLKw92YepPSXQxD3ilz09nUq/Pc1EJb1YZsG9sJnvuygO/rw6ShC9
                      C9K6vQCAvjZ4H9W8lw9WvY04lb2FWqK9Cst+PRjITbx2C1Y9LkWTvVggfzxgHRa9bym0PcBF7ryS
                      jg49o/mhvesJoL0byrI9+1bEPag9TTxUKLO80PDIO+CvxDuKkUu9x+RsvVjDXbyJzbs9ImR1Pagi
                      tLwM+eG8AjCQvaApob39Fr+9QnpkPRCRsr3qyKC9TODqPNCIsbt6GhW9XtIjPYO9hj167G89h2aE
                      PeckeL2YV5i8vrZUPd0wtr0X4Ue9lsOovaAWzruNz0+9sHKLOyBLGL1d0lW9UIfbu+D+lDuW6Tg9
                      R13EPag0MDyoJKC8WL16PLYLlr1xtqQ9MDGuvRL8Fj14uKO94uW7vVR8h7ye5ZK9YV+6PRIhTz25
                      H8k9yHuOvHnlrz2AC7C7nlF7PTS7rLwA6bm8lm4OPW52kr2UfLU8GDNpPFgmXTzHYZA99Hy6PKrH
                      t72zECK9KLU0PGVsj70XrmK9qGuZvOKZej2s5PM8sOKlveiEF7wy7JO9uI6RvGJFDj3w+kK9anJv
                      vUXRqD3sqrA8OGyGvGOARL3R6qA9wnofPc4CGD1wW429giyvvWYyKD3QRiG9ZBPNPKC3v72Q/3C9
                      yu7IvUA9sjyRA5o9ZxNfvYWKxL20T4C8KM3vvMnFpT06DRY9EBdXvU6LXz3aehC9MxmHPSAlpr0m
                      U349sJt/vXYxbj2MoK08ICHzu2IIRj2WMS4968/LvVA3Lr3iH6C9QGPSvCx32zzYkSS8BN7XPF89
                      xr3oUzK8GPwOvGrUa70Fj8K9W0yhvewkmjz+f4C9oKbvu0IYRT1BHLM9KDk1PGiMULxyi5C96N9P
                      PCWcjD0Amhu8Agc4PbQu5TwlgoY9QOKCvZvtvb2hw5s9ECiyvVSSzbw57ZY9Uv9QPZwE+Tyn2F29
                      Kk53PcFPsT1inmc9dBPJPCAgtzu9/GG9cs6SvTZln70mJBS9hZqyPeAx5bwFuLI9hilSPXO9HL35
                      pKI97upWPUpfaz00+a+8QNk+u3KJHz3TVH69xqkJPYTn0TyzJ789mM6TvGxhkjy4Zpm8BhdSPUfI
                      eL1AEiK82UKCPSDVXr0m0zE9dnwRPZiZrLxgKne9sMIXPAzh4TzIcd+8JT+7vaPxfb3lYbi93S6M
                      PeOwwT1zU5+9ftVCPdS/kLwgrJQ7lDKoPMn4mT0KDjW9AI/zO+Idpr1ZUck9fdyevZcYML0wiGC9
                      7r4JPQbjPT34XYe8gEqHurJuhL2ADZC62OILvPT3vbyNPWK9AEvCubJEdz0dX7K9MCCgO8qHOb01
                      JYq9ohtwPYOtbr0AwA05yBuUvSfDrb0Z25Q9pihOPQjXq7xSKry9tsQbPWabrL2xdIk9QPr5vIYH
                      ir2MCMK8j8aOPYfOKL2yWjc9jIWQvGJgNj1qQRs9UkYGPfCAOzzHoIA9qlyUvTVclT3Ys068WI9L
                      vJsyvT1CDCI9xQajPawb8rzmUlI9p6elPXy54DyAmSE616PEPTBKybsn87m9MjAdPdcbvz0+L2U9
                      qK21PJhLBby4AKO9Y6HCPXDMFr0TXXG9KGZsvGA26LtIH4a8E+vGvej8BLwywTs9jFSkvMOgvT2O
                      0RU9APuxvKSu8DzUG9Q8sEEjvACIvTo977A9cbPDPUDrLrur1a69VI/WvNmvrj1Ayas8/n4mPVgw
                      dDyGgFA9Lyu8Paxz6jxQhIu7eLC0vIxNmDws6eO8AjJpPdixdLygtNO8gHMJvD3Xhz0Sfk09QQGD
                      PXffcb0Bb549qYCCPcMFsj2OFwM9rOemPOCXOb1sLfE8QFkAu+orYr084Oo8KfKKPdUAjz3ZorI9
                      CBuwvSDtvjw6fLi9tmkUPSGNkj1GNZ+9zYMqvdiPrbwQ4Ae9YWOTPbAJjrteAzw9mH3UvJOvhz1M
                      jqI8UZC4PTDS3rugtkS7QCeePNWWwT2wEtO7i1yiPTqwm71AeWg7oodRPaqfVL2FUru95sZrPb7g
                      n73yyCM92odvPV/ryz02pSI9ZZq2vfTPvDyAYWu6Q7CWPdDMwL1lT5U9236XPUfbnj2QCma9N82i
                      PXP9kj3QBcU7YYa9PcDSJLuFnJq9Ae2OPXtMlz04LpG9/aZOvdg6vr0YwvK86y6fPfLwUj1Kkru9
                      9BTDPEK1cD1Qf4m7zFqhvPJFPT3ra5G9onFMPYo+QL0whUc8zKXuvACGK7tY5jw89LfNPH0tVb2g
                      dSa74K8GvSA+fL1dcyG9ciwaPZNJT71z7Ku9QI+wvQDQerjqPhA9g21DvSABmDskZeE8lOvsvK1A
                      gb1RHbQ97Pv4vFIHXz2uWXA9iLyYvXIkIj0M9e48mr0ivaqUPr00gr28QA8GO5H2rj3aMn09xs+S
                      vXb9RD3p3bc9ZGTjPGCH67wU4pg8Po9zPSqrnb1dlm29o82qPTKuZz2NJWi9NlsWvTYJZz38wOk8
                      YK7HPFp8Db3wcEI8dFvovKCfzDza8xK9MA7EO2i/BrzYfmU82JoCPNMNgj2kBeo88A5NvICtcrzn
                      qWq9LltmPWp/fT2Ooo69gqy+vZSt+LykZOk8p0K4vZ38Tr19oTK99MGfvG3yuD1a3kA90uIxPXqd
                      Iz3ALXQ7cJgdvRPtQb0tW4u9AE5hPOzm8rwm5o+9QLeYvLBFazxFxb69TsgqPXzc1DyiFiQ9A3mi
                      PVAZLjwM8fC8oEGUO4KZYD3Ykxs8oK/ju0NeJL0kG4S9csGBvei3jDyksfU82F8vvIQ4+jzWSUs9
                      nmgEPQLWLT21uaW9AAyLugK8YT3eay49yNLKPBQO0byKxGk9obinPZ46Lj1T5JG9KIKJvfa9Yj2A
                      8Ik8UKrNu5PMgj2YN5S8aEN4PDIosb3vlIM9ArYFPfB6Hr1zZaI9nvd+PUVgsb15OpI9g7SWvQQC
                      F72NcIW9FOChvD8Cpj0EyuM84hEDPdimK7wsn4e9KXW/Pf/vyb3NylC9XaW9PSCAqLz8EeA8gDib
                      uhEttT3wzgu8QICNPNRPpzxQcxS9oJhFu8XtkL2HDGi90OONO2idLTww/dq72hwjPXKPej3q3ge9
                      8uIaPbp3L71Axlo7WfWfPWzk6TwwRpO96aXDPfLfmL29xoa9dViRPTostb240va8GdGIPabZWz1F
                      QoO9kBakvasqsD1aA7q9QJj+vFCxu71gFNa7oOZ6vZHIjz1Doog9SESWPPeHMr2OvAo9Dk+MvZo7
                      v70TLpE9EyBfvVM4lT3+1BY96CKjvScgHr1QaNY7QCXIugAw+Lzm+Yy9PAnsPNWBwz1BqY498wOa
                      PbX/gL0T5h292ANePLuBqD0A2Ka8gNmsPLeXW71aQy29SI6+PHDjsb0AiQw8wCaxvfTXmLxaIi69
                      K82IPey92TxqY1G93ucZPQrfKr0oMIG8tN/LvGEetj0iRpK9FMb6vPwh5zxk0ts8VG/IvEw6kbyR
                      GIE9IqVrPdAewDtRRJ8981BSvXcyer0Vd5A9U8KTvb2rIL1YeIS9AD8RvQDibTwKpUM9Y5UjvVB8
                      Sb2Uzdg82PaTvVuhpD3l2pM912yxPcLjVj0Qtgk8MInbu9pLg71TPia9AMQsu6DLfL1KLEo9JZSQ
                      vQmpkz39tx69AFg8Oo/fpj2lZqc9ALSGulicmzxYlQ887we3vfpIIL3o0s68g0XGPcn8tz30sPE8
                      VBzDPLBIUb3ssK48gIPtO45for2znFe9OciQPVDJdzzxsYw9+owgPXgblr3UgYG9LO2FvLdrJr0L
                      h5s9IwucPcKWkL3MJP287lGnvQD3gLzdao+9lxd7vbfjSr0Oeay9YKfTu0Whij2gM0G9s6aZvaiN
                      yLxBboM9Yqk1PWjbmzznVF69bdrIvXqbBj3VL7g935HIPXgbyb0jYqw9v7GFPQrBqr2QuTO8jkql
                      vcD4Rr3sgZK8Wwu9PRSMjbzo6oa9QhkSPfauAT3MjJk8AwpJveRbCb2tB7i9hceMPU5yID0Nkje9
                      uKenPJgilbxR+4s9mHeAvDNRtj3zs7u9t1nGvX6gfz0oy7O9d3cyvdwQ8DzSlhw9SDyHvGGAhj2p
                      QKQ9AHN6OlQ9B70t4W29AHkhPH2GKr0UJIa9VN3+vCgzUjygI769JVCzvTQHi73yFXg9VTWQvWyK
                      hzwj/q09kLZ+vOBjo7yDBia9mDxNvCotkb2DeLO9kfyvPYLCOj0gSgm9Anx6PVgWOTzJnLw9IEiT
                      vagT3rxRrIs98qgMPTcqub2IApo8viosPelTpz1A6L29wDttvCCCpr315Me9qCCtvIrNmr2r/7o9
                      4M6QvUiZ7rzqLmY9FFTGPGoqrr3K8Dk94S69PWKxZj2teo09CDLnvBjuYLyYcC684FN3vQAeyTlQ
                      TU08svNZPWcBqj17CcW9wFzCusz2nzyT3zm97Ut4vexkrbwM+Yk8NLiAvb5Yej0APsq74BuFO+xX
                      nzx9M8C9lO/jvIyDyLyJ3I09W3qRPeDnxbtA7lw8Ys5dPb6lZj1bU8y969+dvTA8UDzYrMk8mP6E
                      vX1Vf71gBye9guK/vUMCiD1uAWg9O0TAvdpdQL1kPOw8DJeivLBPQr3Lk6s9AMNBPNrzPT2LLLU9
                      dCvRvDPgxr0jwz29t4F/vZpzd73ayFa9G0u0Pe0APr1hXMo9sNCFO8b0JT1lvri9N89rvZ0/o71N
                      TW29wBuVPDhkxTxD2ao948Y/vbJWFD21kMo9f+ewPcQu6DwBbbc94qdOPfzGFL231Ci9QKFMvRAa
                      JrzgXLk8EqStvQDFejqwMjk84KrDO9FotD16aHO9osYUPaLWaz17dcs9IGPluynfmD1aXsi93YFj
                      vah7hzx1wcg9Y3EyveDNnDy0Bs48KpA7PS97nj2u6kM9cxJMvUfLNL1wRSU8w71CvYZPTz2ALCi8
                      A8dqvXketz2munc9or4vPaBx2Ltt9Ty9i72fPd7zQj0AIyG6Ts5EPcA9BjthBI4924y6vZr7Xr2S
                      57O9ATGAPf1OjL0pX7A9mNzAvTa/SD29hMO9FDAYvbCBoruI86i8tFmIvK21Q72AZwm8wCytvAKS
                      mr2aCA490/+ivUzuyrzUK5g8wC7DOgDqH7kOYgM9oIJWO/cnvj0uFQw9+Z/CPVgesTyLh5q9vKnj
                      PNT9B71gQTY70uIPPehqV7zAexc8GFGkPFj2zrx6aSi9tPURvSxN0Ty/T8m9oC5QvVjaUjzqnBc9
                      TSExva02hL00SYW9wOOFPGKVcD3OSwA9tE4JvUgSyTy21Ka9KfC2PYhemb1o0Mm8cvJKPV3rKL0P
                      +Kw9SVuqPZXUyL12bBw9ijesvS3lsL1wslm8EJlhPGiQnbwkwN88h9IsvThtk7wgLYM84OEFvSbI
                      Nj1YG248vmYPPRv5oT09Yr+9Gh5gPbx4Cr1Q2ES9p0aHPREhwz3gyBa9YALvO+hrLbyAxAK9YC5I
                      u5YvIz0AGom9cCVovcZ9Mz1aUBe9gKXRO8miqT3QzFu8FnehvaxVijyoljc8rLWMPFQRzLw9K7m9
                      ADcovQDXTrt5B5k9klpBPSIzRT0QSQQ8Os8DvefKsr1d0De9GG57PG0Gw70wEgy8YHXgvNV8q70X
                      isg9FuMJvVPcxr0VqLk99rFTPQcBkj2oofS8YmNYPYehKr1udHM9gOFWvXzDFb0oNzs8YD0Lvbfe
                      rj166Ia965SYPTD1k7sAaKY8NsMMPVOwsL0KXxE90zlivR2Uvr1S/iQ9dfu3vcC05bqAhoW6+9GO
                      PSJSZD38qxG9eL2BvP5upL27b509nbqQPbXUrr1iLpO9dLrivCkAnT2tIo89kuWbvX72gL0sjrq8
                      gtoOPZqrWj0zn3a98j2wvbB1cLxzXp89/m2dva20bL1ghKO890F3vSgGDjyAFnC9MCB+PCLbUz1+
                      WBI9aa/EPa2UJL3o0xc8qsGJvXOrV71uZAg952EuvZbBF70EgP88Qz8lvXV2yb1mioK9Ui5IPfvl
                      lj108re8wHHHvaj6qTz68329ZPIDvYCdP7qAduW8wVCLPb2hOL08ygW96ISIPKTSzzynLbk9eXuS
                      PfccMr3d+Yg9dtowPfhYl71j/oI9U2hUveMde70ujCY9Yv4KPa9mgj2NvCW9ltCavV62ez17WqG9
                      I4dovR0Jeb3ltoE94MybO9CHrb29XMg9h5alPRo7YD3WkhM9iUWRPTt0xr3e6Qw9AJ5uvMvvhj3n
                      OXO9Nw6wvQ7zp71SEx89eMqsvAo7UT14LoO8oK6Du99zxL07iJu9CkQbPcwooDxTFbs9XdlxvXZq
                      Bb1CFFE9tfqgvZ9ynj0AM8Q8nwOyPVBmVbyaEFi9xHD1PJLKBD2GKk49mOcXPMiqizy0C7Q8FPPL
                      vGBQD72Yxly8oDsDvRujtT0DqVO9AFopuU3AQ73iBT09qMOKvVeUmD1uV3U9YCezvRj3pr0Kfce9
                      EKE3vYAc3ruor1i82f+rPYiomjyslt28Fwa/PSwEvTzKeKC917vLPXZSDT0CyLC9+ACqvRevWb25
                      Vqw9gLGxOvdqXL0SNHE9BcC4PaD4ZrsaMmO9hk9vPZCDgr2TRDW9eGyXvTqHyL0H/ie9TgcTPSfL
                      P73uWj89bt+OvQbVbD0hl6w96PVUPGBv07tsxPw8cPEXvWDrHLvSTFs98IcQvHDrULydTLG9eB+q
                      PGx7rjz9EqS9shUtPTCguTsciwu9VJCUPBcnQr19A5G9y6e/vdD01rta6nO9LAabPEr5PT2oyCo8
                      QPqkPOCc/7yLnbq9IPa1uxhNR7xw7Qw8vhkdPdXBr70PfJI9j6qvPaMmJb108/w8ZhISvaw8w7wu
                      wks9QdnGPdpuTz0DxEm95KCKvSdfwb0N10e9QqhKPY3kmb3Ckn09ZUebvazVhL3PipM9zBLpPCNb
                      uj0Ux9082Jh0PLaZDz3MurQ8UspiPRLMnL2lYMU958aGPbn6pj34UMO9aBYCPJIgjL2NUjS9EVik
                      PagFOjxQQDq8mLuIvIDoSDzS2mI9GhK9vRhxjLyo3kc8oAR1veIsfj0onI+9Ae+ePSQ9Ar2H8ow9
                      ChcKvXr8AL3B15Y9CcO1PZBKL7ymtgo9gIPxOsB+XL2vMpg9rXiivYC6uL3q1jo9LioNPdpUKb3S
                      lwE9Yky0vaBfw7uAXeM6oHLNvMFFoT2gCcw8gQyxPUDAQ7zAJGO9B7UjvRTcyrxoVd28cGpzvMBC
                      OjwwomO9BlhVPfk2pT2v17G9LlNXPWOvfb0Axg+9JRG6vXF5oD0824e9GHyaPOBgtrs60ws9+AKd
                      vbk1xT2F+L69gsjCvcDEJjvEvRO9AqAUPa8hiD3QrvM703pmvWhdN7zIx6O9UHqIO7b+k71YokK8
                      EVrJPRCDNjwX+aE9fa6XPUAaN7s9BZg97JzgvGh1RTzy2EE9cE0nvayuA71Y8nk88E7CvXE3gz0Q
                      KXA8sHDJu3FAiz3YGBu8QJYRuzTh2Tywfiw8O6uCPeR59jxC4X896BTJvIBs+zswgAq9SQ+WPZDz
                      BL3oYRq8GpqqveDtzzsngXq9U8nBPX/wmz3OHEo945RIvWr+fD1o7V08bMmdPDuMur1o65g8ABTj
                      uvOKKr1g+6a7tlydvdCWRLy0Hc08vemrPUDaSLvJWco9IBegu1jhpbz8u9k89HqQvPbBBL0obsc8
                      y6G+vZs0ur2GnJK98KcivJFatz3oQIW8Q5V5vSj/xjxC0q69lYeyvbCGKTyD23y9WulKPaAH1DvM
                      l9u89yHJveAHlTsAVHg5jWWCveDR2jut1Vy9wAM9vIaiHT3gGu47b5G0vYCRoTqC1V09vYh6vbNI
                      qr3ghp08jNjdPBIKm73w7z08sItrPAB8frwYOq29ICZWvcuGkL1Qw7Y7+ZWhPdhOPDxTfWa9HcNh
                      vT1jRL1gSGa7Re+TvdBO5Lusb4O8ofidPVveoz2gQ4w7MduPPYJXKD2c5dk8YlRDPWCMjb0hVLM9
                      IOLyvBjC4rxwZBM8JBvhPIIbl71WZZ69PkWmvXuor72di2i9YTzHPf8bwL26BSy9FRuYPT1cxz2t
                      yEe9IxSRvdalaj0B6a09cIwcPCNGZb3gOKU7UHozPPTY/7xw92y9h53LPQxgoDyI9oa9OnhyPeDh
                      5LuQsXq8nsGSvUBQRL2AKJk7/We0PXl/tD2gsA+7Z4BQvfuFtb0K0G+9FzJtvSk/xj0nSFa9jHTW
                      vIRJzjyn+Kk9oKOHu09Qtr2ToU+922ipvT1Sfr0wySm9ejAxvXAwELwow5w86NYBPOG1vz3rH4Q9
                      DLjfvFu9pL3Vs5s9PT6qPewHFr2CGAw9ULDauzk9hz3T/U+9w/mUPWHApD3AYXm8VCnIvP5xIj0S
                      cSQ9pyc4vRCcFr2gHyU7fWbCPcDQFLt4uKe9TM2jPFimkLxSFgM9QZmjPdFknj2Mbco8BqOgvQYt
                      ez3IVMc8wY3FPUs5xL0AaFw4etm3vXRagTyNLpw9YvgxPSMZGr13h5U9/fpzvax74DxAacs6byjK
                      PYFCsj3A2FQ8er8tPUjn/7xHpsm9KaGfPb3gwL3A8xc7N5QtvfC/FjxP7q09u9+IPXDxdb0gcCW9
                      nnFcPRB+Bry1r8c9bhqfveCP8juAZla6a1WBPYg8kTzSc3I9VcyrPRJRLj2i3Ao9wO5sOwD5FLso
                      hcM8ZpB/PbanUj1NjGC9RmUMPezOxzwZ6ag9HQROvSa6gL2Ax7q9xJ36PBnTxD1mx5W9DKCBvfnb
                      yT3sw4y8WvUsPT0rtz1Qfvw7eCjEvaTwBL1pn489Nk+EvVAlYzz8Vxi90E9YvQB9Cbx5eYI9YLka
                      Oxe6O73oKOy8DfQvvcAhI7zTqj698WKZPSQPEr3oJae8cODIvZamMj3iEzc9OsqLvcCFeDsaAms9
                      REoBvXayFD3Gbaa93ipOPYDKWb1AQCk7KKvHveqpND1awAq9GE4vvOAWz7xwuFI8/YeLveA3ozv6
                      4TK99/7FvUCuGjtNAW69tiwRPWg2LLxCwUY9CLq4vc3GSr3AMLK81O36vFboKz1xF789cGhavHJs
                      Iz2gmeI7eI+2vdaKcz1wLw08gF17unlSpz1zYlG9+B6ivEFnxT3UTZy89owDPZRwsTzQt3m8FLuI
                      PDIwOD2Av7+6QIRWO4Ashb3mVGI9mNQpvOJaSz27xLi95nVdPUCaVDz4ScQ88IEbvF1hgD2EFwa9
                      M5s8vbmWkz0RzL09yVipPSiAsjxNb0y9WAxlvID29jo4Z6W95EDgPKjBSDxQht87SWixPT6hRD1n
                      oWq9RT+nvVg5YDwUyA69PXqEvbDk0Ls8P4C9aHmwPMqofT04T/y8Wq2SvTKQaj36ln49AEKtPABd
                      JzrmQ5q9gcaPPVhzHLxAl5o8MWiIPanYvz2xQJ89F6ZIvaDXE72YmmE80OVnvLAxpb0dLZ29Lggl
                      PSi+cbyAOaK73ueDva4Cpb2wJj292gNZPRhfmb0VP5M90PwqvbR+yDwAG/07+EyXvXIYUj1NqpK9
                      oCIzu2BiwDugtok7syimvVu7kT0CdU09DEKCvRIfDT1rZ429qaOtPUJzWj2qjhM9OxeRPfd0O70Z
                      Gcw9HR2MPVFjkD2YwCq8vLQIvULCyL2yHRc9wHitvBhVn7xwzz089riLvfnllj2oTI+9uYifPWCc
                      4DvSGQI9WC4lPHhchbwuHA89dJHAPBj3prxilK29AiJ+PWzjhryqcKi9G0mdPV59Uz0tnm69k8nK
                      vRiCozzacHo9QIrIvJNWgD1aIVQ92BQKvMAbobx41qW80DbIvUhwkjzw/Ss831CMPVgPxrz2vwU9
                      YBSEu5uMjb3oqbi9Q0zDPRYFE73lboe9ADbIOrB8uTs148U9GBFUvHK3Kz1RvJE9GaS/PdDaa70A
                      lnW7Eq4SPb8Zpz34isS82DfFPF4fmr3NsFS9Y896verXMT2KBSc9HWQlvR5rez1/XL09ihJQvSAf
                      sbtafys9YP3JO2cROb1kNOI8UZHCPbPtgz34WJq9ZAzlPLL9yr25uK89Rt4LvYtnvT3/z609siFc
                      Pcb8nb3Qagw8IV6hPb1Xlb19vIK9xI8WvSOtjz3ual49DbAZvYDecDqgU+u7iqACvTC2qTtqwWE9
                      MwGBPSKtJD3DvrU9ArRTPXB8rb1vrq+9aA0mvGovZD3Pzp89+oB4PW2kGb18sdY8oFcjvXe7db3A
                      3nc7VUXBvavsnL2akUI90DwUPFRK+zzgzYS7wPNkPLh2iLzACG47N/avvVePgD3MFcw8IgEiPcKT
                      LT2rGKQ9jeNuvXU+sj1bCpa9vfVbvTAThTtQhPq74jY4Pf62fT04NrY8QHbIvTKGAT3A1mi8hPET
                      vcfnab3yyWE9oRybPbG1gz1AvYg6lGWTvNhnr7zFgMi9ppKRvQhqhL0yGE09dvwbPQCgYrcOVGA9
                      e9KRPfTAgbxoD1Y85tkNvQjsjLy6QWi9ryCJPVjxPDzIIeS8mxSFPUAKmL2qi1c9I3aYPdj1TTxQ
                      1wY8yGLYvLTUp7wtjpC9JDfhPJCnJLzA+Z08tdOPPUC2hDwucRs9og8LPTVNrr29Bay9y0WuvVE3
                      wT0p3qs90+ewPWgJxb1CBwk9TsdOPYALBLxZ3ss9GY+dPQo2Qb3HgnG9VnZYPXrZF72g04687S2b
                      vS33Zb2IJsi9Ujx6PbpjAr2iQUc9kD1dvaAD+LtAxre8PFUHvbfrsb2hVLI9Whw5vdCwFzwojDE8
                      Y5yPPUfQPL1O0KS9Lz2MPY7lSj1zrz69UvhfPXOJj70ySqq9mxuLPUBeorxrzrK9kA9YvGcoTr0Y
                      mi481GnSPHaKSj2AtqQ6I0epvYabg72Nzpw9ZQy+PShVs71oDb28c4XDvbSkBL03bka9/6eKPY7r
                      lb2wKtE7rF6vvOh1ZjzAT5S9XzXKPTmQoT0FAZM9KfmbPUxws7zJXIs9S4mjvXS+lzzUcM88IHqn
                      vaagHD1bi6C9joEfPfMQSr1UTJY8DQy9vYCv9bqAKmo84HrIvEKrUD1S+bm9IbmcPcWUkb3VOJw9
                      kD2MvVExtz2gAba9MkY5PRCtRr0ofNK8ve2nPb08j70t9TC9ZVWYvVjvhjzX1r+96MEyPLMeSr30
                      Od28yzyvvey4oLz6m7C9cpEfPdZWgL3Xyni9CyqKPSgBeLwICeG8+uAuvX5+Sj3FkpG92GyGPGA5
                      Er28v4O9zjgrPbs4jb1sLtS80LsGvLZsbD1uFi09S06svcB4tr2I+Km82DpjvPqOLr2wZ9m7t0N3
                      veE0iT2DC2+9La6WPYyFnLwMQfM8yACGPODygb2YQ7o8QoonPd08uL0LdaU9v52HPZnsuz1KOWC9
                      OEWHvEMuJ72SXri9kcLMPcrxTD2mOQm9wBkwuyGEjT0PBqA99M2aPNtylT0XpnS9AAjOvGTR0zxc
                      1948M16QPb8xvT0qkFM9YE7VO2pzGb3X2Vq9B5J3vSihITy/qL899/tEvYBu1LuGU5m9gLGZvQTE
                      4jwiz7e9UD55PIMEhD2WgBG9sqtMPT00kT0Owjg9dup5PSjcorw2Epi96IyTvM49cT3XNFe9YIHI
                      PL+ysz0cEf08gNMrvQwOB70NgJQ9WM2KvZRLyLxUjPK80AWDuxT5/7ywfDk8cgBjPSCaszwLlqi9
                      VsmIvRgURjw3NcM9t7hCvbvhjb3w/LK9HG8PvaAthjxCYLu9oCRmvTOtyr20upS8t7aBPfTp1zz8
                      l+A8K6WYvYCMkjvYcxY8gMvzu/EvwT1H67q98uw/PZjX4bxb2Is9AHxHu2CUx7tr3L+9iLnlvPXs
                      vr1Cpoi9Isc5PePZoj29C8E96tkbPbDH8Dui72k9f/7JPVLoGz19E549bvdPPZjswbyAYGW9AA73
                      u23zTr2I0om8uCGFvRfsd71Esfc84C11vT0BgT0Kuxc9mLE6PFBTT7zC4rO9MHJTvMVuvr1g8ou7
                      5EzSPCd/wT3d5DS9nN4YvfLwUT25yYo96p6BvUBoS7sT1S69vRmYPfNWQ72A+NO8cptQPdSzEb2H
                      +j69s0K1vSaPp71GpBo9DdXDPYBQxjpm0QW97HXEPGPcqz1W/mk9JjRZPSmUpz0qAjQ9cDIrPJGr
                      tj2m32k9ZCH8POjd0rx2gmc9Dbs8vTBW57swhIq7IDcjvVM8k72+MZi9MOfhO1gyArygqb27oDLs
                      O+2QQ72ZtI89eCOovLVqlL36B1A9kntYPbJBbz09CrC9gFtiPGZqDj1XiMi9WE5dPIX5lT2q7Hc9
                      GtKuvclZnT0aZ3U90KsLvBJ+UT0YREo8RWOJPUPOxr20JuE8K9nAvbqeTb3gju+7eNDyvJ19Q72y
                      zTA9AGu6u0xP1jyD0bW9kJ44PPEFsD0arH89yQiFPYAolLqgKru8MC7MO+IZCj12k1A9aF6/PGgg
                      LDzMRak8MGx4PNOysr1sJfO8BohxPcmHhz0Qrzc8eaaPPaiawTybc609a72LPVpALD3HE7w9ANKm
                      vTM7jT0onlm8ovOyvY8wzL0I5aO8YTPFPayV3Lw6i5u9WGe/vVW3pr23F5096FhzvPhryb0w1go8
                      XaSjvW7Ojr3LxK29lv0uPbK6qr1sLsE81EoYvcBXEjvUcAG9nFfSPBY6kL2Uu9m8YPXFPDXunD16
                      MxC9ZEEWvbkQxz1K8AE9UtY3PVyU/TzcMd48rGq9PIUyyL1AANK8BC/uPPXMyz0ynSs9INRcvSJJ
                      Tj32hg09baAlvVyvFL3yfqe9fUJ4vdsHsj0NKaq9x+grvdLlo73RtIE9z62+vfLgYz0RTLU98iN8
                      PUC9uTpgnow7/+qoPWrZD720a9A8WBxBvEZ+IT3YWca8iaeOPbI+Rj2hEsc9tKqOvKZ1qb1lhII9
                      AMr6OzprMz1m7DM90Bx/PKIZPj248qI82BvDvLevsb3U2tU8FTO2PXR+5bwUTbG8q7uQPZJEMz1m
                      HCU9+IblvDP5pD0QzVO9GBEFvM5qhb3iUQQ90kNSPb5yh71dNoK92xm4PaSC2zwvtsu98T6aPWLi
                      ZD0Gixm9WyqmPeTN8jzWjKG9Ssu+vXoQrb2AGLk7AKnyu1I8CD1dx6s9kQyxPVvfs70wBqg7zXi3
                      PXrDc71RaLk9wAZHvPvfur1D9qc9AFcguni+6rxm0xo9ar4iPYOWwr19VJm99l9aPYpyZz1NAJE9
                      YAm3vDRVuDwAOaO8/Ua7PQApOLyubhc93AkFveqWbb3AmJW8hvWVvYpzM736SMK9frIXPcs0oj2u
                      nWk9aTTBPZgvM7w8Cwe9Y36BPY47aj1a2Cw9sAZmvHmHrT1gd6s8zKH4PHjJ+bxkCfE8ULglvNty
                      sb10gvu8ei81PZJ+GD0FtYA9uYeDPcF9wT20Eoe9L1S7vVGkmT0jkx29MhKovVHVoz1GfmU9gO/H
                      OqEZpT0quce9mBbwvK1FRr0SwUk9bhN9PbqwhL2aX4O9OjTEvYAj2byGi3I9wCKBuk3gij1eWmY9
                      4MWtvecSr71gTCK7WPinvYDo8LrLvcK9A4BOvR3yiL1QS6q92JoHvCDpx7zEceM8xJHyPIA60ToY
                      K5284A+Yu+P5xz3EpPI8Ey+CPWgiXDwfLse9KJL3vHfQHr1gI1m9sA/Ju19mxj2kq988QleovSC5
                      jLwbZrc9suZOPcK9Wz3W1zM92EMTPFY8gb2Kfx29lMPivCDdqjwPGcO9mEHjvKCbgL0vOY49GGgp
                      vAAxwDuXMok9LBDIvINGLb19YiC9ab2nPSGHxz231Tm92m1wvT5Cj72Qniq8HHX9PGxYoryoa8i9
                      ZAD4PPK0fD2daok90sdSPVAc67tVRoW95l0+PS4Ogr0hKoQ9NmILvTWwl71YJlm8DTGQPbONSb3l
                      hJ09LMUWvWOSqz1gULW9Ux6vvfpBHj0yqF49d0swvQULhr3oDZo8gLqQvd+lkD0e9zU9VmmlvQDg
                      pDfwOAU8YpEBPYCmSr1dt3G9UC4gvfGKuj1pDoY9n1LCPaCWibx/3JQ9EAwBvFBEzDvTLMe94YqA
                      PWJOWz0w5Wi8AG7uujrxYD2iT249QCpHvHA4DL2ZBaU9sEkcPAMScL2DUWi9s2k6vcfOqT3JLok9
                      UGGmO6Ts7DzQpT28ylefvYpmdr2E5s08zLEDvcR/iL09bIC9Mio1PadPab1KZG29oOCZPJmBmz0o
                      zqQ8o/yQvXlIxz1wDxO8oD2Mva0oWb2KDCu9hBvRPABwbrrMzJu8KYezPVGJtT0mXQS96MFBvLMs
                      rD3OEQ498mqgvbRvjrytiLM9NCegPKq0L71WXRc9u1CZvUAnMjs1w7c9kygmveidkb2b9Lm9AyO0
                      vWf2s700dvs8+eeQPYa9YT3gZge9Pay9vcnIij229nA9p9R4vdiMa7xZQ7E90OTAu1CHZL1wb7+9
                      yWe/Pawph7yod4C9byO0vZaEmr0vbsI9aEoIPLRRyLxAKfq6MfKPPSzH1Dy+u5q98iAOPTcNkz3w
                      xnO9B4gnvRlDoj2G1lM9NRDFvSAsljvZ5409sOgZPILCPT0gVYY7AJyKOyC0rDu60AI9WBm7vAAu
                      vLmo08s86rtpvdDa1Ls6mSK9evglPfkkyD1eyBc9AltwPcwB5zzAozO8d+vLvSDznTxED+M8vehv
                      vcRx8jwHCsM9sAjYO1L/FD1KUHC9AgMuPbTR+DxWOTs92IZ8PD3WZb249eG8yWeYPdI6hL2XKiG9
                      MOSMvdATGbwCVx49fvhyPbrlZz0RJcU9cEI2PBsen70HobK9IOHfvIi+jzy2QSs9kq+BvSL1wb0A
                      AE+5TFT7PKjyp7wNlJK9jllnPfAMvL0Ne629qCJ9PECcmr0kz988yAq+PA6fkr0uUai9SVS8Pfho
                      +7xIBLs8zwW8vahKXDyg18W9d6Amvd3+Ur1jH3K9ELwIPG2GOL0kf808okOQvfCHf70+LCY9U5u3
                      vWu/wT2391m91ArmvOBSJ72QsxS9oN3ZO+8Jt7350aQ9jhwfPQ0xlD3+ewI9CHW6PJSiqbyjz4M9
                      nHLfPCIpgr0d+Vi9cvuIvZDLdDyQIne9+GqwvTBXX70J04w96kK3veymjbw537Q9KtgUPTjX+Lx/
                      6Zk9MqBEPSiDGbzgvbG9guJSPfd+wb0Qylu9W+mmPXXntD3GaC49KQ+0PXCRcTwnPjG9BfiZvR21
                      xT2S7Hw98sh9PWveij21wIq9BJ/WPA/DlT3t/p49keCSPaOgyb2gHsW8YowsPajFXjxOJwg9oCng
                      uxSYEb36REM9urpNPV2nWb3pe8s90PK8u+phDL2NhjC9QQqcPdC9v7tD4Me9TWK0PUp9Yb3hZIk9
                      IR6rPcm+wT1rdrO9QA+tPKQM0Tz97HC96jTIvb+mrT2X61690duVPZ09tT3aXR29YL5Iu7LDID3Y
                      3MC96hdhvX5YfD19RsG9GwTIPQCYGjyA5J+6cTaIPXF8wj3aK109WPo9vG//kD3tS709/fnJvRDn
                      Uzzulg09Kl2mva8epT0cAM48MI0fvXaNIj3EgPQ89J2TPEKzQD2gFX07c+29PYyAEb1n8Lq91CT7
                      vGwpoDwAIpi5WN9PvMD6mL34g7A8Z2uVPcxRmzwAHHU8LUluvcAxkrx4mKW8MpMCPa0RYL3CZGg9
                      tomLvaBaRbvEHtE8gU2TPfC6PDwSA0w9IIuIvMCSNDw2nik9hst7PXsamj3+n469oELLO9Afkjtb
                      zr29d69pvfHzoz3Ig5O8gIK5vcwLvDyjm2K9pY+WPZX+uj0Hm2694HLMPE7CQj1+szA9jI6CvBMP
                      XL2woeO7sPQtPICW7LzweHg8stEOPUJVQz2KnBi90fqqPXLsjr2qeYO90NFhPDfXjj3QHTq9GicL
                      vayKpTy4jsy9IA7Zu3S42ry9cJk92PAavEqJvb3jA169FrxMPRi907wi52s9AHbXutTU7LyCYgk9
                      uNWzvMx8njyMTcE8B9zFPeodVr0AaCy4uKjyvIlvgD1DJ1u9x8akPZQRg7yPfru9tKEUvcyr9zwn
                      lC+9H/6NPSjynb24Qow82gMBPYLsHj0MsgK9zUysvTOMoT3yeUI9Yy2TveqYJT24C9K8DIa5PL2v
                      VL23Psq9CnqEvXvHxr0QF228p5+ePQi1tDzexZa9KEwLPJrGr73gHQO9jrJXPeCJFr0okya8Bdaw
                      vVpPHr3RBKQ9wOs2vSI4Bz1o+DU8knROPYOShD1zYi298MwmvIBjkL2Ctik9djiQvVOAHL3XrLw9
                      GJFIvGp+Ij0UKMy8Bz89vbNsJ71SkHY9eqSjvRIdVz0wUW68oPzavFoGFD09Vsk94CvFvcPxyD1I
                      Yt28SlBjPTF5oT2KNnE9c6wivRK9Gz0gbVC9obWiPYAm87ulg5I9LWx5vc7gFT17eZY9KbS9PVgD
                      Aby5/ao9AFNZuiFwsj3z7oc9mMabvUBXWzxImaG9uOaIPLuotz3FbI89h0KtPdJAKz0HPjm9tfHL
                      PU1bPL3QmB29AldZPUrGgL3qJYS9U3uPvQPaq70+M569oHuVvXpcxL3Focs9Th8wPZ5dUD1QFpC7
                      +aKVPSA0urswhYm7ANk5uyL2FT26dZG9mHzNvPDvATxwQDw8So92PTNPp70iiAk9xKbkPEogf73A
                      V7C9qvc3vcFerz3i9mQ9k8hAvbQUoDy9IpO9BTqpveyU1jxQxZK9Xl6jvRQsqbzapSa9m4msvYAq
                      kTrVJZm9+/mmPSCh87tdxps9zJ6HPH2arD2AhZG9Rfu+vdRVwDyRxoE9dVCPvWHDtT1IpoU8s98y
                      vWA7ZDtgSme9TVcsvULfTz0Z28s9rAQJvWW7yj0glsq7GAigPML6SD3SLgM9rP6JPCn9qD0Aqi48
                      QPNFu/LhJD1By8A9eiAcPcK+ZD22syc9E8Mnvdo+Sz1sxLu8WSyvPe0zib3gaJq8+iUBvWTU0zwA
                      3o27M4NrvWoyGr3q0ra95C7PPDYFGj1wIiO9J8FUvUMglr1bEoQ9AL9bO8tsqj2oX7A8qi4/vbyM
                      1jxywj09Cl1XPY5nVj3Uq8G8zKrJPJLgOD2MjYE8jdGoPdLTBD1Zm8g9d48cvWDRQ71TbqQ9QNqC
                      PAVGsT1QbTG8cSapPaNtWb1wZjm8bJnVPI6Dj70g9b67U4lkveyXmjxMtbo83S5gvQSg7zx2ckk9
                      ssO/vQo4bb3wRCG8AJd+vdKKJD1eHiU9OtRkvW32sz0QQj69XBcLvTU8xb3deJe9b2XMPcTQi70o
                      MDe8aFajvXEykT0gEW69jdWNPQD6EryDsmS9cP6wvUqhr71rCY+9wM9FvWykgDw4WbW8/AHbPJmg
                      mz2wGnQ8AChZvScQWL16Y4u9nFPaPMPZLr1F16g9lC6wPLkZsD1Q47c7gKCbuqzIwDwweBu8U9So
                      PdPGor0qZUs9I62ZvdHEhT2gsOs7t0fCvXyn8TwIbpm8UDZ6PPofqr3tdIA9eKWjPOybrbwUccm8
                      ki9MPXaPST2BBrs9cOI5vRrkQr3cYIu9Pesdvce9Hb2zScc9yisivUr3t70AiqC53RaSvUIYIT0A
                      lH88QBxMu68+yL2oa7I8rsRNPewA6zxqEsW9R9mkPcFwnj03Gii9oikdPVeVnD24uL88ZuATPfcP
                      dr2RUMU9IfXAPVU1ob1Ao2e7+ITlvEyI7bwAn1o8zUe5vaiRIbzDuq09tf2IPSpIBj3qCAG9xSDD
                      PY7kOz0pJbs9UCmxOxiPiDwjCKW9VtUVPR+JvL0ADiG9zWbLvf8JlT1y+q296vAWPZCuKbxyg3o9
                      gOwXvG61Wj23jZU9NiAAPSAQRL2A6u87WNKlvVAiIL1gCP68AAB4uVi6qr3A1X29w3sqvQQ+4jzg
                      ycI8MBA7PKggmDzSRh49iqKzvS69MD1RTcg91dKLPWDB+LtAKz688jxjPWMSpL2ZAY49M9BjvYCx
                      7zpYkKS8MIM8vTYdWj03t7S9aE5jPLaPjL2rasA95sANPUoFKr2iLsK9aHrxvJBPqb0Y3A48sjg+
                      PeY5JD1iVQ49QFoUO9yP4jzqdJ29lViEvRodHL1v0as9Ia+EPeDRortotnq8qTCXPVjIL7wTsFe9
                      Uj5rPUp4mr0CphQ9A1SoPXMbbb3PV7A9mp1wPWAvdzsSvjc9giF2PXZMQj2jZaK9k1IxvYQrDL3w
                      lMq9zDDIvL7Gir2tSZA9yVuLPWvSxz1gU+y8IqZuPQCdRDwUuu08VGiaPHfhRr0d2R69DXI7vWC3
                      YjsnQh69g/qBPb0txT0i0x09WsNgPTAEvr2Hum695ypsvRaYWD1wy0Q8jXGxveb3Tz3QaDY8PZao
                      Pa6MOj09kI09aKirPDr8TT28lBS90DtyPD6Ekr26Zbe9lMCUPP3ew71Q9tm7sEnAO/R+0TyaLXw9
                      Dh0lPWqlSj1Ajxk7QNzuvID7/LuoGcC9egAcvdpknb3KJ3c9QMG8vRw+5jy96ce98HNfvcDNGL25
                      3Jo9TMDKPJwC+jwgEUK98B5bPIiAijwkM/A8tmh9PdcZH723G2C9Fw60PVC0drx2vp29l4OEPRhd
                      xb1KcU494I7HO4fqsz0I6MS8cIZsPBrkOT0Kyne9DOHWPJ6sqb0M7bq8BgNTPUgxiL1jzB69HYOL
                      vX38e73I5r28uJ22vcbYBb3cLAC9ANytOhD0e73oJp286rt0PSpuUb3IE8m9qzmmPdDCSDyQ6Ui9
                      gHEivVQ2sryA12k8F4thvQAegboA4vM5cV2bPUsbxb0Y8YE8bYfEPU8Gmj149Zm94HjWuxkmuj07
                      HMY9AF8lO3FdlT00g/i8w/QkvQDw5bsxxbo9inNmPRIdGj1A9la7oJ6eO87Ocz3Y1DI8XU+QPZgf
                      MTziWS49NPSwvDPeiz0AwD+5pwQpvdCZZrwsNKe8l0ArvYzKrTzZXp897nAZPeMZNb3Cgw89JiQ8
                      PeCovTt02JU8dJ6JPB8FuT2AkZO8LS5xvVvEoD0WbZu9ABcxu0g/yr3QU5q9Bt0RvQWpmD3XZJc9
                      ehOBvTOxkb0qdQM9IFbLved/tT2AtAy8NOfHPMCTcLsiOWY9WPByPNVzlb0Aibg7qOwPPFiB6Lyp
                      m8E9VL+OPFcUsD3XLMU9tBn6vIR+8DxUKsw8K0qRPdVJsT3pP549Un9LPULJED1nW0i9YY6MPdhR
                      7bwjMqq9byqlPbJmIj2ppbE9ViI2PSUguT3pjJ49CjsPPV72YT2+XXc9K42WPW4ZMz2YHva8XVmc
                      vR3zjz0UItG80J4WPLnSxT0HxSm9AOwaOUJuTD2MvpQ8XfC6PYlrhz0yVwA9rBCWvGa1Uz3NCJA9
                      KowlPc5tYj0gPBW9PEPPPKR1Fb0KUbi9DCT6vBePu71sqJO8wGSkusfXpz1u/4y9LYnBPfrhUT2v
                      zqg9IIC4u3opDb2wiH28pCiIvXdCZb28ju08oGYsvb+ysr1wZAS9UggkPVp/Xr2nyb89CdSfPSI2
                      Xz1QZe87c6Mfva3Xrb1uKTY9APjvO1pRQb3Yviq8cAF1vf3OtL1FAKe9apeovZpZW72ADYS8iN6I
                      vABFCbrVwoM9WLkFvPXXwr12RZy9cISlvabhVj2AajK6wOOcPN2mHr2QQTW9k/AbvZiqmbyht6g9
                      bvJiPR4MYT2KpHi9GGohvJhn7bwjmJk9CDGmvQiTg70dJl29IJeju6gdHLwo46s8WFJzvLPTjr2H
                      VJo9GoJxvRQ89Lw9rpc9mk5cPTEYqT2f5cG9VipRPejfJjyGkAI9iZbCPWCRsDsi9Ak942llvQQs
                      5zygJcO8AF6nOZsohz3K7Em9TmJ1PXnHsT3N+3u9xeW4PS63iL3T8Sm9Q3RNvdr8M70dzsc9Fd+3
                      vZhei7zy4Tk9YtUxPXKpJT0Cl7O96Ps5PNTlwTzYUsW9gG+nvPSj27yPT8I9EFcUPPpnLD1puZY9
                      2piFvYquib0phLE9noMdPQCghzhGWRc9nX9rvcjTrbyQYiG9P1e4PYAR+Tvo4Fk8Wb67PREYrz1u
                      UF49MKkuvH5epL2nEUO9+j4jPQiCg72VsYG9e5bCvab4KD0NMjK9yLzivIGQqT0OB2k9kJDHvWLM
                      Iz1gJTc7XOP/PKAWorzFupC9hot0PaEaqT1IjqO97mB6PUNohz29rrA9isM8PWU9jz3NjsM9+lBF
                      vcDMkboAANC15kM+Pc5NUj2Axeg6ejsbvcDhbr2zvIs90HpyvMRjh73eopG9XEcFvQDe+rpuApi9
                      J+csvc9Xvz1kX4W9YIB3u8JIHj1hULc9kniqvQAHB7zdMSa9UydXvXe2gz3XAHG93Sg2vdCW6bsA
                      +6g5NLaEvcOJx70zLFm9l6QmvQFxgz3/Mss9TeFovRioAjwP5qw94GmqvHO/vT1xQY89gIJlvWBs
                      1bsHG0a92qawvf3xsD010oK9YMEmO2jomL0lOrK97iY7PXjSu73ybGI9TZWrPWqMab3RGIA9mxG6
                      vRhNyjx4/9+8T9G5vbJnET1aYJq9S8mZvTvUmL0YkMe8NOqlPJaIRD3E2fo85UvCPUAzy7rqGsW9
                      ALs4u0oVLz069qi9reVOvdEkjz1EteM8baOvPXAuCDzwyFK8kFAtvINPd73ZQJA9oNyAO6d6XL0p
                      bsw9XXXLPdDCFbyB7I094CSPvBMvcL13S7w98udvPcD+aTwrBpK9ANN4u2L2Zz1qVnW90oogPZkz
                      mj3weXc8cHFmvdDzwbuIn7e85VWUvfLahL0QC2s8GP6FvOAV+TvOpSQ91c+MPbWjjT0AqEm7Dst0
                      PabNg72X3bK9mv83PRpdCD0GEwI9qTPGPezO3TziVVs9OzuavUUaxz1gnnQ7MBkWvaC6zzswR0C8
                      t6MsvbYzPT19MaW9b9ipPZjh+rxBfIo9UHe1O8Da1TqSfSM9Lc+Evb97hj3oO7S8QHHjvADFTr1D
                      U269hDbePJYUrL3Y6DE82HxqPBJYn70O7F09flYpPXWas71tRh29VmMUveExjT2I9o+9+qZ3vaK7
                      AT1wyHG8vq2ovUroGD1tRGm9nwO7vWmuvj1sQYw8FeDLvcr8e70sHhm96MCfvLe0wL1aqmk9EPx0
                      vYCTrDy/3L497TtGvfQN3bzqy7i9ToZpPUAomTw6NjK9sSixPSibRLyPVK892HO8vSVZnL2SDIK9
                      dwk/vfTl8bx3Bj+9IKejPBhLTLzMcA698PkhvbFbrT2x3YY9ySvKPTFFyD0OIms9uaWGPeQH7DzU
                      rPG8OPC4PGCykDzgp+u82KSmvIyCDb2OrZO9cLo8PP6Oez3o/kg8IupEPTZMEz19gV+9KhVEvejQ
                      ir3oTbC8tEejvAMISb0ArDq9MDcPPPA9Fb3IhMK9yvVNvWNInb04Teu87cp3vT6ERD0Uz+m8NHrg
                      vOCTrbxwbkY8APuIOYXnqr2AEYE8YBrLvC+mu71gQ1W9lHiKvWQf2zzgabS7/co1vQDLuznmrhU9
                      oKIYu6LROj0wqzy9owajPSCOnbtW4zw9GOCuvMoiWT3ekiI92rwLPVGEwj0AQJW6GDpLPMAuxb3V
                      uKi9DJvNvNCjJrxq1js9YtxWPexy8rzHJ669beYdvZCeHrzjyh29u4WtvawjzzwgTp47IKvWO2Lf
                      Zz3vpJU9OQmNPVIITz1iGwM9JHHUPOzNib39eY+9CxKBPUnNgz36ZY69eCiAvBCdlb0q6Y+9ym4a
                      PYnbhj3YaVa80iZIPSiPl7wiCbO9jX6qPezas7zGpU09a2G/veD+jDz6ago9YAMwuznIuj0nf8U9
                      GrSFvYBmHL1INIG9tBqrPBaKbT1K8R09TI0MvSc9Wr1j/G69BeqkvQCzWjyCJhA9x3mVPQI3JD2K
                      b1Y9SohvvaA6iTxlOb091cy9PcArx7xgRna7m/yyvWgmur1pKJo9KndSPeJkvb11Ur49wAT0Op2u
                      sT0wGRq9mWaWPR1tnz1Y4rE8YJqzveIDXz1gCdm8AIQfOoPOK71p7Kc9s5SEPce2O72zzMm9aALB
                      vDkGsj2AgIA7QMjtvEL3OD0078q88NZOvSKbLD0U+Kc82JP/vHlUsz2wBrm9XcnGPYBKbLwb1Mi9
                      2QiHPYbuWT0/wpU9Eq1pPRh5x720HeU8v7ylPTlgiD2aJCm9JJP8PNL0TD3zHLY9DA/KvHoacz0b
                      kLS9okuBvadJVL3AnlO784GQPfDKk73qEgY9bhVFPecIjD3Qu5U7aC3RvA9ewr3Qwsu9x6uSPYpP
                      d73585I9wIFovDLMBj1+wlI9bUzLvfOkRb3HMsg9feKHvUxHrLy0GKe84xMgveK+eD0TV2O98sav
                      vZPelr2AWUo6+paYvbqJur1YyFY8sDwNvK01ij06OlK9SrVfvSPAUL1pD8g9lWaPvTQRljygCZW8
                      pEHnPBADLDzVRLe9oHa2vcglu7w0zeW8xpoOPaw1C72qxHA9cFohvQCBEbuqeG69MNsqvXggsjwg
                      yb67Ic2hPeAsEL1CoCc9dil7PY40RD0yMDQ9pRCLPXoDRD3ST3M90F4SPHQQ2bwc6eM8eR+rPQ3H
                      r72MyPo8CVOIPV/Xjz2pA7s9ewCxvWv9vT1o9xi8l+bBvTgMuDxwqDI8ei5ePZh+KTxnJ6g9ocCH
                      PWxhijymSI29zdZ7vWyb2zyMZKC8etJJPQCj9bwJuoM9T7qUPcw4x7zUy+o8wIl3vChRY7yekKq9
                      lC2qPBZsbj2rTqM9+U2VPdQLmjwA2uw6Kr5cPVZXCL3wxaa9C8e2PQsoqz1gLrI8LKARvaYeNj0M
                      K/i8uv4NvRLwYj19uze9BeWePZJCAT3zhyu9ndqAvdBoljvMAMi81amtvZO+tr0zFTO9nSsyvV0s
                      V72Zmog94M3Du+POOL347I29Ry9qvYJKrL0+opm9sHoRPMpMIL1AA2y7LQFPvRIscD3E8+s8wOFK
                      O4FWoz2Y9wU8laqXvag4xjyYtwk8+mMDvdo5AD0AktE7ZPHbPCMyXb1bS6M9OBCBPNITcj0DbjS9
                      JtguPQwMEL2ysSU94FPHvKp/Ej2Yrhk8wHelvMo5P70jyy+9sLxxvXrMeT3A2Um8ish4PdLaGD3f
                      jcs9GN+HvAeXMr0YG7K8bQiSvRfqY73y6Xs9+tMtPfBTVL0QORI84MrBvEJGCD00aeU83veivTno
                      wj0om5u8oCnivGr3OD3y70M9jwarPbB2/7sG+yQ9Aq5oPXIEMz33GMw9wvk5PSf0rD2Kbwe93TeE
                      vfA5Tr3KFly9sAp4vVRP57xymai9xeqPvaJ/ID36wVA9cSKPPQmvgj2AO6M6EilRPTCWVrwYGae9
                      D8Ovvaojy70Kyic9wGmqPGyJhzy48Ka8m2rEvW2FhT0FG7g98MRBPDDavbvVgpw9APidOMA60Dpu
                      8Qo9NBaEvdt5uD2MWN08vbMrvTcLKL2pEZI9E6yKPYDJQzxPhrO9IhyuvYBZnTyqxVw9YEXku/Ei
                      pz1qBqm9qLK5veIGeT0AkUa9YZSVPcCNJTuyrHU9S+SSvSFpmT3oLKM8HRptvexr+zztdYu9DaqB
                      PaL+MD1A4ys7DmmmvQJvTT0qyg09+BTvvFayLz0OZ1M9vaIgvWjnkDyaxmU9HhpyPQM1qz2IDbI8
                      4EMLvfBlE72CEDY9Yh94PUD/S7tn/cq9zI+/vDd6uz0u4x49cC5hvHfJsj1YqaC9WT6XPcQUhr2+
                      +0M91gI+PeASKL0d3MA9gTmvPSjSvTxK7Hc9oFBsu/RRtzybkaI9aYa9PbkDzD2RhKc9igktvRr7
                      Kj3yYW09EncDPWGKgz1pOpU95s4uPZhzDbza5Q49VzkpvXY7MD10E/28DAbvPEZOMj2NaDK9nUua
                      PVCeD7w76qw9wT+cPY0roz0eHUM9qKIIPOhklLysPo48q8K7vQxVvrysmrU8SYOlPc6lMj2VRsm9
                      ZPPgPJUSsD2aTh69VnAiPck3uz2Lzsg9MClmPJ9Sr72Z47I9MkwIPVLPmr2s4K48cNFoPIf9lj30
                      8MA8QuQGPdLqaT0oywa80tYvPTLkVj1DoTO9A6lJvTBMt71Aese9IOj8u5A0Qb1Znqw9hs0mPR1s
                      Yr06LUy9BamvvZjcALzUEoC8QC4hvBqfYT2emCQ9AIcDuoZ/Pj2AoE88Wv+jvVcsRb2wFJo7unlv
                      PYfXS73Vb4I92KRCvBDPZDyYHsO8B2qkPVFMoD2TcWW98s91PZvRwD3mzkU9hbmqPX63dT0Ib6i9
                      Xtc/PQDwMLlYPyQ8aEKiPMD5fbzozz88oUy2PYxwEr3LFse9ghqovXxxzTwgSs07mDIjvExpv7zn
                      +269ZZ+vvbZ3OT1ldJe9ihxGPX0hS71Ya4M8XMfbPGNQnT1eKjo9b6yOPX1uYb2+wTM97UzCvRCi
                      sr0QrcK9jHeHvEwO07xEYfc8uZOMPVCqIr2pIp09IweRPSOcgD1ocq28NDf3vPNxOb3gSQO96pul
                      vfBdir3i6jg9wOugvB4dEz1ewnE944m3vcBIMr2E9fA8s+VtvQJzeD0o8KG95e6wPbl/tj2AIHE8
                      jOKAvPNfp72UzYO8AINdu/DefLznWsM9fp86PTmHpT3dSKy99ylnvc0tSL1COqW9SJCUPKD+FbsR
                      NKs9T8OEPciPm7xAOsa8tTmovYCNtjx1PKu9Srs+PWKWUj3g14y8aj9jvSxLiryfbpQ9NiIMPQpe
                      Xb26Jsm997jHPeL2Qz0Igoo8xyu4vd2KhD2AmIu645R0vbb3bz3BVL49/biVvYq3rr3k+eg86lEB
                      PbKhbj3wgLC9ea6+PfKfAD1o5Jq9BGrUPM0gqb0K6Sa9ADJcO5Nztz1z/T69glyYvQ26Tr0za0G9
                      WbnJPQ+UvT1eanw9kitiPSfmiD0Yfz28XrgwPctzsD1QDxc8d0+QPa+Dgz2g50q98lkiPVhEdDwK
                      gsa9euAKvVAfd7zjfrA9PQGDvfuov70w6vc71oiavShajb1CIDc91nOkvR5yWD391X292DnQvE0Z
                      v71CO149AMu8vXJdDD26LEs9oROKPRgXjzwY4Tc8q5CHPYJHw70oxYQ8e1/MvdWwpj2Xumu9AL6u
                      uzDvhTuv64E99smZvQAVSzuy31I92qBQPcHSuz0izCo9wJtJO1IJv70iVMS9962yPShSYTxQvHK9
                      hGrmPE9Hkz1IoIK9NyPEvcQmFL1Yox+8nUSXPQrTPb3IpKQ8wR+5PVPysb2sXvU8Kti2vV5eMD24
                      Qry8QllDPWMMwL3AoQG7MynDPWvNhT3Uu/Y8cNO2vf00G728ZvU8Is6vvYD4eL2EidY8Q9u3vZj9
                      Fjx/dLg9S3a5PYCQwTwS7MO9ScCNPcrXQr3roZq9IBYwvQJqNj3epTU9QBBVO4jV/bzpo6U9k7OO
                      PQdIIb1myZ69LtSTvZLhSz1Xe6s9sFpsPLP6fr2+IEc9j364PUuCzD040tO8lECdvGyQsbzS5qy9
                      GUCvPTdEQL2AI/47MDq1O40LN73SO6W9wEa/Op8Mpj2ItNa8qK5YvGihdDygkxO7WEIKPFCRJTy2
                      3Qw9DcuVPYh3ljzSMWw9qGlGPIZzDj2ADoG7k3xSvcG5tD1PCMI9UJBvvSiBnb0tN649lFv4PGaQ
                      Hz3Kk1Q9mN4IvADwXzlwvBe8BSC4PUBXzLyQ3QM8wFx6vXgd5rzngaE9AKsgvTBsTr0ap0E9PSKb
                      Pe1Srb3Q07m9DVQqvcA3Kb3IW5W8llgvPd99nD0bBp89vRuCvRADp72whly8EMcVvHNKX73LKpq9
                      muesvZ1OWr2sA6o8RhBEPdhskLzCTnk9KdWQPTsfjD3YEKG8oE6jvfMUgT3rjrE9DuwWPXqXY71l
                      FaQ9CvsJvdi7KTwDAXu94DgUvXdEnj3gWbQ8rMfdvKV+sb2yixc9Zyy5PffSOb0scoc8WcW+PW1s
                      gb1A4YQ8tZWXvS17Wr3RW4w9aB9LvLAcTL2w6Fm9SdGLPYsxyj02cHM9+8WEPSgAgTy4C5e9lnIL
                      PUbWYj1VVZ69p0nKPYNwsj1Emtg8aj5OvXqhbb3HEb49ova5vSTbEL2bZak9MUfEPROVJL0+ZQ09
                      AOcqvT7vMj0aIgU9h0MqvfjJpTxyOa+9PgyHvbraGb0SegA9IS+mPaBXOr1XaJE9WjUQvVt+l733
                      Q5s9XpkFPax8gDzWxZS9KDLUvFifAzwJ4Lw9N7YsvepUD72riqC9mMbTvNAJcLxAxaA8GJx8PMBa
                      8LoRE6w9oFMnvQBewLkwtTk8GdbHPb3Uuz3nsku9TMnSPKIkQT2w7/e7G/ywvQSJ/DwFPr29AEi4
                      u9psM73JhL09mlBVvSq5Sb0ApCq9sP2cOyye9LwDTzG9fSdevejUv7w6+a29q7Wavf1hSb2dD6i9
                      LIGlvBaJJD2dyoA93hVyPYAmzDySRk098EJaPIr5eb2uLT49LmIIPTFRlz2oHwO8sGv8OwCAUbbt
                      8k29fTY3vRFDgj3YLq28bm2RvRoCur2SuTk9dMqHvL28lj3tF7E9ouS7vZRNpbz8LIK9hZGQvaR/
                      0jxAQna7cxq/vahfDzwTpMQ9YTOpPZ0grD0uyGc9RTy7vTBzNjzEQ/089VKdvd4Yi72gcrK7KE1a
                      vCWxy728jug8es5TvdWLlT3Jzrs9hqaUvecXxj1+YKK92OeGPBOJRb2KoRE9u8Wgvap4xL3i8yE9
                      wsotPXgwurz0Tgi9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTQ0MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDUzMTQ0MHEBYS5kAAAAAAAAAFQ66jzgDp87ptAMvVfnwD0ovY08GJ2PvMbTRj2gZ7A7
                      NotZPRS+zrzdiE29GKMXPI5DFT0AJg68YKXbu9mJlj3zGya9lUnCPTpwdz2wfBg83fYevW3isT3G
                      3ic9cD5mPGCLEr1QcTy9yfuoPaIefT1QdpK73fWhPXqpZT0IgZu9wmpVPaLrAj103/Q8fdRnvZKi
                      Hz12aw+946KnvWC1Jb3QlyI8p518vYdLoj0Yjci9zdhJvQXGxb0+XgI96x3EvegFNryf88s9FgpD
                      PVUJxb0IUYk8x+AzvYDDtbxAo2c8XtYZPe45Yj0Sz3A9gUO+PYglgzwwz447N6SzvWr1Zz1oQA08
                      VTiKPXI8Aj2dbZy94Z6lPaVOmj3Qfvu7aMHAvcTy6zxAEAi9gM97vTxr6zzVzo49q2a/vQayBj2A
                      +c66Hol8PQKKdD3ptI096t4uva0Tb73Doqs9fW7Fvbbbg71G+oi95LcFvbh26bxfObG9EZzHPQ3z
                      Qb0Y91Q8n4vKPYOkj70Q9ZO9sDz5u7QIrDw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTUyMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDUzMTUyMHEBYS5kAAAAAAAAALUjub0AxsO5cZWZPcTG1zxigcG92FmCPMBthjypCcA9
                      MN1xvNilXLyA/ze9QiYXPauYuz3Yp4i9/b2bvcAsKL0A6sy7HeecvbBCO70E2uw86IWGvAPvU72U
                      JdG8x+RrvcosFb2Q+Ca9eEKKvHZpCL3m2gU9AGDCvWsGvT13ZU+93KDuPKdOhD0AVj67WAqcvEix
                      3LzYN4e9kf69PQdQxT3ob1Y82C0RPKCNirxAWj69sGqJvZKuaT3nAiK9G1rDve3nuT15mYw9N3Sd
                      PaD6Sr0rQ7S9Z4DIvW0+wj0kOha9jVsqvQk1mj2AlOs7usR2Paxjlry0Jf+81P+fPHp/Eb3ucJi9
                      xVOUvXGHtT0lN7k9xf2oPUAj1TqYeys8oIRxvRgDHrzSnV89Mk/DvQcbe73gqJ88swEcveHutT0y
                      fgU9kR2JPeCfyL0w+z48k3c8vT3nLr3AOAA7coOWve0OfL2yrX89fscsPQ7yib1Sj4G9wuMgPVXI
                      jT0nWMS9CR2SPbuArD0goJE7eKOxvRiMg70=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MDUzMTYwMHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MDUzMTYwMHEBYS4BAAAAAAAAALXejr0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        AR8xPFUokjwLuKI8C7iiPJPVGTxqckI8roxtPK6MbTzfQIU8Gc+fPMf2xTzH9sU830CFPBnPnzzH
        9sU8x/bFPNIw7juqzhE8SVAOPElQDjwfAiY8v7ozPK3+JDyt/iQ8RHSnPLCBiTywlXM8sJVzPER0
        pzywgYk8sJVzPLCVczxPcNk7b0ZTPHvKGzx7yhs8MiQDPP8FOTyoYTY8qGE2PK7PaDwdoas8caJ+
        PHGifjyuz2g8HaGrPHGifjxxon48T3DZO29GUzx7yhs8e8obPDIkAzz/BTk8qGE2PKhhNjyuz2g8
        HaGrPHGifjxxon48rs9oPB2hqzxxon48caJ+PKUuwTqjG2o620dSOttHUjrkbN46FPivOkEKkDpB
        CpA6r2OAOhIcVjrB1yw6wdcsOq9jgDoSHFY6wdcsOsHXLDr+pg87nKvqOmlu8DppbvA6NB3OOutg
        vjpQYc86UGHPOptVTDof1ng6o3iMOqN4jDqbVUw6H9Z4OqN4jDqjeIw6vVwdO/nzoTq9ods6vaHb
        OgR1Ajtx7rg6Ppy7Oj6cuzq8+JI6FV1HOiFghjohYIY6vPiSOhVdRzohYIY6IWCGOr1cHTv586E6
        vaHbOr2h2zoEdQI7ce64Oj6cuzo+nLs6vPiSOhVdRzohYIY6IWCGOrz4kjoVXUc6IWCGOiFghjo=
