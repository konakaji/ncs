N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0NzY5NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc2NDc2OTZxAWEuhAMAAAAAAABwG9q82/M9vqyJib3cIZ29vFOFvjQ3h72AqES+Y2Vx
                      vgx+6L3YtGK9AL5WPZgGT73FTpM+sOvivaANWb3Yr2C9u3opvrKDGz7E2pO9yqUxPh7nRz6etAO+
                      4stBPuYqV75MFJq9qqdrPhunIr5A0CG+f12UPla4670ufgm++HpAvYATGDu0Cqi9jMiVvoBuzrx+
                      ul6+8KUIvvWJpD70UOc9izGcvriRH73UzPA9cGq5PAiUMr643g69xpMZvuaCOz6QkLq80jRwPtxe
                      8r2aDy8+fj4jPm7Vo75WdnU+Rr88PpKikL4ljKQ+SAx3vUjdKr4gqu89Tt1Nvu4sXj5CH08+6A8l
                      vWCx0r3osBC94DgCvUZhAT7ohSy+7yaDPqO6lT4LMIu+DkpxvptoqT7vt4c+tG6SPUB53j3+0ZO+
                      Su5HPuYu8L1rO48+9GKCvVGkiz7a/QI+0zOBPtZpPr6Flpg+OM2avi6Bl77G1GE+Bvy6vTQClT0M
                      TN+9fjlcvpyvor7/sYu+tspPvpLrTj58v5A9e7OaPt70O74b/YA+A3KlvpxMlz16cnk+UyE8vp26
                      jz7WC5O+YC0WPCNjoL72lAE+wLr3u/vDhT7GS1c+vICHvUIgLT60+to9I0MlvoAX1Dwww6a9gJXs
                      veKDj74fH6E+pl8avmenk75MAv899v/4vfExnT48fau97pyOvt51fj7TzRG+IampPgQTij02XGs+
                      By+Lvi7WhL6m/F0+rb+IPrPBWb4WEB8+wFUoPQl4hD7xvpo+1amNPpCvb74i51Q+iHB1voD9h7wj
                      c4w+SBgLvVsRY76okDM9U18Xvp0Qjz64Tw49bL/zvb4sNT6G/lw+BHKMvaZqOL5mxrC94DTjPUBa
                      N70zDU6++JBIPfcsjz6gJjS+CTeBPrWinD4wxRw+xq1IPhCKyTyBoJ4+QFeqvEb9dT68iMS9GKVd
                      vsCexz0AzQu+Fjq2vXuUn77LSpy++jVJPnw9sj0wYuE9Q+dMvu4/qb7S/h0+wHYcvT7BTz5QDl2+
                      cBqbvh6uSj4H+5Q+4OoAvRAvqrwA4pw7RtopvkAywr3C9Jq+cF4pvqAj/L3GjPK9KOpnPaBTJzzL
                      5DG+AIBxvKKhdz6sbuw9qYGQPogwQr3Ivn89kI2yvUiKGb4T7hC+5FnePbDtWb4ulIS+TcCdPkBR
                      AT3M2rm9JDeyPTK+eD5yD46+7fSYPqPQer4G0BY++PRnvUrzXz6rKyy+Jr4UPkyi3z36bxo+wBWu
                      u8D4xr0fBoK+sEJUvkAHl7xHvpU+NY2OPigmDD6G2V2+UyqRvi+6gb5QVPu9R5mhPtJOQz4YeRG9
                      8kA1PsZFMD4rNyi+8BGBPKCe2z1EgrA9llE1PgiXIb2KvRc+EvaavnZ/Fr4JXI8+eJQkvpLCbT6Y
                      02C95RyiPlBczr1zOGu+OhoCPk8SpD6Ae4y9mgBePpfWnL4H0KS+8ETTvIrMez7kyMo9VoPfvdT7
                      uj2QV/i9hpBXvkAsjr4GFya+YHSDvgAgmbuu9Ie+M8V3vhdan76IuTW9EGKzvYA9KbyEQZO96x9E
                      vi2hiz5wAZi9bDGBPRY6br7d/Kc+gQmqPs3foz5MjbU9TFXhPQvxlr7pzIU+9xiXPjZhnb4AacO7
                      8Ir6PXNyNL7e9ia+8K6UvihIFj7y/D8+0IeBPCzenb5Uk9Q9oByfvqnNpz4A1Mo7a6mYvgPhi762
                      H1u+Yx+FPoDDDz5SnTQ+AzsDvnJMQj6wHhS+4U6ZPlDCLb5T0lO+/UuWPkNTCr6FuIk+rEmVPaZA
                      ur0j/mK++FQIviA8IT4WKDk+GJhlveZnDT77/og+Phw0vqjMdr3MnJu+3hcJPt5/LD6Ky2I+aKZv
                      vWgtMb0yhFk++uFuPnq0XT7fZIc+ulSlvoByxj18Pbs9QKftvfCPzLzQ2/a9KZGUPuYRaD7Az+e9
                      NgtUvoA5ZLxftJw+EqwdPjJsm74AXXq8AF4iPt7DpL6Ad6O8iI1SPVuXPr4gWBe+ABU4vAD5CjyE
                      Mpe9Dm45vpDirzzGvqy9rlRkvsaz372wtLm8GLU4vr6yYr6YMxE9tmdDPlxOuj2A0509cDVxvsuM
                      Z75w/d+82tsaPk55ir4QF729IN0cvLhOlL7gkFa9on9lPqMbhr6ANQI9sOvYvKDjPL6A1s69sq0v
                      Poi5bD1GSGu+IIG1vZqWl74K+jA+ix8OvjwRvT1QTM08Q2Ajvv4BQL5+LR++54qOPthCBL7fN6C+
                      fJrOPSC47z0Ge+S9wst1PjOhoj5O3WS+cAFNvgAiVLxDmow+agpWPm6tOb4CFpm+rTuhPvnMkz7A
                      jkA9HNvKvd5hMD7gYkm9oEF4vIAnS7swSAE+wCvQPGPBe747iII+YJCAPcQK5j1AJpc8g+Q5vuCe
                      M70spbU98CQRPqaNKb6YE2Y9sAfkvW3CoT6TyHe+XkcMvpLAez6WUTA+Ttx8PrhzGr1FHYk+gN4u
                      O/tWfr7Q6Oq8Cg+nvrD0/jycsqC9uK8bvtuRB77GOns+5RGlPjD20LwGxq29055fvsAkpbxWSBq+
                      tl6AvloQLD5K+Rc+/pZzPkA59D3wwvg94LwLPZS8gj0Qjuu8EziYvnJCGD7a6JK+04V3vgtilT5I
                      7QU9ImhrPoZ2+r3oG0y9pMC0PUa0Nb7c1rw99yGhPsCwGr04UgI9kCGkvoiLA71IeRe+pL6kvYWj
                      lD7TTzG+aKMlvZfcpT77qYi+fqQGvoLpLT4uVn2+MNKivEhSB76FcYw+4CgSPkRG7j2Q+my+Cy04
                      vgCapL0AcRW+tkNNPvuPAL7DziG+/BLUPZiBLz36gTY+5uUIPkg+QD1WOce9ysOBvravxL3Of3y+
                      khecvoYRYj4GAhS+0B/9PUouUT7ENoY9QLvLuyz1k73DDKU+so89PrGdhT6g+fW9gXSOPu5XTz6m
                      xnK+9OmHvq4BSj5KNDw+SxYLvnAC3j140qC+uOUMPUZ8Lz5mFve9EP/yPYzChj3qdww+oEkVviU9
                      mj4hjo0+QKSqPQgjC70Yaiy+tqd/PgJvhb4Aary7suR5PiCdaj33I4Q+lKDAPSAvir211ZE+oNkm
                      vgDVub2Au6c8+NslvuzKrL1qtmU+hKvnPfNiQr6QDn6+QFjbvVhrQD3QTOM85m2qvrsZib4s2OA9
                      QPnnu+mjhD52BkE+C6CdPhh/Tr14fCY+VPu7PfhCVr5McYa+qOMBPYXCkD7ekEY+0gMDPsbPcz7A
                      Ft47/kJXPk0Khz6mlrS9gAnIPIN0dL4OqHU+AtIRPsz1t712tsK9PJOuPa4dNz5wh5G8JW+aPlaU
                      NT6o2AI+8993vlDA0jwbwhu+RmpvvnKMBj5mMWM+6GQOvbzi4T1b0Da+HC7uvRhXXb5ggfk9MjOF
                      vgCIMTyKQw0+iH8Lvm7hT74+LFy+wFd1vU40UD4I7ii9GdiOPkAIPz0qY0Y+IIDCvQY4Bb4wKxs+
                      /FrBvQwMnb0AxlO+Sq1tPkCFkTzi7Ws+nLbKPcglP76T8ii+2FQuvWxu8L1dg4g+q0BJvsDbk7zg
                      96C+BrsSPjjMa72E2YW9eBuNvs4hST42iDY+DLbqPXaB572j2JM+K6+iPuwh4T2YPU69IJ9hvixq
                      k76cMI49wOp2vvmejD48X889VgpzvuihFr0wtvA8xLHlPZRzhr1g1FY9MDHevLxh+z0GUXo+c72f
                      vgq8BT4wJKi+CEBHvtGuiT48Gam+q+6DPlA7kb2+Rh0+qoVwPphIjL7YqVW+hquwvdbMXj7tHZM+
                      rzaDPnQe8j1M45690mx3PvKsLz5k8ow9FjaUvq6pWT7UJJO+MECzvADEJrv2ojs+vHGcvngHUj1F
                      9IM+oEpNvjdIhL5A84K8mJ4xvRyJ1b0KJaW+GEYevqh3DL47zBi+GBoiPYLLdj4oIzg92wJVvqD2
                      O7ww5d481FmRvoDg7TyfIqM+I8gzvlooOz6MaIS+Q3hGvjAe9zxMrrM9/IS5veWMmT671Bu+QPhe
                      PQPoTL6oeFw96GQgPTvcR76gZ5y9EGaUvByQrz1WTmu+dGegPfb0273XX4c+wCBwvWAyXL4QuoA9
                      8H3yPD3mgT7YOSG9IsxiPvKnYT7jeXW+MKrFPYb1+b3gP3y99tW4vYTGhD3qLXg+XzCgPjwx972j
                      G6O+a6WLvqlSiD4GOjI++G09vq6yBz7a+0I+If+VPrYQjr6tKY4+CI+AvgO+nL5L4qM+UeSaPoQT
                      iT20f4M9nODdvSDWRb3qlxo+QKyTvqIdGj6o7TK+q6UcvpeLm74Oz5G+9mp5vmDHmD1gXNU9ABub
                      OjaxEr6WZBM+5QioPtmUpD7W7XE+ojZMPiAfY7zA6oY8Oa2cPkR2sz2atTM+W+YhvoBoBTvwntk8
                      O16HPqZu370A7De+6ztDvpjuDD2ZKoM+bQmGPsZuIr56lX0+O8uCPnAGaL5GknM+nQmnPjY5pr6A
                      2GU9Ey+NPtC3k7yA7R6+APUqPUNGbL6yXXU+ut85Pjbbzr0QW5G+7oRrvrQ6pb29+pc+88AuvgB8
                      u7yXLI8+p1+kPhAH8D0DhCO+8mM7PsCayz3iGEk+koFbPiI7Xz4AAqO8rmU1PgN3lj4AznO6vM65
                      vVokbj7APII8JuGCvuCB4j1A76g8trUWPm/gkD6Cu1s+Ym4/PvOuU76OuRS+ELoCvhBRoL5gLi+9
                      gHJ3O0onQz6sa6c9YC7bvbKKaT6y5yk+2IksvjBInz142ks9jjILPmQdj70IYFc9c31YvsiAUT2M
                      7LE9K/aYvuKFST6wOMe84yCOPtBEar5OYy6+OCQyvjjbe70=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0ODAxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzY0ODAxNnEBYS5kAAAAAAAAAO5sWj5+HDo+hvhKPhNUT75mC1i+RrUIvpr6bD70V8Q9
                      zGSqvkDDVT1l+Y4+aGQgPqCeUL2ivDI+wF7kux1tkj4mKfG9wuuavss7RL4Oaly+iQ+mPqB+tT0E
                      f5E9AJf7OtZ6V76gb3m+vMi2PU7Ndb7gRQO9UFa6vBBRrr0qTqW+zP20vQTNgb3RRok+HCzrvR4z
                      E77JuJQ+ym9LPlkCjD7gDY896s1PPrq4hr5M8YQ9k7AqvjicND2GGkU+QV+YPp/Vg76Qjoe9rEal
                      vahDCT4mbQq+xBz8PeDqBj1XRIM+TDP6vZBttz2YaiA9tKOAPSt8ab4Afre94jlnPsyTsj07dWq+
                      Dq4VPt5nYD4L6oK+4G6sPZoIpL7gjVI9djBSPhJ0cz7W6v+9o9YQvk5zqr7I3Vi+ZrttvsiWaD14
                      TVK9kFSovVT7o72YBDk9HGr/PW6DUz5Y5iO+cst1Pi0Upj7GqYK+Y61hviK9WD4TwJ4+RgjvvXbY
                      AL6geTM9PyyFvmIGZz6/W5s+QBb+uzlngD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0ODA5NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzc2NDgwOTZxAWEuECcAAAAAAACyoQs9WJSjvR7peD0qohA9VHqEPDTfnzxYE8s8ef6o
                      PaiOfzypXcY9MIEMPBnelj04tv680Ci2u5MPlj3qIXs9XT5nvU4POD0qQI29lYa+PZ7jq71kG+I8
                      k+OzvfSwjLzQkhk87BrYPAewK71/y8A9aeeKPTOAq71NMIw9wfjLPVNner2wzQ08QDZvuzB9NDyY
                      kT684LqivKLeSj2hNZ09BZewvRiDp7z+lS09oPQeu2ggybyw+wK8EGJfvA9Zqz0sm7Y8t/ZyvUBp
                      +bz0ggi9ZkKkvVgUnrxMTf28QJNavBzoCb1+Rm09ANseuyCbNr2o2py9IBipO1Z1A70s/8k8zRfF
                      PbTBnDzfRrk9ozWtvSBkxb23iYw9/5ixvWB8DTsvHLE9bT2ovbAVkjuuDBY9HvZtPZKmg7364gG9
                      WNtZvN+yxL1IsMW8RH7PPA0jyD2WbJq9cDo+vCcQzD1Vecu9zSKQvTc5gD1A8Aa75XqnPV4UaT3g
                      cIa99euZPcgaj72aiis9gPJLvRuBnb2CXiI9WFyHvKoRbL0WnHk9rrF+PbBBsLuPc7Q9txW1vXBf
                      VLy5HMw9AADEtihkBDzDbJA9WhBGPQBf9TumgaK9ISOOPWBnnr34Ft68zcqevShKuzwHpZM9aJCV
                      PAOHnT0AIsW8YKeMvZDFlb1ymbq9pkx+PXdKmz0tA5C9d9qjPe0EiD058cY9yIatvWkhvD2oGkG8
                      EBNXvLlalD3ogv6887U0vdKRsL1B3aI9Iog4PUZcEz3MltE8wLk7O8BgqTpgoiG97BDQvC2Oxr09
                      cre93QjDPVogeb1wIkE8KLSOvNTW/DxQi128qkQTPT65Fj1YrVe8V17LPZ7lDD3IR8u8zxuXPVAT
                      cLzhHIk9AD7BOaqot71WzDU9Bi9qPd/uyb0o4rC9LRObPdjUmDwrEsY9SjmPveYCQT0diUO9NDml
                      vKkkmD0KgMC9MAaWveAagTvMf/o8VyORPZC4Bb3zgEC9I7HEvYCazrx0uaY85vQIPQrkCz2SBQU9
                      IUuDPQCiFbzuYjM9kGNEvMC3r7wd15a9gPImOoBJkbuIqaQ8O2nCvZ/BgD2XhbU954efPTgYprwo
                      uh28wpovPS41LD10hIC87HiCvVnOgz33wVy9J4w5vXrTYz1QjJg7sSudPWJTh72wZmK8wDkxvcAH
                      ebtgSFI76NdfvABV1bxRho89cGNPvSqmir3B6Z49cJ5/vdxm0TzV0rk94MipvIeluz0Ms9482qOP
                      vQDg9juHScW9AntXPVl8jz39pFa9zL/vvJrDQb0pHLk9UJtUPO2pp72QoW287nNkPQZAdj2s/b08
                      ostqPTmstj0Mjfi8Iy6tPQLZSj22nX89Irh6PWMDuD0ioC49AAD4tOD5jbwK/Fi9BxyVPZr5Mb0C
                      E289QN82vTC3zDsH91e9jlFLPeY8HD0G+m89rSR9vYCCOjwGSyk9bFSYvDgnjb3ANgU8QLYIvYiW
                      x72wWrG7X0CHPUq6Qz0jl8I9nYS7vRSP+LwMt/a86ocEvfrad72mdJm9NHHFPEBVK7sAhUe7AjhQ
                      Peg3nDyqkTG9uCnovC/tsz1cqvg8AjzFvXOrc70AgBm48AmkvYLMh71zYri9EOR8vQcpxD2HmWO9
                      NAS7vIZiWj14SMy94+24veDL4byADYE7TBDYPFomCj2deMc9AnhUPY3Yoz3LKaO9AONKOyI/Vz0R
                      LJc9DbjJPWxn3bx361e9em4jPZaFnb3QOEg8CISXvUBIWrxmCw09MtgFPSofKz04Lqy9FdOQveAk
                      vbsrtaW9/tmFvRA6Ur2l7Je9iY29Pc2aVr379bg9+NaIvSyKhbwOfhU9MDtYvKyXBr0w2Zm7ufKJ
                      PSoZRT0QKR68AKSTvODX77ynYIw999rGvZDBArxm5JC9gEZVPFEGrT3CAVU9siwiPTjY2LxQrNC7
                      0PwjvWTP3DyKoGa9ZqsAPfppIT3eGhc9+CTEvJSuujwAipq6Wf/HPRqZgL1ArpE875aBPUNEWb0o
                      KZY8orI4PSJcZT120kc9p164PZkRjj30Sv28jO6nvECcsDxUkxa9ki69vZABhb3d7K49ouE3PZxI
                      0jynVME9QLWYvX1tVr12m3g9jL3QvCjEeLz/96g9QMNhvDONyz3VKLm9EACUvTDMALyCKz89kDEW
                      PO4Ndj1+O6q9LC6wvDRQyjwDrLQ9IMvWu3SysTwcefs8B2FQvQ3qLb0gfKu7AsQSPdrzqL2TWRu9
                      3O/VPKXIqL2AMvS8VmCPvXrdQD0tE5o9iM+Vveclnz1M9Z+8okxIPUYnPT0tt729kFMDvH75Vj3R
                      ysw9iby4PXPTJb0Uyb68iMGNvOC6R72WByg97oIlPdiyzbygUB+9APiNuIkbtj1aQi89LZrAPTY2
                      QT18A+Q8sd6APazSiTwoRbq91tBTPahxvTzgSMm9wW6NPf8st72QYXm8mSeiPVDEMr0406y8Orp9
                      Peoxwr0tKR+9zSJDve61ej2+SUI9te+ZvaBgob2AEcy9jb2xvSyDibyAmZ29wyZ1vVrqe73z7p69
                      gEbWvEMMIb1b1aO9L9mjPQB2HzwpnJQ9N60yvYD7Gb2VTqO9ADzyO+8Ljj1AyFq9gMc9vSnCjj2o
                      xG08bP8GvUg42rwdxsy9wLO6PDioirzcroK9xwe6vQyFAr3R05k9AJ+6PEq5O72g6va7jBfyvOgN
                      +byAK+67rzOwvaDxijzM5Lg81B3NPMpaXL0gVZe8R+xrvUDY1LyqV4O9V6yBPaILv72N8709dZ6C
                      vQAwcrx5Dbc9HiE4PVqZdb2xj6U9aACnvag6krzDWsm9W36svaANqb0NWD+9qnsWvUdSI73YHng8
                      lTepvbCyIr3+03Q9TI/rPF39nr0F4aG97NKkPF38yT3Pr7+9IXXDPRPCTr1ArMq85ps1Peic2Lwi
                      7FU9uurKvX35uT00obs8hdKsPfKgTD3C/Yq9fmAhPf3Awj1xBLs9nHYBvRgNlrzCKWk9hBPwPIBI
                      0Loo6lc892nEPdUUnz0A4IE7h/BBvVfLu73IzZu8ci03PcpzOz1Jcaw92gxuPaGakD3v/r49VbCL
                      vXKWQj2Wyou9Zw8uvXTY0jyXpq49BKTOPEm3jj2DUr09UAIWvPDlQr3IYa69k9DLPWZ2OT1zWT29
                      ZfOTvQMWJr1URtw8MdGFPQ6Go70XeEG90M5lvOjqZTybSJ+9PWt0vVEWxj2olKa8GAxBPJfFVL1z
                      hmO9rL6BvKbaUT1MT70849y1vXocSj30SrS8sO24u90Dnj1GkXE9dGacvMDtBrwSO009fynAPfMl
                      wj1aywy9tk1EPfMya710JO48sNbEu8E9jz3d45y9F3qvPffRrD2AxsG6NKbmPPRd1rzq7Z29osdd
                      PUWRyb2Mf4k8ypfFvZi6ibwgcWm9OgImPRVskD2gIw67kB9PvIcEP71AvRW9EjbCvVCG7LvsPtW8
                      /QGYvYoAw73xocM9YHblO1xv+jzYq3M8zft/vU5FIz1oqGa8rQHKvWBhojyNqZI9MjtAPaCgRjt+
                      1149viV6PQhflryFaZu97Vs4vWklhz1YCY29YAa2vEydjzwMPvI8/fGbPYDWuDoiGBI9gLMZvScP
                      Jr1giS69aWK/PXBDLr0gwL076EmNvMxSkzzAI1g8SrMjPahORjyx86I9kA0evAGtsz0QYJO9DoMy
                      PWAAhLy5XMs9ympaPQoBKz2ufxY9W3LJPWBGx7sDx2C97MD7PKWlqj3KJHc9NfewvdoymL1u7U89
                      OdbFPXbXqr1LT6e98He7vaM1lL2oDm28UweEPSinDzwdyLI9EAxNvEjqxLzo6A48p1ZOvbpNO72J
                      t6U9WrUvvRhbv7wgFsQ7xCvYPEpWYT1Ykfa8MyI7vfI5Dz1+4jY9fWRCvbcOij1lg409p9lTvT0t
                      q73zfqG9N6U4vUoiPr3qhWC9qCpCvECZXTvT3By9oGlJO6pZVL2eUKq9GKCpvWdenz0lfLg92Gan
                      vThsxr3Piru90+NMvTC8prsjBVW9Qz+2vQuSvL1TW4c9A3+TvQCTJTyKW2I91aSPvWPBlz3k0/k8
                      J8ctvX39or3PhJc93V+HPXTqoLwihl89U18cvdbxST2Vwps9+i+MvYmyhD1YVOC86MKUvNG4pD31
                      Lby96/O5vThkl72uulo9/2CaPbgwm7wABJe7kg5nPSzCh7wYYU+8/vh8PfNQur1nLVy9QPQ3vNej
                      Pr0b+7y9WW/KPZ4xZj0m1am9lkMyPUyGuTygqta8K02dvSQ0/zyjEoU9eJiYvdVqmr2jIa09dJiI
                      vPhsqrwKlle98qhoPafXjD3gCrq7gOmyOwB/k71atiO980N7vSAbkb2gRpw7UAIMPKiKHjyQ+VQ8
                      gNv4OjeghT0Q+Gy8YI40u13ulz19Sai9ALquO3CHh70FNMk96gcOPS0EQL1wDhK96rE9PdpYzL0L
                      Cqe9tEKzPEhRrzzycEA9PlWJvQxPnrzVg5Q9W5ORPVczOb1g7LQ78OVkPPkQnT2d6y69APPfOSWj
                      ib3Rm749/NX2PJpWL720JPS8iASnvAj1jLwHy6w9zsYdPXO2Hb1wXnG9ur4yvbOWYb1tCmu9mu8D
                      vcCuoLq1MoU9XWhLvShsBTyl5669BeuJPfVQgL1glfu7LaJyvVTHoDzPpbk9nVyfvYAOqbyWBRK9
                      OBmSvVr7WT0MorC8UqY9PY1cXL1t3Ta9CUCHPaj5sr0AV1Y6bnZ1PekuhT1sP6Q8tSrMPQe2OL1N
                      UEy9wBKyOrVdqj1Qpt47CrWnvfJ6Kj3R0qE93og1Pf3WP70rCJo9N7EsvXP2hz1gHzO7YLAwO4IR
                      vL3AIM26XeyRvQhRjL2Horq94z++PceOuL2NRpe9WkM+PaiBL7wA4zE6cVmQPX7aMj3YOSI85EjU
                      PEA4A73VG7i9jrmOvQdbbr1o7QC8klVbPXe1jz3KzV49QL4FvWiLDrxrbKK9oG0nO6sVpz15/ZM9
                      ZWy3PSZKFj0Gyls9vZ1zvSv9vL2DKk29sdqvPRg+wjxna6o9CbrEPa78YT0AG8s5YCvYvEXNjT1S
                      X3c93zWzPVBkGzxb3ss96Ek7vPHkjj1+ZIC9AIPEuUyY+jxS5zI9Rj8FvQriDT0N05M9AnEbPQDl
                      qDlUUxC9ct4ePbD9wLu8NIK9G8TAPcyWibysWsy8mr8lvc26iz2mYAA9igIVvbC5ljuGdWg9A+SQ
                      PRq/Lb0JFME99VTHPRAVAzwuzKq9zGfZvLBIvzvWwJS9EHU4PDRw07wAA3A6gT2SPQBb1TlPc6w9
                      XaeEvQWrsj1o/Xq8NRTAvZJ9cD3IUMQ86HVzvEN/PL3dTYM9AARnuRClWLxQqaS9qD6uvOLnt71M
                      oRC9AOO6OYxah7wiKSM9HN/pPAhepzz2ZI29jIXPvICfhzy3/rG9UNyOu5CPBDxRbr894zZQvWjk
                      k72AXGO8zc26vQD42LhoS3s840VrvT1oPr0Is4W8wGAtOwJHWj22xRG9AJtsut7Gcj1wZTe9NTrK
                      PZacEz11eMw926i6vSKCKz2TR3O98a6gPboxDr1ANZo8y5i1vURf8jz3T7a9wqYxPZ/quT2nxze9
                      1/bGvXBbMzyeiTs9YLq2OyRF8TxgWnK7sEkVvTjKpjyWGkY9YHN1u6reFz3AWbe9YCF9uxRT3DzQ
                      OSU8Q0isPdoCvL0wr7Q7IFMDvXWQuD2QjhY8MC3yux1PMr1iCzI9AO4fuxFTjj1Mrvc8ggAbPY7Q
                      UT2oejg84DSpO2ya3LxemWM9a3aYvZ2kc70Aes+6QH6MvIOvmT2AOdY7YOSjvPIqOz0Q4HS8YGSx
                      vcJkDj00+Py8A6TCPUY8l72hd7c9srxQPX8/r73AuSS8UjG5vYguy72DCMI96GdxvFFllz0PJ489
                      XU4mvWB7Kb1kXNk8QvBvPV/3xz2SuXM9b+DJvX9cqD0jpDW9B52HPU2SL73+/x09Pc6uvZKKFT32
                      IRa92aS1Pf//u71RV5M90MIIPGzZoLzSIUM9EiFjPcoYrr3D/Yk9N0e/vZiJGbxoKz68OKLCvLnN
                      jT2RM7g9+DHhvAxPiL1KBT09m9eWvRCFxL1SBww9ODWbvEnnoT3DHoA92gIwvQ6fdD008e08luB7
                      PYJgqr0Z8oc9hAbwPLdmbb06RUI9yHGhvKoxJL0ORJG98itcPRR/urw4DKO8HCH7PBYrCj27E5y9
                      0rVDPXixizx6T7G9t2CWPTAiY70XQTW96NI+PJ5ej70QcTi94xOTvQImMD1gLKe81diePXn/gT0g
                      66O9Gut5vdqZAr3qU3k9YI7EO1/8ub2G1Yy9M1evPdZslL1o0ZY8jnOmveotXj0I9re8zOzEvICk
                      g71RWJc9wCJKvSqkMD2W0j89JV6Jvad2mD2A9/67ljkUvcPxoz23MKs93CSGvfYEYj2ad3O9Ldev
                      PWAGGTsKc1a9EPOqvfOsd72dO2O9wMTDOi82ij3Vham9JucKvSDhpDuvWME9IqcaPZaOjL2i8RQ9
                      mXPLPTQWl7zYfQm8SyHLPUI9h71W8wO9M+F5vSaxMT2uCoO96GiVvShcPbz6Q0U9ZY2FPZibH7xc
                      4fg8/qwWPVr/fT3I6ru9duUXPYFItz0g7uA7fraSveIuPz2qiEU9BWKDvWAwGL2KqDY9Wo1WvaEj
                      gT3H5Y09bBn+vPDtgb0DXzS9mG9RPEVGpb3LYqc9gN7duqdFKb000by88wu3PUCW57xQ03s8dhlR
                      PVNko72WKSE9Te6BvW4kLz21r5C9ZZfIvUq/vr2wELS9HFSKvT0Hw73RUsA9AOO7vfWBn70SAzI9
                      zfaXvXgy7LzCZwA99fKQPQBE2DqufWI9Pcwivb51nr3og6G9NnSUvQgtuL3se6Y8F59pvcBAXLuj
                      Y8O9KJLHPMIxHj3IW+y8zV5svRBAVzwQcia8nNrUPObWez1gsZ48OJm5vX/ysr3A3n474L2XO2Ei
                      sz3BnZQ9mmO+vWiCf7zAhcW91MXvPOANxruB0qo9hZ3LvayG1LzqzYm9RvYSvUAyebwCMpm9bsoM
                      PbCG8jvGsA29AP7QujCp87u3Ese9avoSvZMzfL2w/rS7Uw19vYPuI70AIoi6x0ZlvSlkkD0YK6+8
                      aJd3PAjLt70sEvU8ejCmvcADYL0g9eg77SKPPYQP1jxazR098GQqPEPqvL1obge8GKgmPCIQBz3M
                      XY28zLj5PAahTT3QaDA8ix6kvSSCBr0rnbE9wK0gO1fpXr1QGSu9kC+tvdc5r71QVxs8YCPjvNYy
                      Xz1UAvQ8JIb+PJgsRDwM8aO8LuwJPQCMT71X1ak9vepcvawf6Lx3dSa9ZUnLPV1wwb3yalA9KG5T
                      PJTazzyqpAA90aSHPQ3Thz23xH69DfQrvUBtODt0VLI8wEz1OuhnMjyLiqE9lD3gPG1Dhr0OyqW9
                      +q5/PbMas71/HJ89isYUvX7gLj1gNgW9YJC9O4yLCr3VZbc92+OivccKyj3Yvra9f3i6PSI1Fz0A
                      rCc6AuQqPbCK9Dshyq09DYzIPWoYir1dSre9UGAOvDWdpz2QMgW8WY+ZPYDBdrotisQ99wJGvU3m
                      qj1zhDy9kK6EvbBJPTxyA1w94Lyvve80vT33jZ49dCySvHCNrL0Sygs9X6HFPbL0az0ajwE94xxY
                      vRo/er1dUYe95lYpPRp4az1g16u9uDnKvNBHtDtYf288UhIXPcA/MrsRq5U9I9TKvdDWDTxeHjo9
                      nnSPvb7gSD1+9B09BbHEvaxLhL1ANag66slYPchRor0cG/A88z5EvbYDQz14EpS8dD6RPCImMT0Y
                      Dnq86g+cvSgJrDw9LGu9ugI2vVAwY7xL+5C9jgkqPU3TZr2Cvmw9OseBveTZ2zwL/8G9+lJHPdhE
                      Ajx7/b2944JbvcAQibw39J89+aLHPXK0Vz2w2ne8gCyxvQCrbjxe83k9DSmwPSi9+Lx4Csi9YMIU
                      u+08k71kVO881/JmvcoaBb2Ffrw9cMiFvQOXS73AOTg8WshnvaDaR70Sqyw9rsNcPYA1WLwCQhM9
                      gvA0PcA5VLupuco9o2eGPXYinr02LzU9tPDkPChpx72ci9s8QYqUPWBPtr06Umm92kh7PQnzqz3R
                      UrY94FzaO4tYiT2YpFI8FB3HPE2iKr0U2Ic8SmMTPZXGrL0CQJO9wIOPPLJJDj1NgIU9yzSaPQie
                      gL0z2rm9p7RqvWAeYDtYKUM8eogjPUubpr1lB6w9B4qnPdcsrr0Bhao9c+8/vQJnAD1hD7A99NIN
                      vc5zaj2oRXM84xenvYDiNTyUaAK94Ftqvc32Wr1oqsy8niwpPdpDCr2FTpK9FGwMvUFsiD1VaZu9
                      lA2HvBv7sr1HU709rNvuPEDepjwYvms8KiOPvUoxPL0qDw+9xz87vWVvzD0MZM08p4GxPWMwjj2A
                      Qu+7FvcdPX4RUj3wMHM8g8p3vSonTD1gEhq7+mRhPTocYD3A0iC8/muUvbxLAr1x+cs9DfiWPZoo
                      a71iFsG9TOP+vFiXlLyqZ1w9cF8/vblipD3i5pi9/2+1vWBckTs7acG97Ni+vMl4uD2FqpW9G4e5
                      vYNBkz3iJL69J2gsvSKGVD1ak0a9tEgYvef+yD2m2z09+1O5PYCvsLvG6au9hiZlPWFCsj1AfR47
                      hxh8vSWiv73dsia9PXSgPbCiabxWQ5u9qVubPYM9yj0pg4c9KHTDvLK2ET3ATs681/CzvRfNe73K
                      9V49DMXWPHJRxr1Mqwa90txwPXAYEL2ofzA8QhQwPehLh7xKLQA9cy1NvRLrdz03HW290rgUPZgG
                      kjwUf4G9MCxbvSNiQb1uMFU9tZCcvdgQBDzgdbS8OFmGPI1qjb1YRMK89K3wPJWvtL2Q9SI8StZk
                      vaVPtj3KTis9VV2QvdQrB70Ke1W9iF6aPK2DV71Vxos9YFKkvG29kD3MHNa8jatovTJTrL2iGnk9
                      9TbLPbCOqbv2lDc9wCKePFCHWLxHroY9sFvDvWgnxryHbr29KP/FvaGQnT0d5IA9Ap5rPetJqb2y
                      Blw9F9ctvcDQgropCYM9vc27PW7eDz2D9ma9TNHVvEpEMz2toKU9YO3Du07RFD2A2m66lICKvSdl
                      LL3HFsq9GD2UvUyu+Lzjjh299yEpvXDKqb06Iqe9sLW8vbeplz2jS4c96VrDPQrvZT2zs6u9AI6q
                      Opa6Eb14yJ28AI//vKWloz0O82o9lqiYvSY8ej2gecu9IqaZvX2PrL0R1rQ9JJkJvQzFqbwcJtU8
                      2lJQvfAlDr3HyHa9rS83vXgKlr2Q90u8zrl6PUo3tb0HbmS9d6a8vRHarj2gumc7E1zKvcCgPjz6
                      GYq9xajFvdpMHr0B6ZA9oqe8vULUIj0CGQk9DlgkPc5mlL3ttB691geWvSxZ6bw7tqG9efiHPSF3
                      rD06JhW9AAeCvIrOED0Jb8M9/qWZvTGFiD2mojE9NiaKvWpuj73C7kc9+kYCvex6mrxnV1O9S2aj
                      vcBUqbpQz5G9KzHJvWS9+zzamBK9flk6PawvmDxcCA69SpapvTarqr3KUDS9gJY4upr5r73m+ZC9
                      ACUOvdh0f7xgDfS8zqiPvSEJlT0AEYm8cIsFPG+Skj3l96i9dHugPPnwqz03qKc9AbS3PdzRGL06
                      wFw9OFeJPJDQTL30nPA8/x2APQC7qzk+UCw90CUgPCqZAT26Ao29mpBmveLBl71f98Q9AKpCvOGW
                      wT2M9ZU8EOdKvDAFNL2ZAco9AG4yvZgQ3rziQxg9gUSwPVvvv73Jxrw9osMSPVdvP72AYeC7a42o
                      PXKmjr0Hm1m990l2vVqejL0SAmA9KlVIvdhuITxVpso9sNZBvGo7Jr0Sxzk9AOifPGCpLr0Apyu9
                      cFpwPDD9Nb3QGtm7u9i/vZrew70Atrq9YuZ8PfZzlr0IP568SBeyvZPryT1q7XQ9s861vSYoaT0r
                      GpS9uw+tPU4PaD1RjMs9muGuva1YiL1gwny7AEbAOdCzTbygPcu8OKeRvSB69zsAz348grQtPQCk
                      rLqYeKG86HMYPAXPr73YxFi8/xuuPY/hpD0RnoE90AF9PNsipD1AD766vTFHvRsRtr1TMsU9TCa2
                      vGG2hT3YWg48R/lEvbdacL0wLk88Le+5PWhfxr122hw9ApRzPbT44bxanqm99RWcPYBTv7tvr709
                      ElhUPfCqLDw74609WuxMvXtvoD0t4yO9UxkdvbfDb71ARaw6/SNtvaQc2DxEx9s8CmMDveNEWb3K
                      qms9tBy/PFUfjr3wLcC9+NbDvaH3wz0ubZ29Rg8jPU48WT026FQ9GBozPPawFL3twEW9Deq5vXPm
                      er3IAMG8uky7vSqzDL3AD2u8gUXEPYoyX71arCa94Dy3u/PDer30A5k8YE7oO0Izfz2AnSC8M7NE
                      vcIoRj2SrEE9BJ3cPFWJsb3aGXU9FvgPveiMVzyAAXI88NwyvMBWpLpS2xY9MDGZu40ZXr0QTj69
                      oIuOvQDA9bqtnkW9YjtYPauEkb2wGow713jEvWW0ob3XP0K9LL3JPFB1LL1nnEu9LfBXvUPSdL2c
                      HAa9rvRYPeP9qr0AHtm5o4A5vUDTxL281QK9QbOdPdbJnL2aEgm9EklvPehBhbxItoo87ql1PRcA
                      a70bNaW9ELcUvJQj5jzgu++89WCUvQxbozzA9V67ig8+vVSV9bxArhG9U5IdvRhbxb0AIS47MJ58
                      vftwjj0Ad0m7KJw9PK4TMD0AtE26gj1aPROKHL2Yq1M86oJSPchZvrwSMQE9feVjvZBnsL1YTda8
                      rfsqvRYrBz3XhUm9HKEEvQCUjjgAO3o7pe6KPZe+lz2Yt1g8E25uvQKjfz3kgOA8AJSMOkKRWD0U
                      IIK9ipImPeABqTzdrpu9mqCVvdJzKD0dOJq9apU9PX0Lor2g0i672M2fvf3qML1w4gu8wp6pvao5
                      Qz0Mc8e8csA9PX8knT2g60+7NMX+PNhSgr1NhJW9OkdMvSFDvD3TdpQ9ltlTPaAlYrtE6dk8YNo2
                      O8D8Rjs3l7U9fiERPWvCjD0erxY9Lg9nPYTb7TyAB9s6wKMevBoIu72Kcjc9MIyUvU+Zyz06LZ69
                      wuUJPScYUr0LV6w9YPKAPPA8Irwfz749x2xXvTWNv73NKG+9qDZavOWtqT1ye5u92GCMvRB+Tzyu
                      NaK9VSeNPZ38rD315rU9bOaOPDWRxj3f27M9naw2vbP4rj0SUnI9Gz+SvTS04jx6tAS9TeCLPXdh
                      xz1iOWI9oVmXPXUEtD2wVD68OoCQvdjw1bwshMY8+S/FPQvgnD0AKOI5EDR2vRtjzL2pj4I9EH1M
                      vaD1DDtSvWU916Q/vfE/yD0A85K7/ZJBvedQsz0LqME9QTGUPQTN7DyLDLg95mVvPbBDJbznq8Y9
                      VVq/vXfCJ73Vqbo9GoyevTiHgTz4+Iq8oE3rvMxTB72YS748c/9CvUsOp705Uac9zro3PUIAID3q
                      QB29rFUGvRKBsL00vo68ctQdPSDi77vTn6W9gMlovIB08joSqkE9C5KdPQ0+pr3j85S9ZN0SveJL
                      pr0CtgQ9wP37vIbaQT2+q3k9gOiJuuC70rytnqY9eA+1PDOUk719gZG9oVCuPWM+f71G7qO9SQmL
                      PWN9kj31xKY9yFinvKo2Sr0MlNY8+L2SPI7GJz3WTau9A8vFva9rsb1IQrG9ivIbveZvgr3TdVO9
                      2gJtvbfclj2gFbC9os2IvQg56Lzgntu82FasvEequj1u9wk9WvPJvRpbd70QNKa9QE+ePHDSAL1K
                      zJG9OOWiPEI/ET1ZeIM98B4xPDH9vD0IspC82KO+PJK2PT15Yrs97H2VvHRAwrzi+wg9cGaavfoM
                      Or3MS7m8M/C+vU6wlL2ZnZ89SFjXvMr+QD3N+X69wHpGPMGAsj3Pa7A9Z+QsvUqXbL2RlIs93qF5
                      PfkAsz3OaTk9oto1PayKorwbDJ29e82cvap2i71A2328+zqSPUCtyjxdVUC9QQ6QPWxE6ry0xpi8
                      wPxFPP1etD1EfP08wMDDutoiGj0HvnK9ALLGPKAqwzy9rZS9d7CwPWyYhDwy7oW91Gf+vMCsFjuU
                      6fC8y7XBvasjx729fjS9YHi4vHYzdz1prcc9ON7GvP4JAT3ACGm7Kt5VvZMKVL3TCSK9gr2ZvQGa
                      wz0w56U7pqB7PYdLPb0/QoE966WhvSpaVD1YiBS88d3DPX0gdL13oV290OSCuxTh9zw1Q4U9AGDh
                      u9Dhw72AuJA6/iJ1PXhN1LygnNK85gIfPWnDqT0dPyC9oPWNO5I+bT2AudU6dgOZvbQRwzxqFX09
                      k/qrvdpfjb1P4q49yRO5PT0Xb72RGIk9eS/HPWQG5jyHb4I9O6W6PSABorzQjLO7HXWavUBbXL1t
                      mzu9vy+zvViPFDyMPhe9L0jGvaAlaTuMiua8AA6Ru/kOoj2pwZs9b4PFPedvvj3x3JQ9opqcveBB
                      ozuaUjG90g4XPX8bgj3H48e9ewPEvaKZgb0uKG89eZywPXO9U70MO4I8Q3lUvSN0mj0yMy89CoCO
                      vSZlAb0n0HG9oWmnPSDRxrxAKwO7t8jIvS+Hxz3xv6I9ypdXPbDOITw2SxQ96t8KvaPAdL3Q0D+8
                      ABv+vEy49LyYerQ8SnYQPUiH8LxgBSO7AN1COkxUFr2Be8U9GEXovEJcy71g7sO9J4nCPfcoiz2a
                      hXc9TQ6FPRRJlbxph5g9gDjyOiIah706S2O9QFh2vMrZDz1YT448UGklPAE/xj0G8o+9Y8GtPSrZ
                      fj1064A8PNjoPLpAxr21cZE9fuw3PSxd07xtdj29KZ2wPTJDaj1uv6G9WNHTvIrbfD0Y01q8wrgm
                      PZSc1Lw2ACQ95UKPPeHruz1YC0a84WKiPSqoar0oSVG8vNjiPOiOmzy9Lju9cPl0PHjwjbxo9IG8
                      x/6aPYZAfD0QPhM8MK5JvJMlJ71C1Sk99KjLvNPlHL05vrY9B1/JPcilqDziT1c9YJ/vvFQM3zyj
                      ucG9IO/8vPxLEr1QInc8QNZvvEucnz2i58G9swq8PSD0pDzQhxS9sFP0u42Rdr3yXVo9ETimPRBC
                      Fb0+U1092F/fvP62SD3XOyS9JmKHvWauAr16ax29mk9iPb+vrT10vJE890u4vZg+Vbw2taS9UGD/
                      OyoMTj0AvB+8iltoPQDxNzqAvTu8wEC3OmGiiD05lrA9KthXvVJ1ob2Q0zM8/Q+PPcxwgLwH8rC9
                      Z/6yPbQF27xsBqo8xZSCPa6idz1GcH49tcuRvVZXjr0AwQk6WmJTvV15Ub1e2G494sadvaOuvb1b
                      Pqu9mGmAvCrcGj2SShg9sgRBPecMeb0aphK96IXJvZgoCDxJBqs9WHiuPJbZfj20gIW8gJ+4u/CB
                      Xb3ARhM8d87AvYmmoT1qWhW9qPXHPOe4kD0i4FE9sIGZvf8bxL3vt4k9WBNwvL3rlD1K+kY90ldn
                      PXmuvj14fbk8qLCGvVAuzjvfEMa9leGDvbZ0Bb3gxyK9U4uWvUFHtD2Hm8a9DZ0jvYcNJ7151Js9
                      2ZS0PXDoJrw0YZi833SPPcrXPj3TQSy9wGVvPBbgAr2nUDm9F9SzvQp7fb344ZW9EGI1veWnur2A
                      DP077cmNvdLBdj2zI5u9bpduPQBMGDssnuk8ilcpPWJRHj0jzqe9qAd6vGLhaz1yQl894KHuu7DG
                      ab1ODoW90KkDPOKKWj2Ciwo9AJlHO8H0pD3cegq9Cy2VvVWggT3HAV29LBn/vJgJiTz0GJq8j8DF
                      vZqSh706kng9pvgTvYCgMr1wcrC935e2PQgXpzyKeFi95wOgPahio7z9M5E9BxNGvdqIkr0t9IE9
                      Mf6oPUK+rb0KrXE9PNzYPAHVvz0X1kq93tRvPYD5hrwNO0q9gCXWugC6CrtRsI49iqubvXv/kb3F
                      T549Bp5bPUxjFb2pEsg9T1HKvQCZur13ozW9gGTcuiDckr0wCgK9Qo5ePYBSkTsKTk69QNmTvBLu
                      dz2hbqs9rU1FvQkKwz3op3s8bLntvPu7kz2A5ta8YPGGuwDysbk7fY49NfW4PSKgDz24a5O8Z6Yq
                      vcZcCz3wNxk8IGK1u0B2XTtiyEA9l2dTvXiPtjzwMGC8QIdFvOD8z7x2GIO9a1KwvVAJpbuytBo9
                      PkpOPXKrHD2oDNK8u6ikvUFmlj1ybis9zRW4PXM/rT0Rups95/ewPfahLj0YfGS86LI8vMrZlb0A
                      apa6yAOHvCzm9zzRarY9ZNoFvcMOZr0UtOE8cj1fPbJGHD16FWu9dw66vbKTDj1ztai93kRjPSqN
                      fD3j0W+9Tm9fPTN8rT2rX5Y9QM+MvZVJgj04dra8Y2a3vfo1Lj2AMTW8Uj1DPRNtar0bcpk9A0ZI
                      vbmGkD0M7Yo83y+7PQFUkz1OzDk92HPKvcCOTDuA3W28qKuAvQx3A72j4L89qqZ2veE7rD2DV4Y9
                      YN5AvWbvjL168h29OZ6SPTCterwA/Vi9V7PIPX38pD3VFZY9NDiOvEX3wD2QvTw8aYzKPbC4Sb2g
                      oTo7ncCOvSuPwb2oxAK8xnJIPcKXCD2SK3A959mXPac7fb0g3gW9kKhaPN0rsj1Zvqw9SS3MPfLC
                      YD2rY8S9w8iyPQCzur1u4kM95jpaPYxO3DzQIyC8aJPmvAJxOT3CdEk9qKOTPEpGDT2fpsc9VmY4
                      PeTu4TxsEIo8EUGkPSBQsrvAEic7+PGbvSP0Qb2wNIe9AGAtO/LcNj1QfLO7bKPWvPBKRjy9Irm9
                      EtAePTLxFz0ANaG7gpYBPeoKR72KtbW92s1yPbqArb3dnJC9c1uMPYDKYTznLa+91o+ZvQxuw7xH
                      xTK9KJQjPDusyD0w99S7AsaCvUTJ0DywOts7r4WiPRhQ3Lx2Iwy9sHwKvJb6Yj2pZIo9SVWcPVTH
                      irxoK7q9TXRlvTc3Tb0TDcU9wGoxux7EBj2Tanq9ldmmPRSSzLwVdJg9CaiEPUnPtT0apRY9NPve
                      vPU/uz2yZXc9N4ayvWmxqD0L9ZS9UC0gvQtZyj0yMAg9AjAIPTy4C70J/6s92EBKvJt6jD24qN+8
                      0LGrOzfgur2K0mA93haTvUtQsb1YclK8AH4YuyAEML2wuIw786E3vciuxzyyz529HHeFvVBVFbyr
                      4L+9wGgxvMa7Fb2A4+661rhiPYdhcr0mznI94TuwPSjfsb2lJL89qMbuvPqJnb1gEpS9cAmjvZ0y
                      Lb1AnLe9AE31O9SgkTzYXgU8cH4UvKACurxQWcI7rp55PVqRQL1bBcA94M8dvdi4orzAf7C9ABj0
                      Oyrfob2b7ME9EmwcPaSj9jxqtQY9N0BAvbPjnL2mwWQ9W2LKPZjvg7xBTJc92rtaPbw84zxZKbI9
                      112nPdrMcL1Ab6U6zPOyvMpmQL2t/l+9+MaovVA9y71XpYo9iF2YvCzX1zzt35g96vRbvTADT7xY
                      HXW8+L3BvaIXaz3bVai9IEbpu4Gbyj1fGpc9vAbgPC6tPD2ojHw8oN6pO2ADw7ugc7e82LesvR+J
                      x72n9rG9Ilk6PUtRmz3sX+28s7WpPToYIr3QAKi7A0hpvSRN+zyX/7W9h4+KPTyhgr2UY708GpWo
                      vTBqnzsXqmi9MPvjO9b+o73icX89aAYYvOqCVL3gB/y8t3mpPTrmEr3dTn69Oa25PRio+7ztsJm9
                      8Bo6PJLifD1w8hO8l4+RPc2Xyj0qyla9CtJRvURJhb1RtbU9hqhBPahfDbz5Jpk9rwe+vY1MdL3+
                      zVc9Iya3Pcx4trzJVaw9+iJ2Pd/Tw70wGDG9tG+WvAIsq708DNY893OvPRAsp73NVLw94FaIvEDQ
                      MDyQgJu9DVZUvXl3yz0EQhS9wfSXPaDg+7v92aY9BEDePFuChT0AgHK5YF33O6gy7bz9u8S9sBQj
                      vKyTDL2oFK88IbWLPZSIvDxsKoo8zMmjPLCmGDz3QKc9cghEPRsCiz0iYhs9PFkUvYbALj1eoHg9
                      LE4BvXJCOT1gaDG9Z+RHvWdEXb3aN6O9TT+oPbJKJT0AoNq8VSWKvTCZf70AIES93XmcvfMfT71b
                      C5I9QCcBu0a/bT1tb8O97Ve8PQDfxb2iiYm9FCirvMnBqT3gNL08JeuYPQDVELv9XrC93DwKvZ63
                      RT2LZ7g9xZqfPUp9Ej0QzmC9bawrvVJiBj0gPc279P2bPHahFL3oeiA8IGKcO1iaNLxTwGa9ZsYe
                      PeBr37uwXZe7AlA2PWjdobzm/0E9mMKjvCwMuzyNE5E9gHeaPBYHKD2SRSM9anJbvVEQsT328hA9
                      LfhOvXfOdL0YN7G8cJVXveCWnbsVeYk9F2FtvUCCmzw9Opi9G9yuPXCgTLw4nra9AHBAuOD6o72w
                      ZzW9TD+/vLvOmr1Itp88JrZEPUOhp73g/bA82LEWPCmftD0yYVY9oJpLuxPSU73Tw5i9Yl4KPfBd
                      P70AoLS8AG2oPKUUn73ABmw7ev+yvTWNk7375Ks9srtEPVb7VD3Qm1O922mcvfC2x71lvqU9uolB
                      ve0sr71df529AGP7u6HXrT0xXsE9BsQAvd6QFT0AQYG9QOZFPKI4Uz3Uus+8IIy5u9fPjj079cE9
                      8fCEPU+9tD0ye4u9bSNlvaPJPr1wpjm9bogWPUK9VT3AiGG8cn2FvahDBDywd2+8INFsvVCqGr1b
                      y549x79KvUXRwb00ves87NWUvMGHkj0yZ1w9UOXzuyy4D72p/sE9TfVuvbe3v71iil09C7uIPSnx
                      oj3Gh1E91y5EvfBgDb3dHMa9DRuMPVDDlb0KsAK9zJITvcFltz1jGcQ9ufKGPZR54bw6jZy9cb6O
                      Pcx0yjy+Wi09aI47vIxelLyN2DK90JBvvPzHEb04eZ48BoBpPfO3iz35Fpo9G7uPvVmIxj2gLay8
                      50xVveBmnbugd6u7bidyPcD2BjtEPM48erRhvWF3gj3rjKo9YAuAO7C7Db1UMaY8WGjHPKL2QD2y
                      Lio9Kg8QPWDabrthU6w9cJWlvceNTb2yDFA9m2+KPRD5ZjxSH1U9ULtKPGAx7ryKgj29NukbPZuu
                      mr2q+2E9Cr3KvbS53zzKWmA99MzTPHFgiT0KW1M9VjArPcOqer0UGpW8koMRPbYkez2wgsq7pDb9
                      PIC2V7q4BaO86NxxPAwuAL1TWsY90IYFvY9ntr3Hg5s9kuBuPUw68LygQfY7DIitvNDdLTzM6Mg8
                      4OZKvbT7ubzA5mG8YUqLPVj3OzwY/la8CAmlvcoSAT0w4Km9u1i2PbvhhT1wor+9akmHvY6+hL0O
                      +4q97WjJvbqgfj3yva69pEfePN5tQz1sLsQ8dqouPYDjpLyeDms9YYWOPXLGCT0uRyA9Ngt3Pdj3
                      Ory5T549knAtPSEQiz2XyC29tjtwPd3Qpz2xFKQ9HbfDvScZdb0zC4E9LLWBvczyCL2g7Lg7AF6e
                      u6i8or2o99C8pV2fvUgcobwXA7e9a+ONPVIhfT1F34e9W8m0vRrnJL3t2le9F9h8vY/ax72eHAM9
                      uiNkvWBuejvCSFM9gWWKPYGxpD2CN569A9YwvUADkb2Kih89+hx8vZgBKjwnpnW95iUhPXVzlz2S
                      z3o9pzNOvYYxDz0QGgM8vbOtvTrPR70WNwo9sInAOwD/b7raD6W9gIKwPIY0JD1lf5k9TfA/vfCh
                      qb0A/sE5SFbnvDH/rz0/ucq9YwRRvX41kr1Q9re9BoAJPfDtdDw0cv68yNqcvNfEwj2n5ze9Hf5y
                      vSBKmjxyDFU9ML9UvEZfej0B+Is9MMSiO1xj7jwAhAq8lTWBPdCV2rsKlQg9HYmRPSdiLb2Tcjy9
                      QJd4POPjqD3wHTe9PcIhvSbtTj2aaTm9UPCSvcY0GD1Y8CW8GtpAPcBPar3Nb0e9V/ghveOIW70G
                      AaC9ZD37PHCeK73W/VA94GbZu5+msr0Rkq89DuYCPRHCgT0mtVw9I8G7vS5Qfj0aZwI9NRuavYMF
                      UL2cSdQ8oBlFu43jX70o8IQ8QtQePWYRYT2Tqao9p8hYvTNwn70a/gY9EDJDvYU2rT1QvPm79aGO
                      vaS53Tytl2C9N6KlPcEHsD1yzEI9vf83vSlIpT2e4mQ9BmkKPSxcBr2cjhW9VyO6PQD8eblcLOE8
                      ut8aPbX3kj1thpU9LfJpvUvuqT2wHo670XKcPTrAYj0zVyS9WFqgve4hMj2YtEC8CNmBvYPsTb2I
                      yZ29AF9WvA6sqb0Idby8oLMZu6jDjTx1A6i9G9GWvQgerrwH/Ge93eCIPbvSyT3Rxbw9cioEPQAw
                      B7zS0BE9unA0PV58JT0wWvs7vpJuPWm3hj3YsKi8NbGNvdjNxbx5iYo9HQtNvcKlJT2Ss1I9NKS0
                      PJOnyT2LBa+9xpCUvQvvoT1AHju8utYMPXJZWj2DMr6939Ktvf1Ss70AdfO8gCQsPBqUib1wf0W9
                      yKjvvBBjc70ApzC7wC5iO9nzwD0Aia48NASbvP4uej2545E96syJvVT9xbywr5G92IzFvOXsxr2A
                      AQk8SjUSPSj5iTxoIZ69AWquPfJYgr1GJDg9XWqLvcFMuT0x86s9m4HEvaCsu7xT5HK9m766vYMe
                      Rb2ynlg9aPutPCbjqr1TOla9AOoxvYtlrT0j5ce96h1xPcl2ij2Y7jM8r+eZPbDS5jvMTsA8otdJ
                      PV7XUj2AN967XOnQPJk8vj3q8Te9GvxuvbqaCj03mUC92GWVvTR07Dw5aJ89JGL7PMKXMD0lUJK9
                      BHL2PNuVlj3A+++8EIXJvSL/BD2g8O6881ljvYJ9j70no0+9X0G1PXPQJL2ti3i922iTvRfrYr3R
                      P5M92riavbPagj3XQqw9AKKpPNOFhz1YWsu9RjwXvbNTij0WIhY9g7OcvU1Ojj3oc3s8Q8W8vbKQ
                      GD0xY6E9wFPCvKDAb7s9rh298NNhvJcBeL0j4JY9REfcPCOFUb0ag3s9SIXmvOBDl7vN1bi9uO7G
                      vUCzWTvgNpa7DY+bPYCsvztw5zC9zXUrvZoVo73IlM+8tt6RvUC8GLsoFsE8MFk3vVNfob10iRS9
                      l+kkvSBrqbxwLK29gGHovPV/yT0UNaK8MMX6u3WNoT0NyJ691cGbveWYmz1X27g93AT4PBCwIr3Y
                      /Xm8GcqzPQ5qqr3Qk+c7XmxWPYylnTx2RAu9w+p7vRhOhb3l1Ys9DASsvFhiTTwBnJ09wG26PCAu
                      prtNmku9nmdePWV8kz2yRn49oGfyO4TF5zzANsa6IhQdPZ6QaD3+dRI9uh0cPeWfnr277q49kC8s
                      vc1XyT0mS1Q96mJWvbhwu7zwNgC8SsGIvdCJ6btgBVq9iVWfPSi1JLzL6Mq9wPx4vQ01ob0q4Gq9
                      NytNvdWfm71yKjs95qw2PT3bhb3m8Xw9AIqJuYpgWT34y7u9AIw5uRgdHLxZNMw9sGnVuwC4CTya
                      exI9JV6AvZAXDb3ZA7I96zWQPXTK1bznIpc96IP/vJXUhT1Vcbi9v6OsPYAxvrpC+Rs9gIu1O6S1
                      1zxokK29GeyRPS0szL26ozY9E2msvdzO/DymEmM92OfRvM0Lgb3Qyzi9KF2VPMopKL3d95u9C+KK
                      PSJaJT16sAY9sxFTvR5kXj3Ss0U9heaIPYoMN71gR7o8KOUpvHrFcT0kHf08DIzqvP2euz2umKi9
                      +vFZvcx1qTzkuIC90kQFPUYWXj1Bmoo97XWsvV8Rwb1yfca9vV3KvSQS/DxYHOu8d6zEvQm+uT2e
                      IR09AOhRvKfRyT3XfZY9U3RlvaFCuD14k7+9tVKZPbuUrT0KH0y9KTOQPQC2yTq435q9ZkeXvYpT
                      bD3oUpG92Oa1vKfTvL3Tk4k9nl1XPcjSyL14xtq84JOVPPefYr1cKN48FioBPVKNiL1WXVs9KVWe
                      PbBNh72igFw9I99Jvcgwkr1/+b+9IC+LPJmvjD3Dz129MKA2vCmlij0U2ZI8AFNiuzFHpz1kKt08
                      kJYsvIfcwT1AZwC8Czq/PazImzx4atK8vZlXvRzm4TzC+j49w8vKPQxgwLxzksY9MNm1O5VcjL2y
                      bYq9cWa0PV0CZr1gtuy7laDFvbK9BD2DtSK96lZ8PUb9KT3MDd48tk2WvS6SDT3adUU9KPeCva67
                      nL1oy4i9WmYkPWpoCL2dSa0937eDPeVnyr0hGpY9AA8xvDaGND1YGri9O8abPRqHwL1OOg49opgS
                      PQKUOz0GuDQ9oEiHvUxxs7zQ4Y070kVvPYHuwz1UF/i8dml/PdmBtj2gUwE7df6gvaj7nzzAJks7
                      IF2Du+O0Ur1mWGU9oiLIvdMxsL0BRZ493BcNvUIIDD0nPaE9EgAaPePOoT3IFLS99tcwPaLOTz1U
                      LRW9IteZveadWj168G+97JuYvGDu5ztyJWo9LoRxPVnLkj2XsrW9KLeSvUJkPj2Di5M99otGPVlH
                      mj3o2xm8YMHHvHSjgLzofTs8tfqmPZJnMT0P9bs94L2XvCkCqj38J+I8qYPCPQBgWb3Hs5U9s1wl
                      vSngqT3h+589MyFLvX5TJz0mhn09sroxPYUEwr3TbLu9E6quPfvelb21PLM9yqsWPRCkDb3+VHI9
                      QqBlPWCNT72iqwA9I8i+PXBUdr12Tp69ZTezvSACyTwzxTy9of2JPV+3hT2p7b89YkpPPTC5or3y
                      7ik9sg5qPS0vuD1scdM8AbORPTCOVrxM4IW8AAiwOovLk7133ME9mAKNPBDGfzxUYaW8PeCLPbh7
                      ybwBFYE9Lj5uPY0Im73PCpk9snE/PTgOvb1DuMe9236lvVYoEb3z7Y89WXKJPTo+wb0deLa9ZkGP
                      vVD9i70JLbI93O6HvYWgnT1Akja9zerHveAqvjuAJIq85SakvURf/jxj5Ks9uiSBvZePN71ZNo89
                      QEcmuyQS1DzUCK488FklvbelRL16pFE9xQiTvTbphb08rhi9qqYhPW0klT2KjSi9GjsTPTz58zzK
                      mGm91/9tvTRCuDwyvGA9aOG4PBPPKL2R/Ig9udygPVMTqr3yNnI95vVlPVgqLjzxD8g9gwSpvWDQ
                      Yjtawcy94OuXO0CkLry2w4K9ANZRORDRh72rtaS9RRusPdpBfr2Zxck9Zhk1PXGTgj1j6Kq9mHaF
                      vAf8Tb1oDqa85P7vPOtDk73gu5m8Ah7AvfAIFL27Mo297W6Ovad6lj0acio9rCWFPNeOUL2gjx47
                      B1/MvT2aiz309qA8q4W0PQBbjbniNba9CFS6vQKPDz0Qk0Q8ULbvO0LPsr1ifyU9MqJaPSd/Wr3L
                      Jpm9ZGyGvYRi2Dxi8wM9ejUVPcjPlr10/bO8R8OiPbyChL3gm5+9mLTHvQC0u7sZZ6o9+3CKPahS
                      xzyRscM9ftotPaHAlT01C5e9AM6buoUPpT3gKMI8zmlsPdp1nL3WnZG9mlIDvXOplb2sB5w8C3ud
                      vRJ6Rj2TBFC9L0mdPaA2+rvYUsY8ntKMvTLrRT2af3896s23vYhTs70T56K9qHGBPDUGrr0yBK69
                      Dz+KPXZ9Lj0+1x49LrKLvRWghL0+Xpi9VLvQPIDdPLryO5e9maatPWZqpb12qwy9cNwfPPBHIzyo
                      w7U8PT6APTOOmT12IKm9rdYkvQ55Dz0hlpQ9rJGhvDMVnL3nXTC94FbFvQXUp70/sY09GAZsPHhU
                      sDwTy1S9mJvivOAu5bvwBHW9D9O9PVQpr7wiz2U9EI+jvVNsp70JbbU9IxSuvZhbMbwY7lq8I4Gi
                      PY7iOD0A7TU6Ss2Pvfm/rj20Rss8Tt4vPckvxD2kPfA8FBsLveeBLb3GFV09TDPVPED17Tr9WpA9
                      aPSSvSBCtb0dJKE9LDLqvDTz+jwEx9o8UmZsPTOtfL3GWZq9oGmhu8qxGT3DMKW9VW2IvVh3tr1p
                      PMo9NJXjPKzSs7wZ/8k9oO6VvegXib3u72A9i+GlPSypxTzc3fg8Ue2GPWITp72YpRO8QJl2vAv9
                      xT2g2pY8u2+2PUJSOD0Kqsa9A/iuvaAyyL2A0/C8rPO/PAlQoz2GADc9yyy0Pf1jur00C688axHD
                      vSAhuL0wSCQ8QHJwO+BlnDtlaca9UE7hu32LiT2LUMO9ix+6PTRDFb02ohi9RglRPWC4Obtgtae9
                      AW+9PZcuZr2qX0Y9Ti8jPc4zDD13Ucy9OkwEvdWZj72qeRS90Di5O8rOEj18+gm9QYWmPePhK73j
                      lY29qZfBPR30lj29upI9Y9CXvSKQFD1fO6099FKEvfPzvz0YVAO8SJ/8vCIJYT0TJZU9OhpZPUpQ
                      Tj0hwsg9oVq8PfB/SL1q7Je9QA1Wu1jxfTyESto8uQaUPfjvvTyk0IO9wJtWO1vGur1iKI29AOss
                      u2wPnjyNZDO967q2PQBevDwzm709dFqwvLaJFb1CCoe9gwKtvcKen70OZXA9IHLQu/Rfirzi3HI9
                      dzSnPS3Rgb3Zl8A9wOy9Og5RaD2yraC9M7mOvf3bjr1MJ5k8w2mXvUpnwr38N4G9uutUPWBYxbtx
                      1Js9ma6jPdCNzruJ3JA9ANznvOgX17wSMQY9eowIPUAqPbyoZs68f2XIPfZTaj2TXK+9EFVbvOjy
                      dTyoObm9yutJPfAfy73S5H49j1yxPYB/0bqlXcg9WB5BvE6cJD3ZhIk92J8WPLBl0rtwOkA8ERKU
                      PUBbTztd4By9sokcPeD1o71FkaU9LJaJPNeitz3N6Mm92HHIvACnnrtqyJW9RdqRvdjYkr3QvEC9
                      sEroOx20cb0Skks9NtYpPQvstD2zAaQ9+hyMvVnUuj3e56G9ANKZvTa3fT3/cII9WDVNvCTa/jzi
                      nzg97KedvPLqGj1YY8q9THDtvBF2tz0AdMw4xeeaPc5hNT1mTR49QIK9PAA3HTqtIT+944tkvcos
                      ZT3U9J68ouZjPYJxcT2sd7y8KILHvY1trL0ysLK9137EPXDxUrznAFi9+JDSvNXly72W0RI9SdGq
                      PRJXVz1eoyA9+OmUvIACX7oQmpS9yvcnPdW8iL1AYZa6uAmgvKCFcjsSrKW9iBXHvVBBZLxTGI49
                      OECTPKyaujxA6Ty8sgoAPUgdnDyAxHU83NfwPLdWV71mDh898gUfPW3XN713/sc90EXQO/wu3TyS
                      WMy9OuMFPRPMob2mhgo92LREPB2eL71SNxM9QKq0vZIUYz3oYiG812+FPaxgjDx2sBg94vgPPU1f
                      gj09Xby9eY6lPUCEq7z6pcW96j8JPVI7Xz0G3FU9H+C/vVBVQzzSZVI9mB+YPOCVkTznyGG96tQV
                      vUT/A72zQsw9R3e8vZSO1zxI9qi8f4emPdB3kDuqGIu9CNa0PKrbcL2RF4k9NBwCvaZADb1gO7S8
                      wNEhvFsUjT1xLpU9/NkIvU+kxr34bZ88R7ErvYCpn7xrLLo9M1CPvYDrwr1EKQy9AJb/uZItx71o
                      FSg8oFwcvb2htj1sO8s8Coo9PQQZ+zwInu+84LbhOyv7tz1armE9k8slvWnQqj1V58K9oFMQOyDP
                      uTvl3Z89zYK8PfbOmL1ZnYg98uMiPRnhoz2Oc4q9UnwAPVBNVL2BGcU9ENYLPKh0iLzkV9g8YII0
                      O47cUD0ASQc8Lig+PUChO7ymKlU9lgNgPTQFlDwaIwc92KhCvNXPsT3Sxre9iKfMPOBqj70GOUY9
                      qgFGPdVvxL1nScs9LO6ZvGwJprxDeZc9AOCIOlQ8izzpj5Q9G/WsvU02pj0VZ5w9gB5oPKAhkr2N
                      zIU9GYWBPWBTBrughFa9ZUiGvfA1qL2g4Eq79Ga8vPBbVr0Aal27TlVUPawRiLz0Ygi9+92/vdDA
                      OL3jZXy9CgePvZCxTzy1F4q9aGOsPAnQyT0gvkG9AaesPYDOQb2gZUa7AN3fOXM3oz3JlZo9hmM0
                      Pdjawrylu6G9QDC2POZWGz3DX6S9inInPf1rmj3r3pO9UMyqO/NLpT1h/6g93626vc62Ej3gmE+9
                      FryPvT/jvr3rQJg9h8KNPUEynT1x2Z09oW2WPZP1iT0iV4W9oCsdu12+rz3Amlm8RdjFPW6sdj10
                      +xi9rLiTvJa8XT0iqQg9z4vKPYCER70Xn329IHyju6jMgrznHHi9m8aBPeg7m719YEO912xxvVhF
                      2rwRs6w9olFDPRIUvb1de3y9eNCOvSAdyDt7t4A9jUUvvRA9YTzbgKk9cm4rPZB/Q70KlX891n5T
                      PWeCWb02/w69tZ+5vT/zsD2hRr89LSpQvSAyTb1Of529XtSPvdL3Gj3Sv2Y9FCXZPAymDb3N8sU9
                      nWiBPZ9tqz1HlMq9FAyFPFCIgDuBJZg9gPnCvZBEFr1qRJG93olHPU1gLr30tro87fmovXUduD0s
                      fPs8YFN8vQTU3jy3VyW9+BezvGDOzrvG9RS98DQ8PCo1AT21VJm996VsvbDBzTuYea484A59vQqd
                      YL37m8c9gx+nPXZyVz2IL7m8VN+YvMrCMj1nbse9vcuJvVXdiL1RCpA9UthKPXB6FTwGMUg98BBB
                      vcAlIbxXgcc9m67HvU1brb3rj789ghKmvWK3VT2grOQ7ppttPcDVJrweF249zqRgPfZNLz3SAmw9
                      PvNRPaIvcz1RNLE9NJ6CvTTAyzwAY7M8822ovcaVGL0z81a96FukvCuSnD05Yac9EL45vWs+mD0N
                      gIG9EqC3vdRn97zTlKg9mqySvQ1mfr1QRrE7aNuDvQwg9ryTc8S9wEVkPJgAMbzqhz49cDiqvUBc
                      YzuKK6W9PfhSvdYIHT2ckug8AHtSO+Dqhbsn1029WpYbPRc9f70B+Lo9lLG/PACMGjzyr2s9q1+W
                      vQD4O7pgCIo8dplAPbmelD3SyXk9yPupPCrVPb106+a8KqU1PUNaZr0dYso96r5bPeRY6TzXI629
                      wvMRPXXMlD2LxaS9/ndxPYBAs7z+2Q49iulUPdVOhr3HCr29atnKvXf1b72iBSc9Q0l0vaBWx73F
                      6bc9N/K8PRZJgb1/aca9GloQvRSRgr0g8Ma7rWN3veqPo73QTKC7WCgzPHJ/VT1390O9ABEjOqC/
                      q70kOQi9NbKsPVNkTr3ozFA8wsV4PYz8iL3F0sS9KY6hPZeUsD0qeWK9582hPfg4nTyyIGQ9aqc7
                      Pb1UT71RZrw97KPcvHgjwzwxiI49I4JfvX9Avb1kIRC9J0tkvQI/BD2786M9DgZbPcs5wb2PMrs9
                      8HxavOb/pr2Yc+O8W8iTPaxiljzO7jE9acmjPRIiSz02vmA95+2tvcKkYj1aD8O9ADCTu3AVtb2g
                      LLG709CbPQCItjp9c5M9tUeHvRMBWr2Yt5W8UEHsOxqavb3bfLI9YbahPcCbajz716U9HoxVPaxe
                      wDzQQtG72jsrPTJLYT0vobE904ctvQA2Lzx1aJQ9ZKbYPMtWkT0lpZ+95TWqvcH1qj1BbpY9gH+4
                      PBDGQrwgDOc73f0Zvf10qj24CJM8eyXMvUDtf7wvBLC9uLemvfhigrzpysw9LIvePKDrh7utymS9
                      cWquPXNgkz3Z5rU9uBzMvKKMAz1KW3o94gSevdJ8BT3tN3q9HpSLvcL1VT0352+9t6vLvSGypz2U
                      gY68TYY6vTJaLD2kiu48rfB9vXqWf73A1Qy7tkeovc4UAj2t9n69inOKvePdlb3Y4Da8ZLL0PGIc
                      Qz1wmU+8L1PAPYST+Dxlbo89EUuIPYfDsL281OQ8DK3qPNbsDD0OoVE9peStvYCjoL0NL6w9jKie
                      vAAl7znjXK89sBULvZTSnbzZH4Y9yAT4vMOAj72aLig9CH+BvChkCTxQ5Z+9QWPBPaAb2rtaYFa9
                      gbmrPSfiWb3A65q9Sq8kvS48Zj1Ji8E9QCaHPGIJlL2h/Lo9xq2cvQgByby9mKq9NIfgPALEGD0A
                      Kke8dvScvZSux7yKLCG9gWiOPQB9ITxFE8Q9EkVYPYC+tDrNP1y9jeXKPf7SED2o/Ei8aGO5vNns
                      ij2UNYU8MDBAvFgd4rywoYe9euiGvUXDwD3w4ms8bMPyvDgMiLxE6w696dSGPQDNC7owck88EKJl
                      veUBvL14z6S9AYGcPbNwnj00oOW8GOd4vOM8yb3klvE84msTPQglxb2G4UQ9ltJfPeO4kr1g9467
                      Zf+zPRCMAryo6ay9gOpjvQw+mbyVroK9U+mpvYMOar2hk7894ci5PZFDoT0Uxti8sGVzvIixmryK
                      Yq69EnYuPXYFLD2IIdO8KAGbvR0/wL3nFEO9oS6VPR44oL2Fo749IIosvcYrqr3tyJe9LtUOPTrg
                      Fb1nI8K9WsmevToEwr1UXK88eyisvYeTTL1G4Rg9/cyIvcnlpz2ISce8UJBOPD2Wub2w/SO9dztL
                      vTsxtb2Aomi8F/JvvR2Hnb3DaKQ9beIdvQ32sb1hsa09EoQPPetnmT0yxQQ9mHhXvOiwpb2tdqs9
                      GP0kvAELnj2JAq89F7DBvVBhGbxU0KO8AOjrvNIwnr2gQx67qeaaPXqBpb1wlg88AGi9uTYdBb3N
                      X749EME2PMiyuL3xXZU9kMWvvZh2QTy+wS49GP8hPJZGdj0SqzI94vh5PSSRFb0s8J284LQ0vRpk
                      dj3lj5e94jEqPZZ8VD2aFoW9Obe2PRTgBL3KfyK9LkNWPUkHsz0oLdO8cymrvc9Mnj1W0Aq9wAM3
                      vU0/q70Lzb29SnMdvVj5bzwulUI9Cl4pPc1wkL0INpi9QHM6u1hl5LzwwHU83UbJPUZzeD1C9mg9
                      fsNIPYAeZb2nQcE9F2ZTvSw1hLy4ULC9BITUPOAFu7xSna+9sZWiPTDSbr0g1qm9r6ySPY+kiz2g
                      zCE7dx7GPcAYNzyYAZk8rHepPOA83TsNkLq9mc7JPX9Ohz2+fwc9JkooPSybqrz4Tti8TJCWvMoi
                      Ur2kKfw8IXq2PcZqYT13JWm9OtNIPWh/rr1SWIy9OKSjPCjTkr0UoeS81hEGvbwqBb31V7K9iRDH
                      PXSGizyCvnw91oqPvVfkQ73WAzA91NHqPJ72dz0s+6O8jKrqPAdRRb35JKA9xhoNPQLwGj29QIc9
                      PZ+mPTfVqj1TCme9GhkCPby6AL13Bz29/8ShPSCZsDvqb2C96B++vH2XwD1ma6q9u+nHvbJ4dD1y
                      Qlg99KT5PBIGDT1yAyc9kfeZPeqkHb2LPLW9+aKpPedcUr0INMm87gpPPaj5YrywYzc8mppKvQDT
                      eDpCW3Y9qJ5svLgMtLysJM881vAEvaAsAb20Rpu8XY+2vR6FLD1onYY8k+hVvXl7iT1Qiwm8oJvh
                      vCb4Rj3O13c972+ZPXN1Pb1QlXu8N2WgPfZbmb0BxME90o+8vTS/qzw3tne9sFSju3sekr1LBoM9
                      gIWIvagovL1931G9J2BxvZxt2jzgMFS9aGaYvJTPoDzd762906V6vfc+jD0U8c88gMveuhhRSbwc
                      RoK9OK3EvbeqOL0Un8w8V+K+vTD5G72oHG08JCDqPFBBE71p7bk9rRa6vTpnKr2RpJs9G0aevdG+
                      uD2oBKW9MiUCPeiVibxYEv68umEiPQh3pb2guim924yQvfDawL3NoYS9UA4gvK2khL2Rb8U9uRq1
                      PdjfUjywwoA7YHxgvZDETbzJG7g9zyGnPRvXjT2iO5y97xqHPahXvb0gdCu9eb2WPdA7JL231zG9
                      U+2JPQqeRr1LwbW92D1SPCz2pDwASP+4Lp9TPZqnxr0AwEm7EOMeva6LFD2orsO9bC/IPGnxwj1w
                      YMy94P6MPAwUgr1RiZo9irk/PYBbyrx4tNS8+eigPYONpL14xbi91HH+PJFQqz1sb7E8yImmPHlK
                      pT2ItaI8CrYsvYo6mL3BtsE9lNXgvFa0h73baLY9WHgfvN3nsb1gkY07Q7CuPZa7ob3KUJa9G/DI
                      ve67Rz16YRe9bEbgPDpmOr0TU1e9/LSEvdhtLzyL/Zu9jquBvYZvJz1duMc9nQS5vVByTTyqalo9
                      vRCCvbFskj3lJJa90/pMvRBdPrww9gg8M9OIPYjx8bwQREE8H3i2PQl1hj3zvWa91F2MvCO3tL2g
                      x/67Ulk6PZcHw71DH3O99HLWPJgkbTzYSoK83KIHvUSw/DzodyO8aqBHPSizhbxqTsS92skrPeid
                      /LxX/Yo9T+2ZPWDXk7yqHFU9QIBhO6dSnj34TIa8zGGyPJDVFLwAG9a7dQOoPd0EzL1N4pM94Lmf
                      vOqkDT1hscQ9qKF4PIZEKj1kKOo8ZqlTPb3Asr3AexW7O/vDPagbVjyzaKC9PdWXvb3Wm73YdIe9
                      6gtyPQPLqz3fCbq9bN//vIqtDj3g3L87gKlUvJNWfr1wVbG9UDKqu1JUSj3+cKe97zSAPX6Wcj3u
                      HgI90kN6PRTdiL2OhiU9/UaWPY7zTj3gLL88Urq+vWpVEj34RL08fUmQPWhcnr3kcBW9qOmEvUD7
                      TLxzrsI9UGRwvdhddDzdsaw9/77CvSBPyry5Sog9U8gnvUd0JL2IA5G9cIQDPBuvij2wJTC9Nb28
                      PbbEOD1HmnW9IpSjvVn8lj2toba9gv4BPZ0yUL1H3qE9jl0KPQLAUT2s76c8Cvq2vVAuUL2GdTM9
                      DcmIvbuOtT2Amfu7oMmLvPKEUD1Ly8c9yPHrvFrxmb0RLJM9zjd1PXiDsTyuUyw9cA5QPGyG4LwY
                      Gn88qP2IvHC/Y7yj3Ke9miu8vQ1ne72uCmk9AM0NvWSh6jxjBym9pX24vbTrhbz3sJY9O2m1PYLR
                      DD3eDT09JVO8PSEMxT1oWZi8ZxGmPaNblr3mPRo9RCXPPPL9sb3o8tG8+p9BvdQI6LyshO+8kSWc
                      PV1uiT0pP8w9aJzGvHLclL2Kmh+9UL1ePLpvCb3gPM27jUk2vRLCdz1qC269oNMYveC17LtQFYC9
                      IgYLPV1PLb3oeK29Oq0pvWdQY73NV2+935iJPc0Apb1g5oC9DMrTPIZAXT0AkP07KJ+lPLOaKr03
                      KpU98QjGPYCQVbyN0po9UO5ivIDGADwKrjS9yRGwPSpLZz1RkZQ9dY+evfB5bDzITqQ8R9RovRie
                      irzdnjG9veGpvbBnwjt6rWE9QuNjPe4Lqb2GjBG9sGRGvbVrkr1gjgw7QM/3OiL2ej3ilzc9olwz
                      PdYzBT3AYci8wl4gPa/7jz3qzUU9y3yePQwr7jy6rjE9wi8NPdO2pr2qR5y9X72JPbbsCD0T7p09
                      wMlUvMJDID13wcO9QtZJPXkMpD2NJqu9oEKuOyfTN73+2Cw9UHsmvQcqdb3fxZg9JvsbPSoBrL3m
                      zUQ9c751vVGgkj3Yhl48/yOlPQybgb25o8I9ih9+PTpxrb2bQJa9ClQcPTBz6jtdKaa9oJInvcxA
                      7bwm5wg9CoELPSmRqz2MwcQ8a0yHPdp5qb0KqTU9zYi1vYDbTzxjCDu92Cc6vNSQpDww8Pw7Kv9s
                      PdB+kDuAwIc8nTOMPRCVIbyWCKe9XU6jPaphIz3C4k09CrkVvWgerr3wY1C9gFLNupRqg7wgWk+9
                      owWAPRjvWzxIAqq8tTy2Pc25tz1yhBU9F8JOveCyz7yqX189bzmVPdnvrz0nCYs9kmE1PUybvzzU
                      8OS8oKzRvJhtUDwlW8Q9gA2OvSNIkb0ANYU819NdvX4Fh70CDBY9HTYuvYqFNL31ILA9oI1Ju4DY
                      9LzbhZ89IgdgPQL5ND1EdIW9VD+UvGf8dL0l4aw9oOwuvT9KoT1eAGw9sUzAPdT16bygjNG7dLjd
                      PKCZqDxMAag8ceDKPQL+MD0YWpy8V4W/PaEyhj1HiIA983aDPVKiKj278o09wJHWvPBfzL2Akea6
                      FcmavYC+BjzO/js99poePQrPaT2Uc9+8So5ePck6nz1Vj4492GD6vODX/7vAWOA6gn9OPS+Tpz3D
                      /FG9yTfEPcJ2u73ib3Y92UaQPYCMNb068oK98x+dvQ+tqj1A8Ku82AwRvIErpT2RHsk9MCh5vaAc
                      ArsIDoO8rpIKPaALa72jBhq9h1OLPbCAsDtQtcM7nUGqPersDr1Hnoc9mkt1PQ3Epb2YQj48594/
                      vTAXaDwvBq09dUGDva7epr0p75w9mk8TvRm3kT2g8/E7rCrEPFRkljwAGyY88lhMPVLsNj1Sck89
                      2IqtvfaYDj0nicy9QNhuvbbdn73gGMy8iNeUPDAcwDuwS2S9APKvvVqRp70okMW8qFOCve5uLD34
                      +Yw8gAe5vAJNHj3gHvq7TD7YPMTMiL3iLgU94KBBva1cob2QCGO8owRHvQJ7ID0ABqO7McmVPaD2
                      b70Ixua8iFqVvM4eLj0wlyq9jIoWvSOHyr1tWjG99CbhPKjGcLx2pKy9PjxNPfpjzL2w8W288DuQ
                      vWJUdD1QM5K7gPO/u9OBpb1hd4w9Wc2EPepgRj2pYrQ9p5kkvXwmh71+FTY9ifGoPeA4qTsghUO9
                      YjY6PWZldD236le9CUasPYLio73ipKG9HIrrPJRNnDwivwY9GemSPRgoZDwrsLy9xjqSvWPlt73Q
                      GFy9ZyjAPT9Rjz1q/SO9zHG4vADyY72wwwq9IjTDvVnNsT3SbTs9DfzFPRWil707+KE9gF9yPPJF
                      BD1YMEI8ou0oPQCBtTyHgqE9qE4zvCGqmD2ouao8UO6IvQTC3zwbDq494GaDPPSMuzyqwm093gKb
                      vSpCZ70oDLO8Lc+yvT7Qk72F+8K9SvMpPfBKpL0idKu9qPBCvEMMeL37m7i9YNjEvFdotT3QQDm9
                      wvpmPRY/XD0NMXu9lmE4PajgXLyNLZA9oHsivTo2LL2sIKK8puMbPb3iG71SYoi90MUYvPfQdL1y
                      AlE9fP4MvYrQpb1QTp4740IrvVuQqT3Aape87jA0PZaTHz367xu9kII3vUOZP70DpJq9MpAsPeBM
                      +ryASse6Kt0fPf2jlL1kYe88O9O3PZa5Qz26Bnm9cpcbPdCT5Tt9VZ89htY7PZPblz0QqHI8A3On
                      PXAANjx0FZK8Um0yPa3jM73AUVS9+XzJPS/6kz3aX1+9pimXvUDn/rrW4Jq9YKZZvVclXL0AuGu6
                      MpplPQy4u7zNNKC9la+0PcBvk71g25G8Y+uVvVXqh72OL3o9jEacvO12lj1JgoU9ClqtvSJJCz0W
                      vDk9OxKXvW0xWr3GHpS9Zd6sPaCDibxAhbS8pInRPNDhF7y0W6M8EnctPU6FXT2o/xW8gF4GOjhx
                      o7zAQ028D1OxvR0+ub30wKa80LZKvUClUr2w9L69aHufvHDyTzxIgK08MNkuvBNNLr2gX8k7WF6b
                      vLRGobzAibk8uujCve9CsL0qcTq9lNuMvIXJwj2ABO06I+OavWEDmj12JkQ9AHcSu9W6pj3SkMO9
                      5pEXvQh8qDxpLas9RvMePYCRE72a3E69qVWsPUSb9jzs3aU8lBLHPA1KwD0B7JQ9sMSyu39BlD2M
                      3q686KFivKuvlz0/WIM9YtgUPakJoj0xF6s9FEqLvWCrXjtGxTU9cyU4vSEuxD0qFlS9jDLGvD7f
                      hb0gtdk7iphCvb3mXL0sSQW94pIAPW/QyL2Kix49cpO8vdOKW73gHr+7R57CvWDW2LtaBwi9GxfM
                      PeTW5zy3zHK9NaqGPYQm4TwesF49lBPEvNBLkTvSzTI9FMCDvZFlqz2wGx+94KapvCQn8Tx90LW9
                      Tr8MPZQ/n7wi/l49+B/VvJBRcbx7ArI96kynvVhQlTwKXgw9APzxuydajz2KaDi9A5Q7vXITbz2I
                      XZS9yDKvvVq1FT0OhAw9gHTvOgOSv725/Ic9QH6ovMuWl73n+Z090isSPRixhbws5NG8AFl/ukin
                      t7xSnDo9gEXwvBIQDj0UQqC86C6HvCAr1rtitkE9zoZ3PbA4ujvaHBa96p1pvRzF0DxQQAw8SHGG
                      vZC8MTwN2mu9KK2iPJjz5rzz1369ID7/vGAnLLswdTK9dPP6PC9elj1gobK9DDCDPACamrx2nFg9
                      48e4vYB/f7zFob49Y+FlvRhWQDwALiS7qMs6PAB8Qb1XoYY9ue2RPXL7Kz0Rzpw9rJSYPACgKjlS
                      pJe9reJOvVid97xFMrI92KZzvDp5Xr1JQoM9IaKKPRKwDj0yBDs9hidZPT7vPT3QQmO9lO3vvK7l
                      hr0RNpM9mjtzPeiBp7yLWqs9Y0NgvThQo7yxwMg9Sk87PWMHXb39u229foVoPUBhLr0Nz4A9Jtc2
                      PbqOt71UpYI8dopEPYj4wbxbIaE9jYqiPUgR3bxCk1g9EKxtvKq2a70pzIk9GJybPECWVjyApPu7
                      B6pTvWXHxr2pRJg9rZNCvbD0bL3QVSA8iwOqvWgA3rxzs5q9IvEhPRJbRD2/pIU9ghiOvVarbT3w
                      tm88aaCePVr/Rj3AiOE6nMYSvVQf4jwAobg7lzM7vaMzML28uRW9VKG8PMx7/by7dro9yCG4vSZJ
                      ZT1HYxq9Y/Mnvb7Pgb35Jck9XckbvVoWYT3lNYE91UCHPVgDHrzA9nk7TJ7gPFkKsz2CCAM98r5r
                      PaJjxL3uYau90pA8Pcmquj3qrVw9CQvGPbjYwzyiyMS98GkRvNeOjj2KQgw9oEPEPDhmqLwIf/e8
                      FcuuvU8XuD3mrJ69itcZvWz7wjyA6km9VI+4vGyCkbxoJLe8EpS8vWE9mz2w9Dm8QMK/vWoggb2q
                      cUK9E5RUvbpOkL25dLo9KJhZvECYkTxe5SY9+I6qvW7Nir3NoSS9mLpvPKBVgL0yyDU9sv+CvZvT
                      iT3U+sC8+j4VPWI1NT1TYzG9sqoSPTotKj2woNW7sPbEvdDqYzxmRxg9opemvYrDFD3+THs9QN52
                      u7PSPb1C0Vw9AEoHu+qoNj3RwMM9sDEBvJrjdj1gk748DgQdPXbTfj3gmK68sN8JPCgSZDyHnjK9
                      MNytvQP9jb0TBFq9nc/HvRrfqr2Chhk9yJXDvahGF7znmq29LjZjPaiW/rzLYaE9BzR/vYGSkz39
                      W8i9oF+mvDQmq7wpZ649CW29PewewLwKR0W9Dr4zPWjmp7wY9Xq8gjcFPWfmVL2zRK89hs0GvWum
                      rb1q5Ho9SuORvQqrwr2YLbm8VFyevBD1e72YJQo8bTWIvQ6yAD1uSam9mko+PcKxib3sAfq82LUn
                      vLsmyL1UrdE8ouEsPZGUxj0AeMI5WdCbPb4VUz1UXfg8AiRMPSiF1bw6o0E9kGgHPAXvnD2hkbk9
                      SiZLPTJHAj2doIW9oT/JPUNclj1N4E+9WhQuvakizD2glri9MFkJPIxV2LxKOla9vmYTPcCcgrqj
                      q12917DEPTL0Fz0i4469ILnqO5qxOD0KMHG98INXvPWHtj1vWZ091mxWPRL0mb1ig0U99+UdvQPz
                      ab0wNy08IG/Bu+BAZ72oYwm8wq4APeXuq73Asm69wUefPQBUX70xasQ9cMxSPEI+bj13mbS9Lsdz
                      PdYpEL006t08CAqzvbF1tT0iNam9OP2vPJfUgD2ACgy6ADttvfeZrD2w9XS9ysMgPbDN/LsqnJq9
                      gP7tOgUpyj1aBaW9IPnTOxanB73qEjs9WrIHveBjxrtK+Ts9KDFaPMaXXT2SNqq9NGu+PHA+W7wY
                      a608JZumvcjgv7xgL7a9B7QhvYCvuLyx36Q9wNm2PDCGnL3aJya9vj8wPY9phD1Tr6q9WLSXPFCm
                      Yr2l0II9Qm5zPX6QaD2yNWA95auxPZUNlL2MjgS96qAWvWjUnr0FwZI9ptmAvdAo1juLQ8O90Hy8
                      uwGRrj2QQyG9grR8PcCAtDraQA893ZtvvSw6+7zQKAS9hOXkPIBk9brU/5q8Na6WPbOaiD1jz7O9
                      B2m/PW6oSD32D569oDhbu8x55TwoolM8qE27vOjFcjzwpGm93ZbJPdopaT1cYoK9t2nMPYDr9rru
                      jEA9fU6IPec1kD0KY8y90McQPOCmhb0YiWw8cNhQvOCUxDwE6v88sHD8O7kZyj1oDlQ8P6i6PdSo
                      +zxIqIi8E16nvRUHqL0oLjg8cWa/PSwvpLz04aQ8cKhWvJNyqb2zs5M96rU8vejFDzxEhgq9Re6r
                      PQLyfT0UbJq8ItUOPSCE7Tus68U89bOavZqgj70MD6Q8I1G0PU0VuL000Ms8zZiqvebbAr2gL0C9
                      mLCAvUCLgL3YF8K9ug1ovYTB8zz1Uck9AExcPNA1brx/W5s9TTOhvXRBrTy6EzU9r+qHPTg6iDzs
                      w8Q8qFvZvPdYtT3oeLY8PpBVPeXvqD0Px609FTymvY3vRL3Qdhu8MGlzvHRfxbyWdC89OkIqvVSe
                      5byPA5c9gl5qPdYqOj30J9U8o6isPePTvL2WUgO9tMa6PDD3Db09GoU9bMj2PABccbq0LAG9zFbi
                      vLCITbzU+6s84PSQu1BQhLvQBU+8epQ1vfvGk72Qxj88y3bLvYLASj3FhLE9k4amvdBFvDt/M5U9
                      sEDpOyeGtz04Z688oc2ZPU2ajr1K/GW9WtdKvbTUtzznjIY98PKcvVCvLrwLUMQ9bPrEvID1zzu4
                      G6k8ANrrOfe/Gr0tiWK9skVAPTo7Ez2FP789BP3iPD3bcr3Pe6M9C1iTPSjmdbyUcZw8s16wvVCs
                      ubsNwZe9YNb3vN0yS71HtHq9YgdYPdlynz0hQI09kq0bPV0Hk71x25g9usV4Pext97ywqR28oK8u
                      O7DIZLxg/4W8MAWnO6D5nb2gUcE7NO70PHeHJ72y2nc92F9DvPToh72EMdE8EBwsvXi+sjyLYsu9
                      KHrBvBAHULzNRMq9+XiHPUojJD3YxMC9KEvWvE0Fvr18SQ+9MEiHO4AFRr0QTyk8igxQvYB9vzpr
                      arM973OHPfGOsj2DBHq99tMpPZbLHT0ADBY62hHCvTS/vrz3x789TILePEE+pT1uNBc9MOEMvdTV
                      2TxAUFw8gFrLOxKzYD2YOn88j8ixvbNBrz1jhZQ9MmFFPXBodrxA+8o6wZiBPei+aLx7RZ29EIhs
                      PAB4gzpIS4G86G4zPKTgiL15TLg9MNXgO75tLT3HbnK96FwBPNirI7ygdFu77XCKPWLhDj0VwcO9
                      PnV6PUTSzTwALD45kIEuPAJ1aT2rI8I9mhsjPW/Kwb2gQE87S1OdvcDC7byCKpa9cNUbvOKDMD3l
                      x4k9c+SgPWiapL0Aouq7IGZqvQBYcLs9Dm+98bu8PSxlA73/nb891BzGvM4Dkb2D5q+9DG6avLHf
                      sD2ZKog9Mm1BPZsBnD1tZcQ94TmYPWb1Iz1GFkc9ccu3PTjnmL347IO812nCPboUR70j7aW9J99r
                      vUpzTL26IiA9whImPUL0UD1Gw6i9GhirvdLkPj07LYo9YBwHO4ge1byGfDU97f8bvUsHsT3QmDu8
                      APTzvObJhr1C2gY94A6bO4DJ+Lr2yIe9AJ6mOlHuvD06Jqe9+mgQPcCRnr1Tv8M9UiUVPVDL5bu/
                      P5s9TSWZPbuUqT2lpoa976OXPeLVcD06Gw49JcyBvShJ47zwpjo8zYWuPT06Or0Re5g9mU68PQRD
                      +jwUtbo8gK7zutMmqT3FzrC9H96GPb9fiz2PDaY9dbmsvYCl9Tuz3MW9dzpcvSR48zyw1wK8CvuH
                      vZDObry4TpM8An4zPdYyPT3YdeK82hENvSwH4LxWFRU9WIC4vEDJKTsNBXe9ulWbvQngmT2RLKs9
                      +firPZPvw72wVie9wS2xPYfCiz0nry69qW6CPYsNqj1I3ZW8iqytvRi/KLxaiVG9IFqDOxt/nL3t
                      GRq99q0XPSqNKj38e/s8vQyfPXCZHL2gTkw7sKAMvEC3YzzMob28wMMfPK2IZb1Z+7w9yqUZPRKH
                      Oj0zgpc9EApZPFNgbb19lVS9kdy/PeNRH70ZrJY9L3+EPYrOej0MSrw8SuxFPbAEd712z6G9QNtY
                      O/I/JD2MxRa9LL+Gvc2luD00MYi9jo2hvYabOz0NnjW9bRYkvQCoizzeljg9CrZQPRiOE7woKg48
                      OIGxvJP6WL3eHio9ui8EPbL8DT2X0VC99IoRvRtPrr14uIe8kYuaPXGruj3iWjU92i3Jvaimqb3y
                      urO9AILAu+UhvT2IRIC9VBG2PGzNrryAw526iFSYvQWhrT3ggKG7xaqbvU0asj2gyI87kUmtPVMh
                      er3CJDE9xzeQPZfqx722oQ69BenDvYiY77zaaQS9AFwUOeCaRr3nrmW9oMvkvBKcXj2SgcG9NvmX
                      vQuKj71lEJQ94g2IvbCZjTvzo6k9PuaqvcZNkb1N5oc92nQWvY5MUT32LUE96TuzPdRA7zz8ze48
                      aK9rPK1leb3A8vq89hMfPRINVD1mEIe9g6euvYAKKjzAT1q7JtpsPTGWmz1W/UQ9KqM/PaJDXj0A
                      ssY6lcaAPanFyD3gR7e9w+5EvbTekTw90Ys9fR2FvbKSVz2qwni9oOpovUAtIzwA9LW90E9mPCYq
                      dz2A2k68AHSvOOCC2bwX97e9fUvKvUKTbT2DqjG9ViqQvaPOkz0AJPQ6sDKBO+obCb0LbJy9cDCY
                      vdfbZb3yIRo9AIYzuWz+qryyVwY9ZOHwPPb0jr0Anv+6CnIMvTssgT3W+oe9ntGIvRnlyD0hUMI9
                      JpJlPeKtaj1AM72848+kvbDtGb0gi4u9q5/JPaOotj0T/J893TjIPWDVcjsPg8A9FOoKvRp/U70A
                      AYI7FSy5Pc4WGT0qIGu99MHiPPbfeD2Aq6Y73umMvWDfxrsTsEC9c5KrvcaMZz1wjbi9WAuwvGil
                      ybzwPDq8Fll7PaD8gjz8us081NWQPLOgjb1C82I9UDKWOzqhdb3UgxO9BMfiPMoBIz2z2cY9gO/E
                      usG8xD2CgyI9NN7pPPAqbLxLcKM9wlIDPQ2VvL3KDRq97CqbvDfXTr0S01U9BxBfvTMEZr2DK669
                      fgAhPQrBBr2AB8e7w/SyvdVRj70g8jS9u+zDPfB2aLw6WEg9cK49vRJ8t724Jqa9rUtcvTMvWb1k
                      mvo844hUvaz9szzePIS92MGQvIcLrz27rKU9CeyPPYCxMLrYjKY8TrekvShJ3byicQI9uvFbPS14
                      pT3rYIM9jy3GPZIvFT2wb1A80BJBvRTi1DxgFh479HXXvHD9v73nlJQ9JJyDvfLAKz0ybBc9gr44
                      PR1msz3yO1Q98hK3vRB9E71Ynqi8yo46vfJuOD3CcnE9EmFaPXAWxr0AY6g7IBKZO+hUBTzG0xk9
                      uVOmPVx41jxURKG8n+bEva2Mo71AF4866iJTvRgZWrx19oa9wC0au+ehGb1WD6G9lO20PE/Txj35
                      UJE92M26PCAB3zsA44Y8HVK7vbpgOT2MA5W8mnldvQqDT71wTQk82voPPfl0hj1/6JI9rWC8Pfey
                      lj0USxK98o8lPaC/1zvgspu9UOGiu4mriT25HYw9IFqrvROHG70OSJq9YDFbu1h+or2ofaC8SC2i
                      vYOEdb1AMcG9RWaUvfoGYL268AI9q0uOPaBLy7sxKL49NZ+pPRjaobyu6is94xyPPebyET0ANRK9
                      IL/1vE2PlT0NE6k9kDUWPGTfib0ACtO6R/mpPbB4PzwSqTg9oqy4vX2Zhb0+AyI9IWC4PXIzRT1H
                      OC+9zouKvQgCq72X5jy9eEqivSFstj0Ap2e6MxyRvUCpbzvHbsi9vgMSPRpVeL3uD5+97G6RPKC4
                      07shpKE9O6uUPSfPvr0dP469sNuru3y6Br3Zjpo9iGGJPMrkFD3/Uck9QvNvPWb6lr1jxMW9j5Cu
                      PQf7nT3VtZ+9APWtO7ZgA71szIy9aHBqPJObmr0iOH89QfS3PSfnOL3tnJk94osZPRfoOb22Fwg9
                      XzOpPQDsEzuH9LW9AECFuShj6LwnCKk9ExaevfJEMT14pIU8oUiMPR3chz1T7HC9jGvXPELzt70g
                      IOu7q0WBPSY7Jj3QP927aDbpvK1XsD3v0Zk9SplivXqHc70gc687AAKWOR0iTr0sQJw8PgSnvQat
                      nb2hBJY9sk0wPTblRz0uMqW9WfyjPWCjVb0EqgK9g5BivfK7g72CDz89+l14vVIzLj3GUBI9YGmK
                      PLHtpz3Is7G8LybHPcY9BT2aW0C9AuNtPV0enr1A4wi7mE6CvNlhyD2HoLo90Ot/vRpeFD3Io/G8
                      l0epPUnooj0YZJk8YzWHPfnCsD3lXYI9McSLPaTE6Tyupzo9tkoOPby30DwRJJQ9MM01vVFgjz1o
                      Rfm8KNMIPMzQ5zwXuka9VuVlPQycxrz0WKk8EteNvSqOGr0SbyA9UBm6vbCeTL00c588IiAqPXKZ
                      GT1qMca9sArBO4g/sLzKc0a95GvXPKWzvT3iqBw9ctOZvfSp/Lzovdy8LOYFvW9usD2A96q7MNJ0
                      vH0abr2YjHM8kySgPSLam7207oY84Ji3vGLwAD2glLu9Psl7PZk5yT0I2pC8ANlkPEhExTzor6Q8
                      djqWvb5EED2xJos9w8K4PVWIx71XubY9IJOsvLRGjrzDlqm9d1WMPW5yCz257IM9cYy4PWAi1rvx
                      RpA9ieG/Pcyvlzy+ixI9t6OAPdZ+D70PJLs9K5GuPVRUBr2MKtq8DEfpPJNdpD0goU29CEC0veVt
                      hz2aggA9Q+guvZiEabyA4+u7OKLivGPfTb1094+8sGpZPND9CjyhI449RBncPNB/i7uz1YA9sKlJ
                      vfvUv730vOA8sK3buwp8Br2J9os9Fid7PWCowjxJ9rc9UAtePKYaqb3Ls7u9H0m9PbgJqbwk6PE8
                      JQeovVVrmj1gfh47wKtjPKdttj3DsF69WLa0vOPjYb0EZ/U80JLyuwccrr3QTGi8axSjvWzA+jzY
                      gK29wPM/vbDnpL2QdjO9tcWxPZozLj0opUg8LLyiPEdZS71Kh7S9tW6/PTp8D72x8pM9ciNzPZGn
                      lT0josA9PRtXvWN7pD0QRFQ8UHH3O22bQb1Yj7y9H7SbPSTG4Tyo0MW88eqCPaMqmj3v3KI9FDbn
                      PEym8Ty+PKS98LKzvX0woj0VZoY9vC3NPJ50UT2USsw8TVkovX2ad71jTau9sAsfvfIKaz1Dzi69
                      QCElu/luyT3gXCy95MP9PBV0i72yqng9Hfg0vShyy7wSWD89j4epPVpOLT1A5H87MCc2vEX9rz0H
                      nrY94gZiPdNTdb2VHLy9gimDvX+drT2HmZU9xYLFvYsQrj3ynxo9uDf4vIKUEj2okw+8kXWMPQ4d
                      pr0i/wY9gE0qvQjH17zMh4G9APS3umD1xTz2QWE9wLb2OpKVET2xSr89kKi0vby88zyA6eq7EsdA
                      PUKdvb3D7p892ZrJPWDSr7vRfpU9M+kdvTIOej35GJg97AjrPACxdTsgEIW7es0WPWB9iDxyLDY9
                      OtNbvWLiYD0ACsq7ul9GPWSK9jweGXc9E4+3vSvXxT1Nk5u98Kc0vMMOn73NE8i9aPA+vDhTuLw6
                      DZW9RpgDvV30lz1gmKK90LYLPDBwe70gppW77OTNvPpARj3perw9Csk2Pf9Nnj1OiAE9CE2lvFsz
                      mT2gt8M78Kk4vUOhlz0lvoE90CUYPFKgYD29cl+9A2GEPZGBrj3Myo48NH3rvPLWAT33uKI98ItE
                      vDSh5zxQM/m7AFcIO2Mhtj1pYqE9Z6uvPfLdnb1t0aY9DbqIvX3znT1SY1s9dp8CvaJztb15DII9
                      QNUXO6yvh70vRMm9KHN/vJqCLj0Jpqc9sLgRvUqTOL1cmAW9NODuPAhgqTyQ8Hg86nZAvczuib20
                      B6o8GmNcPTx6g70x5oM9TFLlvAC8uDzaOx496FlMvMNmt71v5qo9VFCdvBDGp73O/So9cIavvQBq
                      BTtC6hk9I6I0vXEpuj2MLME80Rq3PccIHr1w0Ki9MK5ivBzg0jyQwji9dFivPBhxSbybYIU9QfKo
                      PYzbzTzq0DC9famvvcCKOjsh7IY9AkFTPWXDjj2WgQS9F1LGvX0iUr26QlW9YFLJO5stvD2wV9Q7
                      3usqPQPDoz1sWI+8TX47vUPOuj3qlJ29WtxWvSbpND1KxWW9zeywPQDjErtdwaI9FisCPeyUp7w/
                      CJ898rVJPRCACLyRWsY9h3iwvaGLuT0tCnK9VDjdPMe9T71KLqa9l1Ibvcfmij2zsrO9QFMHPKaq
                      dz1iX3E9ILSgvEC4rryPVbm90D2SvcIAaz2uFh095LTZPGBDn7tomqC9o46wPVCvejxpVqY9Wz2p
                      PewN7zzsnsA8LOePPChiNTy4Zs+82yWiPd36Rb0y12w9yTm9PfmPpT1XMqU9uCGcvPLiND0iLEI9
                      CPSHPLjqqTw4t7S9SuhVPUiMyb1A8EG7vjWPvcXIjD2COVc9IINIvZ8yqz2lpJm9DdK3vdRBwjy5
                      LoU9gPVpvaNvHL3uAz49EKITvAQH4jzAu2298rFwPeL/eT08QxG9ghxVPTRyubysva28bZtmvQCz
                      hDvYsmY8o39KvVgLurysRv68q5yRvcK5aj3nycq9fmdePehBm72qxo29ALtLOkp8Lj1Vaqc9IYeO
                      PcC6ADtAeim8U/Y5vS/3lj1YKwC8cn8APQAgFr3oCw+8QD+buvTCFr3BA6c9KMTFPCMmlz1ql0Y9
                      iI+xvcwN1rzG5z09yn+MvbBPlrty/Km9eq00PfzVg72UGqU87nkfPQ8Pkj0sfJE8tDe7PD+Dvj1s
                      cvy8TuVKPXUOxr20vqG8uFfhvL8+vT0E+ha9dweQPUvvlr1yyF49PWK+vTDynLvx4rE99IWRvAkf
                      nz1hhMI9eA2ovKNCjz3cHeY8ucrAPeSP5TwPZLO98twKPQvynz0NfoU95mV3PdzpEb0h3ZM90C0t
                      PEBDFDxeUFg9v+S5vYC2Ob1f/709ZgEoPaK6XD3Dt789Q8W5PeAQ7rugWiO7o5BXvUMUtj3/36g9
                      cu5EPdKXu72wDn28f4yEPclWsz2Qoki8wr5SPYFDnD2ZHos90TSpPQBXNTvqCCC95RywPQdTfb3Q
                      FE69G7uKPdfRuj2NiMo9q/imvbDsXTwrYrW9gKRPvRq4Xj0ABgc5Sd6PPQA6p7tCkxI9zGTgvIbS
                      VD2ShHQ9XXnAPSpTl71YvZI8gIyvPOrvNb1gRzm7l7y2vQczcr1gwdI7r+S8vdb6Xz1XDoI9t+27
                      PbBMqb0wCEq8B4apPdJnMj2eIw490NqHu/LTg71odg28VBO3PLYHo73WXXw9/WGPvSAygbx9tC29
                      GjlCvXzcF70dmV+90sIcPfBYlb3JW5c9IGmBPLkyzD3pLaI9HWUjvVSZxDzYtgU8MPfNO3I4zL2r
                      L6c9MHi0u7oWb72Lm4M91ztXvfSfyTxpNrs9QDtqvezF1rwgsh+9FGjAPBUnyL3MVqE8MAA8vBQK
                      Bb3DTsc9GkpVPb0TmT2kv/M8yvJNvbs5tr0s94m8EIc4vaxX2rzdtMQ9XQSOPaqTOL1jbCG9Z16O
                      PcC9gTz+Wyg9wukpPYwqjL2Vz769CHG8PE4BOj3Ck0A98GtNvARb7jwAVMw7iiIjPZk7sj3M+tI8
                      AOizuLYoDD2wfxC8NTqsvTTGkTywRRk89EnHPPy32TzcOgO9YNADOx3hqD1MHru8w4VAvRm1uT2O
                      2i89Y7mjvaByZbsp7pQ9oALwOxqarr0ZosM9cdOVPWPOMr3Yhj28EaS5PVWmxr1qdj89QP9AvNiq
                      bTzQVUI8OsQ5vdnCwD3Q8n68YRucPYAXabziAAc9Rj6HvWxDDb3mkAG9gJlgOuayED2wrtQ7EoMd
                      PWsFpr1DTsg90lGyvccqZ71n4JE9QEVFvBGsjT1KVX29kD12vTHipD3MdNK8wwikvYO0ab0ASnS9
                      AE8MOkLMgL2wyVq86m4APbRnt7wDB8u9TLIYvfUhnj0asgw9DcxMvQC6J73eiYq9DXapva75Rz0S
                      bpO9CiBUvcMjbL3ada+9SL2OvVOhKb1d4ZI9sXqCPSVUkD1u4EM9R3oavX2xyz1CdVI9QO0TOzDX
                      cLzKKQG9EBlrvRRZsTwgMva8sHk2PMcoVL2mWUA9CqpxPeC9Z72op7u8QBO2vLB48buKK1g9Av7B
                      vaecgz1XPMw9svACPbr7LD2KhRs9y1qyPZhguzzySGw9YE70O0fwjT2wg6Y7ZFaEvdMvYb0AQT07
                      0HYPvLdXS72f4L69HR15vVocaL0AssW8CptAvdhzk73kZPo8jeIsvQCWWrxApiy8PQODvdhZ5LzZ
                      /8o9AD+RPOgzib3dw6s9SptbPXi7u72hZ7Y9UI2JvcBAIL1iEb294AfxO4zEsLxS1oe96UGePbTF
                      9jyAAei6aKFMvED4o7yo0B48QCNRO+J/Hz0WSzY9XWO1vYA9Lr2w+369egynvYRf6zxFeaU9GuNx
                      vQK2jL1aWjA9WHREvGgEjbxQ61Y8Cti5ve75qb0QRxW8bM6xPJHQkz3y2A49vaCPvXe+hz1AE+q8
                      2w+ePamGnT3Q6TK90kxQPUQ8D73e3iI9Nq8XPegpajzg9O68YQDDPY1VHL0Nn2u9ceyTPbAGVrw/
                      Zoc9kRCtPS+5kT2Ifby9IzwbvagwxjwwVrk7llIXvcKEJj2A5608MiUwPagfmrxfuMO9GCssvNdw
                      uL3SqlQ9BqUPPdDTn7tIvuq8p2JOvbBix7s6XH092o56ve+Djj3p7qE97COMvEfukj3gKoe7AptN
                      PbDq4rvASVm7YPUEOxDwT73DWS29yaydPSqerb0A1xU6+KS0PLmAtD3gou47gK76vAMrrj2qfho9
                      t2hEvSmyvz1DcbI9YFXyvC9Cyj22UDY9s8CcvQvDpT0dspu9csy9vRbXYT1wqlE8KDCqvSNmjz1D
                      ZZu9wPmyvOfIpz0ICb48EEhivIAPwjrYuY48bUeAPZpjKb3NfZO9hCTvPFiNO7yRW6s9keqdPfXG
                      lb3fCJE9wMmHvZhgJDxAOJy8yrY2PdfKLb0dOMw9AhhQPb2gSr0A1q45VzkevUdDHr1sLNk8tCqq
                      PIMTY71AO/k6MaqQPT9EwD1tMnS9rt9iPVhbkLzZfsA9Q2Q/vVo1CL1wbmw8XQuTPUFwhD0twK49
                      aBp8vJpCEj2TW1K94LwZvUDhA7uW6J29UHypu0jprjzEPvw8aAGsPELoGD1n3Ea98Cq+vfSVnjyG
                      YBK9UoQpPSSHBL3978M9djQRvXCKNLx0tpc8kGxIPHVCpz1opTg8k7yDPaKBs70wgYO9+U6oPTAB
                      cL0IdLu9SGi7PKqjOj1q8Ti96KLgvHefO73/DbW92Q+BPTWetb214cE9ySCmPS2JKb2KgUS93di9
                      PYzopjyshbK84Q/BPUCRrTzSAMu9PW1EvVqzSb0SJHI9KLUpPCDZtTyI//W8mrVwvT60GT3JUoM9
                      9aeLPU63BT1I+Y68smOYvfBFTb3ngKU95WKgPaXhpr0uHko9yKGAPEkThj3K/To90OJXvfBskL1Q
                      7Rs84TqMPToFh72FBMu9EqYaPVAvJrwYXqe8tJqKvVcOwD0C3Li9M2BBvYrScT3NoZO9sQyMPaCF
                      3bxO9Bc9zJ2yvIp2Tr0Y3xu8rg4wPYqMNz3AyB+7DQWiPWV1jb1gph47MZWlPbMDrT0AkGY7sntP
                      Pcg+j70QM729W2bEvZ+Bvb1etae9aJ01PDL4Vz0AA2y8x0J1vQcvkz2AQkW9afefPZ6Xhr0glha9
                      DZ+Lvdi6abwd1aI90wKKPdQhkbwkjhe9x0euPeirRzxDBsK98XKOPVBAULyAyye9jKLoPPbTJT0X
                      nWu9LnkuPTAYn707v4U9cBkwvdw06Dw6PmW9xpOpvfoqRT3J8bo9zLecvAaLYD3ASIC83aIavYqj
                      c704XsA8VDq/vD1uvD2v8ri9Ovg1vffSwr2iVZ+9ELkZvEL4fj1gvq6838mwPQfIaL0QUko86dKz
                      PcCJc7vQLoq94J+3vTRHqjwqXzu9TPi3PLAPdb0t9Io9TkQ0PXoYQj3g6MM8js8XPafumT0ad3E9
                      mDGnvIBg2bsSLUU9aEfdvIDpOLz6n1q9QFoQvWCjqDznir29UAQKvU0wxr34tbc8tDOFvR1wyr3M
                      cRC9wA9cu/0AiT0oTWE8RJX8PIsjsD3tdyK9AEmHu7dAQ73WLYa9XEPaPKb7Eb00Jxe9AOMDu7SH
                      oLxwRnq8Vp+rvViq3ryAY8A7vGwJvTeJdb3AFty8yO6QPMwctDwAwOC7mJSvvPDMeLzTGja9VKbz
                      PKD1pzz4KYi9w76yPYvFwb3x9qg9ti8aPVeUhD3iiSA9TXenPWiMzrwHkr49MGcMPCBHqLvMoOq8
                      PaG/PUiUyjyYM7I82kYhPRD2D71SILa9Q4divd1Mgb2BMIE9AV7JPcDXB72AECa8dBOuPEfYLL16
                      98G9NY6zPQ34vL3OICw9WkOevZATl70Ubp+8YhuXvdCvfzzidC89XJSBvbi0vb3cI4q9UM0IvEJZ
                      ID20ReI8oFLVvI1/Pb3szKi8+hEjPaFuoD3QOi68ch9EPbPBlj2g/li759i7vajvb7xVR4Q99o0O
                      vVLmXz0qn3i9zS+MPXTt6DwQJnW8IIXPu5MnfL3BjqM9qO0xPGBcnTwV74S9cI5xvd1lxD1X4II9
                      tgAXvUCNPbygfIm8tRrJvZrAr70vDps9PUqhvXbNg70eO4m9YqJmPbyIAb1u54e9dnp9PVQUljyY
                      jH08oKYRvc2uqD06K0+9LJPHvKMuH73KSUq9gKgLPGgTnDyjUZI9cz2gvVg6dbwHRLe9c6HIvQBZ
                      MDwaLKK99LnyPNAOfr00ks28oPM7u4BzlL0OYY29gGB4vILKWD2W8Hk9onBYPeJVPD3Gsqm9EbKi
                      PcByMjxQV7U7OMaLPCr6Iz1TGMM9A3lfvSqQsL3PPL69ss2UvZh0rL3Clcm9rQiJvSNhqL06Bj29
                      4xLKvYqej734EZO9kh1oPcAQnr3RHoc9yhc9vT+uy70iAwk9DiQLPXrgIj0gs/871Fa3PDCLYrwU
                      egy9bKWrPMrnST2AucY7u9eTPZIGXT06DaS9wpBYPXNQjD1AI586z5S8vTCnL72oyMy9mD8oPA4+
                      ej2+aQ09ehRLvQBmI7kVn7O9zQGsPVhtir2AhWw6QMA6vKpZIz3g6FS9g1FEvSWSlj1YDI68w5fG
                      vZWzqL0K7Fw9QGgUvaMJlj3BCrY9MEAVPBLmOD38k+s8TdC5PRKan73Smb69d6C7PeFoiD1JqMk9
                      UwKfPVfiRL1Uo4y8RxS0vUAnQDtREIo9zHSzvA9rvD3Q94G79h1cPVwK3DyICrC8IUmLPSCEw7wM
                      v4G96hNYPcBKCbvYT4I8dA2uPDeldr15a5s9bAyFvRxJDL3FF4u9gJqtvZg//rwGL0Q96sEHPSLy
                      ZD1EQhO94O7QvFaiHj1AZFw8IuV5PTNZnL3Ay4K8vBL+PLVspD1H7m+9KEGqPLDd3TsV5ZQ9g5az
                      vZJFw70uTpK9MFRGPGCirTuqu4i9W/nLPeVUzD2BIZM9T72OPVZFlr0Oai09zeuyveVfwL1lYaG9
                      2zqgvfdZrr2UIuA8cxwpvby6Dr3wTFq8P2WpPerAq71sU8O85ePFPZBFjb2s7N68uHPMvNk2iz3U
                      9ce8PKoLvfgzqryw3Oc7owM7vWgYGry0eAu9GDlnvCTyAL2A0KO6bELrvMFPtz2rNbU9B0tLvUDG
                      tb3tq2O9NFKcvCzVg70yH8K94r89PUF2wT1AsLo8ABWrvVsLoD16d0E98LRivGaZkb3zV7Y9Llyb
                      vfoNY70MaOS8SYiiPXQj2jwh0co9pSHKPXiVsr0y7XU90uiDvSMNob3QNRa8jVtMvVgp7rwgZPW7
                      4O+aPMrKRj0WwTE9d6ZivQLdor2g78U7SamuPZSi+Dw6Lkw97S+8PZ4dq72a/KC99TWIvcogCj3q
                      +569NGCFPMZ5hr2PIa09NM2ZPLix/LwYeog87TAevQDKKr2Tp789amtIvdS+zLxoCCe83ZVlveHc
                      sD1omVG8jUfLPfiwjL1AQFe8QO1+vahBQLzjacw9NHsZvRiOSryQE2E8nZ66vaDhYjsARXO87vin
                      vfSSwTzieE09OfWAPQCbfb1uUno99UqBvZp9u72F18c9ideFPRO3kz0N+YI9vATmPPQQ0DyQFTi8
                      nXqovccafr2AlSk8mr3JvYS+D73jLKC9AKzkO6Dzyrs5YLk933mcPR/WwL3AZSO9aDvwvPGgkz2a
                      SGq9WpZcvVofmb1aQl+9h4LKvZrDZL2AfWQ8AgFPPVYqFL1Aj8M8sPA/PC83gD2Ath+6mK62vGin
                      Xbznh7y9ZAmJvaYMaz0K1U+9JDaKvRyv2zwkDNE8cy+pvSTBBb1WP009mSCBPZLVRT17uJE9UBsV
                      vRS17TwRL6M9CigKvUVRrL3OSmc9lhApPShjIbyvUcS9c8m/PYLcIT30oZI82J2XvB8bgD2bBKE9
                      4ghlPQn5iD1V0Iw9YwikPQG+uD0A8zq7IGwXvRn8rD1orZu8ETWgPY02u73q5xI9GHA1vFiqpLxo
                      i7A8x3vCvSjWur0C3FU9ANUSOjl8mD2wKyy9djIHvaRh/jwdY5K9zRRIvXJuHz0YScu8qmgWvWxI
                      zjw2r429ixO/PZDkGbzCBI+9ipWGve3iqD2AgG88MFs8vayirTyyXhU9ENQdvCDYmbtARWo8Xl53
                      PXqVyr0ihRE9UxedvaDWvjwAPrw7aRi6PSgs57yJY4M9eicQPbdwkT2A2Ae8VXWHvfNvhD3DAry9
                      wAQiu2vOnT0niT+9QCfKvGBccztTTSa9wPKLumjwozyKcQu9z2PIPQwphDyDp5W9Xj0ZPfgWorzP
                      NLa9quopPdNzur0EWN08+MGbPLf9mj0wyh68MGJyvQEJvD1Ih6+8MbmSPSPWmj1GSBm9WeScPZR3
                      27xg2tS7+ZylPaC1h7w0I768sPaxu4AhCr14dow8QFlrvJAmMr26nH69WVqwPUCPmrwAufq84TrB
                      PfoVLL3Wh1k9oJL6u2jYbDyDn5S91/m5vY3GzD2QsU88lPXnvAQX9jx7X5q9xxlCvUCUrrxAHIi8
                      9DjpPAAAVzew1/k7QGt5u7q+Rr0jQam9MKQ+PDBkOL2QSHO8IvJ2PccjUL1Ipqc8AMycvch0orwe
                      /2Y9QoQ/PUeNM70tXYK9IBiXvQO/Vb3AtXO70QKgPcJRYD0iQFw9Uth6PUM7RL3PUaU91SXAPRHL
                      vD3gNay9AYizPQUthj0GcFc9WHcZvG90nz2Ac6i98328vR/kvL1oGFC8utxlvViB37xXQag9ahyq
                      vQXJir2D7sE90iKDvY2fsb0CBz89Pecvveb8Qz1zQK49g+RmveNKkz0ASXE8m3SMPWiSr7yAFK+8
                      YOeGu4JUDj1cMoW9jQ5avctrsT0A/He7QLM3vAeoeL1n/Fm9ffG0PcweBL2SFTc9dXy6Pay1pDya
                      yly9uR2HPZw19jxgcsE7gLQPvVBIYDx/J549Ne+APZ7hPj0AzfK7x+U4vRAnGr0o9Go8UyulPYiY
                      sDwfD669TZxivdbZi70WORE99wPEvRhffDzggpI7MjAePWA53DufVbW9LHakPEhKyTyYSw08FASN
                      PKCqizws/Zc8F1e0vedSyD0C+JS9fVBlvSdoyz1sbpG8ON7IvJAUNLwMQv28ADTFvU72az1tjnG9
                      5ZWnvQApQztGy289lb7FPSQN3TxFi449QeyBPS47n70MwKw8BtcyPaMvvb0QqVu91LTFPM4EXz2j
                      4rk9KFWfvKk6rD1XciC9DwTEvVpiHb3DC649Qu5kPVpfmL2+cz89OkUwvW1Xb71acjK9jROBvcWF
                      vz1FH5o9ph4LPeTq+jwH+6Y90LJIvAy46jxkOoa9gAINOmFwzD3okZq9Apm1vUzc27wADqE7eudd
                      vXJPDj0odU88wAOCvMN9lj0wBQ28lZ28vZVsoj2QbTw8g6yNvfdAS734BZ68CHm/vViDlzzKeEk9
                      oiZ3PR1uy72iVn09jSbIvYDC8zrCHi09qpF0vRnYmD3atku97TeRPZU7wD0qXzu9jAP1vITP8DzT
                      PsK9PO8KvTpdT72gMLi7+vR+PS69OT30/7e8WLLGvfIdNj2LTas9uA3gvMAO0DriEHs94Kr6O29n
                      wb17jJ89IQy/PQzqgzzQiPO7tfuevYlZvD1aRWA9omOhvXSK3zwWGQm9qAq0PACCir3GUgI9QOVz
                      vYrWIr2wNSm9aZmJPRB7mr2Qwz88qLCSvLIaVD3CpCY9prF5PUvCvj2gAdY7d2Z/vaAnpruuVzc9
                      BTuWPZ58JD1aB3Y9RfOcPQ3IKr2SUjM9oBUwvf7DmL1AYl27pD8YvZ2Pmz2yZkE9nKTpPPlwyj0W
                      Xis9nugxPcoUJb204dO8Q42CPboNZr1+u3M9oEp1OwAMnDsAmKy7k620PfpnqL3m+5y99FCiPEPy
                      pb15u6w9HqJJPd35Ib1nBre9yKKoPLcEwb3x65Y9qSu1PQBDIbt5EKU9NvxJPRjrvLxllqG9j1nK
                      PaDwuTvUTZQ8Lhw/Pc1pq73U2No8rAuIvEvAr73+ujk9l3tuvanyrD1qpm69EKQnvMCuG7xSRJ29
                      oDjhvABPOjxyr6C9KmHFvYFRhD1UOtI8AKhkO4+ikj20sYS9eHizPD41fz1ufoS9jkyWvQPUo71g
                      xrY8GiI9vdBLAb2KHxo9gPHlushdxzwYsIK8CiI+veTw+zyIKZ68SuFsPQG7oj0grpA8g3RYvfqR
                      Ib0B46g9OfDBPRaICj3avV89WWfIPbGUnz0wsGG8eo1JPRPYn70iSio9cnubvdeVKL2q4oS9AeCh
                      PSq2Xr3wusW9dMSQPJ5CJj0XpWe9w+NzvaT2zDy3mR69Z4WcPWhAOjznUcu9fGv9POwG5DyQx0C9
                      x9tavZiCrTzc2oi9DE/uvIbQob28pN88LWfHPVDxl7uo/cG8V4civVdwgD1M1J88+WDHPQATqjmM
                      muK8RVWoPUeLvj1ACeU6RtgQvQlPoz2gmdm8AAwTu5v7wr3NHre9yjpgPRCPQL0YiIu91Dz9PBBU
                      PrxQv0O8lFTkPFCXxDsYKI284SXFPQkQqT2qkSm9cWKePf3uLr1mFjU9cFRNvNA4VL1sC568kNZt
                      PE48jr1oapM81OiJvIC9UrroH9e8GIg+vMcvyL01fYC91AWXvMb5BT1/4Zs9Tl91PciQnr0c7w+9
                      6CF7PBUcrL2WMyM9BEnPPDeduj3w53e8KHX3vIz09jxkswO9ANvOOd14tT3cPu48CpZQPQa4jb0a
                      UzK9Yi6zvViuNzy9cyW9idmKPeg2xzw3uka9MICSu/kMuz2tbq09rWFtvdXqxL3gibs87BXbvB3U
                      lj1j/0i9RA4WvRi5ADzGeyU9QjOGvTK3ez1qFnu97XCqPeXFmb3PI649LWmZPcDlnL3Ipcu8aHeo
                      vBXayL3obNS8Ith4PRlZrT3TMJG96beDPYD8vrp+5ae9uvYfvaPAn73j4SK994BdvbBwrrsKl0S9
                      YrpuPXqvej059aY96Lh1PECUkTzHeqM9z1TMvfLbAz11Uo+98su0vRODv720cgS9b9aePQi1yLxA
                      Qa86VTSbvapXbD1oUzQ86uBivVIPGj0j6Ls90c2PPa2ee730wpK8NYuxPQhHoLxjX3S9eg6dvf7l
                      lr1gJEE77e2evS0BpD0yWzk9bKSZPIBtGL0Cx4a9QJEnvSexwT3MEc+8cF5uvMJlBz22qAu9EKEi
                      PAAgljwipAw9WIJnPDzEDr0ABpw7LBrPvGchcL1zj1S9UJYIvQmemz3L+8I9fKACvfv/lr2jwYo9
                      f0XDPWcmpT0Pcsc9wJ9hPE0Ad70wM7y9khU+PVBowTsYiHi8wCgKPFjUn70Q3kw8RATSPG65cj3s
                      ItS8Bp8NvaJlXj2OOoa9RGKHvbLVED3BZok9JhMTvRBmYbxFt6G9ZmAuPUp7LL1DUL+9WymAPYDy
                      cb1UdqK8dqFBPey+prx2oXQ9PP3SPHiAlLygM3+7RtovPaj1+rw4+7C9A1+XPQBCF7yG34+9IuHD
                      vTT+FL3BiKM9Jik2PYNUHr2e4E09k1jKPYzbrzyCv1k9GOmhvIqyXL3XOcc9Vb2BvZEaqD1FboE9
                      YFm/PODQd71SpLu9NZaevQBELTuFO4498/qtPejFib1lXaw9gBUUup3GtL2ASi088feAPYB9mDxg
                      ods7j6OEPbbXCz3qSk49QEe7OrhJt7wAzC46Vk2IvQCs3LtjX8Y9fk1APTcyTr0gr6y8pyOiPXFn
                      oj1ij2M9jf+dvTceG71DoI09LxadPQDQkTzCAB49IyO2vdCJLry5EJ0963GovZGQuD3IEZi8YYu7
                      PVtCyT3wzBa8qJIAvJfIpT0dQGG9axjMPQjynjww4X08yAGJvNEtqz2pkok9QBwIO9SPkbxLO8c9
                      wj5YPcIPXD2jZcy9GTPMPYqNQT2nrGy9gByTPL7Eh72iClA9EGQ5vBD6xL3TtEq9QJR0vKM8nL14
                      xLE8DOOdPBo5Nb1Ft409QiRjPV15M73mIRG9h5J/vW+7yb3CQjo98pkDPXRyojyA8re94kVkPUFy
                      nj3nfJg99S6oPb1Wbr0CnGE9a5Whvayb9byw3eu79uUePa5NBD3HL2q9kGsWvDJGND2q4Es93DSC
                      vS9ooz26wYO9E9q5PeCQnTzU7c48IMClPKfCgD2ojMG9ViMAPajrzLw6sRE98JgivdHsoj0SYS89
                      qN7IvY7DND0D8Di9dODBvCYVNj13+Gm98IOVvaFBqz2jRck9AIiwudCbcb2NjJA9HSl6vTEwnD3k
                      qdY8wMwiu9iNqTzBWq09urgPPRDuHDwwQWm9MAC7O7QZ37zSni09mIZYvK9Fs72XKJY9WG+TveDm
                      Mr2BeqU9yALJvL7LcT1AAJY8QAFivbI+bD2mEQ89OkwMPf2uvD1AxTC9yA20vLnJqT2wbIo709Ga
                      vWsgpj1mF1E9v4CDPWQA9DyK2m69xe2vvWAZwTs/QYs9LU9LvUt+zL3xj6M9cNp0vBhCIzygyf28
                      gtIIPVcWaL3A5gS9CrAaPRmNvT0oe0c8kA5WPDg+nLwV8629hzFEvWqIUr3ZWZc9CB3NvBO4b72W
                      H4e9MC+8O1gC3LzRXLY9SBClvaoiar2q43Y9EigVPRrkWD3D3ck9KBuUvJqFJz3Q5d+7Dw+vPRF5
                      zD26DAY9urM5vWBPTL3qEqK9qQqOPajJd7yw+569J3nCvdRtubzCdHc9e22YPcAmODzVoZK9AF7V
                      OdgcC7w7bMy9mz7IvdAOyr3Yso69LDqhvLgpzbztNrU96MDGPHq5ND0w9Ei8XZ9nvV0sjr0uQpu9
                      NZC3vYBW0brWbU090HNAvEoPJb0GhVI9fpQGPfjByL2MvgK9Z3fHPaD8Ojuss4e8DXGSvZA1br1q
                      QRk9EBtKvThdizz0o9s8TOrVvJoZWD22aUs90DSRvYBAub1C+sK9cMZovL33ib1jM5u96x2OPdAT
                      rbvIv4Q8spGRvd7tnr2KSFU9yL6bPPMQn712MA+9rYRRvfLdAz3QmeY7BrE2PQj6vTwYT288LG3o
                      vG35mb2qbR+9uh12vbGskD3MFf68Pt6avX29eb03C2a9M8NyvYCSIjz4Sey8B+ZnvZif/bwyuGo9
                      rvMbPcvlhj1UupO8pEzpPNrHUj16l5S9bDm9PF2JfL0CWxg9A7ghvRw8B73Xc6+9NeOGPUpvSb2H
                      f329oMS/u+3Ps73tVLq9Iv4pPXpJKj3Qkpa7olyRvUDdP7sy+2Q92Py3PGZ4aj3yXVo98MQ4vS19
                      a73q34+96JyVvArlib0o2hI8bAeEPCCPrby6Ey89mKO0vadggz2V0qk9JDfuPFRq77wadA69wLcB
                      u/djpD1S8wU9AD5XvdDLKrwoe0k8ACCJObVtkz1UsZW8gOQKvFHKlz1FrIg9pglaPdCr+rsRNpQ9
                      R4gavVI2Nz2Nk1m9QOfCPFQVFL36ex69Uo48PVPjtz0wZJm9ZAn3PM19vL3+wp+9wAZLO6IcFj12
                      3D89itJLvePyvr1aTBI9q8CUPVbJEL2Ypry81HW1PLcbjz0Zea49Xh0iPTE3sj2thFC9CFyovV6g
                      Nj2er289OziVPUwoD72w1Cy8QkRHPRRtyDxA2bG634nLvToScz3opyk8x0GMPSHEjT0EI+I8qMGi
                      PMAwXLt+fA89OSOKPY1fW733DcU97Wt3vYx1trxIa+S8MLpfvMKyDD2fNKM9AEqWOViBZryjqpK9
                      kIFKvBDMRzxlgKO9Yql/PYeVR707rZo94vZNPbgjujxjtH69+zmyPaVPxj1AjFU89Y3IPcaoLD1T
                      gLE90iKgvf9stD1xUpY91R60PajLkr22yAM9YEicO4p+bL0wDbA7wglePabsQT052cI9KCa2PObB
                      bD2BUo89rhQFPbZOIj2qcSi9W3S/veggsjyAPHk8wHK+uui4BDyDi649GDcmvAAdGrs9eIq9Wde0
                      PSKoXD3R0bM9ktAMPTKSvb3jwZw9zLa9PGY5dj0V5rG9kLdyPNeCtr1w46i984lFvUKAh71AsXG8
                      J+OkPa3nZ719sxu9uU+QPaFzgj2Ukb28C3+avT15qT3A7DG9mM+UPDC3LDxgWoi8OEravJ4LZD1I
                      4pO9aAZgPLDUUryZ+bU9ahoCvWBaUb3m0ha9TajDPe39vD2uRFM9GQC8PdgytDwg4cY8/WGovaDL
                      Eztb8MW9EzOePY7VqL174ay9/0mwPbrtDr2g+SE76UirPZye0zxAS8c61DHIvFqGMr3A7Fo89JbW
                      PMz/jLwGsHw92JIxPNB6Kb2107u9AnACPXI1Xj3TzHG9UGkPvMBOBLvwfTe8EJpRvV0EnT2wkTM8
                      6GGxvES27TyABVq6YCInOxgp0bzhkJA90VnJPZBDFDzTxnq9GmCrvaBIqzyYPIy8GNgnvOc0x706
                      42Y9q4LHvaKNx716K2s9KGIPvFA/KryTwbm9Zig0PRBsD72j9ji9Yp1aPRgdRrzINYC9g82SPaK0
                      DT24muS8DlySvQIcDT2snfG8f3zHPVLFfz2mszA9l4CfPRANFjyYADc8LPXPPN+5x73A+FO7WOd2
                      vBl2gz17wIU9YIPxvICbkLqd75E98hZsPcDusTy0Age9yG6yPNihSLy6xDU9apQMPQAofbiHHUW9
                      moykvYIxrr1iNQc97sJZPcDDdbsAGyO8msOivazYubwQDI+97LScvKRy5Dwdi709KIuivRgJETwQ
                      vkq9W0/IPcyfpLxD3pM9bGqevHLyyb04wPW8QMXGvQAVGLwjxya9nZOJPRmdnz2qwKi9IKjLvDxk
                      Gb0TE2q9rEKZPBsqjT1kDew8urMVPRhIRryoage8kfCaPQb1MD1jzG699DYVvXEKyT1ynTY9Gb/M
                      PZYtdj0DsDe9IxsvvQDBdTztmsi9ZPjSPIIkk73PDMY99l4IvZ3+I71obVS8uD6TvbHLpj1wnQC9
                      ySiSPQBzCr3ptsU9Py2sPWC2hb3rXKC9BSqWvamiiD2JU549urWSvYD2/bqFAq+9QLuMvZ6fED3Y
                      2b69YK7qO2laiD1uA2c902SYvQDceLuwbGS8gLCBPNjj27zC7IK9BulCPfGaiD0YdoG8uVukPagA
                      bjxiXlI9QNYTu+3fXr2Qxp29jFGVPAAZDbywnoy7gjgCPUOEnr19Bam9r/fBPQ6ULj0AW647vv56
                      PbONHL20jOq8BweyvWCguzwdEYE9IPOzvT3DjT1slpO84Nxxve1+Ob3GpKG92SutPaDmLjvHWKk9
                      Ok4dvaz457xQWLe9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0ODE3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzY0ODE3NnEBYS5kAAAAAAAAAKfKxr2BtZo9uQOGPcCxpL3wdBI8YLPIvQe8xL2AW9M7
                      XioEPfOINb1CqE89d3uGPR3KUb3GE3k9bEXDPPSUjLyf+sY9R7u7vfAzZDyUCNE8h2iLPZLsWD1u
                      HIa9cDOqvTOTZb0MmqK82N/HvQDk6bzAeBK7AGPgO6ArkTyAWRm6QBvWuvVwmb3+MTo9Q3obvfMd
                      p72+rnw9wRTJPeJrNj1yKSQ9lUHFvcYFJz2PCso9oMAKvQBvxLwIJru8NNPgPJrLE722s5u912Mr
                      vSAPv7zlM6M9dCmCPMNEsr2yZwk9L7+lPTXFgD19HV69LRqvPSGSoz0i9EU9EEotvc1wdb39djC9
                      XDSKvcSkAr3Y3vS8Ae2HPQaELz2tsDi99BKWvCNnsL0x5cU9d/DBPQXFhD1TEl69p+kgvSChqruS
                      gmA9Gl1gPdiblrzoY+C844GgPZ5WPD2vFp49FLW5PNaSCb2oMsq8mOBSvJY1Rj3iekY9sCs2vL45
                      l72K28q9jrZmPXXOlT3otFa8Kr8Kve/kmD0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0ODI1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzY0ODI1NnEBYS5kAAAAAAAAAOdTgj1Ik4m9NzZOvRd9Ib0g6bQ7JouCvYAX6DvAeng8
                      7BHCvCCHubs3L2W9rJnlPL7FTz2CsF093V5fvUSJzjzDlJM9fpByPaJ4BD1gCI67VBalvIiqsryn
                      B4w9IhgwPXGNpz3vJaA9ZQu5vdTHzLz0A8U8+Y2gPUpow73dgb29oF8LOxJJoL3Pk8g9jnI2PTRu
                      gbzzQZO9WlB4vapGQT264GG9WG38vDIcGD23Rr+9lvIHPZANMb0S53Q9snZ8PWBHbbuHbTC94GCE
                      O3FdxD2CK0c9KDl4PNEpuj1N38k9xUOMvc5qZT2gLqs86ZStPZf9pT2bq6O9c4a5vbDI7bvwZWa9
                      xDr2PHTW27w9oas9sI9FPDuJmz0Yv8o8sH4VPGqJAT3yAUM9orVNPUMfXb3Ljaa90AlZvZBwur2o
                      aLK8grpkPeiPpL0CA389sExWvQAQZrrDQLQ9VwlQvXIzRT3w61K91qIDvQePvL1gste8zF+7vDQD
                      /bzlCcA9UYWuPU4qaz0aIRU9nYWEPY9IkD0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNzY0ODMzNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNzY0ODMzNnEBYS4BAAAAAAAAAHL/yr0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        9x8RPECrJjy3HPo7txz6O0hfeTwUWU086l6DPOpegzzQ+h08rss+PJ+iOzyfojs80PodPK7LPjyf
        ojs8n6I7PA3kETxqEPw7U14WPFNeFjxr8UU8Q8MlPGanOzxmpzs8mU1BPAViXDxUUE88VFBPPJlN
        QTwFYlw8VFBPPFRQTzzBvYs81bOPPFoOwTxaDsE8Zvx+PExLcTzrYrc862K3PN09hDzC7q08FJpZ
        PBSaWTzdPYQ8wu6tPBSaWTwUmlk8wb2LPNWzjzxaDsE8Wg7BPGb8fjxMS3E862K3POtitzzdPYQ8
        wu6tPBSaWTwUmlk83T2EPMLurTwUmlk8FJpZPIVEzjremrM6gF7vOoBe7zpVFHA6W8aROvzcYzr8
        3GM6zXu9OrPknDo0iZ86NImfOs17vTqz5Jw6NImfOjSJnzpJL80694PtOiUTxzolE8c6ajqXOjqW
        tDojhZ86I4WfOrHbmjpv1Ic6fmSQOn5kkDqx25o6b9SHOn5kkDp+ZJA62jZWOjFPUDpsDhs6bA4b
        OjvLajroHXg6cTsjOnE7IzrSXGI6txosOtaQiTrWkIk60lxiOrcaLDrWkIk61pCJOto2VjoxT1A6
        bA4bOmwOGzo7y2o66B14OnE7IzpxOyM60lxiOrcaLDrWkIk61pCJOtJcYjq3Giw61pCJOtaQiTo=
