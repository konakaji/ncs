N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA2MDAzMnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzEwNjAwMzJxAWEuhAMAAAAAAACwgYk8QKGoOwLiBT7OKFE+jc2RPhbNb75dk54+CLUf
                      vijjMr3H/Kg+IpiYvnCT8D1hlYA+UWaePqDN3T3D2h6+4c+GPuNzdr6A0C27dh8zvgi2fj0i9Uw+
                      xn5YPssZpj5ls4E+butaPhzggb5bOBq+9tJ/PgrtLT5AKZW+WtZqPuodMj6GeDs+z+2avmvOCL4W
                      uLS92pFHPpuvab5LbSa+Wxyivm5tQb4QJBI+4DjpPbYUzL1tCZc+HBbzPXWggD62BWe+QLzkOyw1
                      kD0clfY9yUqWPkaPKT4Y+YG+UPrEvGi/SL1s1ok9IOArvA6VAj7spIi+JM6ZPb5+Kz6lgaA+I9+h
                      vshVPL56r1Y+Y6mRvvg4H74Jvow+0OLNvYrFRD7uuis+vwOGvhY7Mr5SYD0+4U6ZPsb+Qr5E+sU9
                      OuCTviDNjr2NzZc+ML98vgMvZb5h2po+AATuubBa/z2gnRm8IvoaPrDrIr5Muv69CP46vdBFkr1m
                      1fm9nupdPj5vV74bSha+FshsPjvzGr4gOnC8RHOVPTewnD5cB7U9wXmoPrjtjr7oH1g9e9mHPpAQ
                      Iz68DJQ9EP66vTgpSb4qyYy+eFYQPSr1jb7wIew8BaaSPjY3or5UmKm93upkvoCcSryufFK+qvgC
                      Prm1pT5MD7o9wJC2O3DIujxzcAm+Lp4evpTqkD2+1wS+0m98PuBNPr78XIC9skUzPqGfiD4TmY4+
                      wKWuPE9xgL4Zrps+A05vvkaVIL63PZM+gKmsvLh1Fz5mEoS+kASevpB96DxufR6+MAz/vYbper65
                      zJo+fLSXPbRU+j21Lao+im0RPuBndr5e33S+oH92vUCanjzexBy+0OOcvaD1XDzYF389M40nvgAx
                      hboCFoO+9qfevXIiir7a8ww+GvoePjZ1TL7wNaw9iIFevTO9o76SP2g+UJ2hPJbJBz7gxwC8GqNm
                      Pu14kz6A0Om9w8l2vsARc753MZ0+Kx2nPkD04rv+2AE+nVaAPkGFgj60fJC+NMGmvVg2NL4+ED2+
                      XCqAvYD/Tz1AEUu+ZIapvrZUND7OM6W+sROIPvxkkL5WWsW9Onl6Pj7nX74SJkM+6/2IPgDqPj1s
                      +Nm9KlU7PoDJkLwbeWu+gKNCPCBaVDyxnqY+SAMNvlZkcj5clKS+jYWbPlNNqD5gAWI95nYjPgCL
                      ZTzlQYU+c3CdvoCcW75Kmy0+Gm08Pr70ML7cNpE9sCCtvKDAAr1QTEC+JD6LvpaW3L0ojkK+sxI8
                      vq/Ppr6yKkw+Jut+vs7TQL78sq+96EQyPdGUmT7wirk8urtqPnBIpz3I+XO9SJJYvQDdHT42AKS+
                      9vbpvdDyED5oXCm+kIGOPRu+qT5mx6a+SZ+cPt4mlb7A2eC8Trt6vmvRbb7Wwz8+mLhXvSC+q72D
                      j58+f8+Tvosikb7yOGk+8Ca3PZ3moz5mon4+AKPOu4wi4b30B5o9UWOVPqxEwb0IXgo+4CBXvFib
                      N75cEZK96IAsvmCO2D1+P1s+KAoaPgzFlL3iZJO+w+MevngESD3fjJ8+bht8PqpTXD7AiAg90PSe
                      PSj1BT5kMOk9TiFxPtifO73zx4o+/D6yvZj3Xr44KKG+jOC0PSrqFD6+AHO+nOr5vUD/6rxgJ5K+
                      aJKKvkh3WT123m8+UJLevIM3Wb58Vdm9uu+mviyz1b3Mqei9/HSDPViDBb3MU8G9yM8mvhAgWb7A
                      tVu+rrmLvmRPtD2XqIi+YoAhPqzrmr6w+X6+pNXzPWxz2T1NHYA+XDrSPVjIPb3NjaA+M7KIPuvp
                      er7+1l4+sKs4vlCsorwX8Ig+4GApvZsLTL4sPM490JasvAwJ3D2y3TE+XTeLPhztir3koZQ9ij5v
                      PiCqSL2GGSu+fvskvgIsUj5AlIc8HG/DPcjHLD0Mv9m9ajiOvvtnFb5cvoK+vmRDPoyt+T1lUaI+
                      trW9vWbXQz54tKO+wFV0vnuhhb6WsF4+qoUZPqC6lz0A0gG9WpRcPhbNOr6wy++9+cCCPhMxQb42
                      aci9XP2jveaNGD4wdZO90EZPvhT+kb50n5c9cHrWvZ5cqr6q+Ec+krpIPoEjqj7S+zg+dJqTvuxy
                      3j1rz5y+wHJuvgqsPD6aOHY+GEQEvSdNgL5nspg+sH3uvQq+nL6QUg++QB/nuxpeQz7TJWS+ELv5
                      PcEblT78jpw95+mLPijMVr2T3aS+n22ZvvPhhj4GvaW+LmYQvsYoJT5Ilwk9LbmnPjgPUj2ASPe8
                      Yj5JPgJOOD5fCZy+pqinvsLvJj6UxPo9gE7pPTByqjwqAxk+xKX8PeTFor1QtIK8WSiIPiyVmD0u
                      DUc+zpwOPt8Un77+s1W+wwt+vuKEVz5oFGa++aGHPh5Ndb4brgC+iKYQPWBORr3Mh929UKqnvmow
                      m74mBgo+MHTcvT0djT7s2ou+ds59PhUWpD7nlp++egiFvoAJHz5K1YW+BDOFvejdkL6kuZi+voOL
                      vkbM1b1Q0dm8GHFyPZ9oij54zXg9E3JYvukvhz6hFYI+t/+fPrwNob2Jk6g+SXSOPrwbkr1m7NO9
                      0+elPhZdpr4Qg+U8kEHOvADpxDumfLW96q49PgOAgL5yBR0+oOXYvViNTL3f9Jc+ewSFPmbuAT4G
                      4Ug+rMaHPSjkIj0y1xA+dTKhPq4afT4NXYU+UAH9PMi8Hb0o5Gi+LbWQPvDZ1LyLbVO+duIrPvwh
                      9j1zqTu+7Hu8PbOFgT45QIw+gNdsvIBGZbvkQ5E9uwUcvl5lGz4GZs69o/ypPsI4Zj7WtBY+mCp4
                      vuaG7r2ArRG8RiyLvupSQD6GsqC+W8yFviwxrL3cjck9AhFUPkAo9rxoNXK923aYPlzH7D1sUa69
                      Vs5sPrwv4j2w9wU+9C3CPZh5Bb0qPxc+8FwxvgCI4D2mb/G9mk6WvvvxAb4gSRM+OlljPm0Fnj5A
                      ze68Ds1HvqAmfL6b0hy+7j5DPhJxPz4mEpK+GkVjPhAXDD4QuYG8wA6qPfEamz4cFII9EIIBvrQi
                      mL7ggog9oFk8vo5cDr6b4Ve+Pr9vPrAWDr7GXhY+IAw1PUCL7DyXgJ4+rOiDvcbnN74wTnW+u4yc
                      PpSQob607IO+IG1jvLQb+z3b8XW+tJ+JPRzNvD0oTlA9hn0kPpEfnD67UCe+QIOovEA4nr2gY7e9
                      kNuCvlvYkT5DdC++M5QcvlirAb15/Kc+Buc/vlz5ir3AVI08THHcPaRD+D34M4q+fS6nPjAehjx+
                      FWw+09whvvnwoj6+mQg+aDsSvXVXiD4/9KW+O6CMvsStlb2WPrq9AEQ1u2hUBz3253e+eP8UPr4r
                      bT6aXRA+KpuJvnhTLj2Lm1S+YKITvfbKRj6R4qQ+oDMjPrC3E74r1JI+cIMGPiBANT26Lwk+SiYx
                      PgD2J75cpJM9ghYEPmbz8L02kP291BOGvitFcr5+FZu+QI2MvJg8RD2M6fO9AKI/Ox5Le76MOeM9
                      JxKPPliRIb2+bJi+MxJbvt81lb6W6OS9ABRLvO5HJD5gOT+94HA0PSj4HD3m24G+vGzqPWvDHL6g
                      vwk8wM3ivCxNpD26JCw+3qx7PkDxrry4Yn29wwGOvlhRIT5bkYg+i0OSPlwAy70gJRU94H9dvdyR
                      kD2Y6AC9hVugPrbnGz7HOqE+lmRYvnCKYr42GWs+w5GbvrKwDj6LinK+wrlEPr4NXr7q8Ws+4kOl
                      vtRP9z3ijGE+LgAPvi9Xgz6l1Zc+M3eBvs57UT5g6iE8MyVNvrC8VL5zVhm+wAm9OxM8mL6e4D++
                      u4luvjB3pryrEya+nE+LvoS6gL0akkA+PeONPpldnT49E44+UTihPm1FpD4QFvG80F0ovqSdiL4Y
                      KT++oceSPhCe3j1j9aM+BpxdvpTK7T0ggtc90iafvn4/Pb6EKbk9GGMtvvCIiby+2Z2+tM+DvVzV
                      vT0jL5M+UfOGPpswS75Y1my9QpBgPhBg3D0g+aM9kGPcvMD90zuQ8Ag+gLENPVbwTL7IZmk9TtF0
                      Pnj5br6q1HE+7qF1PlBkrLzYAHi9oKMsPM7fO77rlRS+/G6OPdjABz1SQGg+OrN6PqbK9r17V6a+
                      0o9ePrCnkT1MMei9KqpNPgCU5rqhAJE+hlX7vcBUUz1Vnak+wIDFPOjnLj0b3Ue+oIlvPT6Kcb6Z
                      VIM++0+avtDQ9L0gkJm+6YCfPtjFKT7AsGW9CMY7vs74hL7PMaO+qmtcPkTf+j37A4a+G1OnvmZR
                      Az4A7i66D7KQPp67Dr7W7hm+1PDAPQiNdr5cxaK9LI+6vYTz9T1yvGE+xpBavtN5fL4QIES+jmqD
                      vsPFEb6idmI+S/FnvtZpKT6u202+3E2/vUe4i75mKFc+6KRkvXYmSL7Eq6G+k8tAvoBw47wifYO+
                      WCIRPmkPmT42mDy+F0KpvqYiRb6KtwI+dP6EvooPOD6AOJ69NMKivbh6Ob4gVvi9gO2PPPCZiTx7
                      HnW+O9uJvoY+l76ylpy+E/gEvpoXaj6sDeo9rDnmPXbRUb6ACG++6GglPmp/ET4ATg08oKr0PdQL
                      gr17LqM+7HSXvYBbHj5tLIE+mENCvfQ2jL7g9sI9gt9pPsb+rr1uLnI+aNIJPRaFvL2Ya4W+QCPg
                      PWDAY71AdbA8EBXbPcOXS76K5Gc+zkkSPihIO73Ao3o9AJmSPADljrsM3ra9qgUCPsB2+TuApQw7
                      lqc9PtyG6z2mM3m+vvFjPstjPr7wTZY9pl1Nvq6lAD60rKU9ZJ/+PbOLir6+llu+moJ1PsAahTwy
                      RR0+4zGNvtTphj0MXK+9Hj0ZPsztgr5zMpw+TLe6vf5EYj4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA2MDkxMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MTA2MDkxMnEBYS5kAAAAAAAAANMzIb7gVn29Fmy8vQQe8z2Tlwi+FtHDvehdHT0WDyi+
                      Io8mPpo4MD7fep6+2r9VPqhcAz5UvO890vFNPmNFlL6OW42+AAacOxhOSL5DghC++BNFvqPCSb7x
                      xYc+AAVdvsACBj77G1a+3sZavkKCUT7c3a09DOnyvfpfm75kQqk94MJivuCuJj0+vDo+rFXEvRSH
                      wT2YwXC9oAXSPTZTHz5g7ry9arhFPh0Unj4Ekai94NLLPczH0D3A9jk91sFIvtY9az4YynK+WE2j
                      vlxlo71gW0u+rFXhvZk4pz6I9Ri96d2fPkCS2Tvw8pm9oNQQPbYcSj5Z5pI+3v6JvhZSg76AWm28
                      Kw+fvmN6O77a4F8+YLkcPMYtWD6IQnO9aC1YvfDbu7zIAg6+JldFvgENjj7KDig+rVqfPnANLr4W
                      xHE+0LcBPhCzhjwJyo8+cNIQvqBCN72ec2Y+u79dvsC//bzcvIE93qkBvgyj8b2cPee94P4DPsb9
                      Db68Nro9UjhFPvoUZz5Gdba9rl6LvmYkBj4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA2MDExMnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzEwNjAxMTJxAWEuECcAAAAAAAAEV/c86O+yPAcVtz2Babw9k2OYvQCPm7wMbrG8HBgJ
                      vXdeUL3An728MUiuPRGbsT0QxRE87xvJvXaAXD1i/wI9VntUPX5Wqr3aPTk9FCCIvbB0iL2gBx27
                      pEDrPH04sD104u28hbaZPfGzlD29Yi+9as8APcfmgD3WOEg9VYDIPVSlozyqJG29UGUpPADvKb3s
                      W4I8VoecvbePS70AzOW7OADMvTo6hb1zDTa9c2oavfCQp73P08a98hpbPZKlgr2ga/G7C3GSvSYk
                      m71gH6I7eHiEvQpthb0DJcE9MsFDPdf6hj0nomK957DJPWjKgLx6MTi9aUiKPSZMXz1ZnJQ9oRi8
                      PYzfrLwdRaU9IqQBPVUhnr36h2m9cTqmPWJOJj3+jnc99+FOvenXtD0eWnM9tqk4PY/enD1WGIm9
                      uyW/PTC4YzxMMbY8Lt1+PXWjlL2qMw49S+exvUwT2rxCDS09AMqROWQJhr1hFo09jILRPDqgbT24
                      n448ZMPkPN3CpT3X10e9gp5xPRDWSb2gMem7eImoPEnEmz1jqW69oBifvUXbqT0rS7i9a2SxPfvt
                      q71goO07wF6LvCMDOr2gB867ZGvpPFTSqbyjeW29l3knvQEzhz03An69fgiLvSvZsz2wIna948GX
                      PQzmuzyACpE8z4/IvQvVjj2J8JA9KLQZvBNPfr1KLou92gB9PdJvGD1RZJc9qL6OvJs1xz2KfKi9
                      6463vVOuP70+lgU9oL/PO0Dt8brv48S9KFU5PIBMlLtakYy9QBUTPNYObT2e4gc9BzFkvWpsUr0A
                      2Am4QARpuzceWL1e8oi9aWGoPadKM72hcrA9ocyXPTo2uL3xT7Y9jeF/vXbQYj1+BA09C2i+vQDi
                      6rrQram9s16TvcK+Ej3ukGE9WHbEvY0DK72y56i9u6G2vVhU6ryuGio9AKCzOddXTb0WuKS92/CY
                      PaWvoD1jOzO9YYrIPTWikz1cpdw8QFAlPGeoyj2iFXc9QN3AOmCkxL0mbSU9+NywvZoGUb1AYXU8
                      I2ObPeKBVT3KBzG9wNxuO/KTVj29m8M9sH1hPAA5WL0Q5Hy9/Vqhvadshz06QKO9ICWmu+iHIjy4
                      WeO8QwnKPTInvL3gg+A7QkcTPQBXcTrDTZe9d9mPPfODmD2aDGI9LxiqPZnxmz3AOKo6cgMiPTKC
                      vr0AYGw3WmOpvYB8xzpJ34Q9wnk/PeBuIb07G6+9x/xNvYNPLr1PhMo9awSXPUDpHTtvXsq9+uUU
                      PdEGoj3iipu9lhU7PS6QFj2B+ck9UGoLvRG7lz0UivI8W83FvaJYcD0A+OI6xs9KPYd9sL3sYoi9
                      0H8avUMyGr3tbDC9IMvRu4AECr3oGJA8sFDyu9XQyj00pI+82g1qvWFugz2AxR08kpk1PfcmNr0l
                      3cC9DbEsvXyb1TzQP108QBJIvED/vLowekW9EYC/PWJzCD1hmpc9AuqRvcDuczvE/Pg8Aq2WvX+l
                      kT3QeYW95N/cPMOMYr2It7c8rFftPM/dkT3X9YE9EwWlPTUHnb24I4G8gENBvKivbjzomwq8wHFR
                      u2zBvTw+AiA9gFckvUDASzxM+N28ALNtu/ALBL122qa9jcBavSipQDyjlFa9D3eCPbKIVT1gKNy8
                      QA5nvaA6iTyqjjm9Fzxpvdxl7DxD+ss96GG7vC/vwT0CO0k9PTiPPULxUz2Nrby9zT7LvZBSYjxA
                      O1c7OfWbPZv4sz1GMRs9cFtuvEJ1rr3qSCI9t81cvdcpOr3zc8y9mM+vvO3RuD0qlwc9ddKrPf5W
                      Dz1sXpq8bnumvccOgz0AMuM7AJ2hvXqPMr3gEbU7cZSSPeqbfr0zY5A9YhYYPaI+Gj0VmMw98rZf
                      PWw10DzS5Wo9ClwZPdB4Obx9Imi9eqZnvbPMLL3zB2O9VBiHvJAbwb3y2Yy9gK9Rvd3yqT2dbpw9
                      0GOYvQh2kDwCznw9UDnEu7z1gb3YehI8mNpkvHRSmTyK5yS96EYvvJ4GKj3KoTw9+VzBPeoxPL1d
                      Rju98mdhPZ1XpT2JUMw9JYLGPaijr7ywonW8HWiGvVGRuT0y2b69ciGgvSIrRD2pyrU9drhYPT5M
                      TT0SYxw98uQBPVFEiD02cS493EPZPNgznjxFJq+9IJDKu6O9wD0YKco8FBKOvG6fSD3XVME9bEON
                      vACQFzs6D1c99fe/PQBvXjoc+ug8GnFIPQANcrzaJrG9fROCvWiUtLzmtHA9AOAoOaWFqD24afC8
                      UsIjPTdKvr2AZDQ86I4bvKCVlLsIWsG9tNHLvBQalzwXO1G9FwK7vcL9WT0SFHY9aJQcvAiXjrwY
                      lbW9WBhgPJLAwr1e3qK92BghPD1AoL0I2Zk84R6wPXoLar2p7cA98tAZPWM6M73gOTG9aPnjvGCv
                      Kr0oCyI8wGiHOkCxkzwgeJ87uBG5vRA4xr2YjbI8q7KyvbZbkr0HanS9wnYzPXCbPrxA26K6QvZ0
                      PcASmL1TLsW9UPTXOz2uyL2VLoq9TdBkvSJwbD2ax5y91yjDPUyYnzyeSIm9nWmTPX7Fmb0eOH89
                      zj1OPXAhqr2d+ps9AM90uwd4JL1m1pG9E2WuPRFErT3btY29h6i4vaATKbvw4nK8GO1yvJUktj1Q
                      yjQ8d55lvWkTiz34UbQ8AqhjPQJKST19UG29AJtBvSIBHD0lxp290GMzveCns72grvW7UdiOPcnV
                      yj0D9x69Dp9tPUBDhrqEf+Y85npBPQ1fhj1nOnq9S2amPQs8lL3RxKg9NIPvPFaTSj25BIE9EnAx
                      PcJyhb3FMLg9uAi6vS/owT32vjU9aRO8PTevM711n5U9NDCGvLUfj72yX3E9lm6fvbJPAj1YR4K9
                      CEWPPAAQw7pQj/K7mmt2PXr8wr1MzbC8EEp9vfgQxL0Ik8E8fLD3PMP4jz13cY89H+3JPVthtr1Q
                      U3Y8KPoGvEApObxYuEY8tttRPSxM/bwQeDy8qRHLPT31U71M8ck8IGbwO4xc4TwwIB68Yo08PR7l
                      fz0YW3g8mlR3vTNNvD2Xeli90Bvuu0wRkzxp+b09/jI1PYpXtL3LTYM9+kNrPa0BRr2kYwW9QL2q
                      vH92vr2CNJq9icqZPV0Wrj28lBi9Q8civQHAkD3BEpc9lmR2PUHXmD0Dt4M9TBrkvDAidDzypV09
                      AL8qO9tdwz0MfaC8m+3GvZnxwD3yyyY9r5jHvcAHY7sMD5C8vlyPvfTr7jwv2pQ9vEzvPAAQFDk3
                      z0e9fumfvZKufz2eJls9fQ6HvQEcyj39Wh69SgbCvUntkz3xc7Q9zn1JPVGrrj3Cr0A9SnFbvYdo
                      V72hW6I9qBMavKOSsD3qy0s9aVKdPcjo6rzQjj29L3SAPYZJfT2A/Vu9g4OOvY30f73n/mK9F8aR
                      PUcagD1mb5e981qjPfA2Hr3NyYm9aaq0PSqsHz3B2JE9yainPWzg5bxs2aW8SopivUc5Ir3zO3G9
                      lqkQvTFPgD2gg8K8GmeDvcyvBL1jxMo9wBoBO4z/37zgAqm8MIF5PCgwQjzwuVC8wioXPWpsor1O
                      1R09U1iyPfpTkr3sDfK8Nl0PvZE0sT1G5j09+VuLPdMvO72Dv1G9/FnUPKnFzD3IIqc8x3a+PVhM
                      abwNGMc96vCRval3lz0VeYm9QFHzuhNyNr0df2u9iPmFvCLJQj1pIo899z2xveBmzbufS7e9m76N
                      vWBvgbyUWew80HCuvRSoi7xwnmm9qiwAPVXFk70Y7Ne8hoxYPdIvIj2Dm6K95WGlPShny7ygV8U8
                      3QqoPQddoz2gK1+77iMSPQDGRbm5QLY9UQjJPd73nr0StCw9QLBJO9i3jDyK5Rq98CEUvYprWL3u
                      fhQ9b2HHvWzmsTxQloQ7mNM/vIC0vzz7Zp69t4c/veCD1bvMn4q90E8ovbOpPr07HYc9DFT5vPDE
                      LbwmYQA9bZ2ivbCkDDxQu0W9XgAWPb9KqT2MR5M8enKivf//gj2My+O810wjve6YBT2wa1289Sa9
                      PUYWir1qvMa9B+1evQhBpzzDpYQ98pCCvRjrFjxYNA+8jAibPKDZ6Dswg3+8mO5LvFxjFL0nO7u9
                      d2m4PdTZh72qRCk9GrOCvfZdg72w3os7tZqFPYDrnTyAnXE8wz/BPUCQK7ypVMc9w8+/venSqj3Y
                      Dmo8DGGHvF01r72hKb89oNkdOxLnUT11lrE9rRKGPbA6CL33bp49hmM8PWi7kzy2PRw9mCW0vACt
                      Mzynism9+IyJvQDyZr2c9Qa9O0mZvQAUU7xwdBW8zXc1vbDAOL3WfFE9NFsJvcCW4roNpMU9GO6O
                      PFjPejxQ8W+83JkJvTx/3jyyXxg9KA7XvOjwZDxigHo9y7WVvVUMuL1Ubty8QE8hPJVNlL1s+ha9
                      1UWIvdh7gr24cI+9phwFPYBX07xzC229NK/rPEWOsL1oIya8zY1HvSiS8rxZDqI9kLMJvCLwPT0W
                      zks9KDeAPHraZ70AN868nbmqPSCYvjzAhrs8OJSHPOBbt7zzTJW9pveRvTomNz3ycsW9uhFxvfQw
                      nTy2JhS92zeiPUAoY7zhxqg9/u9vPYVzqj3AOms8seaZPbqvXz3NX4U9zUGrvYbvkb2g3sw7LP2D
                      PB3gwL3KRYy9wPEOPEO4mL2AR1K9DD3XvMLNKD2SYMG9Bf/HPbCzjjsrXam9szeHPaPjUb0JUMk9
                      j32FPWycnTw9J4y99z8svUIhLD1AEoI8YvdHPaeatL19Vny9Ix6UPahWFbzvXIE99TqevTEtwD2Y
                      +JK9ylfCvaC6d7sB4Jk9Bv2dvRCZvb3aJGW9CqJUPWrWET1+L3A94EqtvcxVgr0tP4A9wMz+vE0g
                      G70npL+9QKZZu360lL26dle9CZ6cPQCw8jc0x4y93+ChPcy2+jwz7129wMZVuxjMkb0gDBC9sHBK
                      vcGTmT2ACdO7dBudvPFclz26tVo9YKTDvK4RGz0Ydam9p3KtPUxpzrzAlXe80mc/PYvtuD3vJcw9
                      q7WWPWpFq73Qc5Q7gL/DvCqoDb3myjA9QwayPSoXVj3IzLQ8YAdOvXyN8Dzy2gs9gFYKvdQ8gTxt
                      +Jy9f2CbPVtUtz1BAKM91KCMPIjqgzz7Isc9iiwOPehlhTxd7ZQ9AKd0OzAH6Tual169IH60O6Uv
                      sb3OA1M98PWLvTEZnT0AjC26WsOPvRgjwb0TXYQ9MmxwPd+Twz2/soA938CmPXeATb3aDy49tEeL
                      PCXUsb1H68E9YW6XPbBufjwKlqu9cNk+vPa4VT2X0oI9aARPvGfqjT2g6d07YnsGPYzlh70HVYw9
                      /FjjPMRBiL24LoG80ixKPVgnjbzySxw97PbvvJ4FbT16enU91DOUPNJLgL3skBm9Z0yIPXIxmb0C
                      gpu9BoJpPe7gbz2iNI29UDuxu7JiMT1Clg49XuAOPWBguDwRXLk96p0iPbhihDyyW0s9ji6Mvdo3
                      K73bvZe93XOhPcCVurxKHMa9d2zDvWnskz1i4hw97CuDvWJZqL3LlYg9AM0bOif8kz2COnE92u1b
                      vfbOMz3DS5I9gGIrurBTzL15bYE94jcrPRE/rz1MoqI8RTaEPZe0tT3MC6e8/d1ovU33Wb1nMIU9
                      mkhHvaBWO7tgALc7MH5JvNDwfrx6nTU90PNZvOaLEj2lars9zB2PvIAvWL1oqAS8xJTTPLlDpz2e
                      xgs9ACFwPDm7tz2gaAq74HkrvertEz3QbyK9Q9rKPeLpAj0QSwG8CmhHPXCBLbzUIO08AAJNO8AW
                      JTuKRiE9gh8VPdB/lrsYdbi8J4hgvbHhiD0xcKI9cg8NPfpLDT2zSGC9LcuUvWehV71Bjsg9uWeN
                      PeVMrr0K2GA9I0iDPY5jXz1MCfc88vM7PZSeF73UMac8/cCdPTM8bb2AFlM62FB/vMDfGbs8quI8
                      +ihFPW6LSz3UPxa9cUzDPXOSmj2j+KA9+HqDPE5jaT0+vWY9Ap+RvUaxh71q9ww972TKPXoYeT2A
                      zvK74GnfvAHGpj2Apb29HX2UvTDvLbwSyJG9eqAwvWtswr2ln7U9ex7GvYFQyT2SQlI9EFWfvWBA
                      KrsJdaQ9qbq8PSqfjb3auUO9U45+vTemvj12fAA97NnBvC0erz01DoA9sy1YvcvYwz0VK7C9ypVR
                      PUn/oz212J29GvxYvX6KeD0yizY91PfNvCq4dT2gjiW7jC22vF53BT2YC4+84PnSO57CSj0ASD68
                      MszLvcoBd70GoB49sGuRu4Pvb72M0vy8YxyOvciczrxA2Ta8KkqjvQJvLj1tyrk9NqxdPcBRdbsA
                      CcE72GYCPHWwnb1ctf48gPQ/vSe0qT2M7v882igZPdg2krztvsY94OaBvUI+Oj0AaFY6hulXPcNF
                      fr2tZ5Q9BqwqPfsviz3r+7I9puOnvX4FdD3aaUk9cs4vPXBIHr2CdKa9GC2avFb1Rz0KDCQ95866
                      Pc+qsT1JHbM90k+tvTbgob3f+q+9GnogvQBBkLt+fjI9RFbgPHVbyb0EhPE8WjySvVuelb349py8
                      YOd6uxLoOj1bbsE9ekQcPYDJVr0dASW9YxVFvSNbkD2AZjW6KRW7PUo7c711I5O9gxg8vfhhorz6
                      N3E9HWxEvaEyjj11cqO9laGxPQAobDpiWT09aNYuvBFKgD2wMgS8khXCvTNoyT3npUC9TV6QvdOa
                      lr1bzJO9IHqXPLG0sT0n0689PeyTvYCg27qDypY9jUNjvZyB4jxYgfi8NhMZPTT517zo4/68lbKF
                      PYyAmzzQ3E88/QGIPRHGtT3wkiq8oDHPu4Aqb7zYf6q98JRxvEHxvz0AkbY8AnMNPU6PNz2Q3RA8
                      QCkcvFBtlLsA1gC5lby5PRSj7zx/l8y9X4idPXDpVL0IPuy8LqscPV3Ywr2ArAI8YBjkvIBG9Tpp
                      vb09t4BNvRI0BD2aKnq9axLDPRi1abyoxgm8GM0vvGY5CD1QqTK9IkMiPULsOD0kIxG9tC63vKpV
                      Nz35ZrY9Fmk3PS6CjL0H9La9I8t8vQW6yT2Yojy8G5WXPbi8ibwA7s+8QHLEvAf4mT0AOQc8IGre
                      u/2/uj0W3XU9rOS1PN27sD2KtwI9+rIovfONtL0ANki7AjFZPbYUPT0lU6i9wIVuvZf/fb1nN0q9
                      HoahveceWb04Kak8YCnJPC18oL20FOG8aK5EvHJROz3tXYO9mKVuvIZ4Vz27DKm9ADvsu2WsrT0e
                      LlA9FMLfvP5Gk71QaSu9w5K+PYKpTT2DHLw9ILWPPFCcsr2YjCg82oQjvR/zjT2bU4E9XPLhPAAd
                      DTwdUCu9gktPPcApJrtgxR67PzqAPRyH0jw4X5e9bHKGvTCJoLu9F6w9AFZAO5BORLxAKSa9e7HA
                      PejQcjxZLsU9fMfQPEwfsjzKETQ9CjoyvR1Rhb0XiII9EnptPahehjzI5oQ88kpOPbg7lTwhoJ89
                      c4e0vSAXgb3AlVg8CGOxvSDrkLyiIX89AISXPIZmfT1CnD09GoxBvWAMWDtoLXi86IQuPL3pK73b
                      C609psY2PbgMvr0gbpo74EepvEMzdL0Mc5i8mOEUPHC6tL0j0Ve9zJTzPOiWk70yQjE9uzO/vS/K
                      sL2hOLE9475qvapXYb3QKHQ8I1qXPb0NwL215au9BGAOvYCFxL2V86S9G8PLvZLnIj0AzjU8toA/
                      PVNLUb2UROk8uuR3vdPIRr1Bm5c90L4lvVJOsL2AUuk7ANn6uzk+zD2AC5g8YbyoPVj8b7xdJKI9
                      7VS7PauKiT1owN+84FCXPMFzvz1gwp68oORFveVYwj0JKas9926+PeMhuj2vDY89+DeXPOAE9jtE
                      deU8WaGGPZM7pT1gmxo7/8avvbQwmDyDPB+9yJi0PO6zVD2IZYe8b5KwvQTV7Tw8Ygq93WBRvbQr
                      /zwAYDa77u0GPbGavj0YTjw8OYnFPVuSmL0N9Gu9MMDHO2ZxLz2wZU88QgoePZI9bD3ijEY9Qp9v
                      PWBV/rsJ0pU9UMbCvVbWUz0AiCU8xInVPNVvnL2sSKM8MHpxvRYtJT2sT7e8gCvdOkr4Dz2AW7+7
                      1PjuPOEvpT2NanC9AUySPcYco73TdqC909+4PWAQrTxl37i9CjggvZPRw706Phs98J5cvfDqi71g
                      uuG7oL6IPEoscz0FpZQ9wJIvu0Tigr237kW9EilOPb4rBz0QlIa90Dg6vTAjfL0oFWQ855hQvUF2
                      rT3dvWm9EMJlPGZKcz3U2tk8NJPzPOYVSj00Efi8ICwmvdSToTxLwbs9R+E2vRZYQT3AmJs8ysIe
                      PbA+3LsKrQ49atQtvUwKuDwpB6E9CNihvIWcu70YCl48bd52vb//x71Rmrc9CO3gvKkGqD3sae08
                      cB54vOzL77wobDu8YNxGuxA3x70jEIA9ysaTvfqVUL16Sms9VmCAvX1Lgj3Gh3s9lMPrPApVvL2k
                      D/g8LGSlvADZTLuq0w89iHOivb7SET1tgqm9ELvKvV1osT0EJdc8MLtyvEP1ZL3idKe9MJ9pvfYE
                      ST3ZPZM9BgJ2PebRPz3iXgI9AECHu3RFuTzr6bU9d62oPS6Oh709OTC91GbAvIB46LuQOli8nueH
                      vX33ub2jVTy9rICovNBBiL2Yd7I8C2OdvYClGr2CJZO9ettiPejMO7zgHvq85hg9PVK9Wj3ubEY9
                      lGfYPGim7LydIFy99xiqPbVTq72UgYW8RN7wPABt8bvStqC9GCajvd0ioz2mqQC9nTdqvRiatb2K
                      v5O9KDN1PM3Mi70AJta8s9mpPSdakj3wCgW8Q8OYPSzIBL2y9Ju9zEKzvM17rj28Voa96CCVvLP/
                      XL12BXw9AP7ZO02peL2aeRc9QbCZPXDwqL1ASmU7x8pmvbAVITyQLRe9olgDPbCXubtB3a89kS+r
                      PQCYTrwArGC9xh2FvRtAqT3yy149Ck2FvfrKmb30lNS8mhGbvQJscT1AryW9UhF3PQcaVL0KkTa9
                      4uokPfMEtL2Quh28dL6TvMLxYD1DtMq9i/i5vbB8D73zAIE9WxGQvZFWiD2C3XY9ybCbPRsukT0J
                      VLI9GfqoPSDrhjsq5ge9U3arPXxh6TyuBmU9ekzGvUgwmr3z9Vm9AK6YvTTMkrxoJlA8GkcZPWBI
                      K7sfl8E9t7WGPZIgpb2+iwM9SL/CvABsPbuEPIS93yOjPd7Tk72qrSk9gKisvECHfL1Pt8Y9YPbE
                      O01dqb2zqIk9IDpcvZKZAj02SiQ9jZa5vVOWkz2g6ps8XQKVPTA7ob3Aeki9BIITvfKRHz0BFrY9
                      tkqFvVzZ9TzTjzW9FB6MPDlkjz1DW6u9DSaXPXahkr1AFwu8GR+TPaAzRb2QSEa9QtKLvaDKjDwZ
                      nsw9SHzpvFD1Grygv/q8+EGYPBCCEbxtVYq9VkQrPdB+GTxIQIy8tLzePEx8m7yqqYq9FGOvPGDO
                      tjuADbi69CL6vFZqHD0RksU9AE2IPEqhDT14AYk8c46WPeDkuTvo5ra8IrRfPajVczy9TcE9iya4
                      vX19Rr2FNo09v3uyvWlFkT14NZu9clOnvVJHZT2Ll7U9qlnKvYh1ibyKwGo9h0AqvQBkgzrYmSO8
                      lsOAvbocOL3Ay0o8EOx/vKCD6juyW7u9YavEPWI8gL1gn7q72ldvPQAJSb1+j4K9NJDfPE+cwL25
                      qsU9nUkjvbCBgr0g2PA7yAWTvbSq8TyLapc9/9apPX7ZQT2oojq8uDqqvJqxFz3ymTs9Ucy2PYSR
                      5TwlUJ09WMwPvCgapTyKssa9R+eNPYIhEj2N6i29oJOzu5k7mj3X53e9U3KRPSluwz3QpOg7FiKe
                      vWjuBLz+X0g9mO/DvZSnljzqLTs9YD5VOxQA+LyTUbE9AEl2O2iMlbwyORI9ADiUOpcOsb2gZHO9
                      03mPvQigkL1j2pc9VJ0Mvaoovb0PWaE9PyOWPXX9gT1Cp1E96PkRvFXNrb1aJwq9WntYveY5FT3l
                      Acy9J0y6vVslkr2wUP67NEqlvFBL0Duthac9IeCAPUSo9zzrYJg96ZilPRLNYT012cC9zP4AvdCs
                      Ob3z6Bu9lvWdvVCY7Lv1Q7m90HBpvNxPgL3TjGe9DeCqPYNWy70qZVU9FNKrPO27Yr1hCJ09MT+Z
                      PcpjKD3A/Gu9sFY0vZrSEb0wDO27+PKgvAY8FL2D12i9lbG6PfByCTzUWp885L3jPDYTHT1YFH28
                      ulufvWfEoj3gB/S7rE+7PIzkkzzyD4C9OpeFvSKACz2weOO7xBH+PKzFojyshey87GeHvC3WKb1A
                      UeQ6AJcVPM2ver0Cn4G9c8ydvXhjnbwGQxo9pqcwPUrRIz0Hpry9Jz0hvQ44kL0xlZo9Nbe3PRYO
                      j729mLU9do5kPe0XVL1RZ7M94vxcPcEkxj2Cdry9J/awPYopjr2q3gY9PV12vXeCtb10u6K80Au/
                      u0CawjzYKZS9ZrhkPcJHPz3HBEa9oPnVvBtVpr1sZOO8sDjJvYMTkj39BFi9DSFEvRHquD3pPMs9
                      kgFZPYClizuNDci9UPY1vQfduj2nfVW9MLyfOwQvgb3WQxQ9d5Njvc0wpL3akAe9m0KfvcUbxz3H
                      jLU9TXpZvcHfxz1/s549XUTHvSJREj2w+YG7YfWKPYAbq71gOL29c3/KPexviL3/VZI9BOnRPOJY
                      o73QvDq84rlmPTD3qrv4R9u80K7pu1dplj0I+uG8svLAvUTW9DxIafC8CLm8PMAJw7yAzZQ67A6P
                      vBr+cr1QJxC9I38hvX1jTb1BbZE9ErlQPVptcD2484O8MIO2OwqEHz2YMsK9ZzhMvVAZLr2mKm49
                      PTC+PRUyuj01k4695sRoPYCtUL0opne8xeWAvQYSMz04/KM8smARPaMjk70IPow80gNfPew+wTyJ
                      sIE9oJ8IvTV0gL3u/I+9gAw1PJBOVr1AFFs8UhhgPfpxMz0gmT29+L+gvEW4mL2utHQ9WmAZPVBd
                      gr267cW9WHhLvKvsuT3rQb69bseRvTLHaT2KgDg9i/mQvbK+LT2XUjO9oEMxu9AAfTwJ6ok9UPP8
                      O5ORcL3NbFW9QCJBPJ0Gr72gyeu7VfSfvdMfor0sQIe9YnXMvTMgfb3jnI89jR9qvc46Wj0iry49
                      MYPIPdHkjj0Ay887c+hBvZ1mhT0GUBe9KvhPPTytD70ZUqg9zYxZvRLwdT2w6fc7QcqjPQomOL1K
                      Vbm9tIPhvMfWpj3ATqm9Qg4WPbQK17x1/o29oGVdu13TrT2s6N28conMvZPmhT2SpgQ9kvl4PQ5V
                      Rz1Ju4w98hUYPdomsb2I0LS86K/ovPQCuzyikic9zOncPA0dmb2Dq8u9mIdxvNcsqz2LC5q9gFBR
                      PAAemb2BiJI9mLeKvOCdT73oC4G8EWK9PZqikr2QrXW9YlxhPagyvLzLc5s92j15PSPrnD0Lm469
                      0/KuvQCw4Dqn76E9QvhoPRUDwz1ub3A9oMrLO3X8rz2tIUG9Yp4QPQ9OoD3YyxE8PSVYvVZ+ez06
                      FV29GGfAPIPWNb1Uk/U8RksBPTSs3Tz4FuC8Y6x9vWQp0Twy/K+9OsG8vd+XyL1q0wo9HgwWPbtV
                      sL2VILa9GMKLvRZiEj0pxLY9XSoavZu5vb0KfBo9Xj18PcnHlT3KrTo9Qie4vd3Sq70JWJg98Mwf
                      PCy7ory7LpG9uqwgvWXeqD1UCoE8GPOovWg5f7xbS6m9wthRPXAgU7ywGMK7uvslvcCuNrxLNcI9
                      gAi3uqg0cTyg32q91BydvLNPPr1yRb295MWGvUHCxj02LZe9tF2+PLZrIj3ClBs9SBfWvDT917wD
                      71+9bU62vQDJgLy5caE9dDzdvMD9AjxOkiY95o2gveJCbz0Acm+7bF2cPGV0jr30gYe89J3rPCDv
                      wDwCSgE96OAsPG3ohj3oW4I8FmJrPZRE5TwwMhy90lx5PY3ZlL2OzFM9mLuKvDomRD2w2Be8gJpZ
                      vTpKeD1YmrM8zr1yPaKuPz1tVK49cIs5PJC6h73Wapa9k3w6vZORQ70Egwu9wFukvZGHgD3+Yi09
                      KvCJvUAfELstTz+91dSmPXSv7jyoMJW8mn5WvXAMVL0gEQG9tup2PWaoBb1+q349r6mpPcAeqjyn
                      Ycw9v5W4vW5dIj23n4o9veikPaGQxT0A+8y7fr0CPcrLYz2o+qi9AHNXvC5vXz2d6Jq9vnalvTp0
                      sL0AKMM6VhUTPQJkNT2TkaM9Fxl8vS8JqD3AtjG8qL8gPOFbtz1rMqy9ENAxvaVCn73kuw69Yvor
                      PexoqTwAjBU66P35vB65bz0fFIg9/q6BvSi8HLzAVKK9gHkyPFsCzD2Eivo8kCS9vc30nr0AwE+8
                      AA+Evcklpj2wDRE8PLIHveCLwr1o3iU8rm9kPaCNxbu2sRk9YEEXvXoawr3GuyA9TO/ZvHvmjD3Z
                      L4A999mGPcB/bTu+iz49TkhiPeBB0LwYKzm8+rmvvUCgZTtAozo7INzZvGHQxj0wY+67Z5MhvZ4+
                      pL0DdL29JNoUvXTK9byxwos9/aZavcBTc7vbTLK9PNTVPApPs70A+1k6AGx/upFdwD3AgLc61KoK
                      vVXpt73mUaO94I9cvW5qcD09g3S9GyOvvU4wLz0O0kI9ZvIIva3erb37qZo9t1WsPSrfBr3A/5U8
                      lI27PIApkzot7SK9bsybvZw82zzNiZS9mqwaPbD93DvmEQU9ON3LPAC1gzkgGsC8x/ZOvZ1wvr3A
                      wv46LTGbvaDhwrtASZk87SHIvSzIxzzJeKQ9/u9LPTKnJj2oN928vRqvPUBFZjvLwa+990tcvbB1
                      7bvFOJI9x5rLPSgfbLzGhGU9xjVwPc4jHj0CaWc9WqEdPYB7Db2AloG72OUvPGemzL0SV7S9Yogo
                      PQCKpbtgZpK82RnKPeIVDz34heW8vUKLPZVEqz0ncZk9uZaxPTCRjDshroU98jQaPar0tL3UWse8
                      AlOnvS+kwz2rlbY9j9O9PTUtl72ALKk8cEwovayj+bxJ2bo9GhV5PUbvYD0HxSe9skt9PYC2kzwU
                      ZOW8emxFPeCOpTtSaQ89z+2zPZhKZLx/Pbg9ItduPaRTAL3ahsm9AEksvX5wZD0QI1m94wgvvQlZ
                      nz2WYAA9OG7qvGDzOL2SQZm9ApV5PVV3wj2gKw6729qwPb0wRL2dkbA9ZQy/vYb6Kj2gf247A+gs
                      vcJtQD3jvWW9w5GnPTCTKrwCPWQ9I8fIPQDOybydN729StNCPUaqor1wgFk8OO+9vVnQwT1g5zm7
                      ebW9PbKqID1IzJM8WaeqPQBZTDoAe7+5hxYjvVPSlT0Dso29woJdPbQ1pbywRsA739aFPUK/ZT2m
                      wYa9yqlVvWI/eT0HrLe9AoV+PRL/l722LlE92gNPPRSMnrzi9XI9FW2CvbTK2LyAV3e9gwxcvbDw
                      rzs/ibE9vmMBPdDLhb0yHCA9UxNNvajYsr0Xcki9XjFSPbauDb0uBAE9cA+svYKMUz2eSzQ9Pg6Z
                      vYUzmj3/JLc9syGdvQe8cL2LEL49YrIXPX4IDT3dsFq9GP+WvdONKr3NZjq9YAqXvBnwgz2ATnu6
                      6eqIPdMJiz0YN3U8kVPGPfDBf73LQsk9kKMuPGO/Or3ASGS74jujvTg8tb2AqnO8tLemvJjUT7yD
                      0F+9bOrnPDLPgb3NQG+9DPigvGJOur2r96M9UHX9u7eXab1iMiY9Po6kvV3sLL11zpu9LTZtvddH
                      Vr3sF6G8WDyrvMrHCr21h5e9yjiOvZAKtL0zbI69Y27DvbWYij1CtFQ96i8TPZXkxr1Sgp692Mtu
                      PJ3hgT0+egw9UFmJuwJUhr22eQC9sudMPXjVvbwwHh29usBnvQZQoL2omDq8CplFvVq0FD028XI9
                      tWe0PZWEgL2IA448PVeOvYAF47pqSkQ9sOmHu72Fq71EUts8GuVvPTi7m73MHtu8aOMBPGxLhDy4
                      jpi85mE2PWR/7TxnuJw98zi7vbDGEDym/kU9P3rJPUuYp71QPre9isaAvSqyr713Mbk9ckcKPSC2
                      tL3sv8m8GjeLvUnHvD1IYaK8OuOSvYaGKD2D4Y69ANd2OrpveT2oGCc8+AKlvWi/5rxtV7s9Rsan
                      vbP6uj1Kpyw9o5VZvasPjD3GySg9gGEPuvoeYj2wBFa8qhRovSKWVD245529UMUhvQrAQj0MqIY8
                      /NiJvVAPJjzCIDQ916i4vZKLEj2g6Ti9glAVPXKvx72AOp88CroivWwfkrxACfg6Z1G8veL5Kj0A
                      DD68Zfq/vdN1wz2AREK9MIIcPFi5wr1XPTS9I0qiPX9oiz1wZ1S8GbKBPUS90TyQHgK8SdutPZkF
                      gD2l5cC9VtE+PR11gz1NzKc9wK/JPIBFdLzLG4s96g7GvSxBxjxQ//k7cjtzPePPjj3dujW9u4mr
                      Pdq8dL1w2DK92C6XvRhfo70Atec5lBT7vO0RhT1Ucts81ohZPThfuDw0bs68cBalvdpbYr3XWJ89
                      YNqgPBj23bxE4vw85InsPNTX4rw0a4C9QAl8vWrNxb3GCY29svpyPWqCfr1AtVM7YIIRvUTKgr00
                      Xd082DeyvfqAJr2MovM8uvkwvRdfur0f8a09fuM2PXJFBT1IbYE8ajc2vdorwb3GYKC9kiNCPTLY
                      CT3YMPa8jphiPWKtKj0oAJO8DN7zPOADbb2E34e9+DDGvbOEqD1bKqW9Bd2YPSoQUL0SMGQ9aEau
                      vGf/fb1gEsa90GsSPKBnozvArZM8uYiPPWAxwDtitMm9HmpvPcPWIr1C4Hc9WHMMPJbvSz1Ynvm8
                      IgB6PVYzYj0wEgK80gMRPYDSa737uqw9GM4UPMYKfj3oq8G8CR62PfqGeT2KlA696PWLvYExwD0Y
                      /5C8uZGiPRFNoD0A8L68KG/Hvf8exz2NR8a9wlQjPV5ojL3K5FG9M8elvZCLo72EfAC97U2iPb8d
                      wr3opOu82KhAvATu/jwi7kk9Yig4PSguNbwYViY8QHlYPHcsyj0tFcY9TdJhvSitsry2awo9rrOe
                      vRmNjD0syQS9VIIQvaSU+TxYIRs8IJ4VvSikmjzqXV69oNHHO8Sz9TyqfGc9wJt0u/jLgzwaBE69
                      /2uvvafZQb30u9M8HYo9vbj73bwgVY28h84vvcBftbw6ays9+bauPZXVpz025WU9VXCbPWQS9zyg
                      nsA7sn9aPXIcu722Jl89AKB7umZlOD2HOj69wnonPTz68jxXLmO9xK/hPMD7p7xKWzm9PdgdvS3z
                      er0yp1c9ZiYEvasHkr3zbYc9Zno6PV9Esj0Fx7A9NI2zPMmYkz16oSy9G1/EvZPJZL39NoG9sqIT
                      PeMmn70I5oi95llXPZkXqj1qPmW9sO1jPM5hKD3dqSK9Q5fKPYcjc73oggm8AFM1vICThbzQr4g7
                      LHK0PFj0sL128hG9qcOLPWigozxC8Mi9TNSrPKWvkz2ZgbQ9EqlGPQwAvDzMZNe8MPLrOxSLhbxm
                      xDA9FcusPdjMo73NRTy9H4S3vb6/ST1eQSs9jCTjvFCm7ruQZKy9EFTGvZCdYTx1Rby9NZKBPeDx
                      truiFKe9prxePdc2xD3DF1S9nehavdnqlD0o+2k8RpcYvdC4hL2B3Jo9aZOtPQxcjbyAUbw7LdDE
                      vSBlH73FVJI9B9W4vTh1rbxINIW9OgkSvdjwQbzY1PW8asAevfanRj2yKFo9UPlSvRNpeL1qlIC9
                      lIC4vNpkYb0WsDQ9ldLJvRdQlz0ZyLY9XPeDvcD1djtn5k69APpGOZXxnj1r56w9oBHnO7ZXcz0l
                      F8M9TeLFvehffbwoPOa8AJb9u229W72mrg49oOyXOy5ART0QhRw8qbC/PUzy/DxAQsq9tMWXPMNE
                      yj0IxpK9IdeNPcBQxzyAxBK8thOsvQSk/zy9zDK9KK6jvcADbr06rAY97mASPWDDab1SCW09k5Ob
                      PVSl5TxweEy80Nc5vSZmCj39+Ea9lO/NPPj5nrz0bPs80rkIPTEvpT1K1hi94JadvCd3gD3/VaA9
                      Tbq5vdOQoD1wsQS8c8B4vUDOxbxlB7u9pdarvSegrr0o/US8AHodvVg/t7xKVH49pBfuPOZjGb1Z
                      /bI9Kh6wvargRL03VUS9LwKAPTAQn73e0nQ9PuOFvcDCFjwioA89aSOPPQCJhDxoEAy8i2emPXjy
                      pLx90229lqZfPayrrzwA1aq7aNNXvJadRj2qKMu9QKqAvDfMV70A47Y7+sudvRnQlj0JZYM91kSU
                      vXBvn722TXs9Z/nIvRj3mr1PzMm9+VWsPTW0nj0eBaS9CAWgvbLRFz33CXy9Hr6gvTDdpDtffrM9
                      +lJ8vQJ+kL0j/2y9oCrhO2OuOb10JRO9Ici/PS5VSj0wpT+81AfGPBQ6pTwjtba9mE1EvLS7sjyg
                      MSk7IsN8PUCd87qVvpK9AicBPXXBsD3xuZE9FMbhPGQUg70X8Bq9wNjivBogFT2wLIC7KpxuPfMH
                      Mr1NhYA9lUGzvS1pJb0+Ii89Ix24PYR7+jwAmmG52fa/PUFYyz0A8+05aMGEPNQNE71Yamm81aHI
                      vYjajrzgHKg8JkpnPR6MRj0ASP+4QMdrvEMudL3gnb87AIg9Oz58eT3XAmu9ofSWPX7XRD2XlZ09
                      wESAvdht67w0AO28qrqYvYoYQr0H7y+9MOUkveTCDr0YwFU8wHc+u5TX2jwqVDa9AALROYLAaT3K
                      NFI91qqFvTrmyL21DYY9+PmzvQDuKL3AbAG9aD29vT1Ihr3dbq+9/W+GvYuIsz2EUNM8VGaNvDBQ
                      oLtOiWA9Du8cPcrSOz2NDC69dJeHPIOtrj0ocLs8r2+/PRtmzD0+aWc9Q3clvRrCo71BWsE9QOu/
                      PCgXl7xTyB29Fya9vR5boL23aze9lYWlPWBjDbs6VrC9apNaPdL1Yj26P5q9cGUMvL24c72n90y9
                      +rqCvSJdfD1QfGK8k5omvdSqzDxQap477kNRPZrcHz3UfJg8aKwUPFSa3bxzRR69sA1RvYEVmT2K
                      e1g9LEfAvKA4qLvOoBI9oPCnu3L7FD1gpbK8IiMCPQtanr1gpZg8MIk9vNMVnz2qCGQ9833LPTQJ
                      vryVcbG9o/pYvR2QgD2+wGE9l1WJPYT7zDzMvfg8ikl6PW2Qoz1idnA9un2UveoZOD3HiMc9QJgH
                      PPq/Jj11ios9e9S7vb+5yr36gEa9YuoOPaSfA733zrS9AOQLuqjvgLydTGy9S8rDPfAkXr2Gt2A9
                      xW+jPb9Elj0FyrG9ABx+OQButjpQAGC9PLoFvUISlb39b8E94F+NvbondT0zULm92R+2PYZpBD2o
                      Q668c7V7va21wz28gt08CJjLPJhpobwYBbY8jYhDvYNReL0wdou919i2PbQphTwAd8y9A9MpvVcH
                      rb3QM4S7k9O/vdXkxL2MTa08AxcdvefYwb2HUsO9YvZfPaXkuT1XRF69Y563vRogA73xioo9jQ9P
                      vWzACr3GMQ09En+rvQCFwzmFxsG9OwecPUCGA7ww9fU701bDPUNztL2yJDY9GPpkvCmJgD3aAVy9
                      UDktvUfspj1Gd0w9PaumPegvY7wav1S9XetuvTNAyz09YSe9EpwwPbBBZjyzZHW9eOCLvZq2HD3o
                      cRS828CHPeuAqL0lMa29gEGguxHesT2JaLc94zGmvb80uz0qh8m9XUJ8vbl8wT3n9Hm9OH2KvIfF
                      tT2KohO9kCkEvPoIID3wbS88hmd4PQs1iD3Nw7W9Q7+yvXj5w7yT3pm98vFMPVSL3zyuSx89wC2Z
                      PAeroD3iob29Ms1NPS6TQD0dZhq9Im+kvafHTL0Qtcu9gBphOijLwL0dMZS90aKYPcws8LzQZma9
                      M7I3vbBuVzzwgns8V0JZvecuJ73Yaxm8SH6ePAAPKTriC529u9y/vdCi2DvKELO90Oh1vGhdH7yP
                      d7G9nWS5vbbzor145fm8XnlPPW6RXT1QEwK9UFWhO4LoZj3OWFk9ugVQvZLbID1nQV+9isF8PbBd
                      v7uutAU9zcYovetIlT3akam9YihzPdZiFT1Cvkk9cV6WPboQcL3MoRK9AydjvZ8Gkz0ADL69grxF
                      PTLqbj0D6KG9UqlIPdDTFjyYN6W8LNWZvAzh5TwQMKS9dq8qPcAMejtSshM93DOHvcAyFDv56co9
                      2Zi7PdA2i7tSHkw9YXuKPQDjZTxxo5k9Bj5OPYQW5TzijYW9l8UrvV6Sp73i6CU9imQmvVkTkj0Y
                      P6E8gAoxOqJXLD2QSw48M284vTjoiL0z06Y9Ti5APTMFH71NEYS9U3eJPVA/tTvg5Wq9QAXjOlrN
                      M71SOXU9FGP5vJCtdb0kBPo8DySQPWRL1Ty9RGC9VbKGvYfaLr1NYU69pf2wPUCDab2qhmc92qU9
                      PVgWjr2jDJA9IZ++PSiMXLwQhFu8sB/iu87+Rj0yGcG9huF4PeO6wT2e1W09tWO/vXHtkj0AFcS9
                      O+6sPWB0Ur19csy9sL6fuwChMjxTubG9VDLaPArYED1x1Lk9yZGIPbLrDT2xIo89+3WlPSaahb1O
                      TWg9cOFAvQ2Olj107bW81LD+PEyclLz92IY9IE6vvNLLPj1W5zk94Ce1u7wEGb15BbE9wEcQPELv
                      QD3TprC9UPcQvK65Zj3ptIw9t9AqvWA0q73AOsE8mKEkvC06ab2UBKU8QPNiu7BV0rvRVYI9cSed
                      PTBXYjwbr629U06iPdiBj73CBww9GMCoPBMNPL0Po5E9k3fCPVqVmL3k2+c8LagfvWDfMrujkZi9
                      KOcfvOfZrD0AbJ68Uwpgvai6VrzsZcC8sAThO0wQ2DxRJZ893UQovTCXYryGzTM94Jmqu+3XNr1X
                      cGK9jSKzPVk0qD2/K449c6cuvY2Mdr006fm8DasZvVD/v71MPQ69IESsPDDzcbyr1rm9nRWIvY8b
                      jT2YtwC8OOWAPI4Fm73E5OA8tWGkPQElwz0NL409dEmhvPBpJzz4i8S8KqUIPd7FTz3xWK49M2Ch
                      vVBG7jsmz4G9UeSmPQZEaj0A0bu9ZG0PvZqJaD34UMC99DLwvNiGwTz+qWg9EFNoveeZxj0SAR89
                      2I6wvJDoXzzAGD87xv4QPZB2QzwAKmM7NitUPUs9mT3A0ro8vf9TvZkhvj2PnKc9jEv2vFNwj72K
                      RAo9lA/MPPTl1rwc0QG9PsWJvbZIXz1tTUO9V558vaqjTj3Xd8g9YMo+vfcSuj27o7c9NtAoPb3H
                      wz1e4IS9VvEPPVj/Vryvxpo9mOqYPKP3LL3Crx09wPxJvfsPgj0vKZg9QI0TO8IAfD2YTgS824uW
                      PVhkqTxbe5m9DgU7PTcsPr1AIoS8cDt2vXhahr1EwOM87fqpPUx5kzxJZKc9AgdmPU2tar2iAVQ9
                      mitpvQCs97oSt3E99pqWvcAnN71UM8Q8k6qlPc7neD3W26u9ZqaZvRXlnT3g4oq9NASHvUBMd7so
                      DkO8UFbgOwY0Gj1Vboa9abe3PSB8sTzNU7w9EkMIPWjDeDyOzpC9OyeVvXqdxL1+LRs90CcpPBzk
                      C73LK5a9LC3zvMiO+rzIzbq8UKNjvT5eNT3dRDG9AYXEPUvboT1dWFC9GPxlPFi1orz9KJa9WNim
                      vBcWYb35+JI9ej0dPXhDr72lXsM9PzXBPZgE+LxA6b08wow2PbpZdT2Evga9ZtgMPR3yv710FNw8
                      /06yvUP1dr3LL6a9gAasusBmfDvCTkw9GTK7PRQnh7zRocY9A1p5vQpLpL3H/a+98mEbPewChL0C
                      FFg9q0iBPXf+eb2EZvA8XXNFvVABZjwrr6k9UFgRPIH4qT3gSxy9mEUlPEBDvTxQaT88sv4MPfSL
                      /zx1z5A9UEfBvXKEFj3vZrs9YNVcO1hwMLwYMLa9icy/PRuKtz0WNpS96HIjvDZ9Gz2A2T290AlK
                      PDEhiz0guze9faKBPY66ND1oBWa8G7OwvfKicj2cQRC97SUbvTsFrb1MbIE8Q+SRPYDfuLxSFaG9
                      E2gjvbo8Pr2UiaS82yeQPYx/CL0AjOe8HjCHvRA7p71Q9GG9KuQDverwcr1Ll7o90vhjPT8klz3N
                      oY69GtJ8vfMcmz0YE1W8olYXPWDZkjuvfo09N5tTvRhGir32EBM9eNHjvNcyuz3I57S8eKeBva1f
                      v73m7Ii9RmpyPYEJlj2zqY69YP0qvXOcmb2s9e28QnlwPRiizbzzf7s9yPC5vIDFTrpoxx88FV+4
                      PfUYpD20ubo8gCFAvSjwYzwVj6S90J4ePAXnsj03e2u9gJCYPOiREDwPLZ89qNervddqfb2g3qW8
                      AGZsvWyegr1uU4O9KYWBPUBngro9Caw9cFgfvNj5CbyM15e8YY+JPdkJwj2Kmnc9AKalvZ60kL1y
                      PDM9gKSgusf0jj0K9lo9RpqJvQBF7bzCG0M9Tem8vUCPib3TwL49rT9DvTJXBD2RWI49dSGxPS6A
                      Gj1jgJ+9AuAfPeW3sL2P0qQ9WD2+PPYJbj1AlyC90PxXvAp3XD2WIIu93ulvPSKNLj3COG89enuV
                      vQFUlT3ugnw94UqWPQOWNb1ClAU9AmK+veAI0LzQuzo8GxKGPexUj7x9Gcs9nZAhvRbLWD2YTse8
                      Z2+6PQHFpz0bJ7G9Lc2avQDNhrwQhEK9YHW8vfIjaD3AqmG94OOZPFcMrD0YHaM8B4YgvQIfAj1O
                      Y5O9wseqvQU7zL0/apo9ek4IvSBd9LsYQC08mnFQPYpLGz2QbyY8wNrZur39uL1Q/068Vh4yPaPy
                      P73xMcA9LGMSvQ9Bwj1QIXc8ajRRvbbEID3Zx6M9gsVUPTcnt73OeXM9cvqgvRXatz0hGZM9Kq8G
                      PRGLxj3BlYU9sf6ZPfexnD3A+di8GpALvV6mAz3rb8i99i0ZvWpLGT3LcMK9hcu4vVCqxLuvDco9
                      4u0kPYCo0rr0x8A83ctavcLRWz2s0YY8Rp98PZlzxz2Rw8o9AAdIu1C3D70Cm1M912xYvdrpHL0u
                      /4C9KhdnPV2wKL0hkrU9uNyvPI39iL0KZU89IJJBvSzAhrxGtUI9MrpkPQ7KJz1o8YW9X2C4vfWD
                      hb0+FVo9/n45PeqcZb0PWqo9hpQSvbAnJb2ovAC8O8TLvUjmqL14wO68ztl+PXnohT2qvCQ9KBOo
                      vTk1yT3UNpC8Z5qtvZNVkr1KZym9eMmXvY6+LD2mHxA9nXWSPdj45LxYNtq89bG6PdSslzwwvbU7
                      2l61vYLpNT0+7A89sPZdvD0Mpz0HQW69KN82PCEfwD3I+oc8u9ipvcDXWb2g3LK89KXsvKAg4rwA
                      vtW6QN39umATHju4Bq28gxR5vWf1s71UJOE8KG24vFN6vD3a1p69kMJyvPeMf71gLoy7v4OmPd8Y
                      xr0IY4696l9pvQ8ytL1NUpm9eMzcvNitbrxQBdK7IDxkvajuwDyovUG8wu4jPdxd0jw9TMi9YpNl
                      PYpIsL0ud209k0i8vS5Bn72g8Km8sA3KO0BrY72zJKW9aMgqPK+huT1QesI7Ccm2PbhKx73QQb67
                      0YWaPUPXbr3oEyC8uq4tPdmhnz1EkNA8H7SHPWlCuT3IzZU8Oth+PcFLgD36GS+94u0kPbUypD2Y
                      uIS8bH7qPMGikz1YLkA8QEwVPN4Ycj0wLbG7qOJHvAMTfb2yijE9aJ1lPEDg+7ydlam9VVSlPdRq
                      D72ANr29UY6OPej+uL1C/DE9DXc0vaJbNj1dKIi9owi4PeB1o71B+q09QAYHO+yuib1A4uC8FDu8
                      PIGJqD04QcK9kNA9vAD4+zgHjLw9tsASPTXVjL3s0wq9AEKcOZqWWj0X07o9sYfJPXNCe71igg09
                      2DtfvIDFqjtLCss9NX2SvXuWrj18GdA88+IuvahRtbz479K8bVbDvT55KD2AImG6MBtxPPLCfT1g
                      2/a81Q+RPQCuvruGEiQ9T0/CvQEnrT2Hdb29zvVIPQAFVr04HIe9utxLPYCqrbtsorG8SMeHPNBy
                      g7suQG49UMnmu6A4QbsAxjE5VHm5vL6ULj0wOig8qDncvCYADL1AZlM83LjuPDAiLjwgqfS75Y6x
                      PVc7LL1bi8g9DRebvYhOoLy3SsE9wv8KPRQvEr3CYmk9eA+hPEpkTL1A3GE8vrhYPfMeJr10aZM8
                      a/GPPTnHkT1Z/bA984uavcC+GjvdqCO9Es4ePSNIqr04uJ29Xu0iPefiab2Qo2U8AF1+O0e4gT3G
                      rD89QvlSPXw+9jz6inQ9otI7PeKNbT1oQNS8MxVfvYCXnbuxmbc9YNB1vbewyb2g/J67TRZqvT+q
                      mD3sH+684NWCvSZeUD1ilws9Ii0NPRi4I7xg+os7FGCqvBPTZb2SszY9mlpOvUOyHr1G4FU97FXu
                      PED9YDxTR7m9IJPqO7A1nLve9UE9sYOzPap6K70IhqE86emHPV5Oq73K9WC9YAr5O+AM9rxO8FQ9
                      60i3PUIPKz142Ki9wrcePRvfxz2JNMI9UNSvuwh3yr26cEU90y2wvWg/GzwAlR87M7KxPTJlv70H
                      4lS9iEPpvHgbvDwwBmS9kJ4GvC/Mgj0YD1g8VtNiPRoUIb2AtvM6yXKLPUAEeL220om9ebWoPYwB
                      iryw48a70SCiPYy9lLzN3aE9D7e2vYTbEr1VBoO9vdvIvXs3lj3gg4q9ilAavWJOaz1jP4U9TjdQ
                      PbPCHL3Ee/U8c4anPSlOhz0CGTk9ojlVPQAQNbzJqLg9AFYgvQqzGz0KEDC9uqpqvYAR17zg1Lg8
                      EmiVvdo+az2gZzC7JrcCvaYETT3sRPA8syFNvcB06rx6bcy9UfOhPbDzibtm/xa9M4nMPd+6pD0p
                      mbQ9jU7KPbA9J7xg61S7/qmivdyQgb1sAqs8BNDuPGD+qDtIZoo8qNJxPIAeFTp1ZcK946K5vUDI
                      t71/Gcs9Ve+UPWBKxr1Qu8+78l8wPdh2h71AnS+71NADvSyAzzygBtK7bXorvVCdc7xsAPU8j5ew
                      PWyx2rzSSyk9mFC1vH3Jk70KBJi9Q98zvWqvbL3YXGM831mHPQM4tj2gLQ+9IopkPTj8obzbU5W9
                      mhVcvdALCLzwtmw8JjCYvTBbBr0gHba9aOeavP9WoD23UsS94XykPQJ7Dz0wIZC9IAHJPH44lb39
                      1sm92M+GvNhTOLyNhDS9722oPQzc/DwYppu9FMydvEHnrj3KxQY9w5g6vSnuqD0MCxi9cJ8GPLr+
                      Xb0YbD+8/WhHvXUMwj1dpos9amVcPeFalT22Pom9MNgmPBPZl72NknS9gKeNOjsrwL27gok9Qid6
                      PfK4l71ISc28TTeGPdsBnL0Y8qi9mtTBvYCVVDyiulE9oLufvIVmlj03t789QEiuPHvijL1J8oU9
                      ZuMSvb5OBj0D/ZY9adObPdl9gz2IOY28ZhhyPf8Lvr1pJ689B6UavZSd0jyA6X08kl5CPWj8ijz0
                      QZo8WEozPLwiBr2XfWe9AKtwPExoA70SKW49YkdOPaHxyz3j1j29ULbiu9BVY73XGhq92cu+PZhG
                      Lrx2DwQ9sgcnPVeGlD1yDbW9Xc99vYGLsT1AVs28KOhmvPKag701N8k9chQQPQBwnru6Ixc9oMW/
                      vbY5g714xLG9oIiXPNaVUj3oyKm99NeRPEZCA706ab69xgdLPYKnUT0MprM8jAyxPIBgNL35UoY9
                      1h6AvS/8qz1wwGy840ilvbs+oj11y8K9h45OvfFEyz09RYI9gMueOvK1p70iW629wlCUvZxY9zza
                      Ujo9b0SXPc68lL3aJTM94/u+vURIF73d4Iy9sbqkPdjXCLy5NZw9GPeMvUC2Kzuw80E8QNExvFQN
                      9Ty4Kb88t6G9PfoKiL1g0GG71HsAvUAPq72GZQY94E36u6C7Y70AImG7SXCdPVDdw73syfO8cjdL
                      PV7JMT1zUEi90FmsO1dLZ73W5hI9WOIHvHR6zjw0oRO9DLOnPPAYb7xQbZ27vU4tvQChoLt4hLu8
                      Iw+uvTdtT73wJ8K9YRjIPZ+bqD0du609wnRMPTAE7TsgPPq89DGJvJAiTjyOmZG9eix7Pb1tyT29
                      n3i9GG/ovEapRD0zWcc9IOrYO/l0yj1jApM9j/e7vd5amL1IiMa9aCaavYAjIr301su84DSuOwDA
                      JrgQGB68kpttPaujxj2QT3u8EJpxPKBGtbvgb/k7oHEOu5N+wz0SqWc9sItnPIEUkj3yv3A92C/Q
                      vCZxhL0OIWk9BJPPPDbEi70VkL69qtyMvX6OET2qAiU9MHdaPM8nsz1iSGM9tOkVveV1uT2SeY29
                      aHrDvRNFxr2a9SK9xxtLvZA9LrwAdKU7dEyMPCmihj1WT5u9IOXgvJDYUjxKhma99nIdPRTdA70s
                      vsS8IPusO0AV6rrnc2u9OWrEPdDF4Lt942q93usBPfC2djwsd7w8hQKLPcBWPbtToDi9DMvHPKiL
                      MrzzAMS9cHRPvcPkob3obIG95jWSvVi5JLxt2Yu9yB2gvDnClj35osM9Eh1gPeX/tT3KUgS9CJ2+
                      POAzkzsqgEa9VuEKvUQK2TzXAr09gNJqOiE9jD2ojbm9PtqgvRKRFz2Cml89mLx2PCQE6DzhVqU9
                      1O6rvFsbuL0C3zA90GGmu3SJg7y2xBo9wHsbvc0TTb12pQ+9uy+vvZ0/N72eVSw9oYWcPd8IzD3W
                      72o9X7CwvQisxryLbqg96BoaPKPGvb1EyoW9QPXyOttemL0ycwA93aqyvdZ8Mj1Hm3u9ANYbvW1Y
                      or3Mfey8qYSpPRCrbLx8Rvs8MuUWPRh8jTyw31A8t46yvVA73DtdD3O9WNyMvVCJSb3DvMU9ku++
                      vXCkHL1PbKA9F4PCvRqlVj3osmg8xH7dPCiptr1b44M9MEB1vDDbejyzILO9wh47PQXvur0jno+9
                      x6y6vaHIpT12EhQ9KEuPPNScgL1lYMg9pm+fvWepJb0K6XG98QaTPdBvabzl6L09MJX4O3PFiz2Y
                      KjW8mqt0vSlfsT1xfbw9MIKJO0CFXry9Lce9QBujvIpLKT0KiRy9tBHvvCw6mrwnum299BCRPNCb
                      0rvIlcq8sCmZuyikabwHOTO92ChqvKPla71QEpO7MQGEPZiyOLykyIW9Mq8KPYbuXj1ifbu91d2u
                      vfKREj2Y5Lm9+FiDvBs/oz1Y25S9IHMAvTTlEr2HBDG9AIHnvHfJaL2Crmk9IzSMPYKpLT30r+O8
                      sL5zPKDauzu2+pq9wIW9vWJnk73u4kU9/DX9PND7X7366io9FcuSPSQlCL3wxUW8PaCjvfRQiTwQ
                      eWG92C5UPPoDSD3aCsm93QGyvcjfx71Qhzq91vSGvTcAsj3yHT89UMKfO8R0jL2wlL273GfOPLSo
                      nbwwr1+9KJRpvOJVcj16aUY9mAWqvJr7Xz0Jd5k9jW68PWjmcbzTUxq90nMiPRB8IbzSdLO9HG0F
                      vZT3qDwKpFC9Zz6uPVK0g711rKI9RxCxvWByIr0KuHe9qIRVPE4SYD0giLe9bJ/pPLYwKj0//cQ9
                      0GX4O/gF+LwWO1Q9Eg0fPQBJc7uZ+MQ9tZSDPSjrMzyzBWm9Zl11Peyw2LwzPC+9yT/DPWqZMz1W
                      HXE9ph8UPfPrK72w+CE8aK8bPKASODswaka8GVKePfehfL1lNrE9J/5nvfosej0L1Ys9k51evVgc
                      fbzqcBe9Sq02vVDvjbtQIFU8jAmlvIOSsz0kf9k8lwVLvewOmbz3r3i98vimvWKexr3saY+8fDT7
                      PPpJC71jhju9wkkXPahKbLyKuJm9WyajPShVm7y4I5w8DIHkvNjceDzyTaG9rYjFPR3kmD33rHi9
                      akwUPQC6/7s0/4c8TLWYPMDimboU4eS8NkQjPdVCjr2a3Q49AmI7PcD1ATv/p5o9wGOMvU3mTL2j
                      PHy9YvQaPYGKnj202uI8tHMBvSjglbxg5jc7WDKgvSWCw72+PBM9UtMVPbKDrL3txaw9AGCfPC8T
                      wL2ghhK9vusIPaT+8DxmSVo9cJZzPG8OvT2tNyO92hNKvRKoKz3NEbg9E6+dvc1nsj16PLS9DOEL
                      vRPirz06dnC9sjRbPT7yHj0S8mQ9YlcxPdCafb0YEIm9Ys5vPQjQnry7mJ+9Rx1evdUBi70CdEI9
                      0GckPEkltz3IiaK8qkuBvbmUwD2I6MS9/XtLvaXNgL3NH5Q9WtZ8Pdgm8LyT5MO9UNCIvcEVvD1R
                      NYM9Jup5PQwr2bxoeFC8hFeKvWN0nL3L8J+9Bqk6PSiTPzxtfI49Nm2IvQBsw7yMnYo8sSCxPbh0
                      ljw+6lY9yr+wvSdszD1S2RQ9YBwUO4B+fDxQNbC79vdpPYC95rsw9TQ87uRPPXoKAL2Y2pw8dhpf
                      PTaqBr1CfBY91taLvf3DLr1DzZA9l3a2Pf7HPT2TJJM9I3DEPX0Knr1S6zY9ayWxvX3uJ73TCna9
                      1MXhPJhL1rxm9AA9c1JvvTHKuT260iS9AIZ/vdThvrzCRXQ9ANwyvHqgGD0NuIm98KckvPtTsb3M
                      sYS9KFsLPNimALzGVDQ9kuctPbqoOD3O1k49IGyPPK/jsr1uo0A9uLiIPLAQojsNrWS9ClwovQDw
                      gDsID6c8eei6PRX2lb3XULQ9FMOKvPe5vz35r409BmIqPQwnyDxmskM9y7y1PWgMf7zIMqA8kkQj
                      PdLsAT0jOb89mse2vWjDCLzJWIw9JVu1vRRdjzyN4i29+vMEPZo+u71Yvnc8H8aQPaKSxb3QD907
                      ipy3vZlRhD1q4xg93cllvYxFgjwQGUu9ZEfrPPP6fL1Umao8LctsvQhUsr0wFaU7Zmg8PXCnJ70X
                      6x29dxwlvcSv0Tw6cwQ9wKRnvQB1Ab1J76w9OiO0vcq9ID1O8Bk97S6iPafXPL096my94PilvWi7
                      Gzw4D7a9eLGrvFNrob0m4Sw96Bh1PNjzaDzScTk9s9hRvWgc/by0LNa8GjzGvceGGr2NHoc9OE+h
                      vADKUjyD1369peujvXlBpD2W4YO94NS7vfCXCr29F4y9tZ2dvQnGxD25LJg9Yn9cPXMjeb0sc6o8
                      oqkZPZNSrj3q7om9wLGGvdLQdj2Adn+6/rsSPfl5lj3HeRq9FyazPUDzALye/AM9LuBwPYyN9rwY
                      9Yi9wEpZO7B1RrzYvaW80HGVveDPxTwwEJo7YN1uvRqEC72U4de8Y/ODPejVJrwODKK9CGqAvMlm
                      uT29V0S90s7IvQ3LfL2kmNs8d7EnvUpZD71g5my7Xi9aPZXxqz2AD5y8pEf0PFj+rzwQv2+8asl+
                      PVFbgz0ew1U9GJrBPLvYnD2wRN+7gA5OulAVMzzQDQ08mqsmvbBpUjxQ6I27UNzkO7nvjD1CiAc9
                      /dV8vWjGbzzY4bC9EL0OPJr3c72nA0S9b0q8va85tL1QZYS9ahgvPWKui73Vp5w9kpytvZ5VWz0z
                      N4c9lQWQvfU9yb1jbGW9TNqKvSpEC71GqUc99FIFvdxg/DyPVIk9/cSQvRkAuT3oVEK8VTTFPZYL
                      lL0AimO7fr5YPQBjV7xP6IQ9wrYPPWGnsD29dsU9ORa8PRtPxj1tMMs9YNKKvdJRRT16AcO9OMLV
                      vOYKSj2g0VG7YJuXvQpmAj3y2Qc9YLNdvUpjfD0MP7e8dJy8PAAjur1sTqC8AHc8vGCFX7shZoU9
                      sBJavHqUYj2OEUs9oDcDu8ixl7zfRbu9YFsevXHfsD3HomS9aLWOvGBKhzzz6rA9ynkXPb9zwb2w
                      FYO9cM1LPGZig73bvL69YiSPvVLLRT3ORwU91PubPIFEkD1QNdO7Uw2VPQyLmDwAPKW9bPLyPDoj
                      SD3bIL89AG/EOwA6oToWtls9k/HIvZs1gD2AkZ+8oCTDvSgJEjwR98Y9yFWnvDBV9ruA4+k7J9x6
                      vQAz+bm3OWC9lmiKvTm3hz0o3PS8BUuoPQIBq73qCGE9Ms4EPU1+nT22IDo9ID1avSzjj7wOnRo9
                      K2uZPTMlRL0DmkG92Bh4vErgBD109NO8wuNvPagDeLyU3bK8xe/DPTeuIr1nHl+9s59vvdgIuDw4
                      0cm9c7BlvVKnGj2GrhG9ZlECPUjLz7wMCMW8N+y3vVBKAbxUrdU88NJ+vbnquj3NDhy9sOmOvehx
                      UjxDEGe9R3dFvcTH4DyXlSm9Pb2MvRgKIbxcmP88laWgvWuoqb3hfsU90hcvPWQH2DwefEY9Uqls
                      PYAwoTtMCPQ8gK5lutMdOr2BpbY9fs2JvYV0mr0AsMQ6oI/FO6Iik73uyUw967W6PdQttzy3MK+9
                      ArSGvSqdTz1Q0t27shy+vemymz060Rm9ApIHPXTM7rxIp428k1HCveKoID0idVI9wLI4PKJGrr3q
                      wYK9o2RBvRBOSzwvfZo9XhiGvakguD266E09nZAlvUGnsT0g5be8KgS6vQRT3TwJVqg9cNRmvW59
                      k70qtQU9qNSjvWcwpz3TiTG9GLW9vDrAPb22clI9QCEDvF4BTz0Bb4A9GaigPWB9yTwy+b+9FsYu
                      PXDffbwTnY892Ge1vDoRRb2zLaO9i6mEPSCtsDzBt6k9wPY4vF2GI71CCCQ9aU+PPeRn2jyeh1I9
                      WKEQvHFxoT2AAxQ82Lx0PICo77oz+nG98Au9vfKsKz34J5u9wG6nPGJ+YD3AkvC6KAQAPDjU5bzr
                      qKM9M5qPPZmxiT0l/Le9mIi/vQQ6zTyaaSG9HBGAvf5rMD0OTEA9Lrd3PRIqCz2n73a9eampPWaz
                      IT0AvAq7r26tvcnLrj3zbju9YKh9O1dLoD3S1ww9SkBZvUNaUr2YEeW8CRKIPSnviz0t7J49KRmV
                      PQjFujxQ7cg7VR6MvdBAjDtsPvi8rzWzvTTr9zyA9J68QKplvHCcQDx01qM8RfqsvVhqXLzx/KY9
                      P4jMPdJYw72qEcS9KFEtPADQrL1XGo49emtEvUHiiT35z8o9BqySvc4WRD2FfJ69x9U0vdR/w7wG
                      1jY9wEUdu+42iL0Pw8A9LPuCvEmjsz2wFJm9bg0APVBmxLusBbe8kKJOvOCribtq7Cg92hhuvfIP
                      Vj195Ls9gro8PcAWErx+AA498CtLvEA5QDx0Rus8JkZjPdoQA71ZtKk9UIyxvcACmb0gH2m9AKiP
                      u+YiPD2gMzO7KIcGPGvbxj2tfBy91l4Avd9Ct70AIKe9DIKKvdS817wzqa29wdWuPc0JqT0a9yA9
                      KONYPABy+DkYLZo8SqpzPYBanrxABne8aKSovbT/0byoF4e9/QxhvSBdu73itgo9d8qxPcBNX7zQ
                      gFM8XiYUPei/tDzT6x+9suFVPYNljb20bds8sgdoPUxbgL3y+7e9IJ20vS1ijL0V58k9fEzvPMFf
                      zD2iMAg9QP00vMC4Ir3gj4Q7C62cPTiD+bz3EJI9nS2GvRaCPz0U0d48pW+AvUAgwLxQKAm9/rCJ
                      vWglDDy7qrs9BvksPYPYVr2pPsA9fVbDPRAufL0TJ7e9FS6PvXRP3TwHwrY9SV6cPYzkjTweHaS9
                      1jlqPWYTlb19ici9VIWfPHDFJLzgo1u9ADY3u9CFIL0IWcg8OVqKPQISWj2nHra9suyivWEsnD03
                      cL090Dd9PJTX/jy8VAa9RdyevUF7qj35SoY9kMZgvJQ9zrza7Cy90Ezju0Gdvj16WkG9KgYrPaMg
                      nz1mi6C9UptOPUAHHb2ARkm8xjF2PRZ4Cr32PXM9eh4aPcCQDrs+OYq9n6mWPdJFPD1Q+Ks7h95Q
                      vR2oib31OY49MvFHPVqRSz3NpV69AwRmvXO0Zr330Ko9Y9hqvVD0WbxFq7y9yy3HPappXj2T3iu9
                      KRaUPUfbbr3iyJC92sCAvdAVab0d78m98bbKPamPnT0Aq3w7sqcYPUt+uL12D389+iMVPVBudL1h
                      zas9ALe/PNAIeLzsbMS8ZeW+PehTIzzoRXi8o3m7vVQWB70CVQU9AFZcu7BQtDtYN7I8ejQrvUAp
                      t7yatVo98HghvfABTzzSsDA92snHve6GJj0a5EI94mdrPXBiZL1gyzA7c8xqvfJNfj1A58E8gsU5
                      PRIGPz3sOO+8ghs1PdeSYr1vno89rUmGPYOYpz3oRss8ATKSPfSuq7wAwnI8TJeMvGvQrD3zl649
                      +0O9vYPHnj2MAIQ8gHqXO2rnWj01dru9APGxO3a5IT36sSA9IkJtPfKDZz1Y1V68IGOCvKCU8bzw
                      8Cq8FUzJvTDHIbwgd5S9YDUvvWFKhD2Aoxe8wLF0u/UXuT2an0w9OerDPdDB5rufnr+9QqoqPfK1
                      vL26usW9pXvMvfgHiryKjB89dZSiPZ5UeT1Pmro9fdyOPWB1hDxsnve8pqtwPeBbv7sC2Z+95tw6
                      PfzMFr0TBqs9gPEAvfA4BL2MMeG8tCK1PKB3wzts64A83Y0bvWi0zLyjZKk9ieaOPTa7ND2qRTW9
                      6GJqPFTWrLySzIC9iKPFPLkPuD3U0PW8MjqDvSgirTwoOD68RsCRvV2zLL1tycM9a4O+vcB0Vrze
                      zGQ9JqhRPex20Lw1b5q9GovFvbU8kD35Srk9HhRhPaCQTzuwXAI8ijwtPbz8C72A1SI8LOHdvOma
                      mT09zxm9fQ3JPeevS73Ta1G91nlUPWE4jz3GhEI9uTONPbM6Wb0SqqW9gAi+uuDqgjzQpbM7gyGr
                      Pfjs27yYmcc8tIS/vPZ1bz0q9ic90ixGPSpYD70ANoG6gICHvb+vpT3tAYQ9l2ePPeQN7Dzglcu7
                      mL/KPIB2Jzo48LE8kGURvcLqFD1QSH08zZOfPc0HRL163jG9oPrYO4n5vT3RO6I9eAuDPADAsjs4
                      yYW8ZugDvRwe6jyePKa90N9cvG5hg71q4K29j/XIPS7aqL1gL7a76AAjPPHMvz2eMgY9exi9vcI8
                      Wz2Mc7C83TyOPQoSGz3d1549iaPDPXr/Q70Oo1M9WvOrvXYYo735k5g9WrIMPUd3Jb0ms529ha+m
                      PQuGnL0H3ay9blhnPaCbf7u+SVg9jGaYvDtjlb1inD49VdGdvYCNobvWkWk90T62PVHmqD2xFrI9
                      AK9cvEf5gz1ggJU8FkoIvRLWrb3e26i97dxCvUDgGDx0icS8Uo1EPeyuw7xy9Es9MlFkPcZDZz3K
                      ni69PRdrvSPWnz0B8oU9RzO3vY2tvL290LW90UPCPQmzjj1kb4e9TTA9veqtFr0wePK7u5ypvbSc
                      4bySBU49M/ChPdqCRj2eLjY9gSS+PdCjkLvxQrE92uxEPYAJULxyxjM99DDOPBr0x71iRS89gCDR
                      uuhw3ryA/ta7sO/Tu7LjNz1SQAY9HQSGvWogX70t3jy9QAnrOkGAoT0uiIe9gG5/uo4bib0uXZW9
                      TYd2vd1tkL3gZWe9F5iePSZOLz3j1Uq9shGhvUDvrrp9fIM9vg82PVCuXbz6tz49wFHFvPr2Pz06
                      wL+9c9fEvTfEPL3zx409BgMkPfAgGjxzl0S9AgdpPYDvn7qIWoS9sG4vvVnfgD2WLg69YE8hOwj1
                      lrykuts89Cn2POTG9zwaYx29mJJfvMDI0LzodQy8NqN6PfhalLzO4Qs95bqxvR9uoz0AZbI7A6Z9
                      vdqLlb2kEO48PqGrvWpuU73KaBG9JutaPcLFcD05gq09oMkSu9WRvr0AiMC6+L6uvEfhJb1XpDC9
                      +kYOvZz50zyIfK29ULVovKz25TwyP429sgsTPQzugbxGjBW9inYkPUnkhj2u8j89+TSxPYAVrTuw
                      O5K99Mb0PHpUY71aQAE9NyaKPRKEyb0G1ha9APIjvfSZsLxO1UY9n2ewvd20aL0Q7S68sF9nvPi7
                      t7xRQrM9x9B9vUwSFL3S64q9dx1RvQ8DrT1yVsO9DUHDPTbbej1A6fu8YFE5O8O3eL3AeqC9yvm/
                      vUq+Ab0POII9qymbPX77SD3NP1i9kMADvebfFD1w0na9oCnHvGoHYb3bt4A9WmmCvWSy9zz0iPy8
                      AH88OlrtKD1NVC69MuEiPZFuoz2AbfE7+Sq0PUcOeb1N2De9LVSEPSB++rtHGFS9UHoCvSWNyb3t
                      mJW9SnE7vdIsVj3gco+7RcipvVrUmr3A/ag8ucuEPWBxnLxoN0y8Hn8fPfA6b7y+q109dp8JPYcK
                      vD1gL6q8AMirO5jCIDxLs8i9CAP4vD6fHT3qtyu9ADNEupRZzTyruLA9xtYFvVBpT7xdv6w9iFuv
                      vFwUgb2MfAy9rjQBPaH9iz3lKLI9AB+zO+imNrxdK4G9YhwpPWCM0DvSGRI9AcKWPbb7Sj2ziWi9
                      BnhdPSJDUD0EF808GGlEvMKGJD3gzqS71OHoPIzDlTwXJqE9QsOBvSU6qj3WAHo9CKCIvHMhoz3R
                      h8s9FfumvZwL8TzoyCu8ICDhvOJiLz1AHBc8qM0kPA12Mr0QOhq926S7vblcwz0k++g86b+pPQzl
                      0jyZ34894/FTvdy1+TwA0qI5QPnkvKqfNT0sme28dBcHvcEWoD1aVg29QyOrvYAu4Dto58I882yt
                      vTmQvT3SjGw9EabLPdglXDybR4I9uq1DPdCzHryA8lg645CsPU1HML2BT4E9rW64vVDl7Tv2VG09
                      3fK7vW15eL1A1WI7PUk8vQBkK7ntFrQ9tFDKPHIAqL3gF8a8gk+xvdhkOrwg/fG7hO7jPEqwv72X
                      Wsu9rWnJvZa7iL3QfNS7XVOWPd1xo71oMoA8gKPtOzOyj72qAhO9B68+vbAJgztAXg29Mx1ZvUPV
                      fr201YE8yNqnPGr0Gj3AL0y92GjBvcC3M7u0uac8t1a4vbcfmz2KtWs9iPrxvJ1ruT2QLTw8DIq8
                      PPC/ebz86ga9paq2PU1zUL19WoK9R7KyPSBcrzxmwxe9EvipvRoVNj1CCzI9MOK9u3iGvL0DXUC9
                      +L3lvPqlyL39Ixy9bCSLPKC9xDzAZdG8w6NTvfYDOz1653s98K1mPFLOMT1+rYq9baaSvTayFD0s
                      /vS8hGvnPO65i73QA9E7jWAbvTo6RD11T789WDErPGrmfj01PZs9OMuwvRimqL2Skh49iDunvcT7
                      zDx554Y9aBCJvGzG4zxGkqu9YEyhvbrGaD3ws6K93R1bvRN2gD1i6pS9jTKnvTMbkr10coI8Sd6k
                      PY15UL3gDNq7No6bvcllsT0QiXi889SzvYCOB7zuhy49gpx6PY0wS706+kg9zoBqPaMyvb2DQoU9
                      OLbfvHhozDzwuxK9cTi4Pc6Hk70E9Ng8JWidPSJnUz0HTXe9jio7PfqecL0Zv4E9hV3KPQVNyT0T
                      1oo91EyMPIg4zrwr8ZG9lMAUvUUNlb3xyZ89AOa7uwonBz1NFMK9IpU5PRKWLj0UUaG8nvxNPQ4W
                      lr1qKx49eFGWvfY8TD1ykzY9WrF8PT0Hib0V36Y9MC1SvFAkUTwLmrA9cPFoPCB6z7sTaoM9jP/M
                      vKjsXbyV7L89i0WrvcDCILt+5BM9Tu4QPR0+oj1wjwK9mpptPSwCkDzl0Jo9p2RQvRz16TzGGom9
                      cLXHvWTK8DxQ4hO9h6ctvairdLzg9om7DCWpPMDcFTsL5Mu96pYovSGXtT0FSZm9kb+7PRI+Tj3a
                      bQ89jOXrvChlo702hGQ9J6KfPa56iL0F65E9k05+vTI7Pj1nk6A9cmAQPcg7lTwL0qg9CEG0vDWW
                      gD2jgZs9g1ysvVDe7bu6nMq9YE2SPOEUyj1JW8s9fFjuPN2Jjz2g4XU71Hz0PAp5Pz2Yo7e9OIu6
                      vPIGbz2gNmu7m3bGPVu5r72mQJS9TTm5PbBJvbvryMu9d5TAPX4RQz3osCg8qRWrPXBDeDwwc8s7
                      YH5Ou6Bmnzyyt8W9eGy5vTo2eT3P+7e9LX6TvYBBaLzBYYk9xHz8PHp9IT09zLU9APYCO3qsir1g
                      f007AACFvWbIJz1Xk269ltCDvWxsC72yQwM98kiZvaK8Fj2zDqm95YCuPQCfQDyRI4I9Gu8EPZZ4
                      Nz2j7L29g8tQvc5aGj06FRi94oAPPRQ+/bxGfYq9xwqAPbWyhj26FKu9w/CjvaCcqDx7qZS9sHcS
                      vex18DwysSw9j76FPYKJaD0yQr292OvCPIM0tr03EJI9DgxSPXiUp7yA6Y+7Zr8XvTCMQ71sCos8
                      ONC7vdEknz2YpKa8l/NevbH0kT35mYU9BfuBPU5uVD0TkVy9TQzCPdZtEz1QmpM7Ek5wPaebYL3A
                      oFi7gNDgOgLyTD3nn4Q9EN0mvMC29roxE5E9t8CGPcl6qT1OwJ69BVudPYyU1rzh44I97UZcva2r
                      hj3aJ249sIgPvWeiJL2wRDI8QEoMvf8PuD1d58G9MXOsPUpGaT0Q8C29o5gvvWokBT1DAV69SF+r
                      vQDfRLr4paw89yJ0vYPVVb3iSwc9QFd9vRLnaD0Z4oU9LgGHvQzusLzGShE99eOBPRQm37xit1Y9
                      xj+WvaGHgT3LZca9IoWlvSeykj1VjaI9jm1JPSB2hL3Ybqe94xuQPZatDT3ZVLg9uocWvVgATTwN
                      usU9ojoCPQCffjyHk1+9cLRRvMfMR71XqyS9LBimvOj9YrwTfZk97FSvvO+XwL3YBbg8gM7gO0By
                      Zb0lPLM9ErxHPfldxD0ojb684HJYvQ4wIj2gqoS8uA6+PEy4Ar0ibLS9MjKCvcZQRj12Xai9gO7t
                      u61AIr0iFS49OsEyvUL0WD2wsSU8qPs7PLR9nbwyNE89s+d3vZoUDT09cW69iZiHPVhORLyXXLO9
                      wN9quwDMD7n8Ges8kEMDvV0UMr1gE9G8kzVavVAbrruENOc8YrqBvVBPEbzr1p49uienvbDLhr1M
                      Bc+8AN0zu8JTaj10dhK90DhyvGHBpT1j/TG9ImBtPbnsxz303oq8UJIwPDXJvr2gUi29WlK2vbDC
                      jjuLEJc9a4y5PUAToLzK04y9rNf1PBmrxz2abJC9oEYOu4bkBD1Yey683Y61vUxx6LxNLDq9Va68
                      PeOAtz0DZGO9TGnePH0ETb2SVCU9u4yaPTOdgj2Qkza8AEwGO7hRtbwnVG29QTiKPXk6hD07P7Y9
                      qnmUvQ8Pt72Y8LS8AoFuPfAjVrw4GcU8JBvlPKChozuQVoW9MGq5vcLrGD3yCyk9EGOAvRoySj1Q
                      s5q9xLTaPBFRlT1Bq6U9vv4kPcNymr2mY6i9h+WSPf6/UT2lJII9NhIXPQA4m7iASiW6AiBIPSDl
                      trtCLTw9xWzMvRmZpD1cNOw8E2o3vWC4ajsTYUi9lCqYPDDrm7vVHoC98zR2vZHwxz23sB69+FbD
                      vIvctD1aNQ09QCI6u6qBsb25uYQ97ELQPCgJZDzqRIK94ku4vUBFAbu0FP68ZeXLvWD6Kb1wvRe9
                      8ZCJPSh1TjygLY+93G/sPHWzvT2yjyw9rAWKPEi0qL3qao692MhwPDsHo70BZqM9LkAjPfS11rya
                      SZe9Td2evfWgjL2QSHK9KJiXvNN+tT14X6U8sFXVOx9awL0d3ZA9c3d1vSS/BL2Vzrk9C+KLPT2Y
                      HL38TxO9cFZvvDKEMz1FMri9i27GPcOntj2qC3i9yrMaveJRQD0mMkg9YLONvQgriTwKymY954FO
                      veUotz2uLZq9J5dMvRhtXTyOXB49KamwPSqZHb0TSaO9oDwivWS85jxLILM9ADSnuGjTKDzaXX49
                      UFe4Ox5PBz2QLwi8KpM0vdFovj0Tu1u9vql1PVD697uw1qK7E9+kPUBzUr2czuU8NIPrvHouu70C
                      PkY94IaKOyDInzyAJk+8gJZxOonSvT0q10a9aeGOPfBCaL1Qa308sEzMvWSB0TzUgd+8mKO5vdnq
                      sj2GikY9CDj4vIM3n71g37s8DIYWveJHfD0+CVE9KCUIvMgJqL0Q9H08NEKkPJIIOT2gJjg7O8K1
                      vYie6Lzgf5Y7PZ7MPYVdu70ViYI9s6+RveD+nTuxH6A98oEZPS0Bab2h3YQ9BoE5PVgoRzwB4Zo9
                      h/Bbvcg8hLwwbYS7s16PPTRNn7z/NMc9OkQUPdKZRD2sK4K89GLEvC5FKT1FM6C9rJTEPABSj7oa
                      zVq9qdqJPbLjDz0ubpO95phQPT6uQD0GgIS9879SvVQC8Lxxm4g9oMeovIBerL2sboW8dUa1PWGG
                      kT0oncC8l/xtvdoQT72iJjc9C9y9PfyyA73tbki9AALmOxZerL10yse8UBX1O2BKY7sKZDy9KNoH
                      PCjwhr2QImo820HJvcB0yTw68Ce9H/+LPeI/TD2a9KO96LaNPCCkQr3SIT494V2lPVA5Mjw7v549
                      fsKjvd/Ovj1y72E9x/SSPbRLCb0y7gM9sMRUPGGHgj0QfCM86LOovfCycbynwR291BSgPAQQEr29
                      vj295vWHvXRF+TzQOA+9Kr0dPYBWkrvctwK9gLyZvCC5tDwD+8g9LD/SvBC0pL2T+zi9yqRXvfDb
                      Yr0rlY098F6YvZKGHD0sD8y8KyyIPRXoqb3Dz129BltaPSiShTw2ZhK9AEyPvQDACDco8zC88OoI
                      vGChpDsq8nO9SugkvQOuI73QwZy9PFiLvc7XcD2mPy09GhUZvepBXj37b7O9pEryPDA8wLt2bRm9
                      8NwkvJ1rqT3rvMq9bam2PU20I72eJks9oEvzvKbSXT0AEH664z8fveiCtb0wGIK7ers2vWfoZb01
                      W4s9Dhc4PRYAhb1Sko29GhchPWI1Dz3WJAy9l0G+vVNikT29+ZE9KHSVva01bL3XT6s9ie6nPY0b
                      pD2zKLI9KtfHvaAfyjull4+9qJijvC9vvD2jRrK9VXTHPR1TP72LwaC9YD6kPGxG8zxaES49tK2r
                      vOMChz2hRJ49OAGHvVDS7zvu2HU91JTovJP2sL0tLGW9eduNPdh6Hjzj9Iy9M3Z3vTNbnL3SGQo9
                      gEk4OtqIcT1TqJa95ytmvRDxVjwos8y8+Ey4PO5XdT1e62o9cNaBvRDxRDyMD9e85QmavWmggj3Z
                      P6g9Njs/PdqmED0x3Lk9wjdNPdDvjTunirE9KOuhvWhXALzCH109ACzSuxCFF705LK09QjdfPcBR
                      jDw7Drk9iKSGPLA1ETwS/nk9+k2lva8srr34SrY81M7YvJDJK7zQAC29VwscvQuXzL0O0wg90ISB
                      vXpVv73qo5i9HaaXvSG6qj1ug2U9GR/DPQiArjzDpqS9+gMPvWSSgb0o9l68ci20vcf5gT0EKAC9
                      jl80PYDarrwz+0K9pllmPds0lb2god47+mczPRfBG70W5Wo96ZmEPW2upD2xRcs9ADijOdihtL2L
                      pog9X4WFPbf6aL3tNbU99ykavYqvQT2ixX89ykIdvfwZC71QFCy8RSbBPTYqbD2YgDi8HxPHvfy8
                      1zxhpcg9doBvPcDwcLx1fY693goHPVjvtLxLDpy9NVOcvfp8Ij0VP4a9YAvOOyMDV715mLw9KNgB
                      PKNnKb1sm868Nk83PZg8wzx2WYi9AIjPO2M2Ob0gIXe987MrvdSXhrxKOsu9MgkyPQcomj3SB2U9
                      uCeuPLAxKzyMZAu9JjYmPXBer70AU2i9qqNjvY68MD1sfum8PW6yvVDqjr3wz2q8Jn5APawfkTwQ
                      xC69iLqpvQCLoTsyzBE9urGiveG2xz1gkBa7gvwtPfYtHj3q3ns98JxJvTdXrz3NLMy9WEO4vM5c
                      qb12Mg89jKaiPPC0zL39rp+90Y3LPXN9dL1dglO9QPKLPP2dRb1t6Y49FppVPcLUIj2XAli9KJ9X
                      PAvyxj1NlRq9OFulvGAaebu60kM9hlAGPYzMm7xmzwU9M+1+vQXqgb0wiWw88GVzvYDc4brAfyW9
                      QPSdvJzMFr1AbnS8oIrsO9CAnTsPsL69AsRAPcX7qb10SPQ8Ujw9PTETvD2TJ3y98Yu5PaZlAb2w
                      sDw8oD/QuzJUXj2YWpI8Rx3JvTS2AL2lwso9JWKbvRflUb2tbb69EZS2PdR107wwHMA7UGSFO+MG
                      Wr3nDW294PIjvTOCVb3tfsQ9mVWXPWBYljxdWXq92Gc7PMGyyj2k4RS9st0JPcaUMj3DJ0W9J/fB
                      vQRuir1IjZS9Q29zvQ77az2HmpU9qENbPCIXSD1hSqI9AFftOyIvyb3LyrM9aEMsvNqVZ72gaX+7
                      iWiePSL+Tj27O769krmmveX1p72NYay9ygWEve0TmD2iwzU9loIjPUXEsr1qbkw9wE8uvI+4oj37
                      ZJU93VGWPdDNkDtAO307oC6cO/OZqT2Jxp09KYOKPbCKqLsK4be9Lx3KPSzMh73528o9KhMbvW5a
                      ND19Km290BrKvSHCuD3qDA09mX3DPVYWET3jhC29sE0OPDfvpz0gbcc78MYJPP0Wsr0/XrU9RdfL
                      Pf0xUb3tb7w9dAzJPPTPjLwUbIC90b+EPd5fkL08Afo8slw+PZpYgL03hx69zn1pPaAMB70d2LG9
                      s76Ovba9cD1LRJu9t3SJPYC4zTpAaEs7LJKlvPqfVb37Ro09B9GpPWBdibvFUK29iJnUvHSl/DwW
                      nxK9pN75PNGhtz2U8L+8wA+WPAaQdT0A/Iu7LRKfPU4SVD1b17A9UAOwvXotaj0oDZW96wCQvaJG
                      cz1yl0Y9n9W9Pe+RzD3D1JO9kx1hvYVxjL3AcKm9qigsvX5dJT0lycG9hoMlPeAzrLwD2C29d8pt
                      vXFDsz0ibXI9FIuDvSioczwKWI291KSRvEA7LLwpPLM9UOYnvfLBJD2wh3a9ysVnPbHxvD174Mu9
                      G4SrPZERyz2yezI9AF5Iu6DFyLyjPKE9epu7veIZBD1PJcq9rO67PBERtD2less90DlhPMLVlr03
                      m8m9CYfIPUnLoj1QBpE7tE8NvfgXhTyrq5W9U9VYvZCjXjxLYac977SxvfAHTr1w9Q69rocCPWhK
                      SLy4LNG8oqqAvVr6bD1Mkvo8jG3jvEpFCD362rG9E255vcb+KD0+Czk9nPrNPDAjfL1Q+aW9M+BB
                      vUxzrDyi0y89Mj14PUnvnD3KFqe9lBHGvENiqD24w7q8hPb2PFqrAz1kbQC9mFBdvFvzuT3qPJW9
                      luYFvW7kZD0oH/i8gO28Og8dvT3XrDW9nVSxPSCoEr3AYrO6di+ivRg6JjyOLSw9cemWPaDwmjxC
                      GBg9UyzHPYNByT0BD5c9iAOMvE69ej0rC7Q9HyKxveDYjDyOAxk9QxirPYrOBb2gYoa9fQOWvQrQ
                      Pb3zyIo9kMklvJEvoD3mgRa9AgpWPY77VT3zO8u9IZiyPc78pL03vGW9TzW4veskkD0dXJU9QFcR
                      uw6CeT0grW29AnIsPc0Pmz2oD1i8x9/JPV05ZL0BxKc9syChPaDnQztmbQq9CnI5vTKMQD3zvoo9
                      8ceePdA1LLyjnDa9qCsTvDdqSb0AvTO8F669PSocYj0SkVs997TFvfZgVz3fyoI9waefPXTRhDwy
                      9I6902oovT4bXj2wSj+8Ef+vPfNFjz2gTS07mCnCvI14H71QeRg8A6tzveOWWb3jvaI9lucMvZUj
                      lz16zCM96GT3vCGYsz0rwZc9/2uDPSCfY71QyH29ojYVPeA2tTwwewK8sqiTvdLQXD14L4u9sOnh
                      u3OXyz2yU529mOyWPC4zbT1sEqk8qE3IvJATwL3gzsK7Rh8QvXD3lL3bj569DKAEvWjhRLxNe6i9
                      a0PBPYxN97zX3LU94XO7PVi8wTzdkbe96f2rPSjbODygAxu9yFOyPG1Ie70OzSk9g0uvvSjhozwi
                      6Fg92BbMvNLJQj1uHoO9prdVPXMEkr2oTBc8YM4pvQJTsL0oEOO8oksAPajG8rw92ak9yqZGPRum
                      wL0t7Cq9AE6vOQDAmToC6h49m1aTvZhvobwjiza90aXEPYMVxL215Ke9YBC9u7gKpb0gWBm9Sp9v
                      PYMUkT1qiJC9SOeSPNG0uD30ZsC8eFyDvRYrZj2Aswm9whtJPXF0gz1focY9ypqtveLiDz06VSY9
                      2l8oPa4IAz2HgIU96nsdPbscs73g1vW8KGuuvVi/mr1gccq81KHyPEIZQT2yZQQ9couGvQyetjwm
                      KR49s0ilvQAO+jrs2NG8irJgvU3Pvz1Q2pu7MOtKvZ35bb2Ksme9+LiQvBDmdLxC7n49yAmGPLTO
                      vLxCOHM9OoccPT1RjD0Yc0+8vW0avaDpTLttS5U9oDGYu1ntpz0mgDg9vQt+vaAitLzPJ629ADV3
                      us1AHb32Lhm9kJMrvBfyur19QGW9YA9tu2wXxzxgG6K9c7REvRhbYrxCrKC9YCYiu2D7kb0iuKi9
                      mOa1vTqnqr0CqXg9mNppPCCFCr26am092ySlPTNfvz0Pp689wBYsO6lCuT2ofce8A5heve0dt71Y
                      Yjs8eUWWPfir+bzA8Re96jAXvQchXb1to229feVBvT9exb1qbhA9R9yBPUtNhj2h4ME9KiFevbpM
                      hb3cNoS9YOuqveYrHD0gSCa9uaybPQXBt70o2w88TD3UPFDVUTyqagw9JCHqPIVIur3ugYW9Bsdr
                      PQKJFD1hPaI9l1m5PTnInz0A2vY5Q+KhvUJZhL3yREo96KfqvK6ViL26eh+9MnIwPax6rbw+3jM9
                      2nwVPfkNpD1Uz8Q8gJPHPAzggr2AjZS9MHSGO0iVqjxC08K9Fxu/vSdsHb3Q13S8LKiUvBsfvT3j
                      7Kc9AJVNOySV/DxK30I9/HMKvdBfWLxzt7S9NBjTvE5pLz13b1u9Vxe8vUBXxbyjtZw9kFxZPC7H
                      aD1TDKI9/raTvU2+UL290i+9S2mTvbBUijtszeC8S9aVPY03mT1Awuy8Eii6vYouqL0Birs9YEHH
                      vBIxLD3rRMm9tay3Pc3cLr0QqVW9tJ6WPJAJGzz2e5291GSLvFZtaT1Q8OC7DgqgveB/l70UY6E8
                      ALIpPOHFoT1vl5I9DBAAvd6MMD2stqQ8AFfjvECoFTu9X3+9QGMFO0CUXTtF6cY9tkVHPcksnz23
                      eK69JgIWPb+Vxb3d34294HCNu2iKCjyTwkC9kLwOvWIedj0Z4MY9GqEiPWY7aT2MkBa9OZSQPazY
                      zLxEIBe9LrIzPTpIer2LeMK9fRE5vdjCjbxIioW8cL0CvAEDuT0yXWM9qKpDvFwrzzzHnb69Z8d9
                      vYz617ymhGY9uqgoPT1tL71UyJE8rSlmvRhxvr19TE+9LMbJPFC+pjuJGoY97FyWvBdHyr2oHWm8
                      AB81vO56Uz0y7om9Es0IPWweobzd8yu9HXPAvZTmhb0tjVq9xDP9PONEiD1tL4q9gLOvPGcmyz0k
                      DeE84NnlO2IQir1quBq901+6vQBj3jvvvo49IORuvfLSpr1AU7O8AOY8O9+8jz0Gwio9lcSPvdZ0
                      Vj0UJp08rEaBvKDMjTsCxlM985W2PY2OyT1gca48nf0wvbBfIr3fv8W9/oJ5PWCI5LwaNxg94YCH
                      PdTzxbzeG0M909mXPXXYiT00+LY8wPqkvEKfST1MHBS98Q2QPahQQry/tJI9pl8xPQBUBjku2pi9
                      pTWKvSswyz2EntU8EXOePaqyd700xK28SGawvOB2qLv2gQw9OuUvPcA4Xbs3mEC9DNiLvRslpD1o
                      MlS8m4TDPWyFrLyN1os92jdhPbK/NT33Vy29gYmZPcLlqb2M8Re9ABGRPPfFrT0ggqu8KIfJvGVu
                      q71Fm769QJJLvQbMqr0S06G9BHwRvbZFhL1VGro9OWbCPYMAfb3Nz4I9ebamPeKDdD3AmYQ8GIWb
                      va2Zpb1Qmmi8S9eCPVEbwT3lTLO9UODlu4z9kTzH+Ms9INfXvPuRub3QGGa9hrRoPXMGmT0Qf2S9
                      c8ZXvap9fT2Qf1A8mPViPGBQVb2+Z0o9eiBqvaX5or0m2Uk9p2/HPeBF5LsATCG7toh4PZLfXj2I
                      A4I8oDw1vQdjlD34Eoe9MPv8O85KAT0Uyv88kEIWvWbVaT0wWKY7ckKlvSKrYz3AGW07iQWOPZWB
                      jb0apjg9gFB+vAnOgT2QwUA8QktKPahNTrxZ7ro929ycPSXLmz2gLY28Wp+Lvczo3Dzdn5S9OtGd
                      vajNTLwwn727ypYgPVzl1jzo8208QBJCPMvQuL0LGbu9VdC2PdiVyr2oO2U8II+/u/RSujzAPLU6
                      wlwOPUuyqz2Y9ra9V7YkvRgO/by854W9khZGPfBtHbwjDMw9obeVPWCLgDzA5i47aHOHvVLjQz00
                      F9c8kkrLvQppfL3xHLM9ADjMOdrYkL19Rry9856OvQBc9Lvg68y8oEn0uzPGGr1n6ag9HXcmvcw4
                      gjywRHk8woRUPQ5po72CxQA9UBVTvDAg6ztVL6e9aGxpvLH6uj3cygO9XJH8PPs3u7020DE94+Rf
                      vZB7CzywHpk7qlp0vWlVoD1RJqM9UABevdIRjb3KpFo9Naq/PXKRRz0ZjIg9gBuGvRuFxj0y9Vw9
                      S7OTvXIRPT1LBoo9qkSWvcKoOT2M8/Y82BoxvI+duz1G8BS9wG1Bu04Fob3Atpq919JwvVDuyr1t
                      Hsm9ih2bvVqefD3AYFu9l/xjvQEtnD0TSY89cEpdPIvTsb2tKEK9UIPlu+MmlT3AzKe9DTKoPdos
                      Rj2U2Iq9mphUPY13TL0YM+C8sPVIvLogXb1ttcw9ZMXrPKCVP71m+SI9jXhFvTi4xrwwLiw8AEzl
                      O27No71oAn280lB9PdV2x71oz8I84HevvbG2oT3MRdq8ACk1vKDAtTwyA6a9qDcIPHpcBj3zzSa9
                      5MnsPN7Lk70YcNm8oC/pu1rlZb3A2gc7fSmNvV+msL0gT0q9sbitPRRp0ryd67m9VCWXvKBlizts
                      V4u9COL6vProbb0KfXY9tPMPveUOp73q55K9QLDrvJqbKb33fG29k8qfPVBED7wjRKm9ENUuvXEj
                      xT0QMyi9Y7F8vSDMQ72UTdk8aTG9PWnzvD3Yl9W8IxC5PfBnaTyAjBo8NLzgvHHqyz1H3L89P0us
                      PWAlP72uFDY9JBjaPIuBxb1qLsi9AW2wPbP1Ib1dmyK9Ew6Zvb2Kk71tgIa96ESyvBUWvb0cpQa9
                      fZPJvUCeYzzztHq9gCcwvdDNojvQ8IG7Ba6KPfaZaz0OG6e9EGa2vZGKij1QKNw7WPGivDJhRD3D
                      xVC9WcWLPS7OPD0Y46s8oIEou6BVDDsA47e9C5S5PYMckz3USbK8EgkTPePcub2I8ZE8sM0bvbKu
                      ZT3QQ0Q8O5eiPRf8rb0g5d68wD+CPI4UCD18P4q9ggwCPcBwQTsM0u284cGXPb1oqD3Ss6q9eJPg
                      vGi1GTzzK709smOovZugv71AiEk8fBHrPMBQnbqAH588DeTFPdB2ETyaChU9A6iFPYcItz2A+6W6
                      WMKYPHLEaD03IMy92PisPDRD2zzAim28HtZNPahWwL3SZZ+9yV2LPdVykD2Y2ma8tostPV0OaL3A
                      eAe9GaSfPcS4/zw0jIK9LbqFPZflbL0wUgC8OWTLPQnyuj3pS7099MvOvFohFb25ZI49zncfPXo3
                      gb3SfUI90MRDvQDWBzzCqUY9AceTPdh6pL3Rwok95euovdBZfL1OpJC9TsxSPdiSxLy+Mzo9S0+o
                      veNilz3jAbS9qZrLPXCky71A6gs8MpI9PWD//rwM9+o80uBDPfoiCD25Y8U9zQAqvabZC70w3fC7
                      IM61uy2lfL3pjsA9MLgOvV7Bgr2Ejwe9QEIevFAFxjtFgsQ9I4guvQgx1rxoGmY8rGiavO2Mjb0g
                      wre7qVbKPcDjPbvgO569sNwRvdgoybxzC509pED6PMR6FL3CJVw9E/iZvdb7jr2X0bU94C3luxQ3
                      wjwpUrc9cgaGvQDWrL2Q+wI8XsyGvcEgvz2veMO96DKIPJCMUL0Xn2q9odPJPb1Crj3qSHy9sI9B
                      vNQVh72CTHQ9IpY8PTfCML24/I+8ibyFPRdrsj1ApkE8Auqdvf+fkT1UH/c8U0s/vQzLxbyrqbq9
                      9OzQvIuToD0KVD+9aMtIvHQohbyahAE9gt5tPWr7WL2QULu9APFKOjCyU7w1Hbe9ntcYPToBD70T
                      LUy9iuhuPUDAtzxY5pg817MyvYAqAzqrBZM9iNmQPLgGqr2Gz1s9Av2fvdoYAL3ie3Y9QGa0vVgE
                      iTwdHaG9+Fq4vJg9nL3jUJS9B3OLPSG8hD1IqL296LyavAglsLyL/KQ9ABxeOzAwabzkf/Q8v8a4
                      vQCcFjrMhI+8dpd/PQI7Rz2C/1M9GHpXPHCGD70iSDg91JGBPNdxmT0TPBu9CRCGPe7QWT2T37y9
                      yRmjPRQ8jryCKLm9ETSLPYusuj3HV3O9K0iYvWDnuLznSV+9yjJ6PRHZwj1NUja9YqUQPW93zD3n
                      iMw9vjISPUAif7ts9oE8UEsYvbQT0bwmSZC9tNi9vP+Lnz02SB09IMmYvJYBYD3OzgM9VAaHPLAM
                      yr0w1Ca84LnEvT0/wL3gapS7iT+6Pc3WW71YD0e82IwLPGZOgL1YwPW8IotjPahgqr0kfgW9Jzeg
                      PfrTSj3KRFS9dKiKvOhlnbxWfWM9I9YsvaA4Fr2RMoA9gAYyvaCK4TvQFeu72sxJvQQk/Dzrlcm9
                      WA+rvaBypjtWwlo9xmwWvZeZrD2UH9S8IGzDPJgAqbxrM8E9AHMGvTIhIz2gWde7DR9TvTX/jj0Q
                      WZu9X1+oPRo9i71GFgI9MjUcPXbjSj30I+e83oICPZrIMb3ISLi90HGru/ouRz23UqI9c8aYvY4E
                      ez0K1DQ9gJkPOvE4gz1gRy+94RrAPa2ApD3y3mQ9m4+fPWiWozxrNsm9UKUhPKB5kDuG7Tk9Q6Z2
                      vaDj1Du6M3O9AAnJPFCXKTy6yGs9esarvTaIBL0wED68MFWCvUKMBD1iT5m9rsyVvW3Nu71YcAu8
                      g/sdveKhXj0ay3Q9oGOcO7fXsT3naEC9yfnFPUCiYTtN71C9K1rAvRoIUj3H7jO91N0SvY/hr70+
                      tD493/GrPQZnnb3l5Zs90qKMvaCT2LwBx5g9AAsEPILOGT2Ucgy9QNKMvWqOVb3t17I9w8uhvfBQ
                      o72NE5E9WAF/PL6weD3xGZA9QksjPUeAgz2Ycse8fXGgPZgvdDzUyuQ82EauvfARqr0UqA29QGhe
                      vGhOMDwXhnu9+BSovPc1J70MoxS9wIU6u75Kpb0gtra7dA2kvOqej714fY88VFPkvGu9t72LRZ69
                      hsZyPSBYu716Wi09YJUwO+ywsjxND6Q9YLhZvR+3qj1gw6Q8OvIUPaLybD2RA5Q9hXqkPYCOiTq3
                      7LI9OmUJPXrJf72GHJO9aM6Cvc/iij104qe8mlFyvVhagzzolWq8XuqSvRY9VT1VoKK9d7M4vZ0g
                      gz31IoU9FC/FPH0GUL08pP88gfTKPSj2hDw6J8O9nssWPf7Dj70gN4S8esZuPZhcCLw1WKm9S56u
                      vS+usT39rki96k80vdCMZDwxVLo9ZrkHve03yT36jE49EM6hvd5Rj70i4m89oqADPQAs3byNw5u9
                      0LmiOwzyyzzG3QS9mFWovFS/wLwihTo9bai6PX5Po71RGrg9wJN8PBrasr2Q/H08tvsQvaLTvb3M
                      8/w87jBOPVCJgDvVPJI9wLsSvHU0nD1W7lE9+FiKvRCuo72Jj8g9yFWivYKZQj1pEpE9YngvPaEG
                      tD0YpIW9VMuvvFD+VjwnJ3a92GiVPNBsmb2QYxQ8VVHLvV52Oz3SMQk9NKukvC+shD241K88qP10
                      vGM9jr3/i8s9ENUevIDls7qKFIi93yy3PYrkVz311Iy9zp5FPciIjDx3QTC9H1KzPSwRnjxAOyO8
                      fjkaPeive7wqQq+9w8uQveVHwr0kh4a9XmpePfB8Wb3BEYM96v4KvfUMrD14gp88kERGvAA4ELyG
                      4Cs9eSeDPQhyib3Ylfu8hDz1PG1kqb2NMMs90HLfO053j73w1ja8EM67vaAVyL3TvoU9gduEPboH
                      ML3JRcU9gIUTuilzhD3z1VK9Hu4YPUye5DzKUiW9cB8JvVBSqb2PdbW9ICyHvU2UR72APle91xi8
                      Pai3mzxbVMm9LhMwPWCxpDudVVS9J4qAPY0rvb1okL+9TnFbPXQo3rx0L/887GKNPD1/fr0A6T+9
                      TJy+PJ8grT0ATaa8QH0GvYwOhjwtJZu9y6y5PVpywr28eNo88sNJPdR/1DwxyZk9nTAhvcFTiz0Q
                      Xwu9UlCrvW1Gmb0tWLO9wncwPci1yDySYWk9YMKDu6KaDD0wX6K9OZ6RPUzD57xVlaq9XqtyPSYc
                      Vj1LnMC9UVK9PUMnL72YP3E8cldePWIfET1TpVC9YZKIPdj+5rxADRe8XvJ4PYBNnDptpas9k3l4
                      vQC8C7rQE6271ACUPCSqEL23RaE9zD7VvAA6Tb0dpcs9mhxJPTjUq7zwEyU8AHjBukMBrb2QRR88
                      uK/CPEe/LL3iarS9RRSXvdBJ7zsAUx480Y2LPXv2gj1BmJw9APX5OQCPUbrHQkO9cBZdvJkBrj0w
                      Fca7hyOAPdlHtD2+34+9Ggg7PTxe+DwAIIq8IzLIvfJ1Qz0KSRO9m+SrvRjvhL1mriY9Z1yyva1M
                      qz3+YwI93m+Rves2lb31GY49NtVkPVqXy70qP8a9mK/jvHrMfj2aaXy9CSqaPTvUhT3AbZu9sI85
                      vYK7Zz1/C6A9Rd+rvUCUnLwBC8g9DS+QPRfYHr2AjaY6gqddPTtZjj3oQSQ8QkFZPYDFf7wverQ9
                      UiRwPTZKSD2yoBQ9IO2VPNIwZj2A2Xe9JAntPADZb72jVUe9dxs1vTCCijtAeDe7SgMhPUxDCb10
                      Eo08UFvrOzsusD2ME9O8LeHIvRZKBj0iIT498/pqvQBpT7opHZ494404vXpuJ71Us/e82MqCvEAr
                      Pzz547Y95CAEvdofNj3ovoG96yKBPSBoRb23XjO9BQ+yPSDfrrwg9M27RUePvRKhRD1ouvO8EUm1
                      Pa+Aqz0t+LW92m6FvfS2rTwYGDI8MD+JO6zg/DyBvZQ9PiEzPXCHfbxnD6I9p9AvvQsUqT3rCrK9
                      KqvDvdRNA71Yu0W8bv5lPSdXsD14O4y93TOovTo/ur3Ym4u8a+WtPXKnJT05zss9sLzuO/EJoj3j
                      kMk9aCZ4vMhQv720vrG8t5ugPap0Hj1esHw9gaLBPfo8JL1nosq9syUivZOhoL2T6Fu9dAupvCIQ
                      kb3+/D89/MH9PCjxnrxgNz29o0GPvWAetLymIFo9XmhQPSS1Br2aTiu9FSuSvUKYST12Cx89TTiH
                      vVRHyDw3yHC9h5CePY5vCD1QbnC8ozMfvdhaLrwoFU08mGwqPAUZrz3DIpG9akyUvXQoqryH92a9
                      FNHVvBAyZLyhcZs9ANcMO9VGh73oubu9oAG/u4Aa/DvgqIo7xhN9PYDssjykrPY8gKuSOwGRrT2U
                      LgG94g5WPQklkT1+03g9FFmoPEnYuz2GulU9khyZvRJ1dj2whIu9dmt7PfOZXb0M1qW8gARcvTcp
                      LL2tTnO9a3GvvVCWMjz6alQ9ckZaPdZUJz1DO4+9jUtSvRRV+byYaLm9S4W9vUiyxr1gpe476FnJ
                      vNBx1TutZZ+9NeS9PRhYxb20q4s8Id+oPaJvdz30qdM81UmSPYHzwT2YYlE8Z4Q4vYApdzxKsG+9
                      VDnxvAjTs7yoaUM8WPepPFNhIb2kafY8uJOoPDvAoD36N0O9qF+7vJgNGryi8J+9VFiEPPCuh70g
                      G5c8owxxvd4uHj0AOqU6E8afvbWcg72wuFu9Qq47PeBP47ut7qY94cbDPUOtXL2X3069I/DBvdO4
                      ar2IEIe88thRPWNLoT34OMi856q7PYRY5zwE3BK9uppBPTBxnb2AQ5q9COKDvf3Yxz2A/5y7HwSV
                      PRAGHbx3QT29msmBvcDQuLqSIB896maNvWDCp7tgVdm8cME9PGDrm73gCY670DTwu4kLsj3QkPc7
                      WqlTPfiz2rySwqa9rb0uvaL8Wj26fMq9N2ylPc2HHL1uL5C9XCaFveowTz3RLqE9yHWLvbDoVLwQ
                      eik8GnQrvQwOvrzos248KXqMPXCOpb1YDbQ8lzfKvYHPjD2Xw5U9Lx2pPXq7LT3YPcA8ErsZPaD+
                      eLsw/+m7qqwuvYIrpL3cLvs8N0/DPViogbwSqQQ9YpiPvbuvv71zgJM9+D+nPBLLJz0AsjO91FCz
                      PDEMiD1wjis8gFAFvQ0Iab2qR1S9UE6KvXDIx714N+28QPlhOy32SL2YayO88SaaPVIflL2ACpy8
                      6BeSvQX9jj24xZo81A3DvChM2rzDkZy9SE/6vCC+kL1Ybam9GNeVvDPveL2pBrQ94jQhPRg2MbwS
                      yiA94oEDPcT9Cr1svY+8lQbIPTBJyDu0moO8QZKcPVwo8Twg+ca7OJGBPFO7b7032K09JuF6PWPF
                      kT3V6ZY9qpEZPW6ZYj0Dh6S9AEsbOgOxUr0Ahsy7mCwWPNwLgb1wvca9XtpFPXpnn73axD49pYK1
                      vVr3GD03raI9o8vDPdq9eT1Abe06uicYPRDMezxQMmW9oJmBvQJjXT3sPAK94pBJPUBmeDvMKt28
                      McCwPcjniL3tR8q9AY+GPQEYuj0AAh48eu02vX2npT0gQI28DJkBvdnYij0s7xC9dquhvQBQOrwr
                      Qss9qgtCPfqFer2q3zY9uUGUPQCimLuLQL69M/u3PQBfYDpy+7y9I3i7vbQBkDwaPVE9NHWnPAwM
                      vbxsg8E8AHR9PN22J72bxJI9tbOqvdq0ND1JC8c9UDAtvGySrry0uIo81GjfPARPir0wIhc8YzK2
                      PYJoFD11ZsE9Ao8sPeeNVb3Q7+K70diKPbRh8byeRIa9bRHBvWeswj0KahG9l2STPcL7bj2JipQ9
                      Zl8+PdkEkT0//7A99eqPvQKEQD2ayW+9bfQ3vSD3J73eHIO94fO0PfRY2bzSzJS9UChCvdMTUr1P
                      orq9Ld8ZvRg7JDy9ALA9wHQsPERg8Txwo1k82aDGPXgep7zyd2Q92ZudPTRvlLzDqEG9HSPIveyS
                      4LzMQ6C8UFYTPKYAOT1idjU9UuRDPR59PT3w9nq9UltqPeB0/jsDY3u9IotDPacYub0dS429MFcU
                      vWHXxj3Mt9A8gyWTPSDn6rzi/EU9rVs0vaVAij2WLIC92HsKvLB2ejwAI0S9mHKfvAqOXT0yIbm9
                      gLknvDPqjL0dJ4694wxhvRif37w3h3a9ZwgqvZp7Q73aOZi9wSHJPReDO70+wxs9oPKcu4LkDz3y
                      i7C9gvV2PYbhCj0Go1s9yFHtvHSGuDwwVns8DHLYvNh2mb1Oqoe9rwm1vfZYWT06VWo9BSCCvf2Q
                      vb1wCV28WKumvFlItD1YfT68YsWdvV1/b72bJZs9hGDTPPVEtL02GyQ9YH+3u6U2v73EJeU8WVC3
                      PRSf2jxKosi9gHWwvII4Cj0ggda7WlUFPYwSubzwmnS8ChJVPaE4pD1NyyO98IwNvKkqjz3wP1q9
                      jQuLPUj3/rxAULO8+fuHPQE7qj3sAZc8UBrou6gilTx3YKg9YOyBuyNOTb0ACp29v2CVPQE3rj1A
                      BBG7QtsPPWA4bTu6a0+9gaecPVjaB7ynn1C9ABKTu+4WRz1mXoK9SNu2vMBdPLygplO7sMzQu+Ca
                      Tb2Aqfa7V39wvUB1pjwtKzu9oPiXPBsHjb1KvYW9AH7KO/egVr1aZjS986snvUWbsL2hbL09xH73
                      PDHfnD3NQYa9FkqBvab7ez2AnOM6CfO/PSyBEL2g7Au9wIQKO5KLzL34xMw8g3GwvdB4qrvzkLA9
                      7gl2PfuSy73Y37q8bFruPFRsq7zAdxM7RQO+vUJLpL2QE3q8qC+XvV7NED3QpUS8w9NzveURrT3e
                      5Rs9/tNXPZfSmT30Qso8jNuyPICmTb0i4RQ9neKePfzICL3K3pO9uDbCPL0Mlr2KbGa95vsHvWXB
                      wb1Q0ie9a4yTPXC3mr1sr9y8icnLPUCELL0ASJ28omsdPf0/oD0IlI88bhgHPS2nlL3wb2q8t7XB
                      PbPiSL0Mw/E8R9DDPag6S7zmshM9oWzJPcAj47zwKny8FH7NvHUlm717jJ+9SYO0PWjTDTygbQW7
                      kNShvUUQiz1a9qm9XowfPZr+Dj3mxIG9juN6PcIDQD0yg3g96EbPvA1bnr3o6YK86AaXvdCAmb2C
                      3G098mRQPXrDir2AFEo8VI3HvHp6RT2L3oc9B+i/PYwE+rxDn6I9Lc9FvVTVpjxSNBE90F0NvDZ0
                      aT1bDcG9WaWWPcOHQL00+6G8SG/fvCg9z7ziQWQ9YOh7vWnrqj2UhNE8srQ3PTAj/bu6xZK9CpWZ
                      vWs5rD3Cexs9FptwPeilqTz5z8A9PjJTPTfpI70O5B09wKIzvakumD31dai9T0zJvXAuGjyHEjW9
                      NOj5PLwDDr1KGVE9wKhLPLgnjr13PMG9+rYNvYI9KD3a3ZO9c7HBPc97zD0LHqy9kjqlvbbsFj0A
                      LPq8AC6puZnUvj0QqSK9fUp+vdrUx73HtmO9CCL/vFh6YjwUNhe9hKP3PDdeUb0AOLE6AABJt5r6
                      x70T8Zq9oENEvSUSvL3Ygj28xyJyvWUykL1A9tK8Bs2ovYzpBr2g7JA8TD+DvZ3ahj1gHtQ7MNpn
                      PGiHqDzo5r08EHk3vFBqaLxw9229ok0fPdAotjve2CY9GChaPAWGi72VILq94ELSvOgqsbwpE5c9
                      ePzYvE+opT0wLhU8AAxsutr8UD3y37i9kkAVPWzg5jwYPhy8s9CZvbJFfT1qEBa9cqWAvR03wb2Q
                      DiO9ccu8PZpHLD3G20894COJvLowHT0zeD69AGE/vJfglD2ABbQ6wBwiva0Tob3Heiq90Cx7vIA7
                      lLvw62i9VYnFved9a72JqrQ9BfSEPfoWIL11Z7s9OUmSPeBTur2oTvu88NIZvJLORj35MrI9ALP+
                      u1SCnryzkZq9MlRHPZowJz1xBoo9qPf6vP4xIT2AA/M6ANAUOVRypDxOhR49nM/xPOP6tT38XIq9
                      8JqEvc2Hhr3onoA8EzNfvSieT7zA+kS8UmK2vVvvtz3gSdi8rbi7vcAaCjxLZZ+9KKwgPAZ5ej2d
                      V5e9cL5FvUnlhz2FPsS9SjU3PcACTjyKD2U9vwajPa5Rbz0XE549gJscvVSDhDwM5gq9tEe+PPAP
                      Qb0AeLM44IjcvJ1fhb0K9ZK9UIbQu+Sz8jytWXq9CPGpvbOlNr11fqY95llRPUKyxr3AopO95EQM
                      veIRIz2wHb47YASXvTJUej0nN4M9ANqcO2Sl4TxAZVK8oFk/u+Unkb2znWK9oEiVvMCgxbw12rm9
                      neaEPRisozyQeTM8R//HPbRr27z7WoU9bQqnPRXZiT3qBDi98FdWPJqdbz1WsVY9mcK5PVVjqz0Q
                      ymU8oDpfvdDtxrvyuTk9GvoXPfaOkL05OJY9MYSNPeO8er2ArzS8sF/+O2+syr3a/FE92gd7PX6B
                      Gz0StoW9oIBHvbp9gb1C8w09f8HFPbpTej2HV409gJFVulplFz0giqU8QBp0vIo3nr1GKZC9AOJg
                      uwDvLTtaDyS9c1MqvbBjyzsBA4I9sm8lPbQhwzxDM0K9Lt9ePcJOn71jRK49yYOzPYAyhLxR/oc9
                      xshSPYNxhj1WHnI93oOKvTDpt73VV4G9PheFveCK4bwENAC9yPCGPMgMq7zwqze9TXVGvWO/jj0y
                      0XA9uP2wPMRf5DzGsXQ94MmJO0PLIr26C369Ae2UPUI1Qz3mNoG9Zt4UvSj8u73gZve84OnPO0Z2
                      g73N3Zw99NOGPO5fHj2Ukrc87OiAvRqGab0KlwQ9wkYgPcA5dzuhFag9TWm7PZOxcL0AP6y7s9d5
                      vRRw7rxKAKy97OivPFPck72pDIc9gArQulB2abxvoZY9osYSPVAlBr29Rb6996QuvcxVjLwilwQ9
                      YFFpvSeSU70AB0I7sTmaPaCOgjvaBIW9+UmqPdOMVL2qJo+9rVnIPWImND1db2u9F1s+vbIacj3A
                      cn29UEodvQDAFDz6g6i9rYnKvZIEy70IqYK8NO3nPIabCb3QgiK9r4aKPSfXjj2+Pwk9xmFOPe1Z
                      eb2p7Ik9OlgZPcDNCTwiljY9FI32PLqrEz0+9pi90I/NO+f1wj132K09yqW6vVQ4E729tWy9PCD6
                      PMBlBr1df7y9iUbCPcAPnzwst+S8Ks+1vY/2tL13nI89TTWtvdt8gD3oHJG9DITSPEL7cT0dbzu9
                      EB+CvQYnIT0XEhq9nwSYPcZBMD3iO1Y9OhZcPbE1yT2MouW8QJ3LPNb1i73An0I84Gh2vTzyEL14
                      4qO92FwfvIBoxrtCMEY9Sv9GPQw4s7w0cLo8QisjPQLDQz14TJ08H422vdhHfrzQ7Aq8fdaOPaq/
                      Ob2U/LQ8gI+pOgLTkL1VDb+980G0vQiqt7zAehS8wJ48PFrqIT3vgsU9sIDAOyBAxLvqNZG9wpyi
                      vWheH7xAsE683ybFPZdHS71jnyC9Wv0QPSF7oT0JKaM9aFWfvfpuTz2DxnW9vQOePQe5Qb2ED+48
                      4emOPR1aKL1lhIC9+83APWjcu7za/009zFIXvXSd0rxAtkg8MAjwu2mBtD3SnHc9XQRpvQaeOD13
                      JYM9FG76PFC+Rb3avZ+9LLPjPHWGmz3X5co9hmljPU13Vr2N+IY9mrq8vQDbB7rOao692OaVPHw7
                      4Tzghpq7MNy+uwqoVD1aO5+9citdPa3jY72CemI9lWvBPVDmJDzA3lk859uvvTByhLvqFz29I0NQ
                      vYZWTz0AGAW6wUm6Pfq2MT29KJ+9oBqLvP2uT71J+Jw9bD+bvPADi731XMy9Qt80PZyU6Dz2fKm9
                      MIoqvYKPLD2SnMG9KNHDvZVtiT2HJUy9sBdZPLC61TsCLHo9zVK0PQPAPL0DU4U9wndVPft3iz0K
                      qiS9I3t+vbaEKj35PMY9wAi+vRGctj0ol0m85L71PLi1uTzlMLc9W2SWvehFybxDHL29UKtmvKf5
                      cL0p2YY9uATpvD5mST3S82Q9KDWBPC5dMj3mDG89EkE6PRXLxb0Rsog9JeGrvRhoQDyAds86Y23E
                      PVwOir02lUk9M4LJPaN9eb2QBSg8AAnsuxL8Jj1puY097XVUvRCEo71HS1W9no+dvQC8hrtYJqi8
                      Xlt3PbKTkL1iXxM9iimZvRm1sT3gMbO9BkmdvRSjlTwAHo48uoAKve7rXj0N6MI9cxuYPfnKhz3q
                      8J691nMVvQCGXbnkv4G947hkvaB+U71mXCM9nsgGPYwGF716Gwq9oAjTu6zm/DwAR6690IPeO0A+
                      DruDhyC9qHbIvFi6l72GJko9KJ9VPKLrTD17QLc92NDpvCpkWL0RdoU9tWWOPaB2CTtaqpO9pl2C
                      vS1kwb2QQza80DMZPGTb0TykWwC9WConPNBzcbwx4KY9WH1bvAADSbsYJYC9f8LAPUpUQr0gS9S7
                      KEVoPHr8h70x74o9JvWKvcKVKj3Y3Qg8EFkXPNyv7zx2Eg29ExQ0vWikfjzzpLW9aPE/PJkvoz1I
                      c8y9ig6+vSy1lzyS4nk9gANuvI5DBT0h/bY96KSPvR+mwz2wDXw8/2nJPUquXr1VLYq9TucLPbBq
                      Pzzd8kO9rZxavaNIyb3RU8c9A/htvUit67z3SC69qt51vdLwXz1bi8Y9T0e6vUC7F7uAICW84yrC
                      PY2+t73AK+a8bQ1LvaiKJjx98mu975bGvcOFcb2SgmA9QPHDvP1Kjz0aF0g92gx+Pesdv71Mnf48
                      sXCfPdQq4ryg1tg7
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA2MTA3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MTA2MTA3MnEBYS5kAAAAAAAAAOJeIT3AYAC8P7eePaoaAL1aImm9Y7ONvQebJL18Vuk8
                      fuI6PUDDDLyTyJc9bddevYDb8LwizA89FFzZPKDPP7vEkM88cyZ3vdVKqb1w+Ji98gKuvYw/g7wT
                      pqo9qQ2lPX+toD2YpY299dfCvTjByLxjoKm9YgxNPWvak70K1yk9rdlsvVzO5DwYaLk8GuI2vQcK
                      xT2Ya+a8NmxRPXZMBr1tMiG9P/e2PWBp/bw9rZE9dDe0vOJdcz09UzK9oBZzvZ0Aer0woh68T56P
                      Pe3fGb0Cl7i9JF7VPAB4xLsless9VfyfvYSA6Dxa27O9eUXAPQvRuz2+4C49ADEdOzNxjb1gq/68
                      sYTGPVuojr2K/Xk9EvxTPQiOrr0a6HM9SECWvf7Ph73AeFm7Sa/MPfTGt7yIMq28udeMPSCf9Dvo
                      Ukw8WMdGPCNex708iuM8bPOcvAPFvL0AEIU5rXO6PbF1wT227RS9S2Oqvego4LyYZcc8/VwxvZK6
                      aD2xnLQ94I7du7I8cT1AnkA7DWqyPXKSED0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA1ODkxMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MTA1ODkxMnEBYS5kAAAAAAAAAKrIH72WSpK9bKWuPC0mcL1UC+O8RktEPVBUWb3Nxri9
                      h/98vU5sqb2tB6Q9UIpCvA3EpL1hvqM9jUxpvTQ9x7yxKsk9wWO7PWCs+7xC2kg9fKzePGheezwA
                      /0q9tMPHvGh0rDw39LO9ANI3uyt8y73M7uk89MecvJimqTwAy/a7ABr1OQkbuz3h8Kc9TFOEPDUQ
                      n73HWL096lAtvUClxjr5/6w9g5RTvdkXkT3pKIg9OIitvJMiHL1AWrI8n0a7PXktvz17Uoo9gliz
                      vTDdSLwyfhs9ZoJpPSC0sDwYd8K85kKjvZS0A72ghv27xVCfPdBHFTxxW5Y9oFABO9XxpL3lG4s9
                      fxqWPaiJRzxTc3m94Jmgu2OvT72fFMm9U+0gvXKzTz1wAEs8qstGPUMdR70+K0Q9WoSIvZjHR7yA
                      zaA7bb2SPTALIzwwIYK9AMD9uxEDjz2A/Ko7UhKXvTKkjL2KmYm9CrZwvbL0az0lzYU9iJ+zPODh
                      F71QvXq8wYaZPYDoy7vQODC82dCXPdj4b7w=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MTA2MDQzMnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MTA2MDQzMnEBYS4BAAAAAAAAAM7TnL0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
        - 1
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        eDZRPEHelDwkW5g8JFuYPO6tsTw7oKQ8QbO0PEGztDxuvW88riR8PBAwdjwQMHY8br1vPK4kfDwQ
        MHY8EDB2PBxoZzzllUk8pmhZPKZoWTx9xVo8digEPJUgVjyVIFY8UzNPPGNP7ztfvRU8X70VPFMz
        TzxjT+87X70VPF+9FTzTw1g8e3IqPGv2YTxr9mE8tbWNPPJjDzw1nmM8NZ5jPNGQXzwBFwo8ITkd
        PCE5HTzRkF88ARcKPCE5HTwhOR0808NYPHtyKjxr9mE8a/ZhPLW1jTzyYw88NZ5jPDWeYzzRkF88
        ARcKPCE5HTwhOR080ZBfPAEXCjwhOR08ITkdPAKMJjvDDuo6D7PkOg+z5DrEGsQ6b6fTOoTTwDqE
        08A6+VYRO7QwCjt/iA07f4gNO/lWETu0MAo7f4gNO3+IDTvZkhY7MtksO69EIDuvRCA7I0UfO3bT
        gzt0uSI7dLkiOxQqKDvNmZE7A7JoOwOyaDsUKig7zZmROwOyaDsDsmg7jr4gO+hsTDuOMxo7jjMa
        O4bh9TrF/3I7dBQZO3QUGTvG2hs7mlN8O6CeXTugnl07xtobO5pTfDugnl07oJ5dO46+IDvobEw7
        jjMaO44zGjuG4fU6xf9yO3QUGTt0FBk7xtobO5pTfDugnl07oJ5dO8baGzuaU3w7oJ5dO6CeXTs=
