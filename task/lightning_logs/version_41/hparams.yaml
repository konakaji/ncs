N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE1NTE4NHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjAxNTUxODRxAWEuhAMAAAAAAAB18YA+M/civtZNqr5MHZs92DcmvXXPgT4+WGS+oP+A
                      vdDFCL5jP3u+YMoAvEp/nL6Y6Da9doR1vitXT77at00+4u8xPizZi75Wmg++wEe3O/OFDL689r49
                      gPROOyh2gr6CkRY+yhoWPtgkGj2TeHq+AIVCPH0umD4FAIg+QIqMO74iLT5olRQ9O+CmvoyXzz2g
                      SSM+RqUdvmDrLL6QboO8IiIMPoB8FrvwYJA8YJl1vjx1jL6jvyC+4H74veCVSbyAJxS7gFpMPVsC
                      j74MdqC+XY2aPtNBjT5ZS4E+entSPmB2M73LNxG+FFmJvZNVNb7gHMa9DLqkPbSbvD2sXaq94E83
                      vQxAxD2YX0U9UO/OPZFfmT56JZ6+nZ6KPs/TkD7uCXM+AOtIvaYA4L3UZrM92DBNvWDvNr58+pk9
                      WMYvvoA+ezxrxDS+gk9xPkx8lj0gNuG9O9kjvv40a76AUnu98QyXPlH3oz6wJIa9I3JdvtDXvDw/
                      uZ++rFahvh7wkr5ySEo+wyGQPmzA/T3C/3M+2nyXvgZtQD5Q5p88vKGjvdKpEj4vBKo+ACFzPQqd
                      jr7VNKo+6GNyvjqKQz7mEMm9U4stvnD9zr3a9CU+zKKgvtpFWD65a4U+wEn0PKaYa753Ooq+gEUI
                      vfDWuTyIRaO+XeqFPrK3ET6w502+yL0UPpDKuLxacEo+rqgbvjkzjD7SQ1o+4ZmEPriUAj1i3jU+
                      wzk7vkXTmD5aHFY+yJ1iPYqJUz4l9ps+Fs6dvplnkT4DcV2+l1yjvugbAL4ohg69vjldPt5LOb5w
                      PuY8EiIePsCdrLvwYcc9mMRfvn35lD4A5K69IP8ePvvpL77Aq967hlehvta/QT6CoWU+ipRJPvtx
                      Wr7e7AQ+MkAzPgv6ab6AToS8RjBsvgsVn77pQaE+3D+LPdBNqj0w2/k9LjlpPt1ClD4AS7s8FuL6
                      vXJcPT5CQDo+KO4PPZ5tRr52PBy+KBczPQDB5jvwr4k9IxAbvsSd8j0SyHk+5G7jPVvRiL50a4S9
                      /DSNvnUIjz6O+RA+5BKjvgHtmT4g5Qe+fioCvlRSp7768j0+fPLzvei/qb6AH4q8mh8APrfHnj5Q
                      M8a9mL4YvnZGeb7seKc9St4/Po6gJL6Y9KC+t6WovsOJPb4IbmW+IGw5PWjkDz1cb8S9K9dbvvAv
                      GT59y4M+KrcMPggxQL4R8ps+maCaPnDtyj0MYaO+UCnoPNwb3D3SAKS+xNSNvgAx5brUOZC+FMai
                      PeZ4171rlAW+3rFevvhaV73J/pY+EW2QPmZnXL7UMsA9QAjHO+YEIj7cOdM94Jo5vTD24r0TPji+
                      hlY6vibuUj590ZE+8O7XPY46KL5As8a8+Fsovqwt9z3yDqG+nsmUvnT2hL6qVXQ+9EuWPaAsTrz6
                      Elo+XNSWvS+5pT5GwGa+i5hTvlMLgz72cPm9UPffPcCzv73g4Ek9OvVcPoM9or4rEo2++p2Wvri6
                      db0ut3a+yXacPnBIpb1+0kI+uFsavSBDh7245Hi9uLtOPdDV9L0cK6m9QKNCPah5pr4Aj9Y7ONYP
                      PbBErTyYRyK9FPmgPTt0kb6eBkK+B7SZvtBT7rx7kIS+eFMKPWB7N70gaaa9mIUMvdj+Br5OrIm+
                      OzhWvo3ljj4LlHO+9YaSPoV6ij74cEm9ju6hvk7aRT7mbEQ+KOMqvaZL973YVom+AHlAvWM7Br4g
                      K/w90EKBvkf9kT626Bm+nRqCPjA+kr3yRzU+TGXRvTilfT2c/5C91qpavlY+n74x04o+QEjSvGu8
                      L75AK6u9dTuZPpLTCz5Yeh89PKS0PTKyDz7TNjK+MntzPtDiab6UtqO90jN+PqH3kD6wd/29Am+D
                      vp5EJj787bu9dvp+vlK4Yj5WT2E+Tv+SvlP5Gr7IBQA9xvchPl38mj7NgoY+K2CQvgN9Vb4RYZc+
                      kA5CvsD8XL1Xlaa+nuOfvvAtoLxQN16+6hFyPgbUSL5YynO9QCsRPm5Xqb4DyJC+MNjPvcBNLT2s
                      f9i9iIUgPbqbob4qaX0+etBzPgCzGryCRzM+qnpbPrjyGT4zIF++gCimvpB8vzxU/oc9ZpmrvTB0
                      c76rUYS+uEMYPkCME75Q5/o9IBGNvTpbdj6Hf4K+/lV0PnCaAj509ZU90J3cPBiLFb26UZC+asVt
                      PmhfcT1O4Ea+GpIhPrgVdr6/Rp++e1OCPjIkVD6fAqE+wy2fPkq9OT68W8m9ROnOPfCw7LwmTQy+
                      eMwVPiA4tj1L1IM+e8divibPfj7MX7Y9mJt0vWvUMb6aXVU+gvtRPjgeAj5K004+02SDvmK+k77A
                      jNY8QJsfPXxv/r0atBM+I3MbvgA8dDzEuu89YBtbPcDjxTv2TMu9INKzPaKEFj718YI++CgMvviZ
                      Az14giO+gp4uPmDzqr3Pw4I+Ui43PtBQAT4IaTm+gPrAPNDLjL0wMR4+YX6aPkZnFT5T0Ys+KD5A
                      PUiEWb0QdyY+XEKiPTYj9r3mwRc+ggNBPvitID7wNMS8oFQDPgDI/z1Y5ho+sFRqvltYl777Gjy+
                      gI1kPXqCMT6L4lW+FqMdvuvlkr5Atz29uI1KPURr8T1s4Ie+gPQDPbaibz41bps+cuk1PmAM4T3I
                      aAY9BtZzvvaBC75adFs+JtV0voCkWz3AJFu9ZhvsvcaG971T7qA+QM6kO0A+97vA4pU7buSevgiG
                      L776UHM+CDYOPrhHF77gxGo8zJqwPfwMgT0bM50+e4lGvgpkdD7cZJa92PRrvW7+n74YsHy9gqFp
                      Ppa6dT4gs5W+sOg6vsgHOL2g/Ze+ROzSPXJ0cD6S/3I+hjTIvQh7O72gzEm9KP8Mvcwizj0+fgq+
                      4ASJvdgvbr1AyBK9BIaHvoZjS75Coww+B0CfvrxDpj1wnmG+ijRgPmj9kb7zKyW+5qNIPqxkm70d
                      z4A+ogEsPhau0b0Qcae8AhU2PpZHFz5cU4e9yLWevnHonT5A0oo73iwtPgAqajrGDwe+c9RXvvw9
                      4j3W+ng+AIVqvTWMgT4DZ16+e7iGvu4PSj5A3Mq70e+XPt7Leb6A2yG7snwrPpsWW754WKa+w3qF
                      vsw2kT1IDW6+SoIyPvMGeb5bMJw+CI8DPZChrTx05Ji+AEiZvmPccr7F+KM+lrd3PnY4Bb7CBGs+
                      mCFBvnjOTr3fV4e++fmlPlYZ6L00Oai9xulcvjhDCj0AhLo5MO/uvQqEPj6AMqk9LgJ1vsZJP75i
                      bHM+nPuWveADwr0gAJs9ICE3vJkXlT58vYQ9YlWDvnwqhT2ZlZw+LrWfvmbH272ACtS8Und6PtPy
                      Vb4wwdY9cVGRPpAI4LyxLYI+XqI2PqjdGL7sIqi9q4SnPhar3L18y5e9b3+KPpfThj44uSW9tn50
                      PmDfK76anIq+DIWAPdwV7T1WKoi++GY5vguTor7Sm1I+EOIWPhukGb4wDJ88puYWvvMQBr7TV2W+
                      AjEUPkLYOz4wKHC+5mNhvhB0973gdpC9oDvzPVAilTy+NSm+1HfMPcr2Vj7YzXy9oqlsPofXhz7K
                      fzw+gAVRPWf5pL5QTPK8y/iPPl9ohj4pP5M+EAKrvOyKh76aH0o+gBwDPSTv5j3w7s29O6GQPll5
                      nj4+SYy+2yQpvkOOP76wNry8VEujvRCygL7gxCO9PF+ovZsCN75yuEE+1C2qvrA2tLxLizS+MO9K
                      vlg2VL3WD3e+0uAUPoahmr4Akmo7AASzPeihe77Aeq68SL46vdyOgr1rSY++EBc7vpr6fz6AUV6+
                      VsFzvtCek73moju+mPWCvh4nEz5VLqo+5LmcvkqEcD52iDa+UHiaPJ55HT6My549bigavrKYbD5E
                      1I69I8kIvv6HF76J+Y8+fdqoPqDJLr7MC4q9BmMovtDvlb4GEH8+dsIovhgSGD7M/Nc9ew6aPr5A
                      ED6IPHW9g62jPkRknr0qPEo+cw+ovmB0GrwTdEK+JNXUPV2Bhz4Aycm9W5+KPoAwWz3gYRw+J1Ka
                      PuawVj6MuZC+q1yHPkAkt70gSYm9W86gvvGMhz4opkQ9qBAavaBroL7i9yo+fDGevk5YEb5TQSW+
                      7vRuvnCyu71BNZQ+cfSLPh6QW75qOHM+jYaMPsLkCz6Ar0O7crpbPh4xND6QR8k8AOiCus6TOL57
                      piS+ar41Pkiti74oShq9BEeRvr7CPr4zDl6+0KCivGSXob1tmYI+IA5ZPN3omD7AejU9gDvOvfJC
                      Uz7C2Ac+8JPEPAIyXj6uMwc+P7mcvpQLkL20yM09neejPmBeKb0RxYo+oFigvuz1wb3kw4e+gMUL
                      PgJ1KD7vJJ++a45EvohYJL7SqmE+VB+gPQDeLrr47Ge9MOH6vIOrQr6cnoG+gE9vvQB24DzgEuE9
                      8Mcqvu7iDr7EzKS+qrZjPpl4iz5SNQk+yKZ5vbMCfr7Hupo+2DZYPW9koD585/K9aG8vvuBTH70A
                      AHm8a3mTvuAJEL2SBYi+UC7ivSYQWD4OlIy+aQ+TPpLwYj7cXca9zzKBvjAbzzzQS5Y8QL6fvvF3
                      qD6QBeu9gLwOO+4odr5YKnq9q5glvnBUqz32hX0+whZBPmDbBr1I83W9wPKMvA+tiL4Q7o6+gGOw
                      vFvLcb4gkVA8YEAePXq6NT4ilVw+eaCoPvNRc77XhYC+MPKGPfUtpz4aDlU+eHwMPcG9hT40woa+
                      QIHOOxZ0Dz6mT3k+iU2UPjNPOL7TyQK+wwmFPnC3V76qKlo+8KqaPZgqST1mq1m+YFsGPU88hj5A
                      vHW+ZsGPvuLAi76gbxQ+Nl2bvoBTTDu7v6E+J2WQPk4OBL4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE2MTI2NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMDE2MTI2NHEBYS5kAAAAAAAAAMCij72mB0W+UBj+PEjwT73wqNU9aeijPnpPET6w29C9
                      dp8KvlgGGz4cOom+3pVhvnvCA75PG5Q+RMH8PTAcgDzTehu++uB3Pv5eY75cDPm9ABT7OxA3rzwK
                      p0c+3G7yvZAUBb6g9lM98307vvZppb586pO9QvgBPoMKWr7Aoqq7o4FZvsbE7r37/E2+svt3PnQB
                      ob0gaBA8Wz5UvvLuQz7Y1RW91DGhPXIWej5g9Xo82dGDPlqPl77wA6a9znY+Pnx1uD0w0pq+GodF
                      Pqitfb1x75I+UOvLPcA+1jwyBlo+uPQbvaHklz5W+Nu9AWydPn5zTT4kT8o9IE8qvv7EQD5i4zk+
                      8ClBvmhwHL5GxHQ+K3djvhDVy700qZe91GDoPUDreb3AAR+9OKRVvSprbT4C8mo+ECAEvjh5Yz2a
                      zkM+XJmMPRKNOj7oySU+kk1xPgDQfrt754C+GJ1dvlK5YD7+oQq+HDz5PZsIir5AJ4E8UHCyvRbi
                      FT7qEi8+auiFvqDPRj09C58+0y5ivp6LYT4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE1OTEwNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjAxNTkxMDRxAWEuECcAAAAAAACXDa89WDZmPGldtT3AGqS9ugcuPQ2Ksr2T1Xy9ylmA
                      vTdhv71+2hw9CHaBvOMVxz2fmbu9mI1mvABC5Lky/5a9XbDGPVigp7xoVFg8bInKvFTL8bxrRcQ9
                      EOgIPG0xRr2ZXJ097PqcvPJsJD2aTTw9YRmnPUCkFr0tezK9QJ0+vVuZyj09USK9chxpPdiIp7ya
                      Oa+9zsONvewCkjy6vDy9R5NxvYI1jL0AS3g753NwvSwTB72ojYu9KOCRvNjCwzxsAOY8UvUHPSOX
                      sj36BB09IHrAu9sazD2a6FY9gJytuooCU73si/Y8zJSgvCNekD0KORi94KG5vMA+qrp86+88ghix
                      vdDLy70ReYM9SwvLvVAMxbutKTa9ME+BuwgslL2qw0G98LZ/vG5sTz3/eKA9mMGdvIBerjoTALm9
                      3vOfvQP+jL0a5HC9Mxt/vVYAgr2uQ4m9bsYYPSIbBj1gBXm7Cx+wPb4Ebj1hqrA9IM2svJvXsb2K
                      vx+9WP5HvBQlnTwsy6I8dfWTvdjJqb0KfK69p7FFvatGqj0sZPI8iFDkvDPdjL0CqDk96+GVPVqc
                      Tr1Sug89gGa1umAUf7sWnAA9d/J7vQWHh71a5ye9oDf6u2MjOL39X729UwydvRHIzD0qGQm9YO7e
                      O5hyQjyA6Ti6P7W+vbd/mz3Nu2m9DgAhPbehYb078ao9z/OOPWD+YDurSpK9eVKPPRkplD1Q9Gy9
                      e9SQPeHRkT3aXwI9G3iSve14m70idgY9pBrWPNBOaL002PS8ig8qvQIvcz3VF5E9qoZKvfslkL1i
                      sZq9goWgvdLoFz2GcTo9l3KqPV7HTz3zl0694IcevXI2Cz338oM9hGzTPIAboLs67TQ9wKkOPHKC
                      Nj2GdGg99dPFPZCEPL25yqU9YAY6uxDYPL3pNJk96pmdvaIZOT0surY8cECMvWuFjD3g1OK8cP9+
                      vYB88bxShmk9pPzPPOXhnz3A5hA7QFI4vNg+Hjxi5ai9REkXvTMnwj3K7Gq9imYuvSjFCDyGjIC9
                      qWKxPd24h70AmBM7J6YnvRj9BLwf+ca90v2ivdArPr3uyRQ9R0skvSI3Wz3QGJ27QMFlu/Ceb7wI
                      epy8Sn8pPUuVyz30jLE8kwfDPQAmkTt1J8g9FaShPZDNw72x6ow9WBIFvDPpvT3nFYo9+Wy0PV8R
                      sz2KB3y9wMyRuopCkb34DJI88dyWPaBkUDtwmRs8GUiePQA457kGyis9bAKEvG3rHr0rc8w9FM2j
                      vKw84zzUvoA82QCaPfAIFTwx65s9goiUvWZLEb34X8s8hQidPe0fbr0gR+S8wIFlvXynDr3cE888
                      AHLEvAKSYT2wCEy8MGm+vdvTq73DUrK9uji8vZGErT0IBpk8g3NvvbYbLj0fV7Q9AM6XOwLEsL29
                      4oy91KOhvGJ7x71AI3i8vnYzPUW0vT2b9JA918xcvbjIy7ziNxI9H4+3PQCgvjqq7Xa9P4W1vQih
                      4rxa0j894HPcvKJ7DT1J9709v4arPV8Mr70FQYe9WKtkPOp7Yb2qH1e9902ZPSMqT72uvp+9ahAk
                      vb1QZr1EMoq9Ko1/PdCnwbvKxYy9LqZBPbfdrz3IB8u8gPIMPJY9ST2yaHw9wPZoO5U9lb2XXIk9
                      jSU8vWDTgTxA4Gg850GCPZVVs70A6QY8DfuDPS4lKj29p6O9QhhlPatEvz2CNis9GxWTvQKqCj0W
                      8n09EdzKPcccjD0MSeG8ACSsPOCnyr1g1UK9h2HJvYtmtr031x+9KONnPM33hL0nOZE91vtcPfCv
                      XrwAfem7irwQPZ2tRL0gleW82h0PvWLpo72A4Tk6ukhJPR/gsr2I08o82updvSZqAT39vKU92TzJ
                      PXIWOT1S+GA95yLKvY49AT0aoQA9Z8WSPcvvm73QGGm8sKlvvQldlD06TlW98rslPa32qj0yRGM9
                      2mYYvTrOrL1+QJO9IUm0PQGxkT2AylS6wl4GPdArljsnS5U9HqAMPU32Wb3Iu5K973XIPdqEWb2g
                      +ry8ZzAyvboOc71Yd5K8b4iwvasQnL0hpLg9ihW7vRDTUjzmsYO9o/gmvY4lND366lU9UzZyvXr5
                      sr1CB4S9S37KvVPqjz26+g292wSXvSEcgj0ARF69s4WLPQ0ivz0W/FU98qZpPUYkBL1o7oS8YrU1
                      PVA0IryKqFi9A9l1vdUOgT2Qk1q8RwazvfhgwbwSGyo9Z5J7vel5mz2EbPA8rLbvvPn6ij3UK5m8
                      fu8zPe6HND2zWb+9wDokvPUdnb0j9oI9QL/wOlwjCr2AOwK8krwTPT80rz3SNW49OaakPXboUT2h
                      CZg90AicO1cUK73wbW88wAqcOk2Rdb3gDJK7kGsXvUIhVD1LvaU9oMPCu5TV6DzCcbW9VV+zPerp
                      eT0yWXM9mHXevKjDPLzSFbi9bG3oPNPIJ734aq695B3ePGtYwL3zL7W9aN7NvAB2vLppzqQ9mdWK
                      PVVYsD2tMLI9IlgRPX3Yq71zFLs9PsNUPVIBbT3AK1i8jfRYvbY8TT0pNbs9AP+DPD5Ch72gm7M8
                      gF2wvNvOqT1aeBC9wXvEPV5KnL2pzpQ96DVOvAlpkz2K9nw989ykvanGpj3y3js9jv5wPTsJgz3Z
                      PMw9EDFvvVn3gT2GSmo9ZutoPcDzWb1XwTC9tKPyPA0KG71rAZK9/JwIveGOgD2qBkC9YCy1PLaL
                      Mz0rOpU9gPodvMUMmT2+znE9LGLAPGdeXL1c4/M8S+PDvRISAj0YtzE8h4fIPXFKjT2m1UE9oKK3
                      O2i+oDwUe4W8wPYfvazEmLzoNb48pOyFvXDEKryMlAe9LdypvfFExz0A9Rm8sqUPPeAKqbxoqTU8
                      mu0PPdAtlbsQEg29UIu9O10cyb0et6y9HTm8PbFgyD1EyPM8gFB3vJNmmz0ORn09kP5SPC9Huz2g
                      9ZU7je24Pb+RwT3gEsq8asM1PYYcED3edTE9AMkQvRa9j73lTsI99+tGvZhYnr3qLBU9JBnyPOKO
                      YT0HarS9wCs8PED5dDxnULk9cQaKPZTjCb2At8C7OmghPYNWlT3QC/a7UDY4vE4DYD0A3Jy6mv2x
                      vROjlT3Ad5O8NLMTvYBoMTzLWcy9ReaqPXckmT3UtsA8vZecvXH0iz0KYzS9NJ6WvECzXjtdXFe9
                      BbfHPat6uz3Yofu8WAi6vGD+VjvqG0E9sxOzvQFIij0ailC9NRyvPYIujr0XIUm9Bx2tvfbuNz3+
                      noi97FWBvBhGEDwCuZ29PT6tvSyErTww1rg7ZMITvYpQub0uIqO9AIgZO6C6L7vWcw+950TLvbAv
                      vDtN9os9FE68vL7GDT2esgI9gLmYuoA9VryLt5o9IIDUu4CkHzxAghq7LbqDPQD7Ortmmoy9zblb
                      vV2vxj1Ln6I9qXXIPURVE73hZMs9qLC4PFtRiT2YM4G8cJxWvHqxRb0ljIw9NwxkvQBAyLkPLqY9
                      XdXCPfrvYL0yM1M9OoQ5PboGUz0w2607uM/cvGJ7Oj0fE7S9QFlcO0OtGb0seqc8mE1aPKCirr2H
                      d449SbyyPYCg/zqKAn29eTOoPeEHsT2O9Ws9AMuQORhPUDznFjC9DGv8vDcmur20sPq8aBmuvFR/
                      /jwSjA89gOulvY0niD0yOCM9YHcpO4BXsb3A9Ic8FMn+PAgixr2Llr69pAnUPJ8IhT3R26U9Wr2F
                      vcgFhTzRFKU9QGevvLKkPD0iCEs9QMVUu7RrwLx1Cce9EBVyvaKWJz32Ilc9ZYPAPYaukb1geL67
                      gLIMvExNFL3mexE9K4yePZo1BD2yrDM91U2bveBlsrvsz7u8gDGkO6C2FbvUnPS8gNKPOqzsqzwA
                      zTq77aekPfTw0jy077u80I67u6Bn7Lu9u469TmRzPXAQKDzCiwg9Gwy3vUBhtTrDJ709tHXTPKDf
                      bb3K1YW9TQpPvQiVlb2rdZi90B6QvVKKu72WoQ69elJNPWDmEb3dlUq9q3ClPf1QhT21gME9fkst
                      PUNnrj3y0EM9uOKcvFTV2zzY0i88R164vflfgT2dAL09heifPSgjIzwAk2k8Fz+TPfgfnzwZysM9
                      4qcQPWBycL3b1aU9jlt5PRDzDb3gDsY7fWOYPWARpb3MMu48Hj+pvWxKgbzcwf88VJHevLQr/7xI
                      XZg8ggVFPdB0VL1XtVi9FoBuPepfxL3Fx6G9YFVwu0a7hr36kZy90ySEPWw7rbwyEyg9aNaOvcBy
                      Gb1oFfC8TshWPVeCpT0yzGQ9cCtbPFL0AD1HMni9qEmkvG0xeL1MdIG87P7RPLM1pj3AAA28Ottq
                      PZQGtbyswNw8QJiyPIbsZD2YALU8uVacPaqWHj2oq6O8WH2tPPCuWTz4a5K82nmevcnkxT3UYr88
                      kHq4vQDmwbmU3uY8oPF0u4ANtbs+DQU9mvU+vcqlfT2oXuS8PP0Cvb4bgL0fwMa9rAzevLLxfT2X
                      TkO9I6sjvdq7Nj0KvEe9ACM3ugk5tD3AxFG823yZPaBGqbxSqWg9wBAyO4Abw7qAmbS7DNSWvAWt
                      wj2ACzE8PUFRvQyWozxttyK9J8h9vUC1eruY3ju8QAuAPASt8TzajzK9YN/nvN1DMb3CXyc9ZjAs
                      PQ4iYD1DiGa9Rf+SPWSe4jyKwAA9aFtuPK16G70OiCI92MxZvOUAhj3SLSw9WzLEvZPcdL1b6L89
                      QOdFvVANezwGcQG9EBQDPPI4VD1oA2w8k/iYPQRV2TzoQ2e8SqgOPfRqgbwAIyG6YRK+Pa9pgj3m
                      1DY9a06cvdpWi72q5G298kWEvXK4Kz0AJsM5IshXPQ10ar1Ia7M8OFaZvUUYoT3L+ZK9aH05vOAu
                      nLtg/sS8jIbjvD2AHr06M4u9r+W2vRpNk72oDZO8gFbeugpiDT0q3ca9tr4XPSg32LxoQZQ8rbNZ
                      vZD8Cr2sHoc8Es1yPeRx7Dx9iL+9s0GnvRhkZ7ybc4292GhCvE1VR71QLQa8fgMKPXquLT2AQ8K9
                      oLpOu/I/CD1dz769ABYBPFYBGT0qP3Q9Vo4BvbfcYb2uhGg9IGPju78Jtb0YwsW82Y6UPceDiT2H
                      6Kc9v6KuvX6NFT2wF3C8oI2Nvdt/u71Qsg68nURCvTqSV72Nzqe9AJMcuqC9xzz/v6k99qlUPavA
                      nr3i9yE9kyervUoRPT16yGY98E9ZPMMRHr3SWzc9AIO5uzDCSLyYgA283imSvd44n73m0AE9l2sm
                      vbIdhL3owWa8Ksd0PUEQkj3qcCk9YIMXvXWYyz3GVyc9s/dWvRpaST1tdqM9dJjJPMBq/ryj3409
                      FngLPb2aMb1k1gW9V5o+vT5JjL2TfIQ9mP4XvBJxTz0qG129c1qwvfx6AL3Ny6q9xS6Jvc3rVr1Q
                      aGy8eVaHPRA0AL15cbs9UWOhPf2vpT3MvYI8GMijvSB6jb2olYS9ALAVu86BCT3oomw8Bnx8PdCq
                      1zs6eB09xPf9POB17DvIX4C8YQi1PVBuHTzB9Zw9QbqJPShtUDyA/nC6GgiCvdBbXTxiibu93bSl
                      vb/Ctz1d/GW9M7euPeanCD1XvzS9DE7EPB1OYb2oyea8QCCPvRTxmbxUwwO9U5J2vSZ9eD0g78k7
                      bCqivJhzojyYJ568nSW2vSPktj1e2Do9pW26vQyu1LyAuPW6w/WyPXbag71uGiE9vpWRvSimAryQ
                      00y8XjQsPX24qD3zbme9g4xcvdY3aj2edDg9cJM8vRBoIbxTZYI9IAaRvGKnOT0Q2HG9NHD2PPIJ
                      XD1XfIs97s+QvSBILr0Yv968AIuLuWbyJT0p5oo9IZ6PPXyuzzxYy6m8Aw03vbahBD1IqaG8IL+B
                      vamGyD3vhp49eOnZvACDcbu9wzW9fXylvYarVj0XIsO9oLHRO3K+Cj3WDYC9bA6nPPNvNb2h8qw9
                      mI/5vNlGrD0ql0c9RAHxPOHIoz3nBmi9uM2APJPOIb1aJYa90EtevcLEFT19VMG9AktiPYxtwLy4
                      ob48m4WUPUpkbz1xJKs9qE64vArkTr1WSmk9j16EPaR0E70XfI89vrFzPUCjxrpM4YE8ZjMCPWi2
                      dTwA3pU8kPJFPCIIAj0wOl88O6etPRXYxL1YXq28F2tAvbKQGD0ADAs6g7aFPXLgXz3Q8ke9prMs
                      PSBNnjvDe5I9KH+OvIfcVb2NZrK9uGCpvc/1xr2S3BE9tmkLvdBQK71iSru99iUWPXEXnD3GeJK9
                      On1OPVNmp73Afp06tspdPcyz0bxtYjy9q6ahPZCeUrxAcza7Hq1zPUCQTzxQKJo7AnKCvUCbUbxG
                      yic9oBXXu78wxL1dmMC9HqRlPeAvh73wimc8oCoKvUcbwL2lbag9VFzqPPRyhjwzvMi9c2VFvcO4
                      xj096b+95eeFPZyf2DzKZnW9CqSXvXxbEb1w3Y296vcqPaqtQ712dxk9APtWvZp4iL2xhpM9AZ3F
                      Pac6pj2Fzb69yC+9vRcnsb3hxL09cOwpvUDcFzt55rQ9qZ+BPZd6I70GQQW9jRSZPReoQr0BZ5o9
                      fdGPveBHCL1A46C8Ga6jPajbKDwrGJQ9sH1mPPRfsjwW6Tg9srppPXRg3Ly00Zs86MfRvB3byz0Q
                      dZC96qHMve1COL0mtA+9OfejPQr9GT2wchu9ADkAOnBWiL1C2Wo9eAPAvKdqRL2w8ru7qNyovEA6
                      HDsMhg297dbEveOyqj1APG48QH0TvTgyyr0gcqe9KlobvdCEijuW82s9q7OfPUg8yL1h+8k9tqOB
                      vRIjFD2wFhs80E4jvKMdeb2Omz49sbKtPdXKsz0KE3e94OOpOzjtoL3I/8e8iVizPTaGoL0QwXA8
                      RP/mPHIbEz2O0Us9O13EvRRyr7xUFdk80HMpvWveyr0CPQc9Du6kvfabjr33PEu9zOz7PGiF9bzo
                      arE80CNDvW2HvL2srom9LSufPSDDnLx4vca83iFhPQQv7DxDoKo9Wop2Paa9Cb0ARcO5hDfdPJwp
                      hr3YmvW8UPH4u5JYUj3AbE27+psavVdDfb2zYqG9IkwWPQAl+7wXC1a99xauvSUhxT25O8A9qoKg
                      vXOcmb23/0C9qWrHPffZeb32P3o99B/ZvBA8U7w2bQ294CyZvVhRALy5hoU9APojvcD3IbvIh9C8
                      PFcIvRcqv71owby9BFPWPIJUTT3uxic9KGqZvGq9Qz30y+I8bVyCPeppar0y2z092PhUvMByer1g
                      XHC92eKPPR44Jz2tRsQ9xQeGvVWkkT2YDJS8e/yAPba+az3U37w8evhvvbDweL00wsK8LWWcPdhG
                      ATxfNaU9kWaFPQIgAD3sSNe8OJrdvABRyTyphaM9SBuCPJYGOz2AAfe8N6J2vWo7O73sOOW8QZS/
                      PZVZtT1q+ne9FW+tvRgXYDxqobO9ijR9PQpRfT3UobM8u9GzvaC+T7uiaWk9oClPveRaBr0a9hC9
                      wK0mvWiLWbzCRbi99jiUvWqAEz2vO7A9GkQKvctwnT2Sq1Q9ABAwvOLOND3SVyw9O46lPdypE70A
                      fb088mF1PWAmFbsqul698BQ/vDUzyD1EwNg8H8ybPUSc/zyrPIQ9wtarvX8Doj1kqtY8PnJiPSJi
                      KD1XqVy9gqSfvTSp4Ly/ecc90F6lO/I+YD3sFAC9sAlQvZiFyr0pSYY9tPyiPDK4Vz3I6as8oGYr
                      vU2nj710g7g8d1w6vYsYv72siJI8JtJIPWAgUTs4hKa9pFLUPN29K73fJ449bE6cPJCeC72hUrg9
                      Bgo6PTaHGT0sCZu8VJHxvBetsT3cUvQ8UtB5PSV1ob2woBY8uKHzvN1vsb1AXH88VucGvTAnojuA
                      Btq8YfmMPWAfFzvaw1w9YGBKu7buSj3o8mG8YJUgO7Aat706dTa9msIPPRrTy70QmxI8iH+GvEe7
                      pj34Z8c8VlUIvXw5g70gCYG7akQovaj2E7zqLjk90MvkO5ATHTwgJsU7GvU3vXK1jr1uEFM9gsM1
                      PUAdarwwmKK9KBUbPBhwlbwdUrs9iZ6ZPQfrsT2Xm7E9PaBFvahXTDwAFte6UNHyO3CqO70AFYk7
                      4JPkOxjiILzCy5i9sn8MPTSM3zxqsBE91ZeavfZnGL2qpCW9seiIPfC9Br2hhJw9XpyFvUP6Gr1A
                      1i48BpcXvQEWpz13pag90Ga+u1zL/TxzxC+9pVDIvfPNiz3jmrM9AfCqPafZHb2gu6W9gPblvDJQ
                      u73+8FA9cbmJPZvVvD2YDYO9gNWgvKyYpLxAgwE7aULLPWZXYD26Jlu9Dho7PW0nxj37VI49TCyh
                      vLfOOL0I7Ka8aEaJvRZjED1msRo94HjMu+BTuL25rss9jTG1PeCkDL0Jfr89FLOWPMcHpj0u12s9
                      imcIvaghsr3o2BA8UAWpu9jmXLyKyi+9+RijPbv+nr2gSuw74UmpPT1Htr3QCRe9QPCyvICMkzxX
                      M7s98kgfPYRp1zyZhsQ9zXcivSchjD3nZ7+9wIEAuyYiWD0wEii8jBPbvAHhuj3zqkK9oKs5vb7T
                      Cz25zJo9oOMPO/SZvryJJK093CXTPIsmqT3yVC89ATuaPbk2mD3nQy+9lxPAvczjAr0DSKI9kSu9
                      PYl8gj0ZWYE9IkkDPYITGz0NmFK9FBTgvHmAiT2e13096EglvB1lY72j4SS9Ew5ovR3APb2jTz69
                      CgUqPVajbT1gBHW9nyeyPW1pgD3Zn7o9j+a3PUkirT0NMGC9AIhWuywr9zwE0Ok87jYVPUriUD24
                      a7a8FVWdPdUPlD1ODBA9ElVNPQC4vDjDiFa9Jm8DPQVhqD2cjAC9cCUAvdflrL31WIA9+uNHvdfu
                      vj1svuC8B5xevQCCojk7z5g9uOrzvACwr7nOqW09y5GsPZLSez0zR769bO6WvACMyTiQiAy8PP7v
                      PN24j71lecC91sQyPei4tzyFsKC9QEdxO8zKobxfa4k9kQa3PVFyhj1G/GY9QJmMvDkexD097MO9
                      fYGxvWD0Hb2N82u9MCw3vLhHyr2kR+U8S+nLvbLmHj0gR9S8IDLQO1+SrT26RBU9By2ZPSiCaLwY
                      MI68mUi9PftslT12jnM9h+E2vfqijr1lAoO9bHf6vD2an730yL28Up/EvU3umr2iXQA9SOOavO1H
                      jD0Mydk8UcW+PVa7ST0RDZY9bQnGPXq4Vz1uj1E9ICa9O2C5mzvad769zwayPc7MKD0R4IM9a2Ck
                      vfZbjr3jSmO9FGLTvDqes70tC5o9M9Q+vcGAij0pz5M9aA94PJjqObzsPOK8EJwwPChBejy+XZO9
                      bDjdPOjxODzgEcK8pIfjPD6XYD1Nu6a9wAjvuhCFZTzkc9U88s5CPVumtD1DRLS98PPGvSD5lrxV
                      76W9WEhgPEvhp72YTW88W+SwvcZmHj3CVF09qHSYvRLdQD2W0WM9gC+tvSLCaj3QCcE75lhxPVhq
                      ZTyXNqc9vqc6PZEqjD0L+8o9WL3xvCu0ub1wEhq9AMbGvPFTnT3TYES9IUGYPa5SDT2arTi9qPcR
                      vM/cmz1ynsG91dmSPYCVmLvGwKm9xSuvvZAmO73fILs9qC70vFDoSL2X2FG9GC1jvJYALj0AEt86
                      WYCAPd5Pbz2AGdi7XkUYPWQH/jwW1FI918k3vWBunTv5Eco9OL2hvaA8t7xJpZ09AO5QPNTF2jzh
                      jcI9fS6CPd/Gij3Qw8e9QklqPadXQL1+eiY94fahPW6geT3Jn8k9q8e1vRoXQr0AoYm8jqtjPeEW
                      pj39WbY9QRa9PaCmwDxlrMQ9Om1VvQAWuzrlnqS9bp0yPUBWgzxYv6q9G56+vbDiSDxe+3Y99Vqw
                      vax3mzyfR7Q971KQPQS82DxC0VA99DC2PNTpqDxh5aI91ns9PVpHs72GFE49+3e4vTTawzwiRWE9
                      NRCCPeD1/bsg3Li8GEE1PJIPtr1Dl8G9iauOPUSg8TwAfoI5cxWdPeiJI7xYq1G8BlJIPcuLtz3x
                      /ZA9KR2GPR2WSL2YFOK8HpaXvQYwIj1awxs9mI5ZvIBHmr0FN4m9LAf9PFbicj2o9ZW8857Ivfq3
                      sL067kM9TSumvSzt1rzT1Ca9KBa+vayzzDwgU/u79yRzvY3kWb0NqS29jOCJvBgDaTwAPvw6lQ+u
                      vT3Lhr380gq9Ea27PWK+mL0C3D09yiN+vdqtaz14CKO9VVqQPUKqvr1dhCy9iC6JvXXbqL3x+4M9
                      qCEYvFiBYbzR+4c9PQ3HvfOmp72Vd7e9wGTlvNBOWjyJE8o9Cs6pvb4EAj3kkuI8VnaDvWKvs71H
                      PL69jruNvYNtqz0aji89ipVKvTYpEb1h07E9QNM6OxCelb0rfbc9dCalPCARxL0N21O9cjt5PUU2
                      kT03L0O9ADnuO51hjr3KeSM96BCAPCdZe72BfLo9FBb2vBb5bT2xlIU9uPOlvKDlFDtWz349OQax
                      PVQthjyKFHE9zJ6IPARx1jyjtC69Svozvbdkkj2XTj29iDrJvfAok71W9Sk9ILT0O8MUe72aQzm9
                      WLMFvGGVrj3yNAs9gJmcvHotcL04n5E8KAf8vFKpkL2PSsq9KDQxvKKuWj2dW6E90FBqvZA6hb1C
                      PWI98P8qPBYPF73N28s9Zjw1PUz04Ly4CNO8eCCwvZSTE72n08M9xQ2XPUJ1rL2qdlo9EjK8vayu
                      4bzWVTU9pAkPvQCAOjsq7Am9mJJavOfvVb1AOns8dQGavSioLrwAV2I85uEJvWegwb2ICZc8x4uj
                      PTg+ozxsl4C9ANTKPMdLb70TEFa9EmFsPQIMQj1a/ga9kNQNvAjZib3OfxE9IISHvDC2szvgYYs7
                      WVmJPbCuBLwLUce9inFlvSLKib2iN1Y9BW/JPfG9iT20vLW89daevYDnubtgZ7c7xqZRPfODPr1z
                      KK09KUyyPTK8nL0tgcI9K4yQPXhupzyAmLQ7Arx0PSLYKD2gObu9NmYZvVtwwr0Jfrg9m0SYva4n
                      p73Yeos8dNPwvMIQHj3SP289rKiQPGJgOT1yl4G97WhKvTTNB732jzs9AFUBO6DpwzvoiSW8oNbj
                      vKBGJ7sp/7E9lHbCPDnPgT2ouF08KtM9PWaoDj3gx6E7Vjt2PcAyzTrGmRa92lQ3PXjqlryrCaE9
                      V79cvX7tUT21U6E9F3A8vcAhHLwuFGs99IXFvGijUryzSaU9A66pvYOUcL0uL0o9PR+fvShisL0N
                      aDS9Myq2PdklpD0GaBc9xsiDvbs0sj0g56u8wjQTPdBMuzsGsZ291BcDvVjMojwOGCE9ALyEPOMs
                      Qb1oQqG9DF+dPFrOeT1gKM28zIHdvI1yT70qYLG9FlEjPZmMmD0ljoo9rJmmPLCxFzyzp4Y9+iY3
                      vegS+7wlx8m92G3LPLTOmbxm84e9VDWavC1xHr3+8Wc9Ms26vV+WqD20K/y8FPERvZAvEjzz4Ke9
                      /OvRPAlivz3TIZS9etFNPbZPHD2AwTW6SHKcPLfnuL2d56c9Q/VXvbIGgb0ntYI9sPIFPNn8yT0g
                      A7O7cJ8mvZgWhrzQkZO7mNumvTU+xT2Aqd079P4NvU0hiL1Nzku96N+9vIC4Zr33IIQ9jZNcvddt
                      Wr14hpM8Sv82PWd6Jr2AmY26QEbOvBdvSb0Rs4c9I8/FPbserz2hkpw903pIvRD0rL2ERgO92LcG
                      vNo2oL3tLFa9V163PXc/Pr2wUqE7sPLAO4bLSD24Nse99A+FvGGliD1KbsG9Ec6DPeQ4g70eiXM9
                      9y8pvXdPQb2RgpU9X2Gtva0JGr2QiQq9sCWnO28bjT06uS496MmkPE95xj22OaW94COxu5oXrb1L
                      W7A9dWemvRSehjxokay9EP9TvZCkH7wSwh89pWyXva2mnT1iCyA9ffmGPefMnz041Zw8oNC/vb0q
                      Tb0jp5Q9ivEevThGg72UaIY87tobPUx5BL1gIiW9SOvdvABg6jkD0z29OSqKPat9nj26Njc9jPLr
                      vO1gsT2TDEC9mfSGPXIFSD2CdJO92i2EvToXKz12qUU9zNGTvHfrub0UEpW8VIMLvabUXj3SHIq9
                      XusNPeJ0mr0AevS6YEOHOzd8Zr3PnMq9ArtlPabRHz1jvJY92kwVvQHasT0rbZm9rz+fPWGAlz3A
                      k448ggtQPRvPtD1TTK09oCbfvDjp7rxIHoO8IjlnPVfBkz1CEai9iJzCPI3/tz1bLMO9MMr0u+Pt
                      Wr0lMIw9ff1Nvfc7M71tIiy9mEacvbaIE71+xH89Z7SqPbZ6ND2Amp26AafCPWBJ37ugmPK71Fjf
                      vEt0pb2waoi7Jh5mPdgGhzxzzXu9HedNvTmGmz2bY6s94VezPQDjub0x15E90AFIvSsOvD1GY5q9
                      z16mPZpQrr0yzVA9spNpPf1ynj34nZy8eLeNPGQ5ir3wL308SMmvvIGNrj1FyJ09lKntPGwoorwQ
                      8pW9TZeXPR3omD0ohJa91HD1vELQQD3yesm9cp9UPaggI7zJhMA92EXQvGo/Ub1gRUA76Pu5PAve
                      oT2kyNQ80EO+uwE9wT0sDcI80wDFvV/fuj2ihyo9+g6svXi0nbwtMSO9K/mKPV9/vr0Plcm9wIRK
                      PLUaqz2wfEw8QvFEPRqNer1yWzo9KHgMvOCBPL0jppK9CjcDvWHGjj1YanE8etkQvQwu6jzTg8g9
                      enY1vfdHbb3NTLY9CmAzvVEpqT06Xjy9FL4IvbJ/fj3XYMQ9ptKgvVDIrrtA5AM7hQ3BPe0jjr0A
                      frg8Bi0AvVDvfTz5XaI9OmpWPTL8AD024mg9ALNnvOp8WT1ZVY89pNL5PLDvmDs2WFU9RmIWPT4S
                      WT0qtHC9WIPJPIeAsr0Bq7Y9nSaLPYBzkDyXapY9yPPBPAzjkbxCbjw9vS8xvSDHOL2gcTG7dnNS
                      PTqxX72ASS69wDK5vWVOkr3tdKS9aDTUvJN6xT1ssuW8YHCxvLBtVbzibYq9YoQmPYNHjj3lUbw9
                      0hUHPQq/Ib1w2Ka9I5pvvUCXATtzckW98p83Pdtdtz1B5IE9KkoJPWJKg71S2349ABTVOsJ+Sj0a
                      P8q9o09uvVATezzA2Bq9LMu8PEIySD2wMyG80vBPPTBBgbvgmVy9P6u+vfKlAD0oSRa8OCTHvSCZ
                      gTwSaHE9/Sp/vVeJxz3aVC49wVasPaBxxbtgqZS7rFoBvVc9mD34aa88qPRnPI2wtb05P6M9w9Ks
                      vbVPn70Yd008IoaRvd9XmT3o2ky8zY4ivfKxHz39BB69WHG9vWAn+rsAlUA7UO+zu0ZYB71pNbo9
                      OUW+PYgrrzzNvoW9JmdDPfTUyzywiwY8WOx4vABKCDz++KG9Nj5rPS7/fD2o17C98G2IvaynvLya
                      Bxy9tKjivAALtDzSlBQ9gOCZPJo2Jz3Wqlw9AlwtPdq0c71CyQg9xjZ/PRfwM70CxYi9t94aveg6
                      XbzSz0Q9iuYBPeBA87zUQ+K8bcuDvYoGxr06swy9RVyivTfhwT0SX8W9YQSuPQkVqj3YhEG8mt1o
                      PRDWeryph6c9mnauvSzPvLzqk2O92TvAPSnRpj1SdGk9gC7gvMAm9bqglLq9AObHOWQg3jwi6jM9
                      RNHoPKDkzLwFb4Y9pjMwPaNFQ734/6O8mh5ZPQOhmD0Btb89Vh1WPS5fST2yRU09rjovPfPDNL1U
                      NNm8pKHVPDjiiDzwTgE8gHeovMAMZr0Nkma98M4qvGfvxL3nGSK9lnVbPUBHSL1T/jm9kLU1PA7E
                      MD2g97o7gGBMvEVEiD1gnaW8BAmIvebaCD0ACRC8N96tveSR4DzrI6O9fZ6ePeUAgz3AgSu9FL39
                      PKVqhj1sSqc8K527PWiWMDwWU5+9Qs9KPeglpr2RVJA9TkSBvXOmvL1NGZk9Qj8dPchCmL1ZarA9
                      UYbKPc4dOT0RuL090r5lPZjzsL2wWMe73RQ6vVEtwj0nlB+9gSW5PZkskj3YHiA8Mu6IvSD19ztD
                      o409SfulPd/lqT24oKe8HeqpPfRjh7z4faU8tf+lveq8br3UmwG9Mp1sPRJXBT2AmEA82H62vYmj
                      rz2UMoe8GZ2yPS2IrL06bjW9ZIb9PEA1ojy9XbG99NvbvKN4Mb1IBZ8832+mPRQeszxfg4Q9rQ2q
                      Pcm8wz1SHBQ9UtBAPSNPZr3lbYQ9J36wPbm1nj0A1zy8jAalvMq3TD0Q6g08tZ6XvdotM72dfDi9
                      GP8bvK0wgb2oyg68wOVgO0DdILwcse48QABuO9AbKrwwbHc8kiAcPcGmrz1AewO8YXCKPXNoyL20
                      IYO8D3mAPQL5vb3orCs8kmIgPSTK7DwQ3HM8lam0vaCeJLtqgF49TZ66Pdvkjz26QZe9qDb6vAgH
                      w7wW/h89MIz2O7Y4Uz1yccG9AYq2PZtjvj2zkbq9AKBUOpjdjLwAgJo6nlsAPScJOb1Ikfe8SaDE
                      PSBeNr0MheA8VsoLvcjFl7zEffw8uIiMPFOHXr2v8LG9Qh8dPX4TND2AaWA6iHn1vCXilr0gNbG8
                      HQd+vdAMS7xACeO64MM9vQGMtT1eURk9DGyvvECOKrtJRqI9cqimvVv/ub3coAK9dBnKPFiDcjwS
                      wQ49c2GRvfZkfT2ik4O9GZyDPTpEub3LW5M92KhTvAKydD1UtIe94EOwvCiKDzwgfbY80uxcPUJ2
                      fD0POsg90rkxPcB+dL1TwKW9uNWFPEuIiD0oCYa8/SZqvaoPGb2g/b88+IvMPEhXmLz3NmC9LESD
                      vLuXrr16iG49PAMKvRJCTj0C1To9k4GevduJu7361E+98l2IvaBmWb1WSZW9ls2avQIWQz0KVH69
                      2ySovWzsvrzA6B+9el8zvQBpSzvQ7nC8nddbvSfUWL29b2+95IT5PJBpcr2gyoC8tM3yPIBgvru7
                      fsa9oyiQvUSiBL1QRWa8zyDLPdI7yr1zsC+96uwRPWQPEL2dE2q9zDOEPCAE77wAeYG7JP4DvZVu
                      yz1hhJM9B5KSPfjr4LxgIxC7kz+YvRL8tL1swZO8sL94vEPQoD0wiHg80vRCPaBfu7s0FK88Q35m
                      vRaEMT0qZja9417APXK5Nj3dmWm9INaHuxBdU724B8Y8s5BdvQCETrtYsLw8+DLuvOi/ezzQzN67
                      5GXlPJ4eJj3bDpi9LWuXvYDbOb1sPcW8rTY/vbZAGb3QKRg8A+7JPQV/qD3jnjG9siInPe3MYb0U
                      c5u85sYGvWf8jT0A7SG7m+GtvUMjnr340cW9taaOPd3SJr0ANS868a+FPY83pD3a/RK9gjhBPX/P
                      iT3L3Zc9UNV8PNDMvLtt5ps9tu96Pbo+bD1INbo8YXKuPcHKyj2jhps96yKmvR10yr27z8g9AMYh
                      OVlfuD3Y86684LfCvaBFwLsKlMC9GFyOvGj9pr0VmJO97LCwvKPQkD3li6y90OgKvMRmA73wvF68
                      XC0WvRJ4Iz0g8pi7qAGXvZAABbxCmbm9a63KPQCTLjzwCw29s1mRPdjKRLyuaKC9GPOEvPMzpD3a
                      yja9qOJMPIGIzD0wRpq78u9VPb9/rT2a3Y+9kK9ZPJouAD0sMdY81npKPcpCAj2N3oK9RRCKvXc6
                      vL3Q0Gu8A9tXvfJOVD2JHJI9MZeiPczEib37tK69YFBjvfFagz1oTqI8Y+FVvYrhJD04Zba9KL7t
                      vPfIsL3AWMu69l6DvXt/l70w9Da88R2QPToHXT3MYOC8ACA4PBUhoj3a9XO96sxwvVbFmL37yLU9
                      uQ+0PePbJ705Vsc9uAGKvGCfijwxK609tgx/PQtwpj1KiV69C6qiPSg2OzzKi6y9ADz1uzHxiz1K
                      QA49sqhuPYoKST1+qmo9YNPDvFc1v73t8TC9+V7FPaZJh71Afw69qCIlPEFupj3sTpm8AGzbuFPa
                      Zr0rKq+9dcuqvS7Nn714Uqu9AA5AvcxftrwAaO47EKRXPPtUoD1lvaE9Nm0QvR7wdT2PnJA9QnW4
                      vQBNQ7sg8J67pDLhPCEaqj3A0rg6wJFKO+wdgDwhK6E9Xcy2vV7+iL2Q8g28tfihPU24yz0ow4m9
                      UHpzPFAhFDxItsA8BFXaPDSFpTxBS4897NSgvGfmKL3D0o894AqrO+LVVT05xoA9gF+3ug0BUL2w
                      fqM7J/GtPabEXj1aw329DEzzvOCXizzQXBO9RP3tPPB5T7yhtpc9GCXEvFBQjb16F0M9sTGlPejQ
                      iL1m8kw9V0xmvV3Gg70aXwu9cBdzPDA8H7w3Cse9ptgbPWDsibzCOX09s8gfvX08Jr1lTLk9ZNTd
                      PIIROD1tdqO9M4C6vQx50jwoMAy8oFuqPKBfpjzyoQk9btaEvYPIn70abCW9MlZ5PR35qL3CkwI9
                      +jsBvXAtcjx61U49si+DvSdSdb099cM9Qj92PUL6Mz2jhbE9hyaBPbpUVz3jG8i9+42TvXBqrr0N
                      F2+9iDyyvJJPET0A4my8wPj8uvTr3jzA8IQ6jDjHvEBN0zrDScE9Hk2SvcDQVLxnbMW9aJsyPNLL
                      LD2wEWM88osaPWjXkrw+DUs91ZW5vXqYHL0gVnm9m7esvU41or2MG8K8cMoGPAH9yD1goe+8YtSj
                      vWPqyT1iJnw96XbJPcF9rj2MmJQ8xsZiPa/dsj2f0IU9UCeVvW12lz2abXA9F2ojvRRM+jzz38k9
                      R/GKPRjKlTwHAK094Evju08CjT3ge9S7Q24uvfZGIj2Ux9y8wPYiu1PGmT2s6pE8cP4gvXTB47zN
                      SMO9WqNovZk2jD1tKGi9GE+lvNBa1DuBx7M9BpgePeuwx7119MO9rFnfPE0VvD1hfKY9EwmFPdk0
                      rz3Ahp+8GnJFPcNrVr0sBoW9NU6DPWa0Kz2AiV+9gN7YOltKlD3Q2t07CvBvvYbiJz1G1l0922OS
                      veOHS71wJQ88gPUZOuhFgL0yDCY9UC/1u9S/5Tz/i4M9jEucPBtUqD1kvtA8Wvu6vZxNCr22zQ49
                      gBSau5jktbx/j8a9j/+dPTBH4zuymlU9AuEvPVgopbwARfm5RngyPV5MkL1dSpu9IiE8PQf8hz3H
                      JqQ9kbqqPWeyuj2I0/C8OlavvfB0MTxXmUy9UPa3vV2Pq70z6qE9M8agvX41or0MXps8M2mvvW3m
                      qb0S7q694C3FPG0iVr0KGZy9tIq5PJRPBb22oT89r6i7PUjeoL3048W8cfW7PctjrD360ny9itx3
                      PSGWwT3Nj2K9Vx2GPW37gz2AjjA6zamIPeCvk7s9r8Q9Zi94PbCdVzyzUFC9YLmuvIAlxTuTzp69
                      7UB4vdhHvLzkmwi9njBbPZB+gL3glqE71HPWvIy+jLwAOsu6AIz8OmAtqDsLAK89otBTPZTD0Lyb
                      9Za9dNHrvLiz2Ly9XkW9d7Y2vVgdYTyJMps9MXKsPaJaqL0d1li9yltGvfR7j7yUgJW84tcYPUBe
                      hTzixlo9Dd3GPZKyOT1Czzw925SVvf1vpz0H+749Cvl2vVYpEL1f3qw9MGskPCDViztgqJs7aup4
                      Pcx2uTx0oNY86FrLvGzxl7yY1ti8RjlaPYDnrzxtUJU9AIviuU2Cfr0w0UA8sNcPvdPVoj3wqHe9
                      6BO3vBgnIDwAHr26tDPOPHL7jL1cJgS9+E+DPAVLk7108qU8oOxdu6hO47wM/ZK8GPYjPGm5oD3v
                      asu9WbyMPYi3gr2QjTK8oGhpvbFsgD0DELm9XI7pPKMDoT2m7qq90q8wPR7iLT3orEK8bO32vDK7
                      hb23F0e9C7GnvQF+uD3gmLe8SpgGPU1Opz0eKUY9TmgOPSzc9jywMi29znaLvZL7Vj2E+vA8gE4A
                      PE0RrT1o05u9FJUFvUCaz7wXF8e93qBFPSSpzjyiez09MUa6PVJxuL36LIK9UGoyPH/ssr13zr69
                      XjBvPc1ziz2j3ay9EkOVvSKXLD2R1b89QNfDOo5RKj0AwVG9qERKvM85nT1QwCK8uYWFPYBZLDpd
                      3J09FlkoPWV6mz09Z5s9SqJlvXJwDj1CwCM9E2uHPRKsRj2le729LJgMvaqrWT1TLTu9g9iGPSDz
                      vb3xPZo9rl2AvYDddzwRxJw9VH+3vI30sr2YGjS8heCSvYPjnr3hR7c98rxxPaIhRD2Izq48Pg9d
                      PY7THD0/G7U9lRizvQBlgr0ekRU9ALRzOTL0CT1baLG9EMphvC2JcL1pJJw96BqbvfpkKb1YBxo8
                      9iGPvbCFu7tb9qA9CzOlPQK7az1YUL08y5auvSnYyT30G+e8AH+6O1+/yD3G1Xo94CeIvTG9iD3d
                      wL49S/m0PZ7LAD2iLQ89wKxRPOKsFj2eVW49+JuNvUDZTLuYFgc8PgMiPSD+Wr3AAho8sHnsu9Lx
                      sr1YSFE8tusQvdpMVr2a6Ro96GOMvFFwgD3mwjo9aAEmvH1/pj1NI8m9JuMSvb18I721aaW9dHbM
                      vPXchD3XR6k9okpmPXXIrL0ToHy9UrEePU9+ub0kbdo8gFSqPF7Gqb0YuW68WXqhPbRCE702sIK9
                      EPI0vAr9Y70YXKq9UXTGPd5NFz3Ejtk893q0vTVDs73oILY84iMnPUfSwj3AYeS8IM0svY4vEz3w
                      nZ69kMsRvGu7vT0iI2o9mgu9vQB4LLpV1qU9BVCDPVCKPzzLtb49IJsjvTAgSjwCHRE9gNPVupzd
                      5TwASTu6N6mKPRkFwT1Une48oOEZuw6WaD059Jc9Q0PHvasSmD2oAIm9MMoPPBj6ILyzike95cKp
                      PW2KRr3Mtr08mxCjvYcgcr2U1eY8I1y/PZ7XZT0ARXS72cKWPQB6Lbu6mTA9BMD0PODFvjvK6sS9
                      OqGsvQq7EL0ASGe8aJcZPEFAxz1YN5G9ODfbvLCDWjzA7JI6ujcRPZPqPb1KEjW9IWmnPcWlkb3y
                      JbO9p1bCPb6aaT3okbI8jbSVPUJ+yb0J14A94HlUva7UeD1tY8U94G79OxAKxr1BPqU99STLvaOR
                      sL12hI69zE/aPBMhvr0MJdA8vm9YPYKts70Vt509vps6PWBaSTsLzL69DpqTvRZUmb3jLE69DPWG
                      PP2ngL04irq9/b/HPbbkTz0IOsi9TRLMPbQb0zw6rho9adG6PTQS5rwjIFC99EcLvUesyT1nTI09
                      dZi8PfBZSb3gMeM7M9ZIvcWTyb2iCT89J21AveABn7yRAZM9YARMuyAwZr0pnbA96i1rPaARLjvY
                      Hh486KAJvKAR07uQNn+9OcG0PaKPOz1ASTC8mhq5vYs7tr2h3sk9oLlUvQATU7pQg8i9cEZ6PKgE
                      OLyAZvY6iCOiPN02Qr26BVK9EuRhPWOtMb2HfLQ9gq8vPcQlBL2/T4Q90gWPvdB5xTu0HOC8wO+k
                      vVlwuz009om8ueqtPW/knD0eG5q9AbW7PaCJ4TtSRKi9ujsSPVBMJ73nRHu9E7rEvUh9j7x9GZ09
                      k5nFPdkuxD2o/oA8IH2XO5DWZ7w28G89NbDCPeOofr10rwq9307MvRMInz1GVIW9EhwoPbClKL0w
                      Q5O7oEWYPKUirT0bi8q9qQeBPYzsobxCIbG9EkUEPYJwaD3gHqM7gPTrOrSTGb1Ku2S98lcBPYRf
                      3jytqaK9fmSIvcAIartAkkk7yEGWPFfld73Y86m9NrijvYo7Bj0QJEq8KLrfvNNFGr0AmUY8YX2k
                      PcBJ+byAqTO9J3JmvYAwnzskytY85k+WvVSCgbyMddS8TDegvDqbTT3AVoC9MJThOziJu70aEKW9
                      M2FWvY+Mnj0R0YA9wPuTPNTf47zi0nc9U2NYvVE1mz3RGbw9/belvYzr+LyY/Wo88hNhPYeMIL39
                      dLg9KH8JvDWXiT3Zf6Y9Y52cvdB7uDugMiK7F9WOPdhcCrxzTx699xgavb0Rar2mLJO9gXqlPQQk
                      hr3UmQq9o9GnPdSSzbxCEDw9ZQiAPQchU72QJ3+9Pb6HPWnFpT3S4ig9uOK0PN60gL3cXM48EoBP
                      PdBa1DtdpMO9MhJDPUt3p70KmH69tzWxPfctqz3Wf5C962SVPbp5xb1g3xq7OicDvTuMnb3w/Ww8
                      PqtNPZ6+Vj2gRqS9N1nJvVk9hD2xIck9/bTMPaz4gb3jvJo9bMQKvTCxS71sGRG90NCTuwCiqrnW
                      g289RBIMvRkctD0Ihta8ktexvYimxL0DKle9DTpZvakbrD1n+iy9bGatPNh2XDyQ7RE8fQ2/vbpA
                      bD3gZta82eOaPS0EhT3iQpy9RPDuPB9Amj2CxR09attDPSgfoDwX90i9du8LPavXrb3H/7296h92
                      vSZyBr0SaQs9xstKPceFc71+F4e9J7dsvZhXlDyTaZu9I8VRvVvFqr34NOW8kCE4vRXHqT2AOKg7
                      0mljPSjthjzUa7s8EZSoPQPhrD0iiXQ9JRGCPax5t7zuzCQ9AmNaPV7cqL3iEy49QrxzPWqIor1E
                      uhG9YwJ2vWugyr2gzr+7dLGVvEABhDxABRW7ydeSPci3uzxAvry9gLTbuhCBSjwAvsq72Nk7vDB+
                      pr1Sn4u9voQRPQ7gOz0LuqW9v2eYPeCYWb3KAkU9aqSMvZDRTL3IGLO8gOJ8PGibt72ebIW9T7i8
                      vYwpsryg1pE8aL4FPAGjlD2JuKw9zG/NPMOFPL1YupK9qbaYPSMBqz0Mpdm82F1RPKJjbT2awQ49
                      W42gPcB25ryqIEM9naq7PfJkUj2Cm1Q9xmqAvaCQvzv6lFC9MyeavfdGlz3yGBE9a5GOPU8Jtj1g
                      QB29Y3izPRlWjT29HKm94EbEvdgvDjzYVaa9g9GDPdNqHr2Lmac9yQyEPTIdBz1DWVe9B2XJvSaK
                      GT1KKnU9o2B6vXFhnD22XA094CX6Ow44YT1Ceiw98uGUvc38kr2/+qk9T4aUPRq4FT3xlZ89iRG8
                      Paj9jzw20qq9Xw6tvbtwqL1Pfq49sOHgu7vguz1TlJY9WHwFPHighjwFe4K9zPW8vMHdrz3Vwrw9
                      gsdbPTjlyr3YVpE8M5iqPSLNGz0Sb3w9sLQcvTTQqLyzC0a9XxevvZlVmT1fEMA9W0qLPS4+fD22
                      HYu9D46gPYdeHb2DEZK9NBj+PAfuxz0XpFO9POfePIU0h701Z6U9rMepvNlGjD1Aihe8SMzSvJ3x
                      rD1a/k+9MkZsPXbiLz2xx4w9EqQLPbC9RbzSbWY9gL07ugL5aD3MsoW8WKWCvYD5Yb0AGo+91GOK
                      vYALl7yoLWw8qwiDPZLAVz1/jsU9emZnve0WLb3065Q8m+uWvZD+ULwDysE9ALNTuuRuDL2YLxu8
                      eBv5vHh6qb3QRCE8ICqcvUIxEz2q/cC9Tut5ParwZL3V1oU90AV/PCBupbyAPsS6lOoFvWJ1ZD1y
                      tq29/TSJPWcXsL0dUpI9b1CvvcwBDb0wMDW9chKLvTw7jL3iCRI96mAVvXTuzjxA2KE8qv1ePe+c
                      yz3wZGq9ABvxvIo1pb2yysW9XX+5PewH57yEHgS9N/E8vWCLxLzqskQ95qtlPYDt9DoTV7w9DKPH
                      PJDTT73MrQi94qgyPW0/wj1QQsM7YJVUuzcnzL2O+Q09DLL6PMorYb10kLU8e2SNPXDDQr2Z06M9
                      0Dw4PMDywrzQRHW8EPoAPHFCtT0wbku9EDbCvQDotLzzfZy9APiDOlBlKTxgle28oOj3O7rGbL1S
                      DK+9LRRFvTxjFL0yH3k9jssfPTEuvj3QYUC9q+CRvdBFIbyw5sG9AhMMPbtHwz00f6g86iVEvfAy
                      FLwjLaI9laGJvQhIn73ZVoQ9DE7IvGZemL3SkcG96aW4PUw0yrxh3Zo9Wa68PSw3nbwSzQQ9ANIy
                      PFg5dbwyjD49oEtJuzBCoTs/JMu9mbm/PZX1hL2wHIs7a2qaPcwdi7waVQm9uPesveIIu70ktOk8
                      AC6UumSP0TyLdKk94JmivIu9kj1oaBo8qHAtPGKRk702yIa9IJOFuyIiID2AVY+7gs9tPX5VGT1n
                      pLi94CmCu7pufD39Qqi96dOxPWgPsTzD6o49DH+7vNCtSLyAvvi68EA5vL0zyz1Q6cm9aKvbvKDL
                      MTvyz1A9GYKqPVJXYD0lSYg9zmMVPQYHID3lo5+9FBrMvNCFqrs4uJe9CauaPWj2BLyBlcU96P5H
                      vMJbGj3NE2e9uTSuPQh3uLyBbb49jbKkPfLCcD0bB6E9QDIVO8zH6LwwtRS9jxTIPeppvr1qMns9
                      R2m8vQB1pTx2gGs9lteEvRNgbr1amEE9S7fDvYB907tlqZm9klZ8PVuZqz0AKB67vHWAvYA8hDx2
                      7Ws9jc+kvYFVwT1/Wry9eFWrvQ0YYb3yPT49wL7EuieUaL2QEZS9mMWpvfY1IT30cJg8uD/MPKIl
                      wb2QPB68mOYxPGwF2TzAuOa6nHn+POrxMj23x2u9UqQ9PTt9ub1628O9VRuPveC3o7sAi5a5AGGz
                      vQjB7rw59q49UAT/O5CBE72OISs9pQa/vXYWDb0kZ888AA1Vujgsqbz4F8u9WgN7PT25o72Qgka9
                      MtCGvaotVD3iJYG9gFlAOh7oWj3ngkS95ViZvXsqgj2AUyg87aqCvaPjmT3CABA9CJrcvL70Uj3Z
                      4bc9UT2dPZMMsL3qVEC9Qg8kPYCSpLpSrRM9sqZnPbb2eD3YjZO9mT+MPWc0iT02hFY9VkSovR4p
                      jb2ozoC8g/CRPVhAGLyweNQ7MO6lO5o3fz0YzZ6808q+Pbc3gT0Hyr69NI7CvHz5hL3OUwc9sM8S
                      vEx8hzy6lzK9PQ2/PXyU1TwNNWO9MPOkvfjawr3IIYG9aDBHvHpaZ724Y768dPa3vGB427svZsK9
                      s9HGvSghw7xdr4W9lOKjvIDZsbyYl6y96CeyvQA0ObpNKkm93TvIPfQ4qjzigFE9J5A1vcHIyj3Y
                      +ae9kJgOPMa1m72w8Jg7CADGvBzP/DxMFf08dEi/vJVTjD3wdGm9uJ2WPPj/07x6Eh89Fn0FPRM4
                      mD1GDDo9brsVPeDVubujxrY9EyUbvbW6vT1ojyy8uoVdPQC0XblLI429YL6Iu2AxtTzE8fA8Qru9
                      vdICir0FFZI9zSK8vWqyDz0Idc28fklDPTW2mD16vXW9eCC9PC4Zqb2DpUC9VfSAPTBRhr2XkiO9
                      WpMwPXBbBDyeNVw9ZzKFPc00a70c0N087qEMPbUsjT2QGiw8gLDEO/nIrD0rlo89UGAwvIxzh73M
                      06G8gAnyvGfgyL1u/jo9AF98umDdJjsAv0S6EnlVPcraJr1InMo8oC72uxoKbT16Rzc9gAGiveiC
                      l7yhC4Q9I/aXPagAszyYz0U8SuiYvZAXIr04ZfS8kiKGvWQC6zxIXIy8AEEbvYQf7jxiDJO9gNSH
                      OhBIfDxyab29Ewa6vTOWrb07ZcK9qPgsvBCjSbwArXO8sLxovFQD4LxCaXU98mZWPbrOHT0Mrei8
                      1Lq8PPUjxb1wb1+8MEFGvTOBlL0B4LM9WrQ4vZlxvj1Ls6e9muw5vTikwjyoCES8gLMCvFsSrz2g
                      t+I7ro4gPbI7s73M4KK8WOi/vADXNLsjaBu98T6hPeH0sz2X/Wy9N0uXPRJcaj3j47w9X3C1PSL5
                      YD0Q4UI8ky9SvXBbBDx3uHG94K3au3QFlDwA4Ew7tOqMPE1pjT3JuaE9cLIvvYtSwb0cKhO9Pjot
                      PRM9l71O/oC95x+yvTkbgD3EARO9gOeevTI4Xj2TY7q92vVePczB3bwA1p45Xs6rvUNgyT3wv1y8
                      bDjNPMdBpD0S1q+9yPGRvNXmlT3A7yy8OErOvJcNt73W3Ju9YMCvu9MRuD1KI1U9p+65PSfgNL2/
                      w609/dPHvewXxrzsytW8UFIPPGAajLukhOA8mT+ePcK7TT1kLPQ8knq0vd71OD2wKB68PG+LvW4w
                      mL0+Yj09n0+EPTJhaD0Ep4S9alMdvVaMD72aw3I9aFsRvHbgUj0Pvsw9qplVPUB8i7xm/Hk99rhH
                      PSgjdjxAwSA8IGYMvQ3tXb2Y2bO9tAncvJi8fTxd0VK9sd6bPfnwhT1DCZK92HYVvL2tqL2afEE9
                      2SuRPago+7ygSsk8EYi1Pf7vHj1QY6C7ahvCvVXzs72axkg9oIWnu6gJqLxCjmM945bHvUwd0Lyd
                      Sq69cm5GPaanA71Y0Om8spSCvZvOqj2IkMS8qiQ7PT3jUr3697W9a/+MPb8mkj2+FkM9TCIJvX7P
                      RD3tsSW9upEPPaBgrTyYBA28K8yrPaznkjzRy6k90wevPdiLhjywesm7riQlPcvEij2wH4A7GMt7
                      vKDE2bwovr68lP/zvCkymz2QzTu93tFcPRsGiz2o5Ie9gBIYOsamob3VIJu9gDzCOsC/Q7xAdEo7
                      dZSEvaFTyz0s0rk8OpKXvULHJT0j5re9sEBNPFhhy7wcKAi9B3VYvZn3jz3V/6i9jWZ9veXas70A
                      Ir29dXyJvXuMrD2QcVI8quMyvQ03tL0wl4K7xXecPZ2mpD1C7kA99OXMPNp5N73hN4U9DctivUaO
                      aD16GwG9kTbMPYU4mz2yShY9WJsivKiggr1QNe27k0zHPbYBBL2gbmg7rDfOvHrNIL3iq6S9YuUb
                      PTBMLL2gsIK7+CCHvaCUJjsAkCk53hCSvQZlp71CxQc9F1oavTNvjD2SfgY9ZdWjvSH1tj3seL68
                      bEbsPMoLMj200a28qjNAPYCr1DoCo4K9v3e8ve5vej3KDDI9vniVvTMLP70A3AW6SgBJvcrbcz1d
                      9MY9jl6evcl3wT24C6o8ZYO5PWicnr3K/1G9TJEBvUdFyT2QCHg8+SGhPeDBhbzuXA89jHL2vLB/
                      XDyb+sG91lo2PaYufj3H+ry9dHuMPDDNxr2Nhok98oh3PYLGRz3u4Ia9RveGvZuioD0AOg85foaS
                      vXhQgDya0109YySyvVCjdbyGTaS9UE3oOyhn0LyA/sC7vql6PTImAD1A2FY7LNa5PPrttL24BpW9
                      YP+Mu2gXnb1sgPw842eiPSDS9TuwyKA7oLGFvONIKL2wT4i9tTO/vZtUrT2L2K691+yYPYBqZbw5
                      VaY9IcTDPaxGzjzkneg8iTKyPVgRwryIoNO8no5VPVQz/jzqjR29AGAqObx1B71MluY8wJ6rOgYy
                      Eb0Ucpo8yGLIvEjpxb1nFq098BpqvO4UAj14h8G8muZYPSA0nztx2ZM9cNgjPFAOc71bmo+96mFk
                      vdS6jL2EGAe9gHJUOt9qw73jW589cXXHPZcCyr0duaE9qafDPdUFib2guw474JIKvezFj7xoXUC8
                      1GbdPPhskDxYpTu8UzlGvTENvj1Qr6+77UeavZBzELyGrVI96AZAPLDg6jsg1QS9XuqIvStwsT2m
                      sxS9wp5nPcjVkTxbgLM9Z7UjvS0ih71iVy89DbYlvbDe1LsqikU9UceRPUzpgjxAk4c8dFqIvNiQ
                      dbwbAre9KAxAPGJSMj20XOe8qOc3PD8NjD2r9q+9OyS0vVvUij0Pm489qFs8PC4rHz3YPqK80kg3
                      PbTf+jx4hZM8SLCgPGz2gL2Ur7+8yk6PvboHLz0iv6G9AJAGOf2cn71hjaM9MmNdPbO2U72ngWq9
                      iNyLvY0xaL3AGEc8YIB7O0fGRr19cni9k92MPcoIND3IAMI822KQvQWOkr20k4q85duuvbg7q7zT
                      pI+9Wt+gvQDiUTt5j7M96FaYvaIdGT3BUZo9uLicvRg7gL2AbaU7YI5nO1SK1bzz+HW9YN9SO7B2
                      1btKKba90GTFO/DZDL1HB5M9wiScvZqLA72y8rO98Fs6PDm2kz1VVY29OX+qPSg+N7xA5Sa9SjlF
                      Pb5VPz0AuLm6nTOtPStMt72oOyu8YNLpvJC3YL0D35g9WOO0vDVngT1/I7097ALCPBIrej2HvL49
                      oMpAvSa6Br1DEsy96E1evJjwZbz9sUC9c6DBPRJ/Rj3ykUw9bHGDvEA7kr0YpKi8NxMevRewVr2S
                      ulA9K0aFPUwcib2pHo09eH6/PKowyr3gLvE77NSLPB1zO73uqkg9wPVQu2j+lb04hra9hjhGPYCF
                      1bukuO08Xjh2PRKjSD0V3ZU9StBKPR7FDj0QMxe84Bz/O4S23jzTR8A9ylADPfKmy70ewJa9EkU1
                      PWQz1jz765m9c/cvvaIqqL3SzzE9AGzCOvIJxL3N5oS9TCfyPJoaS71aSpG9vhZTPY6pSz3NwZs9
                      AEUwOn6qhb24Z8w8sKN8PKAfb70q1hc9cz1avaZrOz0XOk+9gGvTu6At9juK7zo9zjwoPXQ/DL2Q
                      Ojc8Tv9bPTp8ML2sR6I8mvxTvWMQxT340K29ANqquYBay7onQ589c9G4PSGkhD1Lu5g9ZNLSPBUj
                      v70SYFE92AhmvNCRCr3sSMO87PULvZj9wrzKram93aAtvQAIlbvlh8G9cVnAPbgN67yQJCy9gGV6
                      PONvtj27Gcc9bSy0vWxlhjzA1Lu9iRS6PSjEsDwCqsO9MhwmPZp5KL1zAp69y6G2PRKrHT06ylk9
                      JVWuvQXFgb3ogmI8WHs2vB0nU72C72M9QBwvvCR69Dy4U8e8N3covenrqz3Q21687ImLvADkXTnU
                      gYs80PJpvaOcUL0nDHW9A505vbVevz3a0Z69h4Uvva9opz22kI69q+udPdk4mj2f5ci9niEUPTAi
                      YTzsE9S8j++uvUAbMbtVep491AOcPCDi97vU/Oy8kA5VPEPPqL0A4PI4aI8/vMC6oToB+4I9UJGZ
                      vSAtw7tAhyi7QGRnvB6VAj0aAkI9wDFSO9J0Jj2wyyC8RguHvSDD5rwAq6m7sOsPvS6hOj0DP529
                      rTZcvQmuuz2Quik8UOQAvfTJ1Dw6QxC9FWesvT3uoT0te589HuEiPVJTbz2Uhqg8MA2SvYIwob0Z
                      PoM9Vm5YPUrAar1teKy9wGePvCOIJr0gtfm78Ce6veBDrTu4Naw80B2Yu1TswDz6rDI9uNqxvFgl
                      obyEI/Q8L16nPRLPHz1KRRC9wJw2u2BuQzulz4c9YD7Fu8C5r7zcGw+9RvANveBn4bsjDpW9OWGm
                      Pd5TJz3e8p29Ch8yvf8Ox731hoG9am5yPSnzkT2asi29CkkePc6dSj2gINO7EmaTvVazfz2A7Vy9
                      nsVPPRaVKj3nSDu9jzORPTJTUj3QQ8g78FUbvNRdpTxHeLm9sKB8PEDKATtmIis9AEiFuP0fL73K
                      S7y9fVQ5vX4qXz15hbs9sAGqu+SD1DwXMR69GjN5Pd3OQL0/WrA9wAdYu/eFHL2jRa29986xvegj
                      kTw7+4c9+A3GPAYtDb1Fuq69mFHDvImJqD1zE509//29vcqqKL0uOJ+9HKGEvZzQ5zyzFCq9OfC4
                      PRRRp7xaFTQ9PdyBPUVQmr0A6/U7NF6/PMCj5bypa509SKKUPMMWc73ohny8zVC8vQAAgrkz4269
                      wAMEO7KwBD3tAok9wElwPK4uRD02nF89RQCuPZbcbD0+XQc9mzLMPXGGzD2ITbq8DXO0PcLtND3Y
                      6a+9fTc/vbeFK71X01u91tMAPbh9qryaI3C9FrhAPe1Ud715cZ89MHXIOyF7lj2U+Aq9uukrPQAN
                      Q7y2X4q9P1DLPbaXRT2wyAa9icecPQAQfrzeg2A9kYqkPahTn7wYgma8iQ6gPdTF0Dzpd60980VO
                      vZVKy73QTia80Do9va4hGT1/mYo9QAjivAQY0jy2po+9n2+7PUDni7y3Zh+9NDCIPADOPzyoaZI8
                      FBjtvMJIsr0SxHI9qBhRvPIlBz1Ra7k9w5nAvcA0IDwRMLI9dKz8PHr1bL3QSTO92LGePKuRrb1g
                      ZBY7tzmBPUyC7by6SUq9sE02vRjrh732VRm9udi9Pawd+Lxe6Ec94GCOvZDTWrw34Kc98FcOPLe2
                      cL1KmS49J6GePQgRsr38gOg8hugwPV2IY71Zb7E9OnguPdjPfDxAuCG7Ub+bPTeERb3jbcc9GE9V
                      vFLnLD3ANAK75n81PfZFpb1FL8o91eqkPZZvOz2AI6W8yEjHPH68Bj2re6i9YLKzPL3dl71aG5G9
                      MALcO3bNQz3g5Yg8FAjnvJiTcrxycaW9V4QpvdJnyb2T7ay9F2mwvfeaoT3ggZY7Z1ClPcGZqD1m
                      8H49eDOxvWsyij0JEqQ9c6fKPbocN73LZpa97KqKvIYqUT2AJNm7Y3xyvQDWZbscbNQ8HYWyPTG/
                      nD15iIc9BG0ZveyjoTxYcUe8PczDvcmKhz1L2Y29LA38PPPKHb35BqY9g4dFvRdMJb0F64q9muMJ
                      PZSM5bwpebM9AssDPUBcGTuA8kA6I8efvfAMaTyrVrk9eiB8PRKDeD3iXIG9qi9kPX0XHL3qJn09
                      YpxBPT3tuj1pNMo9yECNPErAjr2XX4U9jp44PQRI5Dyae2Y9qNBvPMBcCDv+J1491EAEvS/6v70I
                      /7q8tkJCPQDEs7tYhcC9gGgUvPGulz2Ykyq8sDKvuweIuL24pIo8Pe6jvUZYaD3qVcS9x3G3PYPE
                      yj0R+rs910dfvUI2kr30NLw8JgszPfoTRj2qAQg9oI64vZr0Hr1arh09rKbtvHuGmb31R5A9sfOZ
                      PR0Cn70UL4u9yX2BPWzq4TxPsLy92R6EPWeRhT05mII9GqQQPcfQLL11WME9wId5uxJMTD3APgO7
                      Fp8rPUcamz1ZgIg9oPh5vcaEbj3DaLq9oEPPO3++jT17srW9UssWPdR/yrxjBrw9/6O5vSrEaj2A
                      o9I6yh4vPaTO8DwLXaI97WrBPcc2Zr3nXTC9lEWFvAAtk7ubnpO92OdsvF0yL70wPvu7zKHGvC9h
                      pj1NYLY9QDYCPN0qwT0zgDK9M9hyvVervD2RfoY9QY2SPegIZjxgxVu7ej4FvRfBnT24w/C8bfuz
                      PXpMGr0A1DI5QApKPMaJbz0AP8c7DrNFPUxoE70BNaQ9muRlvSdqPb3KT3a9R0i7vcBBR7zAr5+8
                      G8bGPUTzB70b/7g9+P6nvHRki71AR+669xnHve6Ulb3y7Qo9JmBqPXKJWT0aqHM9eq0NPeTS/jxg
                      v2A7vs6hvXP3mr1yLjs9EaO3Pe1kLL0wqag745E9vSo/xr0QbDO9nmh2PZfHlj2jQKs9NjqovQBT
                      DDwf16g9mjuovYC2/roAoX+6Yo8CPbcbd72zs6k9g3m7vd2mZ71ogwU8/YehvcpsoL1Mxvk8YJk4
                      u1BQnzuP/b89aPTLvaBkHDsAWHY8TXkgvbTVw7zkwIa9+z2tvdR1lLxAQEC85mQLPSMSjD2El+g8
                      i2KoPaJ6MT0AuwG80FEWPInGpT0QpS29mlasvcOrsr0ACOk4wB81PKCUxrv2wX89YlmqvZ8Xjz0a
                      5i+97D/0PHCWbrzadgs9LQZcvWA30ruHXKs9AIgXO/qYRj39XqM9sFSLu87HGT2O3Gg9WoBdvf7m
                      az3YCzc8YKykvVgRWDyki+A8YHyrO+aBqr2RvJc9EzuSPfBlC73HDck97BagPGdlf73eSk89UKdN
                      vVCQdzwn+rG9CndnvYv0uj069QC9KmEHPUFgxT2Id428W+iJPejyZbxcPwe9QpkIPWB+N72Far29
                      dF2MvZjacrx4peW8gMRYvZV3gr3MXoa9Z6duvfpERj05Zbk9opFCPZvdxr14SoG9Qx1wvXisrzwH
                      b4E9lE7SPNXthr3aTsu9zfFAvYZSl716K6q9AP9mvNCQJr0AjvE7g3bEPX+2pz3zn649BlUXParP
                      Z70AN1+7mmGAvQR3D71Y6iM8kc61PQC2CjvU8xS9lRyePdQq5Tx0h6K8FhUcPR42dD3IsYu9a3W9
                      PYC+y7oGBxw95942vYBvwru4+6O9OxyivU9qzL3AVGQ8hJztPFNyRL344MC8IByavAOjvj2CAQI9
                      An5fPf1aW70hgL89yOuDPEzsAb0olhI8SoluPWAR27wS/8i9yRalPdogrb1A2zu8oqGsvWDwyDuJ
                      s5490FYKvO0IWr26nnw9qox8vYrsfb0laYY92rkcvcITGz3v5Jw9S9qsvfIeUz1V7rW9sIy2OwAg
                      ITxMYIY8KtaOveKKXT3P0MC9YFADO/D+ZryQfwK9lDWBvSAEYL2ecJi9JFHsPLwz9TxmCVU9zy+a
                      PcA1kb1h55M9gJeau4jEsbwp3b49Ovg9vfYFC72mAiM9QJmaPGDGwjz+W6m9wg9jPb0GwL3y8x89
                      AMAUvdDUtztwrE69OsREPU6UFz3RQZA94eusPe2+tT0qMUI9OJ30vPEvoT1gtag8lCyAvSKCBj34
                      xL+997CSPaf9rr0e+m89cJtJvAA+fzwTnKM9/VKSvaPWgj3w7K69Sqa9vQ4MCj2aJcO9tEe1PIM0
                      Ob3TCsc9twWwvYCtKLrUyBK9w62hPbqBQj2dWp89clACPeAS77uA0ti7cp1nPdDsGb3M7/o85HLP
                      PKm1mz3gU3a9OICyvfrEZz2aDxK98B16vPltoT3QHJu9fM+EvbVhgr2X/TG9ESe+PWJaQj14JtC8
                      f8fKveU2iD2gKpY8u8KVPaAyjDsKOm69tr+qvR2BP72XCZA9yOGkvegFCryecwM9HeJIvYKAGT3C
                      Ibu9brkcPQ8Iqz2m/Ji9XhiDve5YBD2wATe8oNGmvXqop73mnZq9XVEivVK4vb2wl8+7u/a5vVB+
                      l73ICLO9PVDLPW/YxT3Neok9UWbHPZjyZbxD5iO9YCaRO6ofFT069De9pFDnPL3aPb2ra7G98Flv
                      vFDBEL2yXzk9VEnyvHDMKTxikIW9jYDAvY2hKL24/se9yNuQPF0HJb0AY445qnQ4vYqPHb2S3ho9
                      dEPPPHCRUL0DQ4Y9cCInvRh3JLz4fpY8M0a6PSCIuTysMwy9bFqcPNDzm72nok+9GBJXPKxBwzzK
                      ezC94TKLPWDaer2biL+9M7qjPReotr3i7RU9AKF3u4/IvD2q/3s9tdG+Pfg+vLwA86i7hFD+POjy
                      YrxgB0c7gHZivXaqA70jISq9eXSgPbFpqD2ylCc9yKujvGJVlb0oela8Y/SPvZVPwL06oaq9NsMb
                      PQItAD0qGSK96zu8vQzI9Ly/oL69Z65svcD5FTxqV3A90FAUveMJuT1YH1k8UEaCO1AHjrsDj8w9
                      8CZnvJ+quz1oDTW8AugEPek1oj0KwG89rQuTvZ7wcD2wOmw8NvMfPTio+bw6+UM9CaikPeMYp70H
                      J7g9qmlTPaDnn71hsJU9QKW7urCtRLwxHpc9R2C7Pfg5r70Qvki9/NmGvYAtRDzRLrs9AGsLvViy
                      mb1it6O90s1nPcJnw70jop696mmmvVRcrLzlR4O98rdmPVdUPL1QynC9oGnAvFAGczwgKxa9PQ52
                      vTrLWL3gFJW94M2/OxAmK7yatrS9aG9uPL18eL3NZTS9JlgPvW6Fob2iDSA9FMiGPMBTnDzQrfw7
                      aFUTvAffJL2gYr685b2ovWnRvD3+KxQ9wHUSvF4Bmr3AhLs6mRzAPQAwqjpwsw08+vsePUIKoL3I
                      hvW8A2aHPcI9bT0xs6Q9irW7vfZLSD3Q8pM7srd9PYBAQr1ARB674Ia8OztknT0pl7w9TuN0PbJ6
                      TT3Hd649c5mLPSBDjbvADzO8YxaePWG3zD3l0r09uP3HPChLsTwD4DG98AKPvZM7OL0z3E69kL26
                      vX7MTD1mH0s9bGPMvNHThD2Ak6E6bbVcvZA3h70RBp09o2CRPT0gnD2ojpA88+uxvXikxjxSc8K9
                      a0KzvfS5wzyls7o9wNwZu32Zg73M6+S8WmWhvfHcnz2whHy8PfcjvUUjyD0NwUy9F1w2vW8ytL3V
                      2MA9bbFnvY7SOj39ELs9UOY5vfLTmr1gZGI77zGNPYrTA70IUoa9gsJjPUGOtj2A5+m7UVmtPeMJ
                      pD1IToS95RiFvTCvY7yWnpW9E/C9vQA04TgXBsQ9tpwQvaNhlT2gOag7MXSYPbEvpT2giOS7KHmO
                      vYhCgL2knvU8qH/kvFfxjD0gZmK9DXGPPdCfwL2bSqY9gH56vdA02jts3am8SrOfvQ33d72iqE49
                      wVSLPSgJDLxRcMc9gD9fPChVWzxPMrq9AAE4u+CDr7uRyL893YVpvd+qgz1uwSA9ejsLPYsarz1g
                      quS7SP66vQC5yby/Oa+9t5pOvQh3mrz9kzi9JWOyPYe+Yb0qrGM9b6zDve2Sdr2zl7O9YKe0vSCW
                      y7tAyHw8OeWPPbPHP70QACS8qU7FPVPupj1aVKO9ED93PP0pNr0IhZy8XWXMvQWxqr2KRFm9gG+b
                      vJxCDr1agTs9shlgPcPPgz2wGTC9gtOqvccnnT3u+gU9mhEnvZ1oPL1+RjM9FhSsvUQC3zxQ1hC8
                      0BrkO5cnlD2Cl1E9Dq8nPWVslL2wdsE79YKjvVsCmb0cQhC9ikipvSlVqj2svPk8wLcGvEBIDDw3
                      nj+9g/NfvTOYcr1glNK7cK97PJhtazz0eRS92mpEvUN2Wr2DEh298DtWPKefvL0pt4U94Pe+vNqd
                      JD0jxmO9fcowvQAQVztDLlO9Fo5BPZCwGDyZW6s9fR6cPYPxrz1CQSI9oPBROzQC5Dx/m589sLbE
                      vQDmZ7m1aJM9gNpOuoBVjjoA/um6w6PLvUTi6TwJJpQ9TDz7PFtXgj3hQ4s90ogvPUtdp72Mn7y8
                      7cqevWMYML2iwRo9wH2svTiV5ryyG7O9dHysPEymuzzuNqC9UnplPVmZjD1wwwa90zdrveDgurut
                      0iS9A52wvUMmIb2nmUe9AIxjvPi7v71OPai9YgmpvdGupT116Jw95Bb1PCPYyT10Ff08m2KlPafw
                      rj2sOuI8DAeKvKadFD2B4as99PayvJlZjD0YcVA8F3ZXvSpbxL2CbTs9iN6mvCQZir0tUpG9gByz
                      vXvXwT2MvNu8oHyCvACz2jvT2je9Y+XKvfhbsL1naMU9EKCUvdrxDr2F8I09GM8NvHOBRr3MhgO9
                      UhEuPQjznzzwPQ+9AGdqumHitz1vzbk91Yy+vSKFsb0K6kY9ZCbcPApvOT1gJkG7pNzqPFfmnj0D
                      eq29kqE+PUO3S70oZkc8aJl6PDSU4zyASRU8i0izvVQ2lDwAe6i9ZCbgPIzdnzxay7C9wo5CPcN3
                      vD3oXik88NcTvIE9xT3M2RW9uJD+vKCExjz18cE9qXyLPRDcbzwYNSa8EvJHPXTLEb0yAhs9rvFt
                      PQGlyz0H+Ua9i3qbvbc/vL3WLwY9Qm9SPW/VgD07MKM9gGGaOocNNb3RM5U9kYC8PW6GqL0NjYo9
                      +brGPSx5nTzMv6K8Gei3PZDKw70IKaI8TrNfPXKeAj1sxc680qKNvQyvEL1uUiE9gA1fujI7ND2M
                      bZ689mVgPW6QOj16eF894I7RO8r4Wr0piYY9NRKUPaINeD229B0989e0vU1rwz3gKIO7GaKlPZRZ
                      +rwYCg+8h0u9vZ4Gp70+3gY9N2OlPYtesb2g5pc7lnKrvVhLm70X1h69IDGLPCD3wDuguuY7oj3M
                      vYe8gz0umoe9kjsRPVouEz2Jx4Y9WvmRvVDgYDziNRI9RP3pPNALbb3jNnK9WRaBPVYCMT2gH/O7
                      AHQ5usjYkb0qOUo9abqJPRC+r714d5S9xkFIPRBMHDyxrss9zUS3vQrxbD2D6cm9AHXwO0yp+rwt
                      MDe9kAVWvGo0c73tRC69YCFRvYpMHz2nxTS9ihJdvSqXVD3mHgk9Nr1fPfJmYT0wc7Y7YJSRvYd1
                      qT06PBi9nD0DvQT81jyN24M9L6KvPbzkh70Soba9IAOpu8njgD3yVys9nKrePEB7iTrY3w48KByh
                      PKZ3Xj06GQ89gOjpO1wpBb0wGMS9k5OuvaoMKD0gMYW9jvaEvebIMD22TzQ9iGqAPKi5yjwNA069
                      AdmPPdABPTybuqQ9MqYvPWf4nT2Pe8C9Mx+lPf4Kjr3wJho8+7HAPRqXcT0qC7W94N0evWNUTL0T
                      z5k97iQWPRfRcL0yPmA9AKwWOYLfWD0glIi9EwJUvcxinzzjnqy9K/SlvZTlxbzqmS89Fs1XPUAZ
                      1LzqHmm9QnZaPXawCr1W1Y69ssJ6PU2guT1gKRg7gMnNO/Xgkr17B8u9ihoQvcoNq70wuMI7c0nK
                      PQhy9byAwOe6ET2JPWjUpLw6nXO9EiM0PXc9sD1UMga96KSovUiexjyxYps93dm9vQN6iT2IzZ68
                      MvZePVXsuj2opYI8mB24vDqQKj07D8C9HUttvXhApLwNrZe94EQBvcSA8jyNjD69luBDPTocSz2I
                      Cfe8oPgUu09xwD3VdsS9AJPIuT6cnL0UK5+88MWMvfMKtL2a4E09TZWlvcYtCr0vJrQ9dSCavfej
                      O73udB09hhk1PYNmrj0ACRC9GH3pvHxJib3AHME8nV6SPSDszLtU3d+83iNUPbAF4Dvyd0c9/eIf
                      vQfmeL0vHru9iBXyvBtSn73wbiM81WGEPeJ8VT3aH0A9hUKmPTsZwL2A4Pg6APR8OpPnuD3aUGk9
                      qKFovDRv/zzl6r89aG6pPDudsL3yOgw9EneFvQI/Rj3JnL09XRisvQqpXz2mYTY9DuVkPaYldD0V
                      cY89YCmhuz20Y73onSS8uGOEvYqzV73oYCS88uOevRIwQD1AgH+9hrYKPSNvgT26oYa9MHekvRFg
                      yj3/Ubw9plNPPeajCL30b9y8ej61vWwmm7zVn509rBrmPOQp0Tw9DHq9brumvTighL2Q9Za9Wmen
                      vdmijj0QLFO8WpBIPbHjyD0ag5i9yrCbvaBaeL09kne9wPxnvDDwKbwxQJ49+EuzPGz3ir3AqLe8
                      ktV2PWwp77zQJEy8+XrJPWEqkT3EFts8IP00vYm4hT1aurm9+xuGPW09oz3CWTk9OK+TvJ6oYT3a
                      SCu9CnLLvdIADT3alHo91zlmvdmtxz2Q7gO8+jAtPex1kDwnT4w9WEOJvADptzsrhJw9V4lsvRIi
                      fj1A7Xa7pLPmPBhDyLw98SC9uVWYPcA0b7294LK9MplMPaLYbz0CJgw9tjlRPShksDzVW689ESeC
                      PbyPEr1g7PA7aK/IvKYKgL1ZYqM9ogovPfhutjzMU4C9AJbyvOAIjTtzFZQ9vp12PXpoa73QcVa9
                      8KuTvTrjID0dGzO9EIcyvNi4jL1QJY292/+tPQfGuL0B6o89TP2HvBBZeTx7br+94Lndu34JZz2g
                      FXu7kG1RvLJ1cD3go7W9yCetvM4HNj1ZApk9nbodvULHPD36Xwu9eS6lPUpgQD3y0UE9B4/GvWOy
                      nz09uqm9lzeyvXFIgz0ccYW9bYHHvSp8bD1AW9y8CGeavT78Zj0koO88Hoc7PUSs6TygvVS7Dtgx
                      PQr+NL1gf5277YG0vWsCgz0bCLO9j8qcPWAx9Tuk98w8So10vTTO1LydUKM9eX+QPZpaeb3JhMo9
                      zTdHvbvPt71AIkW7GsEXvZNvrr1ADAm9kJtmvACLQTyqzJ29UEOVu46paT1luo697jc8PVDZD73p
                      nYg9wD09PIwdlzysZK88HY97vegFwjzjiag9YEHSu34fl71MTLa8zA/KvMgehb1gU7K9t7Q7veDq
                      h7zPb8y9bUZGvcBpiDyOKAc9mgCZvQCjIrvUMcw8aWuFPReCtL2Zf4g9WNtTvNAtqL2xBI09gG3X
                      O2wllbyNgmm9eDDlvJdEkD0914G9Pu4WPYFPwz0Lq8S96i4JPdHzgD1WsSc9hZiQvV2Jr71aDnu9
                      QAzCPAkAuT2+gik9oAK7u3ieiLwA5xK8oG/eOxi4DbzU+sc8gJDCuqD0lLvR87E9KcSkPdceLL19
                      EHO9R/eKPf49Zj3qkV29Wo0sPd1gML1zH1y9d6G7PTiQujzY00M8VtQiPbn8nz1QDFe8KpSJvYDO
                      Pr0EltM8AA7QOULhx70YbSI87babvXDQcb1lILy9oBuBu2KFyL2wyKa7AGYwvC0FUL2zgam97wiP
                      PaZ5lb35cK89lMqwvDqKaT3304U9adbGPTH3qj2NGbc9IFWdu/2Yxr0Driu9gCsOvGLubT0zybA9
                      HbIdvVhzWLwnk2e9kiVmPYytojzjNS+9ICeovEhpp73zHpG9iJOMvHqetb3YuWI8HwXHPWilpbxy
                      +GY9WY6UPajBRTyCNF896AYhvECbaL02ppG9tKuxvEP4wz21+4u9GAuMvZMwlj3Lkp+9IICQvI2U
                      Nr3So1M9kMoOvDLsWT2A02C96ql8PZ5hLD36oiG9G3mfPT8js73Qqfq73g4kPQA6rboHpII9cnAk
                      PeEjuz0j0Gy9DBbdPKN+I73yY3k9J/OwvfSVCL3+0jw9oH6MvcJmZD0ImJi9aO6dvRgWhTxQ+3S9
                      6Hs7vKQmir2A4tO7jdFHvcBRObxD4DC9Z9adPVO/Xb0QSHa9QMycvVf/RL3yrsG9c2CZvYNexL1g
                      5oO9JAL7PMc4L71A23U80QKePeBVlbviIk49usBDvZf3yD2MB6u8Jpw6PdATNL1ShxU9dNAWvTOR
                      a712WIq9V447vYLyPT1BD7M94ExNvU5vqr01G6a9AMsJutYwMT2Wkgi92CnAPPqyxr03Obk9FyeF
                      PeDJkb0AZCi6NHWaPGJoZz0nIVK9LnlOPRzjE73AhJ29M0nIvXiXyb2ZBak9QH2culn1wj2YIMA8
                      IJEOvUBrY7yQ8BQ8DpMGPYD7WbxATfe8KLFOPNR8uzyoIlu8JJ3UPHYWUD1g4gS7k5FjvfeHkT1E
                      W/48WoNWPWB7wDuamMm9WBK3vOLQsL3t1aG9EKN+vdJAaD0aKh699OinvPDFRL3If6w8VJQWvZ9O
                      oT00H5e80F6rO6jyBzw788Q9qoIcPYAW5rtAO2G9vd1kvaNesL0UXtQ8TM/NvJEbwD1FdYI9OgA9
                      vX1SwT2VnZY9oYW3PVDgJ7zyR6i9w/SUvXRY8jwCMhc9QiFZPU7/FT0SiY+9gI3Fux3sTL2p4JU9
                      0/1pvdo2jb031F+9DPnHvFjsqjxa+3M9N8lzvW3MuD29WXa9IBTHOzMik70InZI8UrVFPSoEyr1B
                      rso9+TycPXBfSTxq9R293nwCPcMCqb1A1DQ8rHLOPNg1OrxArY469U+2PfMTsb3j30i9gI6WOvDh
                      Hb29oU69AJ5xOyreFr0VGqU9US3DPVgPwL09KcO9ALdEvWa2Wj0UD6I8taTHPZvKpT00mqm8O5jI
                      Paa+HD3ggIC7AuQvPYDBjjrsccO8AJstPG2mRL3464I85UjLPfJGqr3wywy88ZSjPdRaojz6A209
                      EKemvVGZpT0gmcA7APCVPGCIb72v88k9tmYCPetonr0SvFA9uL+/vVE+pD1nHXW9gCvevHSY1rxq
                      WxO9COKivESo5jyoMu+829ysvY5HWD0zubK9XXkoveg+kby9QIG9NHXVvOMuJ72QE1I8ZQSMvfSe
                      oDwgQZ690smqveDImzv9pni9WOKhvACtlr3WsnY9YthSPUx81rwHQXa9VIvgvNYJF70spLg88D9I
                      vFb0GL19yJ09Y41fvQo5d73ZTZY94Ly8vRAQETwcZ+g8C+KkPcWNtz3AjwC8gKiivChOvjxqKnw9
                      9AXYPABg1ziKDws9UNcyvDnjhj2eZTM9GJWqPJ+uw72onCm8A95vveLkIj0hMZ49qqGZvbNKI70n
                      Z6E9oKwvO1jkijwgCxa9IPuWOwCLvTl4m6Q8KHtdPNwS7jygv2u9eGWCveNZt71ML7A8GfjLPQAE
                      Wr1KLn29qGsAPMBfdjuAmRC6PcUivVv1kr1SbBw9V13LvdhogLzyn1A96M2svOJpWD0TLCS9qrki
                      PSh2tjygt7y8QLNQu3c1bL0ihlE9QOmfOoFkyD39ZEe9wP6vuqfoML0YQ+a8mCKqvSDItb1RYac9
                      npIMPayB+jzy1HU9WBVyvKLBfj0i7F49MDKZOyunmD1AUV27AKaeuZDuarygK2s7RgIPPeYwXD0y
                      Z0g98UigPd3Gpj2wrB482IRAPMAzlDzMl/C8eXWnPW7rBj1Ze5A98u4wPbBlAjzVq4y9QYm1PUC5
                      47y1kso92nNUPQwbnjwO1xw9OdWUPZqeur15d8c92NJrvBL4dz2jH689Ovw7PQk+pD3CHG49wkks
                      PQBq/bwRips9tt4+PYVgmb2LU4A9Vy/FvVAPijtCNyY9mRzBPajoZLxQS0g8q/6rvcCJibyjS8C9
                      aAWHPIBt0joaJSc9aBikva6wHj0R44g9bCOBvf6sMz2gFrU7pkcCvQSNEb3qNwy9jOiYPCitIrw6
                      Esy9hBz5PEogBr1obzU8V7qaPRBVL70YT548Y6EovehGHDz9qJQ9Kh4FPU5LXD34O6q8seaPPVBp
                      ibsAEtG6xTWdPXrpn704y8C9k1iBPaD/Pjt9XnO98pcFPSa7Oz1jtUK9lAmvvPZrDr1A3ym8/WtI
                      vZQ/pTwYzoC9PV+rPdSCrjyjgqw9cLwTPOB1mL2S28i9VTOwPVqyN72MqvE8DsIuPV2xhz0pd4A9
                      J1JjvahO/LzI8qG95dqPPeB8IL2YN7u8aHORvFHewT1yKaC9+yC2vaic97wA+Es6VtmOvVA5HjyA
                      Rjm61rJJPVcYfr2wqnG9sIxevGCfF72w4u27RMD4PHK2mL1l+Yw9UwG4PWQvEr3MBaC8KDymPJ30
                      Tb0aMFq9jC7PPMp7ur3irHo94JSOu8bZCb0wCBS9fagnvdimQLyrp669+MLxvJIZx72yWoW90KAG
                      vS+GyL0lVp49MBu6u2Aoojt9BHy97SCfPUzZkTyS2So9UL5bvKo1nr0DiMI9rA2tPHeSd70Y4o69
                      EMUQPGgDijxAHXE7gPJ3uqpDET0ircO9cGxNvT6rWT1LN5U9U/jBPS0EsT35EYs9MHewu9i5gDzj
                      mYI9lIiIvRDOnb2ia289p4Vcvbeqe72nv0+9bE6FvSPZxr2Icey82EAnvIN6jj3MFLw8l2BcveCg
                      kjyXGmW9VmFsPWCIXLv5ucU9UKLJO50veL0xisI9WCetPGSa7DxAnk47b+eLPQDxd7szU7s977Sj
                      PSHeqD26NW29ENVoPKhcyryIP7G9G5eDPQBquLvK1l49QoULPRhrP7yGahO96D6lPM4Kfz1WLR89
                      kNUjvf9CqD0B7p89DR+NvWN8Nb1itBs9LdM3vULeGT2jkrG9vpELPfiSsDz5DKw9RFkLvUQG9Twi
                      uiQ9uQOXPVezrD2yKTU9hKmIvTAB7bucEQS9lkEUPSRiBb2nUMW97ROZvaahUD0Hr2K9dM7sPJIn
                      Dj3Q2qS9aOS6vQmMjz3+Rh89AcWvPRiQVjynuB69YQfCPVAJQr1dm7m9ZhkOvQ5rDj0AGkg5vncn
                      PQByybrF/rE9Ge7FPdeteL0A/2G77v17PXRXmDwn+VG92HiZPJvTtL3AvU+9duyovaMCrL3OgKa9
                      kXSEPSvTqz0h05w9Te9KvcmFqj0wV8m99E6ovOFRyT3UYL08MZa8PUBK+rzhI8M9geyKPcpeN70r
                      zKo980yKPQMrxT14acu8eLukvR2LTb29OrG9AEKVPJBDqb1mPTs9ACwcu/jbszyL55U98o9UPXJB
                      ID34Avq8IP4gvXr5Az2uHws9i77KvQH0vj3gXo67p4BZvRP0sr3G1BO9dGmVPMN1uT3R55I9zFvf
                      vBMqsD1OY2g9blQrPXUihr0ajmQ9bHIZvRYscj14jOy8ErHEvfSXnLzIZd28QFuwvMo6TD3ArSw8
                      4AIhvep0ZL1d77S93U+SPT39xr0yHA898F0jvZj6i73yzSs9G96UvdMGtD3YeGu810y+vQMGvL0E
                      m9w8Aeu8PfJiLz2dkae9ZBTnPM1jbL0MD+U8Ram1PZ8tsj2Axg+9FXjAPTBPtbsKC2C9DKWKvei1
                      zL2gv4s7sROsPbBAYLwFuIg91aC1PQW5gz1QFAY8LDKavFvMyb24eMq8pD7gPKwPtTyg63G7gAHL
                      vG/mw71K2ke9aEZGvFSat7xyBWY9t8V3vWjecryH1xm92JZkvFs4qT1Y5Dy80K6uO11ojj3yhCk9
                      1FCWPM08o705fbs9a27LvWL0xL3Aso+9ruU4PXKzsL1IwKO8TvWavZ2uIr1A7f469HPYPGF8yz2x
                      K789yamEPSLrSz1xHZA98IdfvFrBfz3t4T69DsqZvT6YMz2FQJu9x3kxvXj1+7yhtZo9ALQdO9CO
                      Hjwaf2a9YFvMPAfTx72Xz7Y9SzGnPQD43LvpSJQ9+9DGPcCZWjs40Jk8AGkgO60fgD2GgQo9GLkc
                      PAx+qTxGLwe9oJV8u2VHgr00ZMU847y/PWNpwj0PebU9976aPVDjIL24aci8ufOcPU0tUb3m0UU9
                      YKZROx9OgT30I4q8hNLRPGiNLDzDgMG9APjYOkDbFL0e2qO9/eWIPYDmFLx7IqO9YL5pO8B+jr22
                      B3w9UukwPQDY4jt4w8c8MOMSPBjkmTwd+zm9bBvKvEBV7DpQ0De8AD93OhV/pT0nOGe9XhVvPYv6
                      tT0yYnA9GaaAPWzpr7yQfUm9axy+Pe3Dsr3wSRO8JuQ2PWNpbr3yqWk9Pq5PPdssv73UY9e8Hv85
                      PXRUyjz3Qyy9h09GvYGYwD0YLCs8o1e2vdLWRT0IUL+9dyjEvbIDdj0aNGs9UmkAPUXug70aJm29
                      TZKlvXnfmz3lOcQ9FDP3PCDJzbt0M7s8eHmEvMDKojy0a608jm9SPT7PKT3OiZG92ETrvIwaAb1H
                      2sa9euQePZZsVj06Z3C92RywPVspj70Sj1A9lyacPUCiCjx6rmi9JFwKvYCN5zug6X+7NLmTvBcN
                      kj0SszU9jfiPvVOKoD1oh0Q8rVOWvS3zUr1ynUE9qi5bvTjjv72Q1DE8A2M0vYGpzD0/gsi94GYW
                      vUDHtr2Q1wG8rJqkPLBawjtpRMI9w162PZKWUz3N5mG9uol9vVPGP71s64u8aCwRPDxtA73oc4Y8
                      8feXPU1Qvb1Zs589chk4PSx5k7yAdcs7uqAmPUCyK71kkus8j5W+vdidsr2C/EU9AGENOrzUFb1V
                      Ocw9CHSOPFnfpz0oE1Q8AIDdOaAi8ruqxJy9IAyQuyjZ+LzsfaU8usAUPU7Lmr2oosW9lIWePLF6
                      vz3K5Cc9cp0qPV7CUz39+p+9gCSjvCIAYT2hBqg90ChdPG0iP73a9yC9IGKju5gFKjwg5p88mQij
                      Pay7qbz/6KA96pwovTo4Kr0YLa+9/lkUPXA6ZzzCTXk9YpYSPZMtq73wBkI83fUpvfPZQr13Ojy9
                      gIWMvMVEnz3ix6e94v1sPWAvqDu9rb49yj9aPVL1ZD3gTYK8GKARPFKZvb2dgGS94uEwPWh6ZTzJ
                      k4g9531mvRSYjL1yRYK9RlUdPdiLPDxMzbk8HeMovcDqkDpq7na9YHbfvK1ON72YSHO8x+ChPTj3
                      9rxaTBw986RCvWRS4TxQbKK7YCzzO6DHdr1jpWu9p3GNPYDapDsy6Gs9B+N3vQBobjhsG7c8mpFI
                      PZHMsz0L0qC9AJNpvMBQrLzIsI+9fA4WvWi0XTzYVg28YkN+PZAwab3gdMO9/V+svYWJmD0GFUM9
                      HzCgPeMKpj2gmb68LI/TvC43qL2XqLW9hLjjPCzxlrxmAG49WJ6FvIcKb73cwwG9l2xkvfRbA71A
                      VT07yvumvRYNiL3z77A9HfU+vSZsOT3AyAK8IqF0PWrGaD2JapI9l3gwvc9hzL1aPGw9+rugvYpR
                      Rb1NX8m9GQ2WPROeIL3g4vk7v9XBvbdBIL1Vuqe9z76PPTIyxr2g06C71xfGPYbQOT282Qi9qK2N
                      vXiQhzyKIlg9YRuBPWJ2Kj0AKM04hYu5vZPCeb2tCkG9MWGDPUd6wb23Aok9AC5NO690rb1R0Jw9
                      EMVRvOzD6LzAsFC8cM+vvS+PzD1CynE9imyGvYB0j73i8wI9L6PIPTCfALyAMY47KNLyvJQigb2m
                      Uxc9mGmMPMX2ib22EQO9AEUEOhhHtL2nUbO9d25PvahDjTyYdmk8RjsKPaJKQT1IGsC8VtMOvXqu
                      Nb19nru91Fu7PDpLNz3XVo09kEEuvYfUwr0avia9CnE7PanXjD1iiRw906m4vb0mr71Yjac8/wjG
                      PQPrtj3qvQm97ZHLPayAmzwDPp49t7W7PbrRdj04eeO8hFrcPGiRKbzi60s9CwmevfPkwb0z9VS9
                      CnCgvYC98TsYzsm8e6WOPWBLiLzOdRE9WtpZPakCsz1st7m882W+vQC7ezqBysc9Pp50Pbc4e73N
                      uYM9nBT/PIAZ97yJ75M9dlUQPUzKtzxevKq9qGokPNdgc73by5c9wI6VPGfzQ73l3ak9+vhkPRhr
                      bbwQCWG9ACQmOgvBrj3g2qA8F1ywvZlhsD0W0wO9AAkEvViFw73vHMa9ikievSnywj2NjGq9oiCQ
                      vQ2FaL12FhY94yykvRjArjzlXYG9nHcBvSI6Gz0Abfs5Si9DPejhwzywejW9cowkPU4SNT0qem09
                      fRCKPTApY70T81290ZK7PbN2d73AoqO90ERZva1evb3wxlC8ELU6PGNokL0owjq8VaSYPZ9Ovr0s
                      XIa9NLyHvR0jtz10NAq9GxmWvapSBD2DtUW9sktQPYdec70anjK9kLGZvQdTxT0a3Hg9Iv0EPfBw
                      BDxZ6sI9ymAsPX2VoL2waWo8vmV/PQCrmr2AVcm8g/vLvYqEEz3oP5y9B7q8vSfixz2wa7O9/lBb
                      PRMJNb3v88u9VJL9vK+JsT3Jn6A9pCLjPHAEr71AqMk8sMGWu5iKnLwsc7E8Lg4JPVBXIbyhGbA9
                      bWwlvYDWWTyo1iw8mCAePFoKtr3r45G9l0Myvf3pG71ElPk8heOZvceys73wxAq82nkNPQrUPT0b
                      jMs9Sy6yvZ4jIj0wnuE7oOgHu2wMGb0qSGC96D2RvbQxyTwxIJw9S9rCvSwRujwQX2I8wnJAPaDE
                      HLsSH1U9rAiEPNTPjDzxA5g9oCAtvbcnMb0Vybc9+oUpPcbCqL0AC8M522fDvea5Ar0QHKG9I/1y
                      vZpQOD02WCI9pj0BvR+woD0aFXq94cSPPdAgYzzl+8G9GgYEvWdDVb0dz2+9WKiFveqaYD1Y2J29
                      kAAcPFDvKTwWpXA9kHpiPA69jb2lWL09eHuovKCkMjus45a86FvPvEx/lLwFsaC9XWxPvYCWRLoQ
                      Y3G9vSm8vXd3Sr0CYjE9WRCkPcwllTyata69K8rEPRgleLzYTn+80d2kPRIbHz2AG6Q7ARfAPUzz
                      njzsChS96lPLvYezeL1TMr09wXOZPYDMUTx6Z1G9zHPEPPQ61Tyq7i09wJzCvNLwwb3t8q096vuv
                      vYpCer0AEU29aAidvJjYArw/dMU9ANC0vPpSQL15Obo9Es++vbnMvD3CB2U9h6KUPbOEy721S669
                      KWDFPQDkDr1mhaK9KeCUPbZ3iL0QHye9rGHCvCapET0o+sM8ZlSCvUp7Vj0wi0G8gNCiutgHoDzK
                      2HQ9Rb2SPaTE9jy1GpK9g9aYPTKMeD3YQZM8wMDBujQ79DzQ1Uu82g9jPXCNG70CmDM9a9G5PWLP
                      Aj1BhpY9NYCvPbBWGbxNVFS9ttAmPYKbbD3ov6M82AqDvOylv7wAl/e7UgMnPWWmmj1L9pk907il
                      PfC+BzwA7qY7ymIhvcBQEb0idl49eCGrPHlaxD13qr+9YVyCPWPcvT1QeD29JIToPIuyuj3Sz0o9
                      dUOhvWEQqj1C16G9gJmMPDO5sT3QK769Ql5sPbiv8LxHB0q9zbG9vbOGvD3C35y9AGkNPKJndj10
                      oYe9wOyluhiptjxYYZC851qIPbachr3Ugcm8ESGvPdAxRr1wZUs8owEtvWCuOb24Gcm8FlZVPSCg
                      iDvgxMA8OrYNPXTRuDyFW6g9hUyyvewtgzz90V29fDj6PAsvjr0LoKm9hBOHvRB1pL0wY2m9g0mW
                      PZUElj0hNYc9o1e1vZghYLz6xy69tBSwvBINIj04Xem8IAr1O2Ai9zteunI9oyt1vfY3Fz3z94c9
                      YG6DPJ12sj1waA69KVCRPUaIkb1y9EA9MYaxPSchoT3YVpk8mgo/PZPtjz3QEna9tUevvaiUx73k
                      efQ8cUOIPcLaxL1JT8U9TI+zvFz7Ab3bLJi9UGuCuxiWCDzsLtu8ar4vvR32J72oQUI8wN1IPAzK
                      przNrI29ndavvX29YL35f7c9MrYFPWKQnb0DgcA90v4rPbp4ab1gv6a7yHC2vdhcEDyD1ok9uD6o
                      PMXinj2ZxYY9SgVtPXkbkz0i0is9oBF1uzTfnzy4LpW8YNBJO2g257xNuyO9ug1cvZDUeLwDqky9
                      F9OrPYC/9boWBRY9dz6yPfg4ubygobq7E0ywvWQKB70QtnG9xQ2HPff3cr34eNG8QF1NPJQelDws
                      NKa8QiEAPW5UPz24Nai8kD9+vcaRQT1476Q8QIFdvI9qyr3zVqW9CpuSvQ5Zqr0Z0Iw90MgJvICT
                      krr1+7S9NJ26PLX8mD3i/hI9qL5avCBFq7xnXH294F+cO63BrL1Ke0+9JhoLPZ3QGr0S5S89y4Gj
                      vYptPz3anru9kA9lPOcwjj2g0dg7V4uFPXPZWb2I1rM8CZuRPZd1vr0Uw7g8YP63PN0EMr1jL129
                      oHNVu5bzHj23baI9KiAwvVhPbzwNLq294KAZvViPCDx6Dr69twS4vWqZZT1DKje9lVOWPbpZTD3T
                      K4s9eKWGPDRJsTwABIa7dE/tvAE3yT3C4zM9emJxPZ3Gy70A6mO9WKq0vPppC72KrEK9QHvVvA3d
                      hL3dIcc9lNmHvfhBrL0jFZi9Dw3BvYmwsj0QrHE8lZ+Vvdeiyj2QP1I8wLTzvDpwT70VmcK90RnD
                      Pfumtj2D8B+9G4/BvQhQmjxhKcA9qJUWPCtmvL1T66W9wvMaPYiJjL0NDnS9uLeLvMgJ0bxXz4o9
                      0GxQPELVGT3A7x273caXvbCxeL0ljIk9Mu3BvYQG2DyyKng9V+tJvbO8cb2qClM9J/NAvXCrkr3g
                      4JG9KNaWPHPdG72uyIG9NZOCvXvHpz3Abz88yt5JPVCrjjvFsIW9GbDGPQYIVD2y4LO92AXDPBOz
                      or1dvLu9Y2JbvSJmLT1Cgkg9r9y5vRExij1s7Ky8tAfivLWqtL2T10O9+lYdPfJdCT0KGby90r9p
                      PYCZMrygmU+782upvdj0rTzAUQa7pNTzPBhD3Lxj1KS9MyE8ve0DmD3oMoY8sBeXO2Q5+Tzgf+K7
                      4/OMPZV0wz1pt749hXWmvVQUyLxGIm09jVPLPZ/QrL3AS5O9TdCxvdbxOT0JZbk9f1ySPYgo8ryG
                      T209wOsqvYBwtDsTD649n8XBPWyjwLyozYI8rh5TPehEMbzUI5W8fVG8vV6sPj1WL6y9kvyvvQCZ
                      i7vj8pC9V91yvRQd7jy6HSe9+KKFvINbIb3UXPm8tzErvZdivL0o2oq8gnAbPYD6mb2iUys9Ujws
                      Pag8Drz0ZbK8HTqXvRh9TTwXo729EFwGPEMmXL1LbbI9bAIJvYAfJDwwDp07QF6xvZgVKrwq3R+9
                      kNV8vaf+a71AdYA8k7S+PZQvqjzR9JQ9UGxUvEDAHTsOcgE9wIahvFBetb1R3pg9gyajPbuVgz2g
                      VvU7YKM1O+DI/LxGnZK9pY3GvYBTtDyXNMQ9w3dtvWC9vrv6D129/MT7PFgLvrwH+Xq9/J/RPFsX
                      lT2gRxS7dEKmPIh3wjyeX3s9RWaMPatksj1zuXG9MEiPvc65AD2BFo09rEqwvHdNaL04YYs8ylp0
                      vUAZgbppPoA9lll6PVjVkLyookE8zGetPIJTQT20kAy9sqUfPT29x72I4Z+9QJZJPJ3wtL0XS5w9
                      ZV2Pvc1qeL04qe+8GDqgvOYXfT2aeh69AHgZvUDdOjtilw89YCu9vYJGLT3KBV+9WHO/vVgK4bw9
                      +649Fjg6PaDnsDvWUEA9pPLbPOAXn7vhGaQ9YGVoO0uOv71nw7292N2VPHpKND3JeZk9p0fGvdSE
                      sbya5Wg9eT2ePZDRMDxBrqM9ynx9vaAfTr3oZr686HTpvFXLkr1sCgq9tJS7vMw757yBFY49QzGm
                      PakrhD2aRVe9P/eSPRwe4Tw3umi9kpuCvU3tyT2M1qW8VPmWvMuGnL2A+US6mEc+vEeAtT3avL69
                      IGQqvRZSAb0dlki9s/i1PSjQrby7fqE9vfmkPViYCLyGJFI9IJzcuxm/uz0FdLo9DSiGPeDE+7vA
                      cy69uDDJPCwR+zyprIM9T1PBPSZ4Oz1DBJq9jCTWvNDMA73Q8Rm8VJeQPKEajD2gM3u9QMlgvDJX
                      aD3yfcG9yrcKPVbBWT1AcE88qfaUPTpuMr3Wv4e90y6cvTFphT0Hnri9Q7CXvVFkij3P0pA91k9m
                      PY3bgz0K4mm9fy+fPXSTAb0Aln88oqtGPf8imT02SZu9xDb+PKkuiz1D96w9Sd3FPVTQhb0joLY9
                      WOo6PICMAbx7OK29qAZhvDjBuDxFebq9yqYvvVfVOr3XzVi9NJazvIAuEzqM4+e865GtvWh3rDwr
                      66c90st+PRjcWrxAsJM8vQimPeCwrDvAfqW8oCkzu19HzD2oqiI8NkUBPVd1Kb2UNha9gGH1O0Co
                      H70QZUM8MsgSPXumsj1MQMO8sGIyvZ0Dur1i9z89m8fCvS4XVj2mAQW9Nn0EPbE8jj2FE629rBfk
                      vGbvnL23IGu90hNyPRpchr0wXKi71EnovLBEWzxH/pE9eODGPEnolT1qGju9W5aPPYgDmb1zxZo9
                      gIfwOqRz/jwAxem7pA/5PK34YL2AZwI8pde2vQBHNjrRRoo9/QOEPewoqjxorHI8tOKVPFT4nbyt
                      LUq9yqtpvUJdQj2cY+w8DXvEPRdEPr0AkHW5ItyMvYBMqDxQh8Q7YOaqPI52hr0weQE80AW5vZ0T
                      xL3gUJK8paGhvQ3bxT1xbKo9hjNAPQIvez3A2BC95WqXvQD2ALuA71Y8x8SVPSUPjD0Nhbg9EfmJ
                      PRiz67zYPDg88mZCPSgHNzzAOGK72Celvee9XL0o3yi82Bk6PMrbI71re729oswiPWH/rj1g/bu7
                      ItMLPQHzxz0Mhre8TWi3PTVhj72NT7G9miEZvVhWSTwA13E6XkJbPTepgj3K3hO9pyebPQdWmj2s
                      hOS8sCCSO+cTHL2wc0C8fuaVvaogOr3AFWy7YGWQvEkelD1Wdpu9wIiHvBRi5jzySlI9fqhJPWvw
                      ub3XoiG9MMVFvSO/qb07Eb+9pHfPPCjPTLzp76Q9cDdivTTsDL14e7u9J9+nPbVyxL33kLU9u+nC
                      vcPHlr0RaLU90iVaPd6FFT0UWaM843covWJadz0NdZ09AD2FPPLHJj3YJtK8bf3LvSSG0zxnRh29
                      IZmQPTPKwr1DmXm9J02+vbB4lbtxO8A9VVO9PcL+QD0mYgU9uNeCPD4hQj1AwES9BgkJPRBAlb2k
                      b/88nc6YPb0+hL0478G8dCPBvGcmWL0vBY896DlrvNDZFLxsee28Qr85PfLPAj34tqI8tc2UvSdl
                      tL2KG7q9wKDEup1TSL09fsc9bs6CvcfPWb2sp9A8eTuUPRsduL3TkXO9/bSlPX2ftz0jL2e9lbuG
                      PXavp72QRLm9AN0FutdPf72wE3u9liGVvUxdF70ocWE8H8ivvdIOgb0DabG9F1MzvTC/Tjxs0ZW8
                      ZppsPWBMuLwTlbs9NiWCvexH87zQM8y7LYObvUJMTz0T1Xy94oYdPRkAvz2quHW9IXCCPYAeAjyg
                      QMe9gM3hO1Xriz1Ajhm908zLPTStkjxcHNE8SuZpve9Rkj0CaB49qjZ/PUDbVbwzRE69A4fBPfnF
                      tz0dYou9w7qnvT3fiD0oeRi8Ag4aPYxpw7w455C9x/CzPasbkr1gSxy70IWTOwBPgruXQTG9E4TI
                      vU6HFT3R46I909eTPfSAhrzQ9tG7AvUQPU2ar72wBDW9GYOWPaA7Tb1omX286hsEPZZ6Gb1AtFi9
                      plItPR8MmT2+Dyk9MG67uzhfsrxo7G88P5yUPbfne739Ipw9uldrPdHLlT2zWKW9x6GDPV0Kob20
                      j9c8mqt2vaBtT71TX8y9LyWtveQA0DzcnRK9TU01vVvksb1gVI072kw4vdpnA71ga9+7cPmnvYAe
                      UDrge/e7BEDQPHcTxb1wb1W8gLmDO5rJSL2st/s85ZiuPbowE71S7UY9QMpnO5St0LwyRz49gFrB
                      uuA1jztE8+88cEEtvKg2izzXvym96tZDPSEomz1WkSA9QFXyOsw8yDxgivu7UJOuvR1vr73Ll589
                      6UmOPZQ+5rygT1q77PWXvOIwUD2zhco9EDENPLAcgruYBs+8ANMsPJPulz2gzoe7TDGEvbFNnj17
                      0qK9KD41vMBnnL3pj6A9pHjhPIiasjxwZVG9kXyfPcCNDLuopY69oJQIvVc2LL1VTqk9BgM4PUz4
                      2LykDA29YA+tvWC+jLwnD0y9kX3HPUBt8TpyZkA9EEG0veSO2TwAEmC82BtavMJun71WSTg9fPsC
                      vWDj87vjKEm9Ef+FPeChe700XZe8oFSJu34PQD1nkTG9lMyhvK9drD2Mwxa9ACikPKiIl7wtGqk9
                      4HHBvECuR71uPBg9SS6JPaBN9bwy1nA9JotaPbvokj1ABem6f8G4vZRfyjw3b6E9bZuZPTI+BD3a
                      Ykc9CBvEvOeTuz17YKY9hWG7PQBAbrj0oA+9nmlUPZo9WL2yoYq93B/0PJZ6Gb26VHC90i2dvf4B
                      Iz0KNH+9rLydvCifLrw6ZHi9OMiFPJ3Oeb2jFbe9+tsEvSt0zL3SDyE9nQWJvYDUB70GAJ29iOKQ
                      vZPOjr11P6k9ymyUvRSRkbx+hF492rwNPbq3Pz00t8k8kgUrPUDn8TpnM1e9huQ9PWB38Ly0AZw8
                      tGn0POZgAz3YG7s8sGB/veeepz3I2/+8oM0xuz19R72AXGU8LdhYvTStzrzGwT49bQQnvVXqkr2i
                      Ghc9wMI6vL7PAT2dmIi9qAzKvZXBuL1tgHK9+pUaPQG+uD250MA9sL6+u+DfmzzSXbe9g1nAPSuE
                      lr1GIwU9h5ByvfzXBb0tTx693gFxPVKJMz36Iha9aK3lvAMMqL1MQ/o8NwFovWBknLyIoKK88+pR
                      vXVcpT23ai692LIbvKPRML2ANc06qKHOvBjDMrw4sOm8TlwzPegPprw+MTI9FzEgvU2QZL2wSsw7
                      vOcRvTmyuT371689BUK5PULuZz0lMrW9lOO2vCNMdL0gLpm9IWCuPcAqhrx1PoG94jJRPfEhgj0w
                      wXO9lAsXvZ2ZR7248ag84DY7vVJItb1hzaY9M2CUPYpwbT28/hG9VzZOveAE0bzdJpC9JuUIvZKb
                      FT2++yc9AOPIPDNoJL2qS0O9hTWovVnrwD20uOG8vF77PFb9q73CBUM9pGEWvWumiT0QLaa9YMbq
                      uy15xT3bVaC9QkwmPQ4ABj1dpGi993DKvQ6FXT2GRYy9y2SgPYBSnztAbFw8kG2Lvb0nmr2aBoW9
                      oAmKvURw+jxzwym9uCzuvC1SmT1y3VA90BlAvTO/oT3d3B29wDJSvQcuaL1cL+M8DT2zPfYxOD1f
                      3oo9EwhqvfE6wz0Y6ww87TVDvS43mL2I+7k8AF+nveGsqT3ZHYQ94I+nvf8hgD2DoUq9YiBNPYvl
                      j73L6py9tzwvvXFjrD1KEEU96BUVPKnTvj19xYQ9GuPFvezegLx0o/u8H3q5PTR0kTygx7W8eOmM
                      vMfas72os6W9SzuFPTAeWrwFBrc9bOW/PBr+t70sdKw8togvPeujyT02Q189wLxwO+6VNT3Ro8o9
                      EtBoPUVBoj0eDBE9Klo6vXQB/Dys/rC8ZYqdPaxOFb3AP1c8KL2TvQB/CzvZ37M9tGiFPMAulzqy
                      rVI9KHHCPFNysb1yZsy9gmBJPRAWSbwFvJM9gfS3Pblciz2wVPm7ULZPPKd6Z71atwe9UK+lvQgY
                      sjwGJgI9hH8RveF0jT0Z5os9LnQMPeTw+Dy0C968/yiQPQBdWjsVa7w9bYi8vdU9sT2VC8i9ofmH
                      PaM3KL1yTbi9IhxUPcDYpbxnZ4c9vEiCvd13Jr1waUM8yBmMvH/enT0GsZa9fbExvcN6mj2KI4u9
                      t3RcvQBYiLvSgn09KD51PFQg2LzIRf68uRvLPVLDVD0mYxK9XuBGPZ3aHr1WjlQ9yj5UvcIoYj1n
                      o5Q9n0DBvXNpv72DHoA9msrMvYD9SrwBFMI9AHjPuGbhWD0w1wS9Im1NPQCxFLur1aK9YBDrO+yf
                      Db1hO7s9Bd7KPQClYbvjLok9Yh5FPQ7Hbj3scQK9e2PIvZEDuT14ALc88houPVAAnrviyRo9MDgQ
                      PB04or3k49w8SIq0PMe1r70Yb9a8dlKPvYIcRD1K47y9wByruueHb70+q4K9iNKFvWy36rzU2b88
                      IIfOO/IPcz1z+0i9pKnePHi5nbyOxpW9nlsFPag3yb3jWLK9itEtPRfYrj04z4i8GBJVPENerT2U
                      Ape8+MmdvfpPW70Vepm9/dTBvaLEcz0YlM+8waC8PULAGD25mKY97plFPQBA2bhyj349cjpjPSjx
                      fDwEtwm9mG64PKANuDw7q7Y9NFkYvT6IlL3KGwQ9ye2LPSKFED2qeLO9ZCLbPPM3Tr2YGpM89jpR
                      PRijNLybOoM98EwNvWg0/bxaMBK9MAF1vVAufjyHgIc9lIXXPGYcZT3oeQM8QKrEPPTKF71oPG28
                      IVC7PRjpUzwyvj89ex7JPUAALLsDHcy93l8APWDCgrv63QG9KDXWvJn/vT1QkVY8DBvuPBKKET1g
                      Uwu7KHbLvcx+/zzBq8k9nU9vvUoXJT0S4Us9YkFwPTOQsr1U36q8sFPUO9dNtD0AOPm891KDPSB9
                      y7u9BTS91DEEvfD/NTyjx2u9md+yPSCE6zsbW669cJl1vLq1L724prA8MPqmuynvjj0wKkg86B5R
                      PKb1iL03Wcy9NPuovLdFPb29HFe98A4GvMXiwj0mwy89wGmevZ89gj2Ui8E8qrGkvRXMpb1AlAy7
                      EDt0vId0U72sOtI87v9rPW5/MT2yMn49M1OTvd3UyD09si+9UkFmPZtPrj2JX5M9xXPBPQEJtz1y
                      mTQ9sUy7PeJNHj1Ay7Y8/fcxveiYsr1AGqW8cPYcvIcKfL36jns92LzrvEt2tD0lmJM9MLJPvVgb
                      gL3KTWu9b+SwvQwl/LxQVWC8UBlsvQFBlT1A9Zi6v+K1vZJfMz28avM8UG6iuxSxgDxaVha9+kgT
                      vRB8Cjwj26Q9O0OAPXJMez22cQk9OCXavFA0fbyHL8E9A/wfvfepkD3Gs4i9EoMePdK0ET0TYHq9
                      ckI5PQhjoDx1U5c9i92NvW3fJr2jtnK9cOZgvYAC5zuPtcs94up5PWiYUjw3dV+9eajIPbfWqT2g
                      dcu7KO5OPPrFOD3Y8KQ8d7NtvfZbnr2DVzK91PSFvKJ2oL1j2nS9UEwQvJCYo71Oq3U9rTqxvWCP
                      Lr17ZMI9+v8ivdHhgz1THso9YOmDvYoPBD2SfzY9msp7vZvIuz1Y9SI8b/+uPeDYhjxzpp09nvA8
                      PZ69dz0CBce9wu11PVa7bD24RvG8Ilk4PdZHk72bDK+9wS6gPVOCXL3n9LA9KCZgPD1nhb3AIrA8
                      1phaPe2LkT2AMby9UA2yvWARxrxmFDI9qKkmPDL9OD0T7De9zGrVvDKMVT1E7eQ8kyW8vQDABzew
                      NeM7AANQOrGsiz2W/So9lKCOvKrFhb2Uz6880WDAPYzel7w9h4I9MNq+vS20oj37kY49Zy+VPQLG
                      Uj3F+JI92bKSPWwugLzT3ao9OISKPPsMoD1A9Je8Ny9cvQGBkD0eo0I9VBe5vKCdrL3Auvu61PyX
                      PMCpODypnoA91xbJvUZ3rL2aT6y9+PCtPA+4oT3yhkY9FEAEvZjPvzx0T9A8diADvbArXb0vrZ89
                      wPdfO5Z4Rj1qCx09Za2XPQN/X70MO6i8HsMWPU1nLr1qgXK9gHm2umBPkzs5N549J2WoPQ3vub0o
                      2cU8HaONvZKaZz2XXYA98PZIvWUSrz1M1sG8naDBvTAJq72Af9686f2ZPaAqrLxlkso9EutNPbAK
                      PDx6yhI951mFPbC3rzuOSyY9kCJKPHordz1WHlc987OnPQd6sT0LPqy9etNBvf51mr2PrbA9bQMs
                      vacfs72U0gG9OjtGPVCYX70AxY69N7HIPbDAxLtX/Tm92P9vPN5xpr2ABpe6XK2HvQp+Yr0Z/og9
                      U7KPvXORgj2kRYy9zOr2PJirKLwwVoA7tqKUvcoWrr0WInY96LVdPEMdeL0dLb893fi8vRJogL11
                      G5u91zRkvScyPL3vQco96G+3vDWipL2kBvQ8CfmyPW47jr2+Yx89fhtxPWahQD2x94c9Wgp6vUgZ
                      yTxdFlS9hnAAvYBBkTu6JSK9QmUzPcLcRj3AWGa8sIw1PGAfcbukLtM8rntZPb34iz0m4Ia9IE7D
                      u+oFML0gnBm9w+V8vaenVb3SNVw9KERnvDI3bT2n6Me9goE7PXDWJTxY3yY8LoClvacBrb3qXRA9
                      AqUmPbiWsDxds2K9fepAvag1QjyPgrW9Gpikva+Rsz0mEHI9wBgLPPicvr19YU69m5GPvULGdz3o
                      iia8MEPBu2AMHTuCmiM9XQaXPYAAbbwiyYG9cN4LvZuYqD32CgG9eafGPVaTfz0AS1I7sA8IPAA8
                      2zoA3P+7IHgivYgEwDww2Su8aEz+vMJ9p72Keb29lrlbPcDZaDvHAi+9j1XLvRMLL73zS649hZPI
                      PY04pD2L+qq9duo6PXhKlDx4iL69Reu0Pa0Yyj0hUrE9n9mzvabVob2AUva6W7qavaoLbD07l4I9
                      +m0IveqUaL0B/Lg9IDKZvVQ9hzwFw4A9Wk5yPS8onD3gQbE8c1YavQCGgDyOzlo9hvcBvVi4MLwn
                      Hyq9emm7vWz/szyJebo9K3u5vZiP37xyIGU9bAaKvGSZ4TwVVLC9KHT4vPu2vb3Aa9W8QigEPfja
                      rjxG0BQ9LZBuvQCI27pnn7C9eJTLvOLIaz3oJGA8blGJveDCxbsddoG9wBjHvLCVIb2wstA7cyLG
                      Pe2ZiT3yqDg9YBe3vMDGIrxdeJo90N8jPEPCjT3CRwk9wA3WvCNxqj15zKA9Un84PUjJqbwMWqC8
                      N6BRvRQA2jzAEqG8AJS1uON6mD3T2Jw97SKsPcm+kT1C06+9CN7MvOC8pTvYOxg8qOeSPN4Ojr3Y
                      OK88FcLCvd2Iob2ba6i9/pIOPfHIhj1tCpu9UOF4PEz98Lz+LGA9159AvUzX7Dw+nqq9cooVPUME
                      pr1Qso47HOwUvSG0nj1ZJIg9q7TBvaQVzzxwtHA8b0S4PWlKjj0Uce088FwavEeadL2AA1S8BjV3
                      PaBRijwyS6e9wE6pOiW6oL3osTA8QExKu434yD1BWLc9FyW3vY98jT0Apce9aZOIPX5tJT2jKsi9
                      12wavafSyz1XySG98MAFPDgSvjw4r7y9sMC4vTDGS7xAqXG7oI/bvGAnRLvsCqo8E+6MPVqLQD0v
                      C8i9ymItPQ2vTL0DeJ69qRaiPbAJyDvYE2u8kIIPPNBL27spqMc9rr1SPY+IsL0wn6K7rxi7vSzO
                      oDzcKd88CtI4PeMdnr0jqLQ9YthIPWBGnjyhBKI9UiEgPYwA6jwzFbQ9KLZRvGM8Rb17GY+9UF8t
                      vePMe70X+kG9rmZEPTncxj3AiDM8o10nveAck7v1lpe9LZWhvX1bXr2Alu+61r0FvQD8AjvIfca8
                      6OEmPIN1nj1Q/b67
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE1NzI2NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMDE1NzI2NHEBYS5kAAAAAAAAADjf+LzI7/S8ejHIvdiGEzzKw389g7uwvZZvTz27IK09
                      eaOLPdJRUj2QKsK9Ve+wvV4XfT3geCi9w/HIvUn2jD0bhpO93lyavRkdiD1aaAE9g8mfPcA2/boZ
                      jb89LSeAvaqhi73wJDs82JcuvOdlub1jc2O9csNAPRkDjD2w3nY8lZaNvWpYHr1N1KC9Y06YPYDU
                      eDzX9Wi9azSSPaQ64zzjFqa9sBu/OyrfST0qX3094KGtvAMOcr3gfrs8yUm/Pdecsb1wqHA8SfGl
                      PasMjD3usRM9xGcZveo9sb2HRHa9FLDiPOmcoT0yhLG91QKmPeZyAr0ghrY8aLV3vGmCsD1XOja9
                      nZpYvWTRzDwMbYS8B7ywPUCjtr2QTF29UYOxPcCIvLoIFog8gKm+u4D5QjyS6mc9HCUKvfF6wT3z
                      iCa9bMoTvb3QI73sZ9g8gNVWOph197yZP5k9kMoBvIB9H7wnvFm9miO3vXr2or10Gdk8SF2yvJp6
                      Cj1lcqU9CTKRPZ3Zb72w4UW9XxLGPceIdb0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE1NTgyNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMDE1NTgyNHEBYS5kAAAAAAAAAIJEqr1Ri6k9cs18PdCqarzo1rK8zaqSPaBkX7sUt+c8
                      sVrDPaDMcbv0TNK8cHxbPGnbhz2A+6W7GugVPSgpejxTGZc9/H8PveV0ub1aPbu9gGUxvL9Iyz13
                      6MO9qu8tPWnlxT1myms9lfiePX4hbz3yZlU9MCniOxptF727KsK9Z8IevYZ4Mj10v4e9mdmLPZOS
                      ob0AkyK7IrwNPfr7Pj3o28K9rvJPPZCWXrywwvW7sWCMPfanCL2VFrG9Utl6PV3gqL2m4kQ9F49O
                      vbsnqj07brq98LkkvNItLD0YmZS9rISOPDSc2DyYC4q8mObGvR2mrb3faso9AHd8u9BMWry0UZ08
                      MHnMO4Ro7jz+HVs9k4YsvUvuoT0Aqsi8GK9yPOqdJD26rVw9pgAEPUzcqLz+bic9Z9LHvWE3hj1Y
                      c+28TI75vGiwurxgYNK7SOaivFpZRj1s4gu99/FuvQDl5LlgoYK88MYnvUDLibpqSzy9KC6IPCiY
                      XbyDTGG9AFwROgDiX71y/lE9gYaDPf1lMr0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMDE2MDc4NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMDE2MDc4NHEBYS4BAAAAAAAAAKIJJD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        +ADzOk1B6jpVO7Q6VTu0Ok+eATu0XQA7czWlOnM1pTrGVRA7kpQzO19s/DpfbPw6xlUQO5KUMztf
        bPw6X2z8OkOHrjqAIKs6w46WOsOOljpE5rk6HVyZOsmA3zrJgN86CUYIOwE1Dzt3IQY7dyEGOwlG
        CDsBNQ87dyEGO3chBjvlT5Q6IMJXOn9Eezp/RHs6c1KHOld2aDpB8mo6QfJqOgEpvzogacw6mdWO
        OpnVjjoBKb86IGnMOpnVjjqZ1Y465U+UOiDCVzp/RHs6f0R7OnNShzpXdmg6QfJqOkHyajoBKb86
        IGnMOpnVjjqZ1Y46ASm/OiBpzDqZ1Y46mdWOOkSGJTzRtCs8lyxfPJcsXzzcKBs8YawcPNl3czzZ
        d3M82VYLPNb73zsDWR88A1kfPNlWCzzW+987A1kfPANZHzygd2Y8VAxrPI+UhTyPlIU8u15YPLsj
        gzxw9zM8cPczPASVEzzRbww8mPAVPJjwFTwElRM80W8MPJjwFTyY8BU8U5qHPDJtujymFKA8phSg
        PKuelDzSB608fjOrPH4zqzxialI8ncZEPKDNjDygzYw8YmpSPJ3GRDygzYw8oM2MPFOahzwybbo8
        phSgPKYUoDyrnpQ80getPH4zqzx+M6s8YmpSPJ3GRDygzYw8oM2MPGJqUjydxkQ8oM2MPKDNjDw=
