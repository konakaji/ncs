N: 200
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.06
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI2NjAwMHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTcyNjYwMDBxAWEuhAMAAAAAAABIaIS+zolXPr6TbD67nY6+wCusu7wVtj0A4zq94JJF
                      PcNxBL5g1Dm8/Hq+PX7lKj7uA4m+AA1hvCdzqb627uK9rl1tPnYVUj4gtk89a7l+vlL4ir6g1vM9
                      QOmQPIpvDD6iJm8+cFL9Pcs4pb6G6/y9DoWlvkqMOj4gNDE8SbmUPkZN2b09QpU+EFKoPQT6+T2G
                      oDG+6sBrPpGUnT7TyaS+UGPBPF2Xmz7eJGK+Pixrvg7HU74AZb09aBQsPcG6pD5yfpS+sLwzvkNL
                      PL5DvGi+SJVQPdCgM75VvZM+nmZVvpasGT4yom4+LImEPUqbPz4tspg+TrViviCCOLxQFMg9AO4R
                      vLQ3zj2bz0i+xO6jvbblQr5PXZu+6OYYvUvGHb5VroA+m4IhvsmziD5QNve9xPyEvkAkcD0g5Hw9
                      CxkZvpSa2T1MrII9qwdgviAHTb24cRW91hdHPoBNIr0ocDS+V/+nvtANGz7YLkc9cLq9PH7nCD5O
                      GQE+onBbPgD1szwYjBy+5fKePhJcHT6bgWy+iI8UvXgfTj02NDC+lKGsPcDyHr0yyXE+wnScvqB7
                      XLwgMam9ODMUvu/9mj4AC388Nt/GvYDPVb7uVCK+zZSaPgvLab7gR7o91LuQPQAHCD7DUna+cUiT
                      Ptpihb6b048+HpAtPiG0pD6IoxU+QvhPPmCZZr6TLIS+QNC3PANpgr6wLtg9ZoN0vvC+Db4hXKk+
                      HbuOPsDP6zzsf6s9efmHPhX3hz4RLqQ+Iv0MPo1jlj4gm3s9TLO/PdhrGL3bTDC+QgWEvmQR7j2S
                      SDI+AP4WvksZjj5kkuA9+/IKvvBohbxmDA2+BITbPQ5fRb7b0om+xKuwPTOcjL6mY+G9tndRvu3z
                      mj5AdVy+UP4UPs7vFb58u8k9JC2aPVbPUr4hyKE+vPbBPaZCzr0aDCw+1+yTvoOchb40u749yHZ2
                      vZtdJb5AfYW9cCzHvNprlL4wAk++VumfvjN9Cr560Ug+pjHwvQ5YMz42l6i+bTSXPpCJV752KRg+
                      ArlTPqbuT77u+yW+/Bqnvh7vgL5YHWA9GM4pPWsPnL4UZZ2+QN3RPCwbnD04nzw9QKG1vSCL2j2A
                      6AE7uNdlPTbnpr7A9V89kPhovtooZD4OI0o+yNyBvvj8ET2GpAG+SBw4PQ+0oz7kaMY9tuddPmDU
                      Lr0zHzi+p8+NPq1hqj62S8e9AB6TO4sPWb5akTM+nktlPvgbID480eS9yGt4vsZauL04vCi+ONMM
                      vv2cqj5gexI+DA6hPbBGwD2zHII+U401vqOGJb67OZ6+QITavKN4gL6SI0A+LiWTvoAzKb2/IoU+
                      rv9YPjDDpr2mpn2+av8/PjBK3b0bkFW+4B2HPfxDpz29SZI+1gZrPoffnD7O4XY+PDTJPcpjLD6/
                      l5++SophPh7OC74IogU+SKVzPewX373uoDU+AVSXPhP2hz4iIlk+ppgEPmLUgb7fcqA+6EoBvVts
                      lb4uBVC+c/acPi18hT5pEIA+vhwLvsglPL5orFQ9AOTUuwB3qzveeZ6+0J7OvcOVCr7YMwY+wKv7
                      u+BQJb46dRw+4JRYvuBeBD7wJaw9CNoBvWYC373QhqU98l5OPloag756k30+kgwwPiL5dD56g1o+
                      ASqbPlDyzT1AsuC9C6KGviqhPz51mYY+nnoxvlrRBj7m7qi+fH+GvYymzz1afqO+2SmQPjVkjj5w
                      q+08hPKSPYBsNb4AryK9qjuovqkPoz72xii+APCGuKWzmj5cdqa9AFXjOgy15T1Y2V69vJ/1vTez
                      hr7Ifm++k59yvj1Vpz5oyVq+7oddPj1Roz7gmQO9YM03vTCavzzsAPs92wxPvqicib7oOFK9xnHm
                      vUcTiz6F85o+NBzBPYgofb1sbq+9G9s2vqrPQj7421k92M1bPclFmD546B+9xHmAPUw0pL2MAIG9
                      8N+cPVsNqT6waKE8QNJQvqyJmL5puYU+7NKKvRB86bwe+ia+RiVuvgBd7Do2YRw+7kwXPkCMi7td
                      a5k+KlAiPrcwpb5iEZW+wEZNPS3mkT5+BRq+gsVyPoT63z0AhB++7s6ovgzkmL7AN/u9wJvXPJ6g
                      ZD5UBMo9qDY5PfMmBr71H4k+/LbMvZIBMT62jEk+tio6PiYz6b2webs8AIZCvpAvZL65UIQ+eA8b
                      PvGOgD5sRJw9Vvw0vs4ec76NQ4k+sluBvgQ13j0Jk6k+lrZTvjLJpr6RJ6c+wPXLPVfqlz4gJFs9
                      6G0LvVAsV77H+IQ+AEpGu9D9Kb5iOHg+AOYQOmCAbj0ydgQ+mBlGvaUZlD5Ax9272K9yvbA0G77f
                      WJ4+8FH/PTgncD3WHlq+O5kVvvveW74Aj3W9mAMgPWi8fL0G4ZC+XQOmPuNISL7LEAG+OO9JvSI3
                      jr7yjXE+wMq0vQCmwjvgNze9bITJvQS5wz14uGM9HlRaPirmVz5gdx69dq9GvsHCiD7ohGq9lkM4
                      Pj1Khj6G21k+bvEKPl42Ib4gRhK+o0+HPmMaF75T5YC+4vBNPtB1tj3iNaC+MhRVPsCz+D3ydFY+
                      f6iKvjbzYb6g4qM9QBrmvLORkb6+ulI+ROOqPRD6nL7qo3g+IjhIPl6ndL5hJo4+hq9VvspjmL6F
                      VpM+lq9hvuBNRz20WoK9YFIvvOQsp74RCow+3fCQPrDnpr6sAoO9OEEWPSDvSj2e+y0+aKA5vmTj
                      pD2SUZC+QDI2vspsFj7oIkO+QwAKvgaYR74YJUM9BeKIPkBXID2JwYo+BscCvifLob7YVja+qshD
                      PsUpjD4I32s9xgG3vZYTDT4+pxa+aBoyPTQT+z0krY29npYSvvZCQz6Lv4q+GpYgPsyHkz3mKGe+
                      yLegvrARkjyUQYm+y1+JvgDYsjoAqHM9q5x1vvjQer6WZns+AB0lvZxu/T2qqpS+LJeevnRcib7w
                      j2u+vnFGvhKyk76r9I2+sPyyPMB7fL2QEdo9yaijPuyupr0bDYg+MAGCvLhSpL4gp3i9evGAvqNN
                      L77AGxG9Zn0ZvrDMsb0LcTa+7PCfvdeglL7XP50+HGSavWN/I74efXq+CE0mvomSqD6vVag+MCnc
                      PGOzXr6AAlm9GZWSPt82jr7wwfQ9Y4CVvojNFr6+gVC+NruxvQZfkL5Ycj+9YJzhPcPEer5wgau9
                      0tVtPsn0lz79boE+mjBePlb55L3YSUs9TeeKPp7ZAr7NPaM+mPw1vWBZb73fUIy+QN0XvSJJgr5G
                      gRi+oiBWPjjIOz3zV2y+dP7yPexXzb1QBFO+WCs1vabNtr0kapy9a22KPoh4HL6fTpg+BBOkvkKF
                      jb5AXLM91oZOvi5UdD7oaWk9oJdpvqH1oD5qygg+R52bPkKzaj4A6om7mKBQvhF0kT5mS5S+tSWZ
                      PjKlED7Xgoq+83mbPsB6vz3W9Bw+hg5hvmyvtL1+m0i+1OmKvZYPqb7wmZc9myQ6vj6Bab4jsA++
                      0O0svsYmqL7fP4u+IoFNPkj+DD4Qu++9VVeDPgXOqD6qM5u+yLYpvr1Ogj7YX3i+0ALGPUZ6Q744
                      VSc+wqpoPisSF75T85c+K/cNvm5GHD4IyjS+DE/cvc2Rpz7YvQe9up0UPrclgT5S61I+eCE0vnDh
                      Az4wTly+MIPMPbDI6zxAdca8QNEgPYqYWD6qrkI+IDK+vanroD4pkqk+WGwZvccTgL7IoyU97pMf
                      vgDE4jsAiHe8ak5uPrzlxz3ADhk9AKj1uvadZ76KbSI+dDCwPTC9Fz4LvRS+uHswvjtYhb7+3wC+
                      wOUlvq+gpT66SWQ+5o1CvuZ3dr7He6g+rox+PpeWhb4zaKc+0NOivoAvkzwQvhG+w0ievgjjdT11
                      TJ4+Y1ejPtfpib6GkXC+Xk1hvhhEaT18RfU9fcCHPkgBTT2gEFS+FrEGPuM6bb5SYg8+ui8GPvZC
                      hL70/8c9ICo9vSAWRb2KL1I+juQEvuoLKT4eRC8+/bOVPnjaIT5arjg+5twxPuMnR75A5c67vcSN
                      PkjiMr3xvpk+AL/NujjOJ77gEgq9Vt6SvsggIr6AbwE7hr0CvqaxUb5TUw6+EL3EPGh+BL4C042+
                      7LbpvQAUgb6m9yw+fSSYPrx8or6mWg0+KDYPPRC/t7zSe3M+wC6Nu0jMi74DbZ6++GJFvor9fD7k
                      8pY9+LguvRfagr5AaNs9OCmgvqB3arz4K6G+ulYIPs0NmD48jqe9kK+0PKTzsj2gajA9xRWKPjV+
                      jz5WnJe+KTODPrSw3T34HwG+KOIevfo0YD7Y7n6+JtC8veSSjD0wNpg9Hl2ivjZn9L0AOrO98BYk
                      Psrnib6jBGa+AMRqvSNBDr6jDqC+YBI3PICeYz2wg7k82Ps7vmA95L0QyoI8szqiPjh7KD3QHmS+
                      K32cPl/jgL5IoRw+QOP9PHDhgrwr+zu+4uRcPpw5mz16vYy+AHnsOtq5ND583KE968xDvnjIEb3B
                      xYU+yoQ6PgaiBT5THGG+IHVNvuayab5mpay9A7xkvu2mkj7+2mq+bKTLvceko75QScc9QH/kvHrc
                      KD6gRiU87oMUPoqiKT7gLiI8kuA4PuOKP76Kt0Y+lYmgPmA7FD6kiJ++h36Ovm30pT62mUy+waGQ
                      PoTLiz0AXH49gi9jPvBYzb24EWI9eMwfvvXipT6upp6+4M40PSphqb64pSS+iY2RPgAyFD6CiTI+
                      UNjkvUOATb7w8MI8UxsTvqAtMD2Q0p+9IO+BPaD3Fjwx84k+6E6pvvZyAb4oFWs9ehtrPlZBkb4a
                      FVU+3M6qvezh6D0jDy2+fAbwPam1hj6QwBu+ykNnPhqVGD4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI3Mzc2MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExNzI3Mzc2MHEBYS5kAAAAAAAAAEAS5bxMzNM9pncwvtD1k77i62w+QGn9Pf/Ejz7e6Fk+
                      zO+hveueJb4Abl2+tBWIvWyCoj2ATG68S6mGvrgPmb6u14y+Q3kIviJBnb74ewm+WLhcvsuEYb7q
                      Lxs+Uy4mvhC46D1OMyC+UmiOvhhgYr7fnaS+LwuJvtrVOD54qhg9AET3uuSBnr6GgvC9AMu7vXto
                      oj4jIzW+oQ+FPoMkIb5Hl56+/byNPsA4q7vOTHq+EglJPnB91Dzt/II+UO6KvYYWBr5ynk8+h6uJ
                      viAABr4wG7G8HciRPtA34T0e92g+upE0PuCGOTxKIZq+eICavug/Rj0oaD+9/DbJvYxdgb5Aqgm9
                      M4hJvpoYMD4ArXW9NdCpPmRKwz2AcFY94JD8vdtUi77gpWY989g0vgCRibooxHC99nKOvqI3bj4A
                      BVm9Ks9oPmK0Xz5WyjA+5EOtPfiFBb0cPZW9OJ42vjS1tD2AszK94JwXvY1xhz40lds9m44Gvtih
                      Gr48Krq9LJrNPSDVIL1Tp5A+kRmDPhJAeD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI3Mzg0MHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMTcyNzM4NDBxAWEuECcAAAAAAAAymqu9mMhdPGjxWzxNtMW9V+BEvaDCjLvisAE9MNXM
                      OwAOszsrL5Y97DyFvbBw4rsYx8G8NMW2vMR95jwOZCs9qLWxvFQjh71ckNs8GnwwvXWJtr2si9g8
                      hweOPbs1lL3GzWI96PkgPPCUH7wYAQw8Ap+UvUC2gb3OaS89+Xu1PU0nrz17jso9vaCXPVHDkj1X
                      2KY9+m1Avc3Sbr3ayk09UqE6PYARAbyim5299NuUPLC3+ztNYbO9aJf6vMA3kjyodKy8Opo5PV21
                      cL3UDKU8TBePPGwX2Lz9+rs9gFTaOqcxuD0SpMy9qIK1vRfGWb1YALG9DIrHPPIbGz3kuus8lzQr
                      vQCB2bsiGCo92QWZPV3pGb2qREI9ET2hPaBoq7wwi2q8zvhXPWpNZr0mHDI9R6BjvR3wsD0A62O7
                      2gIHPXEMlT3brqC99miPvei2drwYJsa8whkWPR8npj2NFsU9YK0KO0LZpL2KqX2906CvPZUGpj1X
                      vLS9aMscPGussD3Zu6U9ACaxuXfIrj3AKKK9ObyePTizvTzpN4c9KltavTGzxj156sc9AD8/u/aa
                      or0J+5Q9AO1wvStXtL2Kj0k9looMvSxFqTyKapa9cvMlPQRk/zyMVJm8HhwIPW0yPb1FDo29umEv
                      PXNCWL17E749YJnavNid4bwSsEY92GyMvPu5mT1cXwa97rNePXYZHz1cOOQ81MejvAVBwT2Sphw9
                      mPpQvIDKQ7oATs85+q53PQ00OL1APki8/S9ovfjXm70+DlE9ngxnPR+avz1yi3g9ghkWPehICjzu
                      tIC9jD+sPADzxDnKojs9xqgsPbkCxj1qYwK9rKfkvBk3gz3oND08dLWVvPeZXr1K+mE9APFkPAPA
                      Xr3+1wo94YWzPfYEqb1MNLu8V/6EPbAVer3ogMA85/CEPYt/wz1oNaq9AcuSPZb4Br1wc1q9qqQU
                      PUsCv72psp89tpMHvYwvibzCKI+9MXekPQEaqT32QzM9wJzfuuJCxL3BZ649MNiEu0AN4bzgzKi8
                      VB/PPGURvr1g/fs7SkSlvVwM2jxdOJO90GPTu5hb47x7Gsa9wK4SO3aLND03cH290F0pvCEEiz2O
                      /1o90TygPYOBqz06nzI9x/RNvY9syL2AJLO6K8yYvfIlND1XdLo9SsKGvSfHLb05tLY9UPzHO4LU
                      Cj0ASW266twVvWUdlD3ltaU92YHKPcg6kry3N1i9CT2LPdmJgj1gpxA72FapvM55aj1pO5U95e62
                      PSI5GT3RZ8c9qqBaPVP2X73XCCi9I/eUvdQnyTy4acM8zV6DPZvCnL0Adke9QHLIvRCyeLy9WcM9
                      u5W9PUxmxDxAFV87UYG5PUt1mT0wzto7kDVyPCbjk70CcU89zJ36vNngkT1zWqO92SS5PSvOhz2j
                      V669rOTMPCMSQ72YDaM8HMYGvUbyOT20KOG8sAquvTpqRD3jysc9gIvNOnC5Fb0G0iI9ZhQVPWdc
                      a703/IU9LJCyPG1guT2Jb5A9O1qrvV3xrL2YCDK819XLvQZXGL2TlZe93YPLvaWYuT3w1je8cCQG
                      POwDvbwotc68SwytPeZzOz26CH29eqM/PRmhuD0vOZg9CobJvaoyKr06XFa9JZSlPRD3WzwA1Vi8
                      1IH+vOabQj0IlKa8Sr9qvaE1sj2ndMO9qFSTvZhujTyfGI49AHNzu2BUKDv3qJ497emUvfqXs71Z
                      c5896CR/vIPXtj3Sqw89ek+8vbRd7Dyo5Ww8WSXGPbTh6Lw2tAG9uJGTPKofl70Yops8TN3cPC+0
                      wD1rNa69iv9ePeiyyL0rPa495FbrPEUgw70r9a09hGXhPMCbv73jfU+9WK5APABTHLrIEZu9WGIX
                      vOuIpb21ra89ZusKve+thT2EGOk8wHwRvE0hKr1SIUQ9CALHvf+ErT0asWa9A5w9vRpRUr1q+yG9
                      iKKCvBO0sb1pEZQ9czY1vU2BiT0AYuy84Jftu0vdxL3zvWC98ky2vULwKD1XCRu9INS+vHY4OT3Q
                      SDE8TJqHvahADDyLGak98k23veIddT1FJ4u9DRjCvWQY1jzjXq29gNFzPKxHizzMyq68PluUvfqS
                      iL1QK+47bSo7vaAe1TtKwHm9+N+ZvbjL8Lzax0a9oz+nvcyygrysMtO8D67DPQgc07xXSry916zM
                      Pfcflj2YJC+8RjxaPXBAOrzzG789CncsvVlRsj2QPqK9r7TDPVZ2Cb2iTaC9WooIva5sez2QTC+8
                      oUy8PaB+6LvxRLU9M1eVvbgnn7xQaVg8AgaHvVCDy7sX1KY9R7i6vQd1TL34wpm8WDpjPKqZO70g
                      f7S9p5UfvfAmXDypzZ09UyuNPRD3EDwyex49k6l7vUA0Izt+h1Y95K7jPD3snr2qVTU9xR7IPXzy
                      8TyQomi8kIwFvPsZyj09cCq9SGWNvU6brL1zxi29BJnpPLL2xr1P4Zk9naPKvZjnZryghv67uGL+
                      vKDKuLyTdq69El0MPT2zk707a689wHQqPEwfhjx1sYy9INKMu3bBST3DYVC96LgOPDbBFL2gz667
                      p7xovTImez1e+kU9ysQwPUwr7bx3VcA9leq8vZAZOrz0Ag+9QKW0PBiJvbygPqC719F8vZ80hz1Y
                      AQk88MVwvPf3hz1dMju9CD+QvJh0kzz5zLg9ACUOvbJSaT3BHKE9LXlUvXBrKLyvgcq9VxRUvWDc
                      Rjs09rc81GedPP2Yur1XKqw9YFTsvJ3utr1MxYs8ANM2PIDMqTs+SzM9uFjrvLUPlr001dY84Fus
                      Ox15nD2o5I48L5XGvUudw70b38K9Z9m4PbiCxbxQ/0+9Wg45PaBYGzuLvJy9CrGivdqoQj0Absg6
                      NeiYvd40pb0UYty8XayOPWANiLsAEQ46eLiMPOx27rx7LZs9cerCPUoxSb1/rLC92x2nPTCjgr3L
                      2Zy9As5VPQ4/hL2xK4E9Ki1YvaHQuD0o+Ji9AJuwOYo2U73d/zm9xAH8PDpkkr0Yr8S8K3THvdAo
                      UDy2yFg9ys3JveLNCz3RToo9riGivVE8wD3U5+U8LY9YvYB36bqAa587+rZVvZ3wtj33zT+90JIc
                      vWxWhLxSOL+9W429vd+jsj2m0Hk9lIAGvcAsJbtQk467xYTBPTR94bxAJiG7WMG+vRB6i73AeAE8
                      huU8PdrJab39T2i9ywWQPY55OT3Q7FW9A4/DvR2LrT288fI8UntLPRNHc734PM+8wKheuwsiiD1q
                      2QE9+JK+PITP/TySy0c9QI/iujDFNbyG8GE9dimdvQDAq7uSxzw9QzQnvUJzIT2vw4w9QHpuOxf4
                      yT14RqQ82IztvJ+StL2yvmQ9rn82PeLKeD282fY84uhVPW5PTD1i+mk9MPhOvSGNrz0AVTM6jYSY
                      PcAharyYh1G88fWpPYDolzxwQ6G9fX5ZvfBNbzxwrRc8QCcmvIpaED2xVJc9Co08PYoMH72I7Y29
                      mB2HvEhVvr33G6A95siFvYnftD0As8U7SLLEvBSMr7zf04I9No8pPaZkFz3SPno94FuivME5jD2m
                      jl490VeoPRCPOrxzVcM9mDmSvc2lIL1AY+O8W9i8vbhqkjwycWs94xCHPX7dkL3Fe5a9h393vWBe
                      ursIify8QHjLvR0mlj3llMO9I2/FPb0QmT2nGKg9FQrLvew86bwR9ok992NzvaEEjD20gtC8ge6O
                      PagTbzyiIDo9KHDYvKTu+jxdPpU9UKhVvT1xRr0w4HG86VeMPfPmjz2Azpq93m1JPdD2s7ubT5U9
                      q2eUPe3oZb2OhaS98V2bPfO2xz1AoHa9YM8ju8Giij3wd1S9pogIPSiLNbzw2WW9V7BUvc1fnj0A
                      Zc07rQy5vSrKWL0nTGW9mumavZEhmz0Q+kW8LJmFPHPUZb0pGqY90d+IPexOpLxqIYi9cm9PPZG1
                      yj1IM8A8b+qfPXhMxjyf1q890FcZvAAwJziUtIq9kQidPY3dur0Zro49AVSWPTji07ytcrQ9uCG+
                      vI2dXL1txK+9QOk/vCdvR70A/Ry7evNtvUSwzTwNdLY9MMUSvZqaUb3293Y9LcvFvVfNvz2wmEG9
                      K/fLvYV8mL1jv4U9LaVfvTajjL3WJSc9mt5/PTh8u7zYL+6869Omve3Kj71N8Z29FlhnPazvg7z0
                      BxS9pH/dPKhIBzzanBS9GNO4vaiJu7zbdJe9HBzmPCjeibwZh5w9ILKVvVyN8zxGAGg9cFw9vb2L
                      Jb1QtJY7LUl0vXHYoD2AXcu7wqMhPQXFyz3AO188pIUFvfIJYD0VM8S9q3e/vYB0ub2STgA9YP0e
                      vZiimrxykhM9kTHEPckbrD2tBpC9AMelvbY3UT2QtRq81KsDvYPoKb3xkqk9xnx0Pcxm/bxQ4Wg8
                      INTrO6LIUz0m/Eo94HopvYliuD0SsUI9VHn0vKeKjD0UIsk80D9yvAjntL0ntRm9mGwrPIZqTD3E
                      l+o8NGvbvODWvLtgjK+7KnpZPQUogj3n1ay9oiqevcQ/6jwUgcK8IGNNvRxF6jwo98C8wm+/vU5S
                      lb3Bfao90WmfPer1dz1u2AM93c2mvc+qyj3tkMS9YyWfve/Arj12UhI9gnlBPUw3trxgnfg7gMrS
                      vIAxfL1UBOo8wpYIPZp1rb3asWU9qJvFvQ6HCT1a6Ce9ToszPd2JWb0KzXk9iYOBPS2zd73KCwe9
                      ALcIuux+9jzANW88qGZUvJSyEb3iSS49oZLGPXr4RD1UCpI8t6BRvVTE7zyjZDa9X3K3PaA0zbuk
                      3oW9IESpPBTIljy4Ncy8+g/KvRoAl70AQGy8h6fDvdcVOb1iX1c9AppEPevsvr0CLmg99jVKPZya
                      /zwAWqq5NauFvXV8uL0Aqn29vWKgvX15pz2pB5w9lwY5vbPBrT0GIpu93aNOvZDKHryClCs9JooI
                      PSBDl7yzvsO9QuJePaBqubupabM9sMGFu6PoH73hDr89RNLrPHogcj3A1ru948ZHvQYJPj2B9Y09
                      iwibvQbgRT2kRvE8QkYePScZsD1g2vU7+42pPYc+cr1tlsi98gsiPTYRdD3Tx1W9OXG3PQG2jD1B
                      Ark9+HaJvJtFnD0G45O9Nqo7PcRn3Tx/urQ9YL7Puz1azD1w63G9W7KmPXIxmL1yjGY9arEKPec7
                      vD3cyeo8TjBLPSA0Yb0C1BY9J94/vdGczD3nim69QBcBvWKZbT1xVMI9VBjRPFhn57zweDy8GJj6
                      vLlniD0TuaA9EEabveZ3Az09l7M91rx3PTBibbxE7NM8kYiNPdGNqD27RJ+9FG7YvIhknzxC3LK9
                      OT+CPbC/RDxadUw9+J6SvTFWgT1cIfo8smIPPXAek72CR1w9wG2VvTXLwL1Alca999QhvX6mn72W
                      5wy9gBxQvNRmqTwdIJK9fAj0PDhAi7wYpoI8gHzbvFZhWj0CWYy9Mb+QPbl8mT3yhzU9gug/PdXu
                      uL2Of3Q9oBPpu7NZpj2fZb09/ttDPVGTuj30bqW8rFkUvUppsr1RW5w9SgQFvZTwqTx4hO68bOyT
                      PL1BsT2+UoS9F8m0vTKSqr31ppe9gLFFvT+7gT0Znow96gbLvQBfJbxw0Xy90hwrPaOaT71eVxI9
                      xvylvSCEkL3ngx+9qAHSvECYbLwa1lu9yp7IvdiXqjxZObw9GIy0vNalir10E+C8LFKOPPt8qT1C
                      nGs9ArB0PdeZjD09PpC9SHDAPAjoojz3QJw93SGdvSyWzLwifVM9lfC1vSNYbr2gHFy9Hr5FPdOk
                      jb0qMXS9Sr6uvQlypD2tl5A90+uwPeFJtD0HK8U9DmEHPUDEHb0E8oe97NXFPFLONT0TSMO9B6cj
                      vSdgVr0hq4o9eilsPQD4g7riLaC9alMPPcB2j7zTfkG9IslwPWAsrDuBN7E9IymqvU0mgT3BiLs9
                      X02tPdlOqT2Y0hu8ycm2PSCimzxXm7u9ALXKPNgPYzzeoy09u/yvvUBafzzyIBI9qvcdvTO+mj1F
                      /MW9s1FCvUt5vb2ApGK9tArbPA1qX70Fd6K9TWthvVxb2zx3m0C97aBlvUzNsrydfLm9pCP+PJAM
                      PDyQ4xa9HlMCPVheG7xKJSc9b9DBvWgWtzw/PoI9NRufvU+rjz3EF+E8PUmuPRLgHj0QOgq9g7mo
                      PeBHl7xi2Ze98CExPKQRFL2YigO8P4qCPb7/HD2EsdQ8Y+iMPdBiFDxgx5I8EIJavOUeib0Awau8
                      Ds2TvbDdCbxoFj48WG70vIkuuD2Cxw49nQfFvThAqzxK0qe9aJ74vHmBwT1NRJq94ZvFPf2oTL2w
                      sWa8FnmcvYWyoT1sGKq8lwmJPdgVFTxYxle8O3+RPUNuwr11UZ49Q1CaPWNrbL0GY2E9To4QPUAr
                      kb2S6Ag9MlZiPYb/XD2wHe67aAldPKALzL2YZ9m8sJKkuzDE2TtAEFK9oa2xPXWFk72xYpU9ZITg
                      PMAM87o74ZQ9wHAvvO8Ojj1GFaa9ALZPPCltvD1w97i9wPtQvIlRjD3AdT48IByzPAXGmL0AAjQ7
                      iNiKPBZ7kb1YMmO8dDeDPAxd+bzJE4k9VL6EvDqGv70ARgm8WLNaPCq0WL0oyqW9yuYJvTJGED3I
                      oM280jbGvfA5yr01Va69YHb5O4IFZD2NpiW9TjOVvYxemby2MlQ9n+jBvR+cpz0woQ484L8PvX8S
                      qD1Sl8O9KsisvWC7ZDv+Qoe9rreGvQi3n70Ei9U850zDvTC6/LtZlLQ9XUw2va57Lz2h4sc9nkCX
                      vSstkL0EdAy9gFiZO0rURT30JL88RLPOPPKRLj2ioWo97dFuvWBAe7ueNXM9wmI0PcN8mb3Cu2c9
                      Z288vUMelT2dgDy9yhseva1msb3G7Xo9fLjyPCPNhz2KxF89Tb/GPYD7i72bMss9UyZOvVTQ5LzU
                      K7a8tL2hPN40DT2DF5O9JVeAPWUFvj1gwlm9d9HEPRmFrT2pKo49lBz6vPCFdr2N0Vm9LBHtvMT/
                      3DxUksm8FJ6SPHXfpz0tdLy9nRNBvbn1nT2wbtu7guU3Pbq4I73ILK88YTfBPeiAMrxZvog9V8RX
                      vbLtNj3wKka82nI7var4eT3a5Sw9p/wkvQKMtb3RAJA9gOidvKDk0rzSInY9oQ2IPTBL9bu51Kk9
                      L06rPVjPlLzdBb89QTizPShB6by9CHi9GDplPCgfSLxLaIo9HYaUPQx1p7zKV5m9wIzEuomjjz3O
                      MBI9TL2jPDY2cT0QHVA8OeOcPR8anD3gU4+9d5qEPaVQyj1oDIW80hu3vS9Arz3BbZQ9MMEdvdf2
                      TL22Zpe9Xa+2vWrnJ70YkKc8KeOePWqjWz2MCpU8WB9XvKdIKr1Q+s078YygPeDfP710Z5w802sy
                      vYtztb2OnHI94H0tvSuSnL06JG094yKSPdAwJDwAUFK6QDAzPPSx6zyJ7LI9IPCDPHhIorywAy88
                      UEJ6vLMbbL2w+X286gLLvRKTTD10uPk8IKK6O+DVr7w6/zM91Bf9PA4flL0IWKu9HRo/vRq7Sr1L
                      Lqw9dpClvbA65DtgFFW9DhSYvX8GlT2JwYQ9J4rJvXKmND13+cE9wn1xPdTnxbxhVaY9gshLPXSr
                      zLyAr846Z1Z/vfnTmj1arq+9cnoEPbfEy72SUjw96vhdPSBCg7wwJE28oKPJPKrydT2Hvpo9QKtC
                      vYc9HL2iC6u9zQZYvXpiXb3Y89K8jaXCPXhDgrxdAJ69qqihvcNIfr0oFlc85qUePeMJk72y6CA9
                      g7u9PQn+nz2G9BY9eBuXPP4NKj0w9eU7gFC+vdJUTD2Weoi9LFoIvTAlVr0ke9I8AnxFPRoChL1g
                      uIa7jFjAPEJgID1m1aa9+oIYvYxDi7zALgI7fbqOvZB/ITwG7CU99tmnvfqPoL1D3qA96jFNPeeJ
                      nj3HjJI91HiCvQDkITowy8e9wltAPfuhqL3w5XM8g5uXPVOFqr3UQ8c8zPj6PBJzRT3HRny9opcw
                      PVSykDy7sqc9MiQ6PQEqrz3azSk9k2lYvbgFjTz+0oC93qYOPRdXS73aASQ9D1CgPVCy/btSO2M9
                      ipgiPUDjS7xTqa09fsp/PaNae71wO7K9JiCRvWeOhT09cTm9SAObvGn/xD0q65q9c+vKPS3Ier36
                      pjU9qj+yvZnQhz0gKem8DTa7PbTknDzNYqg9VTnCvXiFnrxGGFc9UJequzFHwj2suLW8YB39O3w0
                      FL09yra9pUOPvZLCfD0RZoE9zMStvPZRgr16ik296cSHPYr6Tz30XYa8AEDNvLDZFrwsPZ+8gg+y
                      vbSVvTwoK+S8jqolPUMjH71ZzMA9sCv3uzdRT730A4y8KCOQvaKhWD1TxLW9QEEWPO7VMD0ws887
                      DHTxvFhTwbw4Nai8CjeMvWCfeb1M69k8tKqcvG5WZT2grBe9OM7EvShCPrz1IsS9DtqAvdQt4TwC
                      JYO9dklWPbePUr1reJg9QHIuPGhHjzzjqp49me2lPYpSl70K/5K9Igu9vcp9Yj1AR9i8G5KYvXSM
                      4TyAX1C9cJgkPFfKbb0Am228cpIoPQEFkD0AYVE7Pr1sPbokwr0SdSE98nt+PctIpT1ASSi7gHLB
                      PBjE8LxYKMY8/iN6PVQjlbyqjw09N1u6PSCB57xg70K9HoSKvYt9nL0MZoW9GMyNve3JZb2YbFW8
                      o5psvcdYyD2iaai9l/wsvQD3cLzF0ZO9YDaYPGwA2zyGigQ9gC7KvLY8ib2KZ3w9qHlEvPqVu71n
                      0G29QMKSPOyM1LxmmGY9WLQ8vCj9Y7zKIxG9PFEEvYhN4Lydfhq9kChIvTZ5aD3YnpA8GL61POzR
                      gTwM/Ii84f3CPaktkT0Af9y79O/bvOyi/zym2HA9Yj1LPW6NlL051Z49865uvSZ+rL3Y7JO8MNhe
                      vIExoT2LjLW9MuUnPWGnoT01Dpq9ADwLuTCk4Tvjc2K9t8xJveJwFz0ASEe8IGVNvVJNUT24w6C8
                      oCO7vIXEpT2T66s9ERTEPb+ctr0W0oW98hWlvZ4WqL0grTS9sF9vvZorIj3fiba9ANmLO3LHQD2V
                      Nao9WnOzvYLJMD0HiES9cBgOvXsYrL1VB5O9U8pevRB/dL3KRIS9WGFFPF+gwr1ibpa9oWenPcJN
                      fj0oJBY8ndWXPRQUljzOnyY9ANbpu1gvk72MXo28gdeoPdBj5TvNlJy9W4aEPVHAsz3iy309q9vJ
                      PZFumT0Smkw9YLZOu7Af17v4L8O8TByLvKClyzymBwm9CEjHvU6tbj2gnl69mOu/vZq3Sr32Mw29
                      odnDPbj7pbzLioc9GHzMvBx9Ab1sy7m8NLvvPEJbcz1aaRa9rQybvZROijyMp7y8YDfUvOBk6rxp
                      57E9DPzZPGRi3jxAkiI8JTiyvVRohb1rjbq9WaKVPZr6M72yKCk94H2pPJAXdb221y09AACHvA/E
                      vL0WQhW94EylvIOfOL2HPJs9emWHveDUm73Amms8DDiovDgDvTye2g89ytcIPUNcvL3NNUq9qpLE
                      vYgK7byAmRQ67jlfPb5lMz2tUqa9Grp8vdYHFb2iEQY98lgwPffVx70BibQ9ANDBulhFkzxNT7A9
                      EEKNvZFDsz2oObu86HGWPCPmnj2QgGU8q2udPaiwor3GbhE9ACVvu4DtQzy+hDE9bf6WvZaHWT3x
                      Qo09DcRQvecny70aPlC95waQPQWHub3YhuO8n6/EvSAVtzuMm7g8p+savSL3jL34ZcY8i9ujvUoV
                      M73nH409oGqLvbC6Pzz578Y9apsMPRSSubzGWQO9M3grvQ0ewT0a0iK9GN+RPM8UuT2YQ4E8gOIz
                      vBCJdrzN+bq98GF2PB29eb2zZ8G90E4uvMDpg71sG688E8nHvRhSUzzQ8R+88zSFPcDtZL32f5i9
                      IjJgPZC6QL2BNZk9NzBYvc7APj1kU+M8Kg1wvdv9nb2gA8m8qsR/PSAIer2gCdC7kVWdPUf0IL1m
                      szo9BBnQPA1XaL3SWCk9GIf9vHtnvb36CBG9OtBdvQwADb2Kgjo9lMevPCJ+ET3A2qG6N9kfvTrK
                      rr1PU8A9B76PPUW4ib1RYMI9TMOMvO//kT3AzQW8sIVmPOVNlz2DMmi9oFqPO/g7ujxYcCQ8gNc3
                      PNBh2bsL4sK9DEfFvFaFAr3m4529EGlUPAp+sb3osQq8WPu1vHn5nj2Hik69AKw2On6WqL14BIs8
                      zJGFvCdUdr3Ke0e9KnavvbM7fr23C069RyakPWAFzLwncmi9gK/lOkD4X7zcIuY8QNihPNCcWjxU
                      j5s8YLpROzEsxj1b9q29m1a7PbUTgT1C5Gk9FOL7PADbg7vbFa49RPz+PAjGp7xYStS8wjdvPRRQ
                      8Lx788K97AuJvF24Ub1IYtC8L4rLvSNYpr06N009AXyAPYX6gb3+8Tc9DdWzPXBfdLzgtZi7uSS5
                      PQAjVLxWSQg9FxhMvYzChr0FY5Q9wDljPCiMyTya/hq9UAdtvABuUDtAWC474wdCvXFrrj3sfpQ8
                      mCjHvHiSl7xD1D+9kgpQPVXSwz0Uyv68gHb5OrC3dr3/zKc9mg5wPdhywLyAycW6JTm+PZyJ7jwN
                      YKK9qAdTPCbVlL1QKLA77VmNPRdVHr3Ky0Y9mNCXvGbeEz3QhBK8NPX7vOhRjLz56Kc9avtvvagH
                      Y7zaJ189VsEnPeBpxrwZCak9anMjvbPZnT22nVY9YbePPbHmrD2Sqp+958lDvXauEb0gJ5q9eEyN
                      vaVawz2Cr0c9Q4C2vbErhD3GyIq96cWZPaaKmr2bS5U9JIbuPADVYjzgTNy82Ed4PIoxCr1sfuW8
                      VOjBvGeaML3hgsU9InVnPRoZPb2zOr+9r5urPZgbl7zAsN46y5OOvSBD17sAeK46s6a8vXUzjT2B
                      KYc9tKrAvMAgIb1Muuu8fNf+PI2eXr1dL6e9DyC/PQFwsD2R6Mo9wFJ1u50Id712miI9VDOSPI3k
                      nD1q8BO9470xvW+Rxb3HfK49eEfHvJxrhr3AjQa8zGEAvd0Uur2D0cK9bDWgvB0MnD3oAxE8sO3r
                      uxqVED3Qh1G9m7S7Pdhywr1hbaE9j+eEPfwgir2wR+e7KaakPXwr2jzLqb09LY2UvYn8rj30rNO8
                      otdOPdkIuD2jNsc9QJV3vbImqL0pdJg9quxuPRRmv7wI+/286cDHPQB5LDve/569AioxPaIHNj20
                      /ue8ABBJOWoneL00FMc8n+SdPXD9B722zls9UG0cPFLSlr1+HnU9GAyuvCknlz0wxhY8dp1/PQJi
                      OT3hj5A9rQqgPfxACr2FkMa9QKY0u8Kidj2AXBe820u5va6Maj1SORw9U50xvVcwUr2FtZy93P4C
                      vTBqtbuK2Hk9WEvKvTTQk7xknv88ApauveJrGz0K6mW9MqFVPbXJhD0TbF29GjIWvViVQDzt+Fq9
                      B19ZvazKkTzQ3qe9+OXovNsRyb0AcGW7DBKevGiSpb2GmUs9kMx4PCLWZD1Bubs9BcOrvRgwIDyy
                      y1o9XY7GPaAonjv9Orq9R36WPWnjjz0A+Tg8Um+WvejFy7y5bIM9KnMfvUOXrD0pJ4094hpuPQom
                      Nz10nZK8yo2ZvV1TMr2IYIC8PZO9vR3DOr19GFa90Ovnu77hOz0sY8s87P6LvIoNFb3eEwA9YRmQ
                      PV6tTD3ubJK9lLqXPF2hMr3ow1C8wggxPaCtTDtdXyi9spIwPcDbRDzCCWA9rYpfvRCWQ736Xxy9
                      VmoGPcVMyr224XI9pQ2MPc+Bxr3444u91IfOPJj0tjwXkLA9zplLPRofBr3ACyM8ULgaPCgF/bwI
                      fsO9Woh3PShMmr0XWGW9UNh9POpfTT2UTOu8TGn/PDufiT117Ly9ybuAPeJRIz2ICKi9FUe4PbIS
                      LT0GywI9pg5vPWPXT73Awhk89967Pb0xOb2YGrQ8fmBcPQxsrzyTpSu9mJaEvQpPML0wcXq855I/
                      vXperr3cvfw8S82WPZbcVT1D66W9mmE9vU30Xb2ujUo9O7GlvQDydr0AQsA5aS6mPVZmID3kCO88
                      At4iPWJ+cz0pY409wDYZPGCshLzqPjK9OPDmvCtctD0A6nO7/VBgvWiCRzzDd7299GCAvAp0Pr3R
                      Z4Y9DF2TPGh3O7xP/8q9DhovPUB1p70A4369FP71vBfxoT1gN3i7lO3tvIznkjyN4cK9MKLDO/Lg
                      jb22FWA9NBcYvbP2uT3MTZU8efqWPRO7cb1Y5T28jTiLvTipyr3Yxa69gn5GPZrhWD0kLP089FGR
                      vLKPFz1jQH29zY2JPehkXjwKoB49mFRVvA32nz3UcsW8g/a6PSwGgjxt26o9R643vcZJAb0g4d47
                      LnFLPfo5cD3CEWc9BhUGPXrkc729uLE9I6pTvePvxb2iTFQ9NAPqPKQI0zx/Lsg9ub6GPdhIZjwI
                      84a9IFi2u4DM47ugRZW7c7G3vUD0ibwNb0W94NWAPDaRo70Jx8w9aPkjvIeGrz0FzcO9xffEvZZP
                      ED3FPrE9iq03veTD3zzgVOO7rNHLPATuzTzQMRS9UgB5PaAlQL0Ap2W9Wlg7vWOUYL1wamy9jEON
                      PEIhVT1ZJ6Y9GgFZPRLmnb32YAi9EwW9vUDSVb0o6rc8YIRquxjWgLzSjk098MgyvGp9JT2a2wE9
                      2B8QvGRHEb3Se5u9KnS4vSe4H732Xwo9QrMgPXGxlz0k6xC9KPpPPOZakr1t0JW986YzvSI2dT06
                      j2Q9NDUWvZTL4bwAXgy9k16aPV61UD3zArM9ciGBvdyl2jwAFFc8s2snvcHIoD1gOpW720OOPUAA
                      Vr21PLs9Qn4dPfv0ij0U0c28mS6qPZfLyL2s/Lo8kpGIvbKvTD1umpW9neK3PR+Ytj0A4ES6dB8D
                      vWEXlz2QSpq9tEquvP4FDz31rKa9yB3WvJh2FTzTPD69ogS0vQCFDrwAEim95uFYPSVpgb1kww29
                      sNpcPOKjfz1IH/q8lDj7PEAxdbx47cW9UODSu6yUEL1DXGa9mfu0PYw3CL2so8i8FiwKveNIyT3Z
                      AII9AJXgvJViwL3d0lq95cKQPQy93jyg77C7YP7JOxMvvj2tgF69qLQHvFiqEzzoa6c8fShAvYBE
                      x72EdQS9OjVAPfeqhT0APOg6qX63PaD3Fr0MTNc8lyMsvWBolTxWplk9BSC/PV1Vrb1q/1M9ajof
                      vYKxFj0JksY94/lZvSAnu71QbJi7ItuJvWQVhb2VYI49Ph1oPfqrVj1x5K49uo9GvStTqb0w4nC9
                      8uJVPeCZlr2pGps9BP4EvTYmSj142u684g3KvYraK7364Ha9IhwiPR3Oc71kuIK9K4bDPRMgK73g
                      P7q76A18vI7OVj2lqca9pssuPSzc47xohxU8pZ+cvT6oOD2gC+u7nvtHPfQm4DwA2PY5J5aUPWcN
                      W72OFhQ9bVouvaBsjjw1Ssk9TLTvvCSq4Dyf7ra9yfe1PaCdwbsBeL09uvZRvaYwmL06mh09/kQE
                      PQDZ07woMR88qCvgvJGqkD1syq0846qWPXd6Q72Zo7k9DhYhPQBFD7oYQMY8tmVuPWKHSz3x1sQ9
                      1MW0vNCkY7zgX9q8KNDIvVAziLsW2Uc92JaHvRDFMbwsS9W8X1KbPTCVSL0WXAg9MDf3uw3hmT1t
                      dIi99Q+9vXSHl7yNKJu9BPsFvXF5rz0kvdk8DXewPTzZEr3KZ2I94iUjPRTPqbylUMO9AEIjPPJL
                      HD3NJqi9JT6Avez1trwNWJE9srx5PQOte72M1p08uoFBvSsSnz1Q29S7Lf20PXfPqz0A4vY7WiKv
                      vYLtvb1JuZA95gR3Pd0Mfb2WZZ29frA4PQjHkLwKqwS90CmjvYwWqDxAVUO7yvdhPbpKPr1nEcu9
                      v8iVPf1FpD2J88M9QMNpvF2djz2z7Yy9YtQvPTDJBzxgAG47Td65PVgIaLwg/Ns7IJjJu7LQbD03
                      CpU9GKO/PHjBxDxjr3+9xbqsPaVjpz1SbmU90yEtvbBVFb1qSGq9GbqfPTCxoDvXIqk9UNYXPF7E
                      ir26P7O9ApGJvRoITr3YdV68wOZAu4O6Hb1qRK+9PbCiPeCPxLv4qbW8+NigvbBtCL1niiO9aQKC
                      PQ3SGb2FKK491HcFvcCsojpQzSI8s9OOPXoTID2gAIe7H1KnPYU5iD0KZTc9GBoKvHJmXj2w9IK7
                      wBcavDQZgb20nvI8VHuTPABhZzqfKsU9UQypPeoddD0M1fE84GKNvHaxDT2516E9yiolPbDg4DuW
                      t109GC6QvF2KmT1oziA83s6GvTc2Xr1gyG691HbcPEC9eLtSXra9nz6YPRQXlLyoS6U8WA3TvJQp
                      rbwMyO48NHUOvV+yvb2wq2m82g0AvZYbcj2QPTU8naWVveSi3jwYmKM8a3yhvYFwmj3GUqO9jG/w
                      PJLqIT3wFD+8YjwaPQCeqb2Apgc6uJSMPJgfYbyAbNa7zRykPYxXuLxy52c9ziB+PTnEqz3jp789
                      QGYEPH7sBT3wrku8MPmmO4FAsj3uLKS9Cji4veXdnT2iEG092ohWPe4acz1GWYS90j+wvdbZBL0N
                      BLs9n++mPQPgJr2AKh66H1mNPfIlVj0w8Gi9qJcyPJsxxz3Avik8AEl4PI3BWr0o9oK9dDufPDRV
                      4DzqTAI9VBCxPNvtrL3aThS9DTGUPWvQjj1hgMc9mL0mPCIRDz3esXA92Mm/vaDC0btCwaC9d7PE
                      vapkCT1gy4+9NAXDvMO3gT099XW9vtAQPZN/sD3MQaY8olARPaYsFz1Baak9V5qyvQI9Iz3L3LG9
                      BFPPPEpqDj38RQ+9r4ilPXnioD0kvvE8AEWSuaBTqTsM7Me80NtxPF6fET3KMFG9U4KSPe/yrr0A
                      oDY6oNP6O8rkfb3/XMA9VBKtvF3chz00YpO8UC1TvbxyC71H/bc90LGMOxehUb1v1rA9I+V0vbBl
                      or0+DCo9+EGrvfLTPD3AkGa9Up1vPb2Fqz0N2o095xQavdFdxz0R+o89A12rPeDTnrti6pu9IHqY
                      vYBrL7x+dzE9qD9PvNyVg70zR6c9cq8vPQDEqTwUFdg8+/+bPW55fz2o7sO93QqOPQCxPDqvQYA9
                      9By+PHQXiTwtoVq9u2TIPV1jpj2txGC9cLR4PKD5u7wQpTo8TkVjPV/hvD1h+a895eazPfcnc70Y
                      4bm9e+aHPTo8CL36eIS95/lnvdvXrD2q9yy9Ul1XPaBN7Ls3IsO9o0y4vUATyjrqTJa9E4aGPQAc
                      hbrq4cW9YO5lvSguZLyBhag9MO7KO+hKrTy9jMq9YLYrO2RB4zzgh6Y7oBngu5DXV7z9kZm9Y+HC
                      PcCpKbu477+8l6uDPT9Vqz1YHpi80FZrPFArCTz6WmO94DnEvNrPj73HlMu9SuQqPVbXiL3N7YC9
                      IGI1vXfjdr2c2NI8oB3YO+9QpT2YtEw8WHzLvJYTOz3hdLA9+3m+vXIVZz2a+S89DIe0PGrUm70G
                      BZ29hNEPvQryPj15uZQ9gIIlOjqYOj1H4zm9ZLARvT1iY72qRnM9gFyYuvWrmz0q4xK9aFPAve0C
                      LL0C1Ak90wggvdCq37uNv4+9zaWsPUQAzzwMULU8oLoDu0zvtrzOlkU9LKuCvRqusb3xmak9LXik
                      vZiZ7bzJEK89wGoBvKDUAr0gILW912KMPW5ofj1oBY48RWepvRX2xb2M24M8ziBMPSVHsT27qo09
                      UN3au3KSDj22W1k9YBV4O2Oamb3zA4s9XaCOvUb0qr3RHIA92GW6vYInQj3iK729yh1PvV15cb3a
                      qqe9ZvdsPYa6UD26bw+90RGzPX0KuL3QPs07YDtPu7BwVzwSjCs9WgASvVoTPr1QEfI7UbmaPZcl
                      ML2AWXK8qHPKvNYRpb2JCIk9wEY6OxfBfr1gJJ486AMQvBEauT3wRrG9nY1hver+wb2N6q0998mz
                      PeBrxru+AIm9qIqLPCs9rj1QbG293dVhvR8QjD00Pf08CoBrPdNBTL0MfBa9qBYlPC11gj0Upfw8
                      cBsLvJgw9LzraLC9RLbNPHplED0SZnE9fuOUvQuzrT2gpGe9SNvOvGOLUL2qQB+9sjltPay33Dy0
                      77u8lxK/PZA0MLyjro29KhoZvV4LID3gUqW75cXCveijXjyoJWU8tzhKvXwehL397LI9MGg3vOpN
                      Nr0Nnac9zZ+DPVlyxj2mAg898h4LPVd3r73DnpM9yfzEPYAFczplR7E96k8DvS5BCj22t6y9mkZ2
                      ve0Pjz3+ry09kogVPXKwPz0yPBs9AD3SOW3vmD2dV169oE2QO+xp+jwAXKm6ncq5PYAF/jsTZHC9
                      KNa0PGVbm70RR5s9ArYfPUKKCj0GQT89zUCPPQAujjwgCkG9Qk6SvfQjqDyqOE+9ZyWQPeWnwb22
                      PSw9rF7ovISfAL29czS9gGFzOhqZeT2SnhU9FJL9POtGor0zgmi9YHC1PFlFxD042qI8cBoXvDO6
                      Z722lY+94ksnPUK2dD2qyhW96so8PeNvVr1gAM07sInAu5QV/rz3ija9unwPvQK0lb19lcG9gO/s
                      OgDrDTwx1LQ9AElEvfe1lj2HhCy9Pk0rPbTu9rxmSDw9es81PVjQTzx4J7y9gGHJO2ggPjxAexs8
                      WhssPUHKgz064xW9OE3GPHoAJr3Wang9FN6/vOUCuD3QQqe7p4a7PQBI97iHCcq98EZqvMRl/zwS
                      CRk9iArGvDHExj1pQsE9kfCfPfWmpz0XQS69ivs4PQB4HbqojHy8963FvY9Ihj3aaCA9mJmCvRyK
                      iL1TGJG9bE3APHBKIL3Gky89DDztvAC4prlYuZa8H4jIPafWf72MBde8UFE9vFKQNj1opzw8IhyF
                      vZh25bw8GNU8vmWcvSh+FbwWPai9Rz82vcdCXL0yfTE9zttrPZ/2ij0xKsQ9gPKVvfobnb3ketE8
                      WCF6PFKdIT2A6dK8dngZvaDcKDtw9TM8wMsYPARk5TwiBw49NZ6YPQCyerx6gE69KNOwPNDKnLv6
                      B7+9AAxVPAXQrT1v84c9hHzOPIBCj73PFos9Q/1UvcJlkr0O+lk9sNO7O79Zrr3ky9A8RhaFvVvY
                      yz3Q8ra7QLtovEAqRjuX70i9DcWsvRVAgT1gRHK9hoMyPaK7mr0CSZO9IKCFPHtfqj2C4G49/igC
                      PXq8Mz2gaHW7EiZpPRrwND0AKv86FMuEveD//Ts5t789Bgw2PWbWXj1Z5ZU9cFYTvCnRtj2SXH09
                      Vz5yvX1AnL2CcgI9CsprvcB2JLwqdwy9C7evvZ9vtr2cXxi9ez7GvQqQU73aaRa94F6NuygPa7xC
                      O0o9fTVbvVBeIbzA1za8yvFYvT7uNz3AAHI8kZnKPYorVD12uRo9AXTEPadBYr1T4cU98C6dvQeQ
                      lj3B/oU930DAPQaTWT3uRqi9IkJ2PbBUUbxq9wM9QNAIOwxRxTxRT6g9E9VFvX60Xz005qS8KP1q
                      PNBgwLvsU+I8CGWCvXiDgzz9ayS9m2yfPXi/kbzZFbI9JnxuPUYCMj0pRKk96pxSPSjo+bxQQGq8
                      UI0yvMo7c70hmoQ90OV9veiJhb2u05y9r8PLvdHCpD3udqi9VqJkPWiCOjzKZA09sHItvLBQc719
                      5pu94wy0PcDePTuFQoo9gMHKulsEmz1LiZE90Ouhu5ji67wCqMq9FMX2vPZXrL0hbIs9R3SvPdSl
                      1jzyfCU9QJCVvf2ihL2bXL49AJtAumhhETx6ZpO91yNmvZRrizwQw1S81DWgvAAqhDldkGu9szdo
                      vX0Zjr1AI308Hu2QvaA+e72tfpU9uCeIvW00lr348a29WVicPQ+OzL3KHre9T3S1PezHhb0vgLA9
                      ej4hveCur7u+eoe9TIfbvCKVCD0d4cS9IjsqPZBNQDyvYbo9YldWPdChQr1QK3m9gBvFvZ4gHD39
                      Moe9ztGPvSiVYrxBKcs9aFYdvGTY6DwRbsI9s82QvYP/tj2f+a09GpiWvQBgvDp9GFO9FIS7vMNj
                      nb2nC2m9rDPAPAwA7zyg7828nn8SPSgwobzz/3a9WspLvcEXjD0Yhg48cC+7vYBWPjxCoIa9iJiL
                      vCaOJD2QYgq9sOgrvdqELj3MeZw8RJvzPHVzs73Kzwg9B6lNvVSPs7wJFoc98w24PWRA9Tygpdm7
                      1HeFPEv1p72qG0w97NPivLdmyz1U4N28tMqCvWJnZT3RiYE9QCxJO83lNb3KK8q9wTS7PWnylz3Q
                      QSO8hxNMvTS/6jw6sBU9QjsrPWggYzxY9hY8D5SBPfDLYLxAfYI6giE+PS7ppL2mt5u9UlmZvRMB
                      sT3wriE88YCnPUCZLL0CT2A9w8FyvWjRL7zdQp89CISqvKrZtr29QWW9R11fvcVJgT3w62o8BuIm
                      PW1VN70SUiw9AHBPOgA4DzsRUsU9zRO6Pf2GZ713u589kou3vR5pBT2AjkQ6avVRPeqpbD3KPRc9
                      +NCVvepapb2gwUS9gJWLOt78TD2CglM9hBeMvX82wz1UD8w8bb0uvT7cFD1ijT49EOp7vVh+J7yy
                      Hq29oIiuvOG6mj3AJMa6oPRnOwBBKLsdxa09dArgPOikBbzOMAs9pPXePJWznb1Y2b69gNumOl/I
                      pz3nMCK9qkdGvZEunD00gOE8sCXIO/3Mm71zkJy9a1yVPUAvMzvyWoe9xSe3PfMMfL0dM8K9zELd
                      PMgUojwlx549YgxZPVBMLL2q2H49YphZPaWgoD1ojIG8W7iqvdTvsjwWI5S9rD2IvVAFW7299qM9
                      gcOoPWBmB72Rp7Q9Nc6/PajuiTwoyoM8wgBEPQpfCr019rm97f6IvbOUPb00/ac80EqDu0gCgr0L
                      5Ls9U6OgPaZJgr1gvsy8WPUPPFVIjT1twby9MEAcPNt7hD1s14s8Yrk5PVBxcLwr76k96ziZvV5L
                      gb1QVa07YPbHPIBFvTrghe68cyKtvTAMoTu7W589ejlEPWCvfL1kWds8oLDyvG0gLb3sZIG9Yltd
                      PcrAIL01IL+9xxuOPSvkyr1Afpg8gaW5PTorlL1jBkq9wCCquhjyGTxd+sW9wMaBOoaoo73+CXk9
                      AIlOvIXUkT3FlJC934OwvT1bnL1YYcW80AL4O/cJKb3/Fsy9PSNzvaIPPT36YbC98Pl6vSnxpT07
                      DMk9b5XGPQN/zD3Wqwu9KHW9vQAhYrq7arO9gNHDvG+mqz1APXs8wM8avABcaTpohsO9mJ4OPL0o
                      f72CizI9dpijvUaulr2nU7g9gP9rvNAzSb3z2oA9D6myvZCFpb2I5ac8wOBRvPZiYj1GQga9Ct4X
                      vbQgh70xacM9cOwbPGA+l7yXXSO9eK7tvAoxET1gjuA76MeXvU07Rb1AkAs8oW+DPZdQjT2WzwE9
                      kKVCvZBKIr2tjoI9ikGPvYaaQj1MwIC8WPPJPEVzoD2K9iy9wcS/PZAOAzwdmx29gKgevCbeIz0k
                      xus8gFlPvAB3Xb0YQio8UKztOzcGtj0AmIw5WKd1vMclmT17+ay9GWCcPbJtnr0hg609d2+TPS2A
                      fr1PRbe9BHrPPGLBrb38WuU8hZScPSUSjb0CjjQ9DDWdvO3Tpj1UkLg8EqlrPVWwy70zt3+9Egcb
                      Pbib3bwIgac8QHh8O22NnT3zdMW9kCBuvAvJwz2oAE48bD3PvOdcM70l3cm91VaJvcpNDT3shLK8
                      WzmQvdoylr24rci99Ir0PD55gb2T78A9K/XEvQBNeTpIOYa8QLbFva3GOr2ds0K9XXxdvag8PDyI
                      oMm8V93FPZNWgD0+3YG90F5gvflpsz1ALgu809CCPQonRD3ZSJc9JhaGvcAoibzo7Jy9W5eyPWCK
                      FDsg6I68DeNwvQ4XPz2AScQ6abHMPUmApz0VGZ69reKxPY+Pqz1kBA294wVhvRekWr39nLW90/Cx
                      PcDm+rzvBYw9KMU5PInTvD16lqO9YWqsPUAwezzSwzk9FvgvPRqXhL2DQDO9d5WAPQttuL0oJpG8
                      itpaPfr/fr2O7nk9crERPft4rD2QMRy9SJaHvSDHmjxmVl89OM6lvFg+yL3Xx1S9mgY2vbxl4zzZ
                      FrM9wkk7PU7bGz0FxqE9CZeIPTDJMDzqLCK9gjqvvaH8vT3kKBC9T0vCPS/xkz2AoU083WUxvT38
                      pb3Ho169gCTUu1surz2/0rw9Dd1gvaWBoz3iG3I9gOpJOgD0r73JvcY9EF2xvZQQ8rzToVa9h4ap
                      PQhurrwQkSU8gIC+PN2rpz0Y6FW8MmRKPTDyTzwqF1A9LX67PUNRKL04R5s8aCUavMBwsL0Lhce9
                      CdiCPf4qh71A4oC83fepPdDdsL1C5rq9n+yuvctYt71KkAa9JzqaPTFNhT3u21A9a1TDvWCvmTuu
                      KA89iV+BPZpLGD1s7sk8mlpNvYB+0ryYZbQ8lI6yvN2oVL0T5n29AMrrOuOogz3dr1a9b3i8vfAj
                      EjxLZ6S9K7ivPYt+tr0CeXU9kfGoPbonvb0gVNW7gBO1OyTq6zwnQne9AMtvPI0BW70a3iW9KL3F
                      PHTLxDzzsTq9VpI4PcL0TT0WKKa9LZa5PZqRfb0UOQq9y5i8PSuTrz1i/Xg9oYSNPZaEDz0Ndaw9
                      sKYsvZ0Trr0ywBE9qcKnPZTejTxJvI89gnoDPccqRr36m2U9lp1wPQAqiLpkDIS9d2aJPfQAqTzA
                      A3U812THPXKZrL1UshC9LMGIvChysLyCN2I9yKeUPMi7k73Qlv67XT3MvQC1dDyKc669eMaGvSAB
                      F73euFQ90DJovb0jwr20T8Y8FBgGvWAWSL1tMZ297foavZLYJD3Yw6y8ctRmPSo5Cr3wKA08Tdck
                      vTTJ8LyNOUm9DV+MvTDbpbuA5Uq90RXAPQjUh70AurI7UIXeu1PTVL1R+8o9yk/BvaWcu73TZTS9
                      2+uqvULAkb1j8Jw9LPTZPMAsQzxzU2+9VU68vezL8jy6Uhi99NKGvHlIxT2X2Hu9tmcKPczdvrzG
                      mT09rgU7PdghM7xAZy48VosPPVDA2ztkotE8YGwVu1gNCTxw1Xi9updevdb8lL002ZW8YtyJvfoR
                      vL3blqG9MoAKPVJphL38V+k87Y6QPXXUoL2l1cu9SMmGvF0vsL3Hnci9tnVzPUN4oT2wV3m8kFkx
                      PBlPuz3Ax228tPT/vKdgs72Idoy8EeGePfBHOzy1ybs9F0CNPYAYuLqC+3s9VMuTPOdJxb2oMsG9
                      2nJqPbgMiDzkCv08QFzIvWcfxb0rebS9ZG0DvUD/yDzA/iu9WW3JPQw/jDwMBOM8Uc2RPTpzTL0i
                      +jg9NqNXPTfgUL1AyV67UBLTOwqLFz2AHF88zLLxPBNxd71hQqE9bMMQveSz/Tzr2Jq9wiWevZiC
                      ZTwgMOm7mHUcPMU/iz0lcpe9jtKgvVcrvL1YtI694jh3PW18Nr0oaJY8ENEzPPKkUz1iq429IJ2a
                      PLL/Rz0iHq69Sce8PRv2xL1fyrS9EBotvWiccTw6FG695vJpPe5qPT0QG2q9m9WQvVikDzxRsKo9
                      wvJdPX55WD1yoT09Yu8YPWiklr2NdsY9ausJPYeCwb1mMg094YeKPblzlT0Afuy5MP5ivADHMrzY
                      qE48AbO5PSIzfj1jh0q9BkQgPS/hkD1gx+q7WuQBPSVLxD2qWz09dS+dPWhdC7yYxt+8WPpwvNeR
                      Ib0CsMu9Gu2kvQK+fD2D/qm9sAoBPFp8Ej2dpmS9MrOQvWibub0+cqC9ZuEAvTL9YT3Ql2+8EM8l
                      vfYajr2jFIU9x9LKPZhAmDxaSrq9yt9svS6IZD3uzJC94dubPdTUxDzDGMA9amWevfcfWb0XcUW9
                      tgZTPcw7qryGVG09QSerPZNxLb2Ckio9XJjqPP4Inb37rau9xr4WvcwJhr1uDBc9AJLbubAtSrxh
                      acA99M33PGr5PT3oUyC8FCv4PDP0ij3w4Hq8iuSJvQC6jznAgUa9w8EbvXoROb3NEhy9yjksveBY
                      sjxz4TC9g1Jevfx4D719g5290OBkPNDaw7vwcyC9CO+6PGASvDyaECo919pgvUB5YDuQnz68oMXO
                      u3FinT0I7YY8gJtfvJi9bTzoxSk8NrSPvSGTtT2GRAk9GBsPPAA8brpS7SU9b523PV5dWz10cYC8
                      YNPdOyDLQL3QNtw7GBY+PF1IkL3gh+e8aAFlPNY2Gb0zxn+9OKbcvMI2nb3RGY09KD4PPPUQhL24
                      Kc+8ampAvfpKeD3+vR89gEaCuvPiHb3gf9Q7AkrCvVMKtD1Xo8e9WSWGPb5uDj0vep094Pn5O/fj
                      Hr19Wsm9KiBFPYnutD0disi9yCrrvAhGxDysoo+89e+1vTdyhj1221I9bs6WvTDpy7udOlm9hzdI
                      vT57az16EY+9LBnEPGjLG7yIn768nbKnPbcSw71ujoW9H7GuvU0ncb0A4JO5Y6ksvWrIV705lYA9
                      ZPz7PBPSnj2FWYe9DRmYvWyxnjytLaU9UaugPTSK37zoUkC8+pZaPcKYj71NmJ49UM1APJMas70G
                      aw+95rYlPaB+9bxEzf08mpMzPf0wyj3ALuo6gro4PUvRtL3QsZ27oGCnPKHpgj3SkKa9xPjWPO0q
                      X73mXQM9StNKPdGUgD1hdLc9YnS9vdPomL1QaE69696nvfPVuT1XK2G9QLifvTSpi7yalKK9J8C5
                      PaxhA71CbxE9SLXmvH20sb2MUpk86LwzPEKMJj0ehhQ9l5U8vfBFMbwPGY49qEKcPOgihr2LQKy9
                      hHTiPFUQyT05Rck9CACcPHYZhr3q1Fg9eA++vPN/er36/E+9p2xRvYa2Bz2T4TO9ZOTMPEMCsT3A
                      PH47kOBYvPYlE70LJLE9KnkWvYp7ib3EjIS99KeCPMursL0STIe9zJ/KPOBoubtO6j09gD1EPGDD
                      TTuw6dM7UE1BvOrXu71lErQ95lORvVi8OjwImMm9DXqgPRL/p72+N4+90iBdPW1nhz2uhRg9tauk
                      Pcc9qz3Sy0I9GiNIvTAi+7vYnns8wJm2vCiOmb0Aboi51xqwPVCy0zv4qfa8Nyi1ven0mD1ZX509
                      FiRIPaDjT7s4cvO8sFK+vVvFwz2w9r87P++0PTDqNrzw9iS8Wimtvd0gqD1gdIu9AHvDO6T31Txa
                      ip+97n1FPUputb3m92w9ANtKOo4tkb3uZG09c7VwveUzjj2hGYQ9su6MvRDAM7xQ19O7JpoxPQMG
                      cr2q+Iy9h5OmPdCtFzxod469gMravPkgpD1QEYu7swWqPWWMpr10R648VtNCPXjdxjxkouU8oO2g
                      vWkIwD2HaJA9qKWRvKDbibsuJZW9ODiNPKzN2bwWa5a9jKP2PLALWzwIHZC8jSJOvY8LrD2qoHC9
                      gLaqvNBDrjt0qLk8FVHDvYw7iTxHi689ygxrPWd8uj04LOW8RHcWvezlnzzqsVG9QL5fuzsrgj0j
                      CLK92B1xvLqYsL1SIgA9PZBYvQDehjnIAbg8AKVwuneCwb0AmTm8xEjNPFF1nT0Ai+y7edeqPVC1
                      6zv36Ui9oYGqPVS487wXxX69ODSSvYCyaTwbjbQ9uPqOPNAaArzKaHO9dgebvQ7FQz3xr5w9Es8f
                      Pajlw71cLuk8mF6BPF9xwr2Qppm9FITlPOofDD1YcCA8p4S+vXbnbT0A92+7kFUPvMM3HL2y6lE9
                      zEPcPGx+jTxI3so8eHSPvLZcaT1Qv3G9OWmkPWoNRb376bg9FGb4PGB6g72MghG9DNmnPFlSmj1K
                      2ii996RZvUJiIj02Mo29ug1fPawnh7zgife8LoqpvXFftT2sYfg8G5GRvfn0yT1Na5g9g+COPc08
                      iL2wHmS88M4DPM4jLz06GWW9AIDjO/cavL1Q2U680rIUPWmokD1AfT+8YJc2O8o0Bz1OZTQ9JASJ
                      vRirFzw2AQc9bdpgvajwh7xsNtQ8Pvd8PSuAwD3QQuO704W+vQ1NHb2qKB29e+O5PUz6gryAJe87
                      hjxbPVTVhjwSvri96M2vvDMmxT3NmLq9jtiEvXAhYzzAuCU7IC3mu7UriD2cKhi9wFczuzcAqT2Q
                      hU88HuA4PY6Qor1FvLQ9YPdfuzNVcr0QkCK9UI7Tu60Zuz3U0dK8Sj8+PfCBQrzm8gi9TLzHvB0a
                      rr01ZIS9ckNgPVBFTzwWKyU9R3LEvbW/jD1Y7rU8IJHHu78MkD1l+rC9TgAIPQALyDldEJ+9GuzB
                      vbjMhzzjs6+9+YCmPSjsY7witAA9FZSRvUZ6oL14rpo8AG+ivKinor0NL4k9EjYbPSkQzD0Able9
                      oJeFve88gj2+tEA9EjcYPYj0rrxwGi68gPW4PFracD20/uM8Q5umPdy9Ar2EowG9Q5AvvfCiXzwv
                      RJw9AnVVPb1msr2QOIe9M/ymPe48aj0wE2g8PmsBPUN1UL3diIe9iOSDvanYrD2UvJC8IdO8PTMM
                      b72mPW89/bepvWLvMD1eTTI94DrBPDj2x7wgj8u7QIWxOlBsUjyJJ8g9wOshu4AbaryfdKE92NST
                      vUnbyz3tD6Q9MC1WPOXPrT1DjCa9KCdKvEcGfL2g5kO9UnCEvb4DMj2oXGU8WrEBPTMeOr3LWo09
                      AIbyO+inE7zY2Yy9anlaPe7Jmb3wMSi9TCj3vIDGUbwNcqm9oP9Nu9D+YrxN2mC9wxWwPZAwNTwA
                      v1w7TCfMvDZ+LD1t5Em9MPzGu/BJUrxThVi9MqM1PU0mbL3NyZ69JjuFvRusw73YH9+87RVZvVLA
                      ej0nQcE9N52rPZC9V72LJaU9fc86vUAQSL3dAKy9dKvevGB/ybuGHj499o0HvRhmhDz4nqq9YWK+
                      PWK5dz24w7G96M4vvABO07ktJb69AMLjuyZtaj3Hrrs9HnswPdCAxr1gXRI77FoBvXAteDzys1c9
                      qWmSPbhFu70zFiC9UGIgvR9rvL2dfpO9X8CKPWuSu73njIc9zpUPPZJhpr1Rypo9CMyLPNCGD72D
                      lrC9rc6MvZCKN70qBB691peNvWqeQr3pILg9j/OSPYgA97zZKr090k8yPdD/ajy+USs9IqOWvSKv
                      Qj3PyK89i7ChvVjcxr2YYr48JmhDPVI+Fz2KV8K9gjtmPXSlyDyuKIe95ygjvVoVmr2H7q69Jf63
                      Pcjm8Lxk2ec8Z8Ulvc1Znz0KN469bFXAvETm/jztpGa9arJaPU2PvT1expe99jFpPcq8Ob1V2MM9
                      IPzFO3CSSr0AMq65Uy+UvVZvEr1g8V677L3xvBF5qD1G8Q49O5+kvTbNBL0DNZM96hFJvTqcML0I
                      McU8BrNSPZP3k723J8E9GZCbPbhEr7zREcA9YgQOPUoWhb2IqI28tv6SvSWgub3MHLO8YsZHPRJ/
                      FT2gB7Q8Tf4lvSjmibxESNU8eOmxvTXtyT1T4G69RAIDvZpGob0IOba99l0mPXnerj011p+96fig
                      PYc9H72w7hU8RH3hPP+jjT0900W9WoxwPUAhDjtiuBQ9DmxuPYYDAr0XepQ9wPGgve5ARz1tAsw9
                      tqGYvc20gz1Wyw+9ahFIvWClgLvWP4+9UANGvXJFfT2Y1YA8k72+PbTZwbzHYHO9l61DvUUYmD0I
                      6aE8gwyTPVdVgz2KSqC9egEEPVZuDb0Qcye8H4uOPRhVELzhi4o97JOdvGAYjzxW5Wg9aHswvJAg
                      LDwAIj68/0jLvZCIUbwQBo2916dFvUgAwjzPwLc9WSOdPdThFb1A4DI7Ui4CPbTonLwMa4S8XYw3
                      vbtSs71gKAe7A8OtvWAosrxAoBm7pXCsvQrqlL3Q2jq9+/iyvdfDV73sHdw8AvEKPYDnsDvOS5G9
                      CTy0PYx6orxa91g9ug1ZPewWnTxNB4M9RLDwPJmZoj2jZHS9ozCHPdTQBb1QGnU8B6OuvR+gtb00
                      FZW8c2RDvb4FQj2G6hi9nUKrvYCIlL1w71Y8dUG7PfAvXTywnxA8yHuUvY9wnT3C1VE9OFb3vACZ
                      wjw8QAe9rU+6vQO/mj3U9I28cnUGPRtsyj3WbC09AAFvvQ0vML3YNl48oMmuvGxpujxrZ8S982Oa
                      vVoUfL023BY9NE+FPOc/Wb1sVOi8kKVAvBAHFryAkyG9AARWOpaKDD28HdQ8NuMrPasGyL3BXLg9
                      HpmpvQI3Oj0Cbn89VZ7LvY7ALz242YK9TVvJPROjVr0gn4k8ZSeFPSbOSD3AyyC7vb92vRHTkz1N
                      vMs9h9WSPZgodryzPVK9GeSuPfimsjzAEIK6wLlzu2n8qz2Yq128KMoevKq0c72d67w95nkJPX28
                      sz3AJGC9kTmcPQEwrz3b4q09c55VvbIyBz08/uI8WJwlvJjD7bw6uoa9rcnBvfoUFL3AXLG6GFyt
                      vdKUVz1u14y9xcC0vaJlEz032GC94a6KPZM5vD2wSKS7bSNKvTcHsb10YIm9b1m6PfCvWLyj7W69
                      Oaa6PSfVJ72gBcE7cExZvPiMlrzbrao9H3qtveZJbD06JnK91GjJvACSbTskMNM883dAvb5Ahr0g
                      txK9lB+ZvKcsw73EVha9rjeovSQF7zzY88a9xZGpPUC70zqgwNK7Ahd5PdSeiL2ouIU8xikNPWl6
                      iT2oS5Y8906vvYdIyL0UnZs84Oa4vNhcf7z632W9sUDKPTfqfL0A4EC5GIAWPB8bsb3wXA+8gF3k
                      O2URmD0lDqg9Hj6TvfLOFT12Zlw9AE0dO5CQrb2YZbi97JcQvXapTD0QjrS9HqKFvYZMFD3o2TW8
                      oH7tvGDCO73MQus8jMGMvRigg72z+8e96JYQvLBVrzseKAc9ngQwPSBfk7wlYMM9lNy/vDMaob20
                      9P48nfw6vb2uRb1Y2Fc8Vb2Yva33rD2wCKS7+LuMvAKilL2jG1O90BSPO6JjBT0BNJY99FKJPAAM
                      /bzcndo8vxqwPQ2cnj3lH8W9wMihOtXDlT0InaW8Gy7KPZolor3ekFg9k6u+vazWE71iCxI9uIS/
                      PNJMXT11EJi9RyUsvYB8sDx6xye9MNS0veDFib2o5lw8ik6UvXq2gr0AamC8JPEVvRc9M73T0Hu9
                      zNb6vMa5TD1AezC7Ylt7PQbASz0ytJq9hiUzPbJ2kb17yqW9VveWvZKVdj26R7O9aFpevNAd9js5
                      Eoc9U1muPQeicL34Ea68dKzJPICOmzqzAp+92JYcPETL8TyaL1A9khOYvYAkX7yA8qi9ZaHDPaEU
                      iT3uBjM97/WEPUDVIrx5xJ09MNaou27wVj3wcnq804OYvUCprDpHGqk98j1uPQvMkL3jj6q9XI33
                      PCxszrxpSpE9CV2kPcBZ6LzGMyU9GhLGvWdoxT1AyQu7Up9WPV6edz3U/eM82tA+vUMflr3y9J29
                      oK6qvUXqor3Qq847MvpmPeH/vj2ZoY894+ukPaoiWT3SNBg9WQ3DPW0VsT2KNU+9oFqRvAAWo7kT
                      4IQ9aKEEvFsyr71yI2U9DDX/vH9dkj3QbYW9GuJnPdBQJ7zI8tG8mpsxvW1emj1a9xa9EKZ1vGgl
                      GTz3Eqk9jS3Avdhzm71nnI49EVSiPRLxQz06qyy9f5esPffOfr2E6uQ8yOaVPJobeL0+zxw9Dks+
                      PTLSaz2QqT+9aKTKvFS+Cr2A3cO61ybLPaDe+jvo51Y8ED9nvAyZlbyu9SE9cABMPH/2hj2wcv87
                      DbuZvbPxpD1AzRi7ZbutPbLZRD0g+o68gFanva2gR724+L684LJivX6EYj0Yx0A8MD0LvB/QwT0Y
                      pUm8s9a0PegOuL3JqYg97HCLvSjekb2olNG84J/UO+tstL3g46c7qNZXPFJ3KT2RsYA9tJazvA2n
                      KL30RYq8gNhLvO3dQb0gsYA7ULHBu2BOeztUtOU8UESwvUAVZrvUzuY8gGLIvUqMUL3jQx+9Yqkm
                      PbgTlLxe8DU9aKyIvDcsb71VhcU9IswDPVl+zD0JM5Y9Hg0DPWAtuLzDDKO9CciePfW3lj2LZMS9
                      EL5hvCyRgrx5bKE9yuGHvao6fb3DwI8939KsPai2Z7wwZ9O7ElYYPTA2Br2+wVs9oC4qu+Xzuj14
                      hv+8ntMZPeC64ztyG7O92utAvXjWtjwUR9c8Bp1oPeQX4Dx4n7U8CCWfvZ94yD0d2IE9oby3Pegd
                      tL0R76o9KR+UPe/5tz34gre9oFCavOcAaL11KIO93pVqPex9+Lz9ZJw9wOS8PANaVL0m8nU9lVG1
                      PUEStD3Z2Jg9Z/p5vfNwe71d0Tm9TnJPPcAnHDw2GwO9x/mYPap9Er3GhQy9dggGPbRn/7w6LS+9
                      LGQNvfrow71AXy67FEvbvOSzE71SVQA9CYGHPUJaMj2tERq9VmSXvcqGML0AEv+6+H6evIvOjj29
                      PKu9xd3JPRjRNrzQcjs8dODOPDC7NjwgUjC9gF2+uzGTtz3YBZi8RwtnvWrRYr2fCr299mhSPTBM
                      g72qfCy9wA6rvDDGODy6bF29zbJ6vUCh87pNE0C9sZPIPRjk3LwYy8O8tY2wPT1zvL2pAoE9Y6HM
                      vUCOyDwuEY+99DjnvJnlkj2QKEu8jc7KvQDdg7youY+82jYmvUA8LjuUpKQ8VtSBvQC4Or1TRJ29
                      WxmxvfbjCL0AoEu7gGxHPDUcob0AZca8lmaBvZi7WbygRpO9MEABvKI/PT36e2s9tFbtvMgCsL33
                      55w9rFWRvOhVtb1M6bY8m7e9Pbbtib0+e469sHGBvRjyObyakAo9Hqx+PWqvej3aSZK9ANKhvWpw
                      UT2q8yc9MITqO+tXn704GYE8EL18vJMLuD0cjPM8jSqpvfC2NTxzxZ29XXSNvY3niD0jCq69KhV5
                      vVcJOL2n1By9RRquPaexWL1I2+q8QCvlvOmIuz0qpny9S+WgvUVQhb3TtIE9WjrDvfC+Azyxd8M9
                      uiJWPaeabb1okLk89SGovUtEu71gBCW7DGDyvEA/FzuE0dc8NcyfvaD93zvABWI8jKTyvKBj+Lz6
                      yBw9WjWrvbTB9jwo0d28jdyIPeUGqr35ma893PLzPCI3Yj0AlWQ7qVGqPeBls7xn5YY9TFqZPDLk
                      Nj0dACa9kimrvdo9Pr2agXk9AUi/PYV1kD16ZDm9doB3PUL5l70hZLw9ht2evTEhoj0rYbo9yxqr
                      PfKnQT3QECy9nn95PWCB5TuMcZq8wOjLOtrOU70kCfk8TH++vMD5v7y/C7+9DKGIPAF6xj3r+Kw9
                      YI/+u7CZizuWs0Y9GuEkvSYRTj1WWW09A4a6vT6/dD0r56694inMvVj9bDzAh2i7pzx6vfMEX73x
                      OJM92oE8PUbHdD0QmR08KkYrPRkvoz137mK9St0avWD2R71CWra9Iu5XPSibT7wAscs7Io24vchq
                      ibyBZ549AKt/u3r1p70w8DK82NA3vGGWwD3k99k8LRTIPViLGrzdGIU9atwbPep1bz1Y/Ii9b4uv
                      vbGSqT3QKbY7skRfPeYFNT0ABD88swswvRCTXL3mcx49wfWFPcaQl737cpW90YbJPaNpPL0db3K9
                      JwOFPTBmiL1f7Jg90D95vFAGD7zQZ7W77ThjvVgISDxDinq9ioFGPUNzQr2xmME91HmwPOCb57vY
                      LZq94PFtveDy8zsIicO93UazPdDGbDybH649AE3OOxMExz0iuai98GALPODy0bwuRmo95bqnvczB
                      yrweKRI9tSGRvWBDq7ws2fk8I2NsvaDIdjvAYre8aqhivaZ0ED3udnY91IXavK0JaL0M5A+9oLrZ
                      vOJLIT3Ie8Q8Nl2UvZg9FjzGxAW9Bu0xPTL3ED1ALUk8ZlVPPcq8u73NRJ+9Xu+hvTgDy7wg6po7
                      Uj61vVcGHL3qO7a9MpCyvWWskb25hKM9GEeTvMx1ibzSM3Y9+d7APcwIhTzQQSM88DeUvYDG0DpU
                      0e481BK7vN3Eab0ACpE7qlFuPTqJDb3tfFq9gI1vOuRA1zyMmsg841K2vVBWr70sRtm8XxKLPQMd
                      uD3ID5c85qGXvQcodb1YEww8+2W+veWsmr1Bl4I9td2HvS0Iv71hKqU9gDD8On1ZPr3DB129hKfT
                      PEgDszyd3E+92IYwvJUnyL1i1zY9wRGuPYWKlr0v16M9adeJPVjHi73boZ29UvJWPQVwwr0wPSU8
                      kspkPY9Txb0AoG+7gSOQPdplUj1AGCE8AHVxPNA27LuAHZA8GONjvBhmbry0I8o8IcOYPbAatzsq
                      qls9/F7aPAjBq70gGK47IRSoPSDNUL27Psg9gEhrPLq7eL2A0V+8OooxPXHlqj3fdL09EkN8PZfe
                      sj2yUxw9QBWeutiuZjyMN8C8wnOTvX6dQz1KnX69w6cjvapqND3KXlq9ahk/PdiSx71hx4A9AA8v
                      OvcrLr25dJE98TK7Pc5oET2pW8M9cFhsvDOrjz3bX7U9lvhePQKWdD1JOK89sLf4OwAHaztGuQs9
                      YOY1u+AF7rxnykS9u2O1PdAMCr2BKYc9wkN6PYC8m7psa8i87p1ZPQAK+jnOsT09R9CSPfCXHbya
                      oUW9OumDvQMIyD0+j6y9iVW3PXpsbT0wrg+9g9CWPSBeg70gRWy9TGWiPPKBxL3Uhe682rwEPTAm
                      GrwxkMs9IiERPcVCtb2gL+27NNGyvEBuFDxLNqa9smddPfrRDz0swoM8+7OgvTtCsz3Naji9WT6y
                      PZioh70RML09UuyvvQjTkTw3/Lc9ynsoPVo5ZT2G0lU9sDUHvGmIuz0wRD28Zg6pvbgelLyN4ba9
                      8V+VPYCJxbqA1Gm8HWW2va/Xvr1dubG9AHGROyE3xj1tnJy9GRGAPcC+p71Ejvo8euXDvcPGxr1w
                      cTM8pUKDPer6Yr15baI90NAyPA6Rnb2qKjK9sD5xvQgmozxLy5y9q2LKPbIJEj2yTMW9QDhLPOJW
                      QT2wn/w7AFiuuGRQ9zysFuC84PDBvGhoYzyTdU692vd9vR9thT1deZM94La5vco0iL0pX789B7WW
                      PRPCkr3APae8jPigvPpAOr2oy6u9AFCKORospL0RoMs9BryUvVjnuLwZKYk9yKSPPED9qzwAThS8
                      tv2ovSIbQj1OKD494GS+vHLOm70Ylni8Igl2PQP0tr05lLo9IJuvvCt3zD1NH4E9EpgCPYA4Sjxd
                      ql698b+VPYL+JD0j9nW9Uso7PeQK5TyAOlC6qLurvLatRj2Y7iE8wsBkPbA3P7xohhI8TYpmvQY5
                      gb3Vgay9x3CoPZzzAL2HlqA9wGSHPDBpjL3gmca9Da1IvWCKoTtNN8O9j4GkPYaSOz1AI/a8TCm4
                      vEoOET2Ytzw8IlwUPe5/az0Y1Dq8qPulPIBxarpAd++83d1QvbBEbr031D29O9i1PQA42jso6ZW8
                      ADCytxj1kb3mD0w9gwEjvRLVlr342PW8upJWPYcIwb3QUzK9AOAPvIOHgj0A2/g7VEnNPIJIej0O
                      Sx496NyjvGplVL0A97o8g1qbvdB2lDuibw49N8iSPeMEI72+CV896FoTvNKtQz0+aHI9KKWiPDDz
                      Sb12Zjw9XFnTPCh+5LwFEJe9TvoXPdImLT2FlcK9st27vQCbyL3P9ME9rbnGPaN2ub3ihqG9l4+q
                      PfvayL3uOau9wiNoPa7PJj3qdk09vyzDvY1bmr0idmY9Gq8/PaxU8bxgBDG7bNzRPKuWqT1WQik9
                      GEpxvAD1WLr9rbS9YNOEvW37hT3jRq697Tm5vSakEL3gwaK7MjZYPbiEl7wKfXi9PpsfPfYUUD2X
                      JcO9mk0BvTocHT1a3ma9V8hCvYxisbym3gg9gtHEvVFewz29r0i9YuwNPerGJb0BMqk9YLFSu4HB
                      gz0AWHc6AB/YvOi5rLxosV48SyG0Pe1QTb2NkjS9M4zJvewO1zzhRpw9CGqnvQgxor0l36w9pz96
                      vUEYrT2EVNA8wPA7vCneiz3ekVk9pAzePIBZyjyfuKU92tk/vU7sMj2QASS810dPvcr1aT2gSpE8
                      CTiDPSexiz3bTpy9CdKzPShiMzydnKe9ZyhvvXkiyj3df4u9T1eSPSCc9TtoEWi8g+tlvTTypTyA
                      9TY8B+d1vfERtD0gtIa98wc8vQ3cuD1Huq69UrWFvZ3RjL0U75Y8aBgjvKnvuj1RaaE9qC6KvKBX
                      L7ts74+847DEPSq/XL3qBns9kAEpvfghhbxwKiG9whcjPUghj70QX2G8JkxEPVp2s71qAam9Qnhg
                      PUcDeb32hBe9rGukvBH8xz2U5qm8AKDbuADhWjvCrB89TnySvQxDuDwzkU69YEDMvZFCtz2AA767
                      27OMPUC0pzx9a8s92Mf7vNgtEzwnMoU9sJu1vXnLlz1v95s98vB9PbCkAr3sUoA83YK2PbJ5Oj2y
                      TkE9iuklPVgli7wET9w8rVKIvYhJm72OWAU9PEz3PCVYrD0wv4U7+4KaPXWcn71NHm+9iCm8vcCi
                      Gjv+mzo9gLaaOqRl7zzVfbq9YFaWuxldpD3ia0M9Ig+ZvUW3m73qdqq97FjRPKt2sz3Y6GK8/eK/
                      PW2HPb2k3PI8YHMfO1inJLwAc1K9wOwvPGj9kjxmyoi9gOnFPOjUxzys1cQ8sKsDvAZZFD1esSA9
                      kdqzPQ2iqD3QFAe96Yq9PVBd3rvqp7G9UogCPQWGir3Aala75WaIvQvirz391oG9ih2EvahPMDxT
                      a8q9vcZlvWOJm71yr2I9aMo8vBJ2Iz3AsBO9c7+kvbD6NLxXtBm9HDkBvY7rg702XXI9mTylPRSn
                      8zySo1M9d0eQPeNlmj2OaD89gBNfvTsiwb38/w29hiVGPfL7JD1geV69AEZSvEceyL12p2k9DtEj
                      PRplRj3OJQ89BDn7PE2zs71s7Le8ICGpvcRkh71O4Ew9wIYdvN5Xq71rrow997eOPQBURb1QZ/s7
                      GA56PBSXijx0aOI8uGyrPHZeVj1o2ji8/dZpvXuKwr0IDe28AG6iuyA6PL3AMDq9AyqlPcbzAr3D
                      GIQ9zPbDvCByjzvYYao8Al5yPZTQn7yxvKU9k2GtvWJGxL2C5kk9SYGjPbDrEbzYgco8AFgXvSVK
                      rb2YAIe8WDNAvOw33bx1FLM9fXRSvXLUKT0AdSc7KTLIPdCZzLvAkkg7Eq0ZPcAiQTzxtIQ9AN6W
                      uQhmrbxWbU09OIO2PKE2ij2AGkS8HlMXPTzx3Tx0J6E8KZfHPTgpxjzL7Ks9AB6zPLSVxzzgniS9
                      ulp+PQZtPD3HDb69hXSrPdd3x701W8A9ZN7vPDTJmTygtLg74XOOPaIRib3Anny8J9i/PVGhvz0Q
                      c3M8qspqvS6lLD2oz3s8mjATPdWItD3gD7Q7GaC9PWBQIb1ZQ4I9oUuZPbc8oT0v+4E9hv6RvedN
                      rr3VQ4o9dETCvLbvib0oTb+8sr5APSr5VL2AUvC6AIOJO1EhuT0ah1c9wPUMvCMkW720y4c8z/eO
                      Pa0mub252Iw9dpwQvSBFnjzf2aM9bBSMvE0dxb1YAFC8A8V9vbRorTxxlro9THzkPBq7LD3QY0G9
                      gNaxugDGxbmcDNg8otAyPdg1yr0chu48oQPBPU0evz1shO28aDCjvKe3yj1TKbo9dF7dvLFsoT2O
                      iJy94n99PQxKwzxCHiM9i+ySPWgSJzxSn4C9PaZavaQO1DxECw+9k5+YPQNbVb1XQE29KJGFvKlp
                      wT0Q2yS8SkJ5PbKEEz2qcWs9VOXrvCwiBr0GLDU9xjqHvRFCtz0XInC9qxWEPb2EQr1Q9da7bnFf
                      PRJOMj3Efuo8TdynPezS1ryWZSE91DqEPADCIrswVag71w9Wvcw5jLxDOle9NH+3vA52Kj2wkd07
                      YKEsO7Wim71TiJY9GpkbPSB287yO0AI9w6C/vV9mpD2tp3u9zEmQvDKMPj3VE489eKajvOBhozuy
                      ZUk9+n9iPfMvyj14QZY8OXeFPeBUnzzqmj89AvxqPdF1uz25Uck9pgUzPQCnhr0uUEs9OYiyPRnm
                      gD0iIG09nkhkPaDZ7LwXfiS9L7OCPZI1Zj3ER+o84yiMPTZDIj2CHHk9AL65vN7ETz16ssC92SDD
                      PaBvgTuuwTw9AJF3usC7SLuAWDa9IBmsuyA/g7zAg2C84moXPezeoDwQiWW9gpSvvUWWkL1sUc48
                      ADAGOcopHb2q78O9iqhvPaKOi70R7og9QOwvO9SY0ry5f6w9vH3PPFsqpz2y5X89TBfcvKDhSLsw
                      a0a9ssYXPdOSXb2Fn649SWi1PSYep70YWhq8DWC3PbOSUL17AKs9UEq5O538cr1g7Mm7zcw9vWim
                      JDxIk9W82G+FvVpGSb12FQU9neZ4vX1YnD2gn5I7XnJOPTmLmz2d6Ju9gGVsPGLkjL3qKG+9oLf6
                      O+6mj73WciI9Wh+Mvb2WvL0gXVq9gMFpugDFcry5bZ89KN0hvOKeUT3qCX49IRODPUvuvD3ot/q8
                      v4+BPWTf8TyCZxw9LT+OverqVD2sgNO85f2wPQFyvT0gBi692R28PcFwiT3Ia6G9bhFEPW4ZPT37
                      05s9AEzVOvJKHT0AfUi8yo0uvQKFIT1Fk8K9aL6FPJS5g7yoAle8PCTpPD45Hz3aSg89KD4LvBQM
                      lDzo0++8nfBTvSS8A70aAWC9wZ2cPdHmjj2dzbw90MhnPMoyGb2zdiy9QLFpvF+txr2aPpy9ENRE
                      vJbtCT1YniI8k8xXvcBMMrsdfLk93HbdPBaDCD207Y68gAeEOvNNIr0z32G9aKWgvfSu4bx3h5k9
                      Sc+cPXPmkj1E9/U80uo8PbTkpDyZNYk9tUjHPcrvsb0I2LI8vh9fPe4dm72xoIg9R72mPQCxVL05
                      yIA9TCKIvACOPLzXw1C9TJ+NvKi9ITyfZYA91qc8PXpafL2sR4088OO6vaCXuzwhyqs9oP1Du1Cb
                      WbwAjmW7eEC2PPDRDL3Y+Kc8mEz7vHK1h70Omo69F0OBPYActzrjQ6S9gnQgPZz/4jyjoTa9QI+c
                      PACcCLoUahO9IEWLO682rz0Da8K9is14vQBvLzxjH6E9TJu8PCLyJz3XLCS97S9avcAviDxqVlo9
                      w1yrPbBlRTwNwa892BRuvCPpGb2OKD09HRBCvTATs71rOZE9aby5PeN9zL1QSkW8d1FYvf1VmL3e
                      Ck09dpIMPaKjCD2fNbO9AoF8PTCvbb0goLK9FmcYvUcdhD1IiN+8M8Y/vb5no73E9vw816BIvR7Q
                      kb1xh5c9n67KPWp+WD0AwS66gJCmPICgXbyTqsq9cAlevX5qp7331h+9wFY8vV0KNr0q7Aa9XUKa
                      PaP7iD1q1Sa9TGCMvA08Nb3txpw9Ql80PUcMtD2S0249UI0cvYTYEr3irJi9b0aRPcKdnr1gfji9
                      98fJvbEZgD34uOm8QE0rvNElqD0Sqhg9sFVqvOb9Mz2MLbY8gCKiup/pxr0lN7m9X1+jPRBSBzwk
                      t988cJ4zvLoseD1YuKM8ADNRumIPaD3hHao9wHwavB32oT2kcIq98B4rPDiFmbxTaFO9EONkvTQx
                      3LyAdQw6DpQdPevRrD0UtOK8oGR8vRhzmL2hN6M9WM2gPMAo6byn0qU9cDMLvdgo17z+6RE91jRp
                      PUKAmb3ToHK9TYarPVZJAr3kJs08jRDGvSpgT73KcF897CTkvPhMkDwbAsS9ALOKPHQjgr1AehS7
                      zomqvbSK8bwuDxQ9XetuvaoauL3+bpG96qB9PVBRxjvn3JY9un4+vQBtZb2osI880CxQPBMwk70g
                      Wou8jqiYvQZ6GL37C429iT++PROtuz0m7Gc9v/S6Pa+jyj0y8S89zM3pPOD8GL2Oh4C9ivVNPSAb
                      Pb0BCJA9nhsgPb0QtT3yECU9YP5evfIjuL2MZa68KmMRvaO5zD0tjp89sHXpu1zj3Dwi28S9Zqwo
                      Pc1Aqz0Ajm68VxZpvaYHQz11hca9cHZUPEBF1ToAn9e83DD2PMye2ryYkSY8CO2AvKrJKT2SejM9
                      ls0UPYqoJr1g+Oo71joAvWCatbvcA/A8dLT4vNBI6jtp0549THOZPJePqz3wR8q9QJRYO/oco70m
                      lgq9b8i7PQzczTzAOUc8W3GhPTTbhjyKvDy9PXlxvaBms71QDR29QLn3OsCRbrtEwYW9ALBPuyhh
                      2LyWuV49oNJMO9iTPTw6Ope9bM3bPD/Nyr0LlrW9mFlrPJN9e71r27I96k9vvWjRIrwxVak9EMOt
                      vfpfZL0QSR883ZaoPWHZlj2lk4G9XgyDvQCjwLv5pcQ9QCORPAGtqT3EVO48tKb6PJX7oz2SSU09
                      W8ytPXrLdD1dZqE9JWSlvcDEYTyyGiE9IIX0vNMesj3gmDm9SZ6IPYoQCb2gHh47alVkPfDmkr1C
                      PRg91b+7vZbZAz0hXsQ9UOVWvBiJeTw6XR89EgjEvZq2Jz3BFK491LbhPBBvA73AbpS6qnEWPZOx
                      iz0CrzY9eB3GPB68KD0OmCE923aBPT2FwL3y5Hs9foxNPeAfMb3wH4i9cjyQvbiuwryYKgi87Fer
                      PJYwGT3pbsY9lA6nPLgenL3tsqe9dYKuPXLmLD1aBng9yGaYvBpspL1Xua69Xod8PZpwxr0L57U9
                      EzxnvTSfmbxUlJS8gOQBvKd6xL3ANwi8cg4LPVCUaLxjwKi9p3RRvfk+qT1wpoK9wKNSOwH5oz0Y
                      jyC8a9qTvcyKxzwd0Lw9MC8FvAjJrLxMp768H3yBPQ3fP71uupa96OU/vJkDxD2PnMM92HprvOKZ
                      Uj2AflO6U8o/vRgbxbzTZpe96OZoPEsszL01S569wGMFPFXwvb0Xirw9QG0IPAOQvj1yBxc9lnYe
                      PQCKdztjmZc9DMfivFmAgz3D/iy97UWxvba2FL31RpK9MrBcPWzT9bz/S6Y9ECICvSZgRz11UL29
                      Id2tPdmGuT0YEaw8N5afPf23er3gqve7QCymvXD4kr1fJJ496N1FPIvApL3UacW8jqlrPUw5+zyh
                      fq49SB/fvEvxjj2SrC49+ZivPaOeb71IPJG8YDjBuxcmyz0b27S9THbVPLAesrvQudM7oPu/vFGU
                      lj03vX29t7JhvRARELwaXXY92DuYveAkoLvvCoU9KCN1vDB2ijuyKXo9Z7ckvdMiZb0Smjw9GHLD
                      vD3ztj3zMKo93q6IvQBKoLmQmxi84MLHvOpxHb2wA1u9zhYJPeSJ3jxZRsc9936zvWrXb70jSJw9
                      gqtTPTcour3HYsg9QJY1u61kvD0YMi088EtcvHutlj2gx6W98pJhPXPDwL0wcJ47QqMePZivz7z9
                      XLu9uOuTvEBjDTwDAa098IvLvRjzuTxb8oA9MZK/PdIxST0A70u7uTGVPQA6CLua05m9QZ2bPUJ1
                      Pz3AyXm7L0K2PWb/DT3o1LO9EMYVvVy54zxy7C49shF6PYdCxz1Jka89Uke+vSy7ojynR3C9V+jK
                      PeUit71Ctoa9YgNOPSv1lz0YTVO8N/chvUdsrz2rFqY94RemPatLvj3X1Vi9vlw+PZSAzzxScTM9
                      TeuCPXdlxz0REK09NPWyPPfhtj0KNWO9UJwQvAn2qT04G5O9uAK/PFBnRzwoXFA8IySVvTElhT3A
                      cTs7YBVcO+J0qL1FVIW9s9VKvRV2oL1GMoy922u5PVrum71g7rk7UYaIPWLRPz3Q1Ii7ChNWPXIl
                      wb0opNu8qkdqvaodE70IG8q9FsoAvQKKeD3Qpeu7q9HEvUH1iT3l4KW9QOmAvT8lmz1wJj+86PYo
                      PH2Egj31xp69vyyXPdT7kDwsgJq8vok5PaNwjD2y1SE9R4l6vbf7Sr2wMBG8bndqPeLGPT2weYi9
                      1d2dvaD5qL3XPry9qmpqPRGOpT37PqE9SpSsvRdQeb2g8Iu7jb6RvXEWjD2wPNA7WBEhPHr4Wz2s
                      gsm8kIggvFR+8bwAvI863FX3PCcMOb0Qr0Q8tgt4PYDZ6juL3r89GVCvPWa3Nj1psZc90bq+PcQ9
                      1jwAvuY74Fl3vZNQor0fzMI9gKKsPPfCjz1QRqI7nmGjvVqPHj1JFZI9AHLAO5o2P72LYbK9FI7L
                      vEC+WLshapw9tYG8vSPsYL16k6a90L3PO2VSxz239409WH9yvC5ZhL16a4698jk3PT1ft70fy6k9
                      YLKvu9V0tz2d9I49xqIIvR3ZIb09uY69BUqVvSoQFL3g1507E6iLPf1ap71wh3483lYXPQfKvL0o
                      OEA8Al9QPUJaHz0i6aa9/ZsbvexB37wLnpk9e03BPSgrZzxrn8E9qITdvN51Nz0ye6i9EfTGPRNX
                      hT2scwa90sUwPdACgzvSFZS94J40vSAgq7wLyJe9uECfvABHnLvuxYa9hktnPbtXqD2drsw9YPmz
                      vBoIJj2oHTY8iUyzPdk3jj3KvQW9ACaiuRuGnj3WFCs9wJqqOopTMD12wVQ9lDKRvHayCr0ACpm7
                      Xmx7PaC1D7vYE7g8kAF0PLdtnT3q5Sy9kNdqPLVctT0IBqO8dgpOPXcgL703esG9ItyUvQpRLL2w
                      y0u9VXqavdrmOL3S2Bo9YEDxvH9frb0YQP28Yzi+PQbkaT24kMS8gNUmvfeBij2ewDc9gMHkvEMI
                      K72jm5g9SEicPKrODT1dHGy9sHpuvSpMJz1gzqS7WpRRvZh7ezwmlaS9/tyYvdCBwr1oWLo84Hy8
                      PEBrA7w01IK8E1VdvWRC0zygIT27FEaFPLU8yr12UVE9DkdpPVEzmz167FQ9lpomPbAZSL3fubG9
                      MOj/OxfXmj2ALGe9VJH2vAPJRL06Fx69UiZqPQAgjLcG+Zu9ht80PcNYWb14oty8MA6OO8MexD1Y
                      NNe8+5+2Pa7WAz2jzyy9yha7vS1Qb71SnBA9s2NnvfJnrL2RO8A9rHLYvPOhI72bTpm9mKkjvO1I
                      sL0DiIY9gEYZvIzm8Lw4VZM8gPQ1vSwnkjwjc7u96vZWPeItdD0YsN68vTt5vYPeb70A4N45BlBm
                      PSRe0jyptYU9NpkMPe3ErD2gQ3k7ygMevfOJN71AvcG64GFyvdjkijy9B5q9NCy0vC2DSr2EThC9
                      gKiIvUeOT709y7Q9DI+bPEUktD0oGeC8eoxIvSL6Wz2aexq9eDvIvIK3ir0Uxga9aHixvY3Rkb2o
                      Npe85qcdPb44jb328BU9sAIDveNkPL3CSjQ9l1u/PfoRaz2QPhm9gDWzvD3dHb2mvCo9uMygvRMC
                      rz1w1Vw8g0i1PbfJXr1TFbs9fUeDvRB6W7xlXqQ9tjg/PRo7Qj1xwIc9gJnUu7FEqj2vEYc9YHaX
                      vC1ti732vQS9dvBZPWJGZT28IeM8gF7tO1luvT236Kw9lh54Pe6QRD1sjK+8jKSjvFM7yj3mgH09
                      EDJHPFoCZT0AAGO4vWPMPaBkvr1VjKE97aGNvQBnL73jvI+9AQOQPSrpJD0XSLY9AsWvvUD27byS
                      mz095zKnPdg0ZDwwWay7sm0BPc1Phj2NNkq9UnuGvSDoybwAw5072sSYvbStxzwsPIQ8XbmLPUjn
                      vbz766Y9UDBYvYzwBr1Mppc8qOnEPH5Mfj1N/qK9GfaWPYKhcj26Txg9yfTFPeC/sbvyFBY9oFLo
                      OyhlnLwtDsq9MfnFPVzP8jxAde66J7KMPcJ1hL34/6C8N6YpvWKEyr3LvoQ9AhMmPVXpyD2qgB89
                      DsByPdLmDD36njY9uCT7vNrrdr3gDQq9iuI+vVczx711uYW9gGyFPE1Vk72wLlO9D229vbgf0LxE
                      mOY8s+O5PW2ba71pjY097duRPRkusD2oWJe94Nx3vdZ2A71Z0bc9w+KuvSBGVr2Q67y9StcePXQC
                      wjxO72g9fUAmva54OT0A/EQ5ChRHPY93xT2iy5W9kHISvLJenb1WT5u9Frx9PdrUKz2ANGy89mgJ
                      Pae8wz0VU5q9yjaCvYDdtbrwQ3K8h98yvSaFNz0B3Z09SC37vHp1Ob1LwI09AFgEvRqbLz25GaI9
                      C7a5PS7Rir2sCdq8UXa/PQryLz3tl6m9idaYPQCtzDvOqS89YGTpu7BAKTxYhiU8St5ePaCQR7vw
                      7ie9fwaBPZZfaz2sp/I8IKuXPGHuhT2oo5m8XfaOPdnYjz2xpaY9N1EqvSzwvDxDSJO9ULHzO6oE
                      Wj3bvLk9WIoavKOgeL1jzXi9d7XDvYDEgDx4TsC8IFjau1hmMbzKvIi95IfiPJDLLL0zwjG92Euk
                      PMrKez1sC6E8Q4/Evazevbw4H6S9uMrwvKGfjj3LoMo951RdvdNPur3aqXU9Kb+3PesgiT1cFdA8
                      pB74PBDETr2U4IW8PtUoPbDA1LsG7xM9qCqvPP4jrL0vjJU9NDiYvFEurD2fHLw9GBa0vJ0BL72Z
                      y689SzXBvb+Exz0YEUE82KvGvXQVsTy8p4C9lYKgvXp/ub1ybAE9gClpvXHWkT3QPcS9gFH9OnhZ
                      xzxfAIQ9wqwiPXDXt70ok0m8Pzu+PeG8lT09eSy9NI2vPPJzHj23Zr898eTLPbtrhz1MW/I8Uk6s
                      vXhkmrztDz294Q2jPQ59bD2Udec8D36+PQbLWz0pcLo9ynNnPU3onT1nOmS9tK2uvKJ3YD3go967
                      XGWCvQJVkr0AvRI61QbAvTRV1jywcy+9CrodvSCZiTum8Uk91TuYPeu9nj1wbWW9t2aqPW0Inz1A
                      +C88JCKCva6AAD122UY96ENlPNJWBD09L6k9h/iXPYebIr1PoaM9UHvBvVTPqzzOz0U9GmVLvdDt
                      DbxNYY097XA3vfKKWz0zs449NpZQPcCVRDvL4J+92tAVPZZuQD3A+BE8mrNAPWw/tjwmvaO9yncT
                      PXB0ZTy3Yjm9VOT1PB+YmT04lLc8NsRCPb5fET2Q6lA8HpMePfvftj1Q+AC8BPjgPOrBYD2oaVy8
                      qnFBPWh6yLwXUmW9vswpPYBQnLtqj089mHFXvOV5pL3U2PC8UMXEO2igZbza2Sc9wrrHvX7/bj0a
                      OFo9oBF6O9hQJTxAgGc8KjaMvfr7Vj1IPsM8B51Wve1yfL1S4wU9l4hovb5Vhr27MIw9qpZHvcQ3
                      5Dz13oc9wDcmPCCQq7x0BYY8RppJPZewkT2S8jU9yNG5PCooWz1Thlm9dxy+vRbwDL1RI4w9G/Cf
                      vVRQ6Dyf9Z49l9uWPZnIxj0mlQA9d8EavQ6GBT1nz7y9BVGGvfx8Db20PPu8IheDvcd+H70bR589
                      inZ8vXIDFT3YvFM8EpkRPfX/qb0748M9JsVMPU7AbT0AfV46XODOPHLziL37y8Y95ajFPVdSQL0a
                      2HI95bKjPT48Pj1AnwE7ACiQOF+roz2asVQ9lXe2Pfxe2jxx3Ik99KH0PLBOvb2g3ie9Any1vYZM
                      nL2WtA+9zZzAPdvsqL3SBWk9MHSpu3TJ3LxQkRc8nTkyvfqYub2GaQU9MGi9Oxpser22IwE9U0dg
                      vWBNqjvSBGs9k8lRvTDQM7yyp0c9A99EvRkAmD1gVCC7tCbEPBRl1zygWYQ8sJjEvcalfD2hUbg9
                      H3q1vaAgRTsaEa+91O2CvQArPztLpcc9xrYJvXPuXL2aQAq9Az2TvTAZzzvQm/A7ErgzPQL0AT1x
                      o8o90JHyu1ByUjxwO7a9yjy4vWB05rzLg6i96+CbvVB6ADzY3rW8Ij83PZRcxrznY7W9GATQvHQX
                      gryOImM9ZU/APfGuqz2oxhE87IWWvHRuyrwQXEO9HdFZvQ5OGz27/oA94uDCvcoOFT2tPMq9ABOQ
                      vDEvrj0Anbo8EF+vvfR0vTwa5Bi9pqQSvaBk8DubY7W91QKwvR2Sgz0JQ7s9MBJBPNDEer24pJI8
                      MCbAvaasnr0yI4G9Qjt3PfiovDwMhqM8GiRZvRgQtLz6apy90DKvO8gds737/6g9SRi+PUXvrT0w
                      I228oCfEPGL4TD1UC8g8EzC2PY0ujr3oVcS94HW7u4BbmbwbScE90iM5Pdhksry1ZMG9AODHtwD6
                      2zra/lw95N3VPI5gKT3OH4a9nCcWvZFVrD2CpwQ9y/yiPWpqwb2h1p892KC3vBknkz12KZC9tc2S
                      vVhkETwrrri9h8t6vU9IhD3Y6mI8Gq8yPVY6OD2YaWA8ZEYQvdzcDb19Qzm9QIMkvHo4Er2VlJ29
                      gLVWvQDQvDqj9Lk9i6XAPcyAjTzAFDY7oPGhO+L4Dj0wmxw8+PXJPAokVL32M3k9FSLCvYByqToL
                      gI69CjxIvcA1B7wiXi89evoyvRIgYT1oT7O8cKgGvajgXLwMBvQ8fvWevWmhpz3cZOU8uB2qvdI/
                      LD1y2Uk9SHaYvERx2Dwgkry7Bd6fvXoYej3mYiw9VUa0vd1PiD3OiCk9xp+bvcjrwzwWJgw9Slgw
                      PYgfx7xQ4z48MnF5PTBolL3GCR49EN5SPCDCtDsCXcy9sqcYPSXLhr2Yb0G8GRi0PTmxwD1PkZA9
                      wGplPIP2yL0Vpow9ZNTnPNCeNjywpiA894IyvXWPrj1O53Q9EoNFPadGN726rWy9V+xEvWgTSby5
                      jYs9YtK1vZZcCD0ILcM8HFfjPMzCgb3GQWI9ryS5PTdRyL1Xfb09I/VfvQr7gb1nZbu99B7fPEjX
                      vb3haJU9AE7KO61lIr0ox3m8iHTEvGBWljsA4lm8Jxq5PVDdkLujHCO91/CHPTb1WD2rKKQ9Xo8m
                      PbVVtr2LqK29Zq4NPVBhGb3Wbg09C5WnvS1itr2tkTm9w/t7veQxgb06RjE98ok+PWv0wL2C1Go9
                      DbhFvd00nD1AN2c7UIa0u/58qb3Py709ng5pPUE6vD3XjYU9+ohxvYMMlT1DNLq9YBesuzZAJT3O
                      Y2k9yf+EPc5uFz1JNIk9oL9eO3xB7TyHimm9YNTIvaiyG7ywDno8AElTujC4+zss8va8QAiSvEjU
                      vb3iBSU9VFCKvU3Lij3DiVG9yVa/Pcp6y70xt5Y9eLaFvBb6iL2jmh2953JEvZono71oe7G9gEeH
                      u4J1gb0ZhoE9df7IvYJpTz1gVBK9lmdyPdBVZzxpfqc9wBzEvBdAYb1sUIs8BxanPQeZsz2NmJe9
                      F+yvvV75ZD3zH4Y92Um+PQYIor1+2F49q3qpPX0wlj0QRpi9KkoqPahnwLyTl169BhYAPUzhjjxA
                      XA88ezSVPdAGMb3omJo8DG2jPLhg7bzj2cW9iXGEPS4xdz0gSaG9qCFsPAAq6jnsqbI8eM27vFV4
                      lj3WWl49AAPEOfuypD3oNPu8gngZPb6hSj1u9J29+eTDPflQmj2Z2Lc9nY0mvZiXbzwwdY69KPLC
                      PNATAL1yPyo9QC/0uuDrL70QTiC9iLySvBjdZbzasSS9g9+/vV67AD2dHDa9EIggvEk3uD1KSTg9
                      womTvdoubz0Pp5k9tvgyPduizD0AMEg6aJR1vFFnyz0w35K9I+O/PcI2uL3y+Ck9YJNiu9JPjb2A
                      JoQ8q9LEvUiay7y19ZW90g9NPXSChL1CaHQ9EDmdvSD1Kr2y3kg9pbOPvSD8qrtoOJW9c6aevXSo
                      6jzKkXm9bIUSvSxJ67ye8XE9+A+KvJZCPD1YL5W9ABieu2j6RLxtxSG9gxaEPVh8fDxW/xe939mN
                      PXjEtLy6ATm9AO6/Ot1EQL1QKEe8MzMzvQoARD36Vby9J+hnvSNIgD1hPcY9KYfEPW1Bvb1HdMu9
                      dlCLvc/zur2oSdG8M+aNvQc+Zr2ysZO9NkuYvcAw97zG0j09tVOrPbB+R70dasw9oCJCO4fcbb0w
                      baI7rNzOvOiCfjzELvo8oJPZu2APnLvhp5Q9xo8OvSqVgr3gu728aOl8vLhfwb0s49q87LblPMKL
                      ZT0XoLu94fmiPShXib0jz8I9NIiJveB0sbzKJEc9qxaNvb5Al72pc7o9hghkPfbVJj0aEie9wE9h
                      PCimYjwQrSG9HcqiPbMWv72vL8o95/AwvYfJyr1Q5tQ73VWmvUz18jxchom9gCXJuxAzjL2zJsC9
                      EE0HPNDtSrwgHLA7IuSAvQCVabtRe5s9ttNSPaBXab2Ah7K6Pn+CvZpMYb0w20e9CwSBPSEhqT3A
                      QD+9Ft1ZPU6dJj2OIg89hZ2ovQBHeryIpMi8nyi4PcDuMTzzljC9+BnMPCvVxT1ejhU9RhwGvb4V
                      Bz3aTiO9gxKtvSi8fbyAvHu8C2W1PV82t71gO1O7MLa/O3Cyab1ipo69HkxlPTyBEb1ei6e9Q7GG
                      PWN4gD3KZoq9AKV7PI2aSr3AwkI73eWrPVLWFD3DQcS9iOK5vOp+k72Xz7g9mbiwPfnNpT1Q3jE8
                      bZ6mPYY9QD0gvd07Ff2HPeCRNb3gNqK9jTV3vXjK6ryH8ZU9v4evvZD3JL0AYpy6cBt6vYF9zD26
                      RSG9ABisuGAxk7sLdKa9EGF/PB3eqr0A4Ve70GJzPKI0Yz0JD4U9UrZAPTVViz3wVWi9cM2OvVgQ
                      BLwAVWC8ffO9vaXUtL1gKZO8GL/PvG04sb3dcbA9eITGvDjEzLx3J6o9wDkmvQbYir24R9S8IA0e
                      vb7ghb2j35I9DE7DvKUokr3aBzo9R3pJvRBccL3Co4S9eC+LvbKCKD0BnJA91vI5PduLrj0KnGY9
                      xKvyPECsg7zSGEE9gBOJu4A1ErqKwgC97EHoPI6KSz0NSlK90hghPUrJjr0QJEy8yOGTvNTaqrxg
                      l4m96XeUPVCEKLxYNJe9GqwvPYBxkLwi3Yy9psdePbYJQT2YbaO9vPrXPGgzjL2V+La9Y2G5PZCt
                      HDyooA+8N7VHvZBFeL2gjwu7d11MvYAz0roRJ7o9CMO8vEAGkLwHQMM9cowtPUGLoj0AY3m6hTKS
                      Pf3vpj3g16i8glZjPTAUCb3AdAS7c/KmveGsmz13Oas93Tqzvf3AUb2DXly9COayvUC+JTsDwzW9
                      KPiYvYdqY71AC+q6uIqEvHwg0TxilXM9FJ7+vC33yz0Hj7e9uMbyvG2XV73BUYI91aCmvfJiGz0o
                      p6W82Z60PdVhpb3SLUo9+9qvvbXjmb36dhc9j9e7vbCcPDxMEcM8DfdRvTA9ir2ARd66mtyKvTDI
                      k72nfJ89lL8JvTWCu71DN3m9wjqfvVY4DL0KSDa9e7ORPavDjj0QrgI8gMlZuqnVlj12+xS9zJ3R
                      vCyw47xKClY9UJmFu1cZR72dBL+92GekveoEXL1zCqS9UysovYDISr0A9l87aW2xPd3Rwz2zgXC9
                      PwfLvbAEML06A1I9CW7CPdwL1zwDg8m9EJ1+vHvxhj1gUZI8gBqPvAMSvr0Ji8Q9Sf6NPem6kj02
                      WZG9UoJFPXA0F720Q6+8YE6vO3Efpz3Y0t28UEYmvJb4Mz2okhC8gjodPebdFb1H7Mi9vGcSvdoI
                      Rr3q1jy9MCY5PODqsbsAubO7SVq9PQDj5DlYhEe8gjEBPfYLYz1z1Vu9ckGJvaxnzrwsaZE8vb6/
                      vXtNrj14ct68uokuPQAUd7kF4qQ9dB+AvOBBwTuAW4W9EFYlvat6sD3WgCk9rN+UPKrfo73IRII8
                      OmRAvRsYuz0Ksoa9UrWQvTAfPjwj+Eq9rXygvTCNLbx1Zrs9EAUWvMAF+bybm5W9gE0SvPapZj0s
                      y/W80Y2GPQBiqjrV9Zu9xED+PFkQjz2Dq0W9KUiYPWANgLuNXse9SL38vJU5rz3+8H49+PCtvIC+
                      CL09ZUK9osN8PXgwsr3wtzK9QAWFPM3CZL2w9M8722XHvWzkuDxmKHo9z+atPeTF9DwgoK08CVWa
                      PX2GNr3rJKy9Ga2pPdmVhD3KQ2e93lxxPWMus704a8Y8WdWpPXRrgbzgHrc8kEuLvXTLvjxuE0k9
                      oPNfu0umpD3o/BC8U6WQPQGcvz3MKOo8sBlzvekpuD0AOTU785dRvciTkr0yhHk9GikePSgusDyl
                      cqK9eqcgPfAgVjzQ2i+9InYWPVpEFT2w4Qs8ZXylvZAvBL3YHYm9xajEvQ3oqr3QeHg85gWVvXzo
                      3jzqWkQ9UEE1vYJmMj2wKbo753qwPcg0vTzJ+609MscOPU6BaD1o5za8L7isPXMqOb1qCmQ9UuDD
                      vUAjmjp9lp89ZMn4PLI1tr1geJa7AAeqvDf4vz210ri9sCtBPIYLPz31YZ29WDedvfNKqr10ptS8
                      Qi08PT7oQD2ew049Ofu3PcBKU7u2zSk9+Fe7PFDmAjzH1Ry9HT0zvSqZZD24/qW8GP8LPC54Yz2G
                      yxK9Qsa1vUDtCL0IvZY8uF6vvCuEl70mNQW9YKL+u+lFvz2gRIE87QNQvdCFMLyDLrE93fesPQAQ
                      pLoIrqq8p+ZKvRNxyz02D289j8iIPUBhVr0AwFq4EieBvQGBlD1Q1I+9wvtoPT7bMz1QViA8tays
                      vZC8V71aLYe9LlAKPbo4fj1LxIA9AGGIvGq8L72Ah8+6iG6kvTAuIjzySgg9pT24vVK/UT3ot9K8
                      7Vi2vShygbw+7Iq9INI8vboAaD37qri9pUiKvc28rr0qNkU9PyysPSJiZj2Bdbw9Y+ccvRprob0X
                      AiG9oZDLPajgqzy+4hg9gFrzOq1lT73jf5u9Qu+8vVDPDr3VBcG99HPovDpmSD2ZzqI9NkKQvUTZ
                      7TwMLoE80N+PO6iNuLy2+Fs9ApU1PTC5GzygFSU7AAmFOyt1jD3QfhW9ck6avTNvkD0wG8e9wEs7
                      u/mnsD2gh0s7nScivYQ22Ty4tqG8uO2qvYDZB72KPbO9isqFvYC+A7wnq6I9BbOgvWltoj1jV369
                      dO3AvNUdrj2oG4q8CkQ0vRgNiDyoOY299U+OPU2SlD2oirK8L++yPZWDpj1KQHI90I9BvBgdFTyM
                      /eY8c2RJvbjbhb0S3xA9aUeoPYBjsjsO4mY9bW+zPdCitrsm9Ki9O9fFPZMsxj33B2C9Gn5APbSL
                      ybzO5TE9JkwHvXbWCb3Q9xK8sxnGvRa0LT3GGo+9eIS4vYmutT1AiWg8KrgXPQfFuj3t/je9MNdw
                      PFeMgT2VWY29RB/7PA/DyT2YpVq8Ep+/vaj8Kjz2zXM9yN6XPKrRlr1i0CU9gN1sPMjOoTwTmJ09
                      4UirPT86mz0KU4i988aPPSIMbz3INaY83UlMvToNCb33PsY9sICKuwcCTb1qayq9rSqBvdiguTwA
                      ojo7mEaMvYCqibpwADG8GKnLvZ8MuL3x6JM9v8jFPZiopLxMLuS8Cz29PVNfzL3b8rE9QDcuOy12
                      R72CVwA9SpSovWWykz3g9oe7PrqYvbJ5dD2KOHy97GTDPG3yj71hwYY9yfG1PYiv/7wnaG+9oTG6
                      PcnCrj2XWBu9lsERPfqkYb0AaKq8gDPtOgxV8TyJMMY92tiAvVqyf707/qO9XfNRvbBfoztyqLS9
                      Q0qfvYy62bwo8R08BNeGvRjno7wiqXI9cIofvHLTfz3w5h+9fdwpvScAnz1C6sW9AMNxvcdqgT1y
                      MpG9jITbPMrRDL1fwsM9MOp4vLBmyr2Y6o+90FrvOwxegjy6ikq9/FCLvY1MoL0q91+9MuACPWkh
                      oD3AFI28sCdEPPKebj0PWaw9fJrPPEDnvb0Aety5SG3/vE3FVL1giL28sJMEPAjrv73F+Jk9uG62
                      vVjOPjxAJ0q9NoZhPTDOuL1iASU99OLYPCCPC736HxC93nqBvT0iKb1gJJa9gPnLvbDCsTsQdjS9
                      UGqGvYn5tj2TgDS9xBOEvRAdajwyQrC9E+hPvVAw2DuIsve8KCs6vHNEzD2IU5S9yAirPDAJJrxa
                      cE699b+iPUSl9zxlaKg9qkFQvYi89rzPD5U9p23DvdQ0oDw6Q5S9XOf5PNBCrb3MZqw80DyiuzVk
                      xz0gG5y7/VUyvSDgljuoN8s8qaC0PahNl7zz3KU92G+wPBbhaT1YSC88gP2fvQDIirxKpEA9+Vy/
                      PZaGKj3imEY9bbuoPRPkoD0dmIo97ZGCPXzAzzzgnIy8ILS7vMLIID1cuIm9AWuKPefarz3uJh49
                      Y+JbvV3ikz2iFi894l02PQCtU7oT0L4908RyvTQevzwe4z896L22vYoSZr2rYqa9DDa+vICEXDzM
                      AsU8jamZPaC5Jruwgri9LNe0PGpVv71gW6Q7egcmvRjzp73nNiy9OwuhvTBJcbxSklQ9NYaqvSCE
                      vTyybyc9tLyKvHkjlz2os5m8lg4ZPdWxv7149P+8r5bEvS1lL72gKKO7SG3CvTYQYj0godm7k68o
                      vUvxjD2wnaC9gL1svSbpgL3jw2+9/XeRPciAmLzedE89gFcnPMCT0Lyb74Y93NCEvZL2KT2wBzq8
                      aoQRvdDb/LtKxyY9bby7PTBq17tXysY9QAk7vADZyzt+jUY9wDSZvJDAADz8BBO9be9zvYfXKL10
                      Ndq8n1mUPQZ4FT2ne1C91DrsvDC+Sr2YIo+9XgVkPdiiebxwUyk8sDJAvQoPyL1z5CS98w4/vXL/
                      az3EG/s8R6CMPX1/Gr1HhVG9UhsAPWfCZr0ANA65WRysPdhLnL26oUQ9+FqWPFCJb70FCLY9N5Ep
                      vWCnUbvscxO9AIAPOtQxrjwugSg9MxKdvc3htz2o/sm9AL2WvAIcNz1YG6s8zUicPTLsvL2w4Ow7
                      p9g3vR56Zz2Ew/A8wP9LPJdWkj3byZy9awS6PX4qMT1WJSM9g1J/vS+Noz0Dy7Y9mB0svI5kTD3I
                      +e68/kwwPWF1vj2YFmc8/a8cvcqRLr13q40972q9vXY2UD0KwWu9QOjGvRQQFb0yDwI9kiZTPTMX
                      vT0/CY09XTEmvU1SoT0oeYs8YKLvu5Mjnr1DsK29ETucPR1glD37M6C9JkM+PSxRh700Bpk8lGTj
                      PBNXuz0A5Iq7fWmGvWBOQbub06m9oHK5OyzZsLw4wo48hU29PTO9wr0pm4k9ZGsSvaWPuT19GbO9
                      7BzFvDSar7zF58o9fzm8vaClorvUJrC8zdhevahyRDwYzL08szaiPVlLpT0LILy9ZBLhPDN8qr01
                      Kag9b9OYPYKzOz3uhZm9eqABvfiFhbyVFqY99a2HvZOAPr16t3a9AKSWPMya/zxg2bc7MMe+u8YI
                      jr1q4VU9qYnBPYUopT1yES49iXKoPZAgL70EHOg8sFRbvTAAbr3AV3W9+rgKvaAygTwo71i8GC25
                      vE0yXb3ALVy7qKwFPKA6IL3eWQE9TQZ2vQj2hDzzSoM9kL5ovBFBnz25rKQ9ia/GPQnYsD3ORJO9
                      /tkbPf03KL1+GiA9/Ws+vbjogr0AQI66PlRTPYqaKT2o9Jm8wAqiutm8gz0i9Vw90Ff+Oz8Axb0i
                      bhI98LslvDD9QL3KACS99+iCPeCi3rzXH7w9GDjHPPXVm71iykc9VzWaPfGQvz2mOgG9O6OLPfID
                      Tj1sHAm9pmYEPVlkiD2g8qK87qM0PWiskbz1RqO9ukdJvf9BsL1Laqa95tUxPXEFuj3YO6y89Pys
                      PEVikT1+eaq92BTAPPBYlr0oH0I8UHeFO2awC726Bl49UZ6kPYfnuj1FRay9aVePPSyGkzwk0/08
                      2q83vWk7pj03Y7+9ZO/ZPLCkSL3w3gM8ACjfux1nkT1C58m9qHSXvbxg0TySzEA9UB5/vHrlaL2w
                      SSU8BzK0vVhKZTz0Jci8CLSbPLcVuj2gwpi7LvR7PQCiyrtAVH08wKOQvAKsJz1DLEK9btd4PZgK
                      pTwiBiY9TWm0vWVYnz2gXd67Ktl1veAamTsWnBe9NHG3vPRktrzRzrc9P9msvZTj5DxHxX+9ui5b
                      vYBm77qJwsA9zXqOvfmrnD1rzKa9G1ytPdrtLr3wqmw80zmmvTE/xz1Qq2w8AD7+OgB7o7sFyLa9
                      JkkFPXZkhr3gGyu9OjRbPajDob3K+EE94OeBO2EVuD0vb8E9XDP4PKqVsb2F1q09+ux+PXeOe71Y
                      S4A8pZa/PXpAIT3YQ3e82qtEPedCwb2WYR0919xWvcPLyD3hxsk96e+ZPTqNAT1H8bk9kgkLPeUR
                      s72glYS7QihiPUwHCb3nZJ09eFOcPKvNhj1i1w49Ef+HPdqvTT11rsc9AAjNOSBy4TvkJIa9zdWe
                      vaV+hr0t7pe9ojpzPQPPyL24Fq88gBuEPKsylD1MxJo8hCeBvWMsQ72uSo29EnBoPSD/jL2jgjm9
                      5DXnPCBuvzxWckM92bW9PQCovjv6M1C9lv0GPZ65UD0b6IE94oiSvTJSRD2bs529ZyrJPS6Wdj3Y
                      irq8DFuAPL3/hL0ova29A2WXvRR73LwQRKW9ZjpyPTzb3jywyW88yFaVPO8Tgz19k5092eG8PYB+
                      WbqRfrU9etkEvSxzwDzgSpC99GfnvOD4Br0WLQE9DOcLvZADN71DnVW9xvEEPZTsgb3w3gK9Kqdj
                      vUrfNz3NRYI9CeeWPSCkgTsSZbK9y+mEPbpCIL3Qceq7tzPIvbCb2Tsi8lA9LCuvvGB5ADvrOo69
                      6DKNvQCPLr2i6zM9RwlJvZ77GT3WOwU91ICiPCitibw6tD09PlArPXAbPLyAOWe8nT66veLWdD2A
                      njS6wPIDO0Z9MT0uRY+9TdkgvdjiAjwwsdE73WRuvRCdbDyESNM8kCivvSD0lrt7O5S971e2vZd+
                      Pb2+jio9DPaPPFgjy7yapX29OFbRvEroBL14HI+8zbZhvY4iKD3Sa2A9CdyGPVIEMT2DrZo9eL/p
                      vHNUbL2aGwm9nhObvXIFAj3XT5Q9+h8lvXoLdT0AAEC8bFafPPdxwD0SQHQ9bYrEvaDvKrs5aaw9
                      0xI/vbmMrz2t5rY90joWPfvLkz2mXSA9dw+7vUXGlz3QJKC9a1WyPahhnr1py7w9E8nDvf9gtD2w
                      Tk284Ej7vKCZTbtrzbK9h1AovXQO0DxVTLQ9oA16O3QAijzIRY48EN9NvNWBsD3QcGA8I9Fxvcow
                      X71IeYk8AKSBOgbvqr0zBK49gzOKPQqieT1/obC9oJ1AvaDgxryAm5u7ULj0u66zSD3MHay8cLU0
                      vJDGF7zgaXu9JamzvdDpC72tYcW9Cgx7vfDuf73lF7a94BKbu1Waxj1zQHW9L3eEPcyr1rwokDk8
                      mOspvGHsxz1Dmqw9oCt4u1DvXDzji7u9PQqKPb1flL0w2VC8oqAYPf1WfL2th5G9mIaCvStsqT0I
                      Xdq8Z3+tvS0SPL3IVLC9iojEvcBxqDzaCq299AedPCzswbx3slm98mmbvZPZcb35Kq49Yvh3PQDS
                      yDvHMra962OJPY77Jz0UONK8kLG1vRB4A720k9o88JwkPERn+TwG3Yi9uh8aPWCPZruSYbK9ybeX
                      PYB86DtwVXG9I/+PvR5QXT0Qf028rfdavUoceb2wE+i76SCJPQfgWb1AZUg7Ns0IvTFLjD3gVyW9
                      wL8RvZj1RbyT7Vy9D5bKvYs4o70AXcg5AGySPB3aur1g8qa8kvEQPZ3orr2A2mY8IBGwPGA+Dbs6
                      TQ697dizvRUBx72aNrW9QNXpvIeTIb0AzCK8YZS2PYFusD2qDQy9lfm+PcBUiTpMyvM8VvlnPaoq
                      gL1A/A07O5ujvXdbMr16VF29zJv7vIBQ8zvKNIW9lsYsPcLtnr2Cwyw9ehtDvbCF1LvEou48sLmq
                      u6dCmD0A0uY7KLvQvPkilj1AcA87l0K3PZIXqb2njcK9/v9lPf1tXr0uxQA9H+/BPZ0lor3N5qs9
                      12N6vWNplj30DM08Slc6PUV6lT3suaE80gErPe0Hu73iKVI9V3o4vYkKlT00cNC8HX1ZvZefcr2w
                      Bo+9jF+HPABfCDoIlZE8/SxrvTdrs71gCZq9FK2dvHe1OL0NM3u9bU2rve6Cor2ufGs9nUmIvYLl
                      Ij3CxwY9l5+qPYGhsD33pTC9GGNgPPe5tb30qfg8jUKAPXb+ej3Nysg9ghG5vWPuxb0enZ69MG2u
                      vfK1Vz34eJ28E9ywPQ0Bvr3ApMO902bKPVbRPz303sK8N8W6veYWHz1Y/Hc82PFZvJBmtr1gM487
                      egLAvQ08oT1DoZK9DL+nvLuGjb2o7vq8bo2rvTadkL3pGMg9PxzBvdDMmTuED+k8YP6FPCJtFT2Y
                      cQ085rw1PTihw7zP6Zk9EIlYvDvyhj3gHK47IamGPQI7TD0gP8G7Y8a/vYe0H739eba9y2CDPW0s
                      bb3wBEM802e5PZ3AqL3gKhG95hILPdrVCD1+sVQ9BCfkPA3Cqr29uCK9ivQYvQAbYTqwHyC94OWv
                      O2ihlrxeIwA9KhZ6PWrOEL36wmy9b+G6vdjPsDzKzlI9Bdy5PdeKvT3QFdk7APADuM1brz24EJO9
                      9swhPbrQcL06RIi9kP5gvRisHjwAm2K9o+S+PR7SNj3qcgQ9T3fIvaQN3DykPv480OJ8vCi4yjxI
                      T9S8APuhvXAJPb1dNGC9oN3MvPuXsD1s5RG9WgmsvT1hXr2booY9+huuvS2Rf71pL7k9LjGHvYcJ
                      X72h0IM9EgkwPRe9Xb1gsxe9PZDHPdgtzL1UqgC9jz2zPTkqwD0mUxs9SOSUPFr9gr3IkuC8+MXI
                      PODQv71k5uI8xhwhPfzn2zxT6j+9yvxmvb/Sx71AVnS9jv2TvWjjCbxATya88khHPV6cYz3LxJM9
                      LaiBvWqbAb32CZC9bYiQvQCwP7zZII09NVCnPSPvrj09340996Z8vSxW7LygIYU8u6+nPSDBnjtU
                      DoM8AM/pu8o1qr0o9JC8lmMXvQIsMz1p/o49z1XMPcckQb2jzru9sPUuvA/IpD1ylWs9faSGPVG5
                      mj2b9cs9kHZQveBEtjzSGMu9yKSlvdimSTwAOLm8LiSbvWcfG72Mfoq9vopMPbrIjb1aNWO9Mjeg
                      vTmlpj26Qhg999kwvbqFmb3+f2A9SmMTvUDYUTxQA3+8XgKMvW1Wh71Ormg9nRorvbnnpT0prpo9
                      IXWlPTaJCL2SoRY9dMCQPM/Qnj131zu94HKwvKiOMDyiKHM9SmUgPRQ+hjwR14Q9+r82PTUkkj3a
                      h229c7N0vdUavL2/PbU94gt/PRSPzbwWgHg9oGqVPN1Cxj3JsoM9HnCdvZCeD72QZSK8clEYPZpC
                      sr3ef6K9TNH8PHDUJb0zHF+9/qxmPUDvb70ZS749QvpiPU2dr73AF8E8OPOXvG01Sr3mSAs9Jfeo
                      PYAtvLyMg6y8IHDevPR65zxK21C9Lm9mPSzTsbxuTAw9daKsvdojZD15sZg91xTFvaKNKT1SAo29
                      wd2ZPZ0vtj33ti29sUu6PQY5dj1MfJI8wAEdvSbrQT0fprY9wBSeurKqJz04drk8co86PeV4mr3r
                      d6K9gDKTvBAFL72Klre9wG5aO7T8ljzAglu7gBHlvO5EHz2W8Ck9+Bz4vLDqGr3CnCw9HPzWPEiB
                      sbzonMG90JxgPEjOpb0zYLC92thaPZ3vlz3gKOK7b46wvbs5jj0szpM870XEPQ/ZuD0owbq8x2FZ
                      vaKHjb0luIa94EiwPEPXqb2wzci9HHuCvWLbLT0lwrG9rXYdvaCVwTwQqF08pcqLPekTjT0nxqg9
                      2MA7vCAqkzxCw2w94KC7u5JXaD3wKqi9ckF5PWM3Wr2AxoY6/7afPZOGHr1HVqE92PTFvWPGjb2M
                      +tK8gpUtPf5FDD2zika9ID66PBDdULw79LO94AGYu5D6TryTxcm9c6TDvbjJ/rz5aIA92rFXPb1E
                      pj1gPZg84+HBPSh6wDwBW7s9VlJoPcDAE70UzYi9Y0ujvboHUL2A3kk8vUgqvcDgeDv2zp+96LhE
                      vCCchzyq6w09UvsnPa2Fir0i6mU9LiEaPa6ZED3NLom9YAIEvViFGLywTEm9ZdyovYIeQj2EoBS9
                      FAO2PBlBpz3OyUs9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI3MzkyMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExNzI3MzkyMHEBYS5kAAAAAAAAADFvwj1bgpW9T1W0PfKWIz1Jsq89CBi5vX7BGD1GHIC9
                      mYCOPcNoyb2wN3C8aGRHPCChqDsAOKK7vi6evTeJxz2A9hA8eid8vQg8orzRQpU9snNkPYCaarrR
                      o8Y9AF23uaVju715dqk9daaLvWiSTDyYjFa8CWWWPRWkwz2AFvs6Q3KOPUk3xz0iHCQ9a2OQPUrl
                      Bz2Fw669A0mdPeJjEj0AawK8noFdPUX0vj10Mtm8gOVtugCt2ruh7LE9ZGDPPHLCxr2KL0a9OsWg
                      vSX5jr1dbqK9DS9uvb+smz341YC8syF7vVAV6zt4v5K83mEyPXJvKj1EIwy90GzHO7cIy70qIxa9
                      MOa7u0AjZDvjtWy99rZKPQAceb0U5JE8KsEVPYEhnT3dZZI9xrdDPXCCF7xmkQc9buCmvdbECD1A
                      cjq8dGb5PHYMLT1KRaq9wuQGPU8uyL2i3KW9pI3QPPNQkD22WKy93sFZPUk6gT1AKXG9WlM5PYPW
                      iz3VoL89i6mWvbQxkzxxs8w9ILEtvYruTL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI3NDAwMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExNzI3NDAwMHEBYS5kAAAAAAAAAJmskD0hjI89dupfPbvqvL3YHyu8+EOTPOKiID3TIGK9
                      pmEJPaowWD1gJDe7N+TCPbCtu7ubOag94juIvSzMnrwtEqK9CM6EPEltzD3QSRE8UTORPSCxv72S
                      pYu9wmttPaAKpLvkMuc8ZMLzPN7qhb1hJq09Gj/IvT1wpD2aqDE9OJTtvAuKw70Y25I8DusvPdmv
                      hT1P0si9kwVmvRWNyj1lJZ29tMncvPIMXz1Koxg9+BfLvEomiL3Hu129mSSKPaXeu70Xqa+9ZpF/
                      PTHKvj3hZ5o9bbZCvcqurL0s64e9rns0PXCWAb1JFbM9GF+Dvb7vkL13Xlq9+riZvYhGvr2+M1k9
                      G9OgPZG9jT1Y1cS9KV+XPT6hTT1w5U69q/GfPeoDAT21C7o9P9eKPe03aL2/bIY9XjUzPQAo8jmF
                      wbQ9gA/8vOfUZr3wsba9No0zPTR++LwgZqO8yggXvXLVaT3Awn88+rtevdeNIL0zf4w9JY67PV5H
                      qr2YP2+8M78ZvWD9mjxkeP48EmcnPUmWjj0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzExNzI3NDA4MHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzExNzI3NDA4MHEBYS4BAAAAAAAAAAZgeT0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        kx9iIXqh9SVv9fEjb/XxIwp+hyBkkoAiBB3QIQQd0CHa0Y8fzgqyI6fa5yOn2ucj2tGPH84KsiOn
        2ucjp9rnI4TxwiK9yEUla73VI2u91SOIIzshPggtI2z83CNs/NwjrDidIS5XqSPEcqojxHKqI6w4
        nSEuV6kjxHKqI8RyqiOy79UhKeq6I9S8SiTUvEokEbKbI4sV5yPGmj0mxpo9JlRSFyJazTUlxO4j
        I8TuIyNUUhciWs01JcTuIyPE7iMjsu/VISnquiPUvEok1LxKJBGymyOLFecjxpo9JsaaPSZUUhci
        Ws01JcTuIyPE7iMjVFIXIlrNNSXE7iMjxO4jIwtB2DxlFEc42RlKOtkZSjoPdLQ9myq+O/T3ajz0
        92o8OwGqPsZTiTqs6FI6rOhSOjsBqj7GU4k6rOhSOqzoUjqt13o7Xz33OHzIZDp8yGQ65aYCPa9N
        DTsJSF06CUhdOnWDmzxGYpA6DnKPOg5yjzp1g5s8RmKQOg5yjzoOco86upJkPP/OgjrsMvE57DLx
        OZwJnTqTnFM67PMAOOzzADilkyE8tHwGOZolFTuaJRU7pZMhPLR8BjmaJRU7miUVO7qSZDz/zoI6
        7DLxOewy8TmcCZ06k5xTOuzzADjs8wA4pZMhPLR8BjmaJRU7miUVO6WTITy0fAY5miUVO5olFTs=
