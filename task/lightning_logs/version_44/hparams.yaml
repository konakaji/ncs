N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDEyOHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM0NDM1MDQxMjhxAWEuhAMAAAAAAABdWoo+AauOPvDWjD0erHm+8G8dPi8Uh77+0is+vuBq
                      PmBvjL6L4zy+nHqtPTG8pT5PQaA+AweoPjnYjD4oh4i+Ih4wPiNInL5jv5Q+rISnvjNwNL4cErg9
                      aNMbPj9pob5SKmo+9bKFPsyh6z16r3A+qKQ7vjAGvD3ke6S9FsEyPsiHir4gkCK84KwHPEfEkD5b
                      0U2+aIkpPhwP0b3uYJa+VN2JvUD27rwW5YK+7T2IPv2EpT4rUWO+rA6zvcCo2TvIj2Y9HIGVvdPL
                      Sb6+Jhm+AKTruUzMlb6glcw9xjL6vYBVMbyyaho+YN1zPXKMgb5IL3a+6UCiPvAyDL7CDVA+Zsxd
                      PiU/jz6gads9Lm6qvjxxtr3J6IA+FLrlPQZ6QL4Ug6E9Vp/9vWpljb41O4k+dBiDvif0qL6g5KW9
                      6U+cPvoIiL4OwXc+ZjwjvkrfGj7cMfQ9UOEkvtd0kT7Ahu67+L+LvrAyKb6ti48+oJkXPmhiTL72
                      RHu+iu8rPpiLFj5QG9c9sKPUPGMNP75mkRC+GF8lPjA0nLzODD4+mJhTPX0hiT6Aj0i+0hpDPjSA
                      pT2YnEs9nBDIPY7oBr7aHKG+UkkDPmI2NT7giBM8Vu4CvhqMjr7gkv69Jna8vYDtfjuugxU+cMSO
                      PYVrqj5AhH2+G9dmvktJX74Q+a88bnwSPibLgr7g0jg93Ee6vRA6nL5HKYM+xJ3cPeZy5b0U0eQ9
                      O94ivtabdL6AkSA9kFwhvjJqm74S5zc+YCbyPfAbyjxbBGC+sAmavYB5sL1tkJE+OceiPoYzxr3C
                      Ols+8qVfPkzYgb2AWjs8a6WYvkDenb2099k9AzNyvpC/gDzofyu+MPKDPe5VOT5i2ig+iaOfPi53
                      Pb46cWw+LDyYvdrAkr7jjze+APOTvlcVjz6I9jK9GrJaPnMDoT6g8Ee9Xc2DPjwMwD0F0Kc+UlwV
                      PhDr0j2M7eW9NweYPi2/lj5Wu6+9obujPkZnR77AeHC9QhdWPuBzI7x6o18+VMG8PTH2iz7YE3w9
                      gBmRvEuXX74wYPg9+eaQPnmnjz5oVB49gMhDPDAC4TwgAj69ARedPhS3jr6Grnw+YJNwvOCaTL5A
                      DGi9EnRDPmt/pL7bx5c+HBLSPcDDXT0IpwO+q4ikPuM3Yr4AomA74MS6PZrxST6TuIC++NARvQB/
                      lb0izRg+pCWjPZIFaj68nfG9oCNpPQZngL6q01E+MHGmviqMbD7HToa+gFeqvUDunr4m1UW+ZnJ/
                      PqRuzz0W4Qe+NXWmPlJAh76iSQc+aghKPkryNj5qFzU+ZiV3PnQAyj1AGY++iIspvW4ON75QjJu9
                      fA6+PZqIez6W/7G9sw5+vouSij5gt809yDFxvjaYFD6JBJY+c50Ovu2+oz6mYDW+05pBvvEphj4i
                      M6K+GlN8Pqo/Tj4MiLy9s8mJPiAix71Jvp8+Tr+lvgPMOL6qVj0+5hX6vW6iID6wZB4+aJMyvWzB
                      nr4iZXA+KXekPvf6jr4soY89ANCGOKOgoT4xL4o+oMAxvrOkij4OpzE+BZ2RPuzjxL0Y0wm9a5Sh
                      PgjTnb7bJBe+wh6RvrBRIb55E5k+hn4fPjDo/DzJq4E+NiaavsgAcj2suPA9nHbkvaYRD75U9pq9
                      k9VbvrDm+zzibpi+mBUOvhCRib6wFhw+a5adPhJeRz7qqQQ+4FfPPXPETb6jo4g+1IbsPSB1Mj0y
                      h5C+ruxIPoDjJb7WjUU+xjWhvuC3YLyqfA8+WgpXPlYuUj6puoU+cE4yvoZ1Er7Y7yg+6LcSvbDA
                      Gz4ZToA+cN/PPT35hz795IM+mNQqPQaE6b2rIIi+eDIiPhfSlr6BhKo+q2KCPpTuhr3A41W+veKc
                      PsAx6bvHW4e+3BSlven4pT6WSHi+CzKNvqd8g74Ls54+g0Etvmv/V74tDKk+uRqnPkCxvz3+RZy+
                      VwSnPpZ3Kz6Iv2q+ADxXOyRn5T3I3iU9y4V5vsA4Fj0vFIi+gHgivOtBLL70xpc9r6yCvhCaI75g
                      CpK+a5eEPvGOgD6DbpQ+gBsQO54ao77rwmK+ZXmmPpTSpr1iZzU+qDaYvhNCR74G7CO+qLFbPUv/
                      S768aKS99qYxvoCBSb1LD2y+AA8zPN7/Gr7eDme+/GCXvjikD75691Q+WmBVPtj4Hr2aKTw+3nQU
                      vsAy5jygOEO8JzuNvsCOKD2opD29QFu1vO6iXb6QiAY+y5tVvriwYb6zFEm+QC+auwy78r2WR5e+
                      hFWgPUstBL6MlJ++FPiZvvAlyj2XpJE+OH9CPQhrLD1wu6i+/LWkvuByLjygf1U8YGo8veKDbT7U
                      NpS+7PzaPSafJD5/74G+JPrqPap4Cj4MOJa9kLDtPAbXFj6g5gm8hhd8vogVbr4AQu68PHqhvaFT
                      lj6jlC++U0FxvjGAgz5qEKK+IlUEPp1whD7w5Oe8e7pjvgiBL74Zg5g+WlRGPpmTlz6AcAU+MFLO
                      PIA3lT3so4w9AA/pO7BKnb4QHAs+ID4QvWCyT77dO4Y+DlaOvlLDfj6MWYi+oEYVPLB+k70+7wY+
                      luvyvXt0lD7I4hS9wIzzvAGAkD4AJDK7WlBcPibDh74ufyS+fziYPqZQXL7QqxS+ff6WPpwrnb0o
                      HyU963tXvk78Kz4SfT8+Xm6eviIpcT5pa40+ZpFxvgzqir2yMkM+6qBgPqZnTr7jdoK+Q3k4vt2y
                      nT4f4Iu+XAW+PRqNQD5IowM+VK/xPaBGOL3aDXw+A45QvnK7TT6WYJy+ShdmPsCaCL2jDFy+f0Kn
                      PhPQCL53YaA+C/8Lvvhlb71myv29OxiGPvOAkz5vPaW+DkNKvqdJkj6gqBW9ov0uPrvfG75wlac8
                      TvuovtA47r0v86C+LSWUPkalKT6py4E+thR2vlBEurytZYo+YIQZvbhWTL4A3bo7VQSPPv7YVD7g
                      NHO+9GCAvajHED4kz989ID78vWgXBL0W60Y+cA4xvkEWjT4cvJq90JqRPDuPQr5AynO+7q6PvhBW
                      vL0gfJW+rPOpvoqXaj7YAiw9MhEOPqzi+b0ojTy96MB6vXC2y7xIZGs9bn4TvuB0Kb7RkYE+gMY4
                      PTj4L70ecKq+xIqovWbOWL6gi/i9pmplPqpvZj5Ljna+ymilvrNkC76msKG+10eavqDdzb0QgIc9
                      zuELvviuAT2mHoW+wFNIPbljkT6b0hy+jsEtPi2DjD7AbbS8vi0evrLvj76Luoe+GSGfPgA6dLpS
                      qms+3pUmPpjzob4QxLm8cT2FPrYBDT4MHbY9tBe+PQCSnD3m83i+PtBePv59AL5dOJQ+1LSSvhTb
                      lz2cp5o9gA9mPA89hT6wcqk97tgxPtRNuj0uO0k+bGzDPVNrpD4jCaC++slNPtDffr6w4Va+pq+Y
                      vhhEO74Py4w+mVqUPo9hkD5g0rw9XoqUviuVC74hb4I+ePgjva3QoT6zP0m+kKefvBqCnL72V6O+
                      NBTaPWhhGz3OQzc+mC0Kvpb8Yj4bW4A+rD37PViMDT4K8Xw+sGeGPdppWz4oPz89ADptuptBiL6c
                      TaK+UIypPKzO+73r0X2+H9uUPkiUdT0bDhi+e3yNvgBzpL2VVaY+q3uXvkp2Wz7Ay9k7U4WFPiDZ
                      yz0zp4g+ABHRuswM372o1Qq+INhhvLFrkj66vGs+So+kvqnymT49QqA+oD8rPD4PKz5b/o4+4mpI
                      Pgj/Sj1U9Zq+AIuEurwVrj3z6p4+aBoVPouKj76Ul4O9UF+bPRgoD77Dg4q+SIRcvuaWib5ylR4+
                      XokJvgY5Tj6+l2a+/E+8vY5qNr5wY12+/BP6vahQUb22L/W9f/ydvnqUOz7acIC+A6mQPoZkEL5u
                      epa+6fqBPvgOX70LZD6+OwajPmCwBDxQAs89Cc6NPsGepT4MDZ2+XgZEPoiVFT7ZioM+M++BPpsi
                      Rb4w1sU9AIQRPKxI/r2+MGE+QmZ7PraJXr582O29ToQePt6Wir7gl3e9+1k1vsOALL4gJHG984p1
                      vtxwur0aliA+yBgsvnjtID0Txo8+sFukPZLDXj7QArU83wyAPsBiCr7M/6M9orpLPhwmkD0bwqg+
                      MBLRvSCVaj0e52S+YFkpvXsYiD76FD4+zDLDPZKpUT5Oll++1ImJPehNU73wJ7W9KJI/PTZjHz4Q
                      suI8V4WdvuAXPr0UgK89yvBRPmYikL7sLfE9RjR8vljaI74AvTe+cC35PRvdi740f7c9NiVBPsyC
                      hL4Q/Zg9bNS9vTYfkL4+FHy+YlgBPsCSpz3sKaK+gOa0vZBYjL28J6c9JfSfPi7zmb4Qr8e9IJdl
                      vQKFLD6STXY+0rREPnqpQT6W5lK+DJ+pvrA4NL7XVZU+wOUXvjnfkz5CnxE+CrMfPtjACT7gwvM9
                      Vt9ePm5qIr4IA5G+YNWIPS+xoL5K8Bg+o3+QPmrrBD7Q6Y2+bs0bPg5GU77GBGK+SLcZvUappr7g
                      ORS8IKtEvhhuWL7p3Jk+aA0ePnZzPL6Px4K+uemAPgAbo76rI4o+T5qdPvDnhbxs3Pi9PKrJPVB0
                      1DzPGKi+wMFCPTOupT7mlTs+UIKAvmjSab3gdoy+YtkCPpiJK713v6G++q8gPolJqD4glik8wK1p
                      vlA/kb4ekqq+bJeTvUJCcz7YQUe9FB+Xvd5xLj4TS1a+MNv7vSdBgL6FKqI+n6WkvgA2wbu4n3++
                      7RKEPkBRQb1myGA+sPvGPegKUr3iV2I+/k9nvqjyKr2mGVu+ALlzvl1hoj5QBgA+yjF7PiCdtj0A
                      lvE8Pr0MvtDO+D3gJWm+xMWUPaQSxD1nH5e+5hVaPgDTyDs=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDIwOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQ0MzUwNDIwOHEBYS5kAAAAAAAAADplIT7YzBe+BqcJPnjXPT2PeJo+wp00PofbiD4ciYW+
                      sK2jvgNhWr7Fb5M+5BCIvvNmGb7KwCg+cmSCvtS8zD0A0da7IKkUPnbRLL4rDwq+kO8gPqbCXL5Y
                      RTC9Q3wRvoyVn70a0QU+pmVvPleFkT78O9u9sMWRPMI0dD5ETJI9cv8SPucOiD4+V32+THy1vSC4
                      Bj0FPZo+AfSoPvM+IL4Q+ey8TrUYvrKUqr5gmLC9WqhdPihzG75wsQK+4HKMPaKwZT5nyoO+eSak
                      PhaGPT5oagY+6PonPTjqBr7KoEY+O2iDvjjFET3Jq5o+2px9PrvxXb7e+UQ+wD6cPaQc7j3v0oq+
                      6GEgPqYHrb3cyq895cekPvssiz5zjTu+cNItvgDdST2EUe49BTOZPp3nlT6Qk9o90IO4PPSY5T2g
                      0WE8yKYxPSMoqb5UatY9M/5VvjzQlz2+HyM+fBSIPUDqQ70uLhm+qoQvPoVaqD64dw2+kYONPqm5
                      jD5onYm+wMDePC/JmT5TLjG+1jP1vZKYWD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDI4OHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM0NDM1MDQyODhxAWEuECcAAAAAAAAPoL69AJJrvCAWM71mFgO9KC54vDaXWj1Skjc9YGbO
                      uypKCr2ieC89KFcvvAKOTD0H6Z096qJXPbD5wru6NT09sOKFvVPXdb3S1Wk9yiAuPQBEkrtLNLa9
                      MKMjvRihijwwJf8713K6vaHuoD1R2pE9bRFTvb4UHj3YW6Y8ys+Rva0Jmb2gkQk7FhgWPVlkmz2X
                      VDK9KICoPACDSbwGRBg9tK8NvTtHqD34lJO9tJ/JvNCds73RWL09miC+vWqUHz2Apny9MCvQO1Da
                      bbyQhWO8sEBFPF6FLT0DDiG9zsw5PQojbb38Y+c8oqkgPQi9srz10og9PIfQPAu1mz0lNbo9Y9m5
                      vRi+zrw1k4I91tRvPb3ztL1qtLK9yzq0PYXSqT2WsxA9rGeTvGR87TwKHwG9wLAyOxkuwT12BnA9
                      72GVPbJJPj2KYTc9I2dXvTwRAb34NeW8Am9jPYlysT06IES9sDlEPGh2ArwLQps9a5y/vYNFJL1A
                      DMC8o25+vS7OCD0AnmK9SJ+NvayMhDx65Fs92bqXPUpXSz2AEj280vAUPepFMD3g6sq7ug96PZ3Q
                      oD0AjLA7jloRPa6OIT2fq4c9VLuNPIBKpLoA3sg83Wm1vVj8ODwjQJc9p7xnvb2TJ736zam9c8NK
                      vbtDkT3iLnc9CvlxPbFFtj2O12c9Ck+8vbQwz7ygtGm9WF0+PLBqlzvAS+a8UHBCvRZQQz2JKYc9
                      AonDvSy6mTzK9Fc9DeGqvXO4Lb1gxcy7rImrPLQFpDzoOmC8vfKDvcDABDvCGFU9IOfyO9VQs72A
                      PIu9N8OoPSAcKr2MZrO8y4KoPfjpnb0oeh28xeazveDCKr2LGsm97BUDvUB4ojxg5G69xgievVk0
                      uz1oEVy8En5APfCtwr3W+AY9PDjoPKCaEbvaZVS9cFIPvADUEzoWS569OGe8vVRWBb1d5IS9EZ3J
                      Pch3rr2MH7g8MGq9vXTYFb07krY9trk0PRfTYL1KWyk9KTLFPXCJIjxoOKa94JyvvBthw73gkqC9
                      MweQvaQ47zzoZIq9Gw7LPYA2kr38OPU85xbFPUANp7w8iwi9zzXJvdeojT2EGYq968O+Pfxh4zza
                      ED299HfAPDObnL2QtS+9qoMNPdZgJT3omLM85JnbPAB36ryo1Ts8rAycPFdqJL0CgDs9aLMVPDTV
                      6bxCKxc94isMPSODVL2A7rk8LX+UvfLKOj0D3LE9ouC5vVqkOz0NvnW94hi2vYwbpLw0zs886iAM
                      vbh4xDxi6F49oM83vRTAorxyHyo9nT+IPZh/njwdOWG9BiEwPQpgm71wSVK9B7SePTdjRL00vIm9
                      83yQvfDMPbwguKe7wA9bO2bldT2a+ga9SgoGPRjJHrwC5zg9WLTvvDVJuz2RQMc9X4qhPaxAxzyg
                      ypC7ANrvOQ2dqb3d1Tq92JKqvMyztbxaV7q9rr5EPdTlpzxAOxa8YLU3ve6KMj1AEWS7k5xyvcw4
                      27xjXYc9wDBlvOcOwz3gt9E7iho8vUXMyr1XF4U9sBZUPK1zur0YQZs8n1+4PXbmi72iFRg9VPSJ
                      PBZwBL0dICy92jYLPTOksT0SPrq9+fO9PUMil70gWKi71JjVPFAKIrz9Ryi9Qq4PPYDRybuA0aK8
                      YK4JvcjHrTxEFN48wPbrOqDOebv9XCa9C3G5PadLP72YDlG8oPvCO6UZqr2y1SU97uhoPSAxyruD
                      3MC9MIUuPHkQxj3Mqew8YicxPc2Sx72AuZg643a6PZMqxr21xaw9PX+yPWA0ITuXVxy9UPNPvALA
                      q71ojZK8MJOJu7Xwlb21a8m9FZGdvRnErj1qzqq97YlvvYzHt7z306Y9BtMlPcI4pL2facU9TfCh
                      PYIUAz1vs6s9CigUvdCTJjzoESG8+shOPV16uL2D98g9VMirvB4wrL1RA8c9CpB1vWpVM73Qf6m7
                      miqhvdjKvLw9aY+9wLm1vNWQlD2boaS9JiQGvS0ySb1q61u9RTODPdI4q70gBx29UKPhu0CkbTxZ
                      CJg9ZTmovbPYuj1YaQg8+/vCPenkxz0qe2e9Nz+NPTDXoTsNR7s9VDfEvIP8Sb15xr49qE9LvADq
                      1rp5k6I9gMWOOwYair3uGTQ9vRUwvb6kUD1t37E9un4/PfoVpL3i7Y69ilSlvcBsWjzp/sI9UtRC
                      Pdl2pT0gjvW7OrG2vVHRvD1Q/KU7ZLbTPKS+5zzwPye8FfalPfcolj1YrL28IhUcPdhHsLzGTkU9
                      0Hvju8lVuj2CGlw9YPv0u6OEGr359rM9gqQEPVjFeDydCIo91LnqPG4+ZT0371i9QDQOO7A1ZTxj
                      3bW9VemHPXXgtz3KAlU9qCKMvEAcjjz0U/m8yNSyvcNrsj1MZpa8iG2AvQnaoT3gWeI76l84vaCi
                      uLySc1Q9g3hpvWrDm719VqM9TR9pvSDDSL1o1se9xdy+PaIqRz2CWDg9QM9Iu7I2eT3E3/Y8PR6K
                      PUEExj1zHia9WnQpPR5pCD1eRSQ9zHeCvVPqrb0gsrE7zTBVvTL3JT2khoe9gMwQvWGdxT3w1Ka9
                      zKL8vHjHtTxNTlm93sUkPe00lr2vCbQ9lpSkvSPDJr3oPMO8UCVCPKBGzLyvgJ09f1q7PTtJwj1i
                      xrO9YJ9auwL+Ez3ppLk9aB8wPGAPtr1vWr29cCUdvOxmgL0OgGw9aIMaPHX/ob1S3oO9jtMRPWcy
                      Zb1NmFO94wkjvVBbxDuAIVO8ggYiPWMwn73tQJS9tAHGPMuVnD1kT988p5DDPVDfHzyVPcu9Fp5/
                      PfRh+7wXXii94KG0vclEtz2KoB+9Rw7DvZDparyu3ns9u3G+vbQZqLzyLh09lSWdPfJfyr3DfWu9
                      UxeevQDcJzyiGi49MghMPWaJhb2wbsY7PKHaPFCrYzyT2LM9MIZbPKaEZz30RMa8QFnKPFXtmr0/
                      4Js9Co4ovYwmhL2A/0O9vlQnPUf6Vr0Q9Cy9lTmvPfvBjz2DujS9A0tDvYUolz1B6Kk98xiWvfCf
                      TDyjMLO9Ra2cPdLtnr2jXps9aFppvLVhob1Bk4U9ALSZvRefgj1In7u8MCEmvNA9Abyv+8W9ItEx
                      PQAO+jrAFHo7lPK4POA47bsAKja8hteXvWJkm73Aw0K7F30xvUBA8rwPU4U9BdmRveizEDyCnsu9
                      Q3vMPVFFvj2Nlhu9UERBPLXinb2sNKI8CkgjvRlSnj001t08AM5SvKJLej1jX8o9zAmRvMJOYz2q
                      NgC9wHxjPKmXkz3iZR493u1zPX/HxT1diFe9gXeTPaDLz7wtrLo9Mn0bPVf5hT2Achm6W42UPWKX
                      or06sVG9aze4vbppKT38XNg8MceTPdQagrxqmha9omFWPZQMn7zIk5a9shFOPbpeVD235rC9pVyT
                      PScpbr1IYvC8YMQAvVjUlLx4oJu9SOGyvOsokz294DW9VJ+CvcAmeDy0TJW8oLHmO3zF5TyAsuC8
                      OHeDPCC/nDxqIwu9AYa/PdiGgTyAZly6cC66vRSV+DynD5g90fPFPUXqqT3CiVM9O8rDvfbQWT1s
                      brK8YaeRPRCBZrwlZZ49xjurvTo6Tz3E2Am9g9XJvVjACrygdtM7MJgTvIpGM73SmBE9gmrJvfHO
                      yD1DflG9YOKfO/qNcD1eop29bI7xPMFOoj2IOrw8PTlgvSA7bL1gZVK7QJM+O8VyxT0mIjY9IdaX
                      PddLw71waXM8wJzfupxaEL1gbSK9UBfgOz2Jur1i6no9gDiFvbg6sDwwPRu8fbHLPXJfWj36Ap+9
                      lFO9PHNuPb2p+6Q9oHA4u7hMuL1pyoc9zNClvIY6XD2jTC69CtQ3vT2ywr1SRGk9Lv87PQrhGr3+
                      QkE9VO/3PMR5Fb3zrZQ9SaOWPeDB37vydFw9JuZXPYo+cT3xDr891b6evcGosT3M+Zc8oKFvvWA4
                      ujuAN6Y799ZXvSjpV7yFybu9TfWRPTiaj7z9aMS9dylVvWajkL2wOza9tHaEPCljpD0zsK+9MMP+
                      u5uvhT2gRZy9bnEEPV1Ylb1q51Y9mATSvLI5fz1ABxS8fp+OvYFXpD2A1tQ78BoWvKDpJTsiBJ69
                      OSaiPUz13DyhtI89RkMgPTZrLD3aype9gLmxvOf9Xr2F56A9aPxgvFDZ8Tvmm2Q9OimCvUKNCD2A
                      nSQ8aptsPcKwVj2gMhS7YvG8vRUwoj1CIAA90NSGvYCMjzwQaRU8kJhmPITX8DyWNAu9p2WbPdC6
                      Ab23oGy9xilDPTNZTb10t9c8QAQtu6sttD3yEHg9B5pqve0NmT2zUZu9shcaPUdtpj1qHEI9Yuiu
                      vVG4kj3sK8I8ylhIPaDg57xsNKm8stsAPUB4HbwfjKw9CqYnPb3Lnb3yrRM9eJG+vDCy2jugiQy9
                      B02RPSBN2rtmDA09WLZyvIVFrb0lXJi90Di7Ox53ET0U+qm84CZDvUDLCbtovQQ8sIt5PLC8hbsk
                      L9Q8HrF1PUDqBzun6Cm92FyFPFAPvL3t06e9o53HvTAGV7zdfY+9PUuEvXdBLr1qi1i9ISGLPWg7
                      VTw+AhQ99NDmPNaGUz0O1V49wG3tvJNIPL1K9S29QGu3OocBmT2YnMC9SDGRvHDkVzytDYq9agyn
                      veC1fL0Of2U99XOsPZCPkL2U15W8qgRHvdtGv70V8IA9ccOtPaTW4zwStiY9VOjFPCl1oD2zrLO9
                      MpsePThL0Lz2xUY9mNlEvIAivbtQTI879PbrvE5Gg70D3sU9xY6LvaSuAb2qhgG9uiYOvez3qjxa
                      opG9QKzavNjbi736wnQ9GMCtvHqecL2U4uy8zJX/vAyi0Dxn3mG9wIifOjVCiL2r/p091KqZvIIN
                      ej3QfNg7YHf3vPI7ST0YdjE8RnmivY4xj731z4C95gcrPQCRo72TPZs9BXykPRhaxb3aRjq9ams/
                      PUfjOL36SYe95QyrvQzF8LxKPmU9Qg56PW7wOj1yaK+9N9kjvUpXGr1G1Jm9VvuZvSzYmDwgDNS8
                      FRuFPYgDkDwUj4+8Vu8HPWP3U73qbgI9gTa+PcPWpT3Alok6MCLPu5qKeL0aoSY9qKK1vFRWgbxg
                      zIY7EF0ovBdOX714+/y88b6GPRahWz0msD897fvCPW/Vx71mTJq9BvyBvVR60rxQdjC9bOydvKPL
                      sD2i2hs9QDgbvNmktT2rk6C9rSSnvfHagT0CrAw9YCygPJAUUzzozLO8ybSLPbjWnTwZAqQ9Y+kf
                      vd+3qD0gn4K9vLnwPCTE4DyVlMy9U/iyPYQO7DzMUOs8irmpvV+yxb0Q4EM8fcyIPbBrj7uefy49
                      iDqevbc9tT3AC4U8sGNwvD4TCz0AwAi3fGnkPBAmL70APvk6w/OCPciVt70z4XW9rX8mvZcvzD1Z
                      n7c9Gs55PdxDzTyshN68EtcfPXcWkD2WIHw9tpFuPVBwN7z9Ria9Ir8EPZVhpT0H1sc97bxbvezD
                      h7xHqcI9JX+0vcrYe734FYO9ZG7pPFCC4zseBZe9jidrPaAa+LwFk7E9J+eePdBVILyhZoc9tPDz
                      vPgAgr3bVKi9/K6CvbDCf7xSlWI9jGmyPLpejr14p5G9Vzy/PVlKkj38DOE8XrKNvcICAD1MiMo8
                      MI6QO+b0ej1Y3GC88zWkvVgCi725RYQ9jiCrvWE/nj0AY3k8jIXevOIxr70BvZc9g1W+vQCOur0H
                      KDG9bfTAvcYmfD3F18g9z4KAPUrYWT3e1UI9LOypPKAZmrw6SVw9mNo8PHaklr14hrc8x/zCvXC9
                      Xr0+rkQ9sIXGOzdmrr3rdLY9AOQMO8tGxj3ayQe9BCrzPH3lUr2o3BW84IOAvTqacD1bBaw93h6M
                      vc5eJT0Vr6i9Vy3DvaYzHT2sTLY8VCPJvHlWqz0ifFs9Om2gvSAD+bwvdoI9W9e9vROGtD3ooR+8
                      VlljPfSkmryZb5o9fXqQvU6kn72qHCk9Bk5bParzbb2uoKy9zGsHvWjqzrwhj5s9GD+mvej3L7zI
                      nY289/odvZMOvj0ltrm9ua6iPQnRsD0AGC26QIFhvYEuuz1b37O9pXO2PSKfhL33sa69kDd7PMRI
                      6TxssIU8PbV6vSAdab2ay4i9NmmIvQrGOL1Igq69V1WfPRAVYr3+uUY9mIEXPFhcpzxn1IE9dPPR
                      PJKzfT0tgnW9MvqnvX3No73XdIM90OySvdi4b7zuK6i9tQzIPZEcyj2ArUK9YCe1O5fBKb1QTTs8
                      ZHgIvWoQQL2RHsE9YL1SvQGhrj3yKiA9AK7hu+aXUj3QerS9K9KgvXLLPz2YFnM8Tteave4TjL2A
                      q9q60F6/O9GkuD1wZAu9QOstvK9hhz36dpm9U5e+PR6jh71S2TI9BQaavRKapb1gTOS8loVGPZLz
                      KT0gRsc8h7qwPR1Hjj201+G8vSssvWUwxr3QiNI7rVhxvQP+s73ATGW8c5VZvRzd0zxTUJq94BKc
                      O8yelzwgi6Q7SHy6PFJBUz3l6Ii9z5m5vVDbS71SOSI9soV3PcCqNbvopEw81DwHvW9Rqj0PEI09
                      KJdPvKllmD1C3DM94A/KvGVxhL0YQPG8KFpHPLTS7LzTTLe9APKxuaMdtz1NZYs9QDlyO88gwz3A
                      WoO8Z8ofvTo5Ib0M64q94C4fvTKYCj3UaoI8C7ilPVieQjywOFm9fV2bPeC3Rb1QspK7gJ7mvOBW
                      yLtTsTe9j3nGvdLqUj1bH8K9nRG0veBhHb3AjFc8M7aAPc1za71SUQ89oJEevYg7s70mThs9J+tj
                      vcBZyrzabkI98PNUvefnIL3Dx5k9VEbqPJ1cnT1qY3c9yGivvBsOrz1sVrO8zTC3vUBVwbyh3L09
                      J6ibPQP+tb2w8ZC9DU5mvbeONL3x57I9HEqGvUocZD0oCrU8TnZePbVZgL3ox4M8tGPBPABpI7qG
                      Xjw9V4NIvUAgQjzoDXs8SF7LvLG3hD3iUEQ9b1aePR79iL1fZ7E97wWRPWY+Sj0w9Te9p2ZIvXkw
                      yj2FPsg9sg1sPfXwlz1w4mq8gN12vd3aUr1FmKw9WCfRvAAgz7f6WYu9dMe+PKLjJj0bpr890vx0
                      PfR/zjxgEoy9BF2LvQYGZT0meRc9kFkjvACCOLtUHBK9HnSJveUfkL0HLYk9uaGwPRg8oL0Opzw9
                      k51PvTAnbDyPfMi9kEFKPACM0rzzXj29D+iuPV4lpr0aMB09y2CRvQh9hzwI6/68wM43PFQM4bwn
                      60u91ALrvBBbBTxYYLW9YMa3OxdgPb2TIWS9wJoyu/e3O72SOEk9GEgVvF4Sg72AiL07iqcyvTtN
                      yz1Uw8c8GvZqveCVl7tyVxs9coZqPZ7jnr1m7wQ90NYZvdcTU70i0TM9apUPvUCqUDwjS5o9WNhY
                      PHMcK73QIGi8bIrNPCcpU70sYpA8PNmCvcJ1lb3u6ls9NjomPZkCnz0lCK89+htQvcKnn70Aav+7
                      ki0sPeBvsrwAP3I7wjcoPR5Ulr1wq2y96gJGvdiq1bzmXFE9mF1rPKzUibxoOqC9UBq3u2piE72Y
                      Qq29YkabvUf7rj34fqy8CqmGvWqcRD3xIKI9IGq6u67VAz2NJ6g9p64fvQDni739JcA9kQ6HPbIA
                      GD0HQp49RjAHveqIj73uG6u9v7DCveNINL2ocSQ8OISuPKn0gT2VI4Y9iSCnPd3+ab3Uu5W8KqOF
                      vdRwjrwryJS9wHcMPOdkzD0AKs05SZ7MPVhMF7yf2Mc9ADLhO0FRvD028Hs9G/CWPcPgRr0w26e9
                      SUKXPRpAEj1wRIO9YEWdvaKteD2YUzm8MuJBPc1XlL1xEcQ9sKeWOzjmnzzO3gg9xQq7PTjUxDzY
                      IVi8sCH9uwhXxzyu5A09gH/jvBzDB72/WZ49PlyQvQr5qb2COzQ9gMS2vXVxqL1V3Jo9YlZ3PTrq
                      Oz2Qz5y90F52vYohZj0Awe67zJC2vCXWgb2w2KU7VX6OPbdySr1txKy9zRStPVjfvrzAhg87Vcef
                      vQAYubvBvJY9QK0yu5DQcb1Lr7Y9mfW5PQxJu7xghzq7OjUCvb1or73oNaI8uNWlvLBmabwDsj69
                      JnImPa3Teb1axq690ZjJPcAkcDwlcIU9bU7EPZiC+7xAk9I6Ywu+vWB2IDtCmrG9xoEiPZMcP72A
                      DPG68EctvBN9oj0+x4u9TSaUPf75VT0rMoQ9KO+2vf+djz1wNXq9rlMhPTjW7rywppG9Z4+7PViQ
                      jb18p988/R6FvT3EgT3UIZ28wazCPYhInDzuIH89AL31vABcxb1FPJ69pcS7PSVkgr1Zz4o9Usm7
                      vX2vbr2MVOA8vI/mPP9Pwr15VpM94i0FPT58gr0EYtY8+kI4Pdvnkz3qvAU9MTS0PSnEhz1YxAW8
                      WcW1PX27Vr3vspA9YvVQPeptZb2L14+9UuY/PaDHwLz9dp09PIPgPBpqX70uIlg9JoybvRzN6Dyz
                      gUi9U03HveJLxb0TWVq9cshCPYHhjz39pFC9qMhqvCI8Bz1uMAk96sJSPSBtxTsAtFY8WaqjPW6m
                      Vj3wnxE86HHRvCKRwb20HPM8oj1APQBPxb27cLm9eEiAvaAp4LxUfaQ8xbinPTrfQD1rjMo9Ch1/
                      PXwl2zxiNbG9sWinPWv8hz1GHWY9662SvTqVD73qgV29bMeQvKPCZL2r6Ju9R4tmvUevvD0wykY8
                      zOHzPEXnuj3UQNM80lwDPdKJx70MX/a8VR+JPfcuvT34y5s8E25/vUzM7jxTfsI9uIy+vNMiL73J
                      gZA9x3yuvZS50jxP6769gIWivCopdb1QfZE7GdWTPQW3hz3SV2U9AK/BPOBh3btiCMO9GsJyvVB8
                      dTygNBu92sk8vWLPCj2ULeg8GklQPbVbjT0vcq49WEH4vMzk2zxD+o29kCAxvQKkGj32ZS89gam1
                      PZf4yT0WTQq9jMP6vDXzv72s0MG8ZhUuPYCRv7qwoYO9lPgUvdsoxT2t4jK9Ei1dPfawE73HI3y9
                      7afKPSbCCb3YAkK8IOy/PNfJeb0/rbS9jF6fvH8wtD1XDsy9e9qqPdxLg71xysA9pqAXvfrrIT2O
                      lCg96lu5vXDlcr2Dk2q9wKnLvYARsbuTHaa9k8mMPS/0oT26/V69e/GTPSj9XTxmC469rcu+PbZc
                      RT0ipH09/bbAvYAM/br1zra9cPQBvVRehrwGsDg9BpshPfR1pTzjJ2m90khDPZMGKL2hDoE9ZmyM
                      vcB5KDyfyK291woyvX4HWD0wJc07p802vUroNz2QJSO9lGXlvLZIWT3KNlg94ue4vW1QIr3ZPIE9
                      AneyvT5KfD2xaqw9F1tEvWWdyb19ksc9kKcCPO0XQL33qjO9iSOiPdGsnz3QGWe9GhMRPXAuSzyC
                      Ew096Ku+PHgSyzwo1pK9GFuTvQNnkj1IO7S9XYGnPbCgV7zQUZk7UuZ/PSSCDb3wBxW8M1i5PSjg
                      arzmTRU9qLeRvO7cnr0w+fC7lh2MvYzauDztFq09wK1Xuww53bwyhGk9Q7XDPd2dVL1QdtM7wreO
                      vZhypTx4qpC8PShdvascyr20nLU8Vw+NPRcicb1Al2Y8jqMXPWlrhz3AdBa9pNn1PAB8Tr3qdie9
                      wFG5vTL4HT2ANQe6VaudPdLHSD1dB8c9I3KJPdJ/KT1gSi87MExgvcCfFry1v4M99MaTPB2olz1e
                      LE49LTWyPQD+Jjw5+a49mmOnvZLzBD1MLdk8QIf0ugbUAL1X92+9tH/2vH0+cb1U1oq8VnoUPRHu
                      qz0n58S9fiAxPXJGEj0Ah1i8B921vbSfEL2DPz+9bteUvcKzcT29Uqu9dgpoPQCuKL36mYC9ZK7f
                      PIZlAb3oCkm8MD3GOzp/kL1yRSk9gL33ugxw0byMkLQ8hDP7PJAJgL3J6bY96AxyPAghyb3qqkI9
                      dhhMPXVZij2vw5s9df+GPcRJ2jwOSEo9oB7tuy+ojT1dXaW9kNdzPAjdsLym+Ie9uVGhPUDgWDz4
                      m8C9YEr3u9q+K73SeU09e8CJPcRHEL0Sl3Q9qKmsvQRR2zy9erk9eqkzvSfzoz1JXK49dNHaPPh9
                      hL1utV894qeMvd7vMz2FRaO9gKqiuvJqCj0Qeju9vo86PY0hK70ePZK93TeQPeJfED2KCWi9SmcP
                      PV3+xD2KJCA9CA6BvUqTCL3uGom9tMCVvOD97Lwz05m9H8XBvQWkjb0Cuzo9seTJPRqZbT0eqhU9
                      Tc6IvbBUNTwGxae9YB7zO9JDfj1oP6g8Icm1PZFZhj3ogxq8+ZzMPWVQvb1H/0G90Et7PJ2OpL1E
                      RNU82ApePIApSbyjRi+9JOD7PBCmKrzgFiu9obKSPT0Uab0dmo89IoBwPUFkkT0SFVQ9UIhZvbP4
                      KL0A5gQ5fwizPfWyhj00bda8wxawvf2KuD34O6q8KDJUPLDxzruO4E49hmNhPQDfXr0utj09WItA
                      PACphb1A0NO8BucRvUANIr03gcu9LRhmvTBefTwsxL28Dj1CPYa6F70Qqo29XqIKPcLnlL1P+oA9
                      Gu8EPcAsDrtglM673UssveJ+HD0/H8S9ym+AvYRkGb3r9I694HMjvZyW/DzHa2q9Ln8HPeCLsLsh
                      xMk9f1fAvcZlSD2a7w49o8mdvdi6wL2+8wE9Zx5ivZBeDrywH7i9d0vMPZk1sD17Yq893UCxvWaK
                      rL2ayKy9ANtxuvXpuT2AIbI7M7RAvQLpIT2+9wU9mk4bPcsKrD1e8149TzSwPcODKb0EgAO9RzDF
                      PSooej3QYHK9Tf8lvXrIfr2U4vc8R0xsvQC3IL0Og6G9lLPtvJ1YsD1PULI9QE37OoXQrz3Boqw9
                      gPvuO+OjJr3Mdas8g0R/vaV0yL0WVT89a8yrPTpeVb2wE6y70rxCPUDOCrx+70I9UKK4u93Sxz0A
                      huy8asuEvQx4ubzEqs88Yysfvbo8Nj1eKwA9zE+lPMAMBL2/c6Y9tOv6PFMXur1EnQ29gAbxOwgY
                      ybwAu0k7bgycvSGoqz3XCL+9i6m+vfY1TD3+iKa9oIeWPDRS/zwafUy9r9CEPeaRkb2sOuO8UeyO
                      PeNBoz1M0KW8tr5KPbBCBrwCnHU9yJSUPCImCj0Dy8G9g4mOPYsilb1Yi6O8ldmOvTbWRj3VQ8I9
                      KsFivcj93LwARlE8N8VsvSyGBb0w1Vg8GNJkvI3Sr71ycSs9bLrxvL35Yb2lZrm94OJsvVCQsbsA
                      HpY7siFCPRQ6v7z6oSm9InOIvdSCuryJ/7o9F1I7vSpkiL0CFyA9xHHnPPNLMr2iNVM9gpADPavV
                      tL3wDqO9MSO0PWz6zDxon6y88jpaPRccnz1kXNo8Qi3Hvbpdjb2ZKIg9GZGAPZAgdjyAP2i9dHfX
                      PEgylDzAU8g8IL9uvc0YtL1UXcQ8XSqEvbrSm723jsw9jVqpvSDsr7t74Li9xkWqvaJ7Nj2AsHu8
                      AOSnOywIoTxke808EDlfveustD3wTRC9bvMfPdioiTxM5a288aiCPdJUwb0+XCE9tmADvU0+Kb2Q
                      ens8oFLPvJMNgj3Cbxc9mOelPCM3wD0TXKc9yO28vTCmg73C/g89RMAOvbSCrrzm66m9cfGzPVfq
                      G70AMsG5JgxYPScgTb1oZjO8x4yXPdqRjb09Yli9MkKBvUhctrxtj5C9Bgg5PVJNIT25Nao99ICL
                      veA7rrwgwpO9OBSxPIAnp7p44Le8gOmAO29shz3kjdQ8oPj8O4rsOz1acoa9AC6nuYO/Gr0Ysx08
                      sMnvuzDQqrt8zd489yivPdqPXb3zaUG9MFTUO/42LD26Hys9acWfPUxbpTwAur69dWzIvUvgkD15
                      aqc90GY7PHj5w7zVk7299JGGvCCCIL1A0wS8p+2hPSAhpLvjkyu9fyGwPZR9vDwCVXU98jNuPSmH
                      xj0CukA9SO61vAAQ6DnejQQ9YHy2PNpmcb1U5dO8UBZdPCJhjb3C2Ec9LPq1vK3Isb3AQKg8H9eR
                      PZSMujxo+8e8vl9gPRhbpTw8h+c8J/BRvXMWoz2ENPU8pMnuPKmtuT2wEay7Qf+nPYbCir1m+Qe9
                      DeS+PbC7sr22vm89QLxVvRbDcj18hOU8unEEvZDgMrzDtKw9DDvRvDHYrD07NrA9MDx8vG85ij3K
                      MS89A5JgvYg+17wlsZE9wEjROvOIn72IQ7m9yDWgvDAtXDwozE48GGJ9PF0XKL1NUrG9hmlHPf6R
                      Cj2Kqg69gLzCvNqQRD1ULOM8KdmOPSjtdLwMm8A8rBsPvWAXuzygoKs84DDLu8yYCr0WbGA9jHYQ
                      vRwTFL19o449d5yuvWwrs7w6hXA9FAvnPCPbkb0I2rq8hm5cPWJdFD2260A9zuSWvZ5INT1qYiw9
                      6mNLvcCBQrv0dJq8ADDhuoo4CL3AIrq6B6F6vQB8Rrzaake9KCNkPBm7iT2ytEQ9LBiGvLzcFb0T
                      Fp+9snOMvaC5V72WkA69VCDVPLowNL1yZWQ9Sp9tvVgNyr2pzJY9wFQavGD9nTsLl749OppuPTYa
                      RT2ofiW8KC2Dvfzj3TzNZK89AL7mOgr0kL0ZFZw9aIu2vSq3rb04hLm9rLwHvSM7fb0MKYS8UAOM
                      vQOCer3YVp08umpMvRTn5Dxvlaw9KYmLPTZCCb0SXAw9DN+vvHp7Yj1GZHo9iUatPfJUFj1UeNk8
                      AvSfvTLuXz1Q8DO9an4lPbSskTwE2/I85pMZPRC6cTzyU1E9NrwbPWP4r73nIco98JgBPAJNTz1X
                      Dqc90IY0PDZEl72obgC88E9Fvagbtrz3z1m9gAYXPN4+JT2gstg7QBknO8qIcb2TqSa9gldmPWcS
                      Kr1175k9SFXnvFEsoT0oske8AKdcOttssr3Wunc9mNzlvC20lD344468ZAOMve50ND0R/aI92LbD
                      vP7Dk71tszS9jDAKvVoLAj3tGo298jhZPQ7aST0s4J88sOctvT6FCD2QBh08sOlVvFn6hT19kmq9
                      avhBvWDHjru+5WY9g9azvajbkL2lxqM9OgklPZIiaT0A9yW9EfGvPcCySbsPCba9rvptPSq/qb3A
                      oMK9/PHePICtNbxxcMk9cvfGvXHfnj2ASOY69MuRvEJ5aj2o+bu9Pox1PS7/Vz2wmWO8F4TIvdYJ
                      Eb13Q7C9IrxDPbvGnz0sALW826SSvUDgtr0y2Do9OsALvRN5mj1qrQa9wEoRvSdXhj1qzkY96OjI
                      PIhunr1baMo9CBCkPAKWYD39BpQ9KlEWvdD6hTvaJl69biKCvUWmoD3I9+28L0+IPXK4or1EdvE8
                      VZiMvXuKpz1oqE68VvAAvfPFVL1g0ni7GitDPYgogL3wk0O80PJ8PIit97wwMzi8QK5GPA08vr1a
                      v0i9YFRDO+gjezzpJYM9mDvtvDAzazz1L7W9U4WdPcDQbTuyGUI94GrnO66uoL0O9yc9zFrUPMI5
                      s72wlai7jf6SvYwCj7z6ZVW9Jv4jPYZdGz2AdhI8+32oPZDpXjwAHg47wO1PPNjrgbxoDrm8wlpl
                      PYJjYD2oSWO8ZL/TPK2Anb1L66i9al5NvZiFvLxN7rO909mrvcj2rb0z16c9KHoIvGBsr72u9109
                      8KwMvYc+oz0Qv6q9DRwzvdAMsjvlGMg9mFl3PEW8qb0gY8K70e20PQNYnb3dBLu9Be2GvSEuoj2w
                      exa9mu8EvU3HR70do4S9/dGjPSr8aL0gUfO7x9K8vdIYLT2aUka965uiPctApb0aoRE9ySS4PZ+F
                      y73a2VY9TYJbvfWplD3QMYW9ra7IPXjihTwAAGM6wI0bu/rkUj13Zm291UWhPRbXBL23MK89wEw1
                      vOc2rz0AVrm8rgRZPd/yuz17d8s9QFxkveGxyz18jxO9/l9CPXSKkzyFD8U9oWm+PQTK/TzSzRs9
                      YF5FvQA2hrw2MZy90ZexPVKxEj2mXhI9SfWgPfADCzw4Zqy8ahwtveOrvT1DKKO9HZxlvbqmdD2t
                      PcC9gFepO5hYNTx7JcC9tGOCvDi7wr0iz1A9hl1mPcI/sL3t0aY9Vfamve27yD05ZIc9QNOpOlG4
                      gz3srJm8FM6cPFqQcL20KY+8PfjEPSAqv71Mrem8ciFiPcxsxzz4rLA8IPWMO9zw4zyMypQ88KlZ
                      vJCUBbzqDnW9p9ctvYMXtr1COys9GX+TPSJOQz29I2S94qZsPf+axr2qp7y9JR/AvbKhu72YU7e9
                      Ful3Pe7Dn70z5589oEW6vUCIjrxDEB69MBC2O7L+Pz3zVLW9jiQXPQCzArsATti8VrNoPQqRXb09
                      iCy9AB6LO11EpT3gWL+9DyeTPfMYsj1imaa9V25+veDfM717NIw9m6G8vVB5Pb3HScS9Kq15Pbct
                      x72M1A+9bcClPeyWubxG4289MU6zPd31vL1ojcK9GdCWPWIoJz1gxQQ7U9KmPSo3JT32YyA9ufWE
                      PUDeoby1T6m9pBmKvfN7mr1wXqS95w6wvewVpLyZGrc98vpZPWhNi7yApZS80q5NPa26oT3F4qo9
                      3SGEvW7wNz2pAoo9mkQrPeBemDzsw7U8R+CaPZYggb3RVLk9bqaivZIhMj1+hgk97iiEvRolE732
                      dA89Y4TJPeAZnLsArZm5aHCwvbrcTz1pU6s9ag86vXJ3BT2Uov48I6CcPQCG8DoVbLW9y0GNPdb8
                      ej1Z2Zs9Pcq7PYk/gz0AOdi76EMuPJ/exb3x/oA9YzmcvdDEbDxQx3A8UNVCvFahiL3G2TU9xZip
                      vYDAurwgEVe9SaeaPWlhpT0yGp29h10rvZqUv72OLh89GMVevPVGjD3sgeQ8IAOGvGDQwbwH3cg9
                      UKAWvdB7Zr1Hpiy9LpGVvZj/irwFkZO9pv0DPSgSGrygbEw7SBK1vM2por1tloK914d/vYECyj3Z
                      taU9sAeZO9Jhub0WoE89AE2lO60QkT3YetG86tNuvexRm7xYTXq8WcK8PQWLkT1g2cg7dBrVvFtS
                      qz3A3mC9gMM9vJ29yz0mRAg9Vp8UPcuGur26m2m9NXuGPRCNfzy4iMu98QKFPVBnMbywlhy9LQWe
                      vdWYmT0AJJq6wuEPPRie8ry9OsU9YCt1O5vAtb1wLxg8evZkvZjFv73CpiU9puwjPUgIqDyFPKG9
                      DmZAPbcwaL0zm3e9B4VuvX8Lrb2bH589AlK5vTgGoTx3oma94DWAvVDGdb1qIjA9UIqluyLBAT3C
                      wBQ9TxS9vYYLVj0bdZW98vtuPfCUajwufkw9n/K0Pdjqs7wYaii8YBeQu0Y1WD1oKJW94BLavDQl
                      Db2aDVw91OncPGilsrwDx5U9tV2UPQJkbT0wmXi8WI1dPMr/bz1JocE9w82bPRDOqr2AgZ+7DvJd
                      PaCELrtyqre9BT3LPXrwC71T3Xu9LAsHvV6uOT1Qqvy7w3w5vbC/sL2M0a68L8KzPdsazL2lI6y9
                      AGfiu815hj1EGxe93eaxPdqTIz3orcQ89mtRPZJjlL0AQVq7qFyKPAWKtD3hOok9E7qXvZqySz29
                      86u9mnAyPbh0sjxAFAq8aha+vZ4ZIj3C1Rc9cldfPebWfj2gm8m82NyovXRwxDwoSfO8sDSRvWCG
                      9TvnFyy9AIlCOjq5ob2GxjU9cYenPSNjur06+jK9ABB6O+8gvr0XeqQ9QE5ZvPC/O70sTvM8yy/J
                      vcnZyD0w9FI8xbWIPUDsubzozZc89Ny+PM1ukT1o5Rk8YslqPYBwETxop6e9iAKEvDoVY71xjZ49
                      AlQmPYCryjrgp967pEvVPEUfyb2jEMc9hE7wPAMFqL1U8Py82P2EvTALB7wAdim8oNCTuxCiYjy0
                      H7U8Yqs8PcZfPD1C7yU9AOlSvGC1sbvMWbm8yrwNPbAaxzss5IG9oucNPRMFR72wuBW8L3mQPZhc
                      gryHkku98gMEPYz47zwNGVK92dK2PZjrezwgcgu9zIXPPOUJl71gGcu8gKrBuui687wLJLU9TGyd
                      vCpyDT3VUrw9CjKpvcdeKL1oICw8m8mZvcq8Gb3Sb4a9fs5ZPQXOvz1kCw+9X9O5PVg3rjyPmb+9
                      jVobvcDPEDzo4XQ8Os45PXMMfL2v2rk9dL/1PD9hwL1+RxE9oSOzPdZNCr1U1u88d99ZvcCUuToA
                      vaC99t1jPdgC9LzStms9AAYpO7TT0DwyCa292K5ZvI+ZjT3GQEc9x6lavYBMpbrgqsY8jnt7PcD4
                      ujpCVBg9rX5ivVe0mT0Akd+8sEiLO6CKtLyHdL897vJXPWBvRTtH+K29zZ6PPcsJsL1Yt5Q8i8nL
                      PSmFmz1q+a292YuZPVQeiTwPZIA99CuQvJSKB71kz9U84OmqvHZASz3brMY9gHxEPDW/jj2bo769
                      IHK9u9yd7Dz16La9sF0wveBB4jsRAo89kskgPXslo71X/z+9g2ScPSWzk72hAqA9T5SOPb0GhT3a
                      12u9gfuJPZKJez2QN0y87eXJvaaUSz0tz2+9pfPKPZtipD0YtgY8lV7CPdhdOLw0T9s85tqEvZeG
                      yz2ooka8skYVPX5kET3YmL69BLr8PADpZL2gNYa92JAvPGiDVrytLUK9qJlNPFW1oj1dhrc94Ae5
                      vahKw7z8RO887YRNvYBrlLtdyrg9ozlgvVbbk71+FJ+9G8acPUc2NL3HCSW9zQ52vTe4J70Qqym8
                      ZhKRvdCqIzzQvQW9Yik9PXozkL2wcGc8it0bPbQJ2LxlQMS9Orx+vbgCpLx1Hsa9+x+TvcNGVb3g
                      9gy9Q3EmvQ44Vz2A6VK62UuQPa1xkL25yZA9WK6TvGC/nzuxFZg9wOlpPOHVuj2kve48IBjIPFCf
                      LL0g0PK77aJfvWLBbz0QqSu8s3RovSlBuj3K6pa9npBBPYAHgrpIfIs8qkUfPQwtqTygs/o7oFqM
                      O745ir1s7ba8yg4bvVYqbD1S/yY9niwyPeVBir3rIKk9mPBpPBhKyL3ROK49DMDDvOAC2Dt5M8U9
                      b3qaPTuyor1ZA4o9MMmsO0DYJjzQjM07yj2svb30Ir3TYro9/XmOvToODL1BvpM9o89wvYpwbL0m
                      tjs9YIKhuxKgAj0CJSw9MN0kPLHDwz0ACKk7IXmLPdDbmjuRwqk9+0ykPZh8kjxqrWG9CZerPdBX
                      rrug46y9OymcvQAwJL0rlYE9B/BrvSDgWb1+M1Y9jO38PDq1kb1IN4C84CADvXDrKr1RtIM9Ms8T
                      Pa3ovD3DYIA9RdKuPatVjr1sOc68aClEvMwMybyKHMe9ANO/vaSk1jwstes8LTqhPbJkPj3cMdc8
                      1E7wPGNDd70390m90IREvSAm9TswN2u94JHhO13HYL0ALsG7UNyAvSSl9TwqBqW9DbO/vb0LoD06
                      niA9xYm8PUCOobzb+aq9+5eiPZDVdzyy6Qs9wDhfvMjAy7wqTVU9AUu9PQcCKL16iAA9Q2OpvRBY
                      a7wAcbW7nFjdPOIjJD0AcRo8yod2PVdHeL29jow9BIH/PF6qGz3QWuo7oDWIO212Sr0A4ws7WHAL
                      vLlvqT3Tspo9cWmLPTTN/TwAHek5bYusPXuVob3JiLU9gKlkup4OSz3gHYC701m2PWCdHL3GMzI9
                      ViY9PRanSD0zvCS9Z4azvWB4wTyvkcW9gMwfvLb3OT164Hm9F2dIvYAErTpQQk+9eJ/uvAr0Tj0f
                      g6E96N6svFwH7TyYEHw8hy1GvQHHrj3YUz68Eu8yPTAtEjySMk89BDHhPHrOPz3++Xg9nVKivb/J
                      sr2W1aC9OPu3PMIbVz2ST3I90Dr3OyDYoL3Dm069kvQXPejKsL3Hx2+9gs4LPa+Yxr0GTik9jP/J
                      PIBeqjtggJk8fTauvQCb3jlplMc94Mb5vJMkLL3CmTE9lLCoPMDhazv0K4i9czi2vYrBCb1g79y8
                      ysi/vbmZrD3uH2E98NV/vcyihTyLbsu90odSPXHKpD2yOLi9tHIHvbV4uL1Xvbc96rUfvaST9TwP
                      LbS9oaiBPcVAiz1g9sM7sN32OzD9uLtgX/i8HqGTvckqkz2tn8k9us8GPb4gPT13wXK9i1qrveAQ
                      kjyd5TO96HotvMnKnT2AfJk6Brg4PXCZv70AmLG6AEqdu538tT1+dDw9IIb3O5AJazwQZ6K9EkIN
                      PVD67TuAo+m6soGNvbB6Fb1uqzU9VW+bPd6FNj2yCyY9gJvhOrE/sD0T2ru9QaOPPVOcOr0oZsE8
                      LObIvEBNEb3ou3M89X+rvarlgb0+EAk9wBV8O45Zqb0wuMe9gTezPSCYgbvB7ZA9Q2GEPXCFib0r
                      T4s92AlgPBPrqL25vLk97G3jPNA3+rvLKLi9WFLpvECzxLy3Sq0905+OvayEvbxA8Cs8oACcvWbo
                      GD1dlco9F4nHvQAe1joKqA69mL+/vGxH6Lyq/ws9wwaTPXprGj1jLam9QIfDvNgwD7zs1Iq9sG93
                      vexImjxgwcG9f1+0vYCUDLyXC7Y90LVZPIK8az1ffIk9qDlRvGrtCb3xNMg9Lq5vPaB1YzsnqJo9
                      OpOCvYCzi70o9B28RzyvvZYeXj1AWae8MBYtvFIESj3CWHc9IC9Avb43gb0OqIC9hP0XvfDHOr2m
                      LUQ9eWmXPad9pz1Q2Qa9ShVMvWuouz1Qehq8tmwKvaLArb08jvg8zyiWPayfpLzHIJE9aXuWPbqc
                      ab1atoC9tC7MPDXekj3zOqg9P52lPSi/lDz2BzE9USatPWmPsT0/14A94G6kPKALk7uwOo87QMgU
                      O1PdYL3TIrK9igp8vW2Lp73XCq69bI62vCh3JzyXA8K9KKVGvGezsz0DQ3G9iFrLPNTLg7zU0Ye8
                      dKSFvI0Owz0ANB+8Umi4vZr8jL1a7Di9GL2NvWWAiz3MauK8LjEEPQC85rzDOr296NuFvN8tsb1j
                      ULQ9WFWVvFORb71cMxC9Qr91PRbFDD3W8EA9DO7ivIfzQ73DPcM95HSEve17XL0FLpG9E+UdvcBi
                      qbpsQtq84au4PVQbEb3hda89FcayvT75KD1Eoeo8nOrnPD31h73YLbS9jEOEvdEdhD2s5II8QYyO
                      PfkThz1Qvzq9UGZwPJkWqT2g/JI87EvyPJqOAL16Kzo9qlslPWN9oL0hx6Q9EqKIvR4IZj2KyUK9
                      VP7MvOhefjxFOr09OR2KPRfUyL21trC9gIOXuqbZkL1EwBS96mQXvWVatz2G0jc9byrCPSuSsT1N
                      m4m9PcRCvYABl72VWLQ9YPnUvNSH3jwAA5i5DNufPKhfVDx6fVW9YMQSuwzPk7x2yWA9bLHrPAvZ
                      ob0dw1q9/TeDvUDJuLynbUG9CiU9PZCxZ7xhsa09D32xvWofHz0+x469Rd6xvcqfD73qnmU9oN+I
                      PKz1rLwUVLU8E8pdvalMwD2guLO8Fo4APZrMV71DfY69w99SvXh9mjx0pp88WjFZvRJnpr0wYmS9
                      yfW5PeBh3ry6H6a9t7pQvZCOD71wCce9dCSYPCAQhLwVV6g94rMqPeCKpTx6Vjo9Olw1PUCUzLxd
                      e2m9vyefPcEUiz26uHi9QGcOvcm1wz1g1T29v6nKvcC4gb2aXru96H7nvNbciL2U1sA8oIKDPI70
                      PT1g0/A7ejl+PavnlL2Mh9u8lPbqPMRZ5TxQqky9g66gvXctbr1YMl88GCQXvFk6hT3QGgU8HXCF
                      PQl8kz22/zM9YhC+vYVOjT0ah2O9N74/vX2rrT2k2fM87bSLPfqWWD0RIbY993tZvaAQDLtYK728
                      BjQCvYB9yTtdRDG9m4CLPUyHFb14K8e80M6BveLUSz2hxJ89UHJePAA5ajtggZ083desvW+ytr3l
                      Obc9BUmHPeSF9DyrvMq9eryivfPpVL2JDck9/6KtPeHfpT2gMn+9ir2fvUZ9Oj2SOB89kJ0/vKM2
                      Ib0jZSu9+rBDPWhyor2Rkb49Uzy2PbRmuLzYsre90pAwPWfGRL0Uaxe9MiMMPWbZJj2EmPc8IEaI
                      vLYqGT1oGLK8ZYTFPSHmoj3SpxQ9CCXtvD5xi713FzW9uspkPUjhq7y++yo9x7qKPTKhRT1r2ZG9
                      8a6PPfK2aD3YjGM8Qx6OPZgBJLxAj968UCDGvU7YJj2fkLE9wMFOu1sZqD2fj6Q9t6ClPbL7GD2b
                      OME9Yz5pvVDEJDyC6Hs9wvYuPUuhkD1UXK283ryBvbCNPL3oHIc8UINvvangxj0zPrM9ck/Gvag7
                      Gjw5Hso9uPGPvHPevr0mqSg9E3WvPeSO7zy016286rI8vdSl+jyMvfE8KAvDvTjY7LywNIA73CDd
                      PGjIur1Uitm83miFvXT+8bwq9hy9kuJUPSgA3LzSbl495QKIvXziFr2Ak1K8t5I6vYC4Br0dKbC9
                      rYJavY+Lwz0ih8i9FcuCPTrGS722OIy9Rs97PT1KyD0Azy69sN5LvPBqo73uBgk9pmecvZVxoz1w
                      eAi9gD1uvK2Psr32VQg9K8ikvYD74DvG9k49M6GoPR81xr3tRG69ID+svHHDkz2QPlw8cUulPc1J
                      nr2AMW68Gp4pvWsqtj3AUtI6wcidPcBO1zrYPIC8IDYNvUBpVr3qLwO9MAigvdd0oT3CUWU91+OI
                      PZdVZ73X8nu9MxMuve3/f73b9rU9aHm9PD47Sz31DME91vhxPdKNLD1f24s9HcaSvVfilj2Ar5y9
                      GAGivJM3wL1flLE9n9ynPUaWUz0OX4W9zn5qPZOrsT2sNJS8ADULOpiZszwK5Bw9M1CTvUKjcj1I
                      i7o8AqtPPWjsSjyg55870Nd/vMbwFD0O73Y9qNlOPFBxxrsHnXC9a8mlvceqTb3Ru5I9kDGSvTZq
                      Bj1t53S9U0OvvZJfWT3FQbc9X8SAPdYsGb01V7Q9sarKPcDAbTstx789z+yHPRtktz0YrT28x7p5
                      vYDPsDq3uca96S6YPUZCTT1AB5U8w4VGvRsyuD3qSi49r/uoPZKUeD0IJbm8wLV8PIA6tr3zI7+9
                      MxWyPbWynr2iT4G9KSK0Pe8Msr1yZJC9aEJXPD+rkj2HqMk9WAorPH35pL0dt1C9YJdrvQIgQj2Q
                      Cl29PPvpPMHWpz0OeRk9EB2YvZg9cTwoBLS9gObbOsA8S7xgJr47s8GbvaBuDzvIJ9e80NybvWCG
                      fjs6Ore99tdkPcANl7wg5ha9PX1svamatz1zkKW92v58vdZJDb3QRZ679vphPbopq70ytYK9Hs5n
                      PfKhFj2ScRU9HYnBPcjpmLwE2uQ8obSuPdDMZ72XeGC96E6tvPgNnbyBD5s9SmBbvVAnRzyb5Lk9
                      5j0SPeK3gr0FwsA9gMIqvVR7hzwED9c82PI+PGBdxru4h8G8Klp6PYiNj7y7ape9jxq0vQLdPD3C
                      p5+9GFeqvMBkhDqwRfc7Z7tmvWxjEr068Ee9y3yzveCk5rwCmCc9q0SGPYKDrr2gvYW8TMCPPOFh
                      tj0M/oI8oByLO+EWmj0CyUg9bc+dvUJmJz3z9549Q3BTvQZxir3CRqS9jCiHPPhqjDybO4698yu+
                      vcCmWDwI6fu81KqGvL9gvb0Sggk97vMyPTwb8jwYRRI88DpyPFhjojw36Lg9mGetvMLyw71AdFO7
                      dZCiPYpnJr2KGTA9ovAcPZbRDb3QYcw7sHJ/vND8JrwA5Kq6YO2NvYCP7DpGulY9evl1PfNKJ71a
                      xrO9kGxOvHCjLr0q8yc90B3yu7tmxb3j30q9MqESPcY/Sz0HGrq98i5gPX2Prj13Usu9Nztyvcwn
                      Fr0MTLG8uqZAvTewYr2Stom9lHywPGDZVzvItIO9h2rBPRAFVTzAIWc8LC8IvUKIZj1U7bI8OAL3
                      vEx+gDzYiIi94Ke+OxhT8bx4vrY8fTA/vaZkhr14EYe98sNiPThYt72fisY9Jb+svR4aQT3A7WK7
                      9HqMPB7ADz0YQ8q8kz5jvagjqL0GLxI9ehKEvcA24brNby69W1O5vRWAkL3HSKw9NEz1vPQc/7xM
                      oKy8TLDbPCDs8bvMsqc8Z3AavSuqtr3yexM9YYqwPYBCuDrZGMw9lEbFvBBRub0YXrg8sDcsPDeJ
                      sr3Mk648eQStPZoVVb2D46i9dyFjvf9grj3owJ085AgHvbBvhrtQ+5c7lCeovElYlT3k9t48WvS4
                      vXnIuz0zQnm9aphUvZRj5ryw2b+78DePvUIaWj2Utdi8UTqnPeDTIb2CPyg9IF+svRrUbb0AVXm9
                      sAt+vTLvCT0AiRG6U2Z7vbi4n7xAJLm8EqYjPfuouT2tssw9VAnoPGfnx72YFcE8qCFMvPr3Tz3t
                      uni94MxTvfuphD1qwaq9LuFbPWhF1LzGMhE9zsJUPUTO+TyKz5W9wN25vLMQKr1L2ME9Av5lPQrP
                      PT3jWF29xVy1PehpIbw8xBS9776ePWpRBL0AQvO7NqgRvZmvlD0Y99G8CPXAPAwG2rwjaRu9bxfA
                      vSw/h7xAdgw8gC0wulA7ML2oVzo8wH5wvZfLP72s8tQ84ObLvU4+az2Coi09PjGlvddzIb2I7qu8
                      XVUvvT2bu70oxmy8pACDvbn/hT3Se1c94IGuvBhMjjwoQbm8g6SbvfK6az2jCsq904CivePBRr1F
                      CJu9uNv0vAAxnjsyNXw90jeRvaHFoz2QMhc8OX/LPXbwC716dm29TIirvHQy+byAsIU7EBKvvQDI
                      JTvntpk9wjMqPV38uL2x/LU9gciSPYIIWj3AHa29hLnkPDH0qz11AqI9biSCvXpYbj3T22G9zGnp
                      PDDYUb3AF2a9TcGEPfBDBL2grqa9VyYkvXZRE73nYRy9G9yeveqoT73TRFy9dlpxPXBGZ71ZnrQ9
                      Tfh0vTZFfT1IPb089OXjvJQptjzCBVU9Bs2HvUN2Ub2ADye92BzVvBoLzL2vtsY9jctyvRD/DLxj
                      RS29UVyGPRPpLL2ZzZI98RCKPbyFjL2wa/O7sP8jPCAe57s6aJq9QGo1vagwG7z0hpO8am5oPbhF
                      47yVpIs9AKMaPNgEXryCJC09wCD+vNBT3zsNJru9wKwoO0OrqL3Xnku9zI/wvIAjkTpYYpe8i5G1
                      Pf0/M71Z7Yw9bQ5RvbFfkD1IR4C9gDcrPMMNYL1G0nM9DHynvAAUBDs9yMw9k/eXvUE+vT15Qq49
                      KvxjvSGPlz1C/RY9DPTEvJ/agT2oj6+9wigCPeIsJD1QEaC7MEljvSchxT1AKW27Wselvfvbqj1w
                      K0m975CyvfJ1Qj2OWaK9WUKCPYFOxj04F+G8cldcPQP8rj2KpzC9ABKOuWCbHbtW0Qu9MG6oOySD
                      6TywDOs7QnwsPVi/XrwGRJy9QECAvMNJwD32ohc9TROJvdAJYLzvgLU9gHL2vJTX+jyKnVg9Jl+h
                      vf6FNz3T9WO9uuIlPTVpiL0XBk29nWdBvZKeZj3+UhQ9umxevdo9BT2eHV09E3izPRSwE72eDXQ9
                      Aqq/vaD3Rr2RW5A9Js6VvfDAw70SgRU9sJLbuwClU7w6qhg9Zk+UvfAXb71Qft27berCvQJNQj1R
                      6cA9d1ZavQ+zxD0sYrg87ndaPfTk8LyGXD09wGlOu+RYCb2Jra09oOw9vbG/rz2BTKE9IZSFPeKb
                      Vj3olFS8SxfLvWAKM7tgXAQ7pVS3vQBupLt9BLe9hc+CPTD4Cb2gueM7g7S0PexM3rwng7o9szvM
                      PeAGvL0muAo9QeuuPYhgnDxFTck9WfOdPVM9dr1tUjy9ABxMvOc2mz2temC9wP1Bu+3aub3mECA9
                      ETe8PeLefT0AzYy8qOsRPABss72U/oO9crMtPZJLoL0R9YQ9OpKSvQAJYr1bUZK9NGiavLpkVr3w
                      o0I8GNvXvCvcjD2c9s885UWLPSsAlT0ykca9ABtlO5zMgr0nZKk9urlqvRCRTjyHxTq9xJzpPAGi
                      wz3M6aW8gLE0vMsrjj1bKI290yOtve0/nz1SP4S9qVCcPUKtBT3VCby9gATTvMuPzL2QxiO89Guk
                      vB8upz0sZYO8MGpLPI5kQz2O9429nDnkPBu3gD0AwD65wGCKvMqoI73SGFE9+HqTPI6cjL0AZri8
                      ESWvPZ05dr3Bnrg9g2h3vXIuir1Dvnu9KFRkPMo6Zz3GE3c9WOu+vTPFyb2mmwy9AKJVvOw34zyc
                      OO88EpMnPbBVeryoXFg8wOykvSpzlr1ILsS8WBqXvDl/iT1I5cm91MgBvfJ3l7035z+9TBKCvbCV
                      Q7zK0jU92z2hPdmKhz1EDIu9wBonvYApLLo1EK09UHt1vM4rPz27Lr29gAq7PKgmKDx7HYk9gmRx
                      PYCMIr0vkb09kmwXPc/9rz0vG7G92lZlvUIkqL3DQ8c9wEIUvBpScr2QvEA8aLKbvIpFdz3m+kc9
                      OHXJvQhprL2PPr299u4WPUNQb73WmXc9oKhlvedKoT15wK09qF/zvFAPILw6xhi9Pc0ovWYZcz21
                      nJo9sN2Iu22Ma71O/DE96HlzvMIeIz0O+Sg9mP17PMA7xzwP2pE9bMr4PKBj0zt0++i84HXJvanT
                      xz296Wi9ADANOin8gD2y2n89wBbbuvtBkL1YBhq8aEqEvLwC5jyUatO8es2MvWBHpjxwRWC8EK1X
                      vNfbNb1W8BI9gFCBu0PLrD062C+9MKQWvC/Ggj2x7LQ9ACvNu1p8Ej0ANda5vXuEPbUXtL0o4gq8
                      N/fHvUxB0zy8HeI8bObcPFBCkLsmoG89aC5SvEPKG73Aymk8aK8vPKe8Qr03Fnq9dxeoPS1Msz3A
                      slW9QrFMPbdnNr1ERPU8AODeOmeYK73lMJ498HC5vRioULwSLjM9Q7dQvU7Sej1adCm9NYK5vaVP
                      uz3CfVI9exervVO1qD3AUp08Pi0SPQU8qL0AzEC6eGO/vOHLiT2ThKC9feyqPbWChD3TtDK91CMP
                      vTTs+zxHFoM9ir4wveOnrb1jND69gXqyPY3EnD3Jx8w9oIgXO+Jlp72ymSo9sJoDvWiTxDwAw5m8
                      b5ipPamlnz0jR1e9gDjKOmBfm71iTr69ejBHPTAGmrtr+L09zY+APRRM97xf+769Ki0KvZjjIrwC
                      NMu9EvY5PSozWb1Q+D69wCgGOzBS8LuAjky9n4G/PYAVy71nTSq9yHSBPHjVxL0dYJY9HdaEPVrA
                      DD1C1BI9G/6YPZgRIDxgko29kLGGvfYCiL0A+Xs8dym+vZxy2DxmK3g90B4avLAjib0vw5s92vAo
                      PddDub3QDjA8VsZjPf0MjT2Fq429kCypvXrJl709lJs94RmKPaIZXz0deHS9a62WvZFCvT2A+be6
                      ISDKPV5jJz1mJxW9QEOTPBCFArwyRx09NYCkvUEbxz04X5O80tU8PQ0BIL1ksfk84+E9veQm7zxQ
                      pJi7mv9YveYtCT0wyuo77FzbPJAOCjyMlgm9gmR2Pej/fjyazDM9YL8Ku7CyXrwrUaE9arqEvQ1k
                      tj2gEum7WgnGvZ03iL0AxOS60+QhvS3fob0tjB690ombvVJWLz0ml3U9jtxrPdq2az0YCtm8A8Ci
                      vQDgS72HUD+9ku8dPX0Irj1FR4Y9sgCgvdQewzw2T2E9kiGHvbrnir0wUzC94KO6vCk+nD0JbcE9
                      j+uoPcetSL2wMFs8EYyBPS0SKL1qUju9ZjBVPTWwrj0Lnsa9/uR+PaD1gL23AjG94B9+vew15zxD
                      N7o9rF3BvEawUj2WXkA9+FfIPHfhGr0AFx66MthzPQ6+j71jHZQ9l5PIPaMtWb1CpBQ9QPZIO+2l
                      xb1NvqY96ntevWIbbz3DEk+9rXmrvRI2GT0grim915dxvaAc9Tups6k9tDOevDA69bt4y668wqht
                      PUBvrzx/kJg9i7KQPfANGLwqQj698bWuPWQu9zzUe/Y8AcOgPfT/pzzAe2S78jsTPR35kb3mATQ9
                      tXXGvajGnjw1jY+91MqhPFfFYb1Ajgu74pJcPeWonj0CEWo9cNwRvYBwMr0u/1U9oL2RvJjChr1d
                      46K9AEiAOye0qT0mGWg9CMuEPFKnGz0A0Ns3692wPVOpuT1foMY9Zt6ivXS66jzgXri8UtFsPYyN
                      0bww1XK9qCksPOB2jL3t6Mo9h1jAPWYoQT1kZhW9RiKcvR5sET2T4o29F6fEvVjhlb0qFJ+91LDa
                      PODPwbx0vrQ8YPusuzCTWDwBiJM9gEJSvADYpLwi4wY9zPmqPGAt/ruwEJ27KEWVvdAmHTyn0Da9
                      jE3oPFqCSr0m03U9i7GYvZhvCbyqy1e9mxGMPXqKYj0AQ7m5AMqVO4O0P70DZpM9ATWcPTAjajw7
                      Fru9sC6dvULcs70nzZ09nzOxvfhhj72M+RW9ONO1vADWgbs0qYa9bbycvQ3nkr0Qriy9QnW2vWik
                      S7xBSbU9qz+pPZD8HLzTzjK9038svabsFz1AISC8D3O3PYDHMbw4J9S8ys5LPRpnqr1GZqq9IKYb
                      vQPRyb1qmFe9YEnzu5REGL2Vj789sHwivEQp+zxpDZA9YKqxPDAILr2VisG9QIoPvMO1sT3Alme9
                      gBr8O3oPk73ADp86UMcTvPBZeTzAp1O74q5uPWkEnD3SBVM9cmpaPWzTqTzyGgE9stcWPSFnyz2z
                      PzO9rpULPbhphzwAk605UEnFuzchdL1AIXg7u7amvQemv73nDiO9m9esvRS0nzyVqoI9QgIFPUDA
                      MTxeMBE9T+KVPWDid7t+NZO9sIp1vFLGSD1CnX89WiQNPfA7V7yg1Yc70OOnOxe0Mr238rC9YTqN
                      PYTa+DwuLGA9+uaivaY0qr3iAR49wDK/PHMFaL1n88M9cO8IvUdTRL1P+aw9WL+pvXJXLz3VRpE9
                      CASpvTLhCT1HhJE9IHeivYonYr2g4K+7lCjbvJB0Xzzt1JI9AzNbvWbNiL1uUzQ9aHU3PAAOWb2a
                      kkG9FV2/PVlFpz0q5ig9EG0cvIAu1rtUda489TWDPeQD1TwNcnC9WmN7va1slb2Y37s89TSGPaxP
                      mrwANgO76IGAPHWis7147p29gMJePI37Pb1oLZs8iI7CvVrxV70hrMY9qNe8vRDrEr1EGgK9stAK
                      PfiYkTxnL5A9MklBPVLASj2ZLIo9J49Hvf34kb1ST2g9DCmgvP4LRz3w13s89IXpvABtZ7pbSrC9
                      2vQ1vVEorT3oF5u9r8TBPSygo7yIQPa8wGaePABTrzlvyIY9tefKPfhOozyAntg6dzuXPQlRkD1E
                      q4u9SCanPEL6dD1nwFO9gumNvV3Ll73wZRg8DmKmvVg9YTxTWJW9rEe4PN5zTT0Al5k7iqdwvbPY
                      rT2aDzU9obmIPUyNkjwhYMU90MtlPMDNAbzbj8A9uISfPLPArb0s5ge92iFAvRcKqD02TkI9Dza0
                      PaphQr2KCp697WqtPdg2RzxT+b09wLUdPMihw7wApTA6ojtwPSCpprzpJo09zhByPWo1k73XI4s9
                      EJJRPLxF7TzYykU8IKGOO4jQyLxK20A9RpITvSaxXz1QdU68vU+lvej0vr3o08m8YD61vSjj0rxO
                      yX09jAylvELWbz0kbPY84YyaPYz6mTx9Ro29meqmPfyxAb2UWdC80xu3PZS9zDxAsEa9mFUVvHsy
                      yD3aOj49cJi2vTZ8VD2yaU89KIYEPKlniT01Ebk9wX68PQxEqDzoJx48cR3KPQyG7Lywbh6811pc
                      vYApBrrbtJO9+t2AveMpyL1U0ta8+A+9PECKTjuglPk70EO7O0qvQT0iTnc9ThtFPUTm/TxghMY8
                      Ki4ZvehvybxFDZo9WMlavBDMa71HPIA9GBOyPJe9Zr2wY5G9lE/fPBqjfz1Srra9WtxMvVdPUL1i
                      JAE9qCv+vF29H72auVy9ADiLuXbFJj1SJnw9PfidvQv2iz09Qry92O84vBGzkj1ogra8oSK4PVnL
                      tT1qDWk9ZNfjPA3rpL0C1io9NO7zvBKNJj04ObK9usRzvR6JKz11u469s7qKPdI4Uj2J37w9AXCL
                      PVo/AL2oXzY8NBy6vJj1SjzEXxG9IBmnOwlerz0pmKk9rJyjvB1OSL2KDlw9WhIVvVQt/TxSHH49
                      janHPbv4pD0VNKw9X4W+vWcNvT068ia95gOWvY/Hrb1ZdcU9eWjMPfGbkT1j7Za9eHeyvF9dpz1G
                      WDs95fGJveXdi71xdbY9AoJXPbCtVjyKnSu9TbiWvcNjQL0A7748Ld6ovVWKiz2SoBM9njhnPTJ4
                      xb315749J219vXHirz3KNIW9QP3GOgzMy7yX2z69c26bPXnvkT1UoYK8zqySvaSb8zy/66M98QeZ
                      PSkflz1S55a9U6Mave2Wc72giPu8oIaWu6LtCT3SMk89gko0PcDWXTvVv8A9Z+WXPet+tj0aiIW9
                      dY+evZN0rL0imSc9KxqMPeytv7yQY1K80920PSMjUL2gEk07mCK+va1sQ70/fca93gZ3PTSB2rwX
                      jDK90hY2PdP1mb1v4Ly9G4nJvWL/aj0+4ai9ytSevfDocrwTaWy9qROEPRZJQD1vUMm9GEz7vGQU
                      ib1BI5c9oAa6PMjJkTwMEds8ItEWPQDjZ7uWcUU9zc2YvTOUqb16+j490yi1Pa4Tlr3Xvco9hmcb
                      PZDryL12lRE9HTazvV3Mhz1YYtO8qjYhvQdtxD2zCh29o0ONPdAFUr3aDi+9k4ipPSEitD2gr+M7
                      MGp0vIrkQb2CB8i9YOBDu2ZSAz2/asc9KgVAPei3tr3qoFy91vkFPdoPxL1JycI9ZQCsPQAFEjsc
                      cNc8une8vQ/evL2I7Ye8+gXJvUBpXTy02KO8P6ewPZStAr0CQWs9Uz+NPdokkr3hq7U9OLvdvMI7
                      kL2+9zI98CQnPGLkTT13eJc9vO/1POVNtT0llr09wEtkPNbYFr2AJlW82WfBPYJEIj3Apqe8M2iS
                      vd7eIj2L5Kk9mG7EvRJ2Cj2bdJQ98LgUvYpkR72yXMK9wCS1PHbVi73wYqi9wdKxPeAiyb2Qyiq8
                      QYi0PVPEk72gvJk7UER4PF/kjD2zD4U9xpgJvWNltr23qcY99Am4PHWlvr26MKy9ZluRvcF/vT0T
                      tca9y3GmPdNkqb1177q99p94PTCcKjx+eHM9Tj0JPVsvjb1AjSe7mCmVvAncsT3Ay9a8p4+9vRKQ
                      ej2MLM48YwRBvVCtWzxGnhO99pYHveN6P73StLG9JzQavX5GTD2CzXw9pbHLvUKCjL16Bhk9NqYW
                      vVD5F7yX82O92pYuvXD9pr1AQbq8HUB7vWOJnL3gy6k8aGOXPP2MzD2KpiU9AJ0cvWjLnr0KIDy9
                      QGZuvbu/oL1QIcY7jkF9PSYTXT0tIGK9Sq5jPSdCHb0/eJA96NcSPJ7Pm7202+88d70rvfRRzzzA
                      G+q8Ie6JPQzyF71IbcE86dikPZjPVzwAsCy9Ud+CPYJgHT0dccg92YW8PX7AmL1IPtS8DcjDPXcH
                      Gr0Eaoq9Pb20PfuJyr0A1Eq901tIvU+PxT2qwaK9H7mVPV3Orz0U8928am0tPc0Zdb3lRME9gKoY
                      OoCscjy0/Yi8SF2GPPCYdL00O9i8qYGkPUUmnr3BwZk9TehfvYeXJb3GuHE9urEcvarKhr2i5Ao9
                      KgpHPTA5uDtAua48fcdAvWl5vD1935S9ouxtPUish7zzJMA9BLDRPALziL3VTKE9+qV2PfBDdzwE
                      W/U85t8gPTCc4Dtp6sA92ll/vaUMxj2ro6k92mZ7PZjghL0xVqg9zZy6vS0SIL0AoAA5rNm9PKPW
                      wT2okFQ8AGWtvW2Vrz1JB4I93LKIvZ1UtL1xI8c9jiCXvfh9qjzA1Gu8AcGzPSivhbz3Cqg98IE9
                      vFz8D70nIag9TBj4vJS44rxSuI+9ulSfvY8/sr0Cpkg9RxAlvYAU77yx27s9K4O8PTd6lD1qg5i9
                      DeO3PUogBb2w1mQ8erJnvb6IBT0MJA+9+CaDPPA6Ur2iwg09R4XEvYAMT7yM9JM8wPsvvFGhmz20
                      2IQ8qXmGPYwMsbxQ8LW7KPi/vPS7nzy1np+9O/2ZvRj0XzyWbgy90I2tO+o3Zz2ANTW6Nt0RvQDd
                      pjlLmMi9hLeMvQ8Nxz0tcXa9QhfFvUPMjb0w1X88qsthvRBfUjxg/yy7gjl3PSiH6LzQ/RG8E3Vv
                      vW9ZuD1hn5w9/WWevXppJL36Tn496I+UPJK5jb2onow800txvc/lyL0ztHy9ji1pPRELxz0LkMm9
                      poIRvWJLnL3/1a49KJFrvEBvgLoSwmg92dmKPVDWbjzERd08YZvMPW1EZr2i/m89MyO8PZofDb2Y
                      Ggo8gB18vORN/Dzw9kg8MUyyPY7eUz3EA/Y8GGI3PBwoEb3kcM889jRzPZd+Hr2925890ICqu0p4
                      Tz0BD6092/61vbyjFr3a/la9DBDAPLgmlL1DG8M9QNA1vPeIvb2AP826+kcPPbafSz3ya7S9AGgd
                      O61Cn73B6YQ9cJ4tvEC9LLxa3Dy9GZmBPV5Wp72qvGm9AKmaOywyFb3tCRq9TFbHvGCXubuAzRY6
                      nkQiPVLWDT0jfFu9r5eyvezt3bzSwlY9mNw0PLV+mb2CznU94ObwvESk9TwFl4m95CjfPHSO+DyA
                      blA6FZGrvZZGYj1Jnbs9UoCkvTA4l7stusS9dhgHve9OsT0WUVM9fgcWPQCyo7qSSL69xzCyvdoL
                      cL1oeL08gncHPdX/wj11jKs9s4O2PSBTo7wHw8E9s7+5vRrtC73Qg128T7SaPbN5wT37WZa9vaqY
                      vTCspDugu8W8iP+EvVUoiD2O/zU9MLxPvGBMhLvUDsA8utwqPfenyj1ATWU7Q5+iPZDuu703Ccu9
                      MIqwu4rTaD1q0T49MHhlPOBasDwKLzG9k+kyvTbnVT1YiKK8cLcsPGnxpz1Qjra9VNiTPJDKYrzi
                      3VQ9d5EjvbppFz0Q/1O9BstjPZgdRDzQUnK9lAHTvKVDgj0qory93SscvT3csr0Ec9I8Yx63vaJ3
                      zL0ZH549AN2kuf7cGD32ewS9qVySPegWcTzxNLs97qybvdCYiTt6sRM94jVKPW3zs72Mn4O9Dx/K
                      vQBOPb3QOv87A+M0vQDioLuAzXI6GLMgvPIzUj2wgRa8E6lEvUXzvr2Qtri9IjJYPfqkgb1Udbw8
                      8CxPPP8RnT0IjZa9IjcdPdIpND3A/Mg69isNPan+xj3QkUS8yEagPPdHrD2pFbc9GCX0vGfClT2Y
                      Dqy9SAGKPHAeLL2mmFo9QPsLO+qGMT24x8m8ABDBvDkXuT3XeiO9CtsEPZkTuD20baq8EEp1vKCE
                      Z7tKUy69MCCXOwOsar30eqy8Nw0ivf1kgz0AzGK62COSvUIGMz2HFli9gGK/vABcfLmGKi49oGsG
                      u+MJYb0kDoC9ymZOPexp8zxQNes7zM7qvMZmJT3wAWa9/VvHPfCNh70Y8ma8TU24vVhcljwqi6+9
                      vXqzPYvrvz2UAwK9eCzBvad6Vb1VDZ49O2bIPUgN8Lw4PJG8y9zGPTgTyr2f8K691ayFvZiXRjy9
                      LnK9JJ7OPPHgiD1dWa09BZSSvcJHKz1Hc669KpY9PYNuk70/m5k9kE96vLd8ur3g8Ty9KBw7PAAw
                      k7sXFJE96MljPIBVNDrelmM9Ao16PZ08mT2sL6A84CmxvaA2mbtUeuu8bI7nPMjMxDxwUl+9xvFY
                      PXm3lz2iW149Mq5DPYJZMT20sJe8wpMoPfNktb2fP7C9kCI/vJgFjb3RN5E9wLYFu5aXID0SGiA9
                      QfONPWrACb0tY0i9PdB4ve3VuL0hkqo9fQIjvZIXdT15soY9U/eFPeNQJ72ABPq6QkR9PTrShr3Q
                      tQ+8PBz8PGyzhbza5Xq9gtcMPXmqvj0QVR+95PbUPGIoIz1g7se80N8jvHNekr1osMc82PdqPFZO
                      Lz0awXI9VIbdPGpQbL2wElO88PATvff5ab1hcac9EjJCPYpZkL0oKU+8jk+LvVBSODyogbm9eNCf
                      PAACmLoiETg9GlYGvYXahj0q1Iy9HF4SvTvVuT0ikDw9cIi6vbC/vzv69cu9jIvcPJt4nj3JCaI9
                      ft5rPWB4kruoopy9puuFvcvitD3qG7+9wDJHu45DQD1t2KM9wgGMvdcEuj0AizC71ECKvHuakj3h
                      OJQ9YAECuyi6jjzWL569WmAFvYKNqr2dRTe99/aaPRByW7yDT5M9iudrPQ1oZb3AeT68aHKFPOCk
                      u72wPmG94pgEPdIhXz13Ma89mvYCPVCEfbyIs5G8KGefvCKtez1Kfna9c4CoPSgC5bxASA08AODr
                      N+yV3TxVg689shVlPehdgTxAB4463idWPUhJtTydO6I9AINvOnL3Pj20b5E87hQ5PQjMgzwC38O9
                      in+7vaiQebyQSQ+8UvMbPfhc4rzOh2Y95OEBvYx+0LziYww9jfBSvUnYmz1sKNY8+RmlPVLuir0+
                      ZJa9WR62PZAxyL1YcL88DSuzPSPbuD1QAv07IDu4vdl+xT3tGC+9S13Fvffmoj1B1oo9LXQxvcA1
                      NDtsIvS8ELsRPDFUoT1I7Yw8bFWMvXgh4ry956G9vhwoPQO6Sb2g1vo72NfFvcB2bbuiihs9W9ad
                      PcdrOL1wFBc84DWAvfF3lD2cyOM8KxWgPQ1Okb0acse9HJziPIwUtrx2GKm93LuJvT0grz0NSDe9
                      2LRkPMdpKL3M8r48opxpPbDOeb2ivTM9+gyFvYC1rTz5msQ9x0B3vfaKAT37FIE99DPbPAJ8dD3w
                      W2C9SucBPVhxwb1dYcO9NPGAvEl6rj0vq7K9IyxOvaB3LjvQcxS8wNNuvWPbjT39o3a90oiEvasU
                      sT0AblO78Dc3PFvyiT1k6uY8RYeOvfQO6Lw5TYQ9a/uBPYQ77DwT0za9IGOIOwsplz0o8Om8Uaat
                      PXaZMD0A9KW9ALQSvWBqs70QxzW9GAaYPNrybj3A3sm846dVvXatnr3Yd/+8GvEKvY39nT22Qmk9
                      +dqXPQCXwTz9zo09/fuMPUPqwz2l0Zq9qKl1vAKSST0VjKm9kgRNPQBoLzo6Vzc9AHRHu/BJqr1g
                      1p48olkXPaiT+7yGPws9dmhIPRhkwTxxAIU92qhYvR7aVz0AHHc6gMR6vK2XQ72Ukok8cFCLveKw
                      ZD34cIk8yjFrvWhlijzQftE7oBViuwwn8TxA0B+8DcCcvYp8lL1IS4U8BzGyPd5Jjr0IHYC8IJRm
                      vdJaub0wQ8k7Z7ZavaCAUr2bHsA9huNKPaAlWTtgxQk7P0SfPQeYM73FnZY9TX6YPWlRlj2C4jU9
                      aKIqPJCdBDyA9rw8zPC+PDNdRL1PFMc9cISevcAqULsusoe9o3kjvToSab16MKK9QiCnvWARiDyt
                      MLa9DrVrPT0Rcb3Y9a68Mvk7PUExiT0sRuO8QKhtvHTssDwaqio9KpAAPZiqwrwsBPU83vCTvW2k
                      gj32LHI9WlaxvQCM6ThMQoU8ahy9vaorAL3AxD27f2C9PZ0utb3ULdA8CgB7vd8MlT2gTNg7W3Sa
                      vWUVwb3AjEg8QKEkO6IdRD3qxLe9qBUAvH57bj30+I08wE9XvOgXg72QzCU8eq67vanFkD0gXpi8
                      IiBQPQFPwD3uO1s9uWigPfVfsz2Pb7s9pnRjPSik4LzeHVg9yWydPb0rlL0D2r09K9PCPSM9qj0U
                      yog88Ig/vFraBD04pZ889tlKPa+LxD23DWa9fq5APeVftj35oJ49316uPdkpxT1oPpa8ykUOPVpK
                      cr1YK9O8kUuPPUJOTT1Yw9e8l5KXPdX8kT03diC9gBH1u6h2jbwfmcw9ouC9vbIsTT0iKAY9b7+u
                      vdICCz0wAxO8nrZkPWAdX7t/JaE92YW1PaYrPz279sa9sJzBu4ZrWD0ttzS9aVe3Pd7fqr3ZJ6E9
                      y/29PSyi8rwAtou6UJgqvKKsGD1Lu4A9VEXMPGaoNT3NRTa93dywveY/GL26mDG9uTGWPUhbwb19
                      sj+9mN7CvYA+mzo+3To9VAuTvLS4zTyBc4k9xqxIPUoMxr0muyE9MS2RPXoeu72UyoW90eePPQ/F
                      vD1QDw69gn6evf6JqL2ByIs94JzsvO8Bvr23Z2q9gpcMPbDcjjug6jS97DrsvBMuuL3UgdK8ckpt
                      PfY1Ej2Asho6lEqDvDGxjT3ooso821a4veVkvD0gdv07YmeRvQCq1DsQXRW9rq+evS3QnD31IIO9
                      TEWtvOPNWr3O5009KP8rPJcwhz2AYIe8YzkdvfJ/JT1W4JK9NXaaPfyW1DwgqkC9yJzZvBqnCD0E
                      ePk8W6aePeifZry9McM9QvQ7PVqHAr1HfL+9UhhAPbn4jT2IQPu8QMWFPGDQ1rxscoc8gsyJvQoN
                      dT1zybm9VJDKPMgIkb2rC5Y9Vz4dvd4WJT39wIA91JGNvJBGGb3GIAg9IF+XvWqZBb2gmK+76QuL
                      PQDTJrzzh6U9/lAWPWClyTtNO0a9g4Q7vRLeSz0VaY893WmfvUNpjj2qa1o9EJkBvAOkOL2GjxA9
                      IEevvO8/qD3WukI9KqM/vSjqZby7urM9CHaNPCieqrwQYm29Cg0PPQDN9jtCr5m9SEvEvDN6tD3A
                      Ala9BYafPWgtKjxmOyc90mASPb4UFj3+wAA9oiWdvfbel71gvhg7m+iwvbZaCb2G4pG9ACePvUiR
                      p709HmO9mDeHvWuOuD1FGpa9dArxPPTNsLyvy4I99KCNPKT77jwUvMQ8eBaHPNLkKz1gFZw7216y
                      PbcCyr1ojAO88gs8PaGXtT3A4Kw6GqwQvYCoyDrDg5i9KjmdvTSzm7z4K5Q8e0GGPbegcL1oS6e8
                      mIYNPKi0tzy3O4c9DQJrvQB1ML1Ocoe9tvIVvTSUxLzeLmU9d4xuvSg0xLxf7Zs9NYq0PQDAdbrz
                      UKw94BkKvWCyg73S7xA9DqYrPXLaIT2oVuW8p35Evd5PED1XU269ANZwO2idGjzQp729KFO6vbsx
                      rL1Q1bK7QFYBO8fatr0+Bm49bQiXPaxOlrw9rXq9HR+bvQ2crb1jzmW9JL3bPGRH0DywFz88F44r
                      vRBqADwfIq+9vocpPbpHAb0odpu8GqJMPVZ9FL3xsaE9oJ7xuzmAij06jlg9GmsWvTjOs72eSX89
                      KNwJPN+dpz3AfkI7MNgpPNhUgjyL/rg9AdquPTolw739arO9KPxyPBS3r7zos4W9DJyjPNmekT0N
                      uHO9KhLBvcAXOzzR9ow9Ukc2PcChDL0K8Tw9L0vAvcxmib3gEr08GqUbPRJ7JT33qGe9dVe3vXi6
                      /bybvZ+9Se+6Pc0DkD1Uooi9J5WgPQD0h7ygrY69oItbuylZjz2SZ7y9HhaVvYDvqDvUH6m8k0tc
                      vYCTZ7yAWvI6/t0OPZAuHbzC1yI9EIeHvUD5cjw2H5u9+3jAPWIfET2jDSK9lggVPXjyxjxU4NQ8
                      UHuXvajIRby2uxM93/6jPTLryr0YWra8TFjbPLyXEL15QZQ9MPsIPIKKcj3yE6e9MIPVO5iqnjw9
                      vsk9stOxvcC/Rju+IIS9xMsPveIAdz26umM91xhPvbCXy7vmrxK9BJOGvRboTz20o/O8qU2tPeOk
                      ij2yaks9lisrPV0jrj3gSag7A7bKPWFRvz1C91Y9+JO4vN2Xwr26/ri9YAmyPFfvij1FnJ69E9hO
                      vbpraz3/bKQ9PUmxPSfXNr2oc1480VK3PQ3whL0C4XI9qPOLPHutxb0AvDC9oCoTvUI8wL1QvFS9
                      4ui5vcJTtL0A/EC8ukVoPfLYmr1npkO9oYe0Pcd1yj0uyTs9/SmGPS4lSj0KKjA9kt0XPaGCrD0A
                      WGq8wpM2PVrqbD3nKMQ98J5DvUB/4DqQ34K94hisvQjrt7xM8MY8/TF5vYpIAT043oW9aJKPPG6/
                      iL0yfFM9DkkWPf0Fx71S9wI9+H3IvTS57TzsFYC9UASuvRVTk73CMGw9gAh4vDKjvL2uhhI9kYi2
                      PZWQnb1Alqe9gcuZPXD/Wr1mKAE9wSaKPQC5abxNmFq9jmMUPbi0xL0giso8MNEMPLC3Jb2wJMa7
                      9rONvaraJz0nKJc90byHPcyj/LxuO0I9kzo/vd5YGj1i+w89ryaPPfwl8zxmgIO96HoHvEDt6zqw
                      LHY8MqYTPWhqo7wRqMY9crk+PcxsC70JJ7Y90Onnuxh1or1wMnG8USeIPdJ/s7249LO88Z6SPZDC
                      EjxyMx09cyuYvV1+QL2dTaw9aNCFvZZcdT0ML4g8ACivuNdrtb35jaA9wuBdPeGjxj0j6cI9Ag1R
                      PY/UgD1GnFw9gbilPcXxiL1Y8PG88bGWPYmnpz29jTm9ohazvboMNL0dz2m92rQZPb1IrL2SjHE9
                      fN3vPFU5pD0++qm9bpYZPZ+Hr72jpa89SF+jPCM/LL2qVw+9p4ldvUoDOL1vwIk9IDfwu1MrjD36
                      kBo9CrcFPcBWSLxsiZS87AXpPHPSrL04iZe9HWqKPZj/bDx6bgg9NMT5PEOoyL1gbZ69k5RlvYdm
                      d736Lmq9Wv51PWuKzD2vUK29K86evbWpzL0Aq3K7CgNkPVrPe72XY0S9GgAYvSrYa70o4Mu8lLbG
                      vFgVsb2SoXo9R8x1vdhQUjzXE8y9k8+MPRutlD2/XsI9CHWgvM/Gtj2Agcg69Ja2vJDWX73YgaI8
                      0GvWuyg1Djx4Pse8ciWGvSHntT2Zz6o9ZHPTPJJeRT1jt7Q9SO7cvLRamLydHKO9hVSCvX5Vor0f
                      vJM9wAZGu2D0WbsYSYy8dqsSPWO5ur24sqa9gOoYujYQGb2MGIi9MjFBPVl8sT2Yomm8WFrnvKBg
                      O7tONYe9qCY4PDQezLy3a5I9oA3Bu21nl739aY09zX1LvSnZsT30k6Q8SWeBPT2yP70I1rK9OKex
                      PBfXxD1KLaa9WGtwPGj6iTxA7fI6OOuqvcTm5zxiyH49yw+sPYAw77xgFne7MHR1PJBMgL0MQqY8
                      kP5lvACkuDzg2py9wscyPULNRD2uziI919ROvcdccL3qU1i9klZ1PThJmL1u8x49F/emPWrvYT1g
                      wuU7N2o2vaALv7sYyoM8oD8aO8o9br1s36W8S6u7vSngjT2dqoQ9AALuOiIyAz02DnM9gp56PRXc
                      rD2wGp27qDaqvWgdEjwrfaW9LLjdPKj+97z6dWu9cOssvYIPNT26/5q97Z+mPbDihjuKlR89rpVs
                      PWhPATyoCVy8QgEFPXZ7ej1YHYc8VZiTPZgwe7yIfYu8tL3nPNJdkb3kmM48aFR7PLL8DD0xZqc9
                      PXRMvaBLkLvB45Q9QNfvumM+or2g3Wi9XPfSPPU0jb0i1Ao9ES2APdBnw71g5/a70GCWu4gV+7yC
                      WRs99iQ+PRDzADxrFZE9APqjObC5uL1AiBc8gFfIvIWjmb2a+a29roltPfoFnb0YEqi8cuSKvaDv
                      Db1tXjG94fexPQzmtjxdq4O96hV1PbN3oz3S2mM9VtJNPa3ckz1DC1i9ACrkujAjrLsyzJe9YnE3
                      PWpwNb0RAKQ98pcuPVjcf7ygnWs7mWimPdBsa70Cgi49DE2nPDDFtDuldb69MDaHu9Amhb0Ydlm8
                      ep8jvQ3ELL3mp049MHYwvIpjND0AzTC8xSKqPbrMyb3WERa90pF3PQBXMDqsocY8jCv7vBaQWz1T
                      TMS97EbYvNpZnL3Of0o9rdaMvfLog70XTrA9h8xIvXK/fD1U4Zw8JWWbPZENtD3t1Ka9bKynvFBw
                      VLxiBxU9m1mfvUzDsTx6qMq9On4ovc//ur1dzx29wMjDuiAmrrxIiJe840aSveZSBT1a/kI9+H2M
                      vWtBoj3BPrQ9prIRvdQOnjwp9pw9cK9TPFCQsL2F28S9XYimvUA4SL0AdJ48iA3MPIK9cz1zk6C9
                      gMI8ut68MD3HUiG9YotDPZy73zwAni+7Tq11PW1plz2KIAS9IPSHPFmPij04waS99XGavQrijr33
                      +k69LQHEvT73p71WkQ09nyKEPajZiLy89YW95GzTPDxK2DykC/o8CO6mvU1IpL2MPaQ8aUaIPWIt
                      HD3aQj09fzavvbAlvzvQdDe9V7GzvYggxr1Lo4k91LKBvc2Vib1PHK49GjG8vQDY5Doo7Re8W/W/
                      vdBweDwCRJ692L21vPfhhz1k4Nc8ZoQMPeX8wz0AyI+9OJnIPEaZYT2mKTQ90Oquu/zc7Dznq5c9
                      3Vy0PcApGztDqa09oNMHOxXAgj3w+wG9KWmWPfOsar1zqcW9nud1PS3+gr1aeTw9lBPhPIolGz3X
                      Ulq9ygx9PdiRVDxSHrK9KDqBPBHZnT0SyRQ94yU6ve46cT1gva07g2lHvVSqibxn1IU9YzlsvVq7
                      PT0ODEg99CaOvIpSxr1aT7e9ADBhuQzx1bz0weS82bzEPUFiyj1MF548HmZGPU5Zp70qlRe9xMgT
                      vYJkKT1su4c8EE86vOA2xDyYf7W950qDPQDKQ7sv5sq9KCbKvCbROD0YRnC87ELnvCiALLxg0v28
                      6bKkPT73UD0pBYQ9O96XvagLQDzijgM9OhurvSLOxr10bKg86IEUvKUluj3s6vo8bOv1PGgTY7zT
                      CYo97GCDvR6apb3KxWs9cQKtPSlOgz14UIw8CtoxPc3Jrz1DfoI9h2ZBvZfLwz31V7K9w3cmvY6Q
                      BD2Mofw8XXErvbK3o70ouHC8vsMmPQ7FLj2hibY9AHnhvOXrhT2u22E9wEtQvIAYBTxoVGy8kpN8
                      PfjGizxFgbC9YoYSPQTo+zwBKbk9xyqKPdsarj0p95Y9AGtfu+zhkbzESvc8SsAsvfJuUz10g+m8
                      8woivVL3cj1aRL+9ftsOPYM6Gr3rXac9f6XMvTnfuD3uA3Y9Eo5FPaDuPbvlSp095V+NPSZpWT2A
                      IpU6qAqMvFggXzxPI7Y9AAb7OVT5mrz3tMY9+mhyPU0JwD2firW97B+bvCqPSj0hOKs9Aj2bvYDD
                      LTygMbC8Gj54PVitTrzq01A98NkbvcRN6TzdJYC9IxmJPcTWzTyXpLW9jdWOPXA1cL3AVTK8oL/v
                      u/63Iz1d/Lw9WcnIPUPfpT2Mq4u96KQAvGI4cD1gVrq7NCKaPKJHj70qGEE9ADjHvAeOTr0q5AI9
                      8PB6vNZCfT0AaCK87QinvZqbZr1QArm7HdWnvY0OJb2AWtY6CuNgPWAbDb3Aax08gHYCOvufwb1S
                      pzA9wFp1PPoDbb14gps8UxecvYRU6TwksuI8Z2WdPaoeJ72hCKM9s0OdvYDjWLxhG5g9i+eBPShz
                      cbyieis9c+C1PZCjSTzAcBe87wewPaDqO7tCJic9oFUNu0vFqr0gZJM7Vv0ZPQBacrwrmaY9Ieqb
                      PQARdDtYZLI8oHWVPJPSlD2AIMQ61VmtPWI+Sz2DPKi9DViJvZPPnT319bW9PUqCPTDYvbsnjow9
                      58HDPWO1sr2QKXK8fa1yvUwkyjwyZnU94jOOvWf2iz0A/BA5N3Y3vTDVsb1d4pA90J5CPKBO0bxC
                      VzQ9dJvbPJGWjz0wJxy9Cupuvc5jND3xwII9Eqe5vZMkN73OLj89kHw2PIrVb72z3a+9w52ePTMn
                      wT30Cbq80LDeu3rry72UEqy8jAbavOTKDb1NgMe9oMRlu9TUsLxJzrE9ar0fvdBgFbwAa7I56kUX
                      vTIAPT2A2Vq9KgU4PQuqjr2mE0o9RNHePAxYvryKlqa9qyXBPbImEz1iCmg9zpiVvTNKpj0Qeoq9
                      GCcYvBX2yr3nG0K9LXaBPWHBjz0Km3o9onAiPYi/+rxN/LU9rE39PHrXXb1fW5Q9QG5EvQE5yD1w
                      zlu8tHzsPI6Bcj3rmL09wGZYOyZIDb0b3489gPmgOmfYU71o/6m8NzW0vahrdbwW41s90N0TvEF1
                      gj0OE5y9mpxEvbpSOj2zkk29ivI6PWgPn7ytz7Y90iQgPRBbcL0Bq8w9BxS9vQFpgj20r+g89HmU
                      vDWTgD2zJ8e9AN2IOXPLmL1wbxk8YCHbO6hmgL3U3bU8AeuOPdr9Cb0Y6sS9gJJwOtBccLz4Uru9
                      1vMdPajaDjyg8Y28D7qKPQza+rxAFtO8oP54O43gOr3jf0G9/c2WvYA1CjwTLya9pZilPX3zyz0Z
                      LYc9A/ewvSQsAL3r5bm9cCM5PEPnur2deqE96mFYvUDGhrxYSwq8qA8RvNEbyT2yHyI9hFP1PNLl
                      ST2Afic8gGq9vLoUlb2qFxG9UR6KPWO1yD1nxJY9vmCVveDZFL0uRXg9iTi7PepcCr2orSW8+Jeq
                      vHi4kTxFv6M9yx6SPfS71rwA3SU7PLn9PJjSfDz+/Uw9Z3huvdXLvz02p6u9cEjAvZTnB70wfl+9
                      NQCDPSOKlj0QIWW8tpMOvaA+8rvsC+c8OQ7FPVBGMTyW4DQ9NFGsPIB2cr2tGZQ9gXCxPaMoKL3y
                      iTM9Ph4TPcCE2boQf0O9oMgbO92sb710ns48BuCpvZAfArxwng48XTJBvWBMPzuIFJa9G8K1PWCm
                      17yCGXs9EucPPTB/EzyHpl+9gV+OPVsvhj3QZ8a7WzOcveSM/Tylbaw9yUmLPUMnoD2gtRu7j7LI
                      vToqr73jYXW90B6OO9imcDxoqJq9YkorPZ41SD0w8A69Dhw5PRixOrxIWLG8XoAmPYASBby0W9K8
                      uwGgvR4WAj2ygRY9HfMpvbIogr1ySUU9PbDLvTmklD3oqYS9htVGPawBijyY9Sk8mJ/7vHd+Gr2j
                      uTu9sTKpPbBIOL3WBSY9ug9lPQbfaj1QgR690A2YOw4vir1AZ4+6JndbPUoNIz3IUaS8eqzJvWl4
                      uz1odyO8IWiCPZTHyLwQyBm9k8+1PQCwezgDAJ49jBinPImfwD1gB2S9IwlRva7Vjb0Fz7A92P0+
                      vD2KN70T0i+9yos5vQCw3Lns2OC8HoqUvSCPyrzguPq8WIC2PIgev7zXj1W9qG2CPEkkyz3gONO8
                      Y0Ezve2usz0yDDQ9dtllPdCcJ7wn15M95OTzPPcsab09Vbu9LcxnveApi7ug+uS7NUKivRoRdD0Y
                      A7e9gBaivTBEc73sGYy80NpPvEAAtrxjdVS9cv5BPToAL71x3KE9wAogu93svr3zMIc9GNWyvL2X
                      kr1gTse7fRfBvRcWXr31o8O9kphIPZBVwb2q1ia9VVyqvRESvD1H5hy9OTO7PaEKrz05dMA9J8eO
                      Pch4hL2c3RO92XyyPeUfyL2qOGI9mKMuPFCtqjtmxXY9NxeYPWgN17wzxpg9oO9rO0PlZ71ZM8M9
                      OkJSPYASPrqCcFE9ezqKPcB4Bb3ZC8c9ro4aPTONsb34/qO9nc7DPdnckT3gD6K8ZWOgPQAeBDyM
                      XZ48SfeGPaKcMT1tCKS9H6KQPca1D73AXwK7gHjoO0LAgL0qwaS9QPFOvDi0ujytSoy9lBTIvA8Y
                      jj3U08y8KM4KvK8czD0kavU8A/SzvaOzgz0iQWs9LAC6PIDskrxpEp09egE6PYEEwz0A/ps8rdip
                      vSpXmL0yF3U9DL26PKsRyb2wV8G9aMxMPOy2s7wT3ia990+KPUA5b72NSJW91v4ZPfAubLyAhHG8
                      1pE1Pcz4wryADdy7+RqGPS5zRT3jQqs9wXKwPdT9/TwgXpM7wKp+O6pWOz2gBZk8l55ivdeyfr08
                      g+Y8etY7vcN2Vb2acjM9ECU3vVeCeL15acM9Vkh2PfTCibxtR6Y9+sNyvUKQAj2pvYc9dB7YPHJT
                      HD1jlR69C6W9veBM5DtUce28UfmFPcA6T7ujoGC9AXHGPSguxb3yubS9wpAqPTBvVDxnVUi9LcKY
                      PZlxsD3JMqY97EDtPO0YgD2aBR+91OaFvSmarj36hMe9w8qzPXoJiL31D4Q9OuMUvS4DAz0DQjG9
                      ZLT5PH5naD2gVp27oD2Eu4DZwLts4eW8DVgqvQCSYbzD+5A9NdeCPZ4neD2u0gg94u2fvULWq73D
                      wKe9AENlO6xSpDzPsrs9QuRgPZCrYbyQvAm8oJ4dvSz1oDxAs1m89eWkvVQTnrxr4ZG9w1bCvZrO
                      Az1ls7Q9rdFNvRjjKTwAbno7g+qMvdDND7ysRA+9Tqs1PVXcpT1445S9HhYMPYyejLyf2Mu99rYc
                      PbCQjztqChw9D/e+PctxhD2jnp89+dyrPc2bO70FM8A90pRGPQJDFz3BSLk9MqN3PRsPkb2v7629
                      kPF1vNhhjryNZ4I9gJr1vOBZwjtDZmi9MpwDPbcSsb13eqI9hM3NPBoRPL1Dl8e9qE8SvNcIR73A
                      k+S8EhRbPUZqMT39yaG9F1CUPaM6wD0KzgO9EN5svI02oz05fbw9vRscvQLNQz1sHvi82g81vSYg
                      Sz27JIA99M/BPN5EKj0g5Iw8OKKSvfT8kLz+6JW9F7uiPYLIWT0S3k09gAiHvEYJZj3tcS+9Vj4I
                      PbvVlb0WzKG9ANLWvJIjID3VU6S9YoVrPeFclz2vyoE9ADfyvJf8pj0BcLM9eSG2PQK2UD3o/Um8
                      CuIRvepJZ73YcqY8kmQdPeBhHL2oaau9KM5/vFP+pj0q/3y9Qp7AvWj1ZLwqtmw9OSzGPRW2wD0A
                      7mo7opNuPQhRmbwmBJi941GEPbNlkb2TNqI9QIu9PIRB9zy65Cm9U73APXK2Gj2A7p08LfuPvZJn
                      aj0BJcU9y4eXPZqrVD1o5sS8UGTXu7dRvr3GEJy94F1tvQhvwr2N9I89GjMoPZB/ZryaDRy92ixg
                      vaAwlr3Xg1m9qOV5vKBVo7yROaE9olwNPbiSm7wxxJo9BvGqvbAMArxg0zY7AKx3PHVxnb12tQs9
                      3Z6TPWLWez2IE6Q8L7HHPWF8wD1HME69wFWuvJhbfbwAsmg7vcyYvUifgr3qvZC9csd4PQyg/7zg
                      DNi8lo2WvVL7gL09qoW9KRSuPWBkIbu1u4O9U6gpvS8drD3W6ys9AKjJvXO7fr0w0oq9Bq06PTHO
                      vT2ART48Ur2VvcBMNr0Pb7W9nn6LvXoiPj3TrYY9e8G2vXBelb0MSOq8dp46Pf22wL3DSDO9mgsK
                      vYbxXz2klf88SAnMvZWznr3zz4s9F8+2PUNlQL2tEZO9GZ67PYJSez0FN8y9swy9PaJudj0+w2Q9
                      LFu0vKBmaDuGKXY9A4GRPaLzr722lQO9ipsSvZ6aET3QpGm8Q+iTPfKzIz1oPeq88C0BPHgaxL3d
                      Jsq9nMKDvXt2rj2YO1Y8FU6gvXHqyD2adB+99lePvcnppT3jVL69UPxBPJ60Mj0qRZa9kyQpvZbN
                      Rz1AljO7dlOCvd8AvT3m9lM9AL7+Oh7qYD13Cy+9mraivTpVXz2d2ci92Hi0vdIMNj3Qoro7oE9F
                      O1D/mL0abAA9/ht/PQDSJbs31yq9GWWuPQzZjbzH7nG9qoV5PXT4izxV2JA9BpuVvUZLBD0ynyo9
                      YCYtvU3evz1IL4w86o9avYZGpb2AuP+7Ie2hPXojAb2iq5S9fcyHvXB2xL2b1pi9iu85vUzlujxA
                      ue26UMsuPEDbdDvs1O28eosHvfvKhj0YPpK9QISWPD87rj2CGTA9MamQPSYQlr0goUO99FDIPNpS
                      GD2qCEE9qUOtPbQRhr3AEkI8wIorO2DOEr36P569YqU/PX7wEj2IiMC8aDo4vDB9N7xgZBO7+Bq+
                      PFDu5LsUPNk8HEESvcomwL3W6149ZLrVPFSw7Txo9i48xCTaPOOUzL0ymiY9zVfGvWEpsT3Ga6y9
                      QMtDvNCmO71Y+/O8+rR1vZjpWLyMSeW8sYuuPdAyKTyyOzE96zCuvRfZfL0sWqE84ArrO5i7YLzT
                      RyS93oUGPZyai731oY893qChve3ZpD0uxWc9Dci8vb6PPz1NYqm9YVbDPZb9pr3xp7Q9mOfsvGB7
                      i7whvMU9svk1PfFdoD1mJGQ9sELmO3NzN72hZ5M9i7CzvRB/r714L5C8AWPEPfHRwz2Ao626ZoFn
                      PSKNIT0gpou7b0SAPRm2jz3rLo69S2TMvTIXUj1Rvq092qqevQC6AL0bQ6+9NU6fvfWnj70AbOS8
                      WqssPZlVqj2I7bG9umcHvfYAAT3GKTc9SX+DPde0Ub3Q0zG8xHeGvUxpgTzH7ca98CtCvPBPCbwA
                      jl07tOGCvH7rMj0RJMo9APBvvFCeJjwNjIa9WE+8vBSdhDwo2X48mwvMPdiWx73ArtC8lFr5vGp4
                      V72Rh8E9zxObPX40Pz272ag9k7VVvfN8wT180Ai94hFVPbqDND0LKpk9Up3GvQNquj16EH89kt9Q
                      Pbc1y71eaxw9yGzJvAZCBD3ypic9c4xPvWAy37sTsLk9Etqcvc/xpD0pqcM9nX6+vRhsojzbnKu9
                      APYVO8AcrboKQ2w9AgNcPchX2ryStAo9r5bIPVIQtr0HRog96nwWPdunkr33n789EiQlPYodY72n
                      oz69zVzDvUpzJL3ocdO8OGzBvBEYxz324Yu9DHaQvGjo/rxgKDU7J0+JPZ2gsT3ungQ9Z7ywPcdj
                      yb1/dq09zmEkPaAgprsHY5w9qOEZvFhcSLwsRpC8wL7JuoC5XbwSisG9nc5ZvVnRyD3XF5I9uHa0
                      vSFYvD3fg7E9AAa7vVhaE7wlvZy9SPOSvTZvHT1Jr8c9wCY9veBorbuegCo9A9k/vTxrBb3KqnC9
                      0N4hvVJ8fz2wP2e9jBOjPCAa5DsULNM8yoc1vWCZTr37O8C9cgIlPd12TL0blZ89LW5hvXrSmr3s
                      fsK8YP1ku001vr1vvJw9ZTOkPW47AT2ATAk8e+vKPeYIdD33jq09OH6gPEIUfD1uR6O9LK+GvYAT
                      nLwnCpQ9dB/UPC2EuT27uak9deOJvRQEib3zxr49lLSYPAC7RbwyeWk96jNovUhLkL258bI92Dev
                      vOGHkj0394Y9OrYRvecNyT2z+Me9+h7DvcKgQT0IIou9YKmSu5Pgmb1tm7E9cbeMPUrCl70AX8i7
                      bArKPFqqCT2w1WM8WAaEPLoxeb2AQY+71t4kPXcqIb06RDy9Ks29veDWqrvA1Li6ePjAvCVtiT1d
                      FTy9XtAkPTA+37tM3JK8GJ2zvFdiYr2oTXm8U7t3vYJjcD3oopO8zB7RPOaUBj1SA6a9BLsUvSDQ
                      5LwUE708J/uAPRgjjTzNvVK9AvpEPceRcr0omMW8cXjLPRDlFrxnMTC9LnaSvQBisbvqVba9H+e/
                      PWoYub3ibCM9Hy+vPdsllr0NJri9/NrWPCDLrjvKpS290skuPQCetDvQ5as7E5KkPWBZCruwKRq8
                      yjDCvX1jY73WJpy9H42LPbeQPL1g4pm9AFJ2OzDWxTtg6G69dwKzPckJmj3ASLS8mN8IPCgcFbzn
                      zqy9Kp81vRpuVT0nMjy91OTnvCMLeb0v28o9SS6bPXAetb2EYc48M1KtvauOyD3f6MI9oPvHvIHy
                      yT39p8O9KLLLPKQ50Tyj5LK9MJhqPIxKuby6TzW9Ox+iveDXEL0fpcI9b86hPbefrb0wo6a9QPG+
                      Oh6fhr35cJw986PGvZkHxD1AtHS7+IegvLRUoTyA8uO6WFaQPFzu1DyeNk89SEmbvcpRbz2yqHM9
                      bFSavJrtur2mF1I9ciFLPazDg70oqL88Jmk1PY3ZWb1gVOK8MijJvWhXJbxqFGM9y6ObvRuHmT3d
                      epk99ReUvUxAmLzYp1K8MK6avcM+Jb0wgpM7kDQ2vGq3ST2FX6Q9hj9oPbKYXD0yvjs9WHWGvBSW
                      ujzjkli9z8qLPTAUjLuRkqk9jlUmPXDyuL2NdqC9c7imPXDbDDxlmo09BjkVPbeInj3APRy7wC4Q
                      vX4eVT3AGgK703W3PeaHdz3oVcC86MU4vKBUZDuAVoK6fSCJve9Mrz2i/VQ9tEfwPOKbYT1Yc9u8
                      3EENvZ1FLb1iL2U98ioYPditjbzMNYq9sUy+PVBLtr0QGiS9gJpJvGhQlLwXa6c930vMvcm3xT0q
                      vnw9G7PDvRIIAD06S5e9lPmAvHfvsb3g4Ii8HcvFvej/Tbw+LAs9DO/2vJoKDz1JILg92BxUPFAB
                      Gb0as2O9gO/DuuBG3jvap3g9BqxkPQmzhD0MV968iK2WPPP4q70Ytkq802ypvW54Hz0gByC9rp4/
                      PdcTLr0aLF+9Nl8NPbtDw71Ym0A84lR2PbCyNb1q5z09XRqvvThl/7zDAFe9rIyrvAD6xLyF5Im9
                      0JfIvbarKj1AwRG8eQHGPXKPYT2DqbU9QdeEPep/HT0zxmG9dxOvPQCZob3AILg8q9OtvWU8tz26
                      AG09HcaWPVTJ1bxBqZY98iwAPX/vhD2Hon698FV5vGAtSbuweAi8avh0vbcZkz2RJq09LR6rPfLt
                      MT0sTeQ8iGbpvKm3lT2SGrS981vFPdjXOrxs45i8sKdNPB2vqr2nJcW9b62wPVAiabwIF6m9/Spc
                      vVPfJL3Sg1Q9gKHLuvhByr0Xe0+94wzAvbddkj10+Qm9e1CgPfJ4PT34PqG8KH7IvbDEVL2oEeC8
                      mwekPfBbDLxMmoy8h7HMPeJaTz1zN0y9qvSBvZDbGb1WLJm9Jip5PcIrJz1tJGK9Gpl4PSiDn7wf
                      Q689MKHJO3T7vzy3kMa9tMvHPFLHcz0Wmpm9m1aQPWOwK70Xw3G9wIVZO4CVeTp5RrI9B8SiPfmQ
                      vj1dd7e9l+OyPWMukb00a4+8k1fAPTrDVr2CP1w96itNvc6hAj1QWy28sXDJPVLaHz3jgKo9pUW6
                      vVpkNL0YWNK8GEmWvKBSlzstaDy9Z6jBvadQuz3Yq5i9WR/CPWB5bzskF+Q8r7PDvfnbqT15mcM9
                      sVqlPZhsRjyZALs9uWWxPc03mj2TL7W9ZwuVPZArYL2S+xk9KmglvTabQj3Qh9C7BeKlvbUsqT01
                      nZs9DYW/vQwYg7y4ib88guuUvb2iN72CCSQ9sOP7O7J2yL0oIaW9po5/Pc7Zp70wbYi9zgtPPYAY
                      lbr21nI9wAZcvT1qb71gKbK8qpFzPREihD20hwu9XQFPvYW8pD3SXHQ9cwO6PUfauT3AeGa9UBdc
                      PF/YyD3DnqE9sPeEvXN2tz3mXQC9AfzDPUD9wzojlr+9oMSBvLYkfT0Je6I9LhhLPatroj0+twI9
                      wIrDvXyDDr1LxLU9lciKPcRJ2jxRjos90BWYvb7GDT0AY5W7wik0PcA3pbwnH2a9+HG7vD9dlz0w
                      zF28fd5DvUqBJ71Tu7e96hJSPQAo8rtdwpe9S0q7vRq1KD0uCyo9hrgMvYCTg7zgG8c7wjxiPUQp
                      A703unO9gE2Svc8PjT3EKtM8MJzLO+Zgor2ALE29u9qGPVo2dT3Tia+90gM7PXF9vz2Vjbw90GF2
                      vSCzmL2CzAY9M2cpvUBpJbtqBhM9jE+lvHF7sz0zP169zkUzPVD+R7xcpIC9fPL7PBgvcrxX4CC9
                      4umyvbS6pjzr67S93eqxvRPFQ72JSoA9OQuiPbP2a73tRTi9FixJPes+nb2ZyL893JMJvXP8tr03
                      vmG98PNtPFIPTD3HZrg9Lc6iPdZmkL1j8Kg94+ijPYgQ6byyM3w9tCbDvG1he71YAbi9MDtSvEUw
                      rL1mGXM9SGTIvIj3gb3ePFc9Oo6WvZcYcr2m6yE9sARMPIBh17yStK+9eFKCvULqcT0HDmm9/7bL
                      vWgyX7wLbba9mvGkvTk5qz3BU6c9yOq3PIBiFDr320m9igiNvXZyIj2SpTs9ij9BvTJhlr2k8OI8
                      8zdivdGTxz2L8Ys9N0tXvUA0fzuaU3y9PqoiPTy3/Dzqig29GIpUvM07VL0A7Sq9WiukvXCBWTw+
                      Hlk90Ye4PfgUojy661e9AG1+O2rfUb1v6ri93mKKvY3cQ70oiZ48iPW9vVXqwr3ilCg9YvF8PQBn
                      FrvCH7m9I29mvRDWIjyahwa90OO2vUs1jD1C4CA9YiZgPZPmn70Icau9Y1OHPRAgub3ZNoY9gOfh
                      vMZ/lL208KI8c3w4vSYJNj2oSKy9OvpnPaCVgLssZ/Q8WFCzvf6MIj0YIQU8AIjKuXe5I70ea5+9
                      YFOYvdvVmz1jPUO94J0BvWznx7yeJF898/ujPa4HWT1eGn89fayhPUb0gb05hY89QDi1vYDwdjwy
                      KEw9fcCGvYUFhT2AyGI8+em0PX6ndz0wwoy9Yj2UvQI6PT2X2rq9EDFfvUrwr70ADpK5/rgCPVhj
                      Lbxd/YC90XS7PfbIQT2QQmK8/0KCPdKMpL16SR293Yx5vdM+Nr2NuFu9D7SzPdrFiL19A4c96Ziy
                      PYGwpz0SiCk9sHAQvcDm37zxF8w9/8fCPXJsMT11wII9XQ5zvWlClz1MV6Q82YqaPSV2vr2tgmC9
                      wv8nPSCqkTtAN8G8N591vYwBqjwouUQ8QCm5vcB1czvIEMw8n/yePf+Mvj3MIt88ouoePaTUh70B
                      vpU9eJ+HPC6xFD22Cyk9YL+qu9AsIL0w7u676LM1PGIaXD1mUjs9VlN6PQiC2bygGpQ7HTKnvaBf
                      XLutCXC9Mgo8PcTeEr1X9p897Pv0vGBGPLszynq93hOHvSx72TyAEts7ja+9PReQrT3GQFQ9GJzi
                      vAplK70wET28yM2SvFJ7cD1tcKI9EJeLvTKRAD0A6VG71cOGvY3pQL0typY9YlwrPbz9GL16IMi9
                      GSOdPayOhLw6ISk9gDWcuqJkn70SvAk9dBHJvLS1tTzo2wA8YyrHvXGSlz1whwg8+ILQvLimxzx6
                      eoS9UFCyO4Gwnz3ayXY9/W2xveswtb3Afey8eIOAvfKamr2megM9mLeVPLN1Hr3oQ388QvxaPUAT
                      rjyXcXq9zF2fvJP8cr0wKzk8w5ZMvUjfhrwxnLY9+E2MvS2mxD0ykIC9IrRDPbC9zzvsIOs8hUqj
                      vYMDob3LS7+9hH0UvTk+lD3+JgY9Sw6VvQCcDzoNjHi9RZC3PROYUb1rCrS9njpNPQCwKL0fXLS9
                      YlyYvQM4rL3wcIe9uyqFPYPhhT3A7zc7WCWePL1Uwr3Ng1y9CvugvQCAiTi/L8M9EDUyvETwEr0A
                      xF+5LFuuPCcNUL2y2DE9GuZivQpdnr0zXDK9ms3LvXA9RTwEsvI8IKmKvMA2jLxCuxM9YCYYvUDG
                      O73xxZA9wOd1O1DIqL3gtpA7QTukPeym47x8Ifs8xHL/PJs4v71UcrK85uZLPe35iT0wZWC9NHTc
                      PECorr0d3ZO9pMjjPAIVWD3AKOK8IbWIPSpndb3HF509zVaOvVjDgL0gYLk8GK8jvPBvKDy3zyq9
                      AIDhvBVEnL2g1Y+7gmJiPVlPuT2A8jI8ULuyvZXlnr1BPYA9jVGkvRk/sD2KF0S9fYa9va1Mnb07
                      PKY9eNOIPIDAULxKDGW9kK46vBHNxT3wtWU8o76XvcAkcL1v2bA9nRo6vZ6HAj3T/ao94Lb7vGbH
                      mr1hs6c9A71svf4vXD0YTl484EmnPBgJCjy2taq9Xb8uvbDlBjxgFKY8a3yUPaonJj2g97G8zNOn
                      PBBcSb37m7C9C3zBPeifQLxGKUs9CqxVvQmigT1YbLQ86ogFvXo1Lb0AmqA82MF3vElQwD16NEw9
                      RiwEPZnvwz1AX+u68jJPPdMgkj3037i8AcjDPe/1nD0iY1c9MOD0u0mMnT2WM3899CriPPkwiT1a
                      oh29sC2Kvdtioj3V2oq90vofPdj5Vjxzkj692CpsPPbBDr1foqU9ICDHvK4Dgb2QWRI8Mf+IPenf
                      jD0odKy9PQJ4vVjZErxqp2o94q8oPViZjb3n/ca9gOlYPLDvsrtXFli9HSZDvbCzXDysj9w8VGrX
                      vEB1jDxCgEk99JSpPA+Qnz3Ymy+8RpIrPegDt7xTyI89CuSsvapMGL31KJE9lGfmvL9hiz3CqGU9
                      /DoMvWCBsTywCxa8woGJvRK9Wz3y6nU9gDgbvMeJyL0DvI29s5KovbIJcj1A2Ew8zbqIPXClB71K
                      vsi9cYytPTlooj28fdQ8xqIHvYlInT2MKBC9+3iPveDWCL2Q3Du9dfWePUBQPDvNCaK9yxaXPRPK
                      I73mL1w9aNOlPKdByj1tqUy9rYxDvVflxL0bcZE9k1+0PewTl7yjupE9QFSSveWtxz1lOag9XVeJ
                      vaLlTz1Yrm+8gJievdikqDxdyZY9JM7/PDD4Lr31kI+99iRhPa3Rcr24hbi8oDJPu40gnT1aNiu9
                      pSqmPYDGCrwCGX49d4MnvWjPyL0ojpu9oOuZO/iJwrxbsZ49E86wvdibnzzQjDA8t4vKPc+Nhz3S
                      zGE9UOjkO3sAsT3oVxA80osyPSFukz10wNc8gMOIu4BfKDxYq0g8jW4yvb2ivb3CXUs9Wp5FvTHu
                      xT1Ae/46bRbEvVeeW70RDrY9aOievOpzdz3mBBe9AbuGPbdsTL3jip29yC/HvSM4rr0T6lO9LCz4
                      vAXGp73nk1m9W7S7vTjX3LxXUqY9nXZ8vYrbTL11PKU9UI/mO2iS+7zMjo68rn0nPUjTwrxaN7+9
                      /fHCvYrLSr2CyQs9xiwOPVy82jxquqy9WFIbvIoWbL19ocO9IGflOwMwjr0iajw9p5rDPQB48zgt
                      GEe9tBPOvL1xxj0YwEs8bNfEPPaDOz2r6ps9J20avZZFeD2dU2W9DYZMvXjHuL3zAR29ImOfvagD
                      ZLywZVi9TKbsPGC/Q7uPpoA9gIC+PMUcgL0qChU9oqRJPTCcPb3oiwk8cDgKPKHirT3wyn28qfWW
                      PbLLiL0QE7a9bvZhPS0+rj0SYA49IKvFvcD7VjwscAa9SkdpPfk0yz1Yk729Ob6aPcbFDL23H5U9
                      eMPIvaXXrz0AClc8Y8CXPQflTr1MuLo8QhykvVD8ubvYibA8/Yu0vaAt87tizTE9bRLFPQAGyDzn
                      HjO9t/RZvZPPPL1vyK+9yrNevc6iPz34W5+9UG97PAATWzvEF+A8BpiovaINn70rFcU9I2A8vYC3
                      crxa7TM9APhPu4Dc7jrpELk9rckjvfTInzy5ncs9QDRKvP/yiT2yeVY9mkAnvcxc+7w1lsW9IGWH
                      PLgJuzyLc6k9C8myPRfRUb0l5YI9Y5i2vWZIi71Y4EE8exCSPaBYizvezjQ9oEKAPAhEgrxQFi29
                      qsc1vaY9Uz3vHsq9mNbAvadyxL2Iofq8UPPyu5j78rw6lQO9hYi8vTBoZTwwEWG8UG+hveAiab1F
                      zca9VfWdPVSmhDzuIYe9TWGMPZ6xIz0i1Co9yM2SvaYBdz1A1B88/Ug7vXD0Ujz8rhG9ytMKvSoZ
                      Q70mzZi9TDjjvJUixL0JCJ49Op4WvYDA+zqxjKo9sL0dvbN+oT2TczG9qIA4vMwjsLygTdY7hX+a
                      PRi1gb01KI49yFv/vKdNlj1pL509YLiTu0HvvD1PM5c949aSvbCguDsgvca8hT+ovQDv1byj2HS9
                      atgePZZZmb3Ygsi9GOOrvXJoLD3oZnw8JMHjPCg/jbwJM5o9IJy9PEVEnT1OX1Y9DSsnvSCWibui
                      UWc9AK6uO+iBmr1RG609KM8LvPb2OD0AEzy80FVevAb3RD0W9wg9cHa8vWsglL06elM90vJfPRFt
                      gD1l08i9gOiNvHgR37yH6HC9Bg5MPWAbaTuSkbW9ArU3PfRGtTw2Rjk9Ei0qPV6/Mj0AIYG7c/NU
                      ve8Ikz3A2jW7Wl8rvQOKX71NKoA9wqYxPSicNbwpB6I9Lo4uPasDrD2tXT+9eLuWPLAXQb2GtFE9
                      EKt5PAcdtT0IiNe8jGyDvLdXiT0IcOi8ruFFPYqPG72rIKK99H/hPMR8+TwZtsI9EeypPcPTpL3Z
                      4pA9bHXBvNxfGb1NxkO9eicOPTH3sT0AtXA6gCKtu5pfaL3bO5y98JwTPM1nrL2Jb6s9NmBFPUpE
                      h70YAHA83JDSPJhDabzl6Ko9YqKlvTNXvr2Y3e68sLKNOx3XfL1ZWKQ9cwNrvRk6uj2SmxY9mitC
                      PeyYpby6JjO9TXeuPRJwmr2Tz5W9ZkipvTmajT31/rU9SlQRvWDuwTvQhqC98yRvvVtarT2Yxjo8
                      sBHtuwvPgj0AEbQ8ZvmOvVu8gT2ZIaI96ilsvQUztr2FFIA9zuBWPRc9rD07CZY9utEKvVIbeT3t
                      QpY9UrU8PQBRdDwz60q9zMSrvMbeBz1BxrQ9IHDsuzJoKj3n1LI9AECxuSl7qj0qfVE9cP6vvSDz
                      ob3OSEY910RAvafGhD3oJno84gE0PT71jb2i2zo9HziJPcA9Bjxuexs9SbiNPTFdoj0KI2w9G/2j
                      PRNner2tHiK9NGKkPAa7Cr0ARPo7BiMXPWCokbudJGq90cC9PYjA5LwZzKM9/pk5PbmMnz2Czgo9
                      tyhKvQDZq71dmDC9oNeMvHqrID12wVI9wHkEOwJTND1TIJ09GOlIvA8JiD0YzZ+8BnlUPXJkaD0A
                      a14622vEvShuMLztTiC9ngyavdDVDb2Ur4e9CllOPRYoRT2OIaq9kicyPWBSY73QXI+73WWNvU2C
                      rT1SNhU9aDW2vVAsHL1AJE68kGd1vSwRxDzWChi9gC4FPAC9Jzwy0pq9rGiLvLAnRL2w08C97Mms
                      vOuFwj0Fe4G9ijECPcI9Sz2hhrA9gA3+O5+kuz0WYHE97569PfSEkrzxzbY92rdcPZnyqz3mIFA9
                      sRSOPVZSGL2BlJ49IyaivQk/hz3JNY89PeOTvQ5lej14mqG9oNGhveNYWL3/lI09JzCpPVhshL3t
                      W5O9rOX9vGH4iz2wB5o7oN61PNf5HL1C9yM9EDicvaBSvDu5esk9N5lLvYwph7ztt2G9CSLFPSKB
                      Gj1wJVM81osQPYUahj14DcK9gFrDuyFfyT2zq7w9NxOWPSB/8bsWZAI9Enx9PSNZW70SlFU9gB1h
                      OtjheTxDUWi9YCS3PP9Lxr3/m8c9eduOPfBoPrxX9E+9yqxHPeDUjDwPsaA97X1QvZYlDb14jak8
                      PrBuPZBlMzyqpnw9ZFbNPIwG8ryCIGM9hFH4PLTbDb3Mnv08FHzovDfKsL04yJO8pbqSPdosIL2k
                      0808++apvaYYez3q/hi9KgkNPUD9KDwY2Dw8MBusO3CHJbyGdDc9UGVIvauml73dWHa9kBcoPFyl
                      5TwkXes8GF44vOhWyLxs3uY84DmYvdppPT0A0wa8dFzGPFREsLy6vXC9gOa4uurZUr2UgOe8xtot
                      PXBaZr1oPWG8ALw+OwaIQj0084i8gGlHPD/GjD0stug8WPuPvXThtrySVyU9nqkRPUC6KLtYa9C8
                      4KCJOzoEWj3i4249FQ6uPRjxwTwgk6a9ZhyJvazmmDxwGWK9f43EPVStyDy0PM48gLznOrf5ub13
                      YrQ9duwOPQASNLuyxRM9SOL1vOZTIT1YP5E8oTLBPXP/xr2gwA87AGbUvGC7KzsuCDo9bAHSPFnH
                      mj2A7X86UMTgO+A7Zb3aMxm9kGsMPMlPrD2BopY941dFvfmFlT2O+Vs9YJlzu9AKeDyO0UM9/tJt
                      PesKvr1L/409jcODvSg7M7zrebo9gBAoPLpxAr3YPWG8CKmGPCWFvb2fkbi9OOzKvXvElL0+mlw9
                      Y1SEPR0lqj2A36K9hwa/vVBpyztAwzM7/RJJvUenmz0AjWQ70+G2vXFhrz20oKg8HVIivdGerD36
                      tyW9lBeyvA3RoD34b5W8N+lkvfapdT3yaxY9w/C0vRXjyL17f7m9rPPGvNYHPz0dw029aCq1PGC3
                      tzykLfM8lMGlvPXMxz3DmI89xfCfPQsshj2vAIo9UBjTu+Aj8TtU/pg82TCBPaJRbj0MuA69uem+
                      PWq4or2R3qk9OHm+vGBhPTsHI669gDdrvdTZ/Ty0Sgq9umgRvXrcvL37kJ291ngUvX+tmD0wO/w7
                      0fmlPdAeiTuT3pm9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDM2OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQ0MzUwNDM2OHEBYS5kAAAAAAAAAC7Hcj3wyYS9MCA9vcA4ADsz8zy97FeWPEA3xDq6zWO9
                      Q89nve33Qr2gqj+7QE1mvP3uOL1bHr+9QR27PXDqur0OqCg9dkeYvYoxBb2YSJw8mlJDvYnxrT3g
                      /tq8KkdAPep8W70FU7U9l3q2vcIbKz0SwYS9ZGvvPAmYgz2emQs9gMFTvPoRTL0aOnM93OjsPJQR
                      Gb1Ga309eCXDPGhCsb2JUI09uy+qvSYgFz2AkIi9bE6cPFqNTD2vDLA9aGHrvGK9bj0Y2LA8gIId
                      OkCDSjy1sqs9TsUyPU6UJz2qMDS9NNTfPAjhs72mOQc9vs48PTSq9LwCbp+9ncaDPaC+eDuA2q87
                      M1mKPXDXqL3AgsO6qELxvOe2PL1wsVi9Cus7PX+ir72Nc6K9ANLGOp70Xj1sGpy8WEYHvH5EDj2y
                      AZ698qt/Pax0sDxOC1k9hVWAPbBM6jvjWKU9DKm+vL60or35tcU9bdUjvWB35TvNFro9kNutvQCl
                      EDtaF3K9o/SwPYW3rD3iYVE9W4u+vRknnj0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDQ0OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQ0MzUwNDQ0OHEBYS5kAAAAAAAAAGWlkr2Ag6Q6PtV/PewezDwqrgG92LJSvHNMjb2Dcb09
                      F560vdRK8jx+BZK9SBiHvF4gcz2w+2o8MAzEu6zyoLzatTi9LITfvBombT3QoN67ew66PYL8Nz0I
                      MM68QwssvZBycLxqIya9zmxJPdBfMjwTh3q9Unu9vdi7lb2JmbY9itQjveotT71aNFQ9aZWePQBm
                      uzkggZK81n0YPYARLLwwOAO985q4PXAJlr3KiDO9ZBrnPBEKuT0AFjc7YpF1Pczwubw5rJQ91MbN
                      vMhbsTw094G9QCMLOxrTKz2wxrG7mCqaPDXyiz16vmo9yGOavMNKub3UOPU8M1u6PTu3p73ggvu8
                      F06kPegPG7z9cDO9wI9Tu2KdPD3AQAI8mBXEvUsDnz1WyGc9jZFHvbpSHr2lg8E9sgBuPZNwTL2C
                      gxE9ZIgNveDsmzxQSpS7TgNmPQCYOrsYh9u8SmU2PaVppT3dKqO9UGeevYZ1Fz2o77E8t5d8vUKM
                      KT18FwG9ieLGPYNcLr0ihyo9sqAdPYD+Ujw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQ0MzUwNDUyOHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQ0MzUwNDUyOHEBYS4BAAAAAAAAACCDIb0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        +JcoNe5YXjX9Ee04/RHtOO42TzOqb5IyvPg9NLz4PTShJAszSH1sNWQHZDZkB2Q2oSQLM0h9bDVk
        B2Q2ZAdkNg7oUzrzkRs89lCfPPZQnzyyEbo3XlM/Nn+LVjZ/i1Y2O/qoNpsBLjr4dog3+HaINzv6
        qDabAS46+HaIN/h2iDeRCQM41vjkN/9eSjr/Xko6AURMNmRjFzI/3LEzP9yxM69UDDRG2Ng1VIFw
        NVSBcDWvVAw0RtjYNVSBcDVUgXA1kQkDONb45Df/Xko6/15KOgFETDZkYxcyP9yxMz/csTOvVAw0
        RtjYNVSBcDVUgXA1r1QMNEbY2DVUgXA1VIFwNWxNTjt6bRw7g7aSN4O2kjf72Sc9sITtPTIWNzwy
        Fjc8uvd5PcQSEzu3hxg6t4cYOrr3eT3EEhM7t4cYOreHGDqRIiQ2rpJfNOBQ2jPgUNozN+26OH7K
        NTrUHSI61B0iOnXVzTmb4kc2r9/+OK/f/jh11c05m+JHNq/f/jiv3/44EbeEOODmlzhq3is2at4r
        NlRGKjq1v2U+yo3DPMqNwzwg2nc8p2WgOhmeEDsZnhA7INp3PKdloDoZnhA7GZ4QOxG3hDjg5pc4
        at4rNmreKzZURio6tb9lPsqNwzzKjcM8INp3PKdloDoZnhA7GZ4QOyDadzynZaA6GZ4QOxmeEDs=
