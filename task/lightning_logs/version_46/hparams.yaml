N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2MzM3NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzI5NjMzNzZxAWEuhAMAAAAAAACsqLo9eMwAPm/umL6DmpA+IOibPUYZSD4g8xk8Zx+f
                      vrB1lbz6X1Q+qlwyPoBsxL2i3go+Ou1lPsCg3r0yIjM+MlA4PpjNfL3g3Vw8FIvoPcmkmT5jj2S+
                      dZOHPiSklL0T4za+tIjiPTtcDr6GXEw+/HG3vaAu370B+qM+YiJzPux5g76WaLe95nBqvqO6Eb6g
                      xVE89xWIPtDEi77aaWU+KLBKvcLIWz66Z3U+DsQSvn5eGT7A0bm9YFcgPeisBT5Qwla+9AKmvlK7
                      dz4H+6Q+kAwavujIiL4fA58+xJqOvUB1bL6BdYg+el2QvpGeqD6AlMM9cBelvHDSGL4YaBc90xwE
                      voO8Cb4hkqc+IodePgAeebqV+ak+0DsYviSboT02EJS+pnLmvSxulL2glpC9LL/NvYhBGr0EOJu+
                      ArwyPr7jej66o1w+4CUiPMSi4D2wDrq9/FyavjBLrL3EH8I9vj9nPux53D1+j5u+YL5IPOZMC74D
                      wZw+jlcgPmxKjr3LpEO+gCgRPTpRLz5Mbak9XKDTvVrOfz5belC+FgByPhAjm707BRe+iNlhvYjE
                      Ab0IazE9Xw+DPvwlg74AKEg50lwIPk/cjT5yK3s+zCXFvXozOD5vZIK+iF5fvX8VgL6A+Gy9ZMHk
                      PUYUi76Axyk928M6vhZRc772WCE+CBwbvZAxkz3iDWU+33KVvl0Jhz5g5Ke+mJ4jvb4xZr4aVXI+
                      oNmvPYZvUD6g+Bk8IvNpPro6Qj5c9tq9LksVPjrfQj5ofTC+CHUqvVA8CL7gRSU+HphDvhrgVD4G
                      +ns+WCQ+vWA9l77CHHg+7dCCPulroj7mJ2I+QIT4PavWI77blma+qVWHPuiZbr7xPKE+WB03PW5n
                      cD5LCZA+nX6HPh5qXz7qIp6+fjqfvmtiY75tN5Q+QF5nvSmhkT5mT2w+sNhqvliLJT3Agoy9bpJW
                      Ph0FkT5Eu6A9HMW+vQZVr70TM6Y+fiOjviT2pr3A8ac7Lc2nPnPNFr5rWpM+JjMSPk7IST6WoXG+
                      MB/VvQn3lD42GUW+8gcSPgVtoT4DBkO+CG5zvcI6AD5ArSK9sWCjPpzWkj2QSKI9i85TvnZJAL6C
                      uD0+2DwCPYArCDuyZEA+TnMKvgRzjr2sV5Q9oD6NvuACWr0Tgow+ylNMPkTWrz3A0pa+i2OZPvbS
                      Sj6A6Y09KCk9vQ+tnD4yITU+s7FJvr7DIT54XH69APi+uqHGoz6afGs+G3ABvk6JeD4bGo2+OIQ/
                      veuShL7SJyg+kKmgvUDV/DvA3ZC9hTiFPsVulj6mYkU+7Or1vV6+Jj5LTyO+iCBovUtlqL7wTzC+
                      QLqIPbY+Fr7mI0C+6HGAvqjnT70yYV4+Zd+cPgVAgD7oEkq9g8COPhBjs71Aj/E7YJPfPTJWEj4I
                      olG+gEI8O25FXD4adnw+IKM6PPBoKL6OBiA+dGWOvbV+hT5K/DU+pBilvUgTFT0ARYm9DauoPkYp
                      Sb7GKxW+VqmwvWkCjz7WnEy+cDeOvZjjc72T9I++oCw5vNx54D0AbLe5fhYsPg1jgD4p1Ys++AeM
                      vsAvCL1Ge829MtJ+PqSvjb0VToE+2GdLPYJxBT4kmu09lQGaPm7dkL6g8me8AN7YO4NQqL4gx0k8
                      r6+ZPlPxpj4wF6M9Ng31vYCqez1MS9w9ICwYvnYaHD4a01A+hZ6LPpDsoz3g/BM92EYCPWDkMb4M
                      JMC9kmchPt6uDD42GcW92iRaPh5sHr7AyfA7jweHPg72eL5wcMq9HAiUvRzSkL2OyE6+fJeRviwr
                      xr16m42+OYWgPkp9Sj4Wni4+6JBMPZOCEL6Yugq+fsVKvhPQXL5QFoS+OGsEvvgUD74Qnpo87L6f
                      vkqsST5gbok9QHhsvVhgAb5i00A+5BSVvghXIT0mIMi9sCINvgUjpD5oInC+IDHaPWb1Oz6ADfS8
                      k12Zvmjtd74SjE8+lt0oPpg/Br1gQWs9dqldvpBakT36n0U+wHbyvDgdIr60xNI9tkWtvbuwor4A
                      Inw7zf+hPtrXMT7Wy10+Bqk2Pjyr7z0POYc+4NY/PFWNgT6ovim+xLyOvTZkNb6rRla+8y6jvuOk
                      o75oMoS+MGf/vJs9K74ELIQ9vKDFPYDk+rwA3Ok6FHKVPehwP70M16I9Y7KCvt8Cj76iyaW+KvdU
                      Pp7Fl760EJy9/BeWvjBfxbxDzRy+qOZfvSDhKD3W2Pm9oBcbPeAXE75supW9JmD2vUoCDT4OfF0+
                      LRuVPqxAyT1QPY89mi56Pszogz3+Qaa+cEC6PPLcUj6QN2O++qJ7PpvoC76G/uS9nmAsPhdrlr4E
                      ZIe9+G5BvSByzz3udpS+ALiDvVZfsL1aSlo+RjEBvqMBpr6TrEK+Y4GSvl55Cz52sk8+EolGPiAM
                      Lr3G0UQ+r7CJvpr3Qz5gIgE9Vh7SvajTPb7UVNE9A2szvvE4gT4w9oW8/CjEPXJnGz5DxV2+iL15
                      vcCXszzAcrk74McOPhCs2Ty3/YY+mHEcvWBJV70oJqi+czyjPs6/cr6I3BW9eMePvpxhir2+x20+
                      iK8rvXBfAT4Qdo486+krvgAw+Lx2f0s+ciN0PmSsnD2Lzi6+GAhNvpKXlb6gncE9brAhPhqJEj6O
                      cHw+Ju6+vQBPurrwjoS9nvUTvmZapL5VNoQ+xttovrq7GD4tY5I+ZxCgPhZiu7250JM+u8xUvigK
                      BT6bgJm+gBXRvWAg2T2Jx6U+C4xzvogIcD2GBzE+Mss7PnDajb7SPko+SpkfPtTvgb6b5gq+UAKb
                      vNw/1z1apHg+QrMQPpJzfz7Acc28xemCPmZbzr3QdxU+fupcvnYGbr6cVI29/IS7PUB7Ob4huKk+
                      A4NgvhIoNT4SHw4+XBTJvQLqDj6oN4m+krlNPpYvJ76OUwI+kIagvqh6Nj1ovyI+oMMuPegmcb5c
                      0fC9LECuPTBptT2AHrq9cA5Xvv0Ejz5ybU0+AGHdOmTPqT14vm++rDGJPTBgqr1oQkC+IMMCvCjo
                      Eb42WfS9H36WPvxpvT1g/Ra8NvyhvnA5ljxmbkC+2jSkvnlmmT705oo9gBp0vbZqQL71tJY+QMqF
                      vYDlo74reXi+2HYlvdp+Iz4bzgW+jpttvs5tKb6qMDU+k/qiPhyf572eeUW++nd7PgNUJr7h2Io+
                      AIx7PN7lar4Q64Y88z56vtajx73Y+Sm9clV6PmqZcj4AsIc9u0eoPmYBcb7AJlw9MALcvD/0kL5A
                      VBe9VogxPhK6NT43WZe+D3GJvjOKcL6AbjQ8ztEpvq5/Wj5Tkli+OwoBvmavVj42whM+gSGMPljT
                      S77gbFi9nJC9vW+2hT5oZwe+dlSlvtCahL0/PJk+mFgKPuiIHz1UtdM9GGUBvozbub2oDxM+AXSh
                      PljYIT6e3EQ+ulJkPpl3mT4QUM29mFmFvrZEJb7munW+ziMYvluZDb62fHo+9MSFPQCSyzyQuIM9
                      0IfEPLn3jj60o5c9GFQHvZAqkj2Q60K+4uE1Pni6J703loc+aidZPmwEx72gTW09yAhzvjLedz4j
                      aVe+OQCOPrx6xT2emm0+w7BwvhAqvD38i/W9wAeKPdiMNz0AVYo9Nod6Pt5PNj5oaiE9CNofvnmm
                      pz71YJI+mHBjvbn5mT6GqR6+Fl8ZPhCKjrz8zuc97Pqpvjyjm75clpW9aAIDPpgqJz4goPA9zg16
                      PqzxkT2Qf8G8AEJhu+Cpnb2am2Y+HKK+vZLSMD5zP1q+poAOvgDpxD21L5o+iLUxvoqWED4Apoe7
                      24WTvmZBK76TKzu+5thUPqLCAz6DxKE+IJuEvg4tdr4EKZC+yDofPqACij32Px4+gEhFO5jKAr2o
                      EBq+YamBPu55fL688Me9eDJZPfiGRr6Iuzi+MtKmvlhifz3GbjE+iKJ2vsKkqr7UoL49YPwEPmj/
                      ab0giQ28UJ+BvY4LSr5sTZU9MgAMPoAQhT3Wu7a9TI+YvRI8ET4Qa8a8kJ/QPUOPHr6jgia+WMWP
                      vlHBiz4aLXM+BjF9vhhFfL6EGb49XpeGvmfghr6fCZU+mJ8KvttvD74IaYC+Nb+DPkBPCz4xJJs+
                      gtZoPsDPtbsQOUi+6phwPi3foz7A8oo8wIbcvWbWOb7jLl2+vkttvo4zI76Ri6k+3XWTPqBQJ75g
                      2VM9HoZBPoeakT6rvDy+G36QPuBY2r0AFvQ8pPPuPV5FVr5KpDo+QD//vVDJ6T0gf9C92JgGvj8Z
                      mb6qYUM+9mkBvja96L14b4C+qFF6vbBaFb44wCa9iFYgvdYoYL54CmC+QbumPmNVmD5KVXA+85iB
                      vvVCgT68sfs9WHmWvnyEtz0QlKW9Wm8xPkK5WD6yDkk+5h7hvYLdgL4STWA+ZDzuPTjYGL40xL09
                      YjF0Ph6dcz7yQQU+wGEQPqtIOb7ykEM+5dWBPoDeH729NZs+G1WePvpfLD4Jz6E+wywMvkD6ID56
                      TWw+ljRKvoMFpL7Dgle+BqqgvpLKQD6DKGu+XOaEPZPwnD4/2pu+AP4SvfC7fL7AE5E82E42vjbZ
                      072AKvO92EIoPcLRDj5YWC89gBwJvCC1eb70GNI9FiZ6voYRpL4bRhW++CZ1vokWnD4G9sa90gw6
                      PjvWIb40w5C+vD3/vasnlb7GDDe+DnsgPnJ/lb67d48+psZqPkY17r0Mhos9WABOPUa7Fb5m2VC+
                      sw1Ivp4mDT49g6Q+gIVgPFxGgj1QMpW+Hk6EviY7Kz7kn9Y9sLDsvLD8uzzQg629E6lXvknVgD7i
                      h10+IBoUveiNTb1Gxmg+/PfrPYR55D341Ua+gvF2Pubmib4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2MjczNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3Mjk2MjczNnEBYS5kAAAAAAAAAOtlp75WpRo+QGykPEvXZb5kMZy+EvtRPmJCAT603oi9
                      AGo+PYyE6r0mqRS+gMsHvO47Or5kT/I9AIZAPKWqqj445Sa+Fqgtvh6Om76mgQk+ZBuSPewS+T1P
                      TI2+DO6wPTK1bj7iKiA+YWWHPlhcEL2qMW4+m3MfvtP6Sr7+ABy+7sp1PgK1NT4xaZU+WstpPtDJ
                      q7yuYi++gSqKPtImJD5GXL694KiVvqf/jr6I1je9RGTuPah0J77N6pM+V2mHPgCDIz0IHUU9OECX
                      vnjmdj3wJ/K9EJenPeZKYz4a0Wk+gL1YPKCeMLyQogC+dGyHPQAWMr3g0GU9CocWPr6wG75GZTw+
                      tNjcPcbTir6S5DA+KmcZPgCqyb2+eFy+kE2WPPAuW75+lyS+3KfKPcTyhr5xY5o+EHHavKyCo76S
                      Bam+DvRUPrhxJD71Dpg+mmN3Pvg3eD1TiIU+uBcuvZ54Dr7/bY++AKwRPQMJnT58Y4a+IE3Pvd8L
                      pL5YGT++StaDvgAw3Ds2Bcq9eISZvrx0kD0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2Mjg5NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzI5NjI4OTZxAWEuECcAAAAAAAAaDEu9Ik5ZPWJfq73H5U298fCgPdltlD3yx6G9swud
                      vXTB4zyVCb49UKx2vQBNC72qgwC9MEJrPDCwbr0/1aM9Kf+1PR4OiL3msDU9TctGvdWilT2jwb29
                      MAGuu6CNJ7vhA6494ludvf7xXz0XHmq9gPT4vNC+Sb2lgYg99WmdvWqcIz0Y3bg8kK1EvWN3N72w
                      ff67UFCwu0ustL1gGJg8erM6vdSCpbz00BS97cOgvVQt+7zVXqy9QLEwvao3YD1gTIc7MwbJPQyn
                      hDwB/K49ay2tPfoztr1nirA9fYSVvQCBZ7ugCOe8mk8DPUrzAD2up4a91ns1PXYgHz3URZG8ZPnu
                      PG7xIT1gQYs7IlxLPdx0Br3Flso9AKKHPOddX71thBq9iYC5PUBZXbvoNb69VAGMvO1oMb2IQay8
                      WDf2vPvykT0Gcw+9rieTvfZXPT3qADW9ifGUPQDVyTt20Vo90LWDvSfWVr1Q58y7jAPavI28Wb2o
                      DiY8CNXWvG1ZqD37i5w91oUYPZRUvTyNCU29Wd2APYA9QDzi/3U9I2iEPWAxjLyt2ai9RP0YvdBV
                      M73L9qw9MU3LPaHghD3ZpJM9bZt7vY2+J72lAsi9oLjJvFAVxrtm4hQ9bt1KPQC6uL0Jw489lZCd
                      PX5ggb1RJoc9IR+WPQAg6rzGWAS9gPZCvXODQr0NRVW9wWiePfCmLrxACHY7/x2qPZsNtT1nm0m9
                      ePPdvFuUnj3UAvW8WGlYvM1lxb0HmTy9k+qLPVAcwr385us88j6IvanrmT16AHw9NwzBPeWGoD20
                      AYu8J96yvWeYlD3j6KM9YmI9PeVRqT0TJ429qF4KPD+avz2Qt0C8cSSoPV5GWz2Sspy91RCmPVMw
                      kz2DJss9N/mWPWgv77y5roU91K8AvWAbC7uUueY8tIH+PCJpDz3Q9VM8rGLGvFRWyTwKP6q9ajoZ
                      vRQF0Twm2nk9g1mQvdqBdD23M4o9bymlPcqPRT3AAP+6Ji47PbB2LzwOhR09gojLvd53bD0lepQ9
                      rfE8vaD7Dbsfdse95D3vPD24rT3tyHe9IsWIvaClvrw879A8R8JnvWrbWj0gbo88zOyUPBqFeD0m
                      Nxk9caeAPZK8PT1G2qO9xDrNPE5Ydj1AVVY7ABMwumCGxLwnE3e9APmJPCM6Ub11La69QI9dPPlT
                      hj3jUrS9oLsGOyWywT3ZzIM9mMAxPN1Ttr1HR4E9UTnBPXD0b7wUYsC8b12SPWhd0LyAy2y9knY2
                      PcDWkb3MTrq8bbhbvV3cPr2jP729KWGnPUDfabsQgZK9W4zFvWAbWr0R+JI9drAOPeRI4TwNqrE9
                      1CIOvUVamb1AsgW8PRFhvd1RkL02wAa9wm9uPekjkj1q3Eo9wFWMvI4fND0YJmu8GHmvvS1TrT2v
                      ips97H4KvSM0hT3sPOe8AASuu/cpX73dIHa9ROzlPJAQMLzgYb69AnjBvasqxT1z/mi9QmxXPYjl
                      jTxnZ4A9dmF9PYKMhr3r9bk92U6MPY5Fez0ZK8Y9ZVXKvaG8vj1tCU69+QmsPUVAm713ObG9sDtp
                      vcUgjL1hdqQ9HQKXPSgNTLxySzY9oH0TvReQhz3mLoO9Q3TBPbAFGTzg4fe80JgBPOGPvj0Awie7
                      R6WyvXe0VL1QC3i9Oa6yPcDmvLyaZk89JUWvPVEGsT2Chpi9PkqcvayB3jygdfw70Jg0vOoZnL2A
                      M9i8cFV1vYAdELqZ0Lk9qKtOPOBBQr2A19U755lxvUBT/7zjt8w9sCrROyC4ubywE3U8PuKSvVLq
                      CT0wQ4s762DHPYLpgL3aUi29GxPAPfAjJL0qXS89KJrdvAAkbbnKOii9gPqBvBlGqD2AjKU8sIqY
                      u4DuTTq3ALu9szawPddWqT2CSUw9qOe6PJiT27z94709JneHvTrSSD0ilx094Ei3vGjm/LxT6ie9
                      zPjIPOBhpDz90LU93U9IvbIxVz3a0EQ9bXozvcnkwD3w3X69AhCRvaM5rr3Q6Nw7WAGjvfrHIr16
                      UHi9UF1NvdCoC7x6xmq9LxiPPUCBWr1AH/W64A2DvdSjvTxwFmK9IoOpvXgAyb2tgI09LpYbPdFV
                      rz0An9e8oI+zvODd/LuHV7S9YFkkvQg65bzIIbO9fQa6PVjY3Ly0Lvu8gKy2u2RCiL0wox08WNFw
                      PEVBl70RPJg9ku9EPTVzwD0AMoU5IqkkPWBODr3jlCq9MiYJPduWqT2dh0i9ICU4vaTh7jxQWaQ7
                      uMOlPCg5e7zRor09o1rBPUxO0jwUT+A8UKPju46eCj0pP4M92MumvZQz1TwMw/c8gFldvJAwCL0C
                      5y09S72EPTCz5ju7jo+98Q2EPRLUWj1aPb+9zLK7vFd5ar3SZ2M9gNpuOtWKuj0LZLQ9c1ZjvUA/
                      j72wGJ47SVmEPYzToTwlEMK9ibCOPYLlej2fB7o9vWh2vV7NfT3S4Sw9UaWpPaV8hL0Qjke96Vmp
                      PRCAHbyYmmc8Oq2ZvZNhc71YNJu9aqq9vWCpRTuUU+A8rj+WvdfiIb3igW49oSiWPdN5uL1eBFQ9
                      SlCnveHPpz0afSQ9+5iavSAqjL3VfJY9yQGGPeLnST1ANr88SN2hPBAuJb01mZe9zaCvPRWBvj2A
                      5WK6RR6wPY3tbb1GcRk96fq8PVD0+ruQnkO8GJuzvQ+Ly70Ukqg8DnKIva2oK735HbM9krsfPbjO
                      x7xqA2U9CIGOvBYJCb3A+zK8WBsbPErJs70qAo69cj7CvRCPbjxKyiu9UgNAPTA8wrvyMqq9UU6s
                      PWeljz33HVK98yW0Paxp+jx9jL09mFORPNL/WT2aVGS9nYePPXo/sb2wsti7t7pcve+7tD27fMu9
                      6MuHPPr5D71gvpI87r9lPYALGTwAYFg54bCkPXXXjb053p09bhmLvQAOCTw2dmI9qhFBvXBjJr36
                      pTK915gwvUCEA7z2iGk9oPqWvKCtVr0SuS49UBRbvUXRwr1sWRW9iM6JvbKiOT3MxgW9MI1NvBgK
                      vL29CoG9YKsMvWdeML01r7s92skrvUeVHr0vfr29G2fDPdACgTsSA3s9HxmmPRoXOr3VlrS94j8l
                      PZeoGb2Psa69ENMkPFhsezy3K8w9o6TDvbKmtr0wgaq9AMhlOxTb2jyc9v880Aafu88Kyj1SUau9
                      0H9gvFJyFT0gywG9TdeePdD07Dsb7sG9QFnYOt/ckj3Q3ai70Lbwu9OPlj13Z7u9WMXkvCOuV736
                      ngK9IdGAPVAW1jvB6oY9AcyfPa5iUD1GeIu9altmvVrvjL3/Y8C9QySgvQAKyLuRUMs9IG3aOwDP
                      7rzAwey86KNtPHQEiL3yMVA9Z+u+vfi6xjz8tgK9GJ8pPFatpL3tc4e9wDQCO+nvnT1j87k9Y5Zl
                      vTDhSzwo59O8YIDPuyj6FDzSQUQ9U9zIvTApTL0Vd7y9BuliPYLGdD20Msc8lFG4vIBPnr34Ir48
                      Rtx/PcrFdz14mKg8ED4TvJKQMz3o4fS8wympPRgL9LysgKq80iVFPWpnRb166aa9TtE2PVaLBz1w
                      Cx08V8LIPXLBgb1oYyo8VweOPWmGwT0AG8s7hikRvQDpDzvNOWO9W6aTPZMAqj2Z6pQ9zawyvXoa
                      Kj2XcXi90IR/vX9Hwb3A7f28owWkvfvPyD3QfD69cDoBPNoohr2g40W93N+HvQ1nS71NR5G9mvJm
                      vTb+DL3I7qi8aPwxvAQt/zxAc/u8W6SkvQCyl70VZZK9KCfPvL/Rxb2bY4M9U9Z7vYsqkL3mvWk9
                      oMC2vBajWD0lPKy9gMOlvbjPhzwgTZm7QnlkPXA+C71aiQ89AMR+vc4ahr3Iroi8LrRbPSJ3PD1V
                      lZ2958hEvVG7pj00ItI8AIOdPPCYkL1d66u9Q7K5PdjxxzwDqJw9lkSovR4EmL3AAga9GDWqPGgp
                      dryupAQ9xWK2vQesML01jZc9gBahPMCVZb2xYaA9Y0NJvYDqQry6WD+9l1NrvYa6h73t7YA9FuUK
                      PWXUmT0Mt+y82pSsvYALWDw0mwG9ips1vUyi0bw1W5C9KmAPvQrVbD2UiMq8lXGHvcOKZr2WuFM9
                      l96ePWr8Hb2tRoa94EjjvFibuTz+Pgw9ACnUvJ0emL2AOZG7+hCqvRSP0DzgArS7wxCRPQCNgrw4
                      q6A8hPznPFhmj7yFqYU90Aa7vUIxLj3R0oM9cGIHvDKjDT0S0lQ9MpA0PawF/Tyw7zA8gPuxur1I
                      lz1mEgU9ZSagPax7i7yMRro8jgktPflAsz0xnsY9in8OPbLxEz0i1Rk9pLEGvbNjVb2YBKe846k1
                      vU2syL2am1M9UAFBvJ1iKL1zib69oIbHu3HquD1155Q9pS6Nvc+ooz2it6y9OmVePSLfHj2UdNO8
                      pYCvPWhzMDxAXZu6P3HHPTEIiz3ducs9vodGPYtkj72wocW9IViyPXuvqb0ulHg9PUNRvfY+Bz0e
                      1Xo9g4lYvU0jP72XA8u9Ij1mPdrOvL351YY9u1ikPblSqj3h/pM99XC0PVpRWz2ERoq9HrILPRKX
                      NT0AdoM73aCdvX41Nj0WMH89Y0ZQvc08wT0bKbu95de4PYAJIDx/npY9YyWEPaNPnj2gdDo7msAt
                      vSJDcz3vB7a9Or4ZvbpmEr1bg8c9HR41vVFLiz3D+pY9Iu88PTYkBD2twZi9mwajvUKtdD1ekpG9
                      uLjGPFV8uj2SZnI9x566PQB9Ar1WhwS9gHSzuurIaT0MK7U8cBE2veyunLwKpCO9ADhjO+Okvr1a
                      GYS9roMRPQMvwz3qs1w9WJiBvCmehT0AlYA8yBb9vPK1ob0+dkI95QuEvUD5TDwiXnA9yHvBPKRC
                      6zza1VA9NYTFvcQbg70j+KO9zKS/PBi9FbxAvYs6Gay0Pffxwb3d+Ji9dBDvPD05gT3Bro89YB+f
                      vGzkxTzC4qG9GFsYPNIixr2VrJA9aN+6vBASTL2Qzzq86RCtPVBIYLylfoS9zOeFvTBWFjzXVF69
                      GpcCPRkuqT1LDI09DU80vXoBsb3Ss529oFiJu/gfgjxymj49po2XvazH/jw0rtK8OuS5vS3GxD0q
                      8MW9APqYPAUMxT3tUcq9LFbnPO67Yz2QT048e8icPVtzuj3SSjs96AEiPHZwm73luaY9CM+JvLrz
                      Wz0szKI8whbKvWjFEzzQdL69FMiOvG6cMT29LGW9HT+kveE0qD37MIU9IvjFvRuvxT1WqAw9QH5h
                      PH3PJr13SoA9R8G7PZ0CLr2EXO08stwhPf7dET0wZhO9dA/sPDbwFr0ycL+9QeSlPdBD4ruwLmk8
                      q3OJPWC8nb1NvXy97v4JPWI6OT3Ql7i9aDSyvK29M71CO3I9OJ6ivagSOjyBUqE9MIUxvCDv7bzi
                      Rjs9BEvbPDDWHrwg+6y8mEe9PGCE5TsaAzA98NouPBDGRbybycy9UUiLPWVBpj1QooU7KI3avAD6
                      QLzzc8M9u0fAPXu8kj1WLoC9gI/Eu9snpr1qGUU9W3XHvUekcb1128U9av9Ovc0epb0gUdU7rK2A
                      PPqCXT100+W8QkOWvfM8lj2jMlm9U9iOPXPAwb1A4lW7u3GbvWgOp7wKtU09Q4O9PSGKgT14Qqq9
                      j8e7PWoyWD3a+ZS9FeeDPVBMCb1gMZ69tKimPLA3l70w0aG7Yg9yPdWlxb3DTnS9m9rKvff2sb36
                      ubG9AH1qup1Ctz29jy+944JRvfectj1w/5m9hmtGPaMtIL2tk5W9UR3KPdo6GD2xl5498xGXPdpJ
                      dL2Bd6M9AiyJvcvZvj3C4bK9Y+BLvSApCL1dO8W9FCKyvJ3Tir39JZw9X8m4vX2qmz13LG29lK7p
                      PFijaLy60QW9wXq0Paengj0j9F698nGVvZLRET0ALDw7fbWpPSMyiD1QfKm7oPIUu9r7Hr2AmoI8
                      pee5vRTYu7wQUbS9QHt1O3LeMD1KuEU9APzuvHQnsbzQjZW7JudEPSjfoDxJOcg9GkWvvf8PrD0M
                      hYu9dL/dvODN8rv8DoC9cHM8PONOoD3ZEZY9i1i2vUPvZr0jvoU9IaO2PcBUfr1g1XK94B/zO+27
                      vD3QLXK8s+6mvaxf97x+AyI9tGKrPAAcEr2ahcC9s6m6vY0Jk73Ql0q9YDGuvEfFjD1QoKI7Ok5o
                      vdLtpr0AfH65rLSyvAZeSD2O20I9Aut1PVDedbwSTFo9Gj4tPWjV77zXD6I9UENvvGvZtr1eUgo9
                      avONvWCv+7yg9sE8DaPAPdCyO7wX7a89Ks3AvWFEyz1borQ9TNcPvcxJ7ry9scc9Bn2qvaTs3jx2
                      70k9fjNwPXZXm72TOpy91tkKvSh+Xbz6yW49EX+1PUbsCj2tcps9nvxNPaOTpj2UV4e9CHPHvRhb
                      DbxSN2s9lF+RPIIMub2I54u8qWidPTNgQb0iNqW9fSq3PeCuvLwqp2u9FCGCPG6AaD0mMwk9uFzA
                      vILDm72idj49MGLwOwyjrrx9KZU9hHzdPBUoo705NI09mBNBvN+mv70AvsQ54Pr+uyd3pj3yf4a9
                      KMlRPJCFc7wtPG+9tdiXPZ+Zsr0xHpU9yj0dvVrvUj0ibDc9bevHPeRk6TzkMPE8wEBiPNgzNryz
                      Z789MQeAPXrKw71lvqC9A8WRvROmlL2Qyjc8g2BwveLRaT3Q05e9opASPVoebL02FWM9dXK5vRCK
                      o71r2J+9iISbPLd1rr1tEpm9Mrk6PWlOtT0gTr68ABLYOWLwWT1lspk9DnmovcD61zreQ4y9vwS/
                      vTCGkDsOUZ29Kup5PRvXqr2+zWU9fdNqvSvzuD0Aro69XkpBPWqlaL0orQw81TKuvffyRb3+UUk9
                      4PHMu/NSoD0kwYe94MiiveXEp73DLFm90DDbuy/gjz1z/ZY9jEPDvJIvkr2GrF89QCJNu2Di3Tsu
                      JJi9sNEUPD2mkj2vU609cg8yPZR3hLzT+5u9wK64umNxUb2Er4K9AnuqvTA0PbwCO0w9wgagvXR/
                      trywbfQ77Ny0vGcxuz2X/cc9NgsXPcGCpD17UpQ99pM4PdKybj1AEMm9oDN7vXwT7zzG7QE9SOWA
                      PAHQjD3AQk+7E60uvapOFL0/LLy92JwwPPCGIL1vM7e9Lc06vflTsz2AZ8Q6rBytvAChQzwMe++8
                      k3eSvQeMIL1VAo09iEiqPNhBgb0mIw29QfO+PaBrlb0SfAk9cfS9PagACrztH1C9qlGdvYDuI73U
                      UMK8wDxFOwC1xbsoNoq91v4QPcVvxz1AKeS8wE1/O5zSA73ZYrQ9xPETvZpzM71Lm5o9Enh3PbC9
                      Ab0GtkI9zbpQvR+Cr72d8LK9E2lavYDH0rx6QhY9zvBvPbKbmr32uAs94Ov2vIDH7zoOmIm9bVRf
                      vUwEuLyYBt68g8khvQAqxrwVvrW96LOjvbTZprx+WEA9IkyDvRM5I73csRK94us/Pa3BgD0Yu+m8
                      APlSvUAhGbs63VK9hkMlPfjPizyznU29YAQ9vQouYT0UnPk8ZrVKPYCukbqy11M9lp8SPdP0X70J
                      h8I9wLTcvOg2izyyoZC9v0OIPQBtXrqonmi80HRPvcB1c70sIZm8aE6IvYB0g72qMJ29AFdkOi+C
                      vr0ARY68YpFzPbA0ur0DEU69fe2RPfwm3DxMM4e8NwjLvQAcVb2kc+g8yHinvK+2qT0bQ8y9/M7j
                      PHDxfLzgPZ88Gu17PThew7y6MEs9sgZePSqQhL3oCbK8RQ7MvZglv7wibBk946PMPVzb1TzLsKU9
                      A4+8PadSgz2zbne9khQpPUAAxb1BxIw9GudHPbFQgT2F4aK99SmdvVruMD33Rsm9rw+TPffNT73A
                      DFm7oJLuvOjeKTxu+ns9nh9ZPTBNo70owEi8lj4fPThvhDxGcDQ9cvA/PcNPl73sNeA8je0/vWAb
                      brsWdRS9a//Fvdi4JTzgMWe9AKQyOXjWkDzT/7m94TizPQDmBbssoom8pyPHPXPEXb2AqOc65zjL
                      PQObdr1uh0g90F1qPKiksjygEcG8Zkx8Pa9prb3qwTw9OiRavV40pL2yewk9NoFFPdTRsbyv5rO9
                      aHx4vNcZt72C9mg9kmg6PRBoDLy4JsO8SOKTvQDIHjtALgg8lqEVPXO1UL0ArYE8c4e1Pf5nVT2w
                      Z2u9zGnEPLCpvjvHq8g9AmwxPYCBzLxwkIq90+WFPcBhjLwhlcI9am5RPY7PWT3Azy27LPedvAAE
                      PztL9pI96BjAvQgmijwFtJ69mpS1vWJ1DD1SBzY9MPgvvcT0zDznFL+9unenvV8QwL1l58E9MbiY
                      PWeCQr1NPka9AJwzPMJsMj1z9yS9RrBOPQnfmD2YHhc8s82dPZh5hrw5Kp89TJfDvHCXpb2VuI29
                      yj51Pf2np70IML+9rGuSPNCAGry1k4Y9dkylvYs8gD0XGnK9z5vDPSJOXz2Rh6E9Bpc5PZkIlj16
                      Xna9EbOWPbL5Bz0AUre7Kth+vWBGjrtaISe96RmqPbKcRj02KWA9pslaPdgqgDwasy89Jeu4PbDM
                      UTy0L6O8qJmGPBdFnD0A1Ec6+O64vNBRurtPnsS9t3NZvapKGL0igiA9DYonvTJWMD2gmvi8bD8I
                      vZiLyL2a2GK94Oehvdj4Sjz9X7a9NoCgvWBNm7zOt189FaHJvXFwmz3HxnS9oL9cvd0FHb1g6fS8
                      7W3AvTZVmL0akww9uS2tPS68ob1sKIy92ObYvAEPyD3SnUk9IQu+PZjfBzxpPJU9VNnwPHZ5AD1E
                      Wga9A7mYvT0huz1s9Jk8dFP6PBjxnb09+8i9FPX2PNlowz3Ndpq9kiQ9PRppDD3CeBs9gBcjPEPL
                      R70AxMK90EdjPGazo724dqQ808YuvbALGb0fKrW9yQ+zPRF4gD2Y4Vm8ST+JPZj8GzyLbcA9KwGD
                      Pdd5Nr1Z0q89GPz1vDnmvj03Vkm9Ymq9vSCL9bySngw9AF/Dva4MPT2ueh49veQcvfKrbj3wQk+9
                      GqFpvS5saz0yQis991mWPYAjjTpXY5I9gjtCPRjqq7wfxIw98KwGvCaGnb3zCJ69ipNXvRqGrb2g
                      Zro76psIPXPCkz3Cham90qhaPajLtLwY1pm8HiuavWY0BD3LNb+9un4wPfh4zLwjKKA9oq99PR2v
                      ub0YJ0s8YWHMPXVJhT3wabS9a1CYvVIeMj0S4hs9tK2TvKJUib0KOhG9yZ3LPYBtA71oa4E8c2c1
                      vRC+K73akny9NdCYvT11t70ODyg9MMetvVdJsz1jZ6a955y4PbnejT0YbjW8Cx6tPYM4b70AH6E8
                      /VFWvSAlib0i7FM999y1vXoTBL0GZJu9KDrYvGy2yrwygjw9y16WPSo1Uj03fiu9VDLAvMA1pTw6
                      EJG95YyzvTCbADyC1FM9ThFCPeI8Sj0HD8G9+jl/Pe5gob3Ydwc8BFzsPM4THD2h+cY9nq9bPXhL
                      xrxKDSI9rf9rvWoufb1pF6890gAtPVCTyLuAVhy6MYWJPV5VoL35F6g9NBvPPKIokL0bqMw9AvGN
                      vVirL7ygM529+t/IvVJIl72GVjw9LF2AvcPLoL3hacQ9gAiTOrG1nD0096c8oS/MPX5MqL0ZVMM9
                      LqqavYoqYz0TyKA98/BHveo6Sj0qX8y9pRmtvSNujT0z3Ks9ZosXPUclqz2AJUe6Ze6RPcGayT3M
                      Ncy8YHxMvaC6eDsCbYO9ZueNvctVrb3Cg6a9suJcPXiQu71gfjg7mHauvPEBkz2uVl49tUCLvcqI
                      Qb0pF8k9g5GAPWbDSz2AQ6O6IhdjPSGouz3u9yI9XhoAPfUujL1GqRs9zNCbPNRPsjwggLG9AH6F
                      uQCipbtwETe96/apvcVFrb3tFqW9JyFXvVSfAr1GXnI9ETa0PUxbgrzA16o8oPIRO4BDwDrH1bW9
                      cDdbvQoYML2iHB49AGNHuo2jgD2ITPS8ras8vWDoqrsVep89KfyEPYpFkL0HzF+9IAWNvQsir716
                      emY9uXHJPVhbdbz691A9J/63PQAjSLyRrIk9BWSUPbmgsz2kBPI8lr+XvbSdnrxyX0I9AJMIPNu3
                      qL0Aeh05S8XCPepncD3y+Gk9R6mOPU1web1Qk4G9oGQIu/D1RzwAcWQ7SkO6vZAgC7zNr0C9wCRh
                      O9pBK71JJMo9Ul15PT/bsz20lY48Gv+vvahsi7wUFw+9bNXPvI3jpz0Yqzm8AB++O4BtiL2r7cM9
                      EDgRvQIYsr3ax2g9JBHcPD0pKL2gd6G7bSPDPR/Dnj0bI7S9lkMsPfcBS72D1549h2kgvTX/n706
                      Uza9whhAPQCUhbtAwue8lo1HPaAkVLuJgbE9fvUZPbQe7zz9mE+9NLDIPAZcYz3XYXG9kWGkPQg9
                      grwAZuO6QGFqPIq7RD1okJc8ELCBvYAf3joaw2C9ImwCPaTP/zypvaI9CAybvHCaQzyzyJk9lGny
                      PAVOwz1qCjc9oO7au4CFrL36Cxi91gl1PR7LRD1PYKw9sVDMPQJaaD0/W4Q9AHroOaoSyL1y0wU9
                      lYmtPW3vlT2wLLS7ubuNPdD4ML1HrSS9cx7GvQgfwL2g1NC8OzuzvQySjjzW+Y+90PX0Owo/Y73Y
                      h6K8edauPdGCyT13GJA9ypF5PQP+Or39CFm9gBZaOpIKmb0+64C9wC2MPJ+dyr1Ajhk7XZggvYp2
                      I72QWwg8BJsQvfCIpL0uVRA9MF8rPIC6x7rjHsG9+wCPvQAsarqa5se9CIqUPEjOtr2oAbu94I6J
                      u3PpV732NCg9LBr8PFtxoT1nu1y9hFTlPODqpjvhOLs90DQDPPGxnD27xKW9siY3PSl3hz1AjB88
                      EsptPU5glL3QgLO9TraQvcL0rL2AEcY8gPaqOxF9rj2XAo892vItvf12gD2ctQi9ddnAvdhqd7zg
                      ne689okRvX3PoL1iqkI9mNJkPCuthj3h0409gBAyvD3/h70TW2m9oD/wvPTK6DzvppM91F79vEBy
                      przDuKy9k9SsvaWxg73438e9YJi0vQA0hDrQzAw8JGT9PLnaxT2qaKS95N3lPOv8gj1/5Ls9AGxZ
                      OwJNOD0154A9whoNPZOoWb3I9IK9isMaveD6wTz0HuE8EQaqPaj1Ajz4noc8lOwHvRPyxb2POqs9
                      7H4Dvdg1arwezE49vbWTPSBMrjt9Yi69SAWSvdL0LD1tMIQ9SrQVPXABRLwiwjw9qK/WvADqeDzE
                      Q4O9YWqePdjWr7wPprY90AGnO4jQwDyjZMO9enupvSKMaD34EME8pbLIPQA6PjwA9Zs5ZnkPPUD1
                      bLywCZG7bkB7PSJ/Hj1Ynb69MBf9O+TDBb3C0GA9B4MjvaHkqD2YWck8sFM1PN2vk71V8b09tHSH
                      PB1Peb36qTa9/znCvTiQnL1Ui9w81qCbvagPtLzRxbw9aLSGvRcbmz0AzCW6NGmmPE1Xmj0kyPE8
                      E46QPVCb0juLLMw9oGgBO0Vswj3tMlm9o7BgvdkCuj104RG9F7GqPfAGA72weTS8IGKZvPIUcz1g
                      WvG7Qx0hvWH2hD2GMnI9rAMVvV3xOb20HuG80Ep7vOA50bvCqjs9mE6TvZZoEL1Kh5+9gNFRvQAI
                      TDyyZmg9UMQ2vDCKQTxXEac9YjMRPYAvv7otila9BhCrvex9uTzC0Do9Fw7BvXaDYz3maKG9QGOv
                      vXqjGb1gM0u7QH/wujciwj0IJpk8wOSguq3GT71A0mO7h+cfvYY0h71ghYq8kEkGvGiANzyA+966
                      ML9BvCJAo71YdkG8mZCLPcluwj04+rI8l9xXvUA20rzKBVI9cGZBvMxJn7zRLbo9SdiwPZdwYr0s
                      pf889B6ZPJqIST2qdiq9TFC/vBN9qz0f+oY9WM1yPDS/xbzE+vQ8DhGevQI+Lz3396M9j9C6PYgM
                      lrxgE+O7WiuoveDn4byylDU9YDGLvQBlCjuJW5o9DcEpvS6Iib3y0XI98EAgPJrLfT1gMWC9uOWr
                      PMMfoL2jw1e9GPF3vMLhcj2AXhu6QKohO/f/w73NPoq9IMW6u+l5oz3Tnlq9dsGFvUZVg70hzLQ9
                      gnsxPRuJlD0sd5I8GK0yPMl0rT1qpDG9gMn0u9Njnr03KFK99uVhPeqWHT3sF9u8KloxvVcPxj0u
                      52I92IcmvIfAH73ykcS9GFe0vZ15n71ihMy9EpYcPSkyjz0o5V48Jay6PUptML2a0Rw9M0iqvfKR
                      CT2Q23m9OCqPvdJ+fT1wnz69cIOcvd4KeT14FOC8Rzk8vZBZQ7yHjcO9ho54PayI87xtirQ9sR6G
                      PdIZm72fK7S9oIeJvdiQKDz7S7I9Dz6aPZjzBDz0Xos84xJsvTqwN71phZk9QCvduoZEl72FU5S9
                      gN1qvYDYKTxQCIy7oOqoOxepyj0is8W9jPcEvV1Xwb3I1ru8AEQavOfOdb3SRmQ9rr2QvXiNoLxH
                      mp09xPCIvd2/ij1aN3w94O+7Oym6oD399cC9R2GEPXrTi708dYW9/umpvcHJlz2TV5u9pxBavRjI
                      TrxWslg9OVWRPWDsfb1oZRK8Xr9PPQyQ0rxyLD49TjtNPWAoH701dMG9ihpXvbNNOr0XbLM91N+6
                      PNthxL0iRVk9aJ/APDPpwD2MxsK8lJEAvTYVFj2VYpE9wB5cOwxOFb1YCIy8KM2NPBAHsr1A0nm8
                      EndYPTpKNz1g9w47oNPcOzD6Wb1NUZg94LHJPI3nMr1gWLC97WNSvevyrD1tbVm9AdyRPSAIjTyF
                      75o9rH+hPEFSyD1IU4O948SoPexe4byaplq9xI3QPEBXiDy9RsM9PstQPSxjnzwgdiC9UBk5vNgQ
                      8LzAdFI7eMq4vfbVor0gkq+9MLtSvSD/z7uAiFO8ymkyvcSZh709yMU9xdOPPSBw+rttN7y9fY6G
                      PVpfTb19zMG9oJp6u9CHtb1wKXq9IskwPTs3vz1VYr89JEr7PHhiprwg/j298jkDPQw0lTyxNqQ9
                      uIqLvXMToL3ghdi8Guezvdwe8jyMqpQ8ytkwvYqibr297LG9+VbFPZnwxj0z0Xa9SMWmvB5jk71c
                      19g8+kFSvVo/kr2A2ZS9Un2OvSOlxr1Ffre9EgKxva5KBz0Ykpo8UgDFvWH5uD1AHMq8pyUyvcJm
                      fj346q+9+2GsvT27nr1AC1M8GpNevYxnjLzQEkq8oMPjO3iEr7zhT6o9uEOdvX4DGj0FGoy94GSv
                      vfm0tz26qsS9Y2xlvQhYqb3WdhQ9aLYQvFENpT0A45A8Y9awvS16Or3GcGw9DBIRveJfZD3ATSS8
                      8onMvX5dp70brp09sC+uO0A7pL2MAIu9QFdHvJ05Xr14NoK8qh+vvWowST3MF588Kl+xvbxBEL1Y
                      Agc8MKY0vRPYfb1sA+i84GOVPO/7wb3mthK9G065Palevz2nEUi9UG55vZiisTyh36Q9WJ2TPMD0
                      X7zA0aQ8i0WYPZS0CL2sIIq8sOV3vaDpSju621Y9QHhQvCMMnL14fI+9+vXFvRgsFDzbppc9qIgk
                      PGvjuT0gH/07Aja3vQonbL1lwpI9ULhkPGEMpj14EIc8ewaWvSq+zL1WyjQ9sLxtvMs1nL2Sb1c9
                      YE5CuywX6TxgoVU7ykYCvRPnVL2tnSm92UPHPWiiJLwpkbM9U8BivcRpzzwwoQU8d7dvvTAvP7ya
                      kg69HrsnPeYgVT2Arug7TVCZvSAa2rzzaie9HX2RvY7rm72TPpS97DeYvCmiiz04EZe8mBDDPE3I
                      xL37Qo49mw+lvZodCj2zPHu9AOPduRTPpzz4doc8+O2bvBzDEL0Ic4q9jMnwPEKSXz214ss9EE+J
                      vQBQrzvAYvK6VMHhvCzOBL0CEUE9cho3PSCzy7zxB689J1FjvUDkN7zGbKu9pXeDvb2+rr1qNZK9
                      yCrHvRDUnr2yTYK9r/mPPWjlXbwLp5K9jD/0vIFSpD0AI667yulFPZJDTj1n7lq9si1UPWydkzxS
                      Bmg9+q9BPfPDyj3AExo7QJH2ul/msz2VV6q9SN6LveFMzD1UQLO8+S+dPbu2rL2tuoq9sDjLu/Tr
                      vbxNyaO9GGYRPE18Rb0A/UK6apvDvUGMuD1zr8G97uo+PVPckT2QoRS9cHhJPMkIoz3MdRC9tA79
                      vN5FWD0AjoO9WFKtvADfuryAwlI8Pb+jPdiIrLwaM1C9Y567PVuEjD1raY69gG3Ru/eSqT0xKqg9
                      OeazPcwS+7wN0a09OldjPSoBDb0WCAI9g2W0va9FkD3KP4O9mLarvJFswz1kAOg8wkMVPUwLgbzB
                      tIs9kiuJvdJpwb095ZU9qo6vvQ5SXz3Sgcm905JpvVYLk71grcU82sWcvXA9BTx5e609gvVDPesq
                      nr18lgi9guS4vcoeGD3FJa+9+LaBvadkQ73q+D090HFyvKB5xLzXXrI9mMl7PMfJmj02xwM9wOkF
                      vBsoo72pAZg9EQLKPR6nOz3i7gY91ktgPZp/Zr0pDrQ9ijsIvcB2QL2Vzri9i5yiPQAX3Tsz7Ua9
                      mnNlPQL3uL0KqAK9LO2iPJoBLb3qQCs94CSMvFPwjL0WHKm9sbPFPTcCZL2MHBS99kM6PXTYobyA
                      wou7LBn0PB8KxL1AYZq9C+iePYqmOz1Ql647kTqnPWIKtL1dFpC99a6jvbhT8rygAvm7IBqSvABW
                      yLkDfCW9v9yXPap6ID0seo88oHvKPAAfALyqq769gAkvuqrZIb0v+oA920CIPR8iub1eHYC9Byho
                      vXe8OL03HG+9X82hPXBlN7zQH6S9ekFkPRizZrwwvE88oXKNPcb9JT2oIX+8zS1TvWvLm72g8A+7
                      2USvPd5KRz33QFm9Bg8KPbjB8rwAF4Q8RnJ9PSwG+zwn/mm95QWOva69Oj3taJy9/c2LvRZKiL2A
                      SPG8MuNEPaDgDbvjpDS9UA8uvbeGNb1y9Tc9Ei43PW2Bib3YYjM861vEPS1ii72gh0+7zIykPEz6
                      2TxgsLq7KFINvBo4GD0JKL09oJZHOwZ+n71KuEw9sBbTOy2Bxj2/E8e9PcuSPUmIoT1TiXK9qOKp
                      vC4jDz2AIIs8nwTIPYD09brTI6i9yELEPOxL9Tx4Nsc8NhMPvZr6vr3sZ/g8EnuuvRLrqL1SGH49
                      DWvDvdAuYTyaMDA952TEPXg2jzxF1I+9KJqIvAO6nD3vXcw9/9rGvUJxuL1fS4k9dryqvWqJPr0Y
                      ink812o/vWLEOj2gmMG7gPMdvbe0vL2oYk48ErfAvdQoF70S2y894HyAPODHt7vjyDm9DG2JvYTg
                      0TzDqoo98MVDPGgSfDwgxMq7nmRhPT3fQr0SEHQ9WZ20PeOrRb2WDis91GK/vCvDmL2TOTS9gMj4
                      vLa7ob0tIEi9toADPWhMdrwC7I+9ZTmGPZp9Qz3oZn+8umt0vdagFb3gf4e9x2nHPTrrcT00DIw8
                      G8+/vUE4uT2RkY49uh18vdgTvzxoHZS8yoxHPeowrb0f/609owVtvZBUn7132zC9tQSJPf+olT3x
                      KqA91ATRPD4oAD36LRO9KWSaPTpdy72Yt529p6kavSyY77yoer080A6Jvbw8g71gHy87DPzTPG1Z
                      kD0oSKy9TXyjvWgSQrzUzAu9Kms0vb0+b70abwc9EOvCvRZaQj3AYaQ8mDDFvWgkHLwArAQ8Rh5K
                      PW39R73qALy96rgYPdhHrjyM/4m8QVSpPdQAvTyEeOY8kciMPVf6Yr3pf4A9w78lvbwXgb2qrVs9
                      UMgcvWgWVTw681G9+BWxvT6mAz13Vxy9eMqDPEG/jz1ONoi9sDV3PFUVmb3gwpO9ggxVPdg1rLwA
                      pRU7B3nEvXmetT2QSam97ffCPfhzrzxwKBG84xBcvQ0SML02emA9LB8WvW+Ssj0Do3C9wsVCPYmg
                      hT3gzYm9tHLbPDDSgbtdnKA9YE+su00UH70Cuo29S4umPbY7UD1tzsE9Yrp6Pap7rb1NS7G9SVyy
                      Pe4qTj2WXkc9CtlWPRxk9TyzQii9MPFCvFJFy73xf6Q9YADCu2DjlrtxMLE9ylNvPTAadzy1SMQ9
                      qCKEvEASBzysxYy858hivUDdqL24gZm8GFAOvIOCXb2akYm9AH+uvOB3nDtAp2m76uUDPYeMRL24
                      5rG86qUnvXqkt72TTcE9GucOvSzP5rzSyaW9aAxTvIa/FD1Y/sa9gGfVOnInLT2bVYg9AoC+vdge
                      wbzdg2i9wqkvPc1QxD2wdtK7yNydvXg4sbxBZ8w9rN3dPMB8PLsgvCu9G9+qvU5EdT2xLLA9sxW+
                      vcAbuzzBLMM9cFqvvTStEL06rDm9zvCSvdoVdD06KW89N5JevbDYvzt3JUa9oBFqu4fWsr3wcBa8
                      cskbPRRPtzzuWSQ9LlMxPZrTbj0wzdu7kAkIvFSZz7wgaHK9dkULPQD/E7zCy729dqtxPbUCsL2p
                      0cU9EZzCPaIAsL3ACE28mhVtPYO7pb3ljYq9IKB7vd2FiT3V7oE9+HbBvMrqQr2tkYo9A0FzvQA6
                      qjngS7K7wJcRPGMuhD2BgrE9YLEFvWA657wiyx89Sh8UvWYoUz0Aa+S7sLynvWdEtj1QNoq9mWiU
                      PSiSfjytZVq9j5GRPdH9pj0EIfM8v7qlPV6Gn73YapU8LfbGPbAYV723Pbg90ROlPTMWpD0BD6w9
                      6u2yvUOtZb1gk+W7DCGgPFjfwTy1/Zs9YDTGO2A+j7vAtgC7RnA7PU0jpL0vSKM9cryLvTL8WD3y
                      Cy49Gn0OvbFBmT26+jQ9SYmwPQ6enr2KmVC9NmhSPSjTXryS0Ac99OPrvHNKOr1KCyS9aupgvUPm
                      lj1qBDM9d9pOvcExxj2w/wK8k558vapKYb0TjFW9kQmyPSzj8zy+PyY96IoOvNqVDb1ncmK9DVKR
                      PZfwRb0jNpG9ACTlvBq9K72QC8u94QOkPeDTiLyHfsE9Cl5pPaf+qj077MS9YrArPYAW4brJkaM9
                      Q4RovRyfir2aWIy9/HrZPE7xeT0Henm9AFrmu0baPj2LILI9KG8zPCoAxb2oTTI81XjDvSJgBz0I
                      Poe9VFiXvAANu7wStBk9upAFPWnEuT32r0E9h6xlvWCzh7wqriO9Q3WHPUI5yL1ShjY9I8s4vQBO
                      aTzuqI69g2+uvQAcI70oEu+8QN0wO3A5STzKX189tlYRPSji27xwIDS8Zw2yPdhXK7w6IVM918hm
                      vcyfvDxcHAG9TQmjPeAyrzyQjJ69gIjlu2KyYT0KglW9cBMAPHYgk73Y/sM82pUuPWYLFD3AVsm6
                      Vk8WvQ7bcj3gj/E7AI0svL3AH71uBJm9boQlPVcSrj0jUbc9Z6pKvZKVTj0A33G7tIa2vE4qeT0s
                      zsg8boagvb6FBD0MmtW8mKZqvMalC71gPSW7oEusvPdpsz35zL09KI33vKCUqDvqCFw9noBxPf24
                      hz2gla28a03KvcOCyD00Eem8IELXvOA8w72AEYY7KX+JPeHwqT2UOYa8DYxzvfBgb73A9yq9TgWj
                      vXiTrrzM0ec8ok6ovagXwDxA2SE7w42evdCzA71w+l294iVSPQRdzTwmVQ69UzrIPdgv9LwH0VS9
                      kGYYvZE4sD3ctoK96zq5PREalz2oY2y8TkVBPSJYCT0AIos5107Lvez1sLyAt9E7+tAQPXchcb3U
                      85A8zcaJPSkSwz1wIMC9aUOdPRBWM72WJnw9s1ScPdKeXj2t08g9SphmvSCiSr1qkIW9A1K3PeJh
                      Uz2qAm89X8nKPahabLxNxnm9aKZSPEBIdLz3lHy9MJS9O8B/srwt2bO9CqYKvQCMkLyg97A7ui05
                      PXGEiT1tKEe9KRiBPQ2grT2ZVZI9ujQRPXZEFT0Vo6I9t8fJPeUFoz2SDxw9p/rIPWJSVD2r7Yo9
                      2IeJvAAQdzszlcg90ADyO1RdyTwJzag98EouvRNRvz1rb6m9gPhwvP1pSr1KFoG99wggvbL2YT1Q
                      7Sy8UiMOPTMuoD2YiZw8xro2PQC8CLyo2/u8A3ApvagL3ryaggu9EoNjPbSPsLxtC4s9jkikveCu
                      rDyt/Hi9YMIyu2dtPb2AMtS8YrRKPQB3QrwDk5G96VyhPavjsT3DE669tjQxPVyIDL0SpXg9goY4
                      PTN1VL12kFs9gGYrupILdz12SlA9QIMpvVYxGL0ApF29GNmfvZqzeT3gTbG8MPtVvMzDxrw2BQu9
                      rTGevfbATz1TuCm90UGOPSqIb73BvoQ9Yrp1PVTBizyGhBk9wODtOtCn6rsAKSS6varBPRS0njzs
                      bxK9kq8ePfC6mr2aDCI9MI4XPNDulb32sHo9gFjJO9JNVD2gBK67oICpuyqEaD2UncG8x2JOvbR0
                      jrxlFoQ9LOHfPGKfNz3fl6U9qrdyvcVgnz3YFCK8AJy9uxC1SjwLmKu9VHLXPCXzi72UZem8WiFs
                      PddCtz2YOqe9rKEIvR7Sfz292se9dQbEvW5GfD2C5jU9sItbvfidrbxourO9DUM0va0Xgb3Uk8i8
                      NZ2CPUKmNT1nmZw9iSvEPVhZZzyMIf48EeiDPeIcdj3tQ1K9oiUBPYcoJb3sJgG9oAFqvQxdir3J
                      N5U9oI8OO3LXFj2B+Yo9fGjWPBDswr3T9i29IMZjvXNnR71cH4y9QD5+vHpLA71euy09yBLLPPnU
                      lD2ofW28sX+/PdAYhL3xLZM9pVKRvbCYr71AzkA7AhRRPQXdoL0pnL09IAvMvXXOyL1Wx4i9GvYv
                      PaGglT20tsg8rvcnPcAxFTxMSMW8u2GwPRh0TbywkgO82gEUvdi/izyDNCG9P7O3vcFZxD1yVri9
                      n0KzvUx3sbxSHzY9B6Ffvb0cur14i7S9J0h2veuhsr3mWFA9zFusPA3FpL36CRy9UP/su8FrmD0W
                      DA694IP5vMx8v7xj3Fa9KEEzPNrpPT1OgXo9gnZ1PZYKFj2AuQI6jxnKPSAX7rtgFy87yB6ivMCb
                      Vb0bHL69HXYivS4nm72DK709aLZwPGiFT7yAtKs8ufCqPSwjhb1ibxc9+jUWPXt4mL0aTnK9UILb
                      O8lDxT093xq9QKgEvb/Vxb2FBIC9/4yDPazzh73vGJo9mB/9vFQHl7yujmk9riILPaqWfz0ogvK8
                      N/GSPU3VL73wxC88uss3PaFTrz2L2bE9W72ZvY7ACD0lpsO9AwyUvRLeTD0nKI09bIsDvSpaSD21
                      CMS9zGSMPIVApj2oox68aGYyPD20ub0KKh49kWS/PRbkCz1gng69ANrBO878lL0e0XU9DjeVvePP
                      Xr2dNrY94He9PCK7Bj2agHI9KNy4vZWLkL3zhKW9VcCEvQq1Dz3PXY095f+/PRPofL0Inqm9AK3B
                      u7qcTr0QSmm8r/64PYCQ4bxDhci9AFGCu0lDwT3WsQu9JvgSPZm5vD0U6qS8rUSuPSWcyL27Tr49
                      tEX4vDFfsT2+rqe9yHGWvSWKmb0A7kW8Asc0PYBRULy9LF29/ZdwvdCxQjyzsh69zdHEPbruC72e
                      eio9XC4BveE5iz3wIk28OntIvZRsmbxmqqu9KIxuPMLiFD2AIdK6ks3AvTqRpL0NUbg9L4aGPaIy
                      Yz3nuW69ni4UPYJfZj3Xu8i9yrsVPa3svj3ln4C9CFTGvc9kwj3AUeq8UNYAvR0bH72TIKq9EJV1
                      vOURgT2GvzM9cv19PUyD27zH/2y9oK7Ru+dKIb1XOKw9CV+hPYBBsDqyDcq9LRK9PRusiT1LBKw9
                      5KrzPAATNL3H8aE9PwnBvbOVrD0VWbQ9l9k9vUVvnL0Ymq48gAfvO2OWRL1Z2Z09CBKPvLCOKTzU
                      trI8QL23PO27Ur1wFUC8QF6Pvd5/mL1A6Ds7iPbnvAL0XD0HgWW9AJbDO6CTwLtwimG8WaegPaqh
                      Gb3waC88KzazPce5QL2OVpe9kEcWvSLLfD2kP/88s5+4PeghP7wXFWO9DlUqPeDYmb1Eo/w8ANKZ
                      PPTdm7wITZI879WIPemyjD3gq4q8DWaevcmvhD2g8Ca9YBWVvDAApLtgzBa9yh8GvfogSr2YfEu8
                      /pADPSqDTL3odUK8zGHOvJXRr72J3a89QLdku9CuDjyPd5g9VlSAvRoUaz0wZS68CByPvVDmhTvA
                      WwS9NKy/vNJDej29pza9Kkx4Pb7oET0kXgu9QmanvWfkvT04eqG8RLv3PG+3kj0gdrG8ihq9vbY2
                      Uz3QOmi9AKEIPDc1wz1sS4i86PmyvKhzor1Cl7W9gEGCvR/UpD3FY6G9FUvGvfUthT1hN7A9NJG/
                      PBxB2DysxN4811qfPVS5sjxYmGY8AstFPYvxxr2weiC8wPaCvcjw+rxQSTi9x4GdPXOleb3oete8
                      xdiIPYDD3bsAtrU7rPzzPNahkr0xjJ89uEvXvH1riL1RB6Y9HNTdPAxbsLzU+bm8aNOvvT9cuz0h
                      1qE9OlhEPYBuHbzACp29TQuhPcCaBzuQ0gm8Dw6NPapFXT2VWay9+hwvvUS9/jyZ9ag9YGkIvWAl
                      Lb19U3i9gDI1Oo3htT0C+yg9Sv1rvVjEUbyTqMe9ubSEPQVfhT2a6iC94rk3PS8Snz1mRTA90rFl
                      PYxB5bzi/Co93hJQPcQ+B73Q/qq7AFvBOxYkHz3Zk4g92P+vvFgjQbz6wVE9rDXzPPxW0Tzogky8
                      hs+KvUVDxT0crOI8GA2JvD8gyj2QDGM83pRxPXT5r7xra5y9HQesvQCGaTmYJh6869qavYgXg73I
                      Laa9inGWvTCJ0jsA7nc8NAbEvG15K73NFn29IBVjvV7Gib2FacS9wDt2PN6lgL3AbLW6MNqEvfF0
                      oz33+2C9+MaKvEhZuDxjySG9WXu+PcAEObtMk7E8It9MPcPny72YUt+8rD7SvE0MTL0QtUQ8iFGJ
                      PHAewr1okba8+ii/vbUBwj2kWQ69fYGNveWPrT3y5Gw9s3BxvYbYFj0/uLu9DEKhPNhMFbwcpeI8
                      8pcGPeBRuLtAJ0k8FbqOvSBqZ714wsY8bcysPduYyz1Jlbg9oBd7vThOh72CMjQ9iv0pvep7cz2U
                      dcC8SlsHvR02Vb26Gh29Rf+TvdAR6TuUMdS8ILeyPDflsL1MO6U8SYCJPUSNB70A33+9CdyLPawU
                      6TyorXc81s1kPQj74LyAQ/y8YJq7O6ZqD71AlXm7FfDCvUCdirowliK98LfHvaNpN71ss9Q8C7Oz
                      PS3meb34KJ88iaqSPSLhSz3xCpQ96htvPRnbiD1nJj69vX8nvcAQhrr4tIC8+EORPKhmNryWO0Y9
                      l0C6PWDWbjv915m9gGstvCXJjT0Kd0e9QhY2PclOkj3ldI69JKzNPOKHSD3FpaG9bZ6OPZpBcj3M
                      k/w8KYq8PYD6dboh4LQ94ASqPEuWgT1Dzpm9oPCjvOhAfDxMIqk8pJbnPEDXcb2SAH89j06mPbdS
                      Rr0nGpI9wYaiPezsgL1teqm9MSzKPdBuBrwACuC6LMfMPFhREDyYnJK9KLlaPEjYoDy2/109DOLl
                      PPmRtD0ODDA9lqklPenWuD2AXVa68q4cPcCoEr0diUu9WU7CPQB4NDxoQYG9m9GRPWaLWj3yokI9
                      lDzSPEMhmz3ZGbg9wIMAuzIFnL3qCym9+BnTvOpsDT1dLS290nHHvcTl2zy31HS9YcCgPViQXDzA
                      0FA8EpdLPVBvZb1KjSw94xZgvRE+iz1zijq9t/6jPWo0sr2WuFM9FlMOvTiNqryW9gi95UWVvaow
                      Zr01iow9W3yzPTXGvj3xt6E9F5U9vVAcnTttGJi9cuWhvbh4iTw2LZW98FITvELBEj3g6sE87LKL
                      vIE3kj0URZI8YOEZO7kguT2BMog9LO3nPODn1bsQY028ramzvRZDh72i5Ws9jok7PXKvpL0AAkA7
                      FL7QvKaHAT0MW+G8do47PQpxlL3tD6K9z6O1PU47eD1AHyW7uA+7vGtZjr0KGJ69nyaQPVWBsj2z
                      5qG9oBUtvcLePT1gTHy7lSWNPQA8Xjm0i/Y8O+K2PcoEDb1Hnze9oCBuO51wmT2qs6S9BxKdPVCN
                      Yryhtcc9Od23PdDljbtmWxM9uIOaPOMalz0nAL49jPHpvN56fz3FFau92QiRPcDDFTs2e4i9CdnB
                      PYAKiLwoA648AHLKuog+j70eMou91RbGPcwbmbx92z693DvgPMCZKr2ctBS9lwA2vdN7vb1WuzA9
                      42+lPXdpqj3YKYY808qzvYA9Qb3s0Iy8WidqvV0ipT0Au3O8i07JvejaRDzYtIk8w5KHPdjbPTxs
                      v4O92BmuPCrLK70nw2u9iRjEPQLtCT3Vt7a9piWPvekAoj0qoVw9vR+OvaMEX73RKaU9E0Gyveiz
                      xDzOtqW9Is8aPevGnD0rg8k9XBrZPKg3RzyJeb09rK+fPAws/7wDTa89ATW4PSBTzLta9Gg9MD6T
                      veVYvT2gK4e8FNntvD6aGj1K0UQ9hbKSPSIdl70+C5K9RziNPXuboz3WkXM9HmgRPRpkYj2VYIa9
                      AOwhOh7rdT1Bosw9uJWtvIAAkbr3cB+9uvZZvV4zFD26Rgi9+Mq1PFlzhz1itTU9u+KvPcIaUT05
                      vso9uJPtvGBf+rxOfDQ9QEukPH0Wuz2Etuw8GEJnvACrnzuB/pg904nMPWBsTL3s0oa9HulBPcnz
                      nj2o1Su8I4+2PYMguD1SRH09OoqnvRgGI7yy0EQ9ifeTPUBWF7xQALK9J4lqvW26Sr3Vw5M9ALEh
                      Otcyuz1oha883mqSvb2LmD1E5d08C77IPR0Fxz2PlIA90AVAPEUKsD3ArGk8gGbNO+tpo72A1gK8
                      wymePZGhtT3MWA29YiggPSwvsDzUgOa8YmWEvQDigztapjg9lNDzvNnahD2QgMG9QP/EvHSqhryF
                      q4I9AHSJuFX8h717qKK9ZfmuPfeCY73MocW8SGuKvAAirjtXRHO9mCrnvABffrqgx6M7bLjlvCye
                      vDz9d6m9TAX6PJTekDzyWKe9TY5nvfIyur2WRlY9uH/GPDMGo73ZvKI9WPCOPEAWA7uusjM9p39N
                      vRe0Pb1BkZQ9wOOnvTCbFTzM1sS82LkXPIyug7yD64o9TATUvOahFT1AoJm9znORvccOG70OK2g9
                      ShPMvcJAMD2Xj8W9kL4zvXv3kb1GC0o9gGJIumNqzL1ddyS9IKtJvSz02zxCjQo9YdONPTlLrT0q
                      U1E9QOK0PMDby70OZFE9ssZ1PYsfsr1SQSg98thEPbCyWrzolwM86f6iPQD7o7y5h4o9eECnPFif
                      qr2/wa69NbuLvTrPtb1Kfwm9IKPMPHbpkb24Rpk8YKWCvQCEZjv9wLk9mIjivIAJCbqU8I48kvRk
                      PWrKPb10f/48QIYmvJLJrL0YQbU8uH63vCtGob1t2mG9Au1KPUn0pT1KBo6987cZvagxabwArX08
                      ROntPErDQr0bLMY9AJgXvDcVSr086uo8oW2yPQEauz1U1pO8jMD8PE3OV70jxqU9ki2HvcDSSDx8
                      OdA828CavVJlBj3sSMk8Y8euPdx4C70C+CA92r4OvcBYQzwF3LW9QSbCPaP9wL1KlRw9/bytPV10
                      j72IJLW9+D6HvHZebT1xPbc9jmILPdAQWb14La+8jRyivYfZlj1nU5E9d9pSvUbmXz16zlW9Mw0y
                      va5bcj3zHj69b7PGvTs5xz3rCZK90GUJvNe1uD3Ajb48SvwOvbSZ+TyHyce9k/cwvUN3tD1WLxo9
                      SiUwPQBbtbt5KZQ9/2imPWguMbwYjzO8sHbou+NRaL38VwS9esYavWkWhT2ke9Y85ooqPaPFV709
                      wmi94cShPXt8sb09uVW9N5ZQvVoIeD2r0cc98rU+PUfiO72A06c6qwWhPcC9TDufI629XXm7vWf3
                      bL2gpea80um3vdmepj2gcAY7QP7MvIWhqz3iBa69ygBqvTcRLb1FMa+9jROHPckyoT26Hja9YIYn
                      O72gJ70wMMu9sqd+PaTE5zzVpKm96Hp+vH0Ruj1++yU9yLrhvGl3wj2707Y93WMdvV1vtL120oq9
                      YqXEvVh6sbxASm+9CvEuvXTWnTz3QsE90wixvSczt73rKZy9n7vJPWLUBj1bn4+9BBUUvXB5t71x
                      08o91EWiPC6Sjr3Y+ti8SMruvJS+F72T2Cq9lACOvFfaMb3YUC+8wwqxPf+ttb2N9JC9BUijPRke
                      jj38DIW9AKXFu3ikujwigL+9AChJukA8cTyclQi97L6xPJpHL71wCym8AuSpvfiWzDwAIgq7zwnC
                      PeMiI73OlU49YIDlu7BApr02yzA99eWevUCjAjyw/Qg8y7K6PejObrygN5i9cPJ/veIyXD3BSsQ9
                      30TIPWwez7wzl4E9TBeBPIb7CD0qBTk9cut8Pa+5xT0wsne96jAFPeinTTzXlas90WKUPYAFqru4
                      CZ69YOsxvQBLbjvCXWk9l80/vUdkv700qcO8XkIXPbdbfb0Nk8O9ABEEvORi3DwAsnG94OaKO6xE
                      obxYDRC8wmqtvTEGjj2Rr509tj8NPdjJX7wExge9RE/iPBgTojzZmqc95C3TPLRXzrzQR847bOSN
                      PLawFL2oNS+8FMTwvOh/pr0gtJU7LU90vffMrT0iypW9IMvzOx3TnD1IHJm8TCPmPCpuSj3Ay5O8
                      OjZjvcyppbyi8Xo9/QIrvZORYL1ALvm8oOGvvRC1Zjy+cTI9KqRovXa7GD3sZv288Io+PC8tpz3B
                      sqg9rVZmvVUNlL2MfIU81cmhPSd4ar1znI69Giyuvdi1XLweZDY96c2wPcpqBT0gx4+94jZ9PQQY
                      ir1A1lO9CcSgPcHqlT2dIp09AOKYuXJDaj3zyqO9EuaPvbBx8ztqQVm9ipWvvai97Lwoxr+8YKAh
                      O2DdFL2wofi77l5hPSpxC71xf4Q9rUfGPYBCrDyBho89tLu6vPW3lj0Y2ou8jtF1PfrDfD0wyWe8
                      +uSBvUCGNLyo9sS9h9AnvfZqEb2wiEq8AAIYOxfSt73z+rS98O5kvFavo71hhYc9i5Seve2YzL0U
                      k5E8iL+LPILlgb2TNsO9E5ugvUNYSr3jxne9piErPYiaqDwAUX68AJEjPAHCpz2BzY89FR/FPU0E
                      wD3tm2q9I/+kPW5sGT01ecC9YEjGO4W/yz2uM0Q9vmRhPfIMTz2NrLs9s7S8PZkokT2yPS49iqJN
                      vYDNNL0YDya8w3W1vXisn73sXoK901MzvYifr7xXj6I9EntLPehofLxMUd88zZi8vcdNUb3PWMO9
                      wKCNPAC40rs6zbC9KK4BPNJksr0zhz69ipAEPW59or0IZ7E8UmWkvYFDij1m1Q29VcC6vamZyT1l
                      pbu9kvuhvVJzOj2ohIo84CWmvHDCYjzHtkC9ArUbPVZyTz1CZsS9UJQEPCTX3zwWgWY99LCjvGIo
                      Ez3U2Py8+HizvJ73fz1xor89PQXJvZ4Hbj2Jg8E9sKEbvAPnKb3oqnI8n16jPWjYczyQ5iG82qSJ
                      vTCouDvZK7E9VQudPQAwLjsjJnW9lGW2vCDBJr0le4g9Nx5qvap0eL0S1aC9feRlvWDlwbym70s9
                      JslfPd4CWj2CgSk9N1Vbvb3kqj3wxxq8lf+pvbrHur3kmPw8dwe9vTgmiL0qjrK9FL+KvMMsbL3a
                      kl09jd1UvQGnsj1uUXs9aOeVvJ1vyb36Igu9Nn9nPcYMBz1riKw98L48PNqEa71bq8C9jUSfPSCD
                      e71gUaQ8vURIvcTx6DyLssg9wMXevMIRED1XNTO91cWiPUw0v7xJK7g9+WqVPTA2mDv+6ns9SYqb
                      PYLNSD1QOT88uRmRPaK+Ez3IEoM8gnIWPWB4Ob39WG+9d5pvvTTqgryXc129wIlePEmHyT0QJ268
                      cOlZvMF4nj10zJ+8aECaPCexZ72o99q8Px+kPRkZxz3e0yI9IcO5PTdfeL3vHq69v0bIvQKiZT3Y
                      Zy685MPQPI1WOr1NajC922zKvSZTib1vib69VYuBveVxrT155KU9mFrGPAD067tsdOe8iIiXvWwV
                      qLzYi+m8GzKqvQZsiL3++3E9G7bCveC52LyDVVW9J4+0PWhTZTybCJs9cQqrPYWuxD3D4VK9cjSk
                      vVHzij0AZly9jbhqva3gWb086hW9MaWCPf3+ij2NfIU9rKLtPL6kmr1A9gO86YGRPX01Sb0axaC9
                      9hQ0PU2ngb3UTvy82EasPKqXCL3V5qA98cOfPZtPoD2KjZ29/CjwPPJRXT0C9gI9MmABPTIMFj1Y
                      hai8yH6KPLNxaL25Vok9TE+QPHIuFT2sMxS9zU0zvXriOD1zF2O9tCmAvVBa/Ds6fUs98EcdvdjT
                      wTxjhKY9jd86vR7iqL3ARVU71okjPQDdX7uSZmM93k+RvRqHyL1KiQw93xnIPQZMjr2IsZ29wOCG
                      vIYdDL308808oDn9OxxN7DxKk6q96EIuvBs4pb0A95i8GaWAPcBIzTooz7G8uAzrvEAz5boczBG9
                      jGKjPLCzCb3dWcY9qJv7vJAOLbxUP7a80NjYO0UIsr3b4JC9qnSjvVi4ijyA1cO7Sv8mvWBYGbsq
                      ORY9iDuDPOJ6ob2tHYe9/S59vRpoJj22cFM9LS/MPUDMnjygkNi7+GGSPAuAgD2gD+a7IG3Fu4D5
                      obsACoS5Y0t3vWegUb1ZLYo9UBUsPGjilLwQSFW9WHVAPPoct73Na2i9LJ+XvE0Doj1pfZA9oOmk
                      va+OgT0WvIm9QHVsuzKEPz3nApI9Wkd3PX2nT72MhA294sYGPbvVyz2U6YQ8OAuMvDARXjyK9Fw9
                      gJlTPJh9Q7z0iOM8A5ZtvbBAP73wEHa9h8Atva6RkL26Cgm9MmRnPfMbU70WR1g99x6EPTPEhD2x
                      AZE9hKLsPG4tJD394Js9AQ2kPUXprb2obNa8/eGVPXeMjz20tOO89mRsPdNumr23LV699sckPaCU
                      hTz5TYM9QpYMPcb2Er3AIWO9bB/KPPNywz0gStG79STHPVXCxD22jBY92aCEPUEJlj07V7W9gBby
                      Ow1js71yOVg9epJave5XVT2dZIa9RuUDPT9us72wJIw7ZktXPdKROD3N57u9wH3evGIOqb0wXRg8
                      b7OxPVjhEDzEOOI82t9DPT8VvT3gpkG98lJjPW3WLb0KEWa9hmgGvTh8nTwT+UO9/jyJvX3Crr1m
                      YwA9oeHIPYDfgDzKWqe9gIaPujKIWj2KknW9sO2nvXMOM72wy4Q7Uj1xPaGCoD2A0SS6lFABvWCY
                      KL2g6EQ76rUBvWINq738DIa9tBnCvBjsBDy9/Za9iwa0vYMxer3Y9rc8zUpNvQ0KPb2jBD+9K+e7
                      PbEdyz1Ad4o8hkOWvdjsXbyDs569HzvBPWTI2zw4M7E8qO/APOqtWD0CcUw9kpDEvcLIAz1MBra8
                      JbPCPdC0BDzCjqC9ZUqKvRaVPz2ljMK9JTq9vatImj2x8oo9CA2/vECKFbyq4To9AIAauIfRQb2a
                      qSS9uyqpPcXqpz0Lr5I9WITMvKCfKzvIQrw8aOyhvOYPBT2Y2ao8GKabvX/6xb0WzlY9mbDDPcAR
                      ZLtapEe9HSOuPe6Nez1jzLG9WocvPcDdEDssgMC80OM5vLq0qr0HZ8o9Mg1YPUEVtD1g6Gi7sTWV
                      PccViD2qWTo9E/JavWGTqT0qzTm9GkY7PSksnj0W6HI9hmU1Pagw3Lzqzkk9rFLPvNp/MD0CI1M9
                      8iNFPUivoLx+4kM9MB4bvABKsrkgr569jj+CvR5KUz20ufm8wNs2vMjBlL2GFmU9558avVpnIT1M
                      GJU8BytGvXqZIz1wTaq94CwsvWP0sD1xmIo9j9WwPVLDaT3ydHc96JJivExUnrwwpZK9ANQAORZc
                      Fr3UU5A8rHKHvSjoEjzwKyA8yCPOvO14lb0KyVE9HGYOvRTZ2bykuIK9hgupvbpKOz0BHJA9wLB7
                      O0AYkbz9BWC9DJkSvYqBIT2rGKu9ypSTvUeSar1zFa89SBjSvIhFx72MAue8ABPIOTb1BT2jm789
                      ZZ23PV0sy72a7pq9rpuEvTNqub2nQ7S9UEiEvYzb5rwEVPc8Iq4PPWEsrz1e7WQ99bW9vV2UJL24
                      Kbi8W92ovb0oLb1gF827PFHPPL3tuj0i16G9qLaLPIAXZrziWRY97QlcvdRX6bzQsJu7iOGhPFsd
                      rz3AlJW9G2qOvVo5SL0Y04E86WXEPS7rYD0O0B89UFgovElXjT2hpJs9pk+svYDH87vCy8m90AEr
                      vGENlD1Pp7y90E3Zu+hMYTzi0aq9q7STvQkeqz1MzIC8Q5w6vWqFeT2n9Ve9v+HCPZh3xbwR15I9
                      tCvqvDtSgD04h6M8Wy2xPU6UPz3A3Vu94IrZvABlw7k33be9NXKjvfL8Vj3Ujby8qI91PGB3+Dvq
                      9nO9fbapPUBcMTsG0p+9M1xCvRP6Or2CIIe90HkAvdLPQz3nNyK9sc26PcVpqb2gWe+82GpePPaA
                      VT2XI7m9+d+JPQe8Kb0gIIi89y26vUDX2LrwySG8mIx5vN76GT14uPS8VU+CPaZxh72A4Qm9+Mat
                      vWfPvD3H1UG9Z+vEvdW1p712/i49pkWHveAkIL0MXpG8nXA/vR2Qsj2wUY87wCyaOj70dj0YJ7K9
                      e16tvVoumb1O/Hc9eEWPPCaDob0ZEps9GJnJvXtCuT3SwVQ93e7JPTuwyz0AnIc7OskwvWkYwj3g
                      +fW7xk0bPStlsL1WYEM9SjAePUjv0LynOVC98OxGvAXSwz1t9US9SpcavdASgbuNWya9AFReuXQi
                      2LzgIJO979G2PY4OST0I0O+81YyRvdtGwz3zk4I94PoHvUAPGbsvRri9cEBwvB0xxb0wkkQ8ADX9
                      OS2ff71AYGU8QHlnu81ppz1gtPO8DEjuPMZoGT3R47g9uDaGvLiFqzxI0Z+97FrMvE6Iq72rEsq9
                      V9HAvWYxQT0gPM078t1IPYCSvrr2VhA9FzXJvXalPD3d8Mm96GyuvCprGj3o0nc88FEdPI8Hpj0a
                      CT89umMivX9VqD0Le8w9YPBqvZ5hRD3GmoK9+TSwPQDlv70Aca+9bFb+PImqij3L98i9sF0EvLra
                      Zj3G1D09opGOvUDpvzoYX5g8GDVYPBrihb1wNwy88H9GvKm9hj1qWAu9ysFjvRofFj0q4IW9Rn5F
                      PWKpLT0TLCC96/6APeozyL2dDqk92wKYPTMrcb0YWVu8JkU4PVYBdz0zE8u9tWqmPViZojwJ2sU9
                      rRmivURb/TwQ/RI8hNb3PNU7rz2Hbrc9N164vcIVez36bMC9Ldd9vctrvb3qWyI9+x+RPbrOur3P
                      oJ89ngeCvWF/sj1kQ9w8MITTO4DIvDvarh89ZpF6PfjmuzwA/Ty7bMKyPAApU7yY7mO8BLr5PKrA
                      dD03FKg90E66vQjdob2WhA09YC9rvRRoqbw9sbu9oNVOO9K7aT3jxiy9mgdsPVAvgLsgNM+86Kls
                      vFCDIjxwehy9gosCPRAIMr2zcKi9IJhyvc1Mk72Kawy9sNg6vBWvhj3hp7Y94h2mvfpQJ73zBWq9
                      9M/YPFpYFr3isXQ98g9lPTV2ir2Yb0u8Z00qvWDv8TuA++m8qoEQPeI7qb0nr8a9gOItOr4pVz2a
                      cCk9R6AevUoKAL1pv7E9go9CPaA0h7xA/4A8RiB9PSCimTsAnRw732W2PdCMAjzuHCk9mcTJPT2Q
                      KL3jyp09ofSgPRE7uT2VwY+9gK0tuu0bpr2gbNo7Og9xvX2QqT0Pvbw9meOxPdrpaz3eWyA9Lblv
                      vWhPdjwgOiW9yujBvQwe97xB2pw9KKWlvGB6tjtQ2a67kvG1vTRUrrylOME9tfXFPUDsAbwgsaM8
                      uq5QvfA5Ub06BqC9haW7vWX2y72UJLo8KXKXPUKjnr3Ndo+9sVmmPVL7Fj1oOVY8aDj2vJiLrTwe
                      AZm9Hu53PWOUP73qKws9GB0vPACdOLsatwS919hAvarpRb2UGII8gIXxO198wT1Ir4K8XO7yPF0R
                      nD1A06A8qvNwPXf3Pb03S4E9sBptvTEtvz1ytry9UFdrPCA07LtDqJ29y723PdfIzL0c6/s8Kvx/
                      PciLhzyEOBe98Am5vRAdTLz2v1c9ZJLwPGqSeT1tNMg9mGkMvEIEHD1gzvS8NhgsPQd+fL1TrcY9
                      ssgxPcONwL3UDuw8sLW+vbcIOL0hb549a1+/PexL4jzq3Gk9aZCjPTFQsz1dITa9QkJ2PXgenDzL
                      ZZa9aAAlvL4naj1d9TO95XvKPUriWT1ySGc9lg5SPRhuEjwzakW9KPy1vaBz0DvCY2Q9AOTDOrJU
                      dD3y7zk9sONnvfC3cLxz8my9AGYiO3FfpD30FIO9gdScPeIkXT01UZO9SZanPV1wVL3OLgg94+lV
                      vf3ZvT2OBjA9YeGXPWvetj1sV8U8mJ2IvEDoer07QKC9KMeVPEf1V70AiNq7XW2RPdDJ2rt4d4y9
                      aBCsPG4/Vj27KMw9l9CMPYewVr2fIMc9sidXPaC747ugUtG7q62mPWTy3TygBDq9LdY3vaRr4Tz4
                      8Ma8ULlNPEgeo72jPbg9HPwRvTbzE72QyFC8ORuqPZhClrzozl68WcuTPX/vvz1HwRy9AM5rPGwG
                      h7wwKo47FI+yvANVxT1h8JE9I8e7vc5faz2GxlU92EZovFMOnj0kGxO9SnFBPQBoU7tstBG9Pk6I
                      vYOEnj3dZ8k95K7dPLeOwL0507U90c+VPWhtdrw6WjG9x+o5vTAPqLvAigq90HM/vMXmq71noqc9
                      7tJKPTCuN70QQxA8CKidveEutD1/K7K9lJrwvN3hgj38MuM8I581vSsGrD178KS9s+e7veimrLx4
                      FLA88Lt1vMDFQTvll4m9zU2DPXAkmr0Iu8c8jdSyvQ8ms710OOe8atrGvf0idb3os0g8+sglPUuX
                      rb3Q89U7UrM6PXzN4TyoY0+88yelvfZbHz0Q80i9UmM3PZgmzLzQiTA8Gim+vUhXqjwS5AY9KEyG
                      PKAbgjtAina9BA3+PKd2T73AdAE7U/levdQbmryRXoo93R1XveW6w73FK429wG71upgd77wI4Ju9
                      hm6Qvc0CzD0kwoq9WFTyvJHRlz06AHI9oGMqvdoJqb2yQgY9sE4tvQCE8bvaEDM9tC+uPModMr0M
                      5b+8Ai8TPQK6Ez3Y5J884297vVIfFD1lUoo9loVvPaYzcz3kiPg80m5qPSjKmTzVa749t8B0vQpj
                      Wj2wKTc8VI+RvPFepj2YLTe8iqFRvRIPQz0Ok0I90CBXvbAqhDsoCco8K9iMvU0dIr3mCX09wJEj
                      O/ltwj0gisK7tleJvYBgfrxH6jG9gAR6PD9ErD1o3hY8eKywPGDVO7v29YS95TXBPUDzb71IF5Y8
                      fVecPelowT2Dane9jMP5vG4+Bz3OCTg9Qu+XvXo6Tr2g2+e8CaGMPSDYdL0Aesw8rC0UvWYrBr0b
                      kpq9APINvIFThj0YD0a8qtdoPdMNTb35v8U92szAvYPMsr3tEVG90FcPPAV3jz3J9rw9V0MgvTnG
                      gj0KXFq90QqRPfpNaT0qEFE9ZeWEPfBZFLzY6p28wMZ7vLSTB70WQlI9CDaGvagtdjzjn709sMW8
                      u4dnwT1C7lM9ZV+QvQoGGL3CoxM9GCyVPBKpbD1PAJc9mMR6PF2bpr0IgIq9yGGSPAghmr0t+7O9
                      AICgtkDRWzuO2IS9ZQGgPfGHjD2AgMK8xHHlPOJcpr1QZ148/zSpPQ2+Xr2mZCg993SSPTIgHD3z
                      WaO9FyiVPZXpiD0+fis995WZPWgWKjzoSY+8B+KPPba1UT3wyjQ8YCzGvfKLcT2ib3s94RGSPUVk
                      gb0zlsQ98X6SPaacE73BeJM9Uo8fPYDPzDo4zpS9OE2UvdiXnryqrjE9cu4YPUj2wr2ooQY8gBHs
                      OkDicL25oY49UpwVPUdSNL1GFZu9NpgKPbDM8zto66296AzMvc+zrD1ogkk8+HS4PGBJDr19D8K9
                      7hmnvazxwjyzNX+9BOzuPDMCsL3bi7y94X7APbJGZz1xT789BaS/vSJYOD1lBL+9wBvyvHAWM70d
                      50u9cVqPPeiGEbwN1Dm9GuIxvRERqD0T8Ig9qFDEvCidcTwHHnm9oPFNO9Kfmr26UUS9JGX5PIAf
                      3zuwF3a8V8C6vfb2OD2PmaE9yeShPegR/Lzyhy89sExbvYOynr35LJQ9+SeXPdrvSr3YgqU8A0Bk
                      vTpiXj1jUXe9InF/PUfWcr1bTby9qMQpvOAihbvwoDu9p2u/PTBemDucFdc8sOWju8DMcjuy9BQ9
                      gJO5ukxgojxSQTY9vTmZPdbbk736HlM93+qVPS4HAj20kJE8Xc+3vV50Qz3UWtM8Mr7CvbDeYjzJ
                      UZ09FzJyvZibhbyA1am6oD/Wu0G7nD1g6yY7MlNWPXRdzDzY3kc8wE62unChXjw/PLg911XDPYC7
                      orrQ2ua7Zp0GPYYhLT1gmio7wv6FvQGZjj0s0BG9c2lYvWw6hL0CkWQ9yV+TPSjkZLyS+is9OCSD
                      PJgaxL2ijpG9uRmOPT2ukT1imLG9bPTrPI6wNz2Q0jA8IqqRvXnEvj2iwws9gjSCvZAxGjxiqz89
                      VshiPcHvkj2ttUC9EMp4vQKkJD0wldS7J96HPTBnSjyhfa49sRuqPbu2wD1ro5O94+6dPThx2bzq
                      0VS9m4KVvZrBBj09ZjK9+i8rvUwD6bwNIli9JQjIPdCJ5LvgoOq8nRRCvYQD4jxgjqu8aKblvDBc
                      qLu6rmm9ckB1Pb8fyT2V+pm9FmIJvXR1zjzoSfe8Mw0+vS0BIr003N08s1aIPehrRjwzbkO9UNRI
                      vfapdD1gn0S76RSKPZvJkL2U8uq8yGa8ve3gvb1M8rs8OwKWvfsBpr2y9zw95118vTl7kT0g2SS9
                      eh5lvSDHib0An2U6bGSqPKJ7OT0L0pa9WLl+vE4qAj2IHJm8AC9MPNg9GrwBuaE9QDJMO4Nkpj39
                      lCW9oKq+vLMZfL2qnXC9EKF0vL5aLj0HdL09vhx1PffUsb1vk6E9xPzlPIBG+rzAfq86DqyCveCR
                      ojupDMw9o9ScvZSLqzzQqJS74aCjPdl+lT2QP569KKTtvAmwrj1gXlG7IFMFvfB5g70IOYW8t921
                      vYbsPz3iO189oIc/OzpGSD2lBZE9qjFYvbLnVj0S0rC9EkCsva2xur1q+LW9Db66vT2gIb3/psY9
                      Yq6cvXMLSr0TbLE9mFdkPHaFKT0sRMS8rXaZPcPtcr0A0uS69D/rPLsOtr0704A9A9C1Pd0phj30
                      BIa9c4SxPYvAuT1CB149GPctPC23tT1gHIE7AFLMvADbUbpMasA8rp8xPQgdor1cCNc8XxLLPUYR
                      DL0X2sC9h5tnvZjNUDyQdQO9Y3VSvaR9hr1uuzE9rVuePRt/nb3b9oQ9ehV7PXVcuT2oHK88q3Gp
                      vRXxyD0AAzk6UuQ2PSZfKj30bwm9ju4vPfopgr0yFjI98iV2PTrKwL0JJJw9aS2pPQBFLLy//ZI9
                      XdOuPRjQRrxjVaE9WQXIPRR01bwfMbI9kF1APHVcnj2a3U29ZztMvfgclr3XwFe9wU2SPYI2JT14
                      4aq8vz7APbCv4btikl89onM0PTzu8jw9arE9gnBEPaaKUT0gdLy7YHJAvXJ3Dz0UFvi82kIoPdJm
                      VD1KZ569rhI0PXd/kj0/vI09YXmbPeIFDz3yzAE9wGfBvfHCsj1C+h89gHFEvDLpej1+4Tw9NdbH
                      vaynrTxguTg7h56CPV4FrL1QMa07lh2JvcSl3zwH4KQ90kmxves3uz1Nd2K9tCnvPDNNc72tJ2+9
                      feglvUCTnzwTvpU94I/wOzCZZjx3FbW9cy7LPXYvpb1Cubq9nzCMPbBY/zvh0LY9An5zPVbUNT1a
                      bya9P/6dPaTT9zz5M4Q9emAyPVRp/Ty9rhm9wUuyPdAQq7vaBBw911CyvTLhaj2gPeq806y1vSqj
                      lL3dQTm9qu0uveKpPD2g3t+7OrAgvRTs1rx4Wcc80PQYPAP8Jb3yKay92ODCvZL2Lj3aaio9rv1C
                      PfYOpb0fALe9iwyOPSR4GL3VCr49r5mdPQOXe72iiTE9CF2MPECEqL1wKCy9mym6PerxD70m2kc9
                      4HqLvIcQxr3ljI49ANT0O5AqVzxMKp+8tnpvPSL5Vz3AhV+8YPRhu1N7f70Uapi86qkjPf2Orr1g
                      ek87h5l0vdoBLj0qIW09KVfJPVDjZ7wI5qY8lZigvTPitr31Asm9dZ2jPYCrJLy9E509QPsdPGE6
                      lD3HKjW9U/S1PWA/pzt2P3I9QNCfvANDp70kMc48oNyuPBacOj3WUlo9O4fAPdf2RL2H8zK906Kf
                      PeaHDj30soS9APRSvACz0rm6KrW9wTyZPcACvzoeEgc91+BIvaZtOD1T4LG9xwEavUAd07zEjfA8
                      aoUVPV1ycb2i1Zi9Rxt9vQBbHrygWck8MiEMPSNkbL2UzO48PBYYvTojMD1AnyK8gJZeuttqnj1H
                      0bs9QJNXvZS1wryJocU9iXvBPYaTEL2ZqcQ9ZFvgPDmjgj1XXS29oAzdO9HRtD0p0pg91qMJvZov
                      JD1A26q8eByqvQDYXLzL7p+9a3SXvVLTbT3UsAe91zRJvSi4O7wYeJO9OS7BParkEz0H+3+9wFru
                      vBj4hzz+fY29xsllPdC3C7zt1Mk9V6GLPUeeZL0wkau9ixGovWDGd7uXRz+9CPuoPMqmAz3llIk9
                      oimvvZcnSr3g/t87nzusPWsilD2+dzw9+LDLvWAfBzvYr5y9UnhMPeouxb2DOMM9jnN7PXCqxb35
                      YZc9LR+vPbp3M71tFlS9chVlPai+frw/b8C9aIedPIqwFD2GXA49wIIYvWiwKTxH8449lnmqvSFb
                      wj04L4A8Mc+kPWhCrL14DZW9IFhovZJCor3uuxY9mDIRPGhJpL0CpG89ByKzPQCuj7rLrrW9GBuP
                      veDOpzyMFpo8zWetPR+Pvr3i2H89F/CgPVmLgz3NncO9UgxUPULPXj3T35G9gh1JPYuNmb1ARQy7
                      6mwjPSjwRrxYf4A8gF1bvfoNi72oOV08n7ysPQASSr2KvYe9wN6svO5XLD0ykaS9qDxpvOZlYT1N
                      mJK9UrOyvQTr3jx+kRs9x8suvfLGuL3J24897uCOve3Ygj24A6I8sPukO8mnnj0D/Ea9ZTGMvQ9R
                      vj0zcac9p9RUveO5SL0DnDe9Itw1PSbyEL2odDW8vH3qPJAjJjws9ta8I06SvW/BxD3VU4O9Llt+
                      PZl3kz3oAq+8Ho5GPYLvHD3oOLE8oFC7O3rncL0HQ589dYeTPVL7Sj0uHx096AQoPAIYpL2yZio9
                      MIbCO6JvVz3KcB89Fl4jPYyhEL3GnAw9QGMxO3s0sr0AFfm7x2SePRRGnzzgU/q7YAmIvLCkZzyD
                      hb89AGmpu1qLXL1IRoy9oY+bPdBXNr1TqLw9EsdxPdCKLrwuh5O9WC+EPKKVcD3OMEc94CT9vJ0F
                      r73GcZ297USVPVBLWzwYpxM8gGTuO9iHYDxw/DQ89yvBvYOgVL1brKY9WYy7PfdlR703BGC9IEzM
                      u+LPSD1Af0872MPdvDrQSj2QZFC9jcDAvWApGLtAAFm7DROwPelIgT1N+Ty90Oeluy+XpT2X4IQ9
                      Wz7FPZ64Mj0p1609TFLJPH2PgD0AxR88Dt4cPXFtgj2qQSm93ZN+vejJm71Ydze8FOS2PCEvkT2b
                      rMq9jDOrPEJGBj00NgK9yuWcvbmUlT14qpq9pOHuPMtUij0wLB28A/QjvUHSnj1zmb89Kg+VveKD
                      AT2dXJi9QNRyvPo2az24T+28MLD0O32Hxr0V6Is9gGFVOi0KqL098VK9wnMEPYAm47zX/6s9s+c8
                      vVIWYD1CRK29d16tPQ35UL2evAI92DJwvO/vkT2mHAM9U7mmvfa/oL1MR8Y8qpczPTSzsjy9aj29
                      W2fMvdCHuDt35W69gxXIPQLfCT29MCO9CEG4vRBYhL3CL7a9VhOQvQtrxz103qk8GIpePBRlmzyN
                      Ti69jDGLPAp+bT0gx4U8bp4APeo7IL1Ay+i84K7qvPWLiL24/KE8Zjc6PZTWzTxyGkE9gBX6OtBi
                      lb1oew289RGzvRYYDL3Y3jk8VNXKPKO6lj0wwrO7UyBGvUfyP72i40U9IWOgPZwCiL0wDii9LOjO
                      vL3Jmz2wri69mxalPVIyfT3aRqO9FAyHvOzozbwKCmA9Z7hNvVCCwL10wps8y32/PZDdWrxmYD49
                      AIANOKWMgb3Uac+8uHyHvRT8xDxcdBG9RKv1POkZgD0Sh1c9FhQmPSgUbrwYbFA87AbAvOeprT2U
                      eJo8Kuw2PSeKGr1YVLK9qbSbPZ7fPD24YZk8d1qzvQn8sD2/hrm9Wgp6PYqQNz3yoj89jeqTvSjr
                      ob0gD4a8bUY7vegpALwjGsu9+lp7veIeFT27bKA9ehtmveaSTz1rpJi9kpc5PUAgg73wzDG9IpcF
                      PZImAT1A33A8kAJPPFBb4Tt3bmq9FBewvLmeyT2A5U482d6bPZzdFr2FpJu9jXqgve7iFz2AlpS7
                      eux8vdeKXL3w/Ke9bqYxPbLPJT3cX+Y8wN9kvZ2AZr30msi8vddYvXgXzL2gd6G7u42yvQKHib1S
                      xYe9jMnCvKYKfz1ysXw96dzFPZvUtD0aliG9urQGvbCtSDy4oYa8boymvUK1az0Gz4W9cvl+PfHt
                      xT1jOm+9+qx9vQAVRDpDE5E9+jcJPcGPiD1eiGI9WAfFvC6/mr14rJm8Ew+PPZD5Sr3J14Y9x7oy
                      veDr4zvz8ZK9eVfHPRzD3Tz0X/w8BglsPSYlDD1xZKQ9uoVAvbDS5jvSUMG94GBPvYptBr3GQis9
                      grxOPcXnjr0SK1s9teSxvbnxuz19NLW9g8bGPQNvm70YysG9S+SGPUCepbzOV1Y9gs0kPbrMED3p
                      nMw9oZ+nPVZNlb1cO/884O6FPGMMrr1jQ7c9q2S2vRWom72kEes8qOJ9PImYoT3mUHc9gHcivcau
                      Ar03xmm9Jx1VvbDQOzw2Dom9T7y0PdCSnzsAK6W7vzfAvfb0fz31C509NHfZPLpETj0odrE8oLYM
                      vZYUez0wtQ+9ktDEvb3cqD2oF+S88uNcPX6ZcT0s1wy9psAVPdBTO7z1O8Y9SHmgvDBgOLyrda09
                      md2XPVj7qr03TEq9rVChvS84mj2eYBg9h4U3vXQJkbwgDJo8A/NsvQ0ryj36j6q9NJqevIJnWj2e
                      NkE9x1Fxvc1nJb06HBI90vlLPZoYJT2KMkc9HKHbPJ02l72V8Yg9zG2qvPjKuLy7JY+9ky4/vfAd
                      u72lQa29yHiKvYgi9LxFpaW9QE50u4CR9LxDezu9/2+LPfqcKr1uuwY9un/HvZ4Fkr2wh348E9iw
                      PSbdo73DMLG9PnMZPWo7V71vXri9E3A+vQBETjkLBsg9Wq4xvQCaijuAw5c8aZqAPX2htT0amIW9
                      pH79PC4+Vz1SUBQ9sGUsPC1eZL1YmQY8oF5YO+we2zyxxMg9AL1BOqeKhz039cO9xA/pPJDzer3I
                      7oq9OXTMPQBNCDywXUW9BbqDPYaqTT3b4YA9RXOCvYB4sL1ZQcw9gCa2O/C1R73oBa28AG61OVb2
                      Xz3K3jo98DnJvZiSqbzlsI+9Iu5xPYM8Mr1Clp29h401vfaSDT3pu40922OtvaJAsb3TNi6987Ct
                      PZcvJL3Il8Q8AA1aPLA/YL37ZsM9nT20PZgOTDy2IFA9CjskvTCjVDxVrpi9OA+lvD5iDj0oSNu8
                      2mAPPdM8j71TLiO9zmM3PWDKOjtkgvM8hqFJPW18dr0YKyi8tFqovJAhcTzQZ2u8B+VbvSIkj71n
                      Psk96EpYPMOxoL2QJFI8uQm1PcB2jb0W56C9YOWNOwDfozs6IZy92iR1vXBeabyYpcW8QxVkvf8e
                      pj1syoY8Uji2vVhHjb3A0le9kbnAPWBSKL1OIyw9LWqlvapBib2lFsg9qDMyPJFOiT3oiw+8ALeP
                      vUfBx73xl4s9OBa8vd+Rkj3xRqM9LP23vHozVj2oVmS8aiwCvV9Frb30YKK8AKa0vCh2PTxW5T09
                      OZCJPcxZvjyvdrm92wGSvWnkyj01UcI9MrVfPcN+tD0x7a89sC5QPB3slT2Cp0c9ReulPZ+Ciz14
                      SL88qNMNPBS+/TxoUpy9ypZSPVfGXL2ixRo976KzvQBxer1B/KY99Dm/vGASoTtLo8M9DPH4PADg
                      hzydP7s9nYvCPUZvcz0Y7wC86LgjPCqOXT0wCeA7QBkvO7VQor04A5E8WCmoPL5ObT2gl6W89jVC
                      Pbj/ub3YrxQ8rZmcvRk1oT3CSh89enZ1vYOrLr3DPWK9h/SHPQuxuD1SvLm9fcnFPQZ+ej3CNUY9
                      IrVOPUD8GzsMoqq8DYE/vXqHID23HnW9AWeUPVhLBbxPdcG9jUlevTJFq72g9Lm72hV2vQxCjL01
                      jsm9UMdNPNg0X7xjLJ89WLPpvPo6V705sYU9/pwFPdq0n72tpsq93Cr6PFDfczxdL7K9S5upvQIn
                      ej0DfaA9KP0LvJX3nD2FGaq9bN/3PIrQob1yBUo9QNQ4uxZ8gb3wU2e8cpISPZ4oj72pG8E9o9RA
                      vW19cb0wFI69IvRNPaesGb3rtZg9IEerO3Hwkj3KV1y90C1oPLBEpL0QrD68TL3lvA1ts72TP2G9
                      AU6TPWDLI7vh9r49gHb0unBaEr0JHMc9wM9fvJqGdz0rwsU9TQE/vTyqi71il5e9UBkAvKzCuDwa
                      IAE9Z41HvbwN3zxFF5I9+aGwPRrYxL3gxHq9sDFPvPqXLb3Ryco9wBkwO00FZ72y46u9wBC5ugxo
                      rrww40484N6tO27dND2tXZu96qNPPfbxHz2gLJK9xEACvZSTC71eohM95Qa3PSBU7Ts5y5I96uIl
                      PZ6Nir06DsG9cJYTvXF+iT0VCKk9ABdmOqiRdrzNwza9XVGzPSIZHj2BPoQ9DZOYPVSL1jzsnsc8
                      sC0wPHf4iD1n8Kg9MI9VPMYSoL04SbC8cpUgPZRq9LxjbmO9AApjOXO8lb1B6bk90Pq4OxgucLye
                      uyo9IKylvOJxWD3jv4U9/p2ovaKsSD0jO2m9oRCpPW/ZgD05fLo9FAjqPHP2Ur3WDjo9XlEfPWIW
                      jr2sgRe97FGZvGylobzAzie7VwnMPVTD4LwzLsG9gmNhPTjJzDyFroy9qGkgvOArfL3M86S8HXST
                      PYeaRL3XVnS9eTLGPbV5mj1rMsE9N91Jvf12Qr1ZbJ49sOXlO6VYkz2q6DQ9Gl9hvYC7QbyMMb88
                      XmFHPWDYwbuyhh09+JSevG3OIb1gGbk7mrECPeZLPz14MbU8suopPSmpwj3qyTe94/ZZvcftJL3i
                      JlY9N9lSvfa3hr133K+95Hj8PLAJ5jvYgpc8VWaOvWWIqr06uHQ91AwHvRBfGr3gtOm8+ucmPZhZ
                      mbx4asy8NkqIvdOwnj06zxa9fqiOvaC+E7uYUJq8g99vvSXwsD0dIos9Qml6PegErTyZVZQ99wGc
                      PVFvsj1uXm49IEvKu9Poq72AqEW9sHOSvQwzsrxJ4r49AphHPSsjr73wvli8PlQYPbSBg73U2OY8
                      mOfvvDRfkDz4sZ+8QV6hPUYPPz1DdUq9B3J0veipjL0azGw9wuyhveQD3jzjr7O9oN/4vEUOqL0Y
                      5Fw843gavZpMT700zuW8+dnKPbg3vzxbc6a9cHJ9vNmRnT2M15E8EIE4PMzSwzzoRPa8ola/vZSa
                      6zxXdGS9RNfYPMr0Yj2AIoO9VIiEvF99sr3q0SM9dTmjPaU3jr2wECu8+aysPTiiwzxi3VA9qDUQ
                      PIynFb0bWLQ9mml9PVAIcbwAMOm6UBCKvZz9C72NDCS9I8M9vVhlprw6w2G9gNS7usPMN70ADRO8
                      0BwKvGzc77zAnmY8oOFDO2+rw70CnwQ9VkkBvfCmBzzSFLS9AmKyvVgXLbzowFk8GLGZvQopZD3o
                      f4a8mnJ9PaS02zyV4ou9TjBkPahIDjx0TOA86k0BvdCi1zv95Mc9vNYRvX7Yi71o/xA8YAvmu1jC
                      yrzIE+G8moh8PSckuz0SGDo9wMddvRKSjL3Nq689BmmAvfIoRz1ULL681PX/vK0UOb0zPam9ERuV
                      PZrEQD1g4rg74zg1vRe6M72w/hW8xSewvTIETT3oSG+81H/MPArtP71M74S9sO6lO8APGrwouy+8
                      uqadvVjzubyZXoA9xAb7PCNDmz3S1QU9yFKaPI9dyj1g2C+7ACC7vMqZKb3YmhQ8IPf8O2Afljsw
                      lz299eu6vbYdCb0ObWo9MKNcvVBW5LutC3O9rrZYPU1rJr107LG82K3fvHpRdj0DDSu9QSq7PS6z
                      dz1Sdbq9oswXPap4dT2A7LS8mr10PVKAaz2Atmg63X+mvfaWDL1LzaS9IfGHPcMPNr0zHMQ9gy9e
                      vXKEsL0Y4b+9gBtgPGPnWb00Aay8uJjnvLXovz1qLqS9lay6PYKHdz2/w4o9AWSkPejshrxYm768
                      YBPrO04WNj0iS5K9WBuhvKMgsb13qEW9Nee8vbCI5jsMtdE8MIj2O2jfvbyF6609XTWmvejTUjxn
                      sFC9rC7TvJfaPr2NEjC9iqoXvSImVT23FHm9M2invaSP3zwj4k29AJPBu+h+qLzOAJW9qrNTPeDL
                      lb3avXk9fT56vawWjL2wWKK9wcylPdD0WzwWqRI9gMiAvEkxzD2Zu6w9WVeCPRDRHjyi26y9NdSf
                      PbOwsz0GBqO9F6UfvaiAujy2wVU9JiunvcI4tb1HZZs9qvctPToQor1lsZM9nbeKvQBgDjqAuGk8
                      M6e/vcPYWb1+5gg9QZCQPWCYizyAFwO9tI77vOgJNTxIpIk8y3WHPYBIkjrS67i9anYXPf1oyb3V
                      6YI9wuc9PUjIvb28qNM8IAVlvWDrbzsk8f885joZvTOhZr0d8SG9qJ00POZuhL0zuoc98uCfvYAW
                      nb0Sc1Q9IYWfPW0dpL2AI5I75KjSPJe4Wr0381G94C+3u8XQpz0Ds7M9kz6uPZQ92zz/o7U9NnoI
                      PeQrB70AeiK5GJzkvEC1Tr3WQ2Q9kBRAPBvMyr3dVsK9aAcYPIByeDrAfjy8LdQbvWgHlbxUIsS8
                      N4WwvQAlXjst28E9RbaaPR2TxD3Ab1q75bimvS3vgT3o3bk8IE2rvcBjCDxgVJ48IPcWvYCDa7xe
                      PVE9njipvXzq8Dxu0U89u6ehvddAIL0A6pe80nPDvTD5AL0UH9S8cxltvXrcaD2ELOs8YbaSPbi5
                      xjxYRTg8wIbuvNmNrT3JErU9Zc/IvYC0nb1EEOE8Do6MvTKPHT0BO4I9yPqrvFI7Mj0INZG9DAPW
                      vNjRCzxpV749gNjbvBCzCr0o6fG8KHhhvICYpTqI1bU8PGndPNNniT3gpJ47ma+cPb1URr0AlDS5
                      Dz2BPTqWHr0Kpmq9+R+NPZmfoD2NJ4296Hc0PPBxd7z5hb491j9sPWDUqLxu94W9NE6+PNheaLxY
                      rpQ86AuYvUBWTbwyRhU9k/nAPTvQqL3XfmS9j6HBvWCg3DsejVk9wlQXPVSHq7wAA7+9DpcLPZif
                      vLzRk6c9B61XvTZUfT2pbMs9AzAkvTr0Pb00SpC8GGauPIoNQr3476G8ChFBPTVipj1B3J89UG+k
                      uwB0c7z6UzC9kEVIPK6pWz0f7MW9L52MPdGWgD2CrZ29xYyfvTaWAb1PtIE9BkwSPbNfjb2i2iw9
                      7TCavdN7qj3/lcA9xEzzPICWBjqImJG8sCvUO36XBz1dm6W9kNQCPAjhuzxMFrs8i3iTvSJyPz20
                      Q8K8g2xDvZjvH7yg1d07hfzCve3bXr2wYUE8dTysvWCNRb0Sq349QMGVvKzf9jzAi2C8091EvcH3
                      rT1FUZg9gOanOn/3wb0EbAK9jpcwPetpqD0AIaW7oTeTPZTJ7jzDeTq9lP8EvaAdEr1hHaY9CvNd
                      vZf/SL3J+8I9l/6wPXBJqr0AGRC77vOnvQZdTD2M+PW8CwGkPW32qD3oBo29dJ26PBKSeD3Jdsk9
                      SIa0vdNmp71iRjQ91bfKvbAkWb0hTLI99r+FvaBlEbvdn3+9aNKBvNQgvjxEZ/A8jdazPR5Ihb0o
                      RXu8jnobPRapUD3kJPk8cojGvSkPqj3iKwU9bDvFPJGqvz3ChgQ9y3KTPaD3zDt0Ooq8mhVCvd4j
                      Cj0gQLC9iCqbvGjlbzzAuxm8kmtRPSZDOT23mTq9KMsZvEp8Uj06dTk9p6FAvYFIuz0oQZa9cMY2
                      vVAp+LsIhpy9ctbDvWHJjz0YvXk88g1IPTqzKL3O0aC97NuGvFhK3rzC9iA903EivVMdR70AXR27
                      pQuXPZKaPj0WOwq9jVqIvRaoSD3wFR88ikUMvaFsvD0ALPW8r0WuvSxA7LywwqQ7KHlWvMomN72Q
                      L3s8taiMPf1mmz0mtYq9AApTvbpdHL3wcLa9zO2QPKKUSj0MjO28EjcoPZCCS70Ijr68BU6XPTN+
                      eL0LPo69WRKuPdT9Ar3ARR+7eKnMvXGswj3zvII99XWRPbNOvT1NbIy9QX2QPafgu73QDjU8kLNE
                      vTa3Bz2l7qu9ofWuPcnNlD1H1z+99jZgPXZGk72xRrQ97CbGPBEDlD3EFQq9E8+YvTNWoT0p17o9
                      kBQ4vd+Ktr3sao284b/KPTQ967zHJbK96IWFPADkgTr0hIU89J0FvaWtv73gkbW94ORIvUzc8rzW
                      8Ww9EJ0tvTC8aDzsVKA8n2nDvSCmBL1phJ89l9jEvdgCrL090LC9aCsJPJimezxD3Lm9OKm1PCSl
                      /DyKMUE9IO7VuyEXmz36ATk9/p5KPfGdjj1u4YS99cK6PWwiEr2qoIG9hH7PPPoqSz3bqI69+Of6
                      vKg3gryUMMC85LmGvcd8nD2qP3Q90F/tuykRkz2qL2c9t8jLvcBZJTtNKaw9AFLLuyMVVL0vLsY9
                      6xCbvQb6RT1xU5w9NihGPZh1HbyzNp69B8ZAvTP0wr3YGKu9+slnvS5kPD1kxgy99MSivK5gmL3/
                      C6Y9a/7EPfmTpD34QLe9oDCgO1So8zxaXnK9Ht1NPdDwdb0M+Ra92I6aPIrwX714UPq8xSiSPRJi
                      OD0e3yc9TmWkvXDFhr3wTQC9x1QjvRLxCz3xAsg9UssBPd4JZj0/saU9cAoRvAu6vb2kSPg8GsZN
                      PSJPzL3KwmE99wRGvXViw73NJm69QIOIvIOLyj0dU8m98osOPdhvAjxrD569avRqPVWyhz1Fwco9
                      QdG1PSrYY71X21y9sR+LPX/JwL2AVzS9L6XDPbw0zTxs4eA84w6pvejImbzQ0gS8+vlRPVMIRr1g
                      DCK7qnssvY/9yr3JUIY9mhMLvZlOqj1ogbQ8ajZ5vUhBnL2VJoO90HpivA73q73AoKy6hQqZPcD+
                      krqYthI8a4WCPce+mz2OUgU9MB7CvTI5BD36tn89qodIPcfOtb0dsqa9Y18fvTDY0bsL8Ms9XXZL
                      vQCMvbsAAvQ5akkovQDAwzu0J6Q8AB9Xu8BF1rw82RG93/qxPRvAlr0KR729vjYbPQxRg7ztnZc9
                      /CT/PCd9oz3eSXs9nR5vvRICrb1Yrem8uKmTPBRs/bzAF+u8AFDAt3A0mb0ABkG9MFT8O+60hb1w
                      CCE8pJYHvehDe7yohXg8sKcqPFnSqj1KIG69AQmZPUDCq7yp9Z89UxPMvfKyDz11XKK9aOScPKBr
                      OzsNk4U9HixHPSBDtjvA4kq8KGNUPFacIj12mAk9KGmDvRR/vTwlKoQ99WyLvY+IsD3TUY09Yu93
                      PYPGUr2Ss1M9K8zMvZ3Jhz2S+sa9HUOnvTBtm7t6G1s9qqMBPfRj/TzewVY97MO9vPpll72C/RY9
                      4dq/PW0llb0g/Ny8mmx2vc6ymr1JiJI9jmFMPY9flT3vn4M9w1bDvc7tTz1KQpK9sst4PRK5nb2Z
                      zsk9pn2qvZiz8byQ/2i9xQ+2vV7IBj1SLTo9xMLXPC1SpT21tb09LCzyPF0Dmb2NpbC9GHnovOBe
                      /TtyxCc94/tXvUbsZT2htJA9Ch8CPTOJK702XgI9wEl1u2Mmtz0oUAG8LiNTPQDSULyTPpy96JC9
                      PACFkDwAUT88UJU0vcw4gDzoiqk8/UOOvWdetr1Azau9oNCAu3CYRr06O6C9/cubvbNhZ736gJW9
                      Qg+ivV/Jrj32dWw9dbTMvRiZxb2lC7Y9gqVrPaITYD1DMae9kEIcvBqUab25zco91Z/Dva3JU70o
                      5Ia8nfPLvcvTsj0qtJq9gmEPPaTX2zzNgaE9sKAZvLeRfr1X4os9sjJgPTRXurxYRL29wJUiu32P
                      m72QP4e9KtRpPcsKlD13Q3i9aN78vPjx8bzysUw94ohaPYA/Krw0ns68aiGCvQDa4DqjP5+9V3GC
                      PQBADboCkT89ABrDvOApDL1xCJo9qGVFvMyggDyIwqi9duBrPYGLxj2UUvI8OiE1PXhpnLxJKac9
                      CUqCPT0AP71SNmY9KoRVPd2zkT2F/IM95jlVPTpyML3ypGc9SY2bPdLjpb0vvpE9S1GLPbiD4rwU
                      dQW9VuVpPQV3wL0FqZ492OuhvLvAqj1IYJG9bLC8vJie07zATDe7iOiXvZdYcL2g3Pe7p6yBPdQN
                      wjzU5Ma848ZVvb74Gj2wuqW9mbaLPeXtpb2ClJa9p5i6PaCtCb0xoog9d4SsPaoMj7332MC9BDPP
                      PPMxvr0eiTw9kEgAvew0hr0AXrg8YjumvcCojb0Da5498Nmcvd3Wfb0mZRK9BpdQPYWQnD1Nlpo9
                      IitMPXjDhrzA4kS8n6umPZ3Ou73QmxW81FCevFji+Lxzjjm9eLzLPBLKcj22OQi9dylmvWbBmb2w
                      pZm77gIhPRjKrbzI14e8rcW8PZQtwbwYpsi84OuLPJqHAD24HZu9X/bDvVD5hLu2YUI98tY+PdaN
                      qb1u5xU9ALZBuXptVb3dhLG9dEXBPM6OBz0/rIc9MGnPuwyE+zylJsC9gHzyOrM8K71E5eM8HXdw
                      vZR9hbyL6o89XayPPQAN/DmGd1E9Uz62vS0xwL0AWfS7UAB/vWvUpD3qlDQ9/++9vRdjHr3V7sU9
                      EHc0vc8QjD14wY089bXLPUo9M73zu8E9lDqrvLftwD2MwOQ8HsmjvQr8FT0LEpa96MqPPKCYortT
                      jJq93SpEvYkinj0syv68QDG4vE1cUL3tLI692Hj9vOjIrr1vHbo9oMv+O/T7rbzClD09MNYgPIyR
                      mrz6SFc9ZUuCvVklnz390oC9CWDMPTJWfz0q5Ds9brirvc+lrr1gTb69OZubPYBC3rseKmE9AHBq
                      utq7xL2DfaW90u5XPS2nxb0AUHw6dZ+AvbCX87t9OZS9WiEzvVDyFr0jFJ69u26/vUB/ibxxfbA9
                      uDudvTvTgD0OaSI9GKOjvFjxuzw2gJm9gBE4vUsrm72AN4Q7iVmmPQC9szvxJbw9W5WTvUCkTbtV
                      98u9VLzvvCdmL70c6ou99Yaavfm5oT0eFJq94JK0O7XToD3A8Ta89iMSvWyHhb2gB747SRiNPb3R
                      gL0gcLg7MGgWvCiq47yRQqs98lZhPcosEr3wdju8WuTEvV5uIT1aU0g9HbtGvSPNkr1cyha9AD5i
                      vFwLzzztDnK9pDkXvRFqnz1fpbk96PhSPGDiDb3wrjC8s4p4vZLBEj0O/lI9enIAPT9duz3yUEE9
                      kMqevX6+Iz1ns4c9WHkBPACkXTvdc6y95rYFPRg90ryqULe9gEVYPOzUrLxCUCs9V3ulPe4XKj3E
                      ht48LV17vdoqG71N9JG9cDN5vXQwizzT5J69KgBrvfolBz34E8S8Goa7vZlanD24YLY8pTa6PQXN
                      qD1EbIm96RKrPfTIwbyp2Zs9HixfPefSJr2squm8kPhoPOsBtz3oBiU8RmcePTfEU732HBQ9QOaZ
                      vf2ktz1kM/Q8bLHdvE7gSj26oEg9I/2jPQBCuDm4AZ48SWSHPd29rb0Azvg6ZEXNPPmTjD0aLSQ9
                      rEOkPODkubw1mb+9oLE1O10iLb13E4A9EhAePWRb5DwM6O68B+THvVMjbb3IdKw8ANsIuyAwh7vw
                      ei88tgIzPUCWA7sgoIs889COPa5oKj33hmG9PU+5PSgunb3DTse9CBTKPOyl/rywvO27YHgIu5gD
                      wbxCFxo9t3stvcAwgDrMgu68vWojvbhf1rzHOGq9qLMpvHDiHr061ii910HLPaRp3zxirKq9lP2p
                      PGC6BrsAqgI86meTvQjcz7xleMQ9eXSjPaaIej2wMUq8xF3lPGzIyjzb6ZE9qE+3PM9Htj0ogde8
                      FeONPQCWA7zGnqa9myuhPR6YXD09gbK9FnEZPRJ8l71Mbe687D37vOhlVzwYyIW8ebGYPW1Rtz1Z
                      QqI9Z519vW9pwz3N24S9Z6TBPcDxGzuCKQs9UWu9PYowoL282gG9O6myvap6Hr1e3pm9oKwNvaAJ
                      rbzk7es8Z1GjPd62YD3efB89QCPIvXLBrL2g2p28GFyLvCYhBT3O2TU9Og20vTo3OL3YsrO91CII
                      vW0/hb3w3ii8MaGzPWW1uD3EF9Q8E+omvfjT6LwjLhy9nc12vXPNyz1Sz1M9rWXKPVg3uzxwQUA8
                      wLwWvctfp70HTZs92GgAvHbPB71tg3+9okumvQBgDDtsuNi8mPINvJDdI7wwKJK9ADKpPMpMUD1g
                      idG7qhFVvcAxjzyU1b+83y+rPahziDwneDi9mLvIvdQb0LzGjw49+MavPN38wr0CTHk9LYw9vRTe
                      +zywUYg746qNPbDApDvoZXe8BZ2FvT2Epb2aMTi9UHvMuyfvKb0Ie6a9VrB3PWWYpb0N4ze9jX0l
                      vSAM6zsAP+k7aGQBvFVGlT2oPsG8QOtmPCj3C7yGFyM96KuQPAyHkbxUccg8ai0NPUw6mDzZiJY9
                      h/R1vdLJUT3ylWs9qJDyvNrBq73uAFk9MBkTPGxulTzbicI9oCLcu0I/tr0sAoO8EDgRPEaucj1n
                      aK09g0a3PcAmCzuQuqq9ifbDPQCxsTsgXc47sMj/u5Gipj0sy6U8iAy2vIDUubzgCdi7lM/fvEV8
                      i72QPl6843aZPWdriz2APYu8ohJGPeNasz0GURA9kLRxvDf6UL2xoqY9vI/2POrUWD36sAk9Oa+8
                      PQ0ivr1t0I69uVKtPZXqqb2HZIc9EGYRPKu0pj3E+tc8ZtcpPQBiPjv7yow9tbawPRD0PDza7rO9
                      Q1oovRVWtj3iXL+93ya6PWh5EjyTR449a0yKPZCzh73Vjbm9sD4xvZOuMb0Aj6y8UDt2vVfOoT1b
                      wMI9AEUPuoDS5LwWOBG9eioavUD7E7yqxV49QNNru9qCMT0DYDq9B3ZHvQcIyT2uvho9rxiPPcqx
                      Nz21kKO9YcfDPUpnKr3ZrKE9p1AzvQAWpTy6OR69whMUPTAbfTyA10C9d2iRPQC7b72dy5k984iS
                      vezgrjwXLiC94k42PbElmj3hwqY9MWLJPYAMqzqEnvI8/fievQCBZrqN9Km9mrixvT0huj3+75i9
                      bC2PvPqRDz2S0lM9GS3GPWhbarwT2Iy9Y/6mvYAujLwEyeQ8NGvVPAjgsbwbz6m9VbCTvVJ3ZD1Y
                      LkA84KOGvGAP3bzqw1m9eKKfvBXnjb1gj4o7O6q9vUtGrb0E3vk8pdaGPZgJdzxU4P28jVaLvWaI
                      Wz11raq9i1SdvQYTqr3TR2e9V9ArvZj4ZjyYfUa81+akPSbYHz2XBU692ocbPVYmor06sDS9MNgY
                      vFfMGb0gEaA7vYJnvfBaBL13ojS9ociHPbkyiz2A2xG9yso/vYcVV70hncQ93n+Mva/hlz1AeiI8
                      +HiWvFGLhz3YQSI89+ccvT7mNz2wbgK8WKosvMELvT0nY749amZnPQBOQrzNIKs9AMmcvBqWfj31
                      hbE9qFGnPNvrtL1lML698YzHPfB5Vb03ErM9xjYBvQCoHL2YCeu8mCpRPHb0Iz2irRA95QGQvYAe
                      +jtUCqQ8LfKdPag7CzxB2IE9oI3vvOogJL2qWyU9GNuEPCgk0bw6NFu9feAsvbu8qD2c4IG9oqRy
                      PZB8Zzz26ha9MceBPfONrT3Q3DA8MKFUvR+Htr14Eq29UPeZu0gCiLzsD5O8APLYvNRZD73pkro9
                      6DXAvGqCLb0Ajwo6xBXfPIP+wj2YabC8gSHMPYamJD2CPFM96xKBPZQp47xaiR09vZ4uvX9/tL3g
                      po48d6B6vaqnGj13pIA9zLmrPNUymj3h8bI9G/eYPQNjdr2rqKA9gtEKPXL3Qj13zp09BotDPagh
                      lr2Qlpm9hrh+PUA2trxQ95I7+OPnvGgMtL1kTha9AGAHuScGmj1SQ3U9ZtAxPTK6Zj1QEo47IFo3
                      vcB2yDpXPLy9ilhDPROXUr2Ar4S871WmPZinWTyOLlM9W03BPc0Ftj33P2y9keqvPUNOvb0+d009
                      gNjSuigTUzzUF7i8QKBUuzd3lj2DtG69gOO+umQEhb3TYme9yQKGPc65KT2jUZ09e+e3PXMajr0A
                      nVq9bXivvQtdmj1IL7K8wPIXOxq+lr2rvpg9DDqQvMluoz3WuW49sDCzvSfErb2Lup+9UtQlPQCM
                      UjuQJnq9yHWGvOs5jD0MHdI8hhUVvRBFkr3Pvq69mGS1vOA3oTxQnS48cqDCvUlsrD2gili9JXfA
                      vaTO5TxDWH+9ntapveQa8zwwhUQ8LN7+vHjRmb1VX7S96F4MvEwv8bzAlIK8irdTvQw3h7xQ8Ui8
                      U2gnvWQm7zwn2Ui96v8hPdc2fb3CLTE9wBtlvAB38Duqbg29uTzHPQ7YZj2nLme9fuGLvfpys72S
                      u2Q9jc4rvQs8sD2gZp870Lg8va1Bpr3ZOos9U141vcPYiD3Ctgs9dee0vSgnNzxggAs7QMScvDHK
                      iz1joJM9yJCOPAoAr72497+8MHg7vUwqCL1tMMS90m9YPYtcsj0Q1328FCbXPHKFQT2OHlk9MdSi
                      PYysnjxCzUo96NGyvY8CxT0oNVu8wfSnPb6qMj2w2Vo8RwXMvccKSL0wAbC9RkcJvV31wj1jcly9
                      EylSvfjE/LwgCdm7/yCoPedJhj0YvXK8rR7GvYj4ijy6LTG9gNiUvOvHqj0YjJ+94B+UvSfkG719
                      VaS9LmCrvQEJwj0Thn29C1zBPeBAxrwi56u9tVSbPVQzoLyaviY9gzIuvcJuwb1PNLu9IjBiPetq
                      pb1gLrY8gA2Ku5JvBD23mog9GVWoPUaHbT1KYHq9NaG1PdCgRTzOgCk94GMYvf5RZz1AoFq8vema
                      vdbSNT1yMVw9XOz0PLSKgr127kY9+yaqPUKFMT30Usw8e2KXvdo0ND3dm7y9s/9BvTL/Xz3LDsa9
                      dj9QPSSu/zzX1bM90cibPVtEgj0AKna7Io5lPXgorzxWuEM9xtVZPTkCnD1SLzo9cCs8vcQPBL24
                      z6y9LkibvWA8Lb0AXdE5oMCpuxozMD1UA9a80oYFPbT5qLzDUsa9jqGjvbKHOz04NYS9/iEvPaZA
                      Uj0Q6hA8PcnJPaDJNL20Lao86igLvSDGpLyTS6y9IP7ivANWfb0D46s94KKiPDdEd73r58m9+mIM
                      PftetD1z3sc9hpaJvd6UCj39tIg9F49avbFutT2Xy3S9YKU9O665Bz3KJxO9/CvYPAn0kj3QSXs8
                      csl0PYLao73jCFG98NFkvNBD9bsX7L09oI2FO9BZJbyiiUg9cYXMPRNCab3j+5k9aukmPZh6lrxS
                      Sba9oP9nvSkLwD1+wjU9XkyBvWFJnj20ErY8mstvPVCDvjsAICy9QXTJPSDcuL3sb6C8gIzrunhv
                      1LxzscA9xx6BPV9klj0YLog8ANcLOkDbqzo4vKE8ugpRPX+BsD3ZIYs9oGuRvVOpyL30qJk8UpQB
                      PV4HGj3QU7y9+XW7Pf09yj0fhb690IGavXASbDw1F6k9+7GRvf4JYj1oYB48YL7Lu0rbbb1t/cC9
                      cO4QvZBFIDxq9XG9b/G8PQvaqL3B7pg9MCybO5Oyn72Sqlc9wG02vKhExrzIraA8QBw8PHhF/7yy
                      mUE9gYKPPQAYPzsyd1o9ZiYGPU2FzL3Q+yI8qKi1PJjmPDzAefm8wCbBOohvpbzz8mW9F508vcMI
                      rT1HfjC9wOytOgdYjj1YX0K8kFxyPEfDxT0Qv4i9bDeaPEAQmrygHrq7sJ/vO/Qe8jydJJY989h5
                      vcASLbsQsiy91jUCvbYtVT1wPKq9lQm9vZVtp717kbO9xWCFvZjybLy0+rk8Qq9QPQPtpT2tI469
                      w5evPRvvgz1XSpg9JHr5PODprru5eLk91xFlvZ6SJD2nSDC9jU2Kvc3sgr24ccQ8KukLvWRjE71M
                      VeW8BBUZvRmapD35B8s9EzZPvSqqPr3i1jc9mtQ1vXTBzDyeXTk9WiUNvVtGlz26aTE9mOKkvBn4
                      xT1K3Dc9rfxjvaTr/jxL1rG98NUJvJAQA70Mjs48G76YPXCHA7wymCg9OsYWPddziz1TMaO9Wotw
                      PTYwhb24W5q9Bi8NvVoybb1Mrok8fT17vQAqGLzwyGM8QMowO/gQpryzlL49EJ9bPOJPQD2qkXI9
                      AyeyvRFeuT3dvDC9VAkYvQ3HQr39HWa9HNHsPECYsDz9e8a9iipUPRoQTD0l9Jw9K+ehvcSo5jwi
                      FQo9CE+KvTg/+rx75pa9AJ+ivAqmmL3BJI095TuVPQDYmzjqBLu9cFk5vBZ5kr0DDXu9Ip0VPWD3
                      ZjsoDnG8+ZmPPTx94Dy+9H09igEPPagvfzwDy3C9+r8CPZPypD2+/Tw98ItwPFFBsj2RJ7M9m0Gv
                      PcXWlT3A1ya7bmOCvTQukjzo9T48oDwOveIKmb2+XRc9ENqfvf0uTL1l3Zi9/sZJPbdmS72tjnm9
                      /8yJPY15kL3DaZu9E6RevXTl+jwAKJe4GAu8vY+/nz3nU8q949IpvZw53Tz3x6A96mOAvSDper2w
                      UIu92uwyPagLir0QogA8EAUcvOtTvT1UIha9ILKnvPXtpD3oYMa9OKPKvADu+TrgTMI7V8+cPc6D
                      k73SGZu9iH+FPEBhWTtAMcE6oLQdvfgpm7xbK8G9sFVKvDpYeL1GVAI9XjV/PeIKDz0gppa9TmCb
                      vaAq2byjKnC9oNm+O6BpfTs3tly9ALn4O1ixX7ywcVC8QcivPRgJJDwzs1G9aKOtPHYbmb21yKA9
                      UCUCvVK4Zz2w1/+7K0C5PVNGlr3AarU6BErVPOlusj2gA9q8eDjfvICX9zvDbsE9cqx4PQceO71G
                      Mho950GBPfIZvL0G+HY98KUMvZGRjz24vdu8HUGePULzor20Gfw8M4YjvergND3SYhE9V1SuPfcQ
                      d72enCM97x6JPWgyi70044S8eJyevIqaPD2VT8U9Y0uQPcw4lLzTUT69fey8vT7oIz1r6cq9F+Cu
                      PQGZpD0ogm889wJvvb4Cnb00x4g86NdxvCRi+jzeVGQ9I36RvUJMhr3sI6q8iuA5vTpmxb0pMY09
                      WnFevVAxHb0wPNc76M98vMJqir1AXcK9dymJPXIhBz3qYk49ISSZPRbzOz2gd4A8lmo4PbSdt7zi
                      z3E9NO/XPH2cP72mSZ+9OuxtvWwb+zzIicO8BvliPQJxyr0maKK9Ii8JPaEUhz2i60Q9oIEEO7Jr
                      ej1eM249hA7RPD2op73BUKw9RbCLvYeyTL2YmMO9dTOkvU4Gob0LMoQ9YCXEO8ApbjxIirc85beh
                      vS9/oT2nsa29RQaMPb/xoj2irh89HS10vX2jlj2GG0492D4GvAkfrj2ykqW91K+MPOW0y723A2i9
                      HBX2PH3jcr33WoU9JKMWvfBET7ygZmk7fWsnvXQJyzwwkQw8xLz+PGDSuTvms6K94ny4vXRVjL2K
                      NyE95h0NvTJSdj26vl09Cqp9vWfFTr1y3oi9MI1ZPIDt9bwUxJ+81ZWhPZ0YH7157IY9AC+mPLdh
                      gT2Fx4293126PVC5wDsg7Fu9SUrDPUH3lT3e5DE9hY+/PebPqr0yUJu9mzKfvUAnu71g5jC7uY2x
                      PZtkrj3giQG9cIJtvCXfxL2bq5G96vlDvei+ir0w7Sm8N/pEvRISYD0Wiys98B8EvLKEGT00n/I8
                      PaZxvam4sT30t8G8z3mlPWA27juxrK49aNxXvJpakL22ypi9AKxJu4hQ7LwD6bw9MMkevKpXHz3b
                      8pY9c8o4vdU7zL0oDoG9mnxTPVlrkz34C6e8c2Kbva1Ju70o7J88AD5ZvRjUwbyAegm8v3KQPRTq
                      2bwYrsa9YICkPC2Bk72yRBw9gOubvYDBTjqm7XA9LPKIvS9Fyj2z+rk9qKFcvNrGJT2AUpK6aikI
                      vfBMN7wAdKc7dM7bPAd2dr24pbc86GfDvZcVYL1UPOc8W1/CPei5cbxrJZi9uv59PXdnlj3T6qq9
                      MGNEPNmTyz3Q/iG8m1GCPcy/1TxjobY9RxxpvZr3Az3CH1o9sT63PUyQkrxzRVC9iZG5PRrrSr0g
                      BF69qIhlPCDG8ztD3Va9HCbePNpit71BrZ09PdqAPeyYtzza2Ho9ANcpu/j4+bw0fqo8I1ZIvWin
                      KzyZmKs9wIFzvC0gvz26R6W9bXTKvXUhvL0t93y9hcrDvTHMoz21N469PUePPZACarxFyoQ9gB8t
                      PKiXMjwyyhU98fe8PclBqD0AaKI6bH7hPAVqhD3yqA49ACUZuioBS73wmnk8IMK9vMs0vT1Ndla9
                      gjIXPRhlgTymFVM9Yv1aPe6pTz29+Y09SU28PWObj71iBWc9emlKvT3iZ72dQa+9ZrAFvTjJ3LwM
                      HIq909t3vfhtnDxX+y+9dmM3PTBZyb1QEMu7rtehvRWxnz3rw6m9AD7hOu28Xr3MUA69Lc6evd9c
                      tz294jW9J9Exvfe6nz1u+Im9ZnBHPbu4oz3RiZo92J/PvPDLQr3QoyS9oAwHu2j3pzzwzje95WmJ
                      Pb6JDT0AWSE7nZE9vYUbrr19jVK9xYyMvQAXSrxJAYw97DXRvMCjdbyXJF29GP0ePM4rXj2nlze9
                      UBAZvLC8Hby+8To9YJbkvMY+Eb3q/zM9dNDFvIBiwL3u0G49423HPaC7Zbuiv3s9QZqhPS3Ojz1O
                      nAg9grTBvf0opD3Qr2Q8QBKuvBooaz3D+mm9oms9PS9rtr0wbsG9pfetveWIgT0Aeh+9cLVVPPeW
                      jz34jas8KG5hvGctV72Ayyi8rQzAvdqTcj0YxlK8wn9DPWNrmj2ollu8KCiivG2KtT2yYUc9s5+1
                      vRKRNT08egS9aLpuvDTMhb3AnVW9JwBXvdBu8LtvQ7S9gZuWPcwfkjxh6LQ9pz6yPbmlsj0Hpi+9
                      YqxWPVrRXT1vFaY9oVLEPcfrOL34AYG8+eimPV9tvT2hIrY9qAWgPLT5D72TsLA96b7FPQMMsj3A
                      kIe8yuLFvYBTxDt07JI8yqorvbOtwD3onxW8XZZGvax9n7zYOre9wq2zvdOpsT1DwaS9xwTJPYAx
                      mDzjsU29Vgo0PUZbnr2gz1m9XhhgPYDGeLpa6nG9m/21PY3cpb006qi83SjIvbDNpbsshBG9c3io
                      veilJLy2Swo9tkVmPQpBXr2QyCm8RgxuPS+yu73QoFk8kfiNPWY8Dj3sjoE8LWBrvTAXPL06ucq9
                      MCabOw2bfb1QHbU7
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2MzEzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3Mjk2MzEzNnEBYS5kAAAAAAAAAFCB2bsQAnY8FDIFvcwV17wYLbm8cHNoPCChG71qVT29
                      qBOMvaI+Wz3ooAE87ruUvZgV2bwAVAS5o6ikvTCWy7vrjrc9zp5wPesKlb0foZc922uvPW8Shj1N
                      prI9s2+WPXR/7TxaBHQ9gE4VvR0pf72oBYQ86mLAvUIQbj1A3gk8QM2zupG2gj1BYao90PBIvalM
                      hz0QqkE8sYCQPZDacjzH3xq9EH9nvHKibT2Kaay96kVivZ+xgj3JqcY9+vgzPSwK0zy3ILW90v2J
                      vRehQ70VBsi9Jy6yPeClhzy62aC9smyyvfL7OD1YLT08Ww2BPReKtL2FRJo9jHGLPIB7vDtuo1g9
                      wHTqvCCRJb0I6Mi82DazvSLccT1RcKk9QF5iuwBqsjyA3w69MFsqvRB5Ujwiqnc9BAYKvb8niD3g
                      GZc7T2CCPXowKj0auY29Gs6cvT4NSj1JZ5Y9ycGuPQITxb3aR3S9eVbHPV2unr0AU+w7ALJmvJVN
                      jD32RJC9eSOkPWHJsj0DoT29KoA3PYhY+7w=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2MzIxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3Mjk2MzIxNnEBYS5kAAAAAAAAAHEroD1AJAI8IxuWPVFPzD0Agw06wG6yOlrDPL1UOZQ8
                      VwnAPexK9bygP0i7wTfKPaPZVL108ZM8us4dPU7UPD1wl5K9rhJ1PYAivbtUmpu85S6ovRb5Cr2C
                      QYK9DhBNPbLMRT0nfEG9YQaFPdHvqj1uJiw9piQ1PXGxkD1in1M9RTenvRECoT06GHC9sAL7O7LM
                      pb0ACNS5o7EwvbttoL3wqBS8pulDPeyzzTxi/XE93Ux9vY1Ahb1KTxI98niQvf31G73INvO8exKH
                      PThyrL2AbgS8tjBRPZN1JL3Ht7a9daq5PVbyEz1y8by9+n0aPdnFmz1aLhC9oe7GPdKeLz14UJu9
                      rnYMPfgkkTwawQ29CZilPQA7Drr+qJy9kvBgPSwi4ry4X7s8Orx3vRKzLj1Az7268pC+vVcVtz2t
                      wm69R+9Tvb1Jib0DaG29Zi8SvfhWrTynpJQ90fe9PbBpDTwgO6g8D/nDPUgJjjzsxBe9JL2Hvd86
                      sz2gzrg7TOO1PO1Cyj2gIri9iLaFvDTl2Dw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3Mjk2Mjk3NnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3Mjk2Mjk3NnEBYS4BAAAAAAAAAI7DKD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        67JmKS4j7SeHdHcph3R3KafZASd9ZZokCifKKAonyijej6smBcE0JbUapie1GqYn3o+rJgXBNCW1
        GqYntRqmJ+4CxiRvf7gkblYaJm5WGiZPcFMmD2SYJG9LzChvS8woVBZRIKUYoSJjxBcmY8QXJlQW
        USClGKEiY8QXJmPEFybFwRQpcKWFJ/ODaijzg2ood6J1J9yS2yVr95sra/ebK6SyZSYsK4UmdzpO
        KHc6TiiksmUmLCuFJnc6Tih3Ok4oxcEUKXClhSfzg2oo84NqKHeidSfcktsla/ebK2v3myuksmUm
        LCuFJnc6Tih3Ok4opLJlJiwrhSZ3Ok4odzpOKA0Y3TVNF1c3aR/ONWkfzjVaZ0Q42i2lOqtQfDar
        UHw29qaUOLsXDTpUiZk3VImZN/amlDi7Fw06VImZN1SJmTfCy4A6yzqKOvc9JTn3PSU50DvxOF1a
        pzpgq3k2YKt5Nlry8z46T548bwooOW8KKDla8vM+Ok+ePG8KKDlvCig583ArNj3Tvjfvftk2737Z
        NoGmzzfUS2g5LoSjMy6EozO6Dt44cYK/OBFU9zYRVPc2ug7eOHGCvzgRVPc2EVT3NvNwKzY90743
        737ZNu9+2TaBps831EtoOS6EozMuhKMzug7eOHGCvzgRVPc2EVT3NroO3jhxgr84EVT3NhFU9zY=
