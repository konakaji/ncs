N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NTk1MnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzQyNzU5NTJxAWEuhAMAAAAAAABA/Ue92oZ/Pt0zhj4i8jE+0AKivBDNfr67SAi+IL7Y
                      PdLwHT5gO0a+eARkPVjcTz3Roqo+doA6vjL3dD6Su08+hDigvn1zlT5uNni+8K0avhCenTyz20G+
                      +AdBvoxCpT1c6NA9AJAGvNCmYL45nJw+zPC2vQQZiL149As9ngQMPsPDhD5s8NW97VSiPuiim75Q
                      /6y8SKJDPfoERT5l1ZA+z7mXPtf5lz4Q2hw+cAITPobik75UG749IucwPvZ6ID7qVXk+ZeyEPti6
                      DD3wnFi+wPj/vUL1Sj6mZJC+85UjvghrO72jr5i+tgBbPuwlqL1WCB8+AEomO7q2eT6sHKU98wQw
                      vkibKT4VDYg+MMqkvs5aY75AS029AIDuvR7hJz6Unu89s3KVPpqAOz4WgYa+AKh5OUwClL3zs5c+
                      /amgPlDZtbzwtOQ8vSSNPhT7jb14HqK+HmgvvqhZOL5YHkk9YLfVvaulIL7UUoC9AByFuwMBl764
                      aRg9EA6NvRK6KT44am69AKKSPIATNL1SWYe++yiqPquaE75R6JI+rrIBPoHwoD4Mzca91oV0vojW
                      Nb1yNxU+gHqNPJwkpr08jJ89rNqxPXhBGz6aPS0+JvRqPhbDDj7m5yQ+WFNUPQCg972U8dM99hOU
                      vk7jSz48Zq69ZrDtvVIGDz4AsLa4PNm+Pb7aNz6xEJc+KmhcPjh8jb6odWm+gC/2PZpBJD48cu69
                      28ScvlAz2D17A5a+xgyBvgDF6bqmoES+AXyiPvggjr6WZoq+dqCrvXCwwD2AfP28GHUSPhicVT1F
                      Gp4+YO0SvK4XKj4MXZI9EK6KvVRwsT2AdUK+I88mvgwssb3aKXo+5kspPjL+cj7dPZ8+oJcSvN/s
                      iz5W0U0+2bihPgCaAL0Arj462qgHPkhMMz3vJJi+I3BovlpCeD5z+Uu+XDfOPYDrYb4gNRG9ssVA
                      PuRGnL0Q5Du+GIc/Pfr3Ij6m0g8+fgYKPrmEkz5ACC+9BNT6PUK8QT4x74k+ET+DPguVF75gv2I9
                      JdiBPnZLDb7UVfw94OtrPD55M75fyp2+7Hv4vWi0Fj4yk28+Lm8OPpU4gT7geym9AAqDvQ7Upb5V
                      kqc+/+KIPsj8Gz0qyn8+JgnfvU3kmj7e1T8+jlAhPhMDTb4IRQg+KwQWvoqPQT6APo2+8MzVPIBS
                      sb1695C+vPCcvbIJWD4Q//w9XPHvPWaiWj6eMCw+oKRQPTwy0L07dqg+80uLvoOiTL5hU4o+4KBj
                      vV0OiD7ifHA+AWmAPtYc0r304+E9ZLKRvi3rnD4Q6Mw91ou4vbBp8DwWXj2+Y2sPvlAqIz67CnK+
                      tgIpvsXSpT41AY0+2kpIPuiPJT1z7xO+sK7+PBKclL7urQk+2q9APsDkHD7veoQ+SxGLvjBLijwI
                      hGO9hNWovli1Ej5uIC++89R3vpieAD6/Dp8+yphAPmEZmT7I1D69vhSTvjpOPD4+upq+CCp9vbBa
                      sT0gimE9M45Cvi14pT6AY2I7ZqaZvlBh0ryDdIi+BN+QvfGsoD6CJHo+lsBPvn/9lD5t95A+cI0p
                      vlhAIj4gMzu9IDcgvEBy4jyABBS9eIRzvRzbrb1tHqk+WGtTPUAMMD1APV69eCgCvgYXjr4rb32+
                      tAS5Pa7FDb7+gKG+gH31PXzFhz3bcok+fOj0Pfvdmj5jeJ4+6H8cPqN4g74cWO49RGDTPcC83zsb
                      9RC+ljEVvgXeoT7+6qi+imFgPisTE76dupo+Htk5vmBqWLygRRy8l7CoPjD6ZL6j+BK+2qBlPhyl
                      s73OI2U+flyqvnyxoT1E15A9oG+gPXq0aj7A/oq7LA2JPTiXUj1uMB++9tTNveLNGT4al5m+Mr0F
                      PrCGyjwAvMu7F4aZPrgGKb7zmDC+w/IWvlDOw73zE4O+SJkLPkKEnr4yWGQ+0OzsPBNCdr681Oi9
                      WNsfPjAO1r00P4S+Y9aUvtZ4Ub60YY890DqlPfY01L1qqWs+t1KVvpjOjL5uBwA+QBhiPWo1ST6Q
                      m+E93FL0vWACZL0afik+azCiPtwdur0V05w+I5eGvgJkUT5zQBK+7TejPpORXL4kh4y9AEC4tyAP
                      ajxaKX8+69s5vjBuvbwG/UO+dHqpPRjHIz0ASZi9qnw9PvLxOD4e+lS+PbaCPvCmjr0SQkU+JmwK
                      PrDkrrwwt4Y8+0CSvuvUML4gWds9oGjrPZCelr7XZYM+OEliPW8MnL6WCJe+UCfRvADX/Dwwy5w9
                      kNrzvV1Cnz6A2Zs8ku+mviJfUT64LxW96VOcPg4SGj7qOiQ+Hpc2PgYEDj4jB6G+u+QSvtBIGr7a
                      Qzw+tsRJvuIcWz6zL4k+0CMMPr0Dhz7EXcc9A6GbPqvwiT7Yqi2+tPOmPS8koD7r3i6+V86AviS3
                      pr6sX5K94ErZvVFenj6YrA69L8uDPqRa+D0V0oU+VFShPcxc1T1YXUy9gHfTvTYuBb7wo4y9Pq0j
                      vqC+RL6lkqQ+9lwjvqXvjT58uZ89DkpQPvukBr6e20M+c8ghvuC/GD6omz69SuVTPnlEjj7wMes8
                      pt8WvpxDzL1NNJE+QFWFvS9gir5AP908+ABxPQw0zL2Avtg8IscgPoJcDj6s0Ka+nOHRPctzGL4n
                      E6C+5t96vvRjmb2+WBC+hqJoPl/JkD5G2kC+chhPPmDuar1BZ5w+4JKIvXPETb4OW4i+2R2WPsC4
                      nLsqMYm+yKQ6viATSDyUstM91nWevkBQX77MoL+9oBjBPZimfL2QZ/68aPYGviDxaT306YW+FncS
                      PlhkHb5IzmQ9MJ+7vZ5uBD6ybIK+ICdSvN61Qz7waIe879adPsUnlT6OIpe+OA8tPVA+mr7Qar+9
                      CNUpPcOHD75gfiM+7EnYPWVcpD7y2no+qqWWvuSmib3Ui5o9SBwVvVKJcz6vV5M+kFfBPGmGlT7j
                      1SW+oAl2vHxkub1u6Se+AOTEuv6meD4IuRY91ubqva3uqT4MBak9QCT1vEau6L1w3ZY8ng11PvK9
                      QT5FjpM+spgaPnjgUb7QhtC8yDVzvS6nm75GXXY+sNbUvXZIIT4C1QE+rOv2PbzBzL341gi+SERt
                      vZa5Xz7EOK09+wSdvq3nkj54kFa++AJLPSY/UL4mnge+pmNmvmZhfb7wS/e90wBevhmhgj5hvqI+
                      MObpPB5zXT4WjE0+cN3jvOu1GL68rd69wPRFvtxqiL5GKPy9CT6IPm/Tg74a6Fc+d8ehPmDXaT2T
                      KTy+yFwwvmZsqL6AtbG8Gm8ZPlnmgD5Ayoo9uLVBvXPdWb7yWUQ+Oh9lPsy2z71Yhhi+gOKWvNxc
                      1D2Pp5m+fH7WPUAuiL5w68e8sHWxPHweuD3LIgO+erYIPljdOj0O9Fy+6Mijvm6bDr5Q7tY9AOK6
                      PKx4iD34OR+9nWWGPhnkmz5+82i+2L4xvSjaNr4Aade7RDCYvcRFmD1I/Tk90ixvPvqQaD421Fi+
                      KdOQPigueD0T/oO+hhUoPhhWTz2Je6A+Rh8VPujkVb6WNQs+AAs9vsRWvj1K71o+A9VgvmIXaz7c
                      PvM9iDJqvpjSUL74mWW+PeilPlzIur2OaxM+uOgSvkLsob5YlEk9Qml/PmRG9D28Qoe+OO1YvjZO
                      Vz6+iiG+0tY9PqpuTj7oVS899pU2vuOtB754fyI9S+wovtQ9g73Ljy6+UIyLPA6eCb6MLqm9k76D
                      vuD/rr0gdSC8dnAlPtALAz48XKy9YIc2vegDVz2kHaM93YqMPvAT3b11YaQ+Q66fPo2Jhz66Wyc+
                      Gt1gPsCxcr7/eaK+jtovPnkWhT4CP3g+XJrBvVhaOz1mjlw+EMK4PUgdaD3yo5O+IJgEPJDzljx4
                      H129oy5avnEsnT4AYA27WD6evhicAD3LNYS+QMncuyVunT5BFpU+4yk2vvjbbb4AjB6+6DcTPehE
                      N72ZIJk+LtNQvhBc1z0KKE0+ok1WPgrwAz7IMhy+5ZaKPtjjTL6CgF8+UDuOPXEokz5Y6jO+nv0U
                      vkrfej6wb869mEFevuDq0b1e+mA+kH3bPFxrjb6XhaQ+I+p7voCSCjuY9RS9XTmUPkh2DT1zkAC+
                      Bnelvp2vhj7vh5O+qCwKPgDkgL6EGaO+DHPEPVgIAr2wpoA9QIajvJ6/FT7enF8+AIwcvT7zJj5y
                      iC8+ADMDPTMhqj6LjD++AJKvuyDyFT3w34q+bpAmPpYDoL4sfr+9jt1iviDuRb6gtS49QGmqvJY3
                      GD7ARLM8aK5LPZbbCT4PZoE+MjYTPnjTAb3Iqic+6VaAPihvLT2Nj4g+ybiPPnBj6bwAXf+9ACZJ
                      vl5eHj4ggR480JCLvhjTh76IWwU9LEbiPXCP3j0CNVQ+C2t/vuhfFz3ikFw+5OyRvpaybz54BH2+
                      c7d0vnLIlL675CC+YyUyvkCTjzvfl5g+/Imivdzvqz2huY8+6R6iPlwiiT1TCow+Kl5MPggpKz0u
                      aJq+8EPjPUfNpD5MKIW+7KPpvRjoEz4KnG8++JYdPcDGorugph098JiNPABU5LrYnEi9xN6dPcDj
                      77uefEm+MFWdPPPFiD4Qosw9aqstPrNZAL4m2N+94ocwPkJiMj6AO+g9/t0Mvi+vqb7945M+9RaG
                      Psj7Aj6gWsG9zneGvtQqiT0cx5m+9G/oPfA6Nr6g9wq+XIHpvWMfKr7LHac+9q4CvpitZL0WzFG+
                      oO5rvDbLQD7cX4a+y8GXPhzboz30IbM9LA6CvvgLFT6gc6i+s+2SvrAc3r2AH1++wGrGPZO7Nr7D
                      lSy+rJ+YvfwZiT2rhES+o+yRvqhKer0enj2+NtaOvlixNz0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NjM1MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNDI3NjM1MnEBYS5kAAAAAAAAAKBUCL1YQwe+EwY5viiRfr7WDoW+WLcGPUC5kTsVBpk+
                      AFvqPKr2Nj5geze9+PxGPQJTbD54Dx8+xsETPtCgyb3Q6s29oyKIvhAwA74AK209Pm4CvhVGmz4A
                      VIM7rQ+bPviUoL5iQJC+g45cvtBHxbz985w+qYWRPkmpmz7SMjs+ZnHXvTYJTD7P9Y0+xvcWvmAT
                      FD3szpY9WwcNvhjmXL4Ydle+2ut+PkAssbwD5Tu+oJOMvuLwPD7AdK47LGOXPV4GRD5gd+k9e/2G
                      vo6vAL6AmBU9eHgxPWBeCbwA5J+5zTqVPiAeWr7+61G+NwqYvoJfVT7+MnW+ustdPu22lj4AKRQ+
                      sumivsMsIL4GhA2+MJuGPABGZbqbsnW+wGzuPIB/VDvCem4+NqXLvXyBjj3ACxg9gFd5PNiLPb2A
                      n5e+oEkYvIRX5D1m81q+ar5cPvw8yb2Q1rU8Mv8wPiZsH75g2lC8AOaTPBggRL0STV0+5rvCvXtR
                      qT7KC4u+KXWSPkqQeD6n756+ptzvvdJCXD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NjY3MnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMzQyNzY2NzJxAWEuECcAAAAAAAAg6WC9GjlQvVCe2Dsojl480ANkvd2eib0wakO80758
                      vcAWSLyAi4c8HX2dPVRomDwdNrE9t1xKvaKFPD0ATrG9oba0PU/Ntb2KzGM9ESqiPWDSg7s1z589
                      qTqYPcLOGT0wk+a7UIEMPOKmcj3AtES8oC3KO4zxz7y52Lw9bYWwPcdfyb0SoHA9ywWQPeHjlj1h
                      R8E9OanFPVeEKb3ZU5A9dDnhPIUStr2+Y6S9F7mkPae1w72b5Ky9qJmovR3xKL1aLxo9jKv2PNvC
                      tb3opFQ88zOcPWS8Br1aBJy9QNl0vR27lT1NuMs96v2zvWNtqj0wjAq94tYrPdqTET3ihzk9DX/G
                      PRQ4D71QHFi84i11PUBWO7vn5ny9kbCEPZCed729J0u9o463PWzTE72I77Q8GB0dvLIgAT1TuY69
                      e2y6vZG/yj3tZq69mGhiPP5Di73Y9Qs8UWCBPVAMNrzySRM9AHhnPMjUiLyHM6w9JAHuPHYJPT0K
                      uqi9c9iDPYCqYr1Dely9XrGLvcOuwr2g1329sjQgPULHAz2ill09mIdxPGzs4bxwbkg8SImEvNBr
                      sru3g8O929qiPX+ew706mEW9Z1/DPQ6RYj0fJbA9onBTPblfzD1VI4896wzGPVH7nz0rcYg9PLAA
                      vdCklbvDJ8I9f6+tPdZPUD0KF3S9S9eoPQCe/Lp6PyE9VNu5vH/Siz3oA548H22LPWBNZTssZQO9
                      t85GvSBq+LtSgLu92BQ6vEQjEb3axMu9Ytq6vcXKl71fgYg9Oa+APYYPQD2ITJW8rWXKPTCombt6
                      65S9HQ2hPXroWr1aMhC9wNPqvMoaqr2GY4y94/hrvSBHy7wGthO9uXONPXngxz3i5lc9AGUNvcnj
                      hT2yLWo93J7lPAVvi72AWsk7vmurvYr6PL3jUqK9JimQvUqdkb2iHn89yibJvZgNFryUPPW8wQ2C
                      PTbRnr2lecw9MkhHPalmnz2cguw8FBkBvVBRAbxY6YK86iVyPeiHj7xqeIe9MOYTPOEXyT3D8Vy9
                      J4zHvR7GXD26X7O9GkpbvTL4vr0Z2pI9rDqEPDD2kzvwoai99aDFPVhdqLyCtFA9gPXavCBWvjwk
                      M+Y84MKfvcoIar0aJ2u9tVaMvZopSr1pu8g94dq1PcjxsDyzxl+9CtUCvTVUqr0B3489EVqGPS2C
                      Z72VvZY9eIOwvXgdvr0iHBg9AKOyueLnLT3gCKG8O72vPdKFUj2amhc9i0uqPUBlKjxTc7S9wNkU
                      uxJ6iL3sz848gDwVvcBFpjwMed+8mTeBPTphbb3OEKG9WSyRPbbgLD1YhrY8cGgaPLBd8LvWOQS9
                      1AAUveBf3bvHMo89VROfPfd4YL2Au6E7it8hPQ+5uT2nWkC9k+yjvQMOZr2N6x29u5CtvSAQmzvr
                      1cG94+DFvWYmLj2svvg8yG6GPKW+uT2PN7I9OoxhPV1ZqD0A6pC8qjx+PSaCbz2Svxg95YWWPeJQ
                      Dj0XY7a9IkAxPTA8m7uBq8k9bdFQvfkCpj2XiH69bf0svcqIWb0p2MA9z+WsvWdAQL1hFMM9wIqR
                      OvZ/XD0AvF464nxGPdq8ub03kn699eWAvVlGvz3AVYS96UWzPUCECDsDW1i9ZPvwPCEGuz0WNQw9
                      HaC0vT6ygL0gBoI8QPSlvIC+Wro/P7U9gKaRvUpUMj2Tc5a9BzPDvY12lD2z5Gy9YCuEvG3Bx73Y
                      oOe8+bCgPXJGNj2Vi6E9WHZkvM+9tr1IiqK8L9XFPY/evz0kE/k8WO9KvKQNDr2DjIQ9sKy7uzD3
                      /zuiBCA9djkcPRXExz0AQIO8cIYsPKB7qb2uoFI9XUiYvTRU6bw9rXC9KPsnPP2BPb3A5EU7wmAb
                      PdRX6Twr9pi9jwGPPV0gq706j2O9I/eCPc0Ruj0gEZu7TF3JvFRRnLwWwo691tyLvXLiNz2UY4Y8
                      eGHKvNgxQDzT9Xa9K6rAvegWYLyyQJ69lTGhveN2nL2q5XK9p311vY7bbT1P3689Q8aePaxMqLzT
                      fZe9WlJEPVOxlr2ME4O9sA+Qu4A/Q72/nKI98tEDPcquAr0ACnK9oBj0u6AjxLzCJRE9fiF7PcN4
                      hD2iwwM9SpxmvX89sD17Rq892UPKPVhIbjwYqna8qtiMvUEwtj3HYrA9ErQAPbAsAL3N8G29sOGh
                      vdXwlj04O7a9nSG+vR1CWb2q1z29lDKKvNBbrTvMI8y82XW9PWaDgL2wAOO7mqgjvbdger2rgKi9
                      +p4wPcY6jr3TK489EEoxPLLrwL3oeNi8Q7+9vfONZr16VDY9UMe5u7ANg7uANNy7J2rFvfKtFT3i
                      UxQ9MC2MO1hFYzzjliu9AMhiO/NVLL0FeLk9qLNUvHwGhL0tdb29wRyXPUA9Rb2cuha9BnqavVAG
                      C7wMIQG91OK2PC9uiD0qy3Q9P22TPbLYv72MM7w8V8aqPXugt72ZW5Y9wA4eO8J8x73s95s866+O
                      PdD1f7yABdQ7EpZaPXjPtLwtSMm9GWmWPSh6RzwAgoK9lgtBPX3wsr0tYVm9xg0SvVBH67uYaVY8
                      nNcCvQd7V71Fiaa9rMekPAB507sNxcO9FgJUPUD9tDxWjwE9eP2dvZHtij1CBC49k5BTvRLRcz1b
                      mca90O9CvXcWuz1DT4s9vG0FvU0Jkb3ZYL49wPR2vD2be71CNlQ9gpxfPTRt2bxgcRy90E3GvUdT
                      Xb2wk+S7UxAkvebxkr3wSDO91XCJvRAOQb3MDcc8sAaUOyv3mz3I7uu8ndCFPSBxiztAEyO7c85q
                      ve2Jkr22Fnk96HUhPEC7sr2gaOK7+HG1vJrZUz3wXlK8D9KrPfYxKD2EQOQ8KCYoPD41Lj2T78i9
                      F6a6vU6cn70KJD69WD+VPCX0q73K3ks9AMcHPEwW2LzAay+8QPd4vWORIL2gyMK9o2QuvQZtBT3A
                      UL26wODivC7Haz3AvKA6NtecvVnfgD2l+qU9wpp9PaBXH70Kspi9143HPQfFlz2wkHy8fXaivVcj
                      tL0zIy29QOcfu7HWhj2SsJi9mlQtvYKMXz1w9388rVZ8vaciPb1QUcG7ICvhu1JrGj0o0ca9fDnd
                      POBQH70AK3u7qnlPPTa1lL0tcb897Xe3vQCWobrjzqc9YKxeu531kj0O5Vg9YJmxvEy27TyAwwS8
                      VIeiPIFLvD1N88m9g4agPYbTq70yEKy9/CQPvXfwNb0MAZ28+F6pPD1LVr1tpKs9qtNjPV3/uL0j
                      rz29DG29vExBt7xgzGu7JQHIvYqObz23QzK9YIHeu4eZxb0eczM9FqVaPZxTzzxoscE8mQqtPYg+
                      i72gHy47geibPSAaFr1SXzQ96VuWPZiQhbyQ2nO9AHAAueMXuj2m8GE9CNGivHm9iz2i/Aw9T8/I
                      vc6ddT1GLVs9AHOcuSAEh7wAdk07+KixvXlSnT2J6pA9X2avPZKtST0gGNm8d7KiPTrEvr3Tazm9
                      MeWlPRBCZbyQLHy8SILMvbeEwb3s3rg8UIxPPJ6Tnb06QZa9DACCvKqxdT1ru8i9V01BvQGgtD0Y
                      NSw8yAiovCouTr1yLEY9gErru3L0gr2g2Is8IKTOO9EyvT055489oKzYu9knoD1D0Jw9VFTtvILX
                      QD0keuE8LX+avRB6Mb0YnpW8zGWwvOiztTxSBlQ9APu2PBTRqjxV2rO9uv95PQCuyDpCGgY9JmMj
                      PWhdyDwxwo89nqAGPVP0tL1XHkm9Cgc9vVSMg73tRMU9COubPNBmk700FvS8ZM/sPHLvJz2g3Zk8
                      6FmqvKZGRj1DF8i9SnS8vVn+oD3Uo5c88JAqvCLuLj1j4ja9mKNVvBAWAb2BA609rYKNvfdQt72Q
                      DhY8P6utvbBNWjxoSAM80vgbPZOaQL1MUN881mM3PdgUarxIEsG9XXeZPZDWdb1Z3aQ9oE6CPAux
                      jr22TXY9s2+wPWQi+zygBac7HCLuPJOudL2ZEb49mNRwvFdnyz2+bGA9A8IuvfLSQj1o3k280qwk
                      PTAMLr1i2l09iZ+OPRrMMb26H129jGf9vCiHzLwwiJy78Fi+vVgLarwE3Ai9QkRZPe3rwj2kUgu9
                      zf7JPVjJk7z2kDw9TsanvaBQpjus6JG8wEwAO8tjwz0o/J691T3IPUQa2jzmuHE9AHYlPPFJkj1M
                      I+S8uMS8vbNqI73eekE95fugvUPUrr3IZNO8wCVUuwQr5jyBdbA99qgIvUGluj1T6Ey9kBY4vcCU
                      nb2M/PC8Iy6OPRLbFj3UugS9s2p6veg5erzpx5A9GB3+vOb8BT1UoaE8DXO/vVJFbj10Irw8kUKs
                      PXB3DTzAc0M7GsN+PS1Rtj20ZIi9F1e8ve2ppj2obw28Dz+CPboqBr3wajO9VgNwPegCITz9FMo9
                      0qEfPdy17zxRkJE90D0OPIKncj1Je689+LuAPB3Tcb0A0OC5AJwFPAyHl7zm7Bs9wHhavVgPd7wv
                      rZo9OFWWvFCqEL1nfpw9VjOLvXuVrL3dfzW9I0TMPQqdo73ZxsQ9qbu9PXSV+TzZXbs9ANxnu9dW
                      Hb2z07I9+rVZPSZlmr2x3Lg9hbGgPZDCsr0TcWG9A6G+PQremL1GnWU9gppDPaAqC72Kgg09AnAS
                      PdyzCL1hc409ToScvYCxpzxPkce9z7LCvfAOWDxIM7O8QAdgvBogYz3rMr+9oP48OyC9Ar30psg8
                      gnBnPWwzorwESPY8IFjcvC4EEz0tpJE9bmiQveuJsz2MrYe9DimZvT9au73KagA9DVNWvQL2gr3A
                      7d+87K+PPO0npr3SOk09I3iBPVXzhz3q5Ve94Jifu6hQEjyqeai9CFHFPLqyCb2niZk9U/ZpvXNu
                      xL0CkBg9aKGvvQgb/ryB3ow9KBPWvEF1pz2a02k9HMLePCDkhDyNcrc9NSOBPUTm9zy1EYo97xnF
                      PaaDHj2yLh09gRy9PaIZOj09AoA9Sut6PSEbkT2geV47Yb/CPUZLST1CEpO91gMSvQ1mH7232m69
                      rMyjPBgIpTy85uQ82YC6PfDdYDxGcgq9opYNPQUTnj1T72+9s2s3vZRkC72E7888EiVCPdaDVT0M
                      7/68TXjEvTgZk72au0Q9SueEvYGDjj1nr3a9sQbHPczR+zzY5g88cAxHPNbNaj2tlyG9bcdcveOq
                      qr2Ctm49qybMvWjaqr3Vwo89AJIPu6xTurxCYyM9pW3KPSRg8zxgf5i99NXcvE2Wuj37rpG9MJUg
                      PMZ+Ar3WBAW9i8WxvVpKR72bTMg9JptFPccEUb3jFbu91ROSPTRC3bzq/3Q9Gt9dPQTh0DygR3m7
                      8HxzvLkrtT3qxqO9QzG6vfVCub1vXrS9UDX2u8+1tr3WnlU9SqGlvQDdRLuApKo6Od+kPdzJ6zyS
                      8yA9YkJhPUfAZb1KDls9kCAcPDwZEr3EQ9o8zTknvdMthz3S5EI9uhwKvaCOg7wQeXO8gIKmvMBT
                      fLzsbbu8AHe0PHGArD2MPrq8JTS6vaB6RrtFB5W9/2euvd2mY70wZ7y9sMEgvHtHmD2u/V890osK
                      PffniT0wx+M7sWmJPfVcq71HSV29sCpRPLYWWj0XBH69QGYqO+YsEL2jtZg9LXBsvcGpnj1+mEQ9
                      vStevcLQmb0AknA8+mJOPafdWr0a4Uy9ThJCPX7ymb3uYiE9YjhfPS1DkT2YVJq8YNAXu8tdw72q
                      hCo9nBbtPF2RhD0Ij6M8ajF8vbJllb20aoC8ah+wvSs+lL23Ami9wKDivA3QIr0es149C/K4vTD1
                      CrwCUTk9SnBfPYw+3Txoboo86F+rPO+hiz22DxW9LJa6vODP/LzDPsQ9WIcxPJVqlT0sFcc8ONXZ
                      vIg5jLyADeC766WDPWpfcj3BdY890OMxvRgmILyD+Y+9ly9uvWr1J71MLr28CkJRPWo1Vb3W8RM9
                      u/+XvYZumL0oqnm8h89BvX6dMD0AsCi6gA3NulBENrxvjbm9AAREOScgK70ZIIc9gsrHvaMbvT3r
                      oaq9AGttO01Sjj3SCr+92N/PvFi6WbwTdMS95UWnPeqYcL1lBcM9QKzqvBTJuzzoqpc8QsOBvaWY
                      lb2yfy89MBL5O1E5qz09GUG9TAL/vJd7s72T6nm9ugVAPSo/QT2ayhG9lm9MPTaHVT2A8/Y6PjIe
                      PfN1wD3TO7890IwovHNasb1gHti7No2ovRHygD0wp6u9XrcEPazPsTxhDYo9u+GVPbww2DxS+Es9
                      o7SdvQBwT7iApCK94/OAPaDLyLvNOpK9vRVSvTtxm70Aow87MG8QPCb1KT0wp9Y7x3vEvbhGwr0Y
                      TQI8rTJZvdpeJz009Jk80KMpvOZmD70187i9loo5PQCmqTzA8wU83W7KPVVihL1B56E9pxu+vYeS
                      nD1UntW8TImPvPdKsL3IlpI8M6osvWSw1zzPG5M9SuN3vdw8Er35Q6Y98vBxPUffvD1AkFe7ZpWp
                      vQMlX71lirc9dfKWvbCUa73k3Pk8ACTZvPetnz1x9b49m3G3vXCMtL2GpXI9V4GhPc/Cgz2AzD+8
                      tE2gvKBrBDvC5wk9IhFtPeOimT0wQVa9Hd7APbovG714iJK8MkBxPVruLj1glIM7JbCQvawZiL3g
                      lNG8zButvPnqmz0YEoa8KwW+PTrzl717f7c9EEtOvcial72jyCO93bHEPU+cwD0g0ly9gH53PPL5
                      ID0IJ468MJNQPBDivL0rgpw9iDfOvBAjQbwtukO9ULZyvEIsXz2wl3u9Lx/LPYABvLww8ES9geqX
                      PeK7DD30CL+8rRwwvfqOGD2cpBW9WEsvPPNtXL34zra9ILijPDR6rjzWDUI9MVqiPW0MR71WkVc9
                      J1fIPdLJmL3d4rw93AQWvSKvRj0ykgc9MnEoPR3JUb2JOKU9SCm+PL3NTL0SbWA9ZNTdPGNVc70Q
                      wHm8eF2APBPyLb1syrs8vgsvPaKkTD0zYrQ9jVWBPWKZjb0KFyO9ARiHPSzj9rxAclm71BnrvJt4
                      gT04WL28DzeyvViIkLx4xKU8kzdxvfekgT1Dq1K94Djvuy9Pkj2mABi9ZyGJPan1xj15lqE9r1Ot
                      vY5Jbz3xpsg9/l5HPbZ4E72xfIo9UuUSPRfGNL25H8g9zAXzPOFJpz3BBIg9OkTDvWB3lrzXn1S9
                      wDr6vIxpyDxgCUK7wFuePCyii7zGeDQ9ahBivTLzEj0avWK9Ixs1vWCPZDuO/TI9l8TFPdbOOT3C
                      qyw9ACsuOwgRlryd35O9UIBdvIA9Eb3AkMY6V6NLvUCLZrsTWr+9EkAZPTaTKz2jdGu9rG+3vGAK
                      nbtgg4K8MHYCPBINIT3osIK9ZEQSvbINiL0riKO9d6ioPaoyJT2FurQ9QskfPWZWQD2mOW09+ncm
                      PZ3AwT1pOo09qHrevMAMNr3qpkU91kFKPXuIxj1A5GW7IJneO60lnT0A4NK77MbjPOBDXr01XqE9
                      IBU7vUCMGzvizB89YGuHPLhDlTwYznQ8XRhSvYB1tjweXUg9VDWJvKBxTruGmA+9AKy3vOqHo72F
                      E4I9AF7uu/XgiD2Azom8Ii2kvRKRq72g1ge9wF7OuuR32zySkpm9XtJ2PSAPRL2QtW28VAijvJxT
                      3DxmhRi9qtg6PSLdvr0mf0A9EtsIPdlzjj1JWo49k1LFPRuMw70AgLA6KN91vK2/IL1n2cm9cNVu
                      vLKHQD04dsc80voUPSmjqz1C4Z+94/TKvTAEMLwxyZE94hp3PTyO1TwW90E9d76YPdVVi73wGS29
                      sr87Pc9+vr2Naz69ILmOO87/ND2WGg69nUihPdi0UDyzEFG9GY22PWjI9LwCiw89a5i2PQbohr3S
                      7U89Iv4kPcKINj2Y3RE86IK6PI6Ehr2SBQ09sAX1O9K8bT3Goqq9QEBHO62iY72wRcc7QMsquzLQ
                      cj2SyBo9sPT2u4DXR71Kfym9XoeKvXomJr2N0rE9NH3YPIB2VLyfQb89TioQPSqQUj3QjfS7Ux9P
                      vawnqzwtD3y9qHEiPFI4Uj04DZq9QLwVvKIjaD33vIY9BwRCvd5fZD22Qnc9pIvkPDjrvDzhmbQ9
                      pwcxvRp2Jb0CsTk9gETJPHBuaryAUam6yaOxPRTejzwDUyS9gBDvOtAYfryAB/O8Fyc6vYE0sz3q
                      6pa92rhrvU4KCz3I4sm9+mmbvbLLMj2YJV284zsfvS2cGb1DA5u9AOCuuVHxgj3AtVM7aW+LPYB9
                      Kbqgvhg7+ErGvAD9dDqA/+S7GMpePMCBfryue0c9idOWPTObs72dRK89+nFJPSyZ6zyZ18I9LN6h
                      PBr+N70cJQ29Sd/KPRphhb2Amsq9Stadvew0mzwbIr+93bGbvcB0yjzj27w9RTikPSg0CbxI+pY8
                      U4BZvcJ1pL0tUaI9STGrPUCpMruQOS48d8m6PYEqgD1i9IC9WpGqvdM7X72Uc5+8sMenvVNus727
                      8o69WNVWvPCWTDwA5K87NB+RPKrWkr1As/W8LBnxPErcHD3DcV69q6OzPbAKor0gk0C9YD+FO/o9
                      Pb0SvCo96t1avZB1IL2qdR09I0ulvfB/QTz9Px69CG6svM4RAj39oWe9prFVPf0yuD1Qfgo8RNwV
                      vRPAuT0xyMA9wEqZuoXtib06cjY9Gsl+va+HgD0WmHg9sOiivZ2GSL1Zm6Q9oO6Uu2O7sj3iM289
                      aK6lPIBFpr0LYMI96tk2PTAuGTzW9SI9uhJ8vVDieL2quFU9+OzWvBYfLT2lT5s93iGkvUAf9LqQ
                      MQs8gqlhPQJOWD0WrwO9enUwvcVqwb22ISY9uz3HvTbjKz0hAaE9oDrUOyYdnL0YK768XRaIPVCp
                      pzvrBoA9J5WzvbhokL0KhTs9afSMPeHrtj0dhWm9oLtIO9pktr2s2xa9lQ+qPRp1Kz3UwoG8oYKp
                      PQ/vt72vYMu956R7vZPpnr1oCmc8zC7wvCpRGz3zuVu9UaixPSjD2rzS3qy9BBvuPH4Nk73oxi08
                      jUC1PditlDym3h09XzeZPUAFH72W9BC9PvsBPRfpV73gcPq80a+9PdDP2Lu1aMu9/lY5PXT8obz5
                      Kos9IvSovdNhnT0SdmE9bz3HvbADLby8tIu9XzfAvVpETT0HPp89ZjBDPVPtvL0g0dC8h7bFPVQy
                      pbyB1po9nGTwPAKuDD2YJjc8Ixd7vZJcHT1g6DK7p6ycPU6tEj3HEm29dceaPalxqD32BzY94Pa/
                      O/S7xDzs3PA81JiBPDO3oj21Tpo92xmNPdQ02rzG4kw9V5qwPdKshb2TEoU9MGZ7vWPCXr2qC7m9
                      +jgOvYk8vT1Q2/c7sEFOvXrEDb0awG+9mZ2pPVB9zju0+Ia8emJXPVNRsj3j9CG9UAVKvZ7lYz0A
                      YNQ6g7eGPdqWc71u2W090besPXgRnb2AYye9ksIGPWO8O72ZpbY9yRGfPf2Ngb3KIVG92o4iPerf
                      RT2H+WG9df+6vftzrr2lArA9sGYcvD3vk729NVS9NqoQvcICJD2m4qC9xSiTvQA8UzswHAk8qR7C
                      PVQ697zruLm9sE4YPEmuwD3gaX29vHUIvaoSJ72c9s88yOmWvJeGur1Xkkq9rFTyvMN+Nr2Y6oo8
                      gSufPZf/jT3K+Za9TEXrvJ1Gqr1C4W89dVS+vX7cq72a3lC9g7TDveZhh702Yys9zbErvWJjCz07
                      rsY9IjobPZomX7389xK9pTewvdxxhb1YHDG8WsVNvbOKhz1GJxw9AKNpuqdsQb1DGim9UmigvThd
                      sjzpi6Q9UwDGPVgcjzxFxri9GLgmvIqec71S0QM9gcqmPQAyqzoHzjS9Cd/CPda9OD03MlC9aaKf
                      PVY+HD2aUJS9hjSJvdq4cL1E9eQ8JaiwPXaOor1e0Tw9sKAJPBauMj3Xirw96KVvvBgPNbyAHu27
                      GhgjPYt1nr0MZeO8HhEiPWb9D71GSCg9GJnQvFA/cb15NbU9ADT5u05jq73mcgI9rQO6vdr/bD0h
                      0Mc9NkJyPfoDBj0Uk/O8k6ogvc0vI704K+G8jGCBvcoBOr0CNAk9SBWRvGDaTbuos6M8xfy3vQ5i
                      aD0omDo8ECpAvHKUYD1QXFe8UKxxvcC8b71GQSg9rJebPJ0Ptj1QniW9wDgAu5I5CT2vz5M9mb3G
                      PdRmwLyx3a89p1mUPYeENL3R87Q9AImpPA2Utj2aNy+9FRiXvVLCLT1EWe48AnUPPcChUr1Uorw8
                      iYWqPRDcKry4IaA82KohvDfFeL37OcI9mHlyvBK7Gz0RIcU91ALgvCK5ND3iN7G9LEKZvADJervz
                      U6m9QIuLvXKrCj1+hnk9XnYTPXQKobzyZmk9ni9BPUsxjb2CB0k91LGFvO2ud72WXJa9Hem3PcIB
                      Nz0l5J497MP9PBrvJD0whgS90hwkPRDacLw/ALm9mSqhPdGvjT035Hq9gPkiuiflkj2As5m8CZmQ
                      PezViDwZJYQ9upQmvbMxX73V3a69k/43vTAifzxUCLG8wpN5PQCSkL1G5YK9Nr8MvTN/Kb0WzKy9
                      YEUYO0Xsoz3qyzU9YBKQvS3opz0nnCi9AAUbu353mr02hT09kAY/PBIWRj01Obo9beavPQDwbrrC
                      RXw9XioAPYiW3bzg7kO9obu+PYr8AT1zV6E9YOFqO2ayA73v66I9YNc0vYG0lD3e0hc97mqRvYNY
                      aL3DQMu9x/o4vTh/hjz0PuE8XEUTvcx9kDzyTSs9kD3GvWBHKTvI96K9LbI6vQBBXjtG52U9aDnb
                      vCj+hb2Zpas9ifa2PXSqyjy+oqq9ypeZvS/esL1oInk8/oOIvQ18xb084Ns8UkpLPdgtbzxJPLo9
                      wqIqPbDMCTxf5JQ9wNLwOlGSmD1ihZ29MB+huyMbML1XT069QnSQvaDj/Dvgmgm9F10gvSxVqTxg
                      BoU7it8sPbunuL2Auso6kqJkPS/pwT3dhLO9JFTRPI1pkz0sYv08Yte0vaVisz2Yvro8pjODvejZ
                      Xbze71I9W6qzvcDUdbwHVsQ9AKrcvD5/Uj3uzai9mLptPA1/Ib1oyd+89sEDPWgtOTyjl6Q9APFu
                      vBIBQj3i/lA9oE5AO9sVlz3gWtE7QaOePT3LL726yhG9ENAsPNQU1zzXDoI9Cd6QPQwA9ryA2cA6
                      kPKZvXnXjj1LBZK9zOSaPOM0jj2z9TG94Mnxu0xB6rywRQK8MEY4vHFTuz1ut569X9G7PXEztD3H
                      ETe9rJbuPE0eRL0wrha92Kg2vFEjsD3loIE9CbWEPTHTpD3nyme9oDzoO9ASObwgOpY8uNXCvABx
                      b7sQIF29wOFJvDJqTj1Hfqo9IILCPOOZor3nYmm9XlcnPUBqab2Y/9S84PMWveivMDysihK9VCjG
                      PCQjir16EmG9rfJ+vfmarz1qfGM9cMqnvdrtfz1dVYY9cPUfPGqscD30IvW8o1SdPbo+kb2jVT29
                      YF+IuznRuD0AGMy9N6VgvXDiRL0apT49oYShPXikszxDysM9IAQWvdj4lLznyhu9U3elPbm+xz0A
                      uqe5Y4YevbLskL3uVmM90Z66PWi49ryENwy9hqufvZ4SZT0OagE9AO2WPICFALqS6XE96WmFPVlg
                      rj2XpsW9FJUPvboWqb0kldY8fnoJPThGxbzwir+9ANhTuygoqrxKw6+9WEOfvDrgSz37IoU9tA0Q
                      vTh9j7wBl5k9AKeiOzrXET1OUnk9MRyqPbXLrT1IYYm8FbK9vR1Onr0YY4q8WZe2PSin27zz5MC9
                      6feRPeWDxz3yggg9gIcUPFHlnj0b3JA9mMoDPN6HNT1A3wK8FooVvZiVbzx9pri9OFG3PCDYzTsA
                      LpG54soyPeE2rD1ve8o9DuGCvUBvJL0IVo48LNkUvbC8W72wBhi8Un5DPYeUZr1NJWS9DFyAvRiU
                      S7yfio49H/OiPa/MqT2+qTg98isWPdTg0DwoKQO8o3CavTk8nT2oZ8s8106qPRLCFD3CCkg9WQic
                      PQAg+jk0EqG8oOjkvJLgaT1Ys6c8iq58PeSZ1TzVY8a9EBJHvCiRwrwOLhM9APofvWJapL1Cj0k9
                      IEDSO3fVPb3H7jW9BEn0PDinmbxT17K9rAPOvGU4r710+Jy84puJvTAmXTyS6wo9MHoyvPj1h71r
                      PJy9izq2vbCYW7xYaF48377IvaA/rLsAvyG7MDOQO8bWPj2KLK+9dP7CPH30er1oGVC8TNDevBWZ
                      k70gP667QBK5vcLql731Mq09XVnEve39vj3mcxU9gnOMvZ2Pwz2uUjU9vTemvSQW+zzwVDW9Exsw
                      vSSt3zxgeZi8xO3xPIo2Xz1Mzus8sshvPZVnpj1OyGk9+onDvfvRpr0m4jY9lGPhvJuFgT0In668
                      FjelvUJYQj2bMKw9RAv9PDNGo7255Is9NPuJPJ9Hx70+A5i9oDNbvcBiuL3Xvr69M2h8vefxmj31
                      0409UE2mO/PkvT3g3Km7suCkvdA+aDxgWZW7EKShvWQJ7Dy6Qai9UEUjPMLwTz2gmoM7O5eKPb6x
                      pL1PJoQ9B9tkvdj2PbxH88s9oPXKves/mz2JH5k9aJ6ZvIMAQr2aCn+9QI0buzp5BT3DKzO9wCor
                      vOEQhz0sYLg8qXqXPRi3NryeLWM91kNIPRiyzDwSaEE9hFn8PLeEvj1wMG48qyKpvRG4jz3C1To9
                      jYp8vXBcMDx3FKY9ihYxvbzTBL0bYMk9gnAIPc04wr2LlsO9w+dOvWBcmDzvELA9gI62vD2TXb3U
                      ops8gqxTPVi9WTyS7089YE3OvL2gpb0LUMW9KXjAPQif8LwTqCS97QWkPbnlkD3pw8U9gEarO4Mg
                      xz3y/Ec9WIGCvM3Amz2KCWc9aLUNPCA+3LtOIWQ9GqlxvWsijb1qU1c9AHRgvQJFRT3CeI+9oTWf
                      PUClXzw0RqE8sHQTPKoys72AMRc80Op2vDCjz7saflQ9R562PYwVsjzeWgw9qF+gvRRavrxAuAE7
                      /ZZ5vahrVDxyygc9DKkUvQ61Ij1AGmC8DPuuvKh7fDywWP07lKbovLAPpzt6ewc959KIPZhE2bz6
                      Pk690fuqPVidlbxgAhq9VjuavQTE5Dy6TKC9ilWMvU7aeD2fLaI9i7yNvXn1lj0Y46K9I1EpvS14
                      eb39CY+96S+mPYqoSj3j5Xy9QBesvOhSxzzl3Zi9vmk+PRCAZL3DRq89y+ywvbCmT73WaUU9ZSOu
                      vRnKij0t3IO9GxeNPSCNX72i0yI9R9p9vTBHVr3AAG+8HigyPfcFtD2Qe5+9i36GPZ6Wpb3RdLA9
                      GaSTPSn7gT1ha7k9wnBHPSc5Zr2QwCu9WJWZvKYtcD3Hh5Q9gMdTPGrlbr35c7Y9EjFVPW3OwT16
                      wZ29AAdTPKOisb3QmDG96DzovFGxtT24O8G89NWNvLAfXbz5Zqw9XP76PDiSvr3qJ0s9mCybvEGo
                      yD2Qig29iKOyPPPByT2DoJI9eqcBvQ5/LD2aJTa9xPjPPHj7ujw2YBU9WDvevID5qjuWiWE9jTaZ
                      PXY+Uz0nBXu9M8+PvTHSqD0KrHq9vcqfvRKzXj0Ee808UHc7vN3AbL06gxE9Pmaqvfutsj2ogdK8
                      1X6PPTCbKr1fFoE9eFv9vLUpib0iigY9CGWpvMjXiLyIn5C8IhxGPdqNpb3KgHU93eG9vRLLjr2Q
                      Q4+9ZbybvSeMIb083YO95XSZvWHTqT1YNaO93fc+vVgWAbyC5pe9qs1RPWIMAT39QcC96YqZPeuO
                      hD3YVrq8eW2ePXUqkb1wdRC9+2e8vbImmL0Yube9VQ6JPQwE3TxyIiw9+TOkPddBZb0s7vC8vVZa
                      vR08O71wJk48VluNvTPLq70TSp69gIRVPJTM5rzp7qc9ago9PdSHy7z9V3u92RyFPVLRFD02Do69
                      XjSnvb11h72C8mg9gMqhPPE1xT0wqZW7/Q6jvWkChD1EOOw88HRZvCgPgLz5ALw9YEC8O5PjQb1d
                      NmW9Ons7vfqADz0zboU9kioOPXvBqj2cS4q9and9PQAVa7z+RQU9AKrfOzP9fL2wFaa7aDaaPOKT
                      lb3sQps8Io0vPUszvz0olQG8wzxUvaI0XD0fUcU9UPU3vUrGIL1fL6o9Vm2BvdD4Mjzw8gi98cai
                      PYBECzxgHMG8JaaSPcKRbj3a/ww9H0OtPTBjh71iTio93U4ovbSqmLxhkrc9yn4rPQBL37wYyMw8
                      Te7JPQrlSz2uWZC9f52GPZ04gL1Hq629wEKaOn1LtD2zcrq9vWHGPVDbWLxomta8767APa6NDz3A
                      gq26gO29ui0MlT3kcPc8YFDnO3QIyTze8xs9qMnCvMKQVT1uFm49/769PcDcE7yOJFQ9KLdSvNT/
                      pjzgtqa9BfKPvSi4urzORY297Iv4vC4+YT2gRLy9gNOrO6ifo7wwYt27SKHQvH24Zb2egVU9qMEl
                      vIaHFj06BYy9jsp/PUIreD0mQw49BWeiPQujuT2s68S8yPCAvIBbebwya3I9wvYHPTK7eD2ZAr49
                      0LgRPKjgtr18Dfo8+cKJPcJPIz174J49ZzAsvWARj7v2Uh49T57HvWDawzzQy5G73xSDPdbZgr0h
                      NYc9ldGYPZBaFrzoVPi8AM4huyIAdz1qhpm9KP52vM6Plr1LzKU9gtMZPexx3zzAINq6/C7dPLPZ
                      hj0Cfxc9vbCwPbuwrj00SLs8J9xyvbr3ar0Jwcs9cvdhPeocML1A6Bi9Jh0ZPbjf/7xApCU75PzV
                      PMChZbvZf5U91+UwvYA+XDz2MKi96XiSPaCEZDswGUO8vPfZPM17Wb2oHHk8LGe4vIbFfT33Nz29
                      ZJsXvQFugz16uhc9kSOFPSDKB71NyqG9KM+XvOCqqDvYkAm8r2y2PYInKz0gM868U4dTvWDZo724
                      4408RwnMvcBjH7zR55I9/dxSvS7agb3rzMG948BQvSBwxjv2uwQ9vE/kPH+LvD3Xh8e9VjJgPefX
                      db3FU569LEOfvBigxbytv0m9Z8c0vWBDorz0w6Q89H7PvMapcz06QA+9BGvnPJ3rjT0SST89QsJA
                      PShnm717cYY9oL7dO2xo3ryAZms87SGRPVWip703Pa+9W92GPTvOu72o5Ec8ifTKPU2wrb0etng9
                      8LdDPGN1SL2A+nM6ZuUVvRpcuL2GcJ+9SHqkvY4DPj3GknM9/VtBvdi7crxKVTc9yD2xvFqTl73g
                      5im94TTGPfxy+zxBmrk9opegvY0DmD0zdkm96H2bPACNzbkS0HU9p/6EPUhQjb1U1548No2avU3N
                      nD2u8Uw9ADK3OUA/qLz+mik9sKShu6JrJj04sqi9GSStPZNDI72AH5A6/+CQPRhparyAPYu8ot+r
                      veiPkTw4UpG9RqJePXc3nT2CMiU9lSagPRLHFj2AC8m9X4DDPUbNfj2y9y09DTu4vYD6BLwkBO48
                      8ox3PbsCp70Y2lI8gLLdOhjgRrxUa7Y8SAKNPKDmVTv0m9+8XXCtvfCRVDzC7Ag9+KmsvUaFD73g
                      edu8WLVQPG3aSL3Yh7G8jP7gvMBpIr0kg/A8LFQCveCy4Ts4aJ29awipvTBaUr39Qqq9QEYTvQAI
                      VzvQRJK7aNUhPDTNrDzo1zS8OjxZvRi02ryu5Aw9MBXcuxixybzgHuW7HcgrveSBiL3mJAO9thuD
                      vQ/Itz3ALBg8ZgIRvaTh7zyCGlo9+qk2PUDV5LpY8sS9GAa2vZD6ur0G7pG9DE8ZvfqdXT0bocS9
                      dt4AvXBOvL3gn788M2ZTvWBdi7u0DNi8GHAVPDgPy720/5I8g38vvVTYCL0IuI48gtNxPcgNy7yY
                      EHc8HrtAPTE6qz06ECC90ei/PQAWgr2jlMu9+CLIvJd0gT2OTWM9ADcZuz2tkL09/Ku9FZiKvbad
                      FT2pWaw9U4CNPVGatD1LubC9nzOtPSllwz201Pu8MHOfOwg+2LwkNOY8muPFvbnTmj2gDWy7mJJL
                      PJRm/TxgRro8w1l9vbDot7st4Y29NJr4PIBXyDzdvYu97gtnPWyT5DwMMYu8WxS8PbnZmz04xps8
                      zDgWvYAxWDxhFKk9AJ6mu/CEmb0DkIE9V0e0vVsJuD2/e4E9VDjnvEBqoryIze68qKmDvXDoKr0A
                      Tz+6V8ykPV2opj0nXr49ksMsPfTznzzlbMc9FbG+vcCXBTzYRFS84mYRPbD65bvsnJq81EravOhT
                      EbzUE7W80p4UPWWunb3mCHA9ALaVuzSEprxyKzs9AGvLuQsDsb3GTQi9ujdxvSyy/jxivmk9+1GE
                      Pehgkr3gwLq7kfeJPSpQQ73+ZoO9FHPgvGhRkTzkZxi9zT+HvTAvcLzgQ7y7sD8BvJZcDL3SPhM9
                      d625vZAZur1TA5y9o2isPZpCXz0gsNC7jzGIPQBKZDu9wE29WgcRPZJ0DD2oIXI8jbR1vbf2sD0l
                      aac9SYmXPZszn72yDho9YGP0u+jyZ7yg/p07S9WGPYCnEDyCssW97PzlvJFSij3wjyA8LlCSvRLB
                      aj0n0T691PTBvF03xb1Hasi9au0bPTqFeD050Yg9oHrJO5R9nrwLFLc9YHOXO8CqwL3fosK9lrYN
                      PYDxVDwQIng8YOjFO7r1bj04b4W9m6CWvXDicr3RPsk94EjEO3VTjj2Yxuq8CmlAvUDzILsdHTi9
                      C+61PeCHvTvuPho97DOWvOIkr71CtRg9MfKRPQBD9zt9g5Y9TQ1NveJgXz1XCj+98M28vVhR3bxA
                      L0y8qsgwvZC5yL3AJtu6qPbtvGwSozwnRDi9mIC0vIdWZL209II8dKjLPJ+sxD30bfW8tB6cPDjB
                      l71trIA9/b0xvaVfnD16Vx09Iq1FPSMxfr2W8109t2ecPUkakT1Lrb09v/yKPRfdwz1aMI69JHjf
                      PNLQNT0sY5m88AVqvSjjyzwtsIw9UhlHPQDwjLkiBUA9NDPLPCywrTykXwm9HnKCvW7cEz1rmL29
                      YqclPYDqU7wswbG8ooE+PXATI71x24k9GlUavaxTjrwPDo49QIxwu7dgnD2GJae9N31nvYyAsTyN
                      JV+9zF/vvDB3w73aFmC9vKrhPBc4Qr0jBsG9BteovYJ+JD3yPiY9Skc0PYPFyD3Qmmm88LUQvOKS
                      UD0fE5s9jHvEvEGouj0K5nu9oN0Dvce0bb1n8SW9Foo6PUwn17wN6YY9fVJQvVCxSTyFH4c9FngO
                      Pcm2zD2+DRk9p+DIvTxUD70mhAE9GLpPvHJ3PT3Ou469ACLGvIy3+Dxi2Gs9oLutu1odt72ghdO7
                      CemuPUrSwL1YMQi8tBCBPFF+hD2AFi69OC7SvACJIrwIuq48AJhRvfqdOb2HsMY9qJubPIC2qDog
                      KR+9QGsAvLBaLLz4zJo8tIvRvFR8yTx87fI8IoQuPc+4pT1QaWg8nq8yPf1Lsz2/nbk9YIYju736
                      Ob10l6Q8V7KxvQJ4tr08pIC9989VvR7XfD1smQe9NOqMPCcgG71QkYM7gGeru9rIE70gKFa9cpMp
                      PSfkwj23bHm9qKbGvIM7cb3M89W8YGg4vQXykb2kTP48CDSSPPCoVLxTZB+9XvQ8PUzSnLydg529
                      dD6GPMI8OD11DMw9M0w4vSaSPj0671W94qlKPaHViD3cN+E8o+bBPW9Hqz16Akw9CbepPYEqnD3S
                      umI9vlJQPfeZJr0orgQ81heZveDeNL3tWMs9yMyBPLCoUrx4lqy9McmPPWdYrr0uMTw9SFrLPBb3
                      qr3Zwak9WCydPP3TG736FcO9J/ZZve6SpL0Adq663Y+pvQ5QOz27v5Y9zmRgPejDBrzow7g8ZYLH
                      vYpwpr0o46w8Wiw9vQaGPT0gcAG9wES9PJ0HLr00b4y9B/RcvRGLvD1Y0vG8zLgCvfl0gj0A1Pa7
                      sLfqu68hnz0muh89jskoPTiDxrxexxM9ABDvuRe2uT0YlIs8sZaePcouDT0woKO9QCV4vLWXx70d
                      o6I9UjNUPSrJQz1Ilqm9cOBdvHpQEb1OJai9XUGiPWfnwb36hJy9j0/GvaguUbwQcmO8gJVROlAy
                      L7zGTxO9z2exvUM5iz1Htle9QOyzvaNEgj3UO/i8bQk/vTp+AD2QRGS93zSNPaKrLj0ZjZM9ZLDp
                      PIChcDrCwEw9MlsXPSH2jT2GG249Cwu4vep+Uj22rBg983Q2vfxagr3AGic8aRqzPTGBlT294pu9
                      HskrPa7dJD2+ngs9uPiIPGCjiDxAoSc85C3XPFAYM721wKA9QhJKPW/PgD0HNU+9aA5nPNgU3bz/
                      7cu9Xu4IPfMWqb1tEUm9jnOavQAHVTqQ1HG8eDKcPOJrbD0A9H07eigBvUQ84TzTWbg9pmZPPYZ7
                      gb2g34O7jPPNvH61cz0R0489ACzGvPQO5TzDGq09rno7PUDkbb0noFC9pS6Rva7xGT2wgOm72V60
                      PUq8lb1T/0693QjGvcBnxryaqg49hqEgPZCio70UQqY8MleqvYE4pD0q8oa9QO0VOxWTtb0AGSW7
                      nGUJvZADYr3mfoy9tMyQvAC5fTvTorQ9RQuQPTC417uQgce9AoF2PfnxvT0rsJa9jRiivZBcdb2f
                      M5E9R1G9PWzi+zyY4ni8ALdIvCATV70Aaq25yr1mvc5/QT18LIe9XO3rPGBrIrsyT1I9cE2tvTIA
                      qL35wog9TF7FPABT3js7EKw9gMIcuiuwwj1QB6q7x3yqPeHhyz14nME8MriovTuqxL0Ucvs8rs5W
                      PaV5wT1NSWy9K2mSPXbZBb0+Cpa9/shZPdKFNz0ncJ49lJLWPNBjEr16S0+9cjC3vWPcUL1mQ5W9
                      We2oPbVByj0AMNu8MpFyPSDRcL3MTK68vhVnPdTa4jyjKcU9uqFavUBe4bwBHag9bKzKPGA5Mzug
                      vzS7yDLDvWeEGr3Sb1U97LHXvIIgjb3AR5u9lAPyPCCAAL2u4Hw9AN9BvUATbbsKgE+9i7CpvWC/
                      lzwAOo06IHL1OyGRyD0QyBo8dmY6Paz9xjwv/7+954thvVAJr7tQgMq74NKqOwd/nz3An4i9wCJy
                      PB1iIr2gAPo70O7dO8ZZAb3vlbU9Ew+rPYqDFj2Axe07KR6tPUApGjwiiZC9gCuLu1pFib1nOMG9
                      2TrIPb8ymD0iTXU9oP/cu8aBA73jL4U9RtUbPXmKkD2GiAS9GF6svceSMr1G6l89ndTIPVBPYby3
                      Q8U9BUqAPeznvbwdlss9uEedvF+awj0Kol+9AGS/vEJKWz17w8e9f4uVPVhS3Ly42508mWrKPQ8e
                      hz3YmTq8B9Uvvfz2FL3QFq270b6MPRjLo73MLPa8euQUvbLWbj26JES91xO5vVT66jwo/Bi84xM6
                      vXjMujy+HWU9/ulOPfFqpD26ejy9YkaJvaOqn73Kl6e9R4Vgvea1BT0BOKY9tB/GvOeFVr2hv7o9
                      r/CPPSI3wr0j/aS91oB+PfAMxL1ITZM8wMZ6PCyrjryTXJS9QLwiPAa/bz3+4CA9Yi9IPR5KfT3C
                      GHQ9IlBsPYeIuL1ws288pYKvPWAMYbtu8V89mG2mvKkMgT3Sc2Q9OZGQPU6BTD2o3fG8vZauPftG
                      qz3CNh09XvpWPSlQnj2qJKG92KuSvZZlKz1nLos9cxKhvXZ0Wz0owRO8CeW0Pc7UTj243Ku8yz2C
                      PfP3gj0R94Y9UkQjPUoGFD2aMnk9AArvuQWZhz3BAqE9gF7cupVGhz0AAdk7U4lnvX5iOD1UbPE8
                      iE3mvGt6nD3aWY69CB+JPDaji71g9PG8muVQPRjgw7yy4lw9Z7q5vVDLP7yoi629dsxBPccobr1I
                      Uoi9fYdWvZ3eiT0NeL09cVa2PcrvYr10VtA8o2J6vXCHKbzpYa49Duw2PWrQCr1fq5A9M1mWPYhf
                      rbxF8sI9aXmQPV5iUj3oYzy8siVaPX7qcz2wyMi7jR8evZqVXr1ALbW8wlMEPeATqbw1VIm97jaf
                      vcT7F71S8rm9kY62PdCQQL3A4bi9sLC8vQY7gL3aYsi9MNLsO9PtQb19uVu9A8ycvSBItTwOHHs9
                      Q9FevU3ePb0yUpy99EvevM4BGj3T/ny9JXi6veX9uT1d5VW9MNbiu3urxL2W1Rk9CRmsPbiY0Lyn
                      o7i9fSWWPSxGlLxD0ck9FBLwPCVRhD3lvao9MtkrPRDMCL3aU0O9X3THPVLcUD3dgpA97L7PPHe5
                      X73q9iC9qV6LPQCSyTuda8i91rgMvWjpnb0e/4u9a92YvXIdWT2geeo7QO0+POlqmD3jl2C9wLkb
                      O0cNjD2YO5I8mE8nvCz/lzz3FZM9oGa8uyhONzxznba9zQKUPXJkWD0zui+9gH7EvY1Jsr34GLA8
                      GqykvYKHYD2CAig9/RpvveszyT2t5l+9e8SxPY7faD23eCW9jtAnPZemy73lYIm9dXiKvRRUsTxF
                      vci9KHB7vOocUL0HTao9YzdRvcALOLsCwCY9uOuevVANGrxJq7Y9LPUHvZiQuzyY64I8MppBPVlx
                      wz1sV/A8M3m7vbqtob3CNDw90uB0PWArajsA9146qJRbPEq7az3r1Yc9jCTgvHKsJj3MRhe90ENt
                      PCGltD2tM4o9m+6qPaqoh71Iwp88clicvVj3Q7yZ8609yc+kPQvLuj2EBwi9UUO1PQAo7bhSiTI9
                      wDWXvS37J72QYy29Ug0JPebgID0ACIS5lJ6GPFiZnzxQTZK75OPbPJ3vTb1jP8o9WE+UvSh2azzo
                      x7a9AKA/PG8ptr3Auyy9VZK9vVgo5LzoYG883SqOPasOvz0Mhfk8RVjDvegMlr0qlD49XZ4hvb4o
                      ET1Q+yK89W6EPTcqjT3nA8A9iQS+PSgiiTyDnqU9iwmXPbDnNr0w3Yg7QIcBu9DO8zsMY6c8SP24
                      veq5oL1KHQy92oQVPVGlmT0mYaW9NwG2vay307z3gz69mFX+vAremr2Sgh09JnSXvWCZtDsl16o9
                      qMUdvKBW1Tu7BbU9uTbKPZ0FNL2wO5+97DylvA1eZL0xaa09OhyHvW3Vxz0ATqU8FBiKvRTowLyB
                      R8E9RCXOPBMGJb031bY9DVqHvYMUdb0OT2M9KBEwvFSqnDwarwW9XhMkPf63gL2dMXu98LONvf4g
                      YT0WhT49x2hAvV1svr2mFZS998QovVC+iLs+nx49JO0LvRD6M7woIFc8aAAnPM9knz3EHNU8/Q25
                      vdfUnD0SiBs96eGsPQz1v7zAzHI7ehKWvZjbRTwCP5a9PGcRvULLvb2QRHu8F9uQPYDliDoYx7K8
                      REf9PLAdeL0Iq/q8hFfnPMxHjLxQk8k7UpOqvXKcCD2xp8w9h+CZPZhMujzzFqQ9wp5fPZpdVT3w
                      lGG8sPwnPGzu3zxnQru94ALkvFj4LzzC0nQ9s1mVPT/RgT3I4r68SopqvXu8rL0g5e27wOtyO7f2
                      uz1yQ769feKbvVJdID0SRBU9vUY7vb+Uxr0A72m7J561Pe1cN71Q0Us8E1dGvUeObb3SYx498SaX
                      PYKHYD2yrjs9+l8PvcnqmT0XXIg9btA3PQBiwLz9TjC9eFSnvV+QkT3xCYg99m8oPas6rz3vUsk9
                      ADJIvUIILT1soLa8wOKSukA3+rpJdoc9TvqOvVrxR72aSB+9NfePvZKFSz2dZMK9QBk0PNakVT3g
                      Dgy9t/EnvfIHl72gHCe9oCCwvUGQlT3aZDm94NzVu/xr2zwn/6299LL1vHtDtD3IgJ29UmCRvSqc
                      E702JEE9Rs6TvbTY4bzKZFO9KAgUPDD0w7vu7xI9Ihd0PZ/1xD1DeHq9kbCXPXRT4LxAO/q6lS+4
                      vRZXdD2vu4E9UNHFO1fvL71QWcg7dwNavcD3vbyAkZq71cfAPbJRaz1w4lG9uLTMvChbUbyd2UO9
                      1JCtPIRGjL243+y8tLHLvM7KOz1X9VK9lEmIPMAkY7zHlTi9SrthPUI8Rz3Q9R68NpN0PVNvNr2O
                      zw494/ycvSkjzD0Anrw8LGiHvNzB7Dwib1Q9iQGOPT5jZT1//4Q9AjKJvazbhLzahFk9OZmCPdjU
                      YbyWrKS9sCfRO1L9dT21q6c94rSOvf1YjL1UjsG8IiCdvYzIxjylFJk9AE3+uwhawTzRRoE983Qh
                      vfm3mz2SATg9EjJTPdAL6btq6n+9bDm2PMfXtz3qeBc9aMyRvILzID1kNNw8U3ixvZNhcb1Hlsk9
                      cB00vSa3Tj2dz1i9DmpLPflCiT15o4w9o5HLvbDa8LsAF3k685azPZKRSj3Z0Z09MmwhPX2xWL1n
                      /Mm9e7/KvTTH5zyCoZ29VLcBvcCnODtBPLk9tCqfvIuCsr19DF29gBtlPJHAnT3g2fA7q+ShPSD8
                      xzv5+7A9wdLGPWAirDzkCOA8cUySPUJ3Zj0AgKU2HXiBveXNoj2uPTI9ScG1PaNbSb1gHRA7tRWE
                      vfpFTT2CM2s95h04PYIffT21moI99W2VvcbWFr0AxX482FRjvDWEyT1yl1c9OxmuPYBGxTszgU29
                      YHrLuyosXj0gwfg74qFbPSGZuD2Arck8FJGBvQEjqT0n51K9AGD1OdXYqb0A43K8fV6mvWSU/DwN
                      YzW9OnRPPbgZpLzQx+i7yJbVvC+brb3G/xk99VWiPXH/jD2067W8YSmFPQLkAj0IvIg8rvBpPSwS
                      jLxgdLa9L8qjPfnEoT1Az1C9bAsBvcimi72JyZY9KBMYPBhVj70sN9O8g0/KPS7xir0SDH09QEak
                      vABrzbl3rUe9tlkDveC51DtuRDE91gELvUMrkb1mQQI9olOqvQbxIz3OxSc9gDc7PFEcxD26oRc9
                      XmpbPeCFprxGwRa9xQ2YvbrNLL200to8haHHveAH37zapiO9QrANPYxlsTzXxi69+H/DvST2+jwv
                      jcC94NrxO0gRobyoc3I8gL/Mvbuboj0DXGa9SPKbvbtitr1QpWu9QGJbu9mMhT3w6VK8gBIXOpQp
                      8DwClxo9MycgvRrXC70OJHw9Yp8pPexgvDzsfdE891m0vSkgqz3Zm48988KhvfKsTj3ukFQ98p+J
                      vRCnZ7wdrJG9ylsUvXVTjD1ZVpg9/RmzvRZnkL38Y/48ulsXPX+TjT2ZFcU9qhMKve1MNr3Z4Z49
                      2uUJPaz8gb2C4Rw9qrCHvW0VZr1gtpS8nZmrvQ2whb17Upg9IPLFu51yxD0Q/V08t+nAPVWYmj22
                      daG988zCvbtfkb0ASJ64QyivPahVwLyy9Vo94FxtvW6+Sj2AYHs82k+4vTAkSzxK9As9yNrDvQJ+
                      aT1o5oG8BJ3yPKBDrL2B8Zs9vb6gPV5XMT1ysBo9xNbsPBX/lT0qrGE9QJEQuxYBh73iEHk9q3ag
                      vaiemLzsI928eBiyPPLmCD0AAIi1A8WTvf2AQb1a2iu91gg4PWL1ID0AEoW9iIGVvSDtUb32w3E9
                      g/h4vWw4/rw3jLM9jJANvWmNnz3Agl67kroZPQjmob3o61U88IHAvYqHwb1JQZg9IExAvTPNJL1s
                      3ps8vVxvveBdgLtoCFo84fS2PXmHmT0fzb+9ANiJO8HupD1AjB+7oD7WvB3RsL1KZg69OeSOPVBR
                      Cjx9BS294LvWO/HQjz2jD709oFFlu7pBuL3QrVA8uRXLPSP2wz3t6ma9RqY2PaLwaj2Txbi9KBac
                      vGi/lTwqRhk90J6PvSfmx72qCIa94vcNPbO0mj1obiu8GRTFPWYFi71nEn29naYvvVjS97wAqJ25
                      stIXPQP1qb3hk5w9p7zCPROEq72ou7q84ED2O3lthD1QcHQ8JwE9vQMmHr2oyse8TZRsvUj60bz+
                      4RY9NC+wPC7lMz0sb5U8AOMduoAvcjzbsKq9+d+CPfLWIz27jLI9gJ2RvYCElbuyyyY99q4QPdIo
                      SD1oXB28ooG6vUvUkT2+kyQ9SKXTvKAAFrtgfoc8EH5jvCnJyT2Am8i9cAZ3vP0nmb3Senc9uGnc
                      vKxVnTwM/qA8R1+wvbDQzbshbo89dAzsPBjiGbxkI+Q8kO4APDgpojx0S7E8wAtDvQPYnL1kcwu9
                      CJWmvZa+cz2u6gc9YqENPZI9Dj1zK8g9r93EPQL4yb0dQpa90u0gPYmMyj0qLla9ROLmPPDmDb2w
                      fk88dOOkvCjOXjxyO3s9Ve+wPfSptjxOSEI9oUvKPS5Tk73gzNS8BoNGPfo2LT1dNTG9wmliPdjE
                      i73mDEk9YF7gu123PL2avmc99bfFvbn1uj1MxLK8ETuuPdgNGzzgxHe9WDdCvHKWWz2lBrO9gP0A
                      vcfPuD07SMY9c5JwvWwG4TxswYO8kJq0vesOtD0oUr08fqxbPepTy73SJEg9+7GtvSofhr07qrs9
                      zYdHvZKaET3FtZA9VsBnPdLZEj04Yti8wx9svacFpD3ckfQ8zHn5vGABZTvQrum7YCgfuyJrKj1L
                      IJA962i3PdSb3zyIJqC84dKPPQcAtz3nOJM97mNoPakbhD0wCzC9WtTJvRs4pj0skZm8SSiQPSvg
                      oz2AhI29c5iNPWmtmD1rOIA9NwyWPSK1QT1/r7m9AKKlvYMTQr3bGrU9tteMvVjAmLypOIM9SIvA
                      vcOMZL0MOc48Uxx3vQIjx71mjoG9QLkyvKPeab2iAmk9rEq+PN6Tkr1Tari9b3LAvVDKnbugvny7
                      7TpQvWAwer3iRmo9SodTPdDL0Tv4KtW8dITqPDPnH70AgPm70dulPQCc7Dun7Gy9wHKlvWVIoj0p
                      oss9Z+LLvYB6wjqy4GY9IEoVvcIRQz3mbYi9aNSvvfRr57ybYLQ9xQ3EvQbpFD0xnsc9IJW3OwAV
                      xbnCaQE9UM2Mu20ghr1neG294NOvvGAxmrtA8GE89YSpvTC7Er2AFqO7GJtIPJ3qpT2m4I69oLU/
                      vRhtuL2lX8o9gP65OrTwyrxdrYK94JmSPB3PGr0Kbre9gySgPXr1rL3tbZ09pBn2PEhHx724+4e8
                      Vh8oPcBSGL0Szca9jJyUPKBNgL0L0pg9QGQdvcHHtz2qxhm92xe2PYDmpDt+ZKW9w0ozvaJpwL2V
                      zcu94IKCPFUwm71+XIK9oOF3O/D9MTy+wn89gKYZumLOZz3QJYA7dAyDPL0vT71atS09p6oovaeX
                      vb2gyyC7ABYEuwquJ736vH29sDjZO73lyj3o3ag87B7OvCHJtj1Ni4Q9l7JJvQA0Yb2sQt88nVhD
                      veXPiD23VHe9FN2cPIQ24zxeLBY97t0GPVTqlLz1c7k9s3ExvQUGnD2T/bI9PZhPvcDzVruIg5u9
                      1bLAPeXiwT3wI7+9V9u+PTZBOT2PIJ49ww+yvdYmLD1fjLy96rUDPc1AWr2Gxgc9w/c1vWyK4zzQ
                      Aug7hgIpPcOFNL0W6Vw92rUuPQyX+DzuBXM9zOSvvC49Oj1UEIe9KFpMPOP/gD2e4HM9YAd9vded
                      xL3Ao5o8DWOUPcwltzxkiPQ8NbnIvbqckL3+TZm92KSwPFI9Mz0AiUU61HaBvYgl77yQamY86DXL
                      PJa0Kz1FVb+9sRLJPYpKQr3aEgW9+tZbvUr8F734y4G8Chd6PQAnnL26Cqe9LbBKvZT4nrxMO7G8
                      VA2fvGqAD70OW4q9mCF3PAYIJT0Ae9i54EqyvRz82TyyTjw9FswEvZqZOL00d/08+iU2vaj3hLzn
                      8lC9vUyWveIQOz3YkFy8YFEEvUoNFD3YcWe8+FHlvKBkcr1uLgM9Am8yPdZjbD05U449ns5JPavI
                      xr3D1Ma9GFJjvGUVlT2s+YO8aNTFPFxI3DzSGyg9fyeVPY8Mtj3l+6+9z+2XPSACD73i6EY9CDe0
                      vU1ZoD0gl+O7uF7hvBkmrj2p8Kg9Wo8JPeepN71wA4+9mS2nPaePoj0sHKq8owO5vR02ib2s0ts8
                      Z58ZvXBjcryGzRA9Crhvva+Xwr3qni29hGvoPAtlv70X+Ei9ASGUPSDHsjvSqYS9mDIcPEqAGz19
                      6L091p0DvTYVGb36zB89XSdDvegFoL0f/Ik9aJC9vED+bDsHSju9gfiZPfD3xL27oLc91ZGsvTU5
                      lD2d92W9anB/vXgKq7wqC0E9ZRCPPYY7DL0AbNS6aAWjvBdagj0XJ7Y9tC/LPJ08wz22tjs9wKKs
                      vBjhILxAQk48TCyoPPKXkr3gBK67L4/HPYErzD2MALQ8pRWdPWgkib0lNqU9SrQQPecsYb2ySpm9
                      UWWaPdGzuT3dD7e9A2s1vWSu3jzxCsA92ohwvYBllTtscaa8G3yRvZh04bzYbk+86FgXPGq5Ir2j
                      0rK9UG4OvSC8xTzAOYM8QOF9vb5BPD2NcoG9OLWkvf0nvz0t9MS99tMhPXb6D72CCz89ymYVPTEP
                      gj0o2S+8sKCFu6DXObtArqS9sXaPPShcx7yVvMW9TkJDPa3+sz3AURw84EW7O9O8hT1KXA+90KmH
                      vQA6t7vgNBO9QIPvvOC1mzwA0HG5btOdvcDoPDsrVMa9GIg/PMSy/TwMO708oG1aO+lfgj2g8gK7
                      gAdzvEiPurzu2x09zdPGPQCjp7ua88K9yc+/Pd6OaD29lKw9h6+IPTL5GD1pJ8M9gO90vOAxg7tA
                      C8O8WPClPCBWwrtm8XA92A5OvNumyj0QhlC9ns0CPdN5hz2zIKI9C1CBPSQY8DziKWY9KMyOva5j
                      aT0C1Ew9RkNVPdK1tL26TUk9MjCRvTD8erxqdpC9gN6BPJScuLxsNaK8iWmMPcDGHzwzm5o9qlsu
                      PfeHXb3ko/g8aznIPSNBYL0QOCC8My+2PbBlZb0iCBE9whg3Pc26Yr0Az0s8rL3HvPTBxLw+zWI9
                      g/7HvTCdLDyZ9YE9enKwvc3hQ72bk7o9icqGPb1nSb30N+Y8y+zGvYC9qzwwFFG8QINYOwDy3rup
                      4ao9WIapvcgcjjy+cSs9KQSMPbs8rj3NII89YEjWvDhosjyoB1Y8CiM2Pah6MTy3IR+9KbrIPdog
                      Y70SwwM9lN3xPGaNSj0rTqc9AI8Sumc7sT0QMk69elwCPUsrpT0PWMW9oPelOzOEt71hy5c9bROj
                      PVnxvD2j/mS9JtAKPaMlIL2AMTq8jXavvefcbL02JXQ9zc0mvUyKrLwgtIw8elAevTPwRb2iQGs9
                      OTO4Pcefjj1expK9vKjyPExMB70XdFG9fXWjvUAf5ToyD2o909CxPU+/gD2AwK69VaLIPcz167yE
                      atA8gmduPQIYaT2NSYs9tPKiPGobVT3/Z609RrhEPaKBRj1VDI09zBqIPCkXoD2AxNY6flSEvWgk
                      KzxA+yy7yvQLPSrcd70A0xy7axaqvZndqj33vka9lDjiPFDwCb33EVS9lAHePOETpD3bA6w93WXG
                      PX+Ux70GYiY9k/qlPQDnLjonALm92IGPvLezQ73+MGg98K99vXkvlz0/urk9piEXvTHUmT0w1787
                      p5K+PUr/Wb1QUiK8iEaHvJ1tr70grYS96RSiPeELgz0SCLW9AQ+OPQAyL7xhNKk9Yw0rvYOwtb1K
                      6nw9gIiHvELHor2iqTg9GVCkPac0IL2A/XG6mR69PeuCxL1o1V68cqkOPVWsor0KJlK9J4xgvfEz
                      rD2TNVm91rFkPaoUnb2gKTQ7FTCDPfhyqLwixK299oQ7PeDFcL1gTVK9ZnONvZhCQ7ySXMi9JDb3
                      PFc7xz0/E4Y9B1xqvYOBVb0Inps8eAPdvGotGD3psKw9k6KxvYDer7sMzaw8JkZQPYYwpL1KRHa9
                      GB2ZvbKzSz3QjVE8YOdSO8qGRD0Ca8O9zIkNvdV/mz3sStO89wB4vSoRPD1cMwO986O2vWSm0TwC
                      2oe9wFQUO5NDH73ARrA8if+LPWf5gT3CTMO9tKb6PJjVhDwAZr06qAwlPIC+0bsEJ/08f4aiPb+S
                      uz1oPIQ8KudRPbCTh7u7dcA9qCW8PDfNMb0/M7U9g7rEPdQC37zg35m9WhhQvQsvwT3dJcE96Rys
                      PdeLJL2Dxk29qF1FPLBZxL3+4x49Df2UvQA0tbjv2609h/wovRqSEz2AQLW6KkJdvV5UHD101Zw8
                      Y7OPPZ6mCj1KGKO9iu4NPc2qKr2QpRm8YBhbuxiMeTzrErg9lIy3POzt4DxTc2G9wBIGvQ/djj1Z
                      A7U9yFmZPLq6XD0Eivs8FoUUvYCb+TvfrMs9kJ1KvShR67ysVp88h25RvZRU1LxCB2s9xb2vPTdM
                      T73ohJU8QrSavSKrAD2YOTU86v5jPYbbPT2n2ak90LkQvU4OQT0immM9+0SVPYJDSz07qcO9mQG+
                      PQYvOD0SFrG9gGoausfTlj3y7xE90m/Mvbxo9DwKcqq9ou1JPSPqar22y389AMU/u8EXqz09S5Q9
                      sihBPeXwrz0ANE28QFSYPFCT2zt4hIC8FOEVvQBGfjlCHxc9oo2JvTfuG71Whng9mUCWPQvkkj1e
                      c4i9jSLLvatGp71tXyC9jGbPPMXIrj2kU/A80l9lPVBz6Dv7XJY9XWtqvWoSTD1GB5i92R69PVqj
                      c7291Bu9+U6ZPfiHj7wos8S9/KiFvUIEJz1bDpS9rPOtPAworjx7Prg90k5fPQDTuzwoR1w8EpFr
                      PWJGCz3OCS89Y0V3vcdahz0wWNI7QNJAu1B4Qb2XN0q9T2C6vYDiabyj/jW9GP+dvcWAxb1UKIW8
                      Mu1HPYAmTr1A93y9n8/GvUwAo7zfr6U9wK1tPI3Nlj12rQ49Ij4LPQApAryaI1M9Bc7IPdFwhz1V
                      kpm9/CWBvQFKoz1lzqc9qH2EPMKoEj16gL29N05ivccirz2DPrA9pIMPvUi487wU8p48KhxDvSoL
                      Kb2gA5I8dIzYPORe9jzG86G9TBbHPHpSHT3MD5u8HKLrPFzYzzzqYLy9f5XAPcJXbD0Y04K8OrtR
                      PfDVKb3ofxw8oGGzvTQhgLz9Z8m9YwM/vVvyyD34csa8VwDLPQBHqTxM89Q8WxXIPUR33zwi7lU9
                      nbNVvZQ21jzg05i9A7FDvUCBj7rAuEa70NIWvKtCsr1IYIy8LJ69PGDCZzsfu6Q9gBgsvZTO4Txq
                      4Ba9clKdvaIdET0qdzo9Ra6OvdeZuT0b7ag9KkVfPdDnozsjCrq90ZGrPXsqkT1Jy5Y9rZ1rvUzz
                      lrwu72A9coxoPRCYVLxAN8+6qx65vTksiD25w749BukVPWyiyLy6LIS9xeHAvXRNmrwAJvG7UcCa
                      PQkFtD0oEiM8iy6jvdE3pD22QW093niFvYG+jz1ota68rruAvV1nrj21mLs90h4MPVouTL2g9hC7
                      2GwYvBI6s73sn8e8gOUoOgtQlz0+w049cI52PINVtL1CmEw9PKrfPPpSST0K/kK950C1vVR287wi
                      3FE9t3E9vYBerDxQp4K7gFSEOgCkjTpSvrS94JntO6gmYbynIJc9Zi8AvZYmVz1OfaO98n66vcj9
                      gL3TM6M9pPsEvV31Ub2TtDG99qelvaL5Vj0HG489Ul16PblStD0tg2e9+caOPQ+8wD2mkBO9ojw/
                      PQ6onL219YE9s0S0PSJrfj0rspy9cNU4PBB9aTxO43A9TC/vvN0YuT36QXQ9V5KvPQIqbz11AMQ9
                      CwucPco7YL02xEY94JCJO7jsgTxjHn29QRihPV5lLj1qLmE9HOMKvXhniTy4lpg8Vu4DvTRerDwy
                      mkM96PnrvDP1qb2vgcQ94JIpvdp+Lz3K8ou92t5YPTRLu7wUnbe8QI0NO55Kgr3qFJa9bQCevQT7
                      0zy3acu9gEi5veg3QbwMafI8ME4BvEZwVT0Ir4e9WDwivNNwM72cbgm98x+SPSY6Vj2AIOq8uo9W
                      PR1vgb2Q/3Q8ZptAPTC7x73QOCI8CbatPZSd6TyFdLQ90Vy2PSjZWrxdZGe9oK22PHfUSL2T+mi9
                      /RiDvWTR1zw960S9ABZIuQNptb2qQgC9TGXVPNO8Vb2NMpO9m92bvbJxKz2HcVu9zptUPQBe4DqA
                      IGM8sOn+u4H8wD0AVic8+psLveEKxT2kPNI8yPi3vArEVz2dFZK9u9W7vSe3ij24W4e8oIS9vYDZ
                      KrrwWbG9oAufvIy4h7z9aos9uHW4PPIMFD0IDZ69cWmqPT/HxT14f8q94w87vcy1+Lwawaa9UiCg
                      vXDBNL3LVMM9oDYHO6xc1LxOumE9qO+ivXghgrzN9TK9wdyuPbOScr1Nd5m9CDWsvfCMhL3qdKO9
                      4AqKPDB0HL0oIlU8YDMTuwD23bvdRJA9mPt8PHQUqjxN/0e9JDD5PLEogD1jj7I9YNVDO5M/JL1Q
                      04m7W4eZvQAQnTp+o109QsRkPdAfu71AKyE8Ek3AvQ8Rs71Ooqu9MKMCPOWnpT3iSgs9IAS1u2zu
                      g73wMnk8jFQOvS2YkT0XJ8I9zm96PeCijTsRe4c92GcUPAIBEj0wEN27VMivvACgvzsZDpc9Svpj
                      vcqxXD0IkLy995yoPcesS71wdSO8o7GPPXZWnL3H1WO9zbecPVKLQT0565M9IbmHPfj69LyAn5a9
                      7QSzvVqXmL0kBus8xmBXPYBAb71MWcI8p+OTPewhjzx+qwU9qP28vLCt1DsYeHo8Lp1xPZ3pgb0c
                      ehm9EwqXPQK0ET0lNp89AOLuuaBFuTznfiO9lzLKPRctI71eHCM9WAyyvF2xQr35aak937q4PbtP
                      y71DOZg9qNy/vC/0vr0kY9Q8MnURPR+olD2pGZo9xe2bvfDOZDyiGSc9YgZfPeU2oT2ziJc9S52S
                      PeoiXb1yCk89ugptvXspmz21+6i9qvUYvYBGDbow/Fa86fu7PWDalzuIwKi9vpuQvVLeBz0dz7o9
                      4H3UvJ3iLL3oDzE8wGT6vIdBQ72h0ow9jl+svdXDxj04VZ+9bpsJPcNxpD20Crk8GKhgPAO8uz1a
                      tAY9wxlBveACnbyrLbM9xNDQPDT04rw5TZ49UGKqu+T5zTwjhSG90ALVu/X7nb3I9pG9JxR0vZsk
                      mD1wEjG9ksJyPWvKxD1hN4Q9CDqfvTUSy73FV6c9UbeCPVnMjT1YNIi8EP1dPBPMQr00koa9vhUG
                      PWT82TyUfAi9CIjGPJcZsb1MqKC81D6mPLp1Wb2G3Q0946devZYRAz3AEGS9bD7NvADGl7puvlU9
                      /XLKPfuJmb1r+MA9D3mrPWm6mT0A2SK9WKU4PIgJwrzgIpC7TtSavdpcYb16aVu9wuA2PX23Hr3w
                      02s8hhyRvXevI71jlZ69oPXAO3u0rr0Dyb89HShwvV7QaT0jPmO96Y+jPW26fr3HAiG9QMx4uybn
                      ND0AxFg8gPzyusb0E70BkIQ9LQ6hvaB3KLtATe46QydavdSvyrwvzqU9IuqIvYbnqL3ajl69i6Go
                      vQoJaz1uLxg9d6NfvaakeT1irCg9q1e4PUBzCbxQISu9kIlLvPdRhz3oedG8KAsgPK4VLT3o3Iy8
                      cH6TvSL/v73FTsU93TWfPRw0CL2Yazm8AJjNuHcSwj2dYLm96rUmvVxq9Tyqv6a99RuFPS7TAT1t
                      NK+9QJeIunX8g70q4bS9202QvVhC9rw90HS9YNmVuzqbVb248MO8wTiZPXLmXz0A1Gm6KBZSvB4S
                      ir0oPxo8jIymPPlzrz3QLw88AuE8PTrAA71b8bG9pNLsPAqlsL2AqSc6BxY+vYwCibwNYrC9AM69
                      umz40LxwJCa9y93GveU5xb2Ui/s8gmMpPRIJrr3tOC29aGmEPMqocr3ibg49H/bDvQ3GPr2CXpG9
                      Ql4dPameuT2mCh49CvKvvTP+rr1jO6I9FJSFPBhLb7yWDS89NrFrPW6Yfj0JZpc9AFkwO1j0E7y4
                      FdO8nEkVvdLofT24SpS93dR/vbT0ibzN41+93gVaPSIkGj2kn/A8pjdqPYYXpL1Ik+u86BEzvKLw
                      q70KKVk9DfG0PWDypbzRLao9MIaOOyLTlb0AYme8jS2WvaTT9zx3bcw9aBaKvXJBy71G6BK9VIHt
                      vHXnqr0PjY09lGPXPIAEpzznQaQ9aYDHPdTR17wApVs6jPuEPHLPPD1All+8EOBDvSqgdj0NcLw9
                      gGeduzIQMj25lrE9ob2KPUWjyj1YB8C8UqFdPSijrLzoKSm8OdyJPZW+wT2SRJy92B5KPN7eXD0G
                      h2k9DPq4vIcZcr0IerC9w9rKPerVlb17M8Q9OtQovVvHvb1QGlm962yovUDlB7vOjxs9812SvdZ1
                      LD1H6DO9bo94PbkFqz0AKZK86ji/vdjLxbxsh7I8t3qKPcTh8jzK+DM9OAuovSi43bzy5Go9jSVF
                      vf37Wb3OCo695AThPHx8Cb3hY8c9uMO5vdBExbseYys9MGR8PDCASTxUEIi8dGTRvOCGzLxN4J29
                      pWi7Pa5tRD30cxO9R2YnvZOwV73526096gQxPU5xUD3YzGu8XcZQvU+NpD3x3qc9+kt3vfpqIz0s
                      9JE8BcLLPVr6Zr2NSie9IqwCPWp0Er0PdMg9Q/icPb0RJ71qKRg96CFyvFAWl7uYRM68ILn1O9SM
                      1zxAU6u9SrtdvQCshrgRwr89sFjKO3ifz7wKYCg9yyrFvaDTFbuYUVE8MQCnPQCzXbu2cWg9dolS
                      PS7Cm73Td5Q9WsRAvWBvhzz1KrI9jZBZvTL6vb3QIdk7SOykvGb+Zz0dEJI9sXrKPSadjL26dpS9
                      NiVQPW+ZpT1AUpe9GTKDPWzh27z14I29VMnlPHD8wb2Eq/w8Eo0ZPfcwxb03eMm9aJqJPNjMbTya
                      aFM9CiQPPcCSnLx6tVs9jzKFPXLkCj3CtG49uqeCvW2GNL1mowc9og5uPYdvt70KMlc9Lt6GvSAm
                      zL3AxTM8P5iZPWRB6DxnXDK9aGkjPIeIK72gljy9/Yluva/Sub1SMw09pggNvSf4yD1Ycgo8Ik1D
                      PQJOx73sWYC9oLLPvMKmPT1yYGs9iF6aPODI6Tt/Fbs9sJ4pPNgHEzxqYXi96xOmvQpWt73XJaw9
                      CtBMvTAeATwQARe8wDieutvRw71b7I09KiZ1PRLxdj3ULwq9BfS/PV4kID0WKAS9wAVNvNnJuT3p
                      1r09sIVSvVrKfb1Y2eC85RGEPbBDCjymHWQ9kkNUPSG6kD0Kv1K94LzOu4APLzxD72e9kHAXvID2
                      Jbz9PEu9x/DCPW3duT3fYse9AGYZu2rIyr0yRT498GFDvRDNYTyQfDk8aHwaPEzei7zoRem8VKgK
                      vUk1mj0K5Re9sGkIPCqAeD255ZE9Yik2PasnsD1SzRM9+OvXvKIxMj06qDO9owOpve77TD3ih0Q9
                      015uvbMZjb2+JSk9wB64usCYRrthCrA92ClHvLnSnT0YRgo8OnM6vRoUZ70Ao1K6EFguvCv/jD3S
                      eUY9Ng4BPX26pT0/BcI9Z7VTvSg4BDy/LZM96sF7PUC4CDuoYry8aEs3PEX+oD3Q8dO78HZcPGy6
                      wryYv6S8b+XKPQ61XT39/Ig9tGmrPJrPJD1d5TO9+PyovLDjjr3CQ1c9ieaPPVbSHj3786G9gXrL
                      PXDiFbwSiRI9rqMgPY1htL3yH569Z22KPcoZtr2dyL09ck2bvQlIrT0Akr+7vPXZPLJsPj1HeUa9
                      tmocPTqpJT0wGe07LlxQPZ8/xj0PCbI99P/evMCyejvtAKu9OX6oPUG8jD2r8aw9HQS6Pa0hq73g
                      8Yo8gLBWPFCaSLzILJO9liQuPUY6Gz3x5rc9iTmiPXQtkLyoa3W8s+hzvd3Eqz14+Ka9AJlqO8DI
                      u7r2Bxg9Ns6IvQyZEL3wlbS9AXXLPXPEHL3hKKQ9wOyvPGDWHb0+Mxs9JX3FPfbzeT0CBSM9JZen
                      PeIZBT0tnpS95RaDveEznD2rG4g90xmHPVDVPrzjwXm9wN1MOzjs/LzB5IE9RD7aPCrWRr0UXQu9
                      oJzau51FVL1B+7E9sJOoOwv8xD0u0lE9UM+NvcVus71y/2I9hPXUPCh8TrxKLkg9wMlNO9wDAr0D
                      xMy9ot53PWY9hL0TmJK9awOgPdVtr70gWbS8G/STvWAthbxvHss92PArvGUkqb1elmc9aKSGvUTt
                      1zyh5aA9c65BvWOohj0n8Y89FBHpvP2eQL0gj569viyLvVAvqr2y0Rk9U3DHPf7FDz0K4Bi90A+j
                      u7AdE7xgR3a9bEvmvJ19sb0p7ok9dugNvcrcm73g6ZW9kNRnvHT6rDy21Re9Qg8LPU1wg70gH5I8
                      jipTPeJQWT0IVY88piCMvTDfBzwsiIY80VS2PUfarj3QW6W7wNFRPOBzDr1AwVY7oaWqPdfhsb1g
                      Lx07U6FMvYOJsD30gKI8zlJ6PZdnVr10Lxi9w1s9vfm7sD0A0M68q1i7vbZSXj2mQ3s94BRQvWC3
                      IzsAveC5Wn4LPWDUGLtYhXa8QgtpPcjqjjwehCA96F+bvIDovrolwYg9SM2UvRsQmr0AjwS8WNQW
                      PHAFQrwoE3Q8MH4gvRpSDz0nYLE90uSdvYGygz1jN7Y9PnxzPRmejT2KMCS91HDMPMX2hT2sF/U8
                      qLt6vAgPqbzQe3M8PVGnvdABprsApoy8ej0sPZB/ezz1acg98T2SPc9oyT2AcMu6a4SyPfgNi723
                      kLY9Yi8UPX8dpj1Yi8C8D87DvceFwr3Yoy08y/nHPUGXwD2X9L29E6+UPcKomr1Mjwm9CuRHPRXS
                      yL0ek6S9A1S6PePYx70wlms8yTGFPb6aED03KLI9ECaNvQ2fpr1gJ127p/UwvdtjpD01yIo9Oaiv
                      PV3fvL3thmK9ey+WPSBuyr0AP2S7ohUjPdoiCz0q1Bm9MZCYPZdet70o4QO8sLoCPIhEtL3Ygqq9
                      FdatPeQK0DyoVn48cAUzPAEMgz0hxbI9YGSEOxdvmD0S0oa90gmCvemIlz0y7nc9JIz3PP00nL39
                      q8s9U1QtvXWMsr1ykkc9ZgQSPa1kir1IQ/a8AAaIOs5YYT0CU3U9MCMkPJ3rgD3fHI09KIsnPE0w
                      jr0iX8u9lnidveVzwT3a8RE9LdCxvVKNQT0Qey+8498/vTCWWDzedyc9nml5PQAQa7zbC4U95q8s
                      PXA3MzxgQG67TPGzvJMdoj389tQ8GB2+vLkHxT3igiE9dsNqPWjsxjwIiri86cikPXwb3jzQ2e07
                      VDO/PPGslD3Gd4y9dt9RPaC46buQ3k48yLHlvLBRzzsgRZC7aDpFvDCyxTtgIaq7GZKUPXcvtL3g
                      D5q9u8WaPRSm5ryLQ8S9ll+bvWgCvDwzUqq9sMiWO+vBur06dV29xRKhPdMpR71AeqO8wgMWPThQ
                      r73NrSO9v8i0vRhobjxUZKy8iklJvbMMnD2UGMg8X3O9vQBCm7tTnZs9eVbMPVnqwT1bJck9uFPK
                      vLLJbT0Ayww7Mva5vUk9jD2MVKa88FpBPJxn9zwoCZI88CRevaAFvTsAMMm3eF+ivArbIj3IX5u9
                      4DdYvXoHaz3CHgQ9qRqKPXqtKb0Sz4q9UKAavDOBdb1Q59E7chqxvcJgfz3oaYK9UMyBu5zMDr0I
                      rI48Xvc/PZA+Mjz0UNS8Lh8VPWuWxj09QDK9s16xPRBzVjxqt0k9rBuJvO29db3XnDO90Ks1vGB1
                      9ztqiVG9o6rIvfGtwD0w0wi8SiejvSANzrzx1o09Cei8PYDHCb1z/8q9txs3vWgkIDxAghy7anlc
                      PVpfUb1Y3iA8kS+XPYK0pL1u8VU9eYGxPdyBD73BW4k9gAvdujDhpL1i8S49d/iuvbBeyL3y+Wc9
                      Sc+9PVXNuz3tKDO9dTq7vaGcvz0gUpo7y9SaPQemX72YjaE8cU6gPXRl+7xKalW9HtekvRoqrr0d
                      YSu9TG3FPHWupT2fhL69p0jBPaBzWTsnI5o92PtMPOthtj1Kr6y9EjBlPeBRzLtgQgu98b6ZPXJx
                      AT3mGQO9zeAcvV9Etb2w4Q28fQuGvUboLD0I1ZS8RQiiPa3Ogj224YG9Y5u3PejvoLwAZF28CAGR
                      PCA/q73Cjhk9SaemPfi+o72g7g878FhbPEDlYr327iY9NES3vMiw0bwVaZ49+iVbPTqgxb1AXVY8
                      0/2YvfoaXD1Qkl68i0WXvW6dSj1mhn89fNfjPG+ZiT1kjgK9ajiSvYJaEz0KTl49dwIzvSDxn7uS
                      +hw9mya+veRV8jzAFgW9EEIvvWL9XD3gwQW91uWovSHuwT04cYe9mO4cvOXtrb1iL2s96ABoPPSz
                      nbwlFLW9bBkPvcAQ3rpNCqG9fTVlvTIlRz1g7DO7UH2nvcAYG72L08W9GFchPJeuVL1Ibss89LnP
                      PEBqbL1dQZA93a8gveKwp73U4b88uD/YvGPNhD2DE369ALTjOooUe72gy7G9QCiyvQcnxz202OQ8
                      ivWOvSNStL0Ygd+8MH8NvP9Stj2laMs9Gr99PfAxL7x2yBI9kE8HvL4bUT3+zQM9F163vUBsq73A
                      KQa8Ko2Ova0SP71miHU909G2vfSg0bxB0sk9SpxoPUBrv7p/I6Q9y3edvbeshT3Qu0g8AP4XvIqX
                      AL3Sah0909e7PYttqT1M+4a86JA9PCoSWj0z+7i9nvySvV1hgr0ieKC9GgsGvbHruT3arU+99by1
                      Pfdxfb3QWpS7w06rvXaLSD2iHF49gI+7OhcXqj3wZj29Vgw2PRp9Qz3APgQ8g+2uvRCSmb3+pyA9
                      1owKPU0Nb71fdMu9XhVZPQC8GrmlJ8C9sKjGO0FkmD2pBsk9BMH7PHsAxj1na5E9UmxNPUs6xT3p
                      UcA92i4CvXLOrb3QSWI8M1mSvYyNqTz9N449kjcvPUEwwT104gO9kLgsvO9fhT3wYUO8TT7MPbBc
                      FTwOSks9Y/hcvVKiHT0MKcc8Slg7PW6EJz1TQcQ9putqPQIvFz2hpoM96DvtvKgViL1oGjO8MCRe
                      vKFZwj1IIIs8hicMPSavWz17tL29YA+oPAzdqDzwEE69J1ekPU14lj2oGGq8GLeyvYAmgLwl9Z49
                      kvMRPbBfDr2ofBA8cPEKvLe2Yr2WvDE9dUmUPd33hD2QJkK874WCPShexDwQ2bW9SCvOvEBiw70O
                      1am9wCoUvFqqub3af5S9RxjMvWw2qrxweAo8OGuzvSBO/zsANbo7IEeXvKtflD2QdQG8XW63vVjx
                      Qbw/8Kw9H6qvPbAy5TuHmRq9h1R+vViJsrzNIU+92PbKvH2tKb0igks9TDyePAFGvT1Azf28IOTs
                      u/Cvg70kA9k85+HKPUIrqL3m6gS9pfO+vRAQGb2J/8k9aATMPErnLT36XTw9gCMhPDrTl73Aqyu9
                      0N4IPLNgxz1Qbza8YJYLvVT/r7ywzGK8A4CqvRgcx72l9Z09Ql5kPVK2zL2gC1y9dyZ9vawMwDyA
                      brM7+aOPPVYYRT03grC9cJ0RPIotVT36yA+9UKDpu9YLBj1gkni7yJWoPPDDj72GxgI9+P7cvLLf
                      Cj0nlle98wWcPWhqh7zq2jy9DzOoPceKu71y8Ao9Grd7vdgwfzyYdwo8KFJivKiBPLzYTR08NxmV
                      PVptX72ga9w7M8xqvXpoRj1okAQ8ZWDJvQBkFLun9a29gExavB9Jlj3sVcm8gIA8vccnQb0ENgq9
                      QnslPepUbT1mOmo97u9sPXcOQr35p6w9qmFJPVCePzxADxK7EqKWveB+47zwfWC89+UlvaZRKT1P
                      Jcy96FkkPDIbTz0LOaY9mJLrvFZ6Nz0k9N48nYuXvW2NHb11foO9KNsnPCKERD17aKs9sZezPcDg
                      ebyc7w29wFEJveRX0DzPPsy90MTEu//XtL1gUya7Dn2evXBXar2w83M8/fh9vaDAujueHxw9OBuh
                      POii0LxpDcc9uI2EvBTu8LwASM68mA5zvPW+yb0iZyc91T28vVgyxL3gnJo8miRlPbIhUz3lGaY9
                      4goYPSo0Ib1/S8s9UIiTuwKwsr0w5tK70Ds/vCMKjz3o4ra82BmtvYjolbxM4rQ8q9ucPX4tq70C
                      HxE9Vh8oPa15ub3SPmM90n4OPRe1P70yGik9zDTdvDAfvbuAIqG9wEacOr2Cc70BIKU94mt6PVxl
                      F73GqC897+6fPWidP7w4xMG8ULeHO0VnrD0zksK91NMHvbDbxr2MpM88LcuEvUevIr1SaXM9VJ/u
                      vImchj3sp4a96EXavLq6XL0Ao427FoMPPY1Jlr2zmb29OZqjPQAMjrswNau9N35ivRixnb0i0wA9
                      4x+pveDIlTuu1oS9hVjIPfS63rxodIM8G6e3vX3+QL26FUG93oBDPXnblj1wuRO9LWWKPSjp5ryq
                      miK9uAHavMFuvz3QK3q9QH/4OrcAcL38ROU87PbUPC19nz3+3aO9uvN0PZJwMz1FpYS9cMdyPM6P
                      eD2olFK8dYmvvSgcgjywf/I7CPeyvYgNrrwfnIs90P7NO/H7tD1bUaI91BHCvLuPvz0AC0W97oFY
                      PVW8k73hirg9niFDPb+nyz1wfX29UwMwvRL1Kj3QLne8GtS+vbYMUz2Y7Io8UNGAu8BRfr0AERG8
                      IGHEvQmSvj0mNB49IazKPaJshL0CkCY9UItovVdfyz09IKY91FW7PFDPuLvWr3E9DbiiPTjxiTwZ
                      spA9ZBXzPPTxqDzbgrW9UpCTvWGXsj0AonG7X6iCPeL4CD1XFFq9sLCvO2A4bLvC4EM9UGGSvf7a
                      Wj3SjWs9TUOavahCCTxgOx471/UyvYZWaD2s4gy9Ah04PUBefr3EbM88MCxrvKKKOj29xJ29DAiY
                      PNnBlT2a2mM9kiViPfLaLj1BhYU9BReEvZlHlT0AsFu6akIUvaa+A73/9b89XlYnPQBJiLtl5Zy9
                      nUY+vaImNT3km/o8/ihyPXYUZT0Q4YS9N0WvvSgqIrwt5ym9CJPCPGKSQD2Z4JM9KX6iPbpyWL16
                      N1c9ohYOPQeDV72HK8o9M6FDvSCfmDxgpyK7PLfvPL7ai70SxSw9prNqPdhGpbwOSRc9R7Jmvfms
                      oD1gGIG7xeKJvfH4oz2MsKu8gHG7OoFcjD15nY49OshBPeOviz1K3X09AUmwPepiej1hgr49tbnF
                      PXfGtz3npii9Gwa+veh0ODxmulY9LWHCvZiyRDzxIMQ9CmwAvRMfhj2yi8G9Kw6hvQ77Tz2t0ba9
                      U3SNvWg0EDzuCnU9GF6CvaDgMb03qrU9abCoPbB9qL07NIM9tFXZvADXwr0wAa67Jv9PPdv6hT2Y
                      qU480uo/Pajmmr3USLi8p+iVPWM9nD28XeU8d8xovcDY57wgP4u98NMUvCDO/rtSKpW9qOtfPAvp
                      tD2Cv1o9jRE5vdDdP7xWVQY9sC2ivSCPvzy4tq+8Up4gPTCPWLyCfWQ9tB0CvZMIuz1q1UA9pqiI
                      vbkDpT0ao1Q9AOqzurI+LD2yxK69cYuLPeGLsz06TSK9cV6OPd0dsz29wcK9Nb2ivcdZXb2m+Ak9
                      WNdYvCQUgb2AAHS8qHu9vWpnMz05XYM9QdGbPYBeh7wzzlu9eNOnvWgXoLy0Roy8K+SXPYergD1m
                      aWI97SqWPWtDkD154oU9gLWROw6CVj14NLo8qiECvdgFarwA6oi7rS+aPXCuArzAskW8EFcQvDCX
                      JzyxUY496jK3vTKRzL1sphO9ShG5vbjiu7zscZS8Fr8QPTi8yTyAGxC9gotcPTBoYb3pcbo9Ki0q
                      vRi5g7wgrIQ82Z24PX3Ppz0AEVe7EMM2PHl4gT3AogM8wQW5PRBiBL2Yi3s8JMHQPGrqmb0wdZK9
                      ycPDPdAILLz3qr09VMm5PI5QQD1oh208+QicPQZyOT0CfI29rcmyPXXJmz2wP9E7VikMvVF4iT3o
                      rWO8eAOQPBomYr0U8xW9zqsWPaC3hrsC6y09Wy3AveC4qzwaySY93fQvvavHyj3r6pk9OjiwvQT6
                      zjwAu+u7F6+VPSUhyD0w5ra7kbGKPfu/iz1u7wA9SnOFvYXCjD1MKOc87e/EPYyZjLzvnqk9v0C4
                      PUNtK73o+UK8FowKvdHzsz1Us9a8PQu4PT+fyL3HBH29kOLGvfmwoT2ggSW9O2zEPUM+Ub19jb+9
                      tyGuPYrKsb3cMhC9YARLvWmuiD2jZbY97uR3PQoAXT1dg0a9AEARuNoICz2wBQ29Hmc7PZh/ozzS
                      Lsa92ZWMPSxhjL3C5Rk9wMlivTDjOr0oWrq92CQivIKPBD1prKY9MFx0PLJuED2a6Ua9gJ+aOoDL
                      uDqfPaI9Iam+PScQM72qV3i98fSPPfBffjwfG5Y9YPG1u1ERmz1THGC9IaKrPfCwXLwsv848owG2
                      vWZKbD3G0Ho9qJQBvCqRZL0ocP+8dtKEvY0uhz1Ti8s9AIa+vXa0lb1Yfqs8jf6pPfiiqzxo7pi8
                      8IxPPL6zdj2dcIC9gNsvvQBoTLtzopK90C9RvOV7gz06H7q9j6m3vYPer72vSK89PgYUPcBYLTzM
                      ZIU8Y2K+PWqWFL0sfLw8DHLnvHIZPz1AhUA8YMO2O70Li700wda8jDC+vBBwGbzadwa9NTSXvUBF
                      O7ytSaq9gOCQvZ3Lij0HCjS9bR9JvQfBU70sysI8AucuPQ74Yz0ixbW9yI2+vA6oWD0AUqk7Hl0H
                      PUZCZT1GlAs9UbuePbGWyT3ADhm9oOdsu9BCur3AUNg6VbCVPRilZrwwKGm9EFyvvUYEE71LVqq9
                      Y987vbmVjD0hc4E9+jmzvbU0oD17J8e9YLOeu8LeCD2BA6c9QOEaOzihg73NELW9Fo6TvfMms73A
                      0ie7zOCuvJRWkDz1UMW96DIXPGjDJLzQaTA8PUGFvRJ5m72IU6Y8gBUmPNo0aL3eJhQ9YoxgPaTU
                      8zzrpMi9TzKpPYAUCL2z+ra9KHOlPECFgbxFCqQ9Em9OPVltoz3wZ1Q8DWOnPRuatj00jOK86Das
                      vYBF9ztHTpo9WFYGPOdTsj1FiKy9bfqUvWB7xrsMPOC88wSevbsFij1jhkK96AeCvVhOdjwga+I7
                      SFe1vWCJcDsiSKq9GqELvVO9H70CUnI9GdaTPbdMhT0xS5o9HliUvXpuKL10XOo8Z/k9vRGnvj1Y
                      XUu8APDmuVCPqLt0e/y8J4ZEvew8vjylPMo9GAkLvFJZPj0AwUe61JXSPADWOzv9c7i96BfevAAw
                      Nzsk8/o8xfWmvV6pYj2gfa68QQ6cPcJWwb1VCqm9kuZuPbpCVT2xpZc93LGCvZNltT20euy8IJuU
                      vco5GD3gUIY8K4SWvV44dT00ss+8WPQwPIPvMb23UIA9Y3g1vayRCL1gajM7TPn8PIb8cT2dgU29
                      bT/CPWDopTyAHy68qIAcPA8roj3K31k94zIivfqhC71V+7s9T5W6vf0Jwj2TDcq9MQGyPZiBE7z0
                      0428LjMtPW1gPL3wfxC9gPqEvVC8EbzokU487PiLvbLdAD1Jfcg91uZ6PdMtuz0B8p49WLKOvYbL
                      Nj2KhjM9gCRjPKpRFj3g/Kk8/4C9PTAyI716dio9dEGwvIXsxb2L/o09YUOxPRTSr7y6/2g9mcOj
                      PVTeBb1yy5G9j/a1vThuhjzTV6y9xNnkPPvrub0UjNg8q5fCPXkBiD3AzLs687m1Pbo6Rr16WSy9
                      +Kb3vH6cYz1rnpE914WMPWD1dbtUmQO9EAROPFi+bzwIReS8kDAkPIKBdz1Ao4A8G++QPf8rsD2A
                      0Um6BlAmPdACzTsseOQ8FKORvNTR0ryR6rc9KPALvMDHLzyI9pS9Sm8iveZUFL0s4uW8iVG1PXaD
                      DT3QCJi7g5KuveHUnT3ZhbI9Xh+YvVHJqz3zjKo9LaeoveJqRD0DBMc9FXWivcAtLrtUN988fNHZ
                      PHA0o70MS+m8EnV8PQQX6DzVKaG902+KPSH4nD2mZFI9QUO9PWAqkr3Sc0E9YCeLPEhjnrxFXJk9
                      5v1cPZsuxr2gf5e7+vsNPX2gdr1jTaM99h+rvabDRT0Ihr68oHorvQeyY70S5gs9P6LLPQD21LzO
                      vHI9I8ZnvYDrXDzjElS9al82PUn/iD2oG6i9kL5wPM0Phb1BlJk9k1B/vQCY2jnorSM8fl+PvZWa
                      gT3kN988UgQRPZjrDrxf27+9A3DGPeBYnbvIupu9LJOyPBNZjr0bPqY9aJ+NvKYinr2s+qS8eoeC
                      vdBHfL00puS8tslAPWC8E7tQ85O7lg13PTETlT2Bk8c9CB6HvGWxir0ALse6wY6MPWrLGz1ZDqA9
                      0KYtvLJPNz3NEMu9N2OqPeCe/LzaXHo9mqdbvUreJT2lGrA9CQ2iPcD5FzyAzK29xLIOvWyuk7xs
                      b5i8MB2yO30lM73QudI7KmhHvQAcab1ssJC8V9ZKvcy92rxHOTq96NKqvLsivD2oT508Xp+Fvekf
                      hz3aTHg9qs8TPYcIkz2eDzw9FBjSPLiG4bzWcwy99qIUvUfbrr2jiE+9AGNCujrtHD3SJqG9xg53
                      PWcilD3qOEc95qAUvS43mL3iVD895JCDvUQyAL3UQPw8/Z6gvddsMr1Kaq696fyDPXgJqLwizBk9
                      ZXulvWmDrz0PHbE910tRveAvu73Szjo9KRi/PTJ9DT3s8b68CCqnvQDDVLy2wRO9TE69vKyE+TxC
                      F7y9qeKKPdQCqTwAIBG5WSaHPWhjCLxrfKy9OrFePdF+pz1C3ZW9c7U5vdgedjxteWm9+56ive3V
                      mz2KRJy9QNebOgyu0LwSkDQ9ODOePPNWKL0ntJs9dZ21PSnBuT3EPfE8gBhLvYBvrL30EsS8CrgM
                      Papyp72LmbC9GE52vECZnDqWwFo96SWdPaiIybyJNbc991+7PRIeCz0qQxY9XjxuPSwo37wA8UO6
                      I4mPPYskpT0yki89yHesPF8Cx726yDQ9q5mfvXsEs73Y67m8KKGxvbOrmD0Fc7k9QucMPWChyDzN
                      9XO90MsvvZUCmj2OIC09vqx/PVorEz3GdCs9GkJdPTrmXr1NyXS9EP5evFciWr3g4re890hsvSIJ
                      mL13dK69zG/jPPd8sD3pWLE9YqxfPTmvxz10PZG8c38pvUGKqj3CJbW9vUBUvcIuTz2zBD69mFXu
                      vCDyA70fK6Q9aMM+PM9+yj2AP6Y82gFNvWDtoL3gEuM7kidLPcCtOLytVZU9hRCbPe3eS70C12U9
                      XjYZPbhVxzzYlb+86PfQvITY3TxilDQ9cktRPdf3wT1gcta7gJ+qO6iIujz3oIg9vGHtPIAfFzxA
                      11Q72K3BvHPjoz3npow9Pn+PvS20H72j7o+9On17Pb0GgD1AnyE8KHyuvMG4rT111IQ9x4nJveMZ
                      w72bIpG9MIO3vQlkwz10s+W8kx+SPZB6a7wO7oW9pJOCvSBzorvYATO8ShgbPQCxCDxkUoG9QDRF
                      Oy/qgz2it8a9fwuZPbY3l73W8Ka94T+MPQaueT1NwEe9WIDHPEBqY7twdYK9jKKkvIyTwTwWT6C9
                      4ikdPeMEo73m4CE9EHAYvI7jl73Tone9Lt+kvRCQJLyH2TS9MKyVvR6An72niXm9MoQyPXD8Tjxs
                      /Na8BkUVvRgsuL0wHpC9OGjJvT3wcL0HVsS9r0WyPUOrNr27EMI9NNOnPIwmsTyZDIk93WCCvaC7
                      nTu0CIe8GFiOvL1Vsj2QPYC9DDkWvcaabj2vFb89oiRkPfahLD1tKke9KthrvTNhuz2Air69++eG
                      PaTTh70R9Jo9UFmku3esWb1AofO88KtxveAgsrxna3y9ctovPZxqEb0RWYc9r/q3vbIDCT2Yx0+8
                      KPyUPFextz10bo+8EFSwvT32kD29j0O96DFyvOhDZbxvPZQ9bmOBvWLcND0FLsI9J8bJPQdxLr0w
                      lju9CwfBPS5WbT2Sj14925OcPXg52rwyjQg9QGxovcBXYr2wJWo8TYyfPUIaqb0owq48dPm7vPLD
                      Wz2gj2C79yAmvahw+Lz5jLg9KLNIPMWajz3R2Ms9CJaJPKBh87t1M5w9dmcDPV3zuL3GAhI9Uldf
                      Pd3diL2QhAC9vCSLvRi5/LyQeC+9FSCsPcZaBb2YGks8ahZePW45PT2ofCa84FuQPEhbnTyaqQE9
                      YI0GO/lKpD2Kx4K9syNSvRg8HDwArWQ6QtBZPWbXRT3PTcg9bVO2PRAnc7yjNZa97XytvbfxO70F
                      oqe9A4MfvTAMoDul2JU9vZkovcrfrb2omMC99n8hPbSYpjzBZ6g9uD6iPOCA67uinsu9wlOFvZc3
                      IL05t5s9WCquvFiqYbwdJ5I99DS5vBgNb7wBA8s9dwdkvbBfJr16JQe9SASFPOJxLT1NDJW9Gf3H
                      PVKyZD1AAVg8V2EjvaxClzx9Xqo9CRSAPVDpbjyd0XS9gx4uvXL/OT0UUti8wLaMutCaxr1SSxc9
                      mD52PCtluT0adDw9IP+WOxp3Az0LncY96TKFPahL6byb26u9wAjGOkcONr1oNcm9rt09PawWyzxT
                      kJ89ZtVPPbqvCT07x8U9ACMruhafkL1o+XM86uopvTpLfb2IkMK989lbvRWkrz3GiAU9dUSDPRHg
                      kj35LrA9QlAbPeoYQD1AP3c750YvvVU8tz3ubR49ZGHVPJVLqr1LsZi93mdgPdIAFD1evjQ939aL
                      PRict7xKfx89ACY7OQU2l73UYf68Hwi8vd5iNj1ASBy8a7a8vYxSmzz/lZ49z6O0PbFdmj2s9aM8
                      ab69PZpfvL2+qp29PwepPVomfz0YbsA8J9tevRicWbz5a6g9bvlIPTN4p72Lwb69ANX1u7I1Yj3o
                      nsG9cQrDPezRyjxQyUO9xmgUvaxhyjwS87m9aH0mPII1SD36sLq9c1+vPRp3mL1j9ZG9YN+ivViY
                      q71K5049mgt7vajSWDzNLVu90eyfPYqkuL2Ael26HXmuvfMUtr1DC7q9emeQvYAUiDrdaKI9q6yK
                      PatitT2AsDm8mkYmPYMhJL0C6n490q4CPYDapbxCLlU9CntwvUwt/rzzwME9FwlZvZoHkb0w0IU7
                      QKOavShfKzwsaMW8iYWvPajohLziiKG9mIMKvLN9nT1LFL69A+mePdipprypZKE9nMsGvbBkMrwm
                      Ews9QHVPvADA4rrwFBW92BMoPGpjE72nUDm9ZqyqvdhBXLx4/qK85NXcPLWcqD1eJUE9SsS+vfO9
                      UL2pWo49MpoPPagY2LzKfAo9NNvuPJXek72oRMi94OGFvLBsnDs1KMq9TlgBPXQVtjyLpMa9KbWC
                      PWU/lT0nw589Iu81PS9uyL3q5rO9ZvhdPS1RKL0RGrM9Vy+tvau/sr3gjNa8EAhIvCzV57zUQOm8
                      MA3hu6w35Dybb5Q9aEWVPN1Zoj0HvI89fRqqvRA/n72YxU88VbjKvSgMqb2WMg49DNyZvBpAcT3J
                      o4Q9oNSKO/5hlb3yTWI9qdKkPXPofb2A9Yq77ZGRvaAi0ztoxRU8lFXZPBoEVz2sIMG8O3O1PdLy
                      LD2E7s084G2EvIoWHL3OIjw9EFQNvUCVKTyATfq7ynudvbFBmT0xt8o9YHIouwkbsD0AfK+6Fq4Q
                      vS6GAD30nK08E1ZJvdJkXj09b8M990CfPXotRr1Aong70DqBuxGWlT3WRFE9arBoPQC0IzmZEow9
                      TWC5vSCz3TtlSpQ9QKebvZA8YTwnO1G9kvCsvQA0YzmRW5g9Cq9/PQeIXb1AhzC7iZrDPepjID11
                      I6a9Zm2jvctzmT0AHDi5DZ2APSOTP70dJ4Q9GDqYvFbGaD2trJw9DWaFPZdPX70XMya9JrFZPeAI
                      irwoDwk8DKauPN6DKj3gXIw7TbJFvWBGVLuaFSu9QLNNO9j4hLx9a5K9Go3BvTKuRz1dny+9iitr
                      vcJ3ej0wW7u9ccaDPZdTcr3klvg87Hv/vGN4bb2Kzjq9H9i2vX2Apj3CHwE9A0OyvW62Oz01CL29
                      EHgqvVj2kb3xo5s9x8NbvdRhury0G6O8ziWsva3SrL3wfk69IN/IvWqYY71yu7K9BYWePdgpgb13
                      sG69o7lkveir9rz6UxC9exGMPU9mpj1ldci90O84vFCqt7s4bPO8OjpCvbxz0TzQ7yE8au1OvZo9
                      uL1Q93Q8QHJhu7mwqz2D8Fq9G9KpvQdlPL3abgg97xa1vaFCoj2F86Y9gOJNuklTrT37tL89C0zH
                      PUBPyLo3cKc9ntEEPUNzcL2La7q9ML25u1llyD2QSlk8HPXNPFQMjLwOW2g9AFiWOV5An713nrk9
                      wnMHPR4eo71ox4C9xHnYPOlEsj14tsY8WH23vEoEGT1aJGE9xr+GvfpQB71kVwa96imFvVqpeD0g
                      j169AJuNu3cQGr1hrpM9bP0KvR1xSr2H/mi9KkVQvYccpz2Cpnw9ZkYEPQsuuD1UDZS82Xq5PWol
                      Zz36oSo9Ur8bPR6CFz2pdsk9ACooPOISBD0sdYw8ZZaYPe2If71VeYk98EFDvSrLtL17jKY9pm13
                      PZe+rj3zRDu9C8KLPbv/kb1kuYG9lP7LvDCIFr1FQ5y9wKe4vCUCjL1AHRC9UTe5PfpBtr2F0qu9
                      gHaovCoBcL1iDaa9EL+Qvc/JoT3WuI29GFSLvP4tg71XajW9ntZQPcaCVz1gsLA8ICWlO7O9w712
                      8RI9WL69PJPTxr1OCgU9O1W0vejHhryQHSq8Jt0lPTih+ryE09Y8YH5IOyq0c70i4H49EJYLPHiB
                      wjzJSpQ9GtccPdPUYL1QzkO9wQ6+PcDCNTsgOGC9AAXJuV82lD1tSWG96twBPZopxr29BHG9nYw4
                      vY2jMb2FHLu9pmuGvSFimz2oUh08FATpPCBEzztVjY+9imd4vUOkJr14Mo680GTXO8IbGT25WJw9
                      DWGuPSXNlr02ah49YxSjPSGtgD2dwcg9AHIFvRZnAL1alAW9sLjGu6BxOr3uD0k96QeWPZKNfT2K
                      QgE9qFRsvBSjBr3gQ767wN3LvV3Voz3GmHI9wGDJPENfHr0tIZQ9F4uwPVZQoL2gvYW9AOBQOphT
                      GzwQjWo8UV2HPWheybzYzWS8Pg8jPRtyuL1oMs28Qm5JPcB7ULsNI789IA+LPGw57byKCDA9cRGo
                      PeAnTr3gJou8kOVovS7pjr0Gage9fcs1vUhz7rzCaMG9iGTCPBdyoz3AJFw8CKyFvbPiYL3SvrC9
                      +wG3PXq5fD2ApdA7PZ2/PX7kaj2e8AA9h7yJPfCZDbxDdJK9mHybvRa5Aj1wmSE8FQuePdbbez3R
                      lKA9FC/1PKMMiT34PMC8U1bLvQrrYr1zGrO9khKAvTs6v709wL69as2hvf4CRj1as3C9Gj+9vXJp
                      bj3W90g9yB+CvQP6Nr1mT1M9IY+BPWXSoz0ajk69rAKXvEChrjqRWLM91P8FveLYIj0RAbM9LVGQ
                      vV1YLr3X37S9ke6QPYwcpjy2RAs9zETwPKFEgj2CnQU9DRJdvWlKmz1AGIQ8GkiIvfZOfD1oii68
                      VNSmvChdg7yjW6c9zTK1PTMwvr1WVBo9MEW1vWiKeDzAE5g8rAvCPBe5yT2uby89saq3PZcdxD2Y
                      PMM8s1K7vcqQvr3+/R49VyK5PQCYHjxY4QM8BW+hvXB/p70W9Qw9DL3lPINkwb2CBJC9zyzIvXsO
                      tj3wMSm94vMtPeDJGb1/8sO9WsEWvdeaM70U4AW9JOX7PJouA70c2Qa9iFSFvaY9Kj2azme9mWy8
                      PXomv72L54o96KG+vWfSoD2aMRq94k3BvelPgT310ck98OFIvYr7Aj37Rqq9yD+bvdvrp73zfpA9
                      zCjCPGUEkD0gzDC9uKrgvKitoLwYg6e8+ymsPZ4ICz20p+A8+J/KPGDs4rwJ4MU9cTeNPfAgx72A
                      2ky8ACadvKm3wj0OwTY95r5CPcw+2Twpq489I1e+PYCg1btQ8zm9Q9sdvWzn+jyYwva8LKn3PBNp
                      Yb0a9US9wIhEveCIu7zMxpG8SqcSvUAF+zqLVZC9omV6PSoYLT0i/z49Wn5bvTBHezxMUpE8kZGZ
                      PQDi3DtNHow98GRCvOGDpD05m589LWKTPYN0ob36Hgi9sPsovYTf5jxCClM991KIPcC1VTuN5Ke9
                      cDMrPGDsuDumY0M9KBypvDULvb2A7bE6KBJyvN1Ng72XG1a9rDTRPGPRI71HOrK9br59PVd2gz1S
                      4Ac9bFqFPE4DLD2GISI9LKzAvODWfL14V6q9tEMIvaAEGzsu/gk9MINBPDBYm72ay2S9tqEYvcAo
                      Ir20M+y8wPYjvL3hSr3twZY97JuBvJqEF72aInC9Xa01vVGwwj0qfGu94RKVPSj6mryo2Sw8mEAg
                      PId3Pr36vDa9oE57O101pr3UztC8xDDQPHj0kL08/Qm9aM6EvD2qyb3zR5c93fwsvWD7HDsttIy9
                      IpxgPXf5br0AzR68IiOJvZpFMb0uY3I9AMzaOyyX8bxmP3o9i4GKPROtk71BUrA9ptGdvVcBgj3I
                      cqC9mDagPKwZAb2G5YG9AKi1vfTN/Tyw48O78M85PDAMdTxzY8S9sAoJvbDtU71ga3C7MBOhu1Bm
                      m7sFNMo9dBjvPNAsGTygCJ07lZG8PQmPxD2Aps+6gZaIPUDyOLtMps08cGUfvXainL25jKs9ygS/
                      vRtGzL0YbTY8WiEzPbZXAL2l26Q9592hPcaOUD3S/m49brASPd5IPj264nW9pRq7PfZXFr2gv7I7
                      QMDavKoeTj2m1Qo9KrWrvQ3pNb3xUKw9fFoHvQj1+7yua1w9oMmKvKhaBDxVRKQ9czA/vXRP+bwA
                      hAw8fthBPe0stj3x6ZU9oPQ+vaLIq71XZny90ilvPTNCur1EzgG9gIq8O9G3qD1sUfS83iY8PdXO
                      tz0KZj294aakPZVqwL07JZg9NayjvUOuar0w1im96w+lPQExpj24joW9BOARvZCFLrwC8jU9YPC8
                      veMMZb1ABq88cLqcvT8cmj1sx5m8cDm+vXaOfT3i1HU9yqN9PZpWA71mhw+9UJInvdcrYL2vboY9
                      cEVKvNpiGj0JzJ09GlFJPQJHAz3g42u9MsYZPegyc7xRA8E9TZpuvchDjrz4Wpq9pRCgPe83gD24
                      Lom9Q0jFPSwWtzwZ46Y9o+YzvT5FHz22HCA94qO5vQ17Zb3W4Ss9kVibPbgDq73QXCa9vweOPUrM
                      t73WhwC9A46vvYgolr0Umsw8mIg7PIj/2LxoFsK8zc9Bvb0aor0AWNo4ddiovQpzDD3sNt28KO3C
                      PORG5DyEpwy9wD66vBRQGb3Q44K9TCbwvA6XVD0fFL+9ER6dPXIhXz3gJZG79V69vSXNtL1QCk29
                      amACvc4Kn70Anlm94KRYvWCKz7yJGIQ9gAKnvS6EOj0sM908Gp4BPZjBcrw+KRE9RIHRPPguwLwC
                      VVw9MDgXvPdHyr2g4eK7MCbMu1O7UL104+U8AA2lu0BzTDyY7IC9mFMqvOAKw73oTmU8AHuzvFok
                      K72ODSY9opOVvRjMvrwADn+7uJ68PNXHtz1o+TQ8cGWnvZRD/7wI6Z48+BGmvF/usz3od048ML1d
                      PHI2FT3AmQa7aAouPFDQxrtY19e8BOP8PMsLuj0RAa096OhIvEa9cj2AE8u7rFSkvEzM0jz5ecM9
                      ED4oPMCccjwId/+8IqZLPdoSWb3oJbK8aFOCPIx7DL25/Lw95aa8vaN4JL0l2469YHP3vFBDxDv9
                      u7s9EBOEvZpLJL2Xom29ABreObKzUD3eFho9dP6gPHL2Ij04N9+8UEX+OyhCMbzKrwi9KoZzPboI
                      Or2HULq91H2NvGK4l72YXoo8MLCevWAUDztAI5a6Z6I1vWxCtzzoDKm8UECgu1AXVLxDI6K9gC2M
                      vOV0yr1zopC9282gPYaCJj0irgI9APkJPNczJr3WZSo9Y6dJvUDxZzuCJ109HTKdvUBOUDvN5pm9
                      +gauvbp4Pb1T5r49sO2IvU1NmD33lFW9TN2KvMjzjr24Cu68HYWUvVFanj3Nq5e9BhQGvaVwv71s
                      0Ic8X3a9vcJ/Zz32TgY9gyx2vbF8uz3HKGm908MbvQpJUL23B7q9eE2+vfD3MrzoKVW8IGDHuxL0
                      Fz0kktM84/advSoiGb2p8p89ybrFPWFWjz0oWVu8eaCpPYM7fL28VvQ8Dd+evePQkz1FR7w9v9uP
                      PXd4eL0sq7Q8CaXJPT1tqL1HElS9QEInu9Q7h71za0S9+capPfBCDb1zEoM9diJCPefcWr3aC1s9
                      TlJTPWCVbztcWoi9qvmzvRBBIjz0RYa8EoZIPZRCgb31UpU9alOEvdIIUz1y72E9CBHLPNfeSr2G
                      qXw9KGS9PNpCUb2i0wU9tIeuPAvEkr11Va09FHGhPBhgeLxwA6e9gJnoO6iFcTyTa0C9eJSXve+8
                      hz1weGc8eimVvbCOKbyywRo9wPlFO8ibkzzicxI9AHetvQ6Ei70gQse72klEPWZ5mr3/i549DUiO
                      PeDmcL0756c9dLuIvZCKdrxxnbg9bS+tPZSYjzwUsPK8KjMbPczh+LwrqZg9AJGKu0hI07y3JEq9
                      l0kcvcDOfzyoqpO8oyVDvSgwaTynoR69A76HPdbYgr2UesO8GNSzvTjOwb3vM8y9CyWOPUCK47x6
                      R109wWiRPQRpB71iKR09DeutvcYdir2gJIS7V06FPVC3eDy/b6+95j86PTPgR70wYAq9BKPSPECo
                      /Lxp4a49yCHPvGSz5TwpsoM9/+PJPaAOiTwi4GU9SVK1PZQe1bwoQmi8QKQJvHNpm707xMs9DOCw
                      vAx4BL0miW49LngkPbJOdj1WEXw9KqkBvR+SiD3vNbG9QOpBu8qTfz0Grqu9S0fBvSgrdzyJWrI9
                      EBA3vLWdrj0URcc8Pgp9PXeQkz0gazi9RvBKPWr6G72sPN48GgtBPZjODjz6w229Z/HJvZ0NnD3w
                      4mq9brJPPZUxgj1sNZK8NNqaPJJWdT14SZG9AIu5uYLlCT021Ew9QCqPvYAV9Tp3sz29APxJuxiX
                      mr2Bn4Y9FIDBPEnPlT11XZO9TTN/vYAYTTxwXXa8pUa5PUje4Lwt/0G99x9zvdTC5jzygHY9p9E1
                      vaCH47yUwaI8glaBvYDubzq8St48vkGjvXIZVz2AroK6mV/CPXvNsD3tgKO9AJqtu75SPD3S2gQ9
                      eKDFPMjO7Lzcdvk89ZirPaDFNLt2aay9mQrKPWa6Yj0wEHi89oUPPYB6nTqgzcq7tpSfvXKwMj2P
                      k7W9Ev43PYANwbrubys9AJDoOnWquD2gvs+8XzWiPboYYD3i3xU9g6aDPQjnirzD4589iLSdvZe7
                      jD3Abg47ckSZvWM0SL3osEM8TnIQPQjzhr2ekiE9Up1nPQaeez1Su009gdinPQJrIj1hhIY9etBx
                      PUCfHL3pv5U92OQ6PHCoJr3gTIY8jtpfPUAdkTylPco9Ap9KPbqAUT3+K0k98MAmvDOkSr1sE/s8
                      njQiPVAlpjv0N5q8sKW/O504l71X/k69czYvvSFNrj0AlBK8qjo8vbEoiT0odTy8YPkhO7dHpT3A
                      Xp88zVA4vQCfbTwShxA9jrSqvcK8HD3OY4e98BJYvC2Yvj0AqhK8LrBXPcWrjL0eJIO9sd6/PVV+
                      mr1WU4e9UE19vD1Npb2g19C7qRXEPbiVtby+0BU9ILT5vLmfwT392py9oJzGuzM2U70wEIU7IvSn
                      vVC38btn+ci9ZjdbPb06I70d7n+9bOG7vMmdnz2AOXG90O4LPA54pr0SFHg9ioSBvYVChT1tGMw9
                      gZasPfuDj73tVb492otLvVA+PLyd+ku9Eu8BPYlJmT1AcTm9gEU1PMN1pL2oiCy8KNeXvcfzx733
                      Xsm9qAjvvMjahr1nUCi94Nejuy8Agz033CO98JtBvDveuL0K2nk9CKmcPHVIrr3YxH88MC5FvBss
                      oT31dMi9EGoKvLBkj72yKIy9mLYLvKK3i722Ei89UDA0vV3PHb2nzCO9L9KIPfOSjr0g97+9VqkB
                      Pa0sgz0md3Q9oM+Cu4BjRr0KGca9/ZspvWjcVLwIjqm8AACWNtj9QLwA6Y+92PlRvGg2gLzNOL29
                      AGAVvLSb5ryriYU98EswvAffL70W+B09AJNAunU0tz2AbAo8Yy5lvTgmojwSD189DkAKPZqrNL0c
                      0v88ioAtPVQKg7xaYwg945NXvd1/Pr0+6oW9sGoUvODAjLvYYqU8ID2qvIqJTL2wZY87wN8cvVie
                      8rwKR3y9tDyKPMDXf7sqhyU9VL+ZvOSU1jwjsK69KkRXPQNkkz38Ngy9AB0zuqDrvzxxrYs9rJ+S
                      vD2Knz21RZ29bsGJvUD8FryJH7s9B2qxPRidZLxp2JI90oS2vStSgz1S85W9PwSOPeN0rz2ypz09
                      x8M6vey+g7y9/oQ9ATeMParmVj1QZI+7wqUePUARIztrrLC9eR2XPRyB9Tw0YYW8rVEyvSyp/bwH
                      X8m9XxqAPdC5Lb1dLKC9glcxPTg6zLwDgp094VirPUC9FTyoFBQ8I5dKvf7bWT17cYk9+IuFPHS4
                      z7ybqcm9bRCYPUCkUjvXNMe9RzizvfbUSj2mnxw9xpoCPbCAoLuzE2a9vvaNvZ0JZr1sUvw8ozF6
                      vSC6jbuJiYM9hW7GvWy19bygTwu7LNPnPIBybr0dg4G9g+OTvTCfXDxOSh09qAiJvCiWerz7ubC9
                      OiM3vZD6sL1glvc7PXsnvdRZ4TyBPMg9cJBZvQCEajlrsL09uHKgvB61JD2w2Ko7sqFBPZ1Mjb2w
                      jAi8TQGwvYQn4TzmooW9M3PBvRCKKb2QtQa8BKkVvV3jO711c449bUsgvaB7QL0DKWm9wpTIvULA
                      qb05jog9XVggvbWSwz2nO7m9UPFivcRn8zx/JZM9p/kxvRckub2SHCc9jlIuPbb6BT3QDY29iP+q
                      PMNwer1O4KC9MJh0vAuygz0oPlw8UgW7vQDlFbpqPiQ9YLK4vIDJnjt1U4O9LGSNvJoiGr0lFJi9
                      VHkLvXrWB70AhII6X5iEPcI2SD2uVlI9+AGFvQzklLzNNia90OmGuwAO3Lz7Tbu9SmYWvSzSqDyL
                      qpS9jcg7vRPavb3OnyY9rFPJPOFrvD0Z78c93YxjvcoGIL1zbXy9QBZevBl5gT1FP4s9AOiqOvAY
                      Jbw0a7+8PLXoPO3Ovz1Wcm89/mkrPapxAj1IdJI8obnGPcd3rz2g/9g74ETIO37Um72A/ja9Ywsj
                      vbaLRT3PSKI9wwlqvVPmwr0qEkS9ndWmPVQAnzwoDJM8V8uwPbp0VT1Y8Ry8EMibvcFYlj3Htxy9
                      6CNvvIs0yz0zVE69ANujOaBNuTuErf880FU5vISKzjy6G1c9hopiPW4JGj0YAl+8YBkou/Tu2zy4
                      ebC8IlJvPcE5nT2jwnm9kPVZPNjRuTyCFyE9feSgPYXtj73Z4rA9hambPRDfLDyOnmQ9a6e4vRiH
                      dry2fVQ9eFTxvNNviD0e9wM9pkV2PQc/ML1NpYC97lYMPcK5az0U8vU8sD+fu63lgL1Mrf68nJ7x
                      PLqsfr1fGpA90AuLvZhk3byN9oA9aC0yvLv4xb2AhJs6BLuIvcVQuD0+Day9+O/LvLjxsb0JeZE9
                      4ERLveCHrbsR1ac9npOivZYhEr3rLqO9JMT+PKfcaL2OAlY9oKRovd3Jeb0gRKc7MzubvezGkrwp
                      94Y9jM7yvCLlgr2yA3499FjfvM6nHT0ER+88IyPAPci65LzAOqq8dokTPffEbb3aZae9npOdvf2R
                      wr2k19M8/uWovTdokT2gFOA7WCYbPLpxbL0slMw8Oweivf2Uab2TUHK91rpOPU46Rz00Pp28jOTh
                      PFn5wz3Qzbw7u/i6PTDM1jsAkVC8TEDtvCF+xj0CfgM9w6qPPQA457xgNxo7px4bvcD0KDvMY7a8
                      sgKSvZ1clj3g6+u7
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NjExMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNDI3NjExMnEBYS5kAAAAAAAAAJIxMz0ANGS5l5WzPVBNZTxDpa29V+BbvV6XlL0tlJi9
                      FzFPvWPPgT2DcUW9QNEoPBCePbywa5Q7KBA/PD+1jD22/3c94ZG4PRWTkD1AI1C8FsMTPay7ibzY
                      qZg80Y6pPccsXb16M2+9wADIPOK/ib1ycA09PxjJvS/Lvz1FGoa93fKzvXb5Bb3dpXi9aWyqPb5V
                      nr3iLkA96DOvPNlBtT1KQG09R87Dve5Jcz09bsE94lBQPYywizxijEQ9UihxPUSv9Dz6Tje9GEqu
                      PHMMlD3McOW8zMCFvWB/7Tsw5IG7oyNive7KMz0pubg99oOMvdqKJr3Ubpg8R4aMPUEKrj0GLkY9
                      5AoQvRLWTj2UBe08SjYmvR25Xr1w1Bw8DZkavaK/cj2gaYe94MBfvZ+PrD3YmpO8ch88PY4vGz04
                      /5O9oR+nPYwz5bzND1y9AhAPPfteqz2dvMc9bFmpPPd+iz03sTe9YKXlO4Dq+zs0bJO8i12ivcLA
                      PT3gwVG901+GPVDLrr237W+9YTy+PY3olz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NjI3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNDI3NjI3MnEBYS5kAAAAAAAAAL3eyb1QeqW7INaqvQAAx7mtPMS9YBYOO6vvlD1nayi9
                      cwuwvdMlMr2htog94JPEvWfIyT3NXkS9CmkGvR8MhD1gCJa8vQKkvTC4ezx7g649jMijvAgInbwB
                      y6k9ni+IvSshsD2iNaC9sPjHvYAgl730so88Tu2fvW9vmT2FZ5c9YNKMPOy4q7yZOL49J6O1vQuI
                      jz3EHe48QMZQvMDZQTu0NO28odO9PWGrnT3mBws9AzS2vcGblj1Alps8jPGbPEngqD2s2oG9GT6f
                      PTLVTD1Qp5q9js9iPaPOmz3QkAq9gxOSPaAiqb2y8lQ9+qdpvVsSqz1OIYm9FpJXPWQTE71SgCc9
                      oD8PvajLnzxwXQQ8W2G1vQDFd72AeO+6nv12PeDboTwtKUK9GudxvUDTerunhq29RA3wPGlyxD1A
                      2hY83dRevYr7v70Ytaq9qKLNvII0Tj1Un8w8DvtjPe15dL13Crs9O4e1vdAV8zvSoYa9bRmxve5j
                      or2o1bo8mOCIPMSk+jx/Xp89yooEPXROgLw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEzNDI3NDU5MnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEzNDI3NDU5MnEBYS4BAAAAAAAAACdyXL0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        pZjeNphG5zeeAjo4ngI6OIXGpzbRC7I7AF5yOgBecjqKNWM1Zvm5Otn0jjrZ9I46ijVjNWb5uTrZ
        9I462fSOOn1uDzf4hvQ1zsCINs7AiDYIZ8E0g2zwN5COOzeQjjs39l8aNgYMtTcdjCE5HYwhOfZf
        GjYGDLU3HYwhOR2MITnDyro3yv+POM2MfDjNjHw4ydqbN1FXkDsJNCA6CTQgOhmCBTnEL108Fhbr
        PRYW6z0ZggU5xC9dPBYW6z0WFus9w8q6N8r/jzjNjHw4zYx8OMnamzdRV5A7CTQgOgk0IDoZggU5
        xC9dPBYW6z0WFus9GYIFOcQvXTwWFus9FhbrPfIWFzZfaxE1pM60NKTOtDRUdUg2EOU8Mb3DijK9
        w4oyrAWUN5vXNDKrQmsyq0JrMqwFlDeb1zQyq0JrMqtCazIle+o18IkJN57udTae7nU2eeUtOODi
        CzXzULM181CzNfbb2TaPwzk1xi/QM8Yv0DP229k2j8M5NcYv0DPGL9Az6Qw0NYuOaTRtK4U0bSuF
        NG/KVzXqAGkx6O7RMuju0TLY6Pszdg2YMPQPDy/0Dw8v2Oj7M3YNmDD0Dw8v9A8PL+kMNDWLjmk0
        bSuFNG0rhTRvylc16gBpMeju0TLo7tEy2Oj7M3YNmDD0Dw8v9A8PL9jo+zN2DZgw9A8PL/QPDy8=
