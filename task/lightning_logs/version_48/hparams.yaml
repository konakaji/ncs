N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0ODAxNnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjIyNDgwMTZxAWEuhAMAAAAAAAAYLFO9iCxWvq4APb52g2q+ekIjPrjdRL2yIGo+ZIu8
                      PXBUvj0lDo4+gDe+vObf7L2B9Ik+ieujPvpCcD4ynSI+fjEDPo7ZN76KfUo+Zt9TPj6sMD7OuVY+
                      HMPVPZr5ET4WeVS+bOb3PcNMDr5tY6Y+Z1CpPnoHRT5mp+i9Bv11viSxk71SOVI+Gl6evg+vpr5m
                      fhm+wPzIO9Qwqj2usRc+KKcHvb2RpT7ce+U92CEnPjttD774l0U9sYiSPqzuqr22U6296YalPu4i
                      Jz6HmqG+3qcFPjLlTT5AdnG9+M+bvghzGz3WYzU+yB16vXYFHz4CWQM+YE5vvWwG/L39zYs+Zsxk
                      PuAa0b2mVV2+QG85PX5zXj6QiCI+wLoFPlRWhb4egGa+gOYtPTbKCL5GXQi+wK6kvUPFR76wzce9
                      Hmw+vkkPjz4D7Zu+LixOviozMD4VUIo+iktgPlJCbT5g7FS9sAL2vHqPbT5eg6S+Pr9JvpA1vL29
                      F5o+4+8tvjAPPr57OkW+QIJUvpQzhz0lCYk+1Cf5PdIHNz77cQK+h+mlvlD6Dr4g31O+C1lpvhjo
                      Dr3j+1W+Cg4pPmJ/BT6zmDK+zvJGvqA7UD2c+eI9AASlPJJBLz5meVs+kU+LPjAY4rywEx2+2OUd
                      PRZQtL3Q26A9eApqPdoKHD7Q356++x43vsQYmT26A4O+GA1NPTCloL3mL+m94kxdPircJD4QNyW+
                      s19zvgDS8r3Q9tM9kESuvVCvcL6n6po+KoSAvhaSeb5ioG4+DmN1vtgCVr54pjK9oAocPEbwED7M
                      Dqm+e6YPvuDlEz2Ynna9EC1lvghWab2ABTS8sGaHPPkujT5qXjU+LEiyPdZjcL6z1US+AGI3vN6Q
                      MT499JU+yfSZPmx78b0EspS9TAOHvdYADr4NNpo+AJltPNx+zT3IEg++ipChvvQEmb5md1e+9oxB
                      Pr23lD5kaaG9PNHdvcAG+LyMDee9mx4PvttImj61B4w+fKLDPW4Ho76QBYs8ej9CPhQm4D1mZ6q+
                      JtVPPkXukj45WJA+w6cVvpBcr7045VA9oSmlPsOEjT7em4i+PngRvqzy/b1YCgQ9IFppPIAvO74w
                      Wdu9OtqEvrKRfD7j1KC+oFJ9vh75VD60fbY9QPB8vjjKdL0rLaW++fOaPjezgr7Mfd89oHkrPEBN
                      Rj0AWmc9NrtbvqjmUr7ggBm8AjInPlOqF77gqwK+m10gvpLvBT5nlJC+qGw6veA4Fb27NyO+MJmT
                      vjI8fD5hu5Y+unI+PqB2HzzezgK+Jjt+vup6Gj4evBg+Z0CSPpCZlrwgBH+8IFYXvnsKOr6WiQc+
                      Nn9ZPnBa+L1oGhe+A+FyvhTRuD1wvse9ANAtOwi+Rz1IxXe9oB9LvoAnpjwj4oM+wjsUPhOICL4A
                      gF++bjRPPgAFgjzAp6y9QLqKvpOffL58c/M9y6lQvjwDoT0I1AY92yKTPqahiL4RyJg+6lJDPsZ0
                      OD76n5G+QYyGPvXZpz5k98c9cJD9vcsUQL4o/nq9+AVEvvAfvbwGtkC+F1CLvvSIwz0wRda8q2gt
                      vj5PNT6cepG+3Dv/PWBcPL3MWv29UCWbvsLWOz7Y6y29qvEVPhS1oL3k05G+TuKPvrwrqL6AMnA7
                      5pAHPsDyDb1x6YI+JoAQvsa0VT7AS647hsoiPpHvjT5IFEG9eryZvupBh75gLnI93FuPPRitTL6Q
                      Hym+MyaPPszkwD2iMlg+Co1cPoB+RbvwS508RdaOPqe9nL4LrXi+zHrfPYjmeL2/m6c+QKRnPS1e
                      iT7Q98W8mzBWvmPinz4A3Z86o1cNvtArIT7QZqi8CNUhPSZAir4g/hI8Qhk+PgivP76K1jA+jnZq
                      vkCoub2mRIq+roN8PlDNAD4A5ZM8a+BVvjbeXD7mycm96uVQPsZEe77e8BQ+6Ep2vjK0OD6gWVG8
                      ZvB9Pr6XcT7AZsI7QxxTvgx3/b3gT2U90NHWPSJDOT6ahkk+/FOhPYo3iL54clq+UJXcvR4lI754
                      KjW+CyOdvt4ONT6iJF0+4gMhPrh2Wj1S4UA+FPekvorSJj67spy+fUanPmCnlr3Ob5y+IHCXvWDI
                      173OCaC+mJZpvqGuij68f4+9++WYvoDyGr6Qh/e9DI7dvYJFcj6evxM+tA+KPdws6T3veKi+rG+/
                      PaMDlT5ahzQ+vNSqveZtv71bQDi+wlNiPgDXtbveyAq+WENuvlboXz7qapu+sDCrvHy/+T04Bme+
                      43WBPmuemz4rk6C+s6+fPtEQmz6ULvA9gIwKvOHVgT7YA2W9DAW4PdjPf77zGRK+t0OpvuuYhb4Y
                      CCM+tjvfveYb671xAYo+KHttPUS/j73Cj3M+Dnt2Prtwlj5o5Ai+YjRSPga+X74Wnjw+HyGBvrgQ
                      Rb0rd5++WwEhvgAskrkpqKM+MD/tvTB/7rzQAcu9GHB7vcLQVj4aAiQ+LE2/vdbker6QI6W9KNMz
                      vafckb7wM+288RWWPopFXD7YVyi97nEwPsI2cT5SxGQ+67KDPjYwRr5G/QO+88aIvtCCrLx8wa69
                      VPC1PePEqL5aoG0+SlxUPm55cD5pdI8+liEnPuh5bL0+B1Y+sLjbvdAXvT3jt3u+QPkzvaD4A75Q
                      Lme+x72MvnIqGD44bFA9NSiaPkym8r3UGJI9Et97PgrmGT7ts5g+KEd2PZZIEj5IEVw9zpsyvk79
                      Ir6lwZw+kA2dPFCdJD5A+IC+/lg5vqnxpz6w5OY8csmPvuhhCb0WMSW+4IL3PYOOXb7qvCs+OIAd
                      vgAeVr10/Yk9ihJ+PkqWQj6E36e+wOHgu8z/4r2gtjC9JvfevUAI5juCfDs+yPpNvlOqnz7AWX09
                      lXGHPtAlgTwAHpe86FqRvr6fHb7jGG6+siNtPpjNDr1QmIq8MPjqvIUtmD5tMYE+07oyvq7AGT5I
                      xHO9YLkUvaP2gD4A8ZI94xwrvmXIhj6zCVa+pHmJvYiIZT19IJs+MHTzvCBaej31mIA+NF/TPcjw
                      JL64r0C99cmLPh5WV77iQDo+w2uiPuzst71ed2O+BFvsPeJpQz7IrxC+cUaNPpKyZT5+y0G+nCCq
                      vfL6Gz7GjEC+w+maPmhbcb4ugXc+IJcvPNCO4b1AX9E8wJI6PZjiKj0A/u07cq9WPiZFMT7XNZi+
                      NMmoPaAlHzzPvJ0+eYOQPkIehr7+yzI+W+4wvgCdi7rEgZe9DaecPvosej5MIti9/KiNveyslj3l
                      GaQ+RESvPfSsir6Gpx4+QIa6vbAJHD5gr4292oV+PqgVcL7KtSw+8L0fvs8jnz5lYZk+FsIQPkRY
                      qb6mxnY+kDqcvCC51b12viW+sH/ovFAiuTzwDI49QGl1vfCL9zxYrD6+1RyfPrgnVb4gCsy9aJop
                      vmJbqL4qAIS+5ulMvt37hD4h95c+6OAIvVQ3kz2qwks+IBM8vbP5hj4Sml4+xCPxPduxUL6uBWc+
                      bqJyPucDjj5Ov20+vS+APsZZTr48nOE9ympNPqQ2pT2sFfC9gM9Jvjo+FT4kyfo9rFG5PVTXp76r
                      46c++jONvjLdej740VC+hziNPuaTtL0LJha+uvaCvpyf2b3I73I940hQvjRboD0kdoc9W4RnvhPc
                      o75SZlM+OxgdvtLlnr4QHqM96kJ3PtBXqD1WDwW+Cu9mPismh77Sxz0+PnJ6viu/iT46/2s+NDiZ
                      viBASzyuTke+HDazPfBg3T20m6I9UwSevjrAfD4A+FO7qpVCPoagRj7pKKQ+/vxDvroYaj4fX6Q+
                      tBmfvTCI2T24t2m+VgZfvuYFsL0kEJc9gJTuPPKJBD5Bl4o+4idCPt9Cmr6+z2E+tb+JPu2Slj4A
                      B+Y7fNupPRBJvr3sHce9gHgkvgBijT10bt89wJDYO0T4o73HhqI+1Q2SPsvsNr7Y1DG+xNz2Peo+
                      HT6gig+9eyyLvnOjgb7zooA+BR6iPlRj1j3g6oQ9xOudvq6SGT67Ep2+aiF1PvA1jL7g6EW8KhML
                      PrDnjLyx3aU+2rktPusqnD5IJFG9oE6dPbEcpj781uM9AEvBPJR7xT3bn4q+5QOTPud/nL7Gjwk+
                      huHlvXsTn76KsTs+6SmlPtByCT4wB708tb+PPmJkmb4sG/s9WMw8vQB8PDtwunq+4HxRPYCPXbsy
                      2jc+jGa5vTBDlD2qKGM+5MalvgbUNT7wdsQ8U6KGvhkPjz5A4uU9O6BJvix6oL14AW89eP0GvQ4W
                      qb4YVWg9hA+ovZPBjr72hQm+sBTDPI7MPD7avgw+8CqgPJxO4L279pk+sFfsvCCANz2WjhO+Jt7f
                      vU4+fz52I8G9kdSJPmS5kb6O7ze+ULMEPgCUMj1XUIq+gC0QPrA4rD0gCR49PSeiPia7/73IMHq9
                      rsdOPrb+Hz6WnU0+GrF7PpATuLw+hkE+g0wpvsxH97142hI+EC01vitpgL7KfRM+tqbAvYBYtT3+
                      2F2+1fWlPvOVnb6rYY0+7uCVvmGspj5gdya+IkqBvtS8kL4mMRu+RECqvSt6SL4LKwS+nog2vnCk
                      lL18paS9yZuKPuAxJDzLYpq+4DUxvuAEVL2WXQY+Aul5PoApU7s5xY8+9u69vSiONb7o00095p7J
                      vWaBbj6SX1w+Sh5/PpT/hL5urwa+VXqFPmJ+aD439pk+Bj1TPk6gib5hv6I+cUuIPsibDL245jC+
                      e6hdvqVcpD6ASBQ8+lFZPm35oj5zdiK+Imeevs5PNj7VJqY+IFkKvoUHjz4j8Cq+zW+XPnDXzzws
                      2vs99sYdvkacUD67x6k+PDaXPZKmUD7L72u+enqdvvYNUD4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0OTUzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMjI0OTUzNnEBYS5kAAAAAAAAALr/Sj4m9JG+AAIKOuBjw700o9o9QPRpvQApRr4AHZg8
                      eiw/Pvw+pD0YkTg9hkxFvmAwSj3kgpY95h0oPtr7ez7OUno+wGTUPRB2br77/ke+nUKNPoJcbD6t
                      C4k+CIwGvRvynb5+IQm+kGK+vWwjuj3Y33Q9IN1aPIQWtD2gmko8iOwIPvWygT6IVCQ+rh2EvpVe
                      lT5ZwpM+mkQ5PsF7oj7l3IU+QCeqOwCt47puIXs+HwyHvnjXET1Pd5A+WkArPmx5+718kOu9gJt4
                      vO86qr5cI589ePVOvlLIQT5+nDw+QKKTPPpaQj4Aw5k9M04Svoyx8T0a0Rk+tpZLPlBDGT6p0JE+
                      6QSAPnIYZT4Fj6U+ma+XPkgrar068S4+EtaTvro4ej67BJ0+rsFXvm4ue76mRhe+FLOUvlDui76a
                      3x8+61Cfvq1yjD6mfy6+ii2avthXDT0yZIe+2zl2vs6PVb5TXhm+GNIUvoZWCD6AZ8S8/A2ZviCY
                      rT3DIhG+4E38Pej2Ij5YDTG9rCGUPfDisrw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0ODQ5NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxMjIyNDg0OTZxAWEuECcAAAAAAAAKxoG9Sti+vSDsG70gcju9HlZMPXm9mD2ftcQ9gEfN
                      OirDgL1QQri7mlR2PRMTlr1iGsO9Fm8CPX8Rpj3AOFA74hh2PU32lj2dPpG98AdLPLD6fr0A5ko7
                      LEcKvbIdXz3fSLQ9urE5PSBB+bsIp5q8sEopvAVqlL3ghg69OjhjPTzI5zyg2Wa9GGpVvA5Mqr2g
                      exA73UOjPY0dmj3QYji9dH3ovMMFkr3GrGA96q+lvfSNEb0yCLW9/6SePbczNL2iT2A90gFcPZz9
                      zjxgjlY7AtsBPQQxEr11s4u9E442vXJpcz3w3kq97e5uver+hL2jXXi91MaOvBJUwb2pLpE9EA5z
                      vOz42zz3C3a9EsBLPZMEor1CEgE9dWmYveq3Iz23Wci9uqwsPZmeij0Apwk6UtANPXXdjL1VWIc9
                      7AL+vAs8mL1ovsQ8ljNUPVjOtjz5qqY9O6CvPWowq7066i29APLFO/bwAD3YfCK8dm4EvVRchDwq
                      FaC940vJPY5rqr0qJiC9YAHrvPaDEb1hCbU9UDJivYCr5zt+ESM90A7GvRalfD1Sa1Y9/SY/vZod
                      cT2LO5I9t4eOPVNDvz22GhC9PjGcvZq9Zz0m4zY9JEWCvRLIsL09zMY9wChruw1tpD1eOaO9E5uf
                      Pe9Xnj3aQQi92J+zvYqZXz14h788kwghvQKePT3xc8s9BRWiPTi8q71gbg47VfenPR29nj0q4Q49
                      AFSMPJDgGr12u1s9JQrHvWLNaT2ypLa9vT1hvXgjgzzhR7w9IWeQPcA1TbsAevE6DMHqvDie1bzU
                      +YU8QLHcusB/77yQipS9h76cPR+vwr1n1la9FA2CvSCapL2EuuA8xc7JvREahz0cx+E87KfrPAa5
                      or0usxw9kLKNvUOxUr2wZCS9Lv8WPZeotL2UzKw82fuRPQ3raL2j4Mg9KPdnvFEmhD2tzr+9gAsn
                      vKzI6jz7S8s94qsCPTgSvDw8Mom98xGyvSCNur0x4a09wNybvTCtkjtsyuw8KciaPSfUT72YIiQ8
                      YMGVveLZWj1Uu+W88J4yPIwNj7yy8DM9EnV8Pa3kUr345ey8tq0LvR+Kwj2E0us8MCzJvf4MOT3M
                      /YM8BOLuPBIqv72wg1+9pFPyPKOmVb0d15y9w21zvZLZCj1a6GA94PmuPEKNOz1ag6e916lnveTI
                      Dr0XCMm9ZZTBPRpqPL1mVou9AAhIOmBIpjvgaMW9yTubPQx/ozzL0JS9uzLJvZBZGjx3pY894iNT
                      ParFWT064Ee9oDL2O9hBdLyaM529lWmhPVdhoz0YL9y8lpIgPaLxcj01hLE9G46TvXLDu719jDS9
                      sTW3PeMWML2A1JO6ixKXPRgmJjyTMlS9rhYePYLraT16X6e9P/qEPT+txD3oTDe8gBqeu5oDYD0A
                      1b67bE67PGy82jwdwLk90P7nOyREB73roac97OPDPEDTrzwwh+67H0GkPWjzr7ygAjk73UEivS42
                      cT2tSak9iWKJPegNqDztC0i96PmRPEO3or0ubSU9QvOxvTclY71tloO9UilXPdjIOrzg7MW9QnWn
                      vQBzY7wwFiq9xl+SvZEixz1wBW+8DUe8PRw91TxGmmI9HUdnvcoTFL3QJ2a99K/kvA96lj2KZz49
                      0ih6PZa9UT2q/Vm98uMGPZRgubzAX1O9sn4PPWyI7DxGun49UIJIvTKksb0bbIo948gvvTfQVL0+
                      CRc9GiN6PQybiDzaaw091Ca4PKvqtD0wrj68iX6oPWEVvj1g6Hi9+XfFPb2Gp72SqTs9Qlk8Pej4
                      rL1RZoI9dPqkPKGIsz1HH8o9MBz2u5BMgL1enxI9OnkHvTxu6DwUWZA8iIeYPIIwCD2jYZo9iBvE
                      PC2/K71Mr4e8eFWDvAEVlj3S5y09Y+dTvaDtrbwGsXc98usIPfSytjyg3++7QHtSvPNxub0ga6y9
                      AKsqOpuTq70QQnq9xWSCvYAEp7oSlQg96xqSvX4Fm70wtgs8pqoMvQqXCb1gdBA7NwlevbuKuT0M
                      Tb684IetO+CCXL2gkMI7bs96PbPiwz3Hz3i90FNYvV7NUD0gk667YlMMPUJVYz3trY29kZ2rPZir
                      BbzGYBQ9xv0GPbC1+jt99Ia9J4YivbH2wD0mZIW9CAe/va2mhD3ok8i8WNwJPJsiuL0XhZ49sAsm
                      vWgzH7yzxTW9FCa1PMlPhz2AC2694nIKPYiB3ryn1De9tJKmPEKIZj1g4rK9SjhHvfAmUr3nasM9
                      bFXVvOPDqT3g4M27WHM5PE60rL0zdrc9XyapPcPnML3g8v67UBMnvKj4BLys4NE8c9JOvYZ4Mz22
                      vBO9QiE1PfOCnz1nXY099g8NvWhcx7z6dEI9UysgvVjwEbzwsiE8wuYLPQB0D7tAPEY70gEnPQfI
                      oT0IQJ88KGXDPIYCBT3Zgpw9tJOpvFs2ob3NZXK9mO6+vBoZN73EouI89MmePGsloj3ZvoA9iKvJ
                      vNQgwLzArbq9gCmeOpCLM71gS/O7AOHQO9p5nb1WJ2E9KbGePbmCoz208r48g9RBvaMUa70L74s9
                      43C4vaPvyz2F2YI97kBoPe8ir72ycHI9jsBqPQBDirlYAn08Gp5AvSh5QDy9tcS94JDlvOWahj1R
                      mIs9gEQ+vGhvqTwS/ou9bdbIPSxz7jz3s8a9puuhvXoIHb1o5WY8+cm9PYDNUrqDco69WtNrPeBD
                      /7stobS9gnyHvZg/YzxQ81W8dG6UPCiUor33icO9/tVCPY4DiL2edUE9htIBvfh+kbyYbA68wO1D
                      vKi+mr2gom69gDZvPA+5nz0yLSA9XaqLvaZkFj2mvzw9rKPOvKd3lz1zHK89NBuLvfv6yb0V8Iu9
                      BLrjPKJQYj15qI89gL+/u5idmr2Y0Ry8me/FPUwrir3M3tM8guhLPaXekz3oZMc8PZQivcMSJL0y
                      e4a9gC01vZ43aj0T56e9MEbLO3OVjr0AbdW7FKAQvdLbaz0FN6g9zD6yvMGruT0qcgG9oOCAPDjM
                      gjxy1g09sipmPSBo2byaT3m9tNsWva6sUT2LTLa9vttGPTAPyTuNo1q94AqaO+2tK70RM5U9lHPt
                      PAaxaT3siKS8wDkEO9CDCDzHQr09xGPwPPthkb37cZ+92EbjvLJqtb3Fb4E9t0u5vVh8HTwIUri9
                      wkByPdgrvzyov3i8z9qtvaYOez32uAw9YwA1vdBcuLugyB+7CG/2vNN0nT0AyQu8AA+su6lWnD3n
                      Wi+92OG+vSNytr18IuM87TvKPXCrQDxilCM9cOwxvB6yFD2GWZG9uEK0vKjSjb3zhne9Ddh3vSC4
                      jrs70K694rLDvcwJ0DwARLO7sFqbu8oDNb2uoI+9YJ1nvUxsxjyCySA9OumivehPv7227Gw9IIeZ
                      u1V2ub2cKgi9wG2MvNEDmz0sG/G8pXqkPeBEe72xQac9+sJ7PYATYr1qGHC9+Hm1PBLQdj00doS9
                      kxIovbagIz0Q3jK8QEeYvfg2jDzAdBK9bzO0vVLnOD3bH4M90u20vdA/k72wQZa9GUW8PaJ6QT0F
                      lZ69xHPtPKC4/7xggjO9HnRNPc5cWT1rB7Q9Qs8EPWjTn71CSGw9YEKLvQjO5rxi8i090yVfvbwU
                      g71230w9xpubvTO9Kb3ad8e9MD/5O0ATXzwYDvW8WDJOvG6lez1gSbA70sbEveBRvzskY9w8og6x
                      vRsZt73ani+97chbvX01cr3aeVS9QQGKPS70Gj0+BI+9ZuAWPVH8pT3LCMw9nKj5PCAR7rtS4IS9
                      RoGYvfQizjzforg9FRHHPbBKlLsg0sE7nfaaPQYSXz0sa+c8fUdDvdjeCTzCc0I9AJmqOxBtN7wF
                      Kca9WpM4vRDPL7yyQVw9o1YgvY1VV70C82U9m6uuve4JRT3JDJI952U8vdTZrLzjT3S94sizvSzn
                      AL0oUq28rGGjPANaIb2PNcy9xuA3PWd3Mr0fwMc9Epd+PXV8kT1q7VG946R8vTDwEb16kwQ9PYSi
                      vbBXAr1kY+Q8kFpVvFYFE72wiRs819pdvUCjsLxeClY9gKu6u1ibNrxTyog9ukqjvcgejbz4OJa9
                      LVHIvXwt4Dwy+UQ9OquwvUIatL2oFne8YtMCPYKiUT1C9xg9SViIPZnUtT2k99o8bLDEvGlkxT0G
                      mC89NVeFPc0OjT1vCLc9DXg6vR2Rgb3AxtO8YKYvu8AQ6TrAkyE7/jeRvSwh5ryGIha9QJAzPPEu
                      ij0Yhao8QFZBvUBfkLq3/bS9rmJNPSOiJL0ZdpU9UPVnvTASSr3HkKw9Yph6PYjo7rzWo3I9qOIH
                      vFnCuz3ooMW90idyPYxih72mihO9SbqHPdL1Wj0IGee8+WanPY3cQL0gdmy9GIpyPBPrcr3iHCs9
                      gI5FPCCHM70QJW884gNtPclGpj1jT7e98g/BvVJSlr1m9Iy946l1vUa3hr1bVaa9jt5DPciSxTz4
                      qIm9SfbHPYess73iSxc9QPS9PGB+67sAHq07lBr3POY9Ej3KEiC9sP3GO9AjM7xSk1A9EsZOPSKE
                      XD33JsC9l0MovQDIvbl/mMO9q6S9vRQ7iTwcHQ+9HTPGPUvOuT17O7a9mYaYPbzf2Txl+Iu9IsAY
                      PQPUVb3o8V48c8ZDvcK3Fz2gncS7wv5vPQotDb3I26y97y6ZPayoi71KfEg98lMkPc8EqT0K8mu9
                      OauoPQCJQLuCBh89xei9vUs5mT1wLHe9r32RPYbEkb0NV1O9pVikPZjBBDxCNXg9nzqxPTIjMj0z
                      wnu9SnU7vRjFoL0tJZ898nyEvewx37y2hRA9ytU4PWLuPT1gL487oiApPZC5or3nvzy9KJ2BvWMM
                      Tr3i2F896IzpvMpRuL0nsLI98Nk2PEInLD0pJ5Y9jXV4var6YL3wEwi87X0qvTM0xD2DBWa9nZiI
                      PRT8zLyXFR29Elx/PT7xBj1NE8m9hx1ZvaSAi73apWu9SrIRvRiJvr2mTwu98yyVPXfYYL1kQe88
                      +Ni2vXCnxr3tRI892OqCPAdJPb3nDcS90AMkvDH6rD3S3iw9grULPcdwqz1gjEo7goVhPcJaSj1A
                      ngq8VLTNvDClUryYaFE87vxlPZtMyb1ACAy97MPIvJza2zyZI4k98wRVvVbKqb30N5u85Pv0PDH1
                      sz0wUUi9IFsDvXILOz3KoXM9IPGcO6CDA71TD629abqQPVjRWzwdQ2G9OMiSvDAeWbyAIg+6Jkdq
                      PU6OVD3ojiM8cvJBPYAtNrqnx2+9x129vZOQgD0A2zi8eKLJPCEInj2GgQ89BXG8vagwMrwYHOu8
                      xe25PfByAzygBos7jpB4PfM8L71s2Os8ByMrvYqNMz3h94I9A+WivTcLM73xpMc9tCOCvOxh2DyT
                      vcK9KLOAvNLegr0bULY9jxevPZAbVDwCEhs9UbaoPb/wwr3tnLQ9iO/MvIdxXL3AJPG8NAfqvLCN
                      sb1gSZ47LgQPPbTMu7xNqTK9UB+tvVdpoj1FyLI9nfVGvVkPiD0g8rK961fFPRbQbT0Ia4I8h8dJ
                      vYDI1jr87fk8KJoGPLeUNL0R8489pfy9PVh9GbyKIGA9lOK6PKKBOj02y5a9x3KcPWLdYj0AhCe5
                      zyGzvVEWvj2zMHG92g9SPWKQVz3Tb4I9zgVsPcxT5Tzm8xa9iFH5vEBgdLuauVe9yM+5vMfGVb0g
                      3n+9oIqXO+9Lmz2USM08DdnDPfe6rT2q4Ya9LULCPZDeXL2l1Jq9/Nf/PNhcGrzG80Q95rwRPZAX
                      Cr0avVw9dEGXvMMBlb19/169YJfCOwcEuj3b9aK9Cc6qPVGPij1XXl290y9HvdgfCbygJwq7lPvH
                      vJeuhj1KiEI9yXGKPaOCgT2AAVC9ztySvXDdT72YgFU8ZCnYPHKtDz1dY5u9KmwAPXTI2TyEZ+E8
                      dKuJvfUPyD1atna9CWWqPaA/lL3P+cQ92GmjvEnerj2lzLu9gJWkOlACI70qM069xtcsPXg/8LyA
                      4va68mk+PWKQrb1GkWk9KPiYvKCtsbyiyGg9ZP7jPDgw8rzQfIg7U6xmvdpQUr2atDQ9x1aMPZE1
                      lD3Apz+8GAzHvT7vBT3wRTS8AiA5PZ+Dpz0wHz+96FhavDTQtrwbQ4U9fT+bPZpDNb3eO2Q9+hob
                      PcCFGjsXJsQ9OrMrPZJxFz0AYt26XlUXPVgxIDy+jAQ9tCL+vHMXvT0KQF29BjFKPWhWLjyGLBm9
                      40eVPUm3mj0B/8k9vdJZvbAw9rsAAN63IpGfvYT05Dxh1aI9U+48vTmpxj2YpRW8Ox3AvX0Cmz2g
                      qHy7EKgLvIj5j7y2SyA9ffmePdBOsDuoAEO840WHPdL/gL3AxjK8hll7PYNoxD21V5k9aI4fvNek
                      JL0AvaG5SgipvYgUu72TkIA9Ely+vei6YLwo1jE8wLV2O1Fpvz1HobE9UKHzOwBaPTvE+vw8rpVS
                      PRotXz1qz4e9qrq8vaKaw71QDmA8sAbnO1D+vLsoZ5Q82PWNPLOoe73wsBI8cvLCvWB9y7vguPY7
                      /veFvfSftDywgMq7gPDoOqqPYz2DQI09k+KWPTCF4LuSsB894lAKPbC+SzysQ+Q8TVrEveA9zzsR
                      vpQ9PmxDPeGcoD3oicy9+N+ZvYUHhr22R4S9vT8wvXyCGb3z0Tu9QOJ/vQcQe73th4y9tOGQvJlZ
                      hz0B/qI9Gj8PvTITNT0ABQG6h0mZPRq4ib2kx/k8y4a8Paj6xzw7/Ke9R7iCPSvZpz0jtSC9AH06
                      O8Ay7rwSPAQ9OFOXPI7zkL3wxxA8YIVJO6xYzjzoD66817ujPblPwT0qhlg90JvNO7jlwL0AaDM8
                      qVuJPVgPrb1Y0Je8F8yoPbZkPz0urp+9wDgNu5IGTD0o4XI8defDvf8yhT2Bisg9s3lpvZnWqT12
                      DnI9mL9dPEJSGz2Mg5e8KXDFPTDN/ju6jI+9fsmOvWxiib3ovFM8Te8ovTNyqz0A+u25LQ1uvTD4
                      FL2kHAm9Gq0PvfHViz2waEa8MqlIPVJMub2HP7Q9HY24Pfyah73j7rW9nYinPTCVQTyg0ie7aPip
                      vFFSqj0a9aS9+RaePbXHj73wrXk8GiZCPewMibzMBtm82GBsPJMkwz2g3tk7ggUxPUIeEz227BM9
                      jyuzvX1ALr2zkEG9xmoAPTBdBb2wLiS9GUiMPRiBhb0Nv4q9LSq4vdDkCjwoPrY8yuClvY0wkT2X
                      jYA9l3ogvbpcNz3jSqK9PtxLPRiVKjzls6q9SpytvfO5X71aKVu9mQibPdgspLwyXyw9LfnKPT0T
                      zL3Zapc9EYmmPfIYQz0SKU895wqRPfrLKL3BvJE9ovdWPXCQVb2j+Zc94IUZvbP+K73DBCK9AMQe
                      OSAB8DsboME9ubOGPeXgs729G6U9pRXGvSq3Jr1jJai9uksIPcL9u72gwrS94PGZvUzJEb1+43I9
                      aeyVPVdenT3jFsI9YiRKPeiwdrw0daq8fUi6PUBob7zOAh09IE2SvYBXtbrxoo49ap4mvbq8Jj17
                      i6Q9oitWPT1Grb3KHEY9bmKDvdiBt7yo58G8t5YrvejnKTyjiLc9ZAAGvay737yse+68U9CLPR6x
                      ej2INaK9qPsYvPrvAT1Bjas96K+kvCxCkDxgqju9YNWbvBWgsb2Sq1g9uEOHvZD9Hb3qhUA90C+j
                      vSJqAT0ZBsM9gLfxukgkyr0Uw+c8asIxvcYhZT3ABqk6svZTPTBxnDs98cI9YBx5O4qATj0xlMw9
                      jPmgvA6Mez1SMC49Vy4ivSb+DL2dIbE946llvbaMGT1O1iA9ZZmYPV9Dxj2aLVU94FaSvHQY5jxB
                      ULI9VH60vJdcNL0dvoO90za4vSirBLySCj49YFa5vMjJwDzLF7Q9w4HJvaivVryAMiw6TsxzPcCD
                      EbxAhiY8Iwy/vUxZ0Dwc9Ie99JaLPED1hb1Qom286ugUvaWxij1Cryc9EDlPvNj6nrzSuEY9kaK5
                      PQCpNrvlH4O9IExvvdrBeT0lJIq9A+TBPVIrEz2UNeM8D1WZPUbNdT0ntaE9ulx5vWfinD2uqgA9
                      wD1JvEojRL0IuPK87ouavcokfj10OJC8w0GlvQphvr1S8XU9w+FavQBhRL3Qb2s84MiJO7xc1TyO
                      N2Y9GCG6PHHkyj1CTom9rjhlPaD3VL0QwnO9gJhPvZIgPz2Loa49AAw+OclDmD3oyjG8wIoXu6AR
                      77zYkyw8AJFIPDp8bT2wZ2e97qNHPQDgc7rQ0jq89IjrPKUZqr0ALJa8WW7IPRaamb1IqfC89pqE
                      vWKNsr1AY3W7CJiyPMg+ljzIG4i9YAervcDAOLsrO5q9s1KaPTo4i71i5lw9YJ2MvO9Rwb3oGZ69
                      4zZwvRVEhD3HE629tmKUvd6Zkb0YVhu8ymRFPWhBjDzA9OK6AD8oO1NdOL0A23o7KhaOvZqvOj2b
                      ccA9N/ekPfuiur3SA1I9w1KPPZgOb7zdjEC9rEbAvFp2Hr1QkFC8wsZxPfqYLj1aK4a9WiZlPfaC
                      Bj2SUnY9IKrOu+XowT1AD1W87VpJvSF1yT0yqWo9uiMsvdDr8jsJ5ow9YAwlOwa/l73KjTg9tl0c
                      PUAoy7xy6ai9I/4aveAhobsGnRe9ShRbvXoUCr1lIaI9aNGGvAfCmD2Al+Y7ridIPfSq07z0Vo68
                      OkBLPeqwHD0AE747EKnMvUjjsDzTnzW9mb3MPUmuiD2sy4G8xe+yvZguhLyFk7I9K3STPVR4nzwY
                      P+a8lJDZPHBJI7yn+j29l5qDPXRr5TwDIIs9kPooPM7mTj1od8U8KHelvY8ghT0Ctqm9MAvUu8Cr
                      Ebxmn0w97JyhPAjyy70g8Ng7eLqsvIkfnj0HObW9YoRvPY3xgb0wzwy9sHRWPAB9VToWPAK9UMCw
                      u2pFND2QrhC9xUOGvQCmijrOlCk9XmapvbimsryybxM9aGhGPFOtoj0ifWM9Q03IPb1+ij19e7u9
                      LLHBvFju0rw4A8G8pUHGvXlGij2QFVu9TeuDvdl5rj0Y/2i8mRusPa2tYr3HwEa9MKtHvEDP57pA
                      MeS8xtA/PbBJjr36LYm9l04avcCi2LxrNJ09zZqZPYIyFD2OVRU9UG3NO5ALcrzaxkq9et6BvRaT
                      fD2Qv2G9JWTCPbze8DzoLbe9mC3Gvee/bb0cgYq9n8rKvUDFSzsdliG9+X6lPajHHLya0gE9anAg
                      vZ75ZD1T8L89YzKwvaCEo7xJgLo9De4zvS2Ntb2/Das9zYM/vaT2/jxZHoQ9wPinvEAJy71sHak8
                      tJPpvCcrlT2t0MA9TVzFPdZJAD1CR0M9MEFFPKA0Mr3Sizs9wzidvcBdUr2RPaY92FbBvJbwq71L
                      fri9P12zvcKlWj1A/Vw7AGioOUGrlD3/pbo9GD78vDDFfrwTHB+9tiVGPZUOrj3AGEC8Gux5vc3k
                      sb1C7TI9+hBmvXRwwTw04sI8lA4JvTJ2Rz0wYao7jQuqvWSA2zzYAQq8QFUjvJVyjr2DTmq9lrFo
                      PeboCL2FJI69bKnIvGPxRb1oE7i8hdOvvejC07zUiou9Y2OsvcWavr1IiYk8mFJIvOpQyL0+SnA9
                      vndPPUBsgrwQJ3o8gLH7uhjQizzsMp28kHYyPJE2xz0rbro9+uBqPXit67zUxaa8Y0SOvRTavDww
                      PB28oBuCu1A3WTwyYmU98kw6PeETgz0ixAo9whUgPW4gUD05KYg9DdKGPbPvjr2MBuk80LSvvUIZ
                      Lz2Gvzg9wnpwPcrEOT1kLP0824OLPQcVP72Mecu8Yzpvva+nmD3t1sq9Y+STPQKsAz3ojJG9khIp
                      PRvSnb0Hh7i9UjIpPXqfXT0wuGU8sJNUvFbKIz3Y+Ua8ENUZvVL9Pj3QgEG80ASvO8ahLz3rl649
                      V1mjPaxZqbxW+429YCJYvSDvjrsygsW9c1i6vVW4jz06YRU9jiaYvZ7oNz2d9Wy9zSOaPdzci71B
                      9pY97KroPCksyz2n4ny9x5VVvSBuq7sOnp29jcVxvbDBeryUZYi84ApsvejhPbxQ5+i7BW+GPbx+
                      +DyI/sU8tOWXvCh4TzywYWi8IsIMPS33Mb0ElOU8WEpYvOpPkL2+50891fanvVDsgbssmrE8o9vF
                      PTissr2bC6m9vvKhvVRrozzYwUc8Py+dPZocaD1oJw6819K+PVCLBbywwyi8JwE4vevYkb0ynRo9
                      WIlmvEBCSb0txqQ9rWBsvTBidr107wC9KilqPTQ/3LyRNLI9wNbXOmAYuLxQt3+9CnIFPZItTj2P
                      YrI9BHTRPDptOj0YTQe8paCfvb15lz2a/229IMrUO+HblD2YmMG8LDO5vAih17z4Sb48Yr5vPWEM
                      yT3s15c8uMm7vArOAL0dCcu9bAj/PHdIVL11k5s9JAbnPOEmxT1rIok9jE3WPLAS9LtyoFA97Rd4
                      vWiimrz6Z5e9h0I9vZfCu711wsm9DI+MPOq8Gz3shZ08kJUePACyZbyDKGe96DJSvIzoiTwdHJu9
                      N7IdvdjjCTzQkea70U7JPSy1mLwAnY+5QH2UvPT637yweeI7mDGZPAycnLzmjkM9uYWlPT7lDz2R
                      BpE9gDz+OwVQrb3/gbg97HC1PLCxUzw1wZG9iMiPPIelhD0+8zA97C7JPEWfkr2ATbO86NcMPIB0
                      4bzqCMa9uhQ0PcKwMD3M6t28b3GoPSh+/bwCYGk9YoJ1PcKWeD1oUI48NOryvPV9tb0R67k9WFwi
                      PAAllzu5WJQ9K4etPZQpkTxoiyu8+IXGvOqCVD32QhK9uNaIPIAqtLwlw7U9lZ+0vXzzib2I87Y8
                      ksRkPX6TAz3SH1k9yAbEPOK5Cj1ArQ083w+zvS3ubL1fjJ094BSmu1Mkw73TOX+9hHkDvcDcdjv0
                      Pb28l4ZMvTCxlb1W1is9G9HDvXTasTyzE7q9IIebO1INxr3NSWe9+hqXvfjtpjyrm4A9YUXJPaoW
                      Tr0Cd2M99rghPRjbWbxyU1Y9DBiiPM7yGz1vg6w9Ur1xPQJWwL0dBpU9TWkivfir8rwzb5A98JYT
                      vYBCor3A0Li92HbpvPirn7wRJ7Q9bJ34vG83y73Qw128jB+/PA+Mvr0RSo89SBm7vYD4oTxARfQ6
                      t9clvQAL2bw3YYc9pil0Pb0viD32h3M941m3vfgew7wNNrg9WAOCvaO0wr16TlS9Cx+uvbNrhj1N
                      w6o9zSifPdoajr1Q30+9HGvkPIDGiDzVm5I9MWCHPVAi2bsYTb08Ee6bPV3gkD3nza89MaS5PRPN
                      sr1nCMs9aF9OvFg1ErygbrG7wVGePYzc6LxDH0m96WDCPVuRtT20ztg8KPTOvH0Msj1ggsS9cDla
                      vVkjtD0PvJs9AHZvvH5lAz1A2d28wyacvUCgxr2AvMU6bL2EvRy/5Tz7qqU9BaWvvdABJzzTObg9
                      8IVqPNHevj1YT2s8csMUPd4wZj3jkT+9ydegPYSLgL1mEwq90z9wvZ1lML0bKLS9qIJ5PPV+tD0A
                      QNE2M0SyvRj/FTxiyWk9mgZDvYpLTT1YWCG89gaVvcyJkjywTom7Pb+tPdLmg715IIk9cqaLvbKG
                      BD0o3J290zemvdaSPT3QHQ48TDSpPOo0vr1G/AQ91swMvXDQwb3evh09J8NVvUAhTb3Twau9MEYO
                      vTeVYb2UzQu9sfWRPQiGo7wT9zq9RjMUvRIkCj3RCZg9TnCQvZjMDzy3wkm9Yf2xPVhiuDz6YnK9
                      Wr2QvaLKHT0TAFW9mHNNPK4dQj0AAkq9z8HEvYD5yTq4u6m8hySDPaiaYzytRLc90vkJPbWbg71x
                      s5I9NZOtPYYJIj1WYEs9UfCUPaBveTv1/5C9PO4LvRBrILw4woy8EBEzPBq8AT3wcH+8DIzXPDrT
                      Nj2gq8K8xgwGPTV4mr0Dscg9XIH1PLBYWDyBi7I92uw5vZFPwT2YU3Q82UCvPWDevLwgf5O7j5qq
                      PXcwwb2yaYS93djDPd9lmz26xlG9jOaPvJdkxb0moVM9tN3ovBUwxT3brZU9XRU1vSj3LDxAx6a9
                      mNbOvP08or3Xt7C9OcSMPQIWWT0ooAU8DoV+Pe7AMT3t4729sO1HPBAdRr3F1sc96AeZvBYgfj2p
                      LJQ9Uv4NPdZIPz2UMO28wRm3PaAKjb0kNPI8qDcSvEClCr0HeWq9XeBkvYenuz2gfWu7JKcMvfpy
                      L71qq3y9OCavvO/Zy71QPIK7Tcm/PXPRSr3cihi9OjhuPd2toj1NyrW9hhBrPWIko71CPsK96DWH
                      PBjayLxYjoa8WmanvXr2q70g9qi7/NIDvQWMpT152Mk9Bo+WvUxJybyyRA09JjctPZhk6Lywcmq8
                      IdS/PeGTiT2sJeo8UAcZvbChDLzu3Zu9kPtpvEcdZb0CyyU98rgTPbMPyb23xjC9s5/Fve76PD3M
                      zeE8fB3iPErrEj3/vcM9YNvWO9jb5Lx67ye9CO+bvbOcfL2E3uE8oNGvPNEElj1Cyhc97KgUvTjd
                      9rzRXbM9qBkovCBmoryUrtG8vf+TPaDn8bvgp7u8fI+FvXtfub0gjKi8Vs9KPYlJlz0tt4w97Fn5
                      PKgsWLwAhga9WAFVvAh4tzxAW0Q7ANuBOc1tTr22tms9lGu8PNA0Z7zGWHM9nL35PGz56bywe6Y7
                      WstEPQDvIzvknf88cXWFPRCScr0KYCG9yF+3vPs5pT0AmyG8qNuOPGiSQ7waRhC9BtiZvaPmUb19
                      6qc9rDzRPFBeJL2AuIE6//q8vQlXkz2Eud48xFvZPNeXP723b0i9FA64PM4yqb3Wqjg9gDZCvQB4
                      CzqQKCa99ySxvceYhz3QJmQ8Crh0PW+lqT2DpL+9QgxuPeDWsLxUk/C8kBO5vb1/wr0bsai9APQR
                      OlFDiT2ZBok9OveavfCuDTwgcoc76KiBvBdtpT2HY7q9EKVcvDC0QzwADoO6coUaPfGZvD3iZ2g9
                      ruRaPTAv5bsWMGs9vnFSPbvdjz0KNha9u52MPdD3ur0ovzA88PlSvJseoj3sCJe8C9ekvVjWvTyX
                      m7a9q0CfPSBaMr2e5h49HdvDvZid5rzAqIs6WFewvAASXbxKzTC9wf/FPRQVvzwAr9k7pspNPe1g
                      a72AguK7UEtFvQYnqL1gQsE7OAq1vUhSpryYAca9YIK0vJtoxD2KQ009p+M2vYAskzzQwJc7yr0P
                      PZA5Tbz4UYa8nodNPSx6k7w0HwG9yy3APUCfe7so91o8YRbAPeafir2nqkO933+9vWqeHr3BSqI9
                      8DUivZoZPz1q7i09eW6EPRh4WLywsa47wCEXPCbiZj153sY9uVzHPeg1+LwiNRc9gC2yu6hdkrxd
                      WFO90No2PI+Nwz0pSZ09gOmHO1RZrrxY9wc8KsA7PVBV1bsf5L69oON9vcfnPr2Ah4I6wKrxujTI
                      9jzgmoq97Mm5PKpeBD2AFuM6kHB7vfHauD0AkVG9KJR4PJoALL0wgbs7KKGzPP/Xgj3HabE9Ls9y
                      PT2OvT06M3a94AWvvYwH3bzSKmI9aDIDPFsvwb0qaAE9KfKJPbaXIT0Dozm94SO6PbrPpb1Y2FA8
                      AZ2RPQxzgzxqjyy90IxbvS5Uaj3Tqr69QgsuPQb3fz2NKEq9AHPwu53BKb1MXsG8UQCePR52dz0Y
                      e8u8YpFpPZSl5rzTwaG9CIqSvIiviLwAwFA6+MnFvTA5zrsM6Ba9Ml58PUl+iD2IrJ88CdCdPVcF
                      er16NHe9cMMIvYB1uDpTmqs9ECFwvOkhxD2SRaG9R/dWve0/Zb1j/489BXzFPWBqnrssBwC993Ov
                      PTDh1Dthi7Q9eG29vLqbwL1gSrq7AADnuJQz9jyidRo9ib6BPRmayT3YYIc8W2PIPdtJvT0Yrly8
                      edS3PWM/br0KP3g9opCMvQ+6jz02wQ09AK8CPIZRFb0wAju8yB27vUUCob13UVm9dFiAPKzbtryy
                      a7i9APzOvNE5uT3QPqe7sJu0vb1uVL3ykJ29yQS1Pdij8LyQ1Ea92r0tvTQblbwCihI9ILbiu0Sc
                      5DxbO7S9YwGmPRLSkr1CZhY90tVMPRmmoz1kiM882v5tPao5Eb29QaU9wA5PvbuBy70JQJc9JzWy
                      PXfxkT06x7S9k8GjPfrLAr3GIh49aDZMvBZGHT1aGQ+9RKrPPNB5O72i7rq9MGFiPKAvIbuCDws9
                      JrYzPbuiij2hOMA93SlhvTq8fz0oJEK8F6LBvRHQlT3uwI298kQjPRO3Yb3dB2+9SCqjvPTJgL1D
                      RL+9Qp8DPWaLGb2Q3FO97ql3PSrBGT0mQk49UlE5PXv5oj0DlYs93WmUvUGiuD36GFC9mrFjvZB+
                      CzwEbYO9pvVmPWwqhL1ABRE7vXZOvQCEUbtFYMu9etwQPRddwz0YfMK8io1bPbAJY7yAK+Y7x76m
                      PYulxT3dviq9kGJ1PBhcozyacSQ9ia/MPf5gfT0Y5vS8yxu6vQAVBDqzBKi9mjEFPav0pT0jbbA9
                      /PP4PLgxob09Eck9UBQlvSOUjD2xdsc9oA6JO/HppT2G/V49APySOyTQ8Tzoe8M821C1PSNQdL1g
                      Dp68gNjaOxqsR73Guxs9aLemvIs8sL0Vr8m9ABA0O3wq6Dyw6ro7WyezPcael71a3Y29xr6UvVoh
                      Bj3DCEG9HTJTvTHAsT0Azq+8soAzPSCcKb0w1lA8tE+WPLI/Nz39Aco93Ui9Pdi1SjwQr2K9rTPA
                      vVBpZDzy+RE9QIAJu2q8Dr2kthO9wEP1vEWImD2QfV+8AEB2N8ZIID0QqV+80A/sOwqher0w2sO9
                      7PDZvIZ1bD3QPAM8deaYPSDhxr228mA9bMGpvAkYlz0LsZu98Jp+PCUExj3Ajzi8gOc4POgTwzz0
                      lPi8AJH4uzoyBz1mKBY9eHiVPMhlnLyICMm8KnhHPZQ5CL0ypR09WTaJPZrdtb2Gzwg9LhBePQD2
                      WDnQvzK9PMnjPACRcjy1/Io9wMrdOlC5R73NtKI9MdvFPTFfrz2Ar6S6RrRhPVAGCDyamic9krty
                      PVTH9TwHUXK9Kpc3vaJ3ND3w3Rk8tpKevULHZD1QzGu8KxaTvSm2sj32lwa9gltrPbqXPL2jRHO9
                      AN60vJOTHr1QUo27mI/IPBTW3LwHjqo9du5LPWy78zyhj5o9NEDrPF7qXz3wN1m9QVqYPSWRjz3g
                      27884aGEPVRB+jwUYrk8eK2hvGyUzTz4xqq8QPVYu4BclTy4i668laahvRMDG73ic5u96wS8verj
                      ez30sgu9fYOCvaAV8zs7R609Q/q9vUaPEb2AYYC7aOBMvMJBtL0aKxk91NbzvDCJa73Xq7e92SyA
                      PRSczTzgE6q8/Hn7PMLMYT2NqGe93dexveJzZD2lCYM9mteUvc3GXr20du68qa+NPeFrmz27Qcw9
                      Dl4kPRTx3DwV9aq9HEcIvayPlDyGp109mIZvPIJTXz2ZqqU9aD7jvGATVLs3IMI9IGPxu1a0TT2K
                      ST29vSMpvRiJYjwaW7G9IBaNO5JXl726wVy9I2Z+vfzX0zx2FwM98O8vvMCVNbuJ4pg98xa0Pbyb
                      Dr0wF7U7nEfaPKxEs7yhOcM9jEzJvIDSYrywlma8ccGJPbowjL2sxoA88DB0vEuQqb1a7RC9ANwz
                      vdyfCr2QBxM88rcFPeX7sr2JEsk9oDzQu02Lfb33SZs98JVHvABf+zsuBk4940SrvWX0xT3pH7U9
                      kYmgPXkEhj0FysS9gH1zvOa5TD1wIAW84uBOPcAQhrzsDYE8AJiru4BSQ7zB8oc9V1KjPeiwSjzI
                      ofy8wDZdu8IIFj2nLRu9Xfh4vVGfkT2AVVQ8iImYvDANjTt05e88gFWBPDCQLjzXx0y9gQuSPYDB
                      2jsA2PC4fQNBvaM5HL3bH7y92kZKvaWRlT1ZV709EP8fvKgmpzztjo+9kP9hPDRBoTzr8aQ9UGok
                      PDcXLb1WFUo94KzGvTLDdj3UldI80uoGPWAmxr0o9WG8B6RyvdAg3Tv6DY29hEWJvQJ5Yz3BTIw9
                      tNHFPAlopj0BQsw9AO12ugBGN7v/qKg9Fsx3PfJxCj3QNo27VwlwvdD7dr2wCkw8U29kvQBlvjuS
                      JTE9ADbNu8rBQ72D/1y9MGBvvE0Cj71QZNq7gLbLPND2A72orB+89A+hPFj/OTxkF/48YKDKvMUr
                      nL3x5ZI9ABlEOj0Vuj0yz8m9UFF5vGDQ47wYyPi8QKHHvd3Nqr1eDxE9XjMVPc/ryT3Y7Wk8DF3X
                      vCpUJb2+YAc9UCV4PKmTpz1weWu9kwynPTrHp71eFT09WPgJvK3Ujb1grSK9OAKBvGlupj1zA0u9
                      zv9UPYBLv7sjW5s90VuWPdYXFz17UI09Gc2LPY1jSL2ArOi6lC+sPER/3TzCyX090H5fvFEopj3U
                      D6I8gHMCvEY9iL00IoQ8aRilPULsur2g5gK9XtJ8PcDDMjxIiY+8hKfQPJ40Wz0AjNS7klVaPVQZ
                      2TxsAKS8WHyuvXZxDL3+0o69LDGrvIb5Ab2X9a8981q/PSekG72Kh8W9yVSNPeiBx7wVUpy9RyyZ
                      PWhJYbwJI6E9kHJAPCtSkb0g5nS9wFCMvZKpfj1WRls9InEFPSYaOj3qerW9JRSJPWhvjL3gyrK8
                      HfCjvdCb1btiIiI9mGp6PKBxPTvvDqc9MF+HvXXgkr1g2kY7LVaPPZyvA73OpV89MX6WPerjKz33
                      2S+9tHvcvCdGgD0UAZ48EbG8Peg8gLyeN1w9NL7TvJg8n73ABoo6DiuBvajQkr1JUo89wgVoPeTU
                      AL0g9zO9La2/PWPubb3nZ6M91p6evWhYxzz0JvM88CFzPIAY6DqODyE9PQtxvXNumL1Uvoe8mci4
                      PdhGjry2NkQ9gAtFvNHGqj2LU8w9mFX8vDKRKD0AiMg6UNBQvOAfwrueXi09rLGSvNF9sT1DS509
                      YpkzPcfxkj3GTAE921XAPdYXaz1Cqig9+RmIPZchrb2F45k94M+Mu7mFjz1aNyo9wfunPRqqBT0Y
                      jPG8FsstPaySkDwXbXC9uV++PajHlDzba8m9MFaHvQypi732JBm95Fn4POpnQD1qzGc98mYOPfpG
                      Fb3IxqC8VmMDvdFAwz1xhaA9se2rPaYQor1Yvw88w0KJPXIbfT05OME9QEJrveocaL0ClxA9HEEE
                      vbWXyT1EfxW9A867PXTxgDw/6cu9oDgbvem1qT1nUcq9VXm1PXNMVL3QFx88OK2pvICTPjxEa/Y8
                      VGvBvGicfLwAzSe8YAoOO8litj0oke28eTeEPSLHbj3Y9jg8QtomPV8GwD143/68gvUmPa/+lT3t
                      z7g9IMKlO9U+sj1lb6I9rvs6PTRk3Dy4Z+W8cuIKPWClF7vnlZk9wJfGPOifDjygr4m7bjU+PYdR
                      rD2A4ba77iN4PZplGL04Ua+85DGHvUHivD1d3Jc9UA88vXhkgLwQhyQ8pZTKvdBEs7uK6JK9YAuH
                      PPbyIz24oY88mbvMPQPBTb0nxSa9oJ08vXADRjygGKW92JO8vUl3ij0FFY092AA7PHAnCL1Q/Li7
                      ZseIvQ8GkT2XNX699ZqRPTRJir2Atz881cOrPc5YLT13+MG9w22aPeEnoD0uLHw9WqAVvVQ6hzwI
                      ZJe9UK6su1TJtbzhTMs9nei6PU00Ob0d11i9hogVvXCaFL1hMsw9wLRrvfpnDb0UBp+8lNAYvWqt
                      fD1piKU9Y8Cmvc6GFD2YGAw8QB09OwBp9Lww8jm9EeTBPYl4hz2Aviy8IDmTPKJCDz0AmSC8YAoC
                      vTPVkr068CK94eaMPSC/mbuMSKe8s1g/vRroNb14vro8LnwhPV9eoj3jdUe9fcpMvTL0jr2qDa+9
                      X/6FPfrLPL0EAO483nEDPbCLK7wgZsm7VTy8PSxeuzw+vJK9mGRzvEKqZT3okdC8UiSyvTBIq7u6
                      UhC96BPlvEhUtryUzoi9iC7BvFAfbrztn6g9gjSmvcBzJzyw4pI7aKOCvfqfRz3AeDS7TuZIPUk9
                      gD1QnIy9xG/jPPIKOz2I/fe8aMJtPHAvC7zQvGG9AB4QO16mRT0AuC08APDgOfiXsr29aUW9BfSp
                      vb0Sk71xKJQ94oavvUJ4iL2Zc5Y9M42tvRNhlb16dIK99XyRPZgVE7z5vro9SCKavVHCnT1oMQg8
                      DQ5JvbkQgj3Oa529UlNuPZ9qij05xrA9qJ0VvJMkrj1fsMy9rCCJvJfmVL0mFAU9c8gqvSmCtz3Y
                      wXA8lwFVvV6FVT26A3I9Z0e0PWNeQL1ehay9HFkAvSzH7DwAF206Lwq/PYiJ1LxKayi92JucvURQ
                      4Dz/FrA9mHCjPOy4nTxiyBU9aYG7PQDF7rtLoaY9l+C+vewJ8zwDlzW9ORHIPRrbfD1/o7W9+mmn
                      vZYbAD14cPa8o2M2vfYfGj1uKVM9kq8aPTGThj2svKi8n5KpPQCTMDzh9I49aM2XPOqHVj0z/je9
                      CK2rvUSoEL0H31S94OiEO/jnljxarzA9UnNCPZTi/7zSsb29IKCRvaCqZTvlMo89dkaFvTCb4TuW
                      O5m95jEEPUkjpD3Sjpm9tfylPX5IGT0kw908/mhQPSj0zLzMnvi89DqxPK2ejT3Au2a9scu4PdmX
                      nz0j/Lg9soErPYgTlDxZopw904I1vewh37wAXqC5QAhFu1DMc73JvaM9d/5KvWsRyr1MQZg8rFmR
                      vIMpvb13y8a9UOWuvekwhD2MQ7C8w3ApvTB/bLwtk1e9WoY9PZVJgD2gZBm7AJe0vD5SCD3uC1g9
                      r1ujPdN+U704MoC9QymCPRsvx71377+9vMXkPAxK0bzX/Ta9s6afPQVduj09b5C9ezG6vRqokb1D
                      nJu920OzPSPcL734lpS89F+mvIa5Kj0hBqI9p/0dvVefVL1unlU9mEjcvKPTar1YIIi9ACIFvI7f
                      UT1NxJM9RtU+PepRPz2dZKu99g+CvTmkqD1gJn+9YTGEPeiEOLycut88dBzDvMDuSjs9ND69yKeO
                      vWBw/LvjbXG9wR+4PVZ3VT0F2KA9U1ikvZK2Sz3Rta49J11WvaA5lLtXDJY9krUHPSRc+zyjyL89
                      uAWYvD20M70gG/47DX2UPfCKeb3ysCs9qsIovXbefD2g3iy7qIOCvYD6f73lPpK9AL9vuwA0XTuC
                      zbm9hrsbPX7YGT2gJaa8ULCOvcBcGr1DCco9YKUYO0NIu70I3pw8OPyivBlrgj1EF+I8IESXvUeq
                      Z70Eu+085dSuPdJBbj3Y+gW8ll2Fve/Swb3mf6C9pOaJvVZDJz3BbqI9wh4YPQCWXL1XpMG9+R3G
                      PUAuy70Cfn09AkHKvYjPgb3dLpk9ipS1vcCcHjtgXBy7gCFBPPoHtr3d3129QF9QO8iKvzyCBDU9
                      2nR5PWNZgz1iCSY9w1RovWCFtzzzRxq9mPuZvaDExrxWgGM9Rbm7vYPTlr1AsSm82UuTPRb3mb14
                      dKy8dBnbvEOizD2N+kq95BvTPFuoyz0PnMi9nxO8PeI7Jj3UJ5a8u1yfvVO2cL3Qm2G9Ir0iPcXK
                      jj0iZAI9UlVTPYELpj2mGQO9sExRPBCPL7xtQGq9xkshPWDhv72Av8u8IBagvNGRpT31kpm9GO1I
                      POGwkD1gBfK85qgZPczmjrzOGqy9wciIPSDfHL3AM3W88vCDvQ2KQb20xAq9DdV7vXDTB7xCaV09
                      AFxYOkIJgb2s49u8EvJEPYG5jT3AKEi7l2SFPWI9OD2BUb09885+vROfpz2Vo6o9IaWaPXC9Sb2q
                      wwm9zUi6Pcmnsz0xcaE9zKS3vBing7yE6fE8NByYPODFqLybF5i9fq+qvU1nH71IAbm8oMymO53g
                      tz1eNYG91mduPcAzYTsHUcO9IsklPdQ/jL2GF5C9KCMLPML/YD0HCDe94ebFPWCFhzvgc4U7AOXE
                      O7qTYT2aOnA9uIuwvVnFoD3+GJe9TNTQvBLLOz0DGXS9cFASvHmwpT2gTpO8QNUzvB3Dnj06izk9
                      IJ/Qu+6Ii71dGkm91cqHPZGfiz2ufIS9UGmiO2r+LD3OzYq9AORCO+qZqr25Z549g8S8PeWInD2s
                      X5i8ii1GPaRc0zxj83m9x46dPRbvo70M5BO9ysIXvQNpjb0oaj287zywvQoqBb1MLPQ8rftLvUx4
                      nzyg04u9gjAvPQBKrr0CojE9UANevRI4fj2wSne8hLUYvaLDPz23M1a9nO/9PO20pz3gwBm9zc9o
                      vVdTkj38f/I8q6WTvb1lh709NWK9YNwbu8ACiTrhEr89jfBWvaFXtz0BdJY9q6+nvae/ar203uG8
                      5C7jPIkImT3qFmQ97vZUPUy7vTxNYFu9quZrPe7cib3+Aqq9gHGVOoOnH71+vmA9IAT2O0Npb726
                      tFo99Y+bvT5xMz3edKS92P0CPIsxor10ftY8dZaTvTSZxjxejFk9oPFMvb4eMj2EYPE8R8WzPQpJ
                      r732yAA9xXa2vd6An73ywZ29b5m8vWA9TzvClhs9uDOlvP0sqz3zYss92i3FvUoOCb0JQso9gGXL
                      OnAWKL2kYOA8AKypuuc5gT10sIG8GevJPeUivD1omPu8S7CpPQqnib27y6Q99LoHveChgr0F25K9
                      vY+Rver3Zb06qQC9tDgMvRp/dj1AJza7aApRPH4CJD3oysu8AvgDPd/PtL0khPI8W0GyveLdYj2E
                      ad080PJcPM4Pej1C0Tg9IySZvaiMub3lWpy9DWO4PWRsgr0c7Aq9YCCWvYBpoLtovH68NNnjvPQg
                      y7xQ+C29po1APUMEa728Hwa9k1dPvSKUPj1w1Tw8oFMBux53Kz20Ztm8kt83PQNpSL0V6Mu9MZuM
                      PYaYOz1JypY9E7UhvTBke7woObI8UKxgvez1/jxw8cG9COL7vMt9lL13tck9NC+rvLBGLr2C2Cs9
                      OUepPZW2s71SMUs94FKyvaf3w70ihFE9iB63vAZboL3y/g89/iiDvQICl71IB4698EUrPDo2RL1g
                      3+u7tI/JvC0eS70y2UY9ufOTPffuTb0ixgQ94xVcvXrPj726Aj+9GMASvGh7eDwRtZM9F4e2PV4n
                      KD2xJ5U9tRa6Pao/gb3BMrw9gqA5PYkynz3bUKQ9mFhlPJWaqD0NiHa9GJNVPNiYxb2w9I47+PrL
                      PH1kzL1Tecy9NuVtPRMjxj0QzjS8jkFFPa03gb0gFvK7rYEuvavKlb3Dy5E9AECcOKNdwj0i7WA9
                      kUDGPXyREr22Li09LX62va2Tsb0TKEq9ODiivLi97Lzawnm9YLuNO0aalr3qJ0Y98E8PvZQewDxM
                      m6q80v8CPbLHub1AUEW7kABCvBHJjT0RRrs9mQvLPeRe7DyaUK29EFZqvJRy9zxd88c9JQeSPR0y
                      gr3YGQy8pg5qPXtpmr0gDa47mKDNvDlJgD0ITe68QC9JO/8Yv70c84e9th1EPe3cXr1C+nA9mNPU
                      vNKkTz3OmZG9qp8QPfHLqD3d2aE9LjeDvW7CAT0iHw49QVuGPYJXWj3AB3U82qsTvZRME73zHZ09
                      k6jGPXh8tTwopIM8sJULPEDLpzziYT89AFq1udTOpjxgchW7zAbkvALWkL3UWI684f2EPU2eVL2S
                      z1E9DNGoPKzK1TwlkaI9EHZoPEBVsrpP6Zg9UG5BPNe8dL1rrrw9kLzCvawagbxI3IC8cr0NPV6h
                      VD0Acam8Ab2oPSMZOL2XLL29EP1SvGezjz28+fE8vZbEPVKhOD3oaiY81DTBPJhwEDzQ73c8+v+3
                      veP4ub1dUVO9u0OBPXi587wII4U8sNdivBAFRb3Gvx096Bq9vFH4yD3996q9WZGdPefUfb3Ic/W8
                      /oKmvRrRhb0uGVE9OlE0PejuiL3OkEI9Jq0FvQ4OIz1W4jk9MIogPBopZj3GJjI9KJvevLJ5Mz2z
                      xkm9G2i0vVDXw7sc8v08DcJjvY9dtj2zJW+9yu55vVPFNr2AaQA8anaPvZEkgD2+e1A9zIqkPIRc
                      6jzxp609ABaoO2guaDxbrZu9kK8xvaj3rTx+TKe94L2ZvYtPvb3Jt4E93YKoPRHYqD1rqbi9oMQO
                      O0e0eb0ANje91w/EvYJQxb2AQEw8ilQAvQC12LmJIZg9VCPavF2yGr3wk1C9GXy1PYd8rj04+7C8
                      kaeEPZh8sL1DLYk9Zwp0vaAbML0wAVW9QyK4vSJEZz3yZL+9UwCdvRRT6TxtyqY9YhEIPQAemDp6
                      ZUY9x7aIPcCJaLzmixo9Zz07vXPpxb19Hsg9nNiHvUDynr2AgRa60O/juxmWpD0I7K+9DhNBPQBR
                      Lzv5c8w9/rsuPaCOcL0A/HK6h/fGvZZpRT2iVGA9VJ8XvbXilb1lxqM916B4vQV5xb3vk5g9TXJd
                      vYCJyzr9rGK9Z0kmvShMeDywnju8CfS3PQI7Mz344JK8LKuUvADoZLq48sE86TOZPT/qrL3Bpq49
                      qbSxPaYZBz0Wa5K9xUOcvVoPdz1WPgS9OWqpPbWys71q+Ti9DJHJvMAbrjzwe2S87cTJvbVby70V
                      Q449gIddvO7Nlr2I78282HbHvIAww7xrzKu9TS/JvZjJzL3i6Vg9qGWOvBysg73VTsu9/j5zPaOV
                      WL1Q9LW7NAiyvDA4HLztuzu9Sl8evewhmTyyVKS9lmEMvaB2wrvaUjm92CGxvaDVqbxYmK48400y
                      vY/Pnz3OwQc9GLOovZE1wz3ilmQ9hrFhPSqhND1o3jk8lpqdvey68zxf9Zk9ngFoPYG2oD3jBWu9
                      UUHKPRtwoD3h9cY9ubLIPezgzzxQwZM7krp0PcCo9TphOLc9a06WvaxRC72nPJ89kfCUPdCMQ7wQ
                      9Re91FjaPDAac72VMJm9YAM/uzGVlz1IocO9oxWtPdnrjj2TBGa9oFZhvYCi+jq+x1w93iKpvbQ/
                      sLziwGQ9oHFrvVj/kLzxQ8U9+otbvWrDfL1jLre9y4e9vaioE7wmSF49DHKJvWHnqz0DDMY9NE4I
                      vaq5Jb0bJcK9AXqcPcn2yT3mljA9IIPdvLBAdL3QROG7epi9vYFhtD2MhA+9jMqKPFMYar2XSpQ9
                      beywvaTj+TwdKGG9YlhxPb2Zxz3k7xK9PRZgvXXWk72JYY094utVPZYrCr0gnY07PQmmPSipYbzz
                      hJi9GMRvPMhP3LzyEl896hQTvf0Ooz3qN4+9wmw4PV46FT3G4kQ9wUWgPUpsfr1EkhW9HM3hPJOg
                      SL3EXfE8EDQPvXwb+jwQOS88b/iQPTCxi7u70ZO960awvUmRhD1AIgq9e16bPQhNojxi7si9RSCy
                      vRgUsLzRQp49hz14vdR22bx2Hoy9I/3GvatZjD1gu7G9Q7fGPXQJk7zX8sg9EeOEPb4PMD1SKEI9
                      p2RcvRMgyD1xdLM9AHW2O/gOlL2Amcu7ku8XPX9Ksj0gZqM7+F+pvR6FJD2A7SK8AJBwOLAYZb3A
                      sLe9atYkvScjxL3P3qk9NN6VvDC3MLwCB2g9TSu8vUxknzylDYi9v927Penbjj1ndEe9cl6cvU0K
                      ab34HIC9q4OwvfcyN70wfpC7kghcPY36Lr2C8sC9iFCTPN1qnD1to7i9WFTivKAe0ryehKy9WODF
                      vdF0gj2IKeq8+loIPQI+l72oaMY8ICidvHTfDr0pEaU91vl6PSi5T7xkPNU8dHaAvMYUiL1C7WQ9
                      NAbGPHQcEb0K3Hm9+7SwPcsGhD0sHbE8bMCAvXCUOr2gzwS9aO2FvGCB/rvSnC49MPIDvMbtGj2E
                      CA+9yp0AvYy7CL1aix49/oZXPVtKkz3aHiY9D3WxvZzD9Twkl8088FF/vL0kbr3A8rw6M1wuvVuP
                      vr39H6s9vZaQPV5hDz0F85+9gOHAur6dSz0irm09kHhSvA86pT0MXoW97J+APEVAsT0AjLa6Uoaa
                      vdJSED0R08M9pYGxPcVxzL1WpoG9zzuyvQCeMLtGXwE9GNbzvL3Jyz2WaI29vRmqPZiDybzU6gq9
                      UK8cvXMjZr1Qo1O9gMnHOr2sqr0hNLQ9lXWiPcAPczsA7Ri93wDDPbi7nDwAntQ5+sB+PbbNej0y
                      hV89PgelvWgPLbwYAsk8zOcFvedeqj1tAsc98ggIPdD/Gr0YzdW8OQ+8PYBaibvIAKO9Nt84PbG4
                      oz2SRI69onqNvTQV/Lxw9lI8YGgkuwzJCL36Syk9QBhkOxwo+Dyg6rW9zV2nvdnJyD05Qr89aCIo
                      PIZbUD1aV0S9BEH5PMlNkD3vlL49QO3ROvqld72CFgk9U39UvSZPi72Zzss9a3akvee0pj3Yo208
                      Kq1yvaKrOz1UAvs8K5OVvcbIBT0qtwm9sN8TvS49AD2QayI87LusPIpgHL1BgIs94jcfPa0KLb16
                      C3G9kKQnvNZNPT1+1T09uMqPvJhJIrzDC0e94GOHvGiC97z/6pE9EXeZPTdoer1RLKM92glHvVFu
                      xj2/H7I9r+SiPSMmnj0YWqa9NNrGvKfRtL3iigE9iVioPSyN+ry8F9E84B7iu3h5xTxYbcA82K5Q
                      vLoLLj2Ap7k7ABYpOy2COb0qkG+9APkcvOpNP71U3o68MC6GvfnKwT2N5Km9ioaFvcAp+7yh04o9
                      F84nvZMRt70o/0O87SKavX2ApD0wlXo8bauYPQDM2jqMF6Y8aBgZvDB7K7wslfK8dy66Pc5xAj2Q
                      ny29oOFCuxceRr1kawi9r+bAvUD28Lx0vbE8Vu9KPWFvgz2Aa588b/mnPUSv8jyEC+k8QgUSPXDD
                      q70noZE9OqOhvdebO71zoZa96BJXPNi4szyKqU+9h3ynPQwCvTym05q9LI6ivEjR4rxbusK95WuT
                      vQAy6ro9+Gu9hqQIvQD+Crt6Dsa9os08PdH3lj3m8Be9p9tyvTM1M70NR4A9IOQmvVBi1buS9E09
                      aE+ovb3tOr3MF5I8MPQqvFejrT3wESq8ItUZPYCKnLtguW87hi5BPU6sAj1DJnO96k1pvYn3rj3m
                      ThQ9icS7PbM8tL0iMLa9d3yGPRN2ub1dtqs9cxExvRXMkT1AyQK7+b6sPfxz7Dy1j5c9SgmuveD+
                      srz9jzS9uh3EvQAVv7mgpCo7ILuOO0DbqjypUYY9qA4evGhXeLxA0k6795IqvQm0tj2XDSq9UlxU
                      PT10xL1AYnm7WO9BvF7BrL0adpS9qxWhvenkwj1getw7rA/PvBFBjz3dfL49ijI1PakCiD0wScm9
                      QkyfvWwyujxyLgo9vcO5PdMZd70g3Nq7yJuUvHQYmbwZoKI9BKTePOe8Yb3j4i+90V+JPZLNtL13
                      +4s9Q3uwvVWbhL0imFQ9mFOZva4iBT3jhyS9uoBcPY2uzD2wpWC8plsHPUBnCrtARBi9SxCsvRzT
                      /jyoE0g8HBDbPACTrzsAoUM65nctPUaTE70ANX67Lu5rPWDBqbwaeZu9gE2HOvKzfT2UyQu9IFKR
                      O4q7Fj3r6rG9Bv9rPcD+y71Tory9LUS+vTjYvrwYbYU8QBqrPGAnPDto5JI8MxmcPVYGMT0smKE8
                      gy+nvSGNyD34O7q9hqNsPVhUtL0SNio9QLa1POh+mjzQDSS8aQydPRJmqr2syg+90M4bPPuAoD0s
                      s76807KxvbYGWz2LGYI9KuEzPYCG9LxqqVG92p1OPXUxxL15MLw95zM7vbKMZj1yVlw9AuO4vZzm
                      9DzWXl09YOGUO9KpLz0dG0+9e0GHPQDGEzlxtp897f6/PeKHFz2Q+T48WTGdPfWplT34p5O9Ouk0
                      PR3QrT1wVDa8jzeLPd5qcz2Q9xk8NDfqvPyxFb0aUBA9tMnOvExn0zwhc7s9IFEVveZsp73Sfp69
                      dhUtPbT3Eb1II7U80SWzPWwaGL1DrVK9vVGgPVORKL0AU4e50MdrvYxvyrxoMPy8UNzGu4ZETz3m
                      R6u90HKNu6lDsT0YV2w82hUHvVB6pzv6SoS9SMXPvD0ynz03H1u93VmmPeUkmT0Ga4y9pigQPTCl
                      djztNq89W1mkvX/Hvz19Gm69AMANN1iyLDyKE2k9EfOFPezwq7zOCCg9DAuIvUYGor0WQ5a9JCrk
                      PIpxZL04OMC8j6q3Pa3Akb01H8W96sp4vYhV0bw+Hw09+pYZPY1wjT1XiV69bCfzPPha2rzY96K9
                      UBZ8veeTrj2Ub4a9GxaSPX6CEz22fYa9JO7SPGAGLLtJtZY9n+jDvffjHL3QbDm9lczDPXk0hj2j
                      W7c93KsAvbzOEL2S6ko9P7jDvaABkrsyR2A9+0G7PbMfN73QiTe9qp+1vaAkjLxgzQy9Dl5WPXQ4
                      pzwixY+9alOLvXLHBz0ZB6Q9L6fFPY4uQD3OEzU9qK2LvPXpur279Mc9qhZyPQZnmL1oLJM8o4KQ
                      vSImvb2whC+9yr8uPdjegjwMId281MHtPM1hh73NzjC96PxBPFgei70Wu4W9gDoautoTAj2gkzy9
                      AAYovTRXxzwY3Mc8GB5hvAq1yr0Jncg9ubyEPSAvNb1yP6C9eZOAPQ/irT0N1EC9jFaTvACC8jmK
                      p2Q93LLhPApXAD3A/Zw8myzDvbglwDy08648pxZCvacfur2ACbu8/iQsPTljij3DPqE9vrtAPS2W
                      qb0ktvg8GFb0vAOqqz3iLD09tL/svBgFx7x4Eo08sMfbuzJcTT2yMzA9tm56PcBAMLvAoJW6NsMn
                      PeXTo737MKO9mFClPEDtiTxBV789KemfPY4+WT1wBMq9ABZRvRD7fr09Uoq92nYZPbB/vDsyCBM9
                      I0VLvf1Jyz1zQLi96mBNPahRuLyyNBw9iIqSvPCkYjzY00q8kMlEvfO4U73ApBI8jyqhPbBzdLzK
                      qES9aqc/vfEutD0G+g69kWCzPU47Xj2wYjO99CLdvPWbpD1lHpu9MOonvLTJnDy9q529Mc6NPZol
                      Fr00F+48HS2UPQngoj3AsJe9RqeKvXJAmL1IM++8zVR9vYCyy73oZai8FFLKvKpGe71czRW96D+3
                      POu/wb1MpuI8gKgavBy7/jz2iBQ9rafEvVXSqD1LFI89gFZEulLnCz38xwO9Q0SfvU51Bz37YZm9
                      JefBPWj1tbzzGV29Ib+fPcByCL0CezM94psoPU2GZ70ezEE9e1bJPfU3kr377bs9i+m4PXMSQb3j
                      O649dxW2PQ18Lb3Mauw8zQepPc+Ovz1/Tbm9TDX2vMVtvb3wF8K9U1WYPSoeUj0UE5m8MEo5PPJq
                      v72YOpu8gCuEPLzcDr1IwOC80HwLvMa6Oz0Yur88EAAZPDDRDDyU5O+81K6yvNAHALyA3bK65aST
                      vY3OL73YIVw8IJO/vaD7XbtghhW7ZOvRPGlijT0ZoYY97MsAvT0fmj0G0p69PuElPXw+7zy6+Tm9
                      9bO6vexBBb0iIjU9PRvEvTTGujwjxK09bEO4vPSLsbxIVNG86SzMPQBduzytcMW96FUSvKBgbbur
                      AJk9KbyDPdIJMT1N4509gV+lPUDedjulspo9XmtZPdhHibzQXBQ8Si9hPce2L70yGis9MTylPSza
                      qrxqg1G9YluUvaXqmj2MDvA8qTvKPWv2rj0ATUy6XWMmvV3Xyr2gAS+7/NaDvc1qW71grDe9Q3OU
                      PbXSkL1H98Y9iymXPVIbeT3SBpa9GpQcvc8viT3Z+bI9bGeEvTBatLtHQbq9ONLpvMDcNDwY3sO8
                      jN/3vI3poj1mumY9MCHNuwJ9r71HiEG9A4i5vZiZvLx/a4U99lVzPfwO3TxpILw9MpFTPQj8tjyA
                      uNQ7Q+nBvSUZzD0i/3E9dDcAvbmcuD0MM9g8nKMOvQlLjD2oxJw8oJVivW4Rnb3agie9Km50veL3
                      ZD2JZMA9AAL2Ol8xtj3673U9QJKWPDD6P7xsi488aE6dvfAVZrziR349v0eXPR/ZwD2ntmK9xj9e
                      PQCSv7lwTzc8ULNxvNeRyz2ZabY9SmZavVYPo72ABbo7gEYKOgryCb26dQa94O+Bu4KNHT2SQis9
                      F2y6PfT62LxaRBS9GUmlPdbrE70UUM+8ujVUvWJyCz0hO4M9kGV4vShPMzy4MsM8t6OyPVQEobz8
                      39g8UQOgPQaUk73Ywlk8I1afvVGmkz34z4K8U4ifPZZebD1XpKE98yq0PdBA+jvQkpo7cHI8vJK8
                      JT3O23k9Ckc2Peb+FL3zB2y9UQOfPXAcmr0eSZC9sF+Bu7Wklb2ds689gCa7O2pHM73fbJ89HmhD
                      PZWwsL0A7uM5zUHMPdSz7TxqoyQ9nQaHPUCDo73WuHo9ZIXePAQ1Db0RpI49c53FvcFMvT3Zq6M9
                      G+iRvfPbd70AQK274E+lvHaaGz2TDro9fcx+vTrLMb102oI8QE0au7bUZD2ggEm9WNumvb/4jz0A
                      Yiq72LhYPMBHO7wCFoi9mCfCvECeszxNNKI9sH91vXL7Gz2AFJe99xyFPW3lRL3zOG69LerKvbc8
                      mz3lL6W9gB+dPHO3sr3CfAA9iYOWPddGJb0qjKi9xJnYPKIIJz1q52i9sLw+PAyJsTyA68O94o5X
                      PZI1Cj0Ix7C8qNykvIBpYbqPT4U97VJzvZe4Sb1OvJq9MvlLPeHxlT0+lSc9cJVpvVTGzDzAp608
                      5OzfPLCxhLsQ0ii8ykmfvWhReLwyHLe9JQ7JvWoMRz1Tl0W97SWfPW1Apr0AZ5g7DYWvPVvDmj3/
                      UY09lBeTvMtWsr1fMcE9JLHPPMCFA7tv/cg9hDL1PBBLSTymFVw94IXDO4zbqjwDUaW9N3ZIvaAy
                      fbtOFE89U3pcvRL+nL2mSoy92mMLvQIChL09IZQ9iEvEvKBToDsYxM28wKwRu7BoP7yoNoy9/8y3
                      vYCaf71wrDc8FOmXPMp9Rb0Muro8Xu0WPa3jeb3xEbk9tM2AvOuJtz3QYow78AAsPFzG8TyWV0Y9
                      ADfOO+hobjzQaSI8inXAveuanD3AXrg8QI3CuupoLD3DCTu90JImvQfsvj2drp896lkEvQYfKz3K
                      IFG9FxhxvSAx7rtt53S97M3pPDCEMb1AA926C22tPfvnrj3ML5w8iOf2vCYnaT069QA9wL5Zu2Mz
                      nT10/+a8YXO0PYDyR7zoIfa84PFzvSi1frw+uGk90EEmvRqwLL00h6Q8wDFrvdkDwD0ukzM9bUa1
                      PYCKJboUm5g8PixVPcAu+bzqhnI9wZetPauNoj1AS/S8mAyLvHjBijwo6pg8WqA3Pdc4gT1t9Yu9
                      cK96vSKKWD1/cp89gKIrvKOTj70eXFw9sX+TPaWrvr1O/349fgRMPQRg+DyPtLi9ko9FPbQWyDww
                      duS7WHifvbiNubwe/k09kdikPZlOiT3A+jO7/0TMvYJ4Jz271Jc99Pj4vCi8gTy3lp09LCylPGAp
                      sbxI5IC88Fl5PODyjLsSRV89DxaIPfinhbwKeZ+9MX6hPa6uED2bWcq9FWqWvQCH0jvwf0K8/Y+6
                      vQBFpLmnWbS9rA39PMcXK72wH7k7mpjKvQC69Tlp6bI9hns0PV76Nz1kQA+9ibXLPRQBhL19uni9
                      OwuuParATT02P3E94vZSPSDu3Lxt6n+9AFhtusNOH70Yc2S81Q6uPbpUWD2emHA9ADbtuwrhAz3A
                      n6U83pIQPRbykL26+rC9gLIHPJPccL2sOYY8mDwnPNgKILzY3lY8ggIbPQr9Cb0twrO9GUGoPXsI
                      pL3KxMu99h+DvRb4h71oW8y8gJwQvcyErDyApa69peKrvZP8Hb2MWf28Dgmivaxrx7zcgwG9YHD1
                      O6B8Q72YqDk84DB2vUD/bTvAeGK86EigvcVCwb1dZIO90X2XPYdDgz1ONVs9VOmQPKAxrztL9bG9
                      FHOzPAByxDnoCcq9TSt/vbpTML2CnI29x1F0vUd2iD0RmJg9eNvkvDUxrb1AY9a6VolKPYZSBj2Q
                      xV29CEiZPHfzkT30n5E8uiZcvShK5rzgTqI86gomPZ/SwT0AtLu8TH2OPKryFL3XgMK9qh8xPYTs
                      +jyIg/y8oo02PYPWTb3CeQM9KBdOPBJGZD2pVZM92jROPWjcX7yAWB889UCEvZg9pTzky9M8GPBP
                      PDBQhLvXnh+9eg6+veeqQL2vfoo9AGLduWf7KL1Xf8E9xt+ovTf2U73NYYy9EJlJvBKfZz2hYIY9
                      YS2aPSkSuj0bFrG9mEPKvBQel7yW6kg9TeI7vT66Qz2CrSY9IQGnPZA3Pr0ktfM86mYCPQDwNrrQ
                      uUc8YHNNvRJpFT2Mb4u9/2q9vRNDXL3UyN+8t+ZBvQM3X70HJ7K9Ud+UPULwYz3sA8Y85ixlPWHG
                      ij32zQ49xZacPYAkXDyN48C93RCmPfAeKr1QMDy8zr+jvcrLEr1Y9D08Z8eiPXcjN73Kk3a9evd5
                      vZCTHDww1ES8kUSkPSj8Xzwq/5K9Md6zPfd+Or0A2iO5QAwoPGq5S71rB4k98cu7PS2yzD3qNEm9
                      QGVEvLH+kD0Xu549WHavPOpSDL1VqYc9sAVlvBqIvr1AL1o7zN/BPHCTTLylJcy9wNjevKBwIDvo
                      k3k8Nwi3vYzFzDzgq4O9FTG3vU7qpL1L/JW9YxC6PRiPMDyin089UPYFvMePOb3w9xa8ORGHPRjx
                      pb2Ti1a9JJzpPAemoT1YGiu8dPK6vIA+9buytC09y16PvdbBlL2YLjk8MIRPvEprZ70MTLC8FOwS
                      vdDcKL1AWQO8AH4VPN8osb0j98c9+jIgPbzy8Dx7Y8i9rWBzvQBPKTy/2bU9sJ5GvLHipD2Qe2c8
                      M1AmvUzH4zyOWqG9wMslPADV0btyrry94jtZPahnD7yEeeU88IKTvf2Ner0jo6i950WWPSgg0bwg
                      qa28nIbNPIBFqDrrzrk9pqwjPRdmYr1H4GG9W8WsPZqeIr2sAJU8gd+iPT6kmr0zsMu9pfyGvSpO
                      V70wnGG8jALZvJAIfr3K43U9ZOAPvckapj3GY0s9zDPLPBhPRDwANrG6WsQKPfJXbj1Xgx29ZuQY
                      PRK2jb3MVoa8yFvhvMNYXL3Hx8M9ALe/PDu3qj0Aixi6E+VnvRBBPb1QrHc85vZRPVDqvr1gv6c8
                      wHsWu3sixz1A5Fa9WItGvCJAkb1zd3y9mNhZvA3BY72Z+Ik9Vj4EPRQCubwQoQ68X9eSPe7HfT1q
                      rqW9yPCCvKBh1jveSWM9OOuTvfDdTrwSV8W9SOnRvIz45jwHnUS9gGSxvPPtpb0i6GM9MBojPAAy
                      Azxw2i48nvkwPeWKxT38Nvo8ZuEtPWAJXr3q3DA9SOWjPGY4XT2oKQg8fZ4xvc/syr14xZW9sAYg
                      PH2rg70auRi9Ym9lPUBfLryKf4q9Jod7PdWGgL0UYo+8+bKQPcBsx7zJhKw9WN+bvMl0lT1wy3k8
                      8TvBPVBaSb0aHwi9KAMHPHJ3fj0ssu08oU3FPerOUL064Zy9E8RmvdT9ozyT9Gi9JI8NvQBopLmL
                      rL69QaW5Paz5Dr1qQh69p0CyPZNHqz1yoEs9cq6tvdvZyj3YZn488BqhvdIXBT0TV7W94PICvcCK
                      5jpg1hi9VruJvUANIjtplsw9k3lOvRjnozzjSEW9ihpXvYIau70wYZO7WDusPBHGgD2KJXa95osR
                      vUJDFD2JTsY9lx/IPW2rSb0AHdE5xMT9PBMVW72ASok6oro5PYZDMD3kF4a9QNDDvIYGFz0wJ/K7
                      Oq81PcQa4Tx7Lsa9gDi3vLnQwz2sQqe8QhVrPYAesrrAxcG9UAV3PJNuWb2g7788zdxMvYwMrTxN
                      z5C9QNrDvBentD0CbwM94RShPYYXkr3RQ8I99CWmvF/kiT1Rb8Y9oDQgu23Nu71Ymc282qbEvSWs
                      pb0g+/s7SkjDveYDqb3hGLU9AXK4PeskmT2UQui8QaiDPZgunr0ARVO63qpoPcC5db1QW6C9fnsU
                      Pagjgb2gGWC71dWHvYMkJL2Yf2W802djvROaWb0YsGo8+3LFvWXqg70Zkoo9QE20vCeblz0VPLg9
                      2PIJvMogNL0qklO9QN2NvACvSrzqEVe9TsFCPWh7AzwvZcK9ENx9vLDKgLv6LB49icagPYypsDyg
                      vQq9IGhUvbQm1LwHcas9h5etvZQd9LwD6D69aHvAvWq/CD1gENE7zkemvd1QwT0iZS097VYfvYA8
                      tDpsSs68vh09PQBJLDsi7gs9LaJeve1oLL3/aMY9qHsSvIHQoT0dTrM9kIlEvNBQUbyFNZW9gqaJ
                      vfLrIT2b2bM9ySCuPThzwrwR3JE9rf2+PcjYiDyAf0G8w9AovYkitj3AWl88mLAOPBJVnr3A4nI7
                      lGIDvbEVnj1nAzy91lkPvZ4pWD395jq9cKkKvAxHE73gvJy7lFSEvMpENj2gea67MJqeu5V6gj3Y
                      j1M8gBYtvcCVVzyC8G491okBvdBYqr1O2U49dmievSBirjw9BI09e0+dvczIh7wNDx69UIU1vKLu
                      Vj1Bc5k9FcK0vcA0RbuNN4S9Md3DPft3rr3akCg9qpw+vffiNb1AAYY8hkUAPaiXq72b77+9wOrg
                      OlaGFL0fFbY9uZOkPb4aTD0qNX+9ODSAvS9vrD2wVhu9ACiVuuhZQDxuvl09mnARvbIchL1Tbl+9
                      ipYlPeAJ7jtgiKu8EymQvaDwar1u9au9Mqt/PbzegL39C0+9LD+BPFNIvT2qQWq9IF9gvVFItT35
                      J409UtVxPcyK2bzoLdC8AMhtvRYGCT1g37I7jUEjvY3nfb2sqcu8tA6JvaOAyT2qAgq9crOpvQD5
                      gjxJXKw9VRerPRfGgT1kuec8zMsYvXDXSDyAzci7xlVgPTctMb0fDa+96GqaPCAXMb0B65s9YN2K
                      vVaFKj1Dfq89bGKZPKwCD71Uy+C84N2sPIWPr73m1F494XuHPTKhgL1gtcu8swKpPb2gQ70AJSM6
                      0Fy+OwDWFrl7Icg9wBgtu1jDDrwhb4k9uX+DPfMjy707zY+9l62OPfBZKr0z7Ji9LeqZPWB5U73a
                      VRg94F6NvSCgxjtvI5E9x2Akva8TwL2O/yE9eWTAPYApnr3j73e94FdbvZ4GMj3Uqrg8roSPvff+
                      Wb1oXJg8mCmbPEeYO71S11I9GGJXvKwNybysG8W8AMBgOafLv71ihW89zVyYPdB2zjvFLYg93Uya
                      PUpmx732WIe9lAbovEtOqT1YgLy8zWGBPVVujz3nk6w9+XGVPYAde7ycA9I8RauVPdqNFz0Yv2a8
                      px6rPWDh37ungF2962HHvd8KvT2oI7q8wOSovAxKCb3ESN8802ScvQjIkzytSce9EZa1PSAUQb19
                      pW29Jx1Fve2Mwb0o0cO8gGPVOoBhHb3Q4Ly79Zy7PQCwS7rfscY9gBS+Ok9KuL3+3yU9IvyMveGK
                      jT1GXEI92LW/vM+IyL1CpHY9NlUkPY3Jpr0X2rA9/4O+PdQSmTwdubU9+EGTvD78Yj13W7w9MHmv
                      O0DTb72AMJ263v0EPSpyIj0Cx1o9QFe9Ov3zl70SXKO98HtxvWcoL71Yntm8tcucPchnjrwY2uq8
                      GuUmPfJ7Bz05tJk9LLLaPDDQtTtDFjO9AKauOb0RU715dqU9BbGYPflknT3AOHW7fWyfPahsWrwY
                      Cp082mKwvW2bsD2ANu07AiqvvZDJPbzJzME9xeCoPbhF+bz0QgC9AFMUPFQn8rygACe7KNsPvGyl
                      Bb3UzNw8ACjgOmz46byBhIg9uEPEvUeCxz3EH+88tgRGPZ81sr0v9pM98R7HPQJyHj2npL295VKK
                      PfaLmr3RbaE9d6nLPRnbjz0Q07m9VksDPUBWcrxYY3y8tCjePPj5rzyI5Yu9fzejPTrKar2ctxi9
                      aBUNvG+VtL2g+MQ72QSFPaDD2byAztC6bEENvZI9Hj0ixBg9J1CcPSf1Xb3AWJ296NKePEDUYL3Z
                      e7o9iJOovMukpT1Am2Y8hzvIPbAaWDy0U5A8j7GgPX1atz2iEFo9fMzhPDBQGLyQ4Vy84E7jvItz
                      jz3mCCs9tLiwPEzGqLwAgiK7eW6DPcBtSrvI0569cnpzPaAXDr0rm5U9YXPGPUW/wL2A3t47jp0U
                      PX6lFD0iDkM9o7KhvY9Avb2XjKM9kP5qPC8Xnj1Estw8uOyrvZi9oryAXry9aC+qvVJINj1ALXW8
                      S3izvebwPz0/3ZI9Ap0bPSZwST0kUvQ8RjqIvdCUNrz9hYo9WocFvR22Gr26MjQ9GIq9vRvGm71L
                      pZU90gdTPSfAoT3nAD69cndWPedzYL3HSWi92XLJPSirQDwUbbq8cKxQvQ4QUT3gv8O9b+TEPdeM
                      hT0+wKi95YSZPXA0YL1qxH498AiTvZRW3zx9o129Zg0uPSIkqL0itl09IqMEPSClhztj/nu9VvhL
                      PUCFpTwAQku9OhZgPfUuuT2LzZm9wN1RPEyf9LyQ1XK9YDzivKVPzD0qvyg9KGJvPFquLT2ptpo9
                      FP+XPD2fw725hKU9/suivag2vr0YN508rH/XvEznB71KOn496WmuPc3Ql73AGwE7FDONvMIdaT1A
                      +Dy86kcevcprOL3yzlo97bQmveK3SD0m1209REqJvTi/9Lxfr8G9drolPfqALj2W4G49XpqgvZoB
                      Tr3/Dca9FS6Bvd0MVL3i8E49SCfGvKCpJb1jx1e98TeJPXCrTrwDHp29EFgMvVaqbj26WJq9s8hL
                      vdCVgLurlrK9PueOvbKsMj3o5Fw8s0uVPWvfsb1XQ4491Ha+PM5bJT0AJ9U7XjglPd7AYT0ohsK8
                      ueCIPWiwi7wwUsq99HnYPDMpr72aVXw9CMKBPFRZ5TwRK5E9ANwFuV2rjb1UUOA8AFzFOmPWdb2s
                      v5o8WFn6vLTOv7wdX729cqBwPaitezzt4zS9zW1HvZS/ijzZ15c9qX+lPVAzpDuAZ7286xSjPalE
                      wD2IqZG9kenFPTq9eT2YoJ+8/yGqPegQ8Lz3Jog9ZTydvYl8rz2qXmc93OfaPJ2tN73i2Rs9YHaW
                      u6CoCL3jWaM9iLXSvOdoyL1xJJ89INjAvMDQfLyFXqQ90OU/vCjRVTxg5ho7JdfJvQujub1AseC6
                      UGXJOyZrJj2i1309SihovZTbCr3YMHS8Ys0RPaBQc70dtI29TV+xPciAgzyOB109DmRMPTCTnbuc
                      7N08FP3FvP/xvD1bm8a9EouRvYD9nrsLULW9gKi5O2HYmz2K67K9Qg4WPbe+vb3iCpG9/YO2PXlf
                      yj1wblm8UntCPe6mLD3TVbC9QEmvOggyrzwRJZU91CPCvAAUyrzip6O970/EvdklvD0aFmW9525R
                      vcHCsz2sL6M843NWvQ/svD09e6I9iGqBPLqrIj2hCMk9Q427PTH/tj0U1pK80AdEPMtAhD2SPbC9
                      wsM/PSFGmj2Xak292kAxPQFLjj2gEsO9kmk3PbhwsbwgU727lKOzPKDS/LwrALW9axesPUASML3G
                      SmU9ENQNPMT8zTySXsm9TI6Lvc77ID01CYk9QtRzPcobUD2O6yE9roBQPaK9tr2M6qc8gLuwvUMq
                      yz2xkaI9XQ+avdx89Txg4Te7FY+QPaBjrL0q3Tw993E9vePqlD1X+ce9GqcrvQFXrD2qphc9UVu/
                      PcRZ3zz4Ao88a/uuPf8kqz0QaTk8ShFiPaWvnb0g6da7OjQCPTRemjxB34A9ZiiJvYZAEr0wpTE8
                      UGfTu0DjLrxwRge9LgE0PcBrTjsK84y9AIwkOfDlwb05Y549JjhZPSeexz0Uld48m0eJPccFyT2g
                      qrG7e9WdvWyU8DzASJu6YPfHPNAHxztCEBQ90KK+Oy1xlD2B0rQ9wrBDPfn0wz0yQTI9APg7ullB
                      yz1tjrY9scWiPXAgQjwver69WOqmvQIVLT1XGE29aK+jvUJrBD1gUhm7ISi2PchPoL0ylWo9smsG
                      PWNGmz2YBIK8NVekvV3+NL1T7LO9up8TvYy3E71ofLy9CgcEvVBKXr1Cz0g9AE+LPG2CPb0lLpo9
                      71zHvZF0xT0gLZW8KlFdvUZ5jb2i3wA9f9XLPYAwdjw9sMc9JXDFvYA4NLyWBDI96zWBPXlMjT0g
                      8QO9RE/2PPMrfL1+F6q9djguPUDJWrtOlIG9CH3IvPfZeb16jxa9oJLIvMKWdj2b7Yk9cvVWPTB9
                      c70YNSe8y9W0PSZIMz0VRZM9ncUbvRigHrxSWSA94FyhvLrGcL1MnL28YtJ3PegAMbzQBr+9UO+G
                      vVjTJbx91cm9R7tZvXNVU73AqPs6iuInPaLZVD0Y/E68gPmEOosTnb2AGpC7EEYTvGAb3rsoNoy8
                      IOWsvd1lmr2wN288hhJTPeglvb1A+nS8JGkMvSCEdr0YI4o8a2GRvQkRwD2i2kE9yvemveoCW73B
                      mIc9Cw+9vdrJI71g+mO9ABpqPH/Mx70aTGC9nSCnvfsrpL1xIoY9jjY/PaDDZLudvao913VpvXAP
                      frxXs7O9xr+XvWLawr3hALg9mJ+RvIjIuTygDy67mDFuvI7eMz3Yjri9GrRtvYX4rb1TBYA98smg
                      vQDNx7uAtcu6KjxePXlbzD2Lxaq9cJZRvTP7Ub1ahnC9cYGqPcAwvbx1mZO9rcHAvZWDhT3HNce9
                      Axe5PcFMtj2uFHM9yEeKvKBElzs3Uyy9sAbsO7SVsrx74Y+9poJEPX1hb716xEy9Zm1fPaAAEjtz
                      nJM9aF6FvJtbxD0r67A9VQ+9PUNbfL0p7I09o1TKPSg2nzw4cZ48NHuWPCjv2rxBLKw9WhyBvfnI
                      lT2J95096ia1vXAyYDyaOXQ9fZUivednrr0y/qS9gPf/u9MhUb336lq9tohoPeAxpDvXPMY9DNW1
                      vDZVej04n4C88kQhPV1gtT2iEWM9LudNPXjY6LxRbsA9CnkivWC7fzt9h0q99u+rvcC2LLwWwwW9
                      5+glvYWIwD2A8tK6ACbTvNBOATwA5LO7olVwPTDyITzQAVi8Ghd/PTBBDDxofJm8oMWXvBOGIL1y
                      Z3g9hv8gPWd+uz336Kg94E3PO0IKEj1u9Yy9IMjvvEZXkb1AX8w8MOopPNh7JbwTZbe9QDd4vGJL
                      Lj2gg/u7MNsmPAiFuzzDh8K9brYYPdLuhb3z74g96YaqPSq2fr2pt8o9h2zGvSwErLxYOIe8V+ar
                      PXkiuz2oYc68YBb+vKi0iLxiOjQ9TgqGvd0Uhr0LT4E9zh9hPaqvBL2gBcE7xzHIPR8IxT3sP6I8
                      45ePPRKEsL2gYtC8mEVfPGgPSLzFKae9wJBPu0A1hTwoKa08WplOvcLJxb3nu7+9Z4jEPTrFUL2X
                      G169fa+3ve0Nmz2omH+8zSuLPQyZqjxynV09RRa2vfu0yb0wKSw8vTawvfJvor1t/6o9YKOfO1CM
                      rrtslIi8H52xvZhwJLwU7Qy9vt2ZvfcSIL3Ps4Q9Vx1tvcpDGL0Qdyy85hCnvT12Gr3CZUA99Ge2
                      vADVUztFR7q97dmzPX3Lrr0jOWC9KhF5PRQMozyNP0y9nfCBvfLIdj0ANEg850Y4vcBmpDxA7BC8
                      BIHePEJhHT2EOdk82h26vfJhXz2XzDy9ohOHvVnhsD1CTlQ98f6hPSgQFLxfgLe9+1SCPd25Hb1O
                      8RI9E5eXvfRCsrzT3rs9G+PFPQD0nTsBlqg9WjwvvdZHC71sJak8gCrHuqkEjz0jMUm9wLwwO7gy
                      rb1v2Js9RKKJvSBJd714C6w8t7DEPVhHmbzjKJa96O22PH4xET2gCRS7qtI7vZvCoz2Ynqw8pxVk
                      vfIsPD3Aa2a8zhlDPYC/6LxrirA96CozvPcaKr2wodm7S+e3vRIUjL3tMKG9FQWdvbtkt72dE4y9
                      7+SpPZs4nz0AAT48BhqpvQBEoDxjl7I9puEOvVKnIT0DMSm9QnJBPSg4NjwaIiG9lt4lPVBo6jtW
                      mxK9UE9yvTHknT0xPaM9oLFtvbeyIr1nSGe9bIboPNvTpD3YBJm8YFAjO3HNuT3ujR09Gf2jPboU
                      Ib2AUUA6pu89PVBBjDsw+1C8SEnHPICX1joigRs914A/vRBFH73azXQ9yDmyvdYvEr1iX1E9eVOG
                      PWg/27zAa169Zai0PQz93TzwUUe9M4x3vaxHhL30gd08AHYwvbIWOD1hn5I9qPRQPM7ILz3gpMi7
                      vQkgvVAa7rs4S8y9wYeFPdowIz1OrnE9LGelvMbQET27AIM92D6+PATI+Dzs1KK8MDbWux23vD0S
                      4JS91MHBPNCWQDxK/DQ93rlDPdm9gT3an7G9s4iCPWZ+AD2lmLa9gwmQPTh5nbyAcl+9R8c7vQA6
                      oLrLspc9ZReAPZKfKz2CkWY99pwePUcdrz10JBi9kYqvPYmHmD3gmti8YoacvYDpbLqs0gS9MfyP
                      Pc3Bjj0tNoG92r18vW40Qj0tZ5i9YjMBPXAoJjyz4oo9ykKYvRSvyLzAgUM7sucwPXA6KbxosJG8
                      2D4PvODBobt5VIU9EhMtPTJdfT0MDK68WsK+va5/ZD2Y3cY87qV/PVZLYz1N8Js95XjAvcDUOr3j
                      6FW9txPBvROmVb2iKSA9rHkVvRPfUr12dqO9Y4CfvQyRsrxQSoE7FrYGvUpkBr2NwHC9qcqxPZ0A
                      rT0AiQQ6CkJYPQCaHDkQFRu9h9klvfge7LwATim8Tsk0PbqDPz01FMw9mwa4vfFIjT3gkbC9mfiv
                      PeKCRz0w5NA7eLrLvcc2cb3sS/68xlsAPWQB1zwgAPc7ot9RPbppfb1gUPa7bQ9LvXNRer1gRHy7
                      /z+8vXDPmL0CQnA9cDW2vQDIozy3lpk92LRBvMzDsTyMIpM8KuDLvSKREj3QHUK8rHPlvAcds70L
                      KpI9eMmnPHym7Tyrm5c9ejV0vYI0FD24mPy8MUmxPW0lrz1ZSoY93vORvbcHSb1OjqS9TWKnvTWb
                      k70sO7o8gqFIPW47SD1toMq9EGaLvVDbP71Qnpa7Ou6wvTZ9Xj3oVZq88sV6PZBWlr2sXhm9SnZJ
                      vY2dvz1S2DU91vU6PRhlo7xWp6a9+Y+tPQDAmDyQLE68Q6e6Pbfiw72XGso9dDnpvI0Pb73ApU08
                      /kluPTdzhz3Avim9+0nAPTAeKLyqY2e9GqCmvVFUwD3xA8c9Ba+qvbVRlD1S3K+9GNK9vDGngz0J
                      HLk9k3ksvbpNcz2S5Vc9FQu1PVL9Wj3KbLi9XREyvRh/p7z0v7E8zNSzPKCoRrtsg428UcOvPV1R
                      dr16ugs9ObqRPfLUGD3Axvc6WBJJPMmmkD1CiqG9zFqVvPDSOjy+B6a90mBgPY4nAj27hso9zCCp
                      PJnVuj0nT069IFaxPC8Qkz2dLU69AJYFPGgcAjyOCYS9HamIPXW8vj1AtI68EUaAPaZQYT2w9GW8
                      mR2nPZldoD0rPI69nzi/vZigHDyZYaw9QDRXvE6UXz3DbXW96K0AvHB+Wb1vjcc9kwiYPUA5pb3Y
                      tCu8iKKjvbSotTxtzh+9QDudPOj08rxEFN08sN2lvV0SqT3/Cqw98XPDPex6z7yxkIw9UKTSu7rV
                      I71gRbC7mLAevNJRXz17tJK9sM3aO7dotj3CNMm9mMxsPOBJurw2+pS90yCYPRoepb1qewS9oOqD
                      vbVSt72ywr+93f6CvYw6/jz/oKg9AAlquwttjz1C5HQ9KBcKPJhJkb1tr1a9vqNWPXqAdz0BiY09
                      B7knvbBhRbzwqoy9V4yyvSpkTD2QmAo8EIwpvPopJ73Y8ic8yplXPdCBSjzzj0S97sWXvTBfjztA
                      YdG8i+qxva2HnD1AFS47KOqSvaCtnjuAzxc8mMT/vBBUNLybt4U9my2HPbjEyr2At4O84i2BvWn/
                      nT2oUkE8uO2UPPI3aD3wE2q9lrljPdbCCD0i/Tk9oCGnvaCuvjwLWYk9wP8fvPBjTjxIy5w801NU
                      vWhzNTwYBKa8zQk2vYobEr0psqU9QJoiux+Xyz1Xksg9OeurPaE4xT2CRlg9emgzvV6eET2Gb1A9
                      2/e8vXhXu7yVsL49EvoWPTQc+zwM/8m8hBn/PPmZuj2NXJk9gk+hvZRS57wzel69yHKyvRqbwr1Q
                      wPG740M8vVnUiT2Gb049gNY0vJhiZrxImY88k2+kPWEgyT3RBsI9fcG4vYOmx72YyL294p5rPf2f
                      iL1nVK09C7eaveCsC70uNUc9wpV7PfnVqj2wLaW9OT6nPXDjub1/mcq9qEYSPGqpJL24kYo8+wOw
                      PUb5Ej1aaVy9pOfZPCjSQrxFmrK9KXKvPc0PLb2sx4e9QMWZPF8jvD1M2PE8xBIHvaAuNjtO7pe9
                      wCu1vOQe2zx7scK9QDP2ul5NWz1tsF691GbhvMAoAzyAgWg8WK/MvAHZoD00OOa8hmVFPfsUyL1j
                      xHO9ahdFvYVyx70ASLi7INjkvAAezbqh26k9ouqUvYJEfz0HU8S9BrcBveyV0bwmfAO9wJkPPEXn
                      vD1Dwmm9D56KPTUQyj2ihXY9+B+VvUhX97yocIu8stJGPUDbY72oPW48gQ7LPWDgA721yrg9mK9f
                      vDDBwrsof6E8YH8Bu+o2Wr19BLs90euYPVMQgT2n5sU9GKyxPPEdjz0LX7S9eJiqvAoTDb0ozEY8
                      OeGvPX//sL3z1cI9AHx4PHqePz0G+Ug90qsPPdN6sT0Imf+88M1UPLu/ob2MB8u8Z0I4ve3SNr0x
                      JaM90M8rvWpaI727tKc9fHntPO7sMj3sesK8UO6MvcdDOL1jto49WiAxPatCrz23BzO9Z6udPf1/
                      jb06gbe9U0uCPYaOfz263YK9XdmRPeGhsz2CiBU9mKsyPGe+W71g7BY7E+s1vfp6qb1JzoM9wUSX
                      Pfhc+LymbT89j028PSzdDL3wFCm986QgvcRQEb2CraC9N+PFPQKdej0QTC08AFrKOabIqb0Lo8O9
                      cBCfvTPNjb1yexQ9QCoKOyhlb7zY1IO8iU2PPUtVkT32Pkc9oxfCvQ18gj3zV6i90FL9u+j6ib1i
                      nyU9kgA1PXXjyb1MWhK9ALjJOO8+yr15wp09DQyAPZiIY7wA+XO91vAIPXWOm73An3Q8EAFyvYID
                      Yz3yAXU9YkBbPZuKvT2EtAm9yauoPerNBr2gOyO9BhdWPWr4H7007+g8t4FuvVW1lT2v4bC9hzqw
                      Pd0hor0A03694BkqvXNovL2kROM8qoqpvdZUor3Ndr49IB/Iu9Awc7x0fYG8mjF/PQi36ry68lC9
                      +JDdvOfsub0Ac2A6QJIRO+fcO71yPZa9GlVavY30vb1KyYu9VvwjPc17m71wCja8YuSWvf3zhD3w
                      /3K9AI6guRgLzLzuuyU9dQ2XvQIAKD20nBW9YvxSPblTtT10hNI8dKqfPP12g72TDya9MyXCPaBh
                      vzwBjok9URmhPcAGYr1uxWc9e7qgPaDgyzuaJLa9AlyCvdRNxjzeWiw9RC3WPF1blD3Bn489cj2r
                      vbe4XL0wkhQ85mE9PSNcwL3giJI7IlsvPZigur3wjDO8UDuNO+3ulb0oQb+9XlxBPQBV+TuKP5u9
                      jFIEvcSv8zzScWg9njI1PeEyiD0SRjU9lDyhvLBhKL3gaFu9OaG+PQAog7nokWU8oIfJPD9fjz0n
                      16o9KwmWvQp6GL228zM9rAiNvA7jST1JEo89Qh4vPR9atz2F8bO9ScCfPUo5Dj0wwug7YATmO7gV
                      nTxqIic9wTqAPYelIb0NIIo9GqAKPVgfEzxwqZC9aIRPvOzYxLwA7FE5ll0QveIZMz1Y2LS8FGW7
                      PNpFAT3OXDM9kPRNvTogsb06AU29gOWQu/rDpb1jysE9iusLPZAeerzaF8i9wMeXvZIDuL0A3Tc6
                      rRjEvZjSsb2j+JQ9Whu/vbKSSz2uClw9YcDBPbtNnr0SXDA9xiCIvTK9Pz2gxq488hVkPdlnwz1E
                      aOc8mL5YvNE7vz2caM08wOF5uyIQeT2Mx6U8bE2LvIGkiz19NsU9e66ivfkstz2a9Vw9UrhzPZoi
                      uL3QOda7xVG3vRAqVL1641g9fgEkPeqehr3Eu4e9kA8XvWvtvL01YpY9/BQWvULwDD2ts5w9rSWn
                      vVKEAj26c4u9Js8MvYrPGr3gBhW9UDBrvcrXQz0wYK07I1CHPUI3MT1A5Qi7bdEkvaBi9TsXjba9
                      TIXIPLhD77yC4nw9cZ2yPUjsp7wFHJu9BEHbPPTOljwILKK8cMdSvLTyF72Oww0948y9vVBAJr24
                      ypu8Bc69veghPbxT8z+9XU+AvZg0g7wBx6o9Ul0aPZ3DY710b/Q8gvFtPd/1nz0uEAU9bickPXER
                      yz07rrM98POnvcDmCDxTkpA9zlcKPdCWpbvMZgS9QP1KO9cRoT1Okj49wmEqPYUDwD0og7I8Zq5E
                      PWV+vj0AT5e8HW6qPR2NI73t87C97Pe4vIWDjb3RooY9AHjxvN0Quz0qC1O9v/a8PYhQrrxelHA9
                      UjK4vcxLi7wqZ5+90hY7PSflOL3Qz3y9hq8LPW0Eyr2NfKq9HuWlvcXYuD2dLn29Oge1vUDYJLyt
                      sK299IOOvKXeor0kY9s8Cxa4vQrDi72nr7g9VFmfPGoOKz3PBJw9bYY9vd3xfL04Uci8gByyOxpk
                      b73AHvY6KlOPvceauT3XpHi9ZjVxPVg6+bzi3gs9TIr/PCjFRDw/F8G9ziqpvdDmNzwG64290hrF
                      vXSxmDxwyjI8CPGuPECplzxI7Z29Pe+MPYO4hj3UtMY8aI1RvMhQoTxdbJK9kbXDPUDQuL2qRxk9
                      9YmevQCvYzz1u8q9k33Jvay3pbzux5G93BvgPMCJeTvweVS8ZvA3PQAS07mNLMG98VOsPZ9bxT2n
                      phu9NWKIvc1uVr0dsiq9QLcTvPtGjb0YD8G8TzamPYCXxjuAr8+7chkLPTqIgb19R5e90aalPTDj
                      S71g8F+7yICJvF1ra71c2xO9MKtWvXGYkz0gOaO8MOuNO+C8F72A/ms65jkrPej4qL3wPl29yKu7
                      PJvDvz0gjny9BnBsPUTU0DwqW5+9aLMMPOFYgT2K9zg9ygcAPQ8lsL3ASk87GamXPTbtIz3gs+S8
                      FM+dPLz7/TxTX5Y9k8C5vYqFYT3afk094FiOPPDEETyLK5o9NHUQvT1OZL19BYo9AMBHPHBDSTzC
                      Sic95JD2PGYydz1mqkw9mB5bPGtEnj06/xs9uxGUPTqMgL1LJMa9Dl1WPVDsEr0bdKa9EhoOPdpe
                      L70mrJC9cY/IPW3Xj72Ag1a9ejklPUCgmzx53pQ9Y4bCvRivRDztOhq9Y4B/vdnYwj0ozMA8KJql
                      vQVCh71kD/E8gCZcOmrYGD2zpqy9unE2PZJMaj3SVjU9ktQuPYvzrz2AkTK8DGaCPJqsOL3hvZw9
                      CPKgvWCEyTvwOHQ8xiJjPfVlub3nIW29mtMOvaDW6TtGBh09iDHcvPNgor3V65m9aWyYPQ7sbD3G
                      NFk9iDuhvYDC4rq37IM9oajAPTaNKT3gV9A782bAPYKKfT0K+BM9ABl1vHIxBj3V04U9JND8PLtv
                      tb1rDLK9+X+iPYBBeboYloS8sEgtvN54Xz1oFVc86C1ovGis9rxwnVy9MBSVO7CrzLthlsM966uI
                      PWltsD2S7x89BR/AvQVIuj28c4m90M0fPEAF8Doz7K+9mqQCPfLFfj07oJa9za59vXIiJj2TQLs9
                      vnI7PdL8Fz2yaDI92/OyvSi0aTw/TY89cuB+PWehqT1Yezm8zsVJPYqLND2zATy9z6OgPegTG7yg
                      rba8wCh2vO+YvL0KzlE9XQ1jvfKUXD0Afz66AnI/PQLRXD0QBHG95d6wvRIjET0YCEO8lpUiPXgp
                      qrw6/lm9k5NOvaJrID2y1ks9/iaoveF1sj3iIC490G1IvXtLqj2GDk89EhxlPabhBr1yhIS9CgaT
                      vbi7oL3LLKk9DXsyvRqIor05WrM9iJCnveyKFb3ZyK8904/KvcD7Gb3eHSI91/h6vZKtwL1U0Qa9
                      S/CoPaukrT2wKcY7AP2OvPddsr0yqxY9msdKPXoVab3YExQ8QrUqPQJWFT3NUye9mlItva3Fgz3l
                      ka29EJxiPOuQwr0DkKS99Ii2vG8/tL1ufRk9JbGLPfRKqryU7Yy8Kq03vQh0lbweE569uJKSvYAl
                      TTxQNbm9AMz+vPYbaz24ypw8NyDEvYAY0roBxLY9aBLkvLPRuL2Oazk9rISzvChyyL3PQKs96PGX
                      vSNMzD2kQdk8TQs3vXDeZDx9PMw9isgYve4ZQj0oeI28TH7XPHsSlb00p5u8tQOlvXPkPr2EI/48
                      0eTBPeVKlD0rE4E9qIPBvXFtpz2x1YE9JrJ1PXBTTbxYoQW841e0vbVKrz3LEbk9X/fIPQZcg72A
                      cPK6/DjcPLoMIj2gb7S8aJqHvVDFWb2gv1o7w+iOvUJ0mL1Cr4+9NoVIPQqXPD0gq8g8UApkvS8h
                      vD3t45Q9HZeVPQoTdL049KG9xUugvdCaxL3Nw8Q9mmh6vTPcXr188Og8EkZdPYr6KD1o7rq9ml4g
                      vc0zw70GNGs9Ei7AvbYBCb0Ivb686DSqvcJAIT1r15q93kJaPSivbryMDI+82JVOPBO/Y738I4q9
                      2hh+va3ugr0is0s9Vo12PSg6mzwp9rY9cTG0PWjwaLxaajE9xUSbvcAHLzwwKhO8wFESu2jqKLyU
                      E5K8ptKBvYosE72PI709rlIxPWx/6DxVgaW9he64PduTn722YGQ9rCHpPK49Jz1M4YO9AdazPZm+
                      pD14EIc8IsFYPZjuHDxyzk09kP9GvcdGpj3M8wq9bBTZPBRGxDzilhY94++MPTcZKb0A4M27k+9s
                      vfP+Q72olY+94Kr2OxU+gb0I7bq8SyCavQCy6DlSfwg9nQ2OvUAGmjwaKy09IBCYPHSZ7LzqYLC9
                      ZJQUvahmk72wV469hV+dPZyJFb1RGLg9QavFPQDdSL2ezhk9SlZ9PYwMAL2DvUe9YJpFuz1vQL0T
                      Zla9YNSSvcNbdr0X1MY9JvVbPaAWVju5LMQ9pqUSPWWRpz12fzk95lMoPZMcUr3K1XM9rNSSvA8/
                      lj2auHa9I8gmvadLkj2xGqs93vOLvcxWmzxYify8+T+dPRIGBD0iZ7a9my7FPfXCvL3ncHu9x4C0
                      vX6ZeT3gQ8w8EiphPRIZKD0jMx69on8FPdjT+rxHMFO9LV7IvfmEkD2n9bW9a6u6vWCG5Ttw1Wa9
                      AJmCvIDuh73o8dG8/sMQPRfgW71hcYU9c4sjvQ5Zpb1yhm09KWyQPQUWoD1gl+E72GvDvJg9ALwA
                      o3s8Saa9PXDEarz0o9O8VWfMPSjVgLzK8Eq9MDs3PDAVBzyB04098jdIPTqHVz3bv8U9AK1iPFLS
                      Nz3XaoM9ppNTPW2alL0AAjK8De+Fvf7gWj0wjsq78oynvWAXtLyADnq8qwq/PZIerb0AvKE8BY2l
                      vYsBpz2QOUc8wF82vfAuBL1pZ689NOW7vADuMbuAsMg89QOZPczoxrwAOHY7RxxHvXPGc70CQxM9
                      lGzfvHCEl71Arhu8B14wvUPCnr3Chmg9rEIRve07lz0zJpC9aYeePYf0tr105oa9GUKtPcCQVr2A
                      nJG9UCXsuwH0qj1wuRq9lG2zPEgssr3cVec8qulvvajejbx/JMy9w94tvRNOqz3o0QS8aLoUPO3X
                      jD0rRqs9HsdVPQYOCj3QE3S9NO3xPOoXLL2N3b09kGJGvCisTrzuaXY9IpwwPXT2krw1EsG9bRef
                      veGEnj1Ucoq8i/TDPawAx7yGf2c9YM0TO4CxlTqa/TS9bjaXvY59aT0VP7I9sf+sPeiBljxtJ4K9
                      CgJMPUgmv7xegSg97MiMvVDuYLwG/Ie9+EyrvMhWu7xttSS9OjNVPYuNxz3YdE28i0O0vVUxtD2P
                      vJQ9uAKLvADBKjx+JyI99iBnPQAjHbyuKDY9aLBXvEDjATyaGxK9NRWcvajzTrwm4UU9elOxvUCX
                      mTzAGzW7gKJ4vW8fy73DVaK98nubvUoSQr3vkZ49VVKKvcQ19DywRIm7JQ2JPUqudj1gg6u9g3mC
                      PVuts70qTHM9unifvXEXrT0ik3U9PzO8PcAtR73Kig69vLQYvXfWsb3A9HK9mjJsvVQQmLzX2SW9
                      oPnIvepadz3l8b89w6eqvXUykr2ZOJ89U1PHvaqrHz1A9U87cOOqvehUJTyYaBa8QBJ9O5szwr3Z
                      cYk97BIJvRDvGbwnR2i9EzOWvX1Gyz3uOYS9AFVMPLK3ZD39h7W90lzAvXgUp7xEwM88V55xvXDu
                      Lr1gWy87NCevPDUfnL1noJM9oK4ju4wwnby68VO9B3PDPVnYgT1dVHK9OVmSPaJlbT3Z1cM9KUCQ
                      PRDotb3oQZq8AJe5u3IoRD2ggGa7E7iwvWAUdjtyQAo9I1ylvckNyj0IZM+80N8lvTKlNz2MHMg8
                      QKxGPOoNZr0CpTs9Q266PYOKOr2jbzW9SUqCPdR3Ar3iNE09iptuPfjDxLx/q7w9QYO7PefPXL0K
                      qmy9QAJxvHg/2rzq6Qu90EV8vT0Xkj1tz7g9oN7Uu3Rkh70AGJy6bvc2Pciy6rwABW26femhvS2y
                      qr0Ma/+8PvZZPSzanrxvy5g9oyu/vel0yj1MooK9UEcAvAgxkDzD6Yo9GpsuvVmDwj3XFbk9K9um
                      PZiLrDxLWKK9qF6evG2DQ73Y8X28AlIPPcDfN71hz5o9DaugPaoyPr2RoME9p/4cvQLnmr2aOFY9
                      3hclPSDexbvemHM98nR5PUdRR73oWsW8RpAXPZMPfr2e+RM9NoAgPX7/Dz0D46Q9PicLPcpSHT1J
                      YIc9Gn6svU2QxL1emp69bRdqvaF2sT3atFI9uikEPejXTrwAruu8wzk/vRGpoD0AwJy8p0GuPYJ+
                      FD2Kfq69MG8kvXYuBr1jR7e9sKtTvdgRxjygEde70f3HPWO9kD3ddVa9CBncvJEWij3gcpw881Wp
                      PbcTrz2tUJQ99l5KPUEYsz2Y5ik8QMJlvdZPhr0C9jE98opmPZRq2zw2F0A9S0+vPQDkjzqSs2A9
                      T+6WPdZCcj0Wj2A9cNFJvY7DCz3A0Cu9rtySvV07rD3AooM6nafFvUALlTzEswS96N+avPnDtj2Z
                      S5w9gzWxvYfPoj3WrQS90p4DPWaVfz2IDZW8ikw5vXK5TD1W5AM9sGlJvJBvTjxSN0w93uogPXoX
                      L71op748ffC5vTuUnL2gm+C8zqppPZC8RLzwFk+9B4x8vRedr73K/iw94IHkO7+2vT0geIY8ulBF
                      vaDZeL0wfw69reNivRCZJzzYipm86IZwPFL/BD0ji449BoMZPVncjj3ACiC9MsKQvQ8WzL1MFKG8
                      09OavXA7LbxNMHS9DgRYPY00lT2gUzu7MsgEPbT22LywCDi8XvNSPaK+VT1mTlA9ghifvYZtaD3s
                      QaI8XyWaPYfeHL3sqtg8hg8UPdiSl7xnk8E917WvPbkYpj2o9CI8cWuZPVSp0DyGfFU9sAmqu4QH
                      3TwMsgO9zneQvevosr3zRGW9lUjLvfL3y72IpeK8dWzFvQ7HOj2qKjA92JZNPIl0kT3aGxW9mYmZ
                      PdiawDygcyK90OtHvZ3tmT0Z8LU9E41GvSxWkTxANF886eu3PahNCDx+mBo9cF53vHWGlr21mIc9
                      UGHqu8quwr0LVI093cO2PaDLNrt1GJ49neaJPe2sRr1tGn29Kv+xvUL2bz2t7kq9IFqXvbiQu7ys
                      nNq8ABtdu0XIjj3MAxW948+svSRR8TwNtIY92rJbPZBqarydh2O9rOKOPLAzULwW9mM9wKKgPDaQ
                      Iz1QJ2y94HyIPLRqCL2oYMG9Fxa4vbi3s72hO7M9NEGoPICtt7qKeMC9Z6aOPZdhx73SnlY96kBL
                      vS1piD3qCwc9SDiqvWj7ijzJrcU90ACUOzchM73YmMy9bhx7PSuYrz27t7E90GVuvDBalr3RDZI9
                      5cevvdPwLL3w/xi85lGEvWilir3XZao9IHUSvaAowTy4npM8YMyDPIbyhb3AfZa8nRF5vdKBDz26
                      aRQ9rfK7PZ2Khr3AXVo7eUyFPdLlEj0UFqI8Cjo6vc9brb0z5nu9XGb3PMBVzLzFFIQ9wFpqvRl7
                      rz2qRTo9yCmkvSqDqb26UgO9AKXpvP4wKD2iqbq9JYekPTryZ71a0Aw9tPG0vP3GJ71REcM9baSe
                      PXCGXTwx7ZU9NT2HPYDaTjyn/ps97VNEvcHzkz28HYO9qjsTPVRmFr1Qkkm82XW/PeUux726Mwi9
                      uoCUvZjQIryDVrw9Ld69vfCfaL0AGYK7WFuXvKGUpD33VIA9djaavSXmrj0BDbE9i67BvSCvnjt5
                      9aI9UryTvQDRQjzdI4+9Sy+RvRi8yrz2SZS94m8hPSpyBr1e7pO9NImBPLDhNjzZXb49Sq5SPeiU
                      Z7zfmLs9jGLQPD1iLL3sp6i8FuhPPYBYn73qLy09rE6jPO1LWr2rWKM9oJ5QvdTbm7waMQa9uX6C
                      PRhGczyvQ4A9IhocPcnbrD0Slwk9zX98vQ91tr0FlYs94Mi+u2AmULtKQUu9x8c/vQ0Usb1J+8o9
                      gH9FPGgnMLxYZIG9UGIqvK/Xwj2WHTA9EYe/PVCsZr2MbYK9FXSePd3CYr2XuJM9oCzqu6iWob2v
                      mK89n2yxPar2s70YriI8qD/8vBgnp7wke/I8YMbXu9ZKo73SIAk9E/R1vRhCSbw0poS96PBlPKCP
                      A71af349OJXGPDCzbr3gYsU7H5mxvdEXvT2yugA9pG3lPJY3MT2MUhm9AEGqvUMCyr0Ygqy8tGzu
                      PBgQSjz4EZS8BU2yPfOArz1p7o09Iw6yvVrsYz0AhUM7pDH7PAB8UL2mIUs9Kr1uPfhuijyTxLk9
                      ZuSCvdCIQ72MCrM8FwXLPZA9ALzIt4E8s/fCvZESpD0mbwW9kGVePMDnKrtAVKy8/UCcPQBDTDqo
                      zxQ8NVvKvWqkI73pI8o9SkBMPdAgGr3m2gu985q0PbS74LwA75c7HWOTPS0HaL3QIM+7ml9IvbQD
                      2rxujGA9jkRvPfCvPL3q6l29GrgQvdb4QT24jZi9MNQtvQ2gPb1IjZe91ZSDPfpMB72wppi9eeGI
                      PYFskz0AbnI7MB4yvYHKoz3Afi+7ZT+LPYLJAj0OkEo9MJBzvU3ab70+2Aw9HqQmPeULrr3CZmk9
                      mdOkPaiBkDwAA7A56n1UvVhKr7yaAGk9umNTPTDiwr0oSHW8rVZAvbpaNb16tou9isNkvfrjFT3g
                      ave7PF+KvRADfrz3YXC9ivu+vZQ0gb3jt0K9AO2UPI8yvb2KRTI9cHQIvWDFdju43Ls8uN+EPEzS
                      xjyJVJU9gB+aOnDio73Lq5k9Kiu1vTf4Nb3YSaO8v23JPQDdpTzCrH49WgwDvaH4jT3y0yI9yFKY
                      vFIJLT0hgrY9xKmFvYuwvz29Ui+9WuIAPS5wn71wvra9EL0GvL4kCz1yJ1s9TamrvcfLPL031CW9
                      5pVGPVjHtr0SCUc9ypUYvYhO+7wwekg8GkWnvV37pT16g1m9N6t8vRgurr0nhpw9B121PeOKkj1X
                      78O9EoVXPcRHzTwOaKy9Dr9qPXY8DT36nZS9UzEgvUTOhr0oXsI8MJb8u0AyRTyVWqU9JkEWvSdm
                      Qb2jGGK9/MjOPBC/JrwTA0e9AdScPYDa7LxtrMO9c06ePSZdFL3Kr109lq9nPYAr+bxtACi9CiBr
                      PZi5kL2tnXO97UaePVpNUr3LFr29G020veZgfT34k/O87Y+KvYCzvTphLrg9LInIPMDPGbvmJp29
                      wus/PfdjZr1Uf8A84mWtvUqpMz0deWm9AFvEPGJbxL1NcGK9LF/dvNKdVz3qKwG9S7aQPUOIbL2W
                      Joa92kg5vfxpD73AoX29KO8XPEDPPrz0loK9QHMEuzvWl73OpR09R4ZDvegrcjzUS8I8qjI+vXih
                      gLzkRd08oxNXvceSI72AU+26bamsvbQymjzIJvm8iFGLvVrsZD2ggjq7ol05PTuHp70gwcG7AI/8
                      u87ZaT3PCbg9k6CAPWAA9ztqWkm905aovYe9xj0gVr672kVVvWClQL2T7Zq9Bx/BvdFrpT1GXBW9
                      0HDTO9dNYb1CYxM92ly4vVilm737HbM9zu+IvdH5lj0BSJI9XIgHvZcGuD0F+ZE9hJT1PEH3pj2A
                      NUO8+jw+vbBcpDuzY0m9QW+jPcJTFz3ANCk8maeuPXwF8jzUwo+8EEPDvbJzs73s+oM8HvOYvT6Q
                      VT0FBMK9TNOvPMSM8DwtLKC9cerCPU37U736aDy9ICOgvMjXv7y+w2k9b2rFvaLiqr3Xwyy9H6G8
                      PYAuizq4XbM8JWyTPRdcrb1StL69rES8PHTZqDxl7Jw9B11YvQoYJb1Sfzo9n2/BPQDuELt43Im8
                      UlwmPbz5B72FaY89yIWDPDkjhD2GVEM9ro6Kvbf1ur3KhAm9gOyDuxZfBD1zSiy9A+CaPX2Whz1g
                      BBi7IO+BvNCycL36ICo9Y7zMPT04c72ffcg9FFHLPF0mUL37rKC9/LDjPJDJCDw+cxE9NLWHPLEi
                      nj2DH8W9AIQ5OaATVTsADgK8vkw3PdAHeLzb+5m9StUhPWwYiL2wb5e9v3+2vcjcjzwfEq09ZzpU
                      vR+ypD17Nsq9YNgxO2CPeL2TLT+9GsYCvZR3jbyXKxu9tdCsPViqOLwJb4E9KNBFPJRP7Lw3/Sm9
                      8odMPQAcAzkQK5m9gjMhPcABGrwqoDW9qyakPSAa7rwydzU9PRHEPfKYTj1AEFy8yikyvfU4iT1g
                      xck7q1SSvRDpu722s6G9IAyGvCyTizyE29Y8nPAUvd06h70q0wK9i4CuPV/ZrD0AdW46d1usPYAR
                      PLw3Z4w9WaO3PQJ9Tz0yPQk9bGbCvPGhkD2NV5y9gFBJvQGfsD2pq4s9MJTqO4hqw7xkufY8niCX
                      vbBZVTywAba9RvYuPXGiuz2QTkS9iCfCvBPSlj2wc5s7z8CPPfYoOj13JbQ9oETBO4CG5boS0jI9
                      pMXyPBhj1rzUx5Y8nTOfPXWjqD3Y9SO8y6iOvaN2gT2ZJ7E9FHawPE62Aj2sxeo8WJ0FvAeBf71d
                      OY69pzWVPZHwgz0HuEi96MREPI7+Pz3lF8Q9ADCxN8xWvTzSGLa9Xu1SPV1PSb1u4249onp0PQre
                      BL3Lr729mOGZPGCSYb0Fx6O9OiR1vXAqwb3tany9OLyPPEivwLwA4Ee66l5/PWEylD1wP6O9GDkL
                      PK26Yr1mxxs9A6dWvaPviz36tRm9IDW0O7u4yT0iL3w9XbFvvcPFqT2Qglo8oFS1u3fBJr3Lq509
                      1KjbPJrWPr1UaxS9ukwVPSPCYL3yeyA9JribvXlFuz0soou9jn0PPSrptb1Awju92K1WvNb1Oj1T
                      yhq9H5qePdAEDDzZDJ09mgIjvXNEXr3MKKO8oUeZPc6Ucj0w2zs8UPucu8szrb3j4qm9mMMzPMBe
                      G7ydXJk9mjNlvRoOTr1rC4o9KthrPb5ncz1VB4Y9QDZSPFqNAz0aYge99S+1PTDr6zt6tGO9usSG
                      vYYlTz1lSbO9/YaKvUZAg71Evuw8tMzEvKDW6Tustt28d/WGPWgo/LygWMq8bSS1PfNSnD21sZM9
                      yyGtPT42fj0AWys62IObvfDKYL3yl5W97PeivJ3+rD2gzuS8AOXuOQD2Tjlz2aI9UbisPRj3ojww
                      V0K8pIjyPI8gvD3ooci8szUgvWpjAL0hDa89GcKGPWKjur1a9rK9QDqHPN45pb1+Mx89Td7AvSPo
                      vz3+G4i9iOyGvEC0HzxMm+q8qAchvNCQT71oDEo8j+efPaCZkzyGrqy9yiQDPdAiljsq41a9NRCc
                      PREKkz3ARS07E7SPvTDcCryA7228GG8iPDd6TL0ujB49ofjCPSIaDj3IoZa84NsEvYghnr2GZlM9
                      J7TEva3Ttr2UQdU8tETbPArbXr1dnZm9Ch8kvRnlij0kp+o8dKSRvCeBqj0UmIQ8T1GYPSBmGb07
                      M769Mtm+vZB8qr1yBW49JIHnPPgzubw36E29IoRqPRJmQD0Dszy9zWx3vXjjsjwgzcW8DUylPd5g
                      Hj3FF7w9cnlqPZjBFLxhJJY98LgwvJhkMzzTapg9TEqPPCtnmD0hQ5Q9amixvfLjTj3gSI27k7J5
                      vbn0yz2Rf5k9k0VUvXOxmr3zeRq94PmVvT65lr33yCC9aqB1vRhgcjxYV6y8lPynPDBySrzgKfK7
                      oHEqvYRI9Dyc4xW9ZiNtPdntxT3kUOc8KAGaPOrOsb2T/r+9L+aIPYz77DzbL8m9YtuavU+Enj3N
                      VIe91zKSPS1Cvz0A1CS9gNmiu5BCRL2WN149PGgXvaqWXL0YAbu8zf9gvYmvkD0lIKA9wH6lvCL6
                      Mj3M6vI8EA4PvCLXgL0RsaU9htA+PTFkpj0AS366FFWAvdoAhb3k3QC9R6WCPSzq0DwYdFu8OeK/
                      PSh7vDwaeKq9APj6uUCfz7rSNDk9Ik15PZ6Pjr29N0e9EBoTvIPVWr2IrJQ8kTmjPUAanry6Cj09
                      BiiQvSjBy7yw+Z+9jGPJvGm7nT15QpQ9gFCiO9i/9LzoRNC82twkvdKfmr3j7jm9APrhOvCbYb3p
                      WoQ9B0WcPa2YRb3YZ5s8pOL5PBjj/7yg6Ya7QBcbvb78n70Nt8C9rkA0PRjAdDyXEm69AZWmPfWo
                      yj1S+SQ92hYPvVCNFzxo4Cg8gbqWPchi0LwgsV+91PDDPIQO7TxUr4c8RzYevYD6Pr3CvC49oO+i
                      vNg/9LxCv0U9hRuOvXJGLT1qOjw9zB7HvKFRmD2WLg+90q5MPZ4QUD374sE9hHHvPGr7Fz15ar49
                      bZk0vdAuezwwJ2c8WgqAvRI1IT2IqcC92IQnvHXdm70huJM9CE7XvB6njb15dco9nbm5vXbwh70e
                      9QA9yKGIvOYTbj0s/Ka8A20xvW7IHj2mIDs9Ll6qvRdCoj1CXRM9sHXEO7GUiD2U0fQ8UuMgPcUh
                      uj2CXiA92UaFPXuPpD39ecK9jRiTvQAP0DuATHk82zK2PZK7t73AoC28KI6dPHunqT0ICaY8oOen
                      vXx7Ab3VvMi9YgB8PZ6PDj39HqQ9+MO3vYCmIL1DPXS9oy4dvbSTgjyjwpw9QGpUvXEMvz1sjAy9
                      SXSWPcCunrxIRJm912C7PegYSLzw/qG95JHePECWxLyH6F+9pNvsPID0nTw7Pos9GVXCPfbei71A
                      CVu70IqduzBWCjyD6KI9ooWDvfIkZz3w9xM8LXVovec8RL0od4S8AAqqu1cLjD0L3ZS9KlEkPW8a
                      rz3W7U89oNLDu8wWzTyg6/m7Yci4PYgq27z5CYY9QGHFOqIsKz30BYm8ah8MvWrMx70j3Yk9Ld8b
                      vaAzn72bOJ69IHB7vSbGD73o9Le8eTKJPYNbTb0AJo47Qj9KPTClvzvqLSc9OoAPPasBiD0LE5W9
                      VWOWPU8mpj39iY09s8Frvc7Hkb1HrEu9al5qvVjo0rzopHk8xBP6POfzPL2MaPu8REwRvWbwPj3I
                      p4K9KXmePc6ELD1gohy7gLubu3YnXD0qx0M9zWS3PSWCsb09HKW9KMw8vMwwp7ynIrA9APYkOaJm
                      eT12jgw9otVWPUq/IT1TuoE9hU60PdN0Wb1R06M9Qca9PbRXvzyqgBi9YAQOu5ipDLzrVq29tB3X
                      vPRrm7y8XOo8jeVkvYs0o71uDnQ9voRhPdiXTLzDBWW9UGesvSirnrzgNIE7J56VPWwQorzcwoy9
                      2GKBvTmSvT2mdmc9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0OTM3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMjI0OTM3NnEBYS5kAAAAAAAAAMDtTrvRN649/1G6vQDfZL1K4Zu9SeSzPZI/vr2Q12C8
                      eMrBPNgmRLwQQwa88GcfPBh12byXIIo9p00mvQuQrD0f9I891k4CvbAzR71A81y8i7qMPeQh0Tyd
                      l6Q9GEZlPADwcbvM+8A8/YrLvYpbMb2D37C96NwKvLIiHD2oFIa8cbGDPcJdIT06iB29EHfFvfyz
                      Fr0etU097EqivE2OXr0UNee8AEiwOC/Uyz261Ei9idqwPWY9BL3oAQk8DfbIPSrwRD29Pqc9F8CZ
                      PaZncD1s2f88vCLmPFOgkL2PH4c9h7d3vfqDzL0A+905vnwmPfH5nz15w549wuicvUtXvj0GVn89
                      VFqvPKoqkr2DNcu9TBPvvMBXHr2i4Mm9I0R6vRogkr1gD6+7owDJPcBPaTvl2KS9FydHvbIxFz1S
                      KSo9GF4jPIDs9DvuJhE9KBysPIJjHz3zg4w9LUqXvapKIz22AqO9kmxEPb0Nmj2i+Fk9qixLPQBa
                      OrygSLs8eicZPaDu6ry0oea8EmJBPdAVSDw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0ODY1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMjI0ODY1NnEBYS5kAAAAAAAAAOiHETxQTiQ8oA+/u1RR6zxNYj+9WQqXPXKjND3pGrQ9
                      YMVIO0orFz3wGC69iT7APdZRFb2pybU9faaGPV5Uez3UUP+8dQiUPa6Inb2Q3VO9hRqlPcD4/Tp6
                      a2M9YL2HPA6hqb2Irpa9po0WPYJiDz3Rk7U9FkAFvWiqZbyV6bc9comNvdQM6TwUU+88Y1ykPVVT
                      ij2ogR48fc2NPTIPOz34+ai9lzavPUNtt70AhaG9tfSPPYRU7Dyg2JM7SNPEvYAOkLwg1o481EWQ
                      PHWjh73yFHw9DS1bvb5fDz2k/eI8WBzmvJA2GzxAn5m9jMsIvbO5or1+uqa9IBpXvQB5sTxpcMw9
                      FBSJvJEVpz0i9cG9h2zLvTyX3jygPwG9QElaPC1hy72kgoy9gcWRPZDQODyCxMe9zITEPKzYAL2M
                      oqK8t9/BvUU+vL168Jy9AIKTutitHLy97Yg92Uy0PQVgnb0ZeIA9D7bFvY0QHL1iJnM9ANeTvBrj
                      x72s7Pq8XqM1PdJAGj1+1X09MoVkPQ7nMD0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzEyMjI0ODQxNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzEyMjI0ODQxNnEBYS4BAAAAAAAAAIAXozw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        yO28O5U0NDmVTPQ4lUz0OEALDD/PCGA7GQ2xORkNsTkWu5c4EzEfNo4QkDSOEJA0FruXOBMxHzaO
        EJA0jhCQNEkZ2TmU6UU6hpARO4aQETuqfTo8IhTQOtAL0DfQC9A3hE4bOMrkbzVX9YszV/WLM4RO
        GzjK5G81V/WLM1f1izOloSQ6U6UQNh3XhDgd14Q4UZayO9TvljjHcK83x3CvN582uTctHxU0K4oq
        MyuKKjOfNrk3LR8VNCuKKjMriiozpaEkOlOlEDYd14Q4HdeEOFGWsjvU75Y4x3CvN8dwrzefNrk3
        LR8VNCuKKjMriioznza5Ny0fFTQriiozK4oqMxH9dTS/8gA3Pzw+Nz88Pjd87SUxXHHPNNc+gzbX
        PoM2tSWZNz74ETr5S6E7+UuhO7UlmTc++BE6+UuhO/lLoTvpEVY2nNLqNYGiHzWBoh81TTT5M45Z
        XzV9Yl84fWJfOAKfFTiVusE6dQemPHUHpjwCnxU4lbrBOnUHpjx1B6Y8hyUNNhOmIDrz7K438+yu
        N9wdgjTx85k3S3OEOEtzhDhW7Ho4ptMbPLJBCD2yQQg9Vux6OKbTGzyyQQg9skEIPYclDTYTpiA6
        8+yuN/PsrjfcHYI08fOZN0tzhDhLc4Q4Vux6OKbTGzyyQQg9skEIPVbsejim0xs8skEIPbJBCD0=
