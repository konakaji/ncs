N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNTgwOHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDgxMDU4MDhxAWEuhAMAAAAAAACmgdS9No50vrCGzb0A1ly+O49kvkshO77JMaA+xdCU
                      PqNMYr6uSD6+1pxxPuAHzL16OGo+IPw9PLCq+zxD1Vq+zs1nPhjrUT0wBcm9Zk8APnzy9r1GX/K9
                      BDbGPUmqjT6A6hY+ADJSvCp/eD6ZVZk+8Ob+PMbYgb5ABbC9ckFXPs7cCD4QLZI86IUqPmAOOzx8
                      mqI9Ci0yPgA8T7zQkTq+cqkyPj5/YT52fbq9xLSpvQriMj7rPI6+eEYsPRyxyj1JnII+QFP5u8MR
                      GL6OFl0+BJKJvgz00D0seM69+LJdvlhZRT1rY2i+0jMjPtj5K767UqM+MHIxvojIYb4iZmY+Srk9
                      PnIpBD4Iti6+IipyPkAZ/zyKpHQ+sC6FPFQ4pr1HBZq+TPGJvZZr/b0A8eY7DqR2PtJEfT7iOV8+
                      yKiOvmivGb6zHZ0+BaanPu58Ir4qyz0+PLfNPQ2ylT5ICTi+XopfPh1Wgz4Quf+9pqmNvoCi07yd
                      XYs+JJW0PeDANj2n0qa+PNysvUiXmL73zoo+RUGlPq6hfL7aBVs+mIYsvh4BQr6ksL09OsFtPsuT
                      Cr5Zd4I+IHpFPKOvT742Cna+bktivo6tKb6jUZ6+3n0dPrC5qz0wZ9c9gELIvOYnG74g52g9fkkU
                      Pm7QP76L6JC+d2+YvuStkr5T2yu+SCsDPlgPWb7sjsi97kEgvhmljj6NCYQ+AAQdvGxr2702iim+
                      a3Akvrs0nj5mkg2+8GemPajHGL2CtFQ+yGpMPfgGFL7yUFQ+m3yVvuD81z1rhWS+EOJFvsigZr1g
                      hFK+OuqhvhA8Zb6jgpC+7JXrvUquo77DIGe+cJr0PRYH372QOEK+qwZ0vmwVpr3oTH+9QLhkPVRh
                      qr7A0oc8SNBHPcOwnT6aBmQ++KlJvtjcbj2hXoQ+QINIviD0HL2rqZo+QIe/u6hXbT3SYWM+YAEV
                      PBCtcb74Fzi+oiZWPlbvHz6Wlsu95iNdPoAfJD5j2j++9hzfvWvliT4GVpm+0B2HPFpyPT6hc6Y+
                      0ErRPLQQlD2Yqnq+yMRzvTGhhT5QGeU8EtZPPmDupT2jYw6+YIpRvNusQL6jADy+JgVgvrpFVD7Z
                      8pI+/jgovqBmjr3y8FM+YChjPVR8sD2cQqM9lGSgvg7wbj4QoNK9WTqgPjQdiL75WJY+LNXePewk
                      uD1QCaI9lgd+PlgMOb34IRW9oLVmPE2ojD6saNW9YMrNvf7bQr57NIQ+K3lPvgpcjb73VKa+YZiF
                      PkDG7zzgB3w8cBCnPKBlBLziTS8+f3SGPoZG7r1I9VC9BGOfvt+ykb4A6YK9ENp1vuihT760q7Q9
                      K2NKvhk/qT79rqI+kA4RPiZGdT4oKSI+lf6LPnMsOb4AVGw7XByXviIRpb6wD6i87HDKvTRkjb2d
                      /Z0+4C1lvvuTML476V++EKMQvgAKf7qQ+co82l9sPnDSo7zA5Ga9VkVCviDwu71MZJs9QkJIPigw
                      Zz1CbEo+ID0qPh4dJr6AOtQ8FFWSvTBBKj7Goqu9g1xmvsaoOj7RmaA+iGwEvnaSQj6ScwI+eA9G
                      vfNWpr5dDog+kQ+cPn7Xir4TD0S+IAGkvgVnnT740wq91fyoPlFslz5O4is+4AgsvIjCBD3kRqm+
                      Q1CEvnajaD7GWCK+Vqu4vZxN1D2AOQI+zYSQPkAskj3CVHg+XBqpvpAj5T2/GY++mZuSPkB7xbvW
                      /Xw+ZIuNvUaw8L2soJU9CvhaPgCD8bxKQJC+6K0mvRaU/r2KdGc+hmptPiF4iT6CMg4+2jF4Po1t
                      lj5Axeq8iOw1voAJIL4feZe+1GWLvhZmy70Oiz++fFnCvWNrcL4AT/K8AyyKPgBRszr4xWG9wtEM
                      Prj/Zb17PDO+Vo8Ivio8TD5QkcM8Fd+IPoyRmT0ueCI+SJUOvZiLib6SnX8+OlFfPtxy/L0rtZk+
                      zuw3PvQ96z34jwo+Q9tavq7nVb4iow4+mGYlPY7nQr5Y92i9PtEvvv/vk778lLe9gqU7PldDjb7+
                      4E++/pccvkd6pb73npQ+0B/DvAAZ1rqPGaA+RuJZPpinl74YCSu+GIcdPuxDhb1DoVa++GCTvsAN
                      ybsCjB0+7IWjvsyg7j0a9F0+aMg0vdBDJL4iH4++QJsJPejFLL1OLVa+ZsFPPpq7aj6PlZa+kMif
                      vQqEoL6TNmm+4HCBPUATuDy+JxY+5EnhPXbbTr6si6g9mpsUPgDrZT1wP5U8LNupvTemqL7OXBU+
                      jNqmPaSFlr48SYS9hwedPpa+xr2oNx6+UvwdPuMDib4odWy9Bx2EPkjAUT22/8q9QN2nPFOfmj4Q
                      26G8r5qfvgKfiL5uHRm+c5gIvvaKAD4RiYs+cPHJvVC1lL0GgjS+swWYPhyi571oECI9u9KgPvmX
                      nj6/TaC+4b+lPn7nQr5YXHO+bspYvuILXD4rlBG+NtMhvmP6T76gV2W+HCuyPcxw670geJ69k2mN
                      PgyVwz0PQpE+DJqPPfqinr5IGRi9aMplvQC+dboimpe+6kZ7Pgrvmb4ggV89sO8aPoI9YD4+jg4+
                      d9KZPjx8vj2gAT69LDKZPYAkdr1r81++3utzvi7QOr6ocWA9ti6qvj0ioz72tSg+CA9xPcvYA77Q
                      Ots8EwyKPjgdab2ApIq85c6iPpOPAr7uRRI+5j+MvrigAz7AdsC9VFKevvBG4LzIqVM9oASLPSTe
                      iz2B9pM+vPGtPbGigD5QDsM9ProWvgCdmL3m3kG+guk6PnlKnD43vJS+a3WdvlIJRz4o6F29F2Gm
                      vnfOjz6msNW9dCWsPYZ8Ir4YRzK+PgtUvk97oD42Lzk+1ZiLPlQdlL5i3Ho+/1aRPjbLHT4DUZ0+
                      gOh5O2j5JD3U76C+8C8svofmqT4W0aq95p50PgYhab5bFUm+nHqWPULhaD4hRZA+Vn1zPuA2aDwC
                      PA0+PuYbvlze0L1yvV4+AC0OvQAnFD3wC/28Sm12PgAxVz2Llow+zqJrPigMTb6pCKA+09NavhPd
                      kj7CgU4+4Pt8PQA8yDroZKq+ABOVPZapVT7gIW+9UAjHvUv5kj4dtoc+WNkYvTCMiz1xBqQ+eFdo
                      Pe8+oD4gzli9AO7bPSDeOL2kLcQ9y9SpPqZCRL4Amsm7PhcqPsBVor4ic0U+YBYEvDt/Eb6RlKM+
                      pkENPoMDiD7MbKK9KAEhvWC2ZLxgGqQ9LRuFPoCiJr4w2ek8c5s6vjy1hj3QBMO8oPqvPQaGXT6L
                      1Xy+SxpNvosmA77rx6g+IHXKvcqbXj6tSKA+gAPTvPuLY77gmVC+Z7WkvsvIGL491aU+MPj6PICC
                      TDuo8Ke+UJ7TPMBlCT5W224+L5WZPhCRsLxYBwo+w3KbvnbszL04LGW+TuRpPj56Pb46pEo+ZHDk
                      Pcj4Bj4wXqG8vrlGvvvynL7KBzg+cmgNPoZrET7085++bHeNvjqAcT7ebYO+ZvZ+PjBpxjz7eQG+
                      /eWiPiLpeT56C42+QBT+PXYsRr5ce5M90/ygPg4mAT4Ijk2+EFHvPVg2gb5ohj2+GMqJvtHPpz74
                      enY9CzVEvrIsST7gL16+KPwsPRz7rb0CY04+AH+uPGJRo77SoTg+08OIvkA4br1Dpn6+AButupL/
                      MD6Ai9q8t5OhPgDvzr2Gzw6+a/givn57Vj4fg5I+vIuQvc7Ycz4QAI6+psDVvU7lIT5oCyK+3isl
                      vnx8mr2cWcm9gm2MvgDTbbz0c4Q9oWuqPrj4dD3pz6Q+fFfIvYfGkT6cTpe9XaygPv7LL75ONSk+
                      eIchvZAT1D2Ani++vA2fPVq5XT58Pa09Q+MgvshpHT0YMiE9bBv2PUYHGz6gdU89nhMUPr4vGL4o
                      CxU9allnPlZF4b2RRJ0+kqYoPrpMUj4DAmK+UPU2viK1XD6hy5Q+cMnbPBxBnD3Dzhe+E+SCPlGM
                      lz5YwxQ+sPK+PTsXPb5o8iu+A0ZcvmgJPr5Adf895FjLPZR4vz2qmp++gEgovuLLVT52oHO+0Bi3
                      vIoXl74AOU++cZmGPp3ulT6cne29AGO6PQbtEr442FA9cKOAPJCo7rzHxpc+gq1QPhAP0r1bbj6+
                      SBsyPWQ7+z0jDnG+n6CWPkcVkr6grGK+0qhIPkplPz6AUSW8LFmpvhymj71AlPq7tKiovkDYg71Q
                      7tu8QF/ZvAD7gb0AIlq7OlCfvjbzZ74lyY8+FPrxPVnlgT7R1Kk+OoGhviBsRDwgRBk+aDARvkCp
                      Cj3bm5M+xlcFvlb5C76gtuM9wOF4vda/HD7psJM+uOUrPUk3qT4A4n++cOHvvf6xTT6gzyq9Kr9h
                      PoNPpr44E2u+sPPkvHf5n76OYyy+FvFPPnORN76z6aK+kBnNvHYgur3wmbQ8GNhFvgccgb5OfhO+
                      lBaRvmhjE75Adpg9zLq2Pdaokr6tN6k+YrCHvvg1bL6z32W+gPQlPqzbnT1IHF6+QFu3O84uXj6L
                      1KY+7j9Gvpr7QD5wHsq9UHaUvaAqFjxjIJm+8uNhPrgBID1QifM8QPQtvg7enr5Qsuc8YMYXvFr6
                      KT5n1I6+zELZPcjiI74CJUQ+UAqBvdJiLT7oJ1y+mghFPpb1Uj7YfoK+wFcNvSqaMD6pvJ8+qjUY
                      Pnhyj75Gv3u+mHUSvQ4SXL6Aapa9CAVOvgAFjTsKVDA+ALfEumAtKDyemwK+cIacvRSSp75CM3k+
                      oO+Fvtr0RT7RQYQ+EYuGPuBOUD1jeaU+GGUHvT03lD5qPXs+QCOPvBYym77xK6k+mux5PjDukTwy
                      aiM+1vx3vuhyFb1Wu5i+mplEPgahur3rYKm+yo4BPn6AED4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNjUyOHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODEwNjUyOHEBYS5kAAAAAAAAAKxRvT0QlGK+boRBvlC6Ir7RG4I+oC52vlYn9720cN09
                      2lhIPoqZMT4ud3w+M3ogvgAX+D1bhIo+0I6kvug4k74gZfG9a1csvmDgc756YAQ+jNmJvTNwYr4I
                      02Q9IEFSPFiEo75G9bK9VmIjPsbur722d8u9FtnsvWU6pD5gEzG8a40qvib6DD5nHp8+4pJePnQi
                      jb6i/nI+Y4SFvkKpjr71koU+oGRDPUCGmbxg9HG+R7mevkBN+TzQjI88AGZnPJ8wjb4Uh4y9Pf6R
                      PoBJvr1Ie3C9jsKovkqbYT7bZi6+oIEqPXbPWj5j8ZQ+jHWrvWibaD2wr668EEfwvbIspr7skuG9
                      folIvngUIb7IjVS9Y11Jvr4KNL5+hmE+AuR4PvbCL77IgAC+LDn+PZydjT2orGK+tDWOvqxJ0z0z
                      XI6+kLcPvmqjhL7QyKS9YO7AvcCSqrwWgYy+VoY+vgsRkb4wkr095W6LPgwghD2AoGs8L+GJPpib
                      Bj4YkkC9wIS3vVwBjr7gfT+9nP+lvgBNjLs=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNTE2OHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDgxMDUxNjhxAWEuECcAAAAAAAC+DDM9jyCrPWoZor2OWaS9DGAYvX/XuL1A3n48kpEa
                      PfLqHD293ny9I4SJPYCfbL04Mpm8FPmkvDADOLx69U29ItdLPb2Eor01Xak90tFmPRF7nj1eujU9
                      wTS3PUKcTD2gQBQ7QGb4vKyPjbxgZE87VfuNPW7kdz0Mn/q8fgSDvQCYvTqQMRS8hxpBvToZsL3a
                      YcS9NJ+oPGiLw7wKUEO9RHYJvcCrBr0AIyg8EKtYvcBdB7vAYpy6edyoPTSbp7wo9Y48QIEmPHQw
                      wbzQxr47NqGhvU2Syj0NLly9QPGLOga0Fz2S9Qw91qCjvbkUxT3JKZw9IlJEPWDTCrtzYr29rrRQ
                      PXNLjT2sLZs8eulcvT9ZvT2OrWA99utwPXC3EDxCWcu96qpDPer6Sb2KclK97OL0vKRi0DwCjCc9
                      RBfePAx8t7yq0VS9UOWBuwKFHz224yA9UlRjPYCnjb2HT6M9Dx2zvaNpPL0wsJ676jhgvR3wqT2x
                      4LU9y56DPXroK70aGSW9rHHJvMBfpL3JubQ9qDscvI6Hor1SaQU9Vp8sPWRC+TyGIjE9SuQKPVxa
                      AL3aDMi91oGQvfjZ3LzTSca9KIaWvL4ZBD3mm009e8STvS7KYT3qccy9Y2lbvcCIrryoBS48CMj2
                      vEfRQr1d0FO9MB69u5rEWj3Q5K69XSF0vfN6vz2whQG828GPPQm3vD2rg6E9aa2NPQXHj73ghJS8
                      dm+ivZ7ug73oGy68c5enPQr8ND2QhXK8OiUxvQCgwjhoHSc86PXIvSLTNT0NRXe9KHapvQrmJj2A
                      t7C8cf2wPcCbgbzHKse96ICxvJ5+nL3V2qI9KgZCvawhszzv3ra9TnoXPWckvz0H2jC90B2Su2K6
                      JD1A5U69KFN1vO82oz3rlpg9FTaXPSLapr2goJa84BjvvJK+g70q2KS9C9e3vSiMY7xUFqa8dPzR
                      vBRok7w4R+S88eWfPTu/m70w/+s7g+JSvc46iL2Yv0g8rHTePLj1lb22AkE9eDDtvKJPVT0CxW09
                      8+CQPSiDBTzSrIq9ajVlPVNvKL2VfrU9B3K9vfvmoj1Bn4s9hp5/PWz6ozysjRa98qKHvZB4hr2A
                      BcM78zNwvV2wY73A6Q682mF/PSw89TxAAmW9eP2MvciMyzwB9YM9xQaZPW1gur1OoFY9Qrl+PRbJ
                      Mz2a9im9pogPvQTHhL1KrQa9/4y1vT8er73jPz+90D4OPEU/y70ocGk8SFbMPEL0DT0DDck9Z0nA
                      PUx4wbwfyLs9sOgSPEqdCz1rZbo9eouSve8aoz3YGbW8SBjEvLiL47zGgxs9+twbvRJdyr3o7pk8
                      1PSIvALvHz1GxRC9JutqPaKKXz3Vx4C9+SzGPWCsk736k7C9MhU6PUN8hj06azM9YPlPu7LLur1C
                      vi09LTWVvQBw3zr4zdq8aD/mvDD0dbyRM5w9fn5xPf66Yj19Iy+9YamHPSKrFz1nKVi9MKtBvHDb
                      PL2AtlO8QaCTPdjHt7yeEUo9Jdu4Pbbhqb1dlIG96OBxvNAgELw1tro98h63vW1Ckz1ObVg9OFXH
                      vE4dSD2pZog9cSOwPbIpYD2sega958g0vVFuhz0urxY9Ci3AvZOJpr0q92u9PSCivXLOFz2CF0M9
                      bwm+vZhfyjxuTXw92JZwPOdmXL2gswG7hqI3PezIzLwSviw9ea+tPRrqHD0IeLS9mvttvTAPNr1y
                      7x89KNijPBKpAD3zi7E97VWUPd1xxL0iHJq9zf3FvVWAs72TmXq90IxIvbF6qz0QJTM8TcyePXMH
                      rT2Ume+8ZbekveB9nb3ilxo9jRxpvejC9rx7dKq90JbmuwU0qT3k2tQ8VzdUvXUplz3okCK8AmJS
                      PYoYkr0Erf080qlxPdWKk706jbW9Aic1PYkPwz0w1GK9vskbPQJgNT2pwcs9h71IvTsEnz2wvSi9
                      QLK8PGBb67ySmrC965GOPbv6yz2aKxw9mBgLPInQyj0Yyey8A/99vVAGFbzK0FI9J6NIvdLhq73y
                      hlk90ECSO5cBxD1A56m8y6KbPVXMnT0U6Yq9rC6lPJLLBj0QeUW8yhy9vZc4PL1eexI9S6SuPYOO
                      yT3YPsi8/QPJPQAe1jqASbU8Snk/PQDHPbzk9xG9YknLvZ53Fz1yiig9YKmFO3M7y72HGn69QExT
                      u7kxhz1ntCG9XB6LvbKTlb0QSmC8/UNzvW0cqD1w9n+8NCyMvROvyb2nebi9b32+vemLlT1sJt68
                      2zOZPcPlMr0TkWO9QPTqvBM0dL0q/ya97lQ4Pbx0Dr0Cr0I9WsMxvWzOGL3057A8pZaavdcRxL2A
                      KkG62VmTPYxrgbwRkKk9TwG0Pdo8cD2ouww8y1SZvXNBI707A7q9qiazvZu/lz27SZo9x4i8vYBc
                      9Lyq4U69svNWPeCSS70g2U69iKunvJ4IUD2gv6C8qm/FvcP3mj1CTyY9yDu0PIywirz63Li9INVE
                      vecAOL0AFVw8KrC/vQB7pzkdncu9sCczvMWKxT3DLrO91swvPRYSeD0wWbi7rYrFvZqyRj1yVlY9
                      KJP8vJOLwj3uSFs9gNMhvAFWtD1wUMS93eFNvfPYo70wUJO7ngCnvYA83rpAwDu8UyFrvULCLz0Y
                      Dri9kgBLPa2ZwD2b55a9QPtiPOj1xDw6oSW9yI+ivKhOvL0LzI+9TiBnPR1QKL2aPB49UneAvZOm
                      qr0/ELG9qJ6XPHDGRL2ClQE9UFPIvVnFtD1/lY89p09PveAUHr0Aixi8PSCVvVBdbbw7ccM9YqGn
                      vTSUyTytmJo9MB0WPHRns7yQUL+9AHdhvVoWaz0Ahoo7QI8vPIdgwT3Hscu9RwCwvRA8Y71omzA8
                      EIIjPHZVBz2oBMa9OYyhPZqdPT1A7Bi8KSKrPSCxhTuV77S9DmJ4Paroaj2vvq29KlYQPToPdL0A
                      jaM8HsQJPRnCkj2LNZs9KIzPvIwH5rzQkL29MNROPDLeUT3Y5UU8YEIdu3yP3DwTfRu9/Jf5PEX4
                      u72KCcC9QpBsPYBj/Trs5uE8U9WTvf4ZjL36KjE9QYCPPWN6XL3aio+9Qk0ePcf4s70aeIK9kK0C
                      PMBcDjvIkpi9gMKFvBIVXj1uPDA97ixTPUANgr3A2VO9sW6BPcDmzbyirmw9dDC8PJ8Zxr0H0jO9
                      BsmVvdTJizyHMTW9AibMvdCom7s+qS89LJvlvIbThb3dS4G9KKGwvSVnj73SDXg9zBKKvAAPfroC
                      Xh89cPN1vKVUqz1XpXS9oWWTPaBZuLvg8LW8INu4u4BG97qQ7rm9gHmKves4xr0AeqI6sKJNPFVA
                      wz34AZe9cC1lvPK/IT2yg469TVuAPeYnCr3YQp69sHEHvG2ukT1puMc9QM3/vAD4Y70xO649saKw
                      PUwIsbyY5Ie9gFxvPKDhuLujZx29bAHvvMBbkLx5Cpw94KuSvTb8CT1xqLc9wFaKuubuWj2pdsg9
                      8oBHPSpoyb0zepo9WswkvZnRyT0AJwu6c6KevWCPpTxsuZU8FaWtPeBOxzyu45u9B3F5vcsvvz04
                      5bm9YWi6PWunjD2g1zm9AD3VuTRMurwySBQ9ttoSvbd9u70iYio92G5aPEUztL2Nnlu9KE7PvFpA
                      Sb1U4768AIuPObb7DT1KD3Q9dMqXPJDDXb29+kK9BDYTvYxF7LzaME69LHr4vMA4Ebz8Vwy9YCbn
                      ux0jvj3apjY93VWRvRiOnLwAGka9WnydvTcQQr0g0eQ7EnR/PR2dgr3ibTo9kH8hvO/6hz0wo4q7
                      UEL0O9rSe72jjMG9B0u0PXcPxD1Kxnk9wOfJPNZ1ez3WijU9Z0y7vf79ZT3YQpq9+oUUPe1HsT3T
                      16O9+jllvVTfhr0Cf009hZ6jvZi9p735FI49wLUkvGjOIzww12w8wiTJvShYGzzXPim9ADOWvJJB
                      LT1oA0c8s2d0vYBZBryhA5g9gXmHPZjyKDxYXEq8zFuIPCTXA72gmrI8vlOXvYDSBr30Nb88TTqR
                      PfqJsr3ygVU9Ro6XvSnkwT2A0+U6KK9PPCobvr1Y4rc8Vh8LvTdMiT3MJ/w8c3EpvbB3S736vpu9
                      kWmqPTbXbz1IQfa8kxg3vVuonD2FtrS9AFq1usDtLjzUha48wFDhulhRSDwxoMQ9AHGzvWaXqL3U
                      ddw8L47EvQ29kb24+8W9D7PLvSxJujzi4z49tnilvdoWeb3epXk9IgPAvUC4HzvNGbE9gQ+lPXHF
                      lD1Se2g9epFjPbLhKz3a5BS95P0AvSBbxTzXscG9WgtCvbRUxrz1QIS9zNQQvbCtU73G+p29jf2h
                      vVBewL2CrG09rV2ePTIdi71HlMo9IKmtvWU7lL3HgGy9GfqLPdlEwj1TRnG9PrtgPTY0JT1zZT+9
                      Rr+HvbMgTr0nnZw9gAHSOvqTLL2Fspm96keKvRwEDr0RDaA9ej5+vZqQJL33tLw9TOMLvdOUxr0A
                      kGS4Fwa7Pd+yqT1iTWk9oGWbvYNMwL2M8rA8uG+JPDlngz0S0yc9axupPfJZcT3i3bK9QFJhvNhu
                      BTwAYW469vcKPQoJm729vZU99b3FPaCXtjtMTM48AHZYuZ2fTr3hqKs9cFSCvcOyPL1EKfo8yLWT
                      PLbJJj0KNwA9c7iRvaKWEz2gTbe8QuR4PXESgz24+sa9EjE+PfnglD1SjE49zoKWvcAnd70mway9
                      vq4hPTBOEbzgbAS9v4ubPQ+Ioj395qI9diQWPRMARr3DQaC9riZqPaP5lj0aZho90L7Mvdjyf7z2
                      E5O9ollJPV/Riz1NS2W9k2WrPXjfkLwfjra958a6PRmZoD1Ejuc88posPYjuiL1IvuC8Gs2/vRI0
                      Yj2wCcq9oBjpu2ACS73QIqM7smYfPX2fkr3SVIi9K+WRPXB5SbzipAs9SGiIvIJ+az2SlSg94+Sn
                      PRECjz2AbqE8Ec6EPTBxCDxQi0m8pTWePVDqRbwComY9ceGSPSNLxb1YJxe8+pBBvSgMaTxZ7YI9
                      r7DGPfiEjjxVXMG9wHRBPKCD57s4F5+94nYbPQQq+DygFZS9YuJfPTEouD31m7Q9bfhNvXDhwb2o
                      MrQ8klNzPWt2uD0VvsW96K5CPCJGQj2a2KG9vV3KPRaCp72c1wW9MF29vdJYQj3aJWm9Ra6bPUSI
                      5zykQOQ8GLW0vcMXnr1fN8k9MYK2PdzXzDwQJVK87Y1IvWy1wbxhHok9njSZvX18kz2b78u9mCIy
                      vIitujwYhby90ENNvXTmo7xAY4E6CgbKveaxbD210rC9BBLVPFdorj3yxhs9KPR1PIcKer0igJG9
                      z+mUPQUQkb1T6qQ9zx61PawqlryGTBM9QKYsvB1Aor0KM1Q9AoUnPckJnj26Njy9Kd24Pa0VP73Q
                      /LA7ADF3vILRZz2HqLc9FDL7vJ9tnj2CR5y9MMxxPOGunD2U47W8wLEuvdrBeb0YWDk8wGXyvOL2
                      Tj24xsY8sqihvSv8uz3tZMC9VsQvPZjxr71svwS9YMWdvLzGFb1QkUu8Rp8JPeBT/7yAo+M7UDy2
                      OyPQR720zP68xtQCPWHwtT0AH7y79IyFvZ+LnD2gOxK7ffaRvfcMeL1CyVc9dEqnPFtFkj0LBJ+9
                      zLQEvflivD0j6yC9BcOyPS7qFD3CaXA9JO7oPOCvkDtqal89M2+dvcdNnj29TKC9svlGPWVJtL0a
                      yis98XCIPSiEMbyGNyQ9ZaeOPdgHqDxrwKs9IT+ZPcQLF71o4aa9MKNjPO7Xob0plac9LhtUPeZG
                      JD0A+MS62YCJPW21a733yFa9PrhJPfThDL0+wkU9y6XJvYW7yb39D4E9L2CwPejG2rwSG0Y9MTeB
                      PcYKCr3alWA9yGCTvO0FuL3VSYk9BOrZPM5RUj0VksK9ezKlPWDkOb3fg8S9DQh7vRiPmTzC1F49
                      4HWOPI2AVL3trSu9fe9evfZ+EL22y6u9CvcNPR46eT00f+Y8OCSSvbBPybvbTcM9jU66PXNDij1g
                      kxe9JQGJPZuyob3EORS9yWuePQd9tL0Xacg9QEEsvEFIuj2iU1c94PiBO/T26rxInMg8Iv9XPR14
                      c73LeZe9T1qOPW0piz2gG8W70qw9PSOWxb14U6M8vf/IPSjjyDyYh2k8afqAPRlMjz1N5J09Avus
                      vQqKbL2gNYE7gDlAPFjKSTwYOS68mEiGvIZlez0B6KQ9Jg0zPRwZFL3tCKc9AFqpORvbm70YYSI8
                      nlKYvVEssz2A9k28Fit7PfqZLT3AfZS9q0ubvdjbp7wMsZi8EispPSC6n7xnbsm9wGx4vbfAbb1l
                      X7s9krx0PRA9Zb2Qij+8Un6hvcrFGD0cKs88eFi5vXl6vD2XAcy9v8SbPUB7ebzpaJ49K9G9PYDa
                      lbwKsWa9kfeXPUAfQb1Zjaw9nUCUPTT+nbxgL6E7q2/LvVJeLz1gyz69u/20vQBDP7rTWaS9MEhe
                      PLIiHD2o87S9aOfAvd61WD0Tira98BkRvdDuj7vvPJE9d+c5vZFGiT0c4u88MK7Fu4urlj2C0qK9
                      J1qUPfGnvj3Mypo88BtJPACK6TsA9Jc4/XuGvUAXvr3h1YQ9DL+kPPO4fL3oA728AHx8ve4Qob2U
                      RtO8wuO6vcEysz3KLwc9eNvHvaCCpb2QLwa8WRG/PfOty736k109hsWOvcKVEj3Wlmk9zz7AveCe
                      vL1C2Fg9Jw2mPTlznz3t4z69hLXnPFRkzryBUYE9d05yvSrzIj2gjai7kpNbPULDYz1I6aI8qAU7
                      PKpnub06jJK9OVaoPVHckj0Cwh49TAeLvHNfNL2Q9Ji9sN8evKuLvj0KvaG9dB2vPH1Riz2U39s8
                      nYhdvdlFoD2QjJe9dotNPVaoGD2sCKo8FkwRvdiUMLyp/449pVKuPTaKBL0s6MG8XmUnPQozWz1Q
                      LPa7f9eXPWJ4w70jznq94Mz9O0d2RL0XKWy9OsWQvdiYsLykquk80MVDPG1idL0SJ3c9LR+YvWKi
                      RD3f74s9qB1NPIAlX70JjMw9U+aXPYAuZLxHSK89ZXKIvVQcl7xXpMA9oA+XvEC2rzyAcd87Qudk
                      PWA3IruC/SI9jP0SvdBr+Du9grs9gKeOu94VaD1CH3o9ihmNvdQkA73t4Jg9cDdzPPYtpr1uE009
                      gvZMPf3eWb2UM9e8ogQbPZDVHrxJ7b09J/i3PTucqD320Xs9e1jGPRijrDyxx4o9E+NovV3Ejb1y
                      9S49IJWYO8+spj1Y8Oq8EyxqvTbNCj1zLpG9RkIYPRMUTr0JEME9F1+tPUDeWzvHLyG9HTUfvZgy
                      cjy45pO93YM1vWPYSr3hmb09IkKTvaoPSz2i52g9YMDrO9W1vT3YxRC83wywPa2mi73SEzk9HXmj
                      PSDomLx/o8u96inJvRIuGz2HcY49McqHPSCF5DsQ2Sa8oTutPYb3IT3g1Lu7gJbzOtj3YbzoGra8
                      ItwIPYIZBD0YFaK81KoKvWMtp71dhcy9AB2gO2tRmL0G7BS9gCq0uwxp9ryKFwO9IEGfvZ36Lb10
                      bYU8LT2CPdjdrr06AzA9mHWIPFDLZTzSeF89TKyZPP5Rm70g/YE7ljoDPYeBL73BdYI9UL4RvT/p
                      sb0PlqY99/4qvWqdVr2g+0a9RMQWvdI2JT1qtcG9XQ6IPWLnIT3YGyq8MMx+vTVzw71rxKE9Z3Cf
                      PVD+LjzYqA88df6cPXI0eT2VeMm9MkE1PWDg3zvxpIQ9Ltk8PasLo70+a4u9UCPiO10hI716LFy9
                      Jd+GPVDFMLwCKjs9YM76vAqRrb1DbqE9WP6qvOo6Cb1Xqcu9IoYyPcVusL1tu8u98NVLvbsOvL3j
                      wMw9fskBPSmwkD1G02c9AKQZuY2Kc70o4k08IJK7u4S7zTw9KHq9rmUxPYY5OD2ALKu9BEbSPIDJ
                      Ejr0OLe8hKn2PNOwjb388u88IdOjPdMOpz2CPDw9NkRZPRhZ67zGMn49/c1avUsskj0S7iE9I3bL
                      PUsPpD0flqQ9WMb5vL6Yhb0DxbC97Sm1PXtIw71QbaO9wMjKvCAEer1c29E8N1s+vdBtS7w6mCg9
                      xHnvPDhcy719vi29QtxbPffYvr3NyVW9QCp2O5DWX73kPdc8GbyyPcJXAj2YFFO8elB7PR2vsb1J
                      eJA9X5SZPWxmwbzZmK4901W7vVTY/Dzo4p+8RSm4PUr9HL0QQwm8+TSqPRDWtb10/7e8oSO4PV1X
                      ob2isRU9l/+GPXDZTb1dcE29NNGKvWp9Yr1B8Ic9QXCLPcGEoz22D0k9gLocvSgrHTywuy+9+VeJ
                      PdPrIr0ZvJI9+GSTvOxsrLwbh6y9DWdjveDHj7uh6JY9LUwvvUg60bwXO7i9BbSovbtzqb0q4ZC9
                      QMxEPLpjcr3l77O911u+vQAaUry15q09RmUQvUC13TprMJo94G0YvQfOxr2Q0iy8nETXPKC8Erug
                      HDu9c0B+vc6bPD3/JYc9EaCyPUrncz2yEai9YHUBu5HorT3dbcs9+gmHvTzh2zxq5ra9H9esvZjx
                      47whqMY9n1ixPQsqjz2vV7k9SpFpPc4jLD2FwcK9cIhfPPK9xr0AVIS6VAObPJvXvj275MU92uGz
                      vdcXsD0grwm9AHhvOoLTlr14FZc8gMkmvILfND1CMk89YPtAvShomzxuOpO9V0C6PWAO7jvaiRu9
                      M0OKPYS65DxgCk+9yqAiPYUIi73AEhG8RJkCvaTugb2q2zM93V5bvZ8asL0LVpg92W+NPQZHUz2Q
                      UFC9MmDEvRTwzjzUIZm8a/zJPVfInz3Q/S68AAtkO9CGlrvKzJi9Z3WSPQyy17ztzGW9VJiFvR1m
                      ML0V3pc9Xg2fvT0bkr3DRbs9PWGivc55bj3e2yQ96qpvPS1Sgr0y6ks9KPOCvX2qmL3T0Zq9c1E7
                      vWJmTD38+Ym9fkF1PTPFm715nMo9QGHUvLo+qb1J7Y09K4+UvWLMcT1M8JE8pEPPPHu1sT3o9MO9
                      mJSSvZRgnjw7Z789+j5APbaHEj2cA988I0J9vYUyl726M2Q9ost5PScNHb3J8Ko9co8iPVM+lD0Z
                      Z6M9g2umvfoMqb34DIy82ZWIPQAKfrmAhVY6qCE3PLBJwTsqu0+9en8Evc1Npj1R2bc9IJLzvDAG
                      lruPX6k9T6e7vWmUmz2W+xW9Cc6WPVq7NT3gtNK73+u4vacmZ72N17y9wOqwOt26sT3OeoG99o8e
                      PcKtOj0sEJs8thdsPc2ZHb0qbUw9iqFXPXwv6TxZorg92LsbvFf8xD0Akq+8ddC3vajmrjwHrS69
                      aGdWvND3kr2wozs8NxJNvRhGCrw947y97q2XvfPQj72sWYY88gF8PYrkNj0LdKk956tave7iDD39
                      jE699PTFPGw4mTwAmxm9gVGYPXO2vj3WQpm9stl5PRfyuL3Qk6S7reUmvSD3BL2AMyW9lKOlvOPz
                      yj30s9G8UwY0vfS6nLyhiLI9WEJCvPBaxL3FQoO9YJ9QvVUkwD3Qu0U8ata0vaB1v70qJ5W9FAH0
                      PM0qbr2AgXY8x+S/vYdnR70cuxa9XuYUPcFvij0Lt6q9mBRqvO07kD2n67W9AA6PvDC8c73TtqQ9
                      6PivPCU6ur0vJbc9StKZvXoVej263Qq9N5IhvUupuj0AiI66Qw4pvZNStD3NbsE9DYC/PayNkbz0
                      c9+8/8KsPTDPWjxEI+w8MdejPXIUYj0wi+m7cMYzvO1tYr33hVq9fV0cvUYPFD2HtbI9sspWPQ+Y
                      tL2yrYy92ILhvHhOuLwgPky9YJk8u8BT2LyA6YI8gtxkPQ5rgr0+bE49IPOzvZc9R730Z/a8ZnxI
                      Pd5AKj0iMay9sdGhPVj9ob30mYK9vdG0vaBYnr1waUK9y5WRPWjbrzzajls9rHOEvUAEPLtiOhs9
                      voKfvQCA1TugYoS9SduFPQRe1TydfVG9YnUZPQTQhb1XAU+92AmVPBDdEDxuK2I97eqVPSztAr3q
                      Qq29aNfavI2lkD0xkpk9AOp/vBbmUT1Ucdk82M7yvPFUhD061GO9jO2Fvb1LtD0w2uS72xqePWoy
                      YL3AIJu6wvQaPfOBrb1RILc9UjkBPct3hj0+ITk9rHCmvFmmhT2GDks9AL3GvRgWyb0iExI911iF
                      Pag4TLwg24Q7IHnZOyLMpb2AroY6cDuVvcAFCbv3iUe951ecPVtnsb19ULu9yjgzvYC3Pr3gTt+8
                      /9zKPfyg2zygAbq9TemrPY/Kx72DqUC9gDauuyMfvD2ueoa9gMVUul+Vpj03pI89kvmfvazin7xw
                      JpK9XZjKPaIdbT2NWqI9ul+xvc0hob0Ysjk8pXPDPbBoKbw5CYA9A0GlvWP1OL3AA6G9ahnGvQBl
                      gTlwhlI8R+o0vRh5C7y6/DY9vpWkvbCVYzwYhK69jZWVPS8Ynz1pq6o9mqpsPahkubxiWDc9LQaG
                      PXoJXb2467S9sm9hPfOpw720Rbo8A5azPcOmQr2T9nq9IYOBPcCRLLvA7oW84DXovLoltL2iT3k9
                      dmubvaGzhT2f+Zk9sFYWvepilr1geBA79de7vXvkxb2NXra994+cPaWEjD0mXQk9smKwvdB39TvO
                      8HY9wtQgPWC9J7u6vE29mOBmvA2gMb3SQ0Q9yh3CvTctML2MqLO85JbgPAC0SL1PDLa9L06BPX7D
                      Bz3jSVi9GBaYvFZgKz03gjW9lcCpPUKEVT25sJk9TB/5PJj2orzIgMs8xFXpPJARdr1M3LW88IZJ
                      PBPVor2sA/E8Ey5svViZIDzQgMY7n/WAPcoVFz1EJe48sHwkvEA8VTye2g49Q/69vcnbtD3BTsU9
                      E58vvXTY9jx7Vpu9/n9XPVDJ+zszFz+9sCVLvJBWN73SdsG9p2jHPYlAlj1zaGi9MEBEvFC1Br2C
                      Y8O9XnwCPYBvTzzBO6o9R2G7vZYxez2no2u9uvhuvcDCa7wduma9cHBcvRSPmbzDdSe9QF2vPLEE
                      sD0miAs9apATPaAQYL1AtvC88NpKvYMxR70IULu8vspZPc+7xj0Prqk91OTJPJ1uKr32Hns9OHjO
                      vGm2hD16DSG9e9ilvQCS0DkN46E9uaGcPRMNYr0pbJs9CHyaPDRm47z0jvs89IerPOrVKD2O/049
                      5lIEvdCkyr2a0jU98jJsPW1IKL0ALZ88oG/HvQIJLD3jdnm9UzOjvRdpy72Sago9pK7VPN1npz3n
                      1Ey9f6S/Pcvynj0Y73C8ylEIPXhjrjzQvCe9UAWkvZLnND3nSJY96ICAvVLZvb2gjJ69DZdjvVDW
                      M7xqhTq9Xv41Peg4tLxFgJw9IujJvegYQ7xbb6i9UOHQO1BTnzv+3HI9wJNHO6CCMTsilGY9G2yW
                      vZQOjbxqyzC9ENRfvP6+RT3GNRa9jvajvYMHyD2q1gE90KTfO8wNvjxhM609f4yePdKAPz1Csaa9
                      mvIqPfCUSLygf4i7CwOPvfrPD70Y4om97vVoPbCQDbwXZny9ZrAyPZAMQrzteqU9MCYmPLSenrxV
                      08G9AOcXO4jSsbywqcC9YFs5vbOZjj3M8dA8TFoIvd28d71AW1m8M1ygPd0/OL0Vd4+9CDa9vAZq
                      pL0iwSc9QB5Xu3JCWT29qsM9h+dKvSiueDyzd7e9CCeQveCexr1C6w49s+Q7vZIoMj1SPgA9QHlr
                      vFMRjz0HubK9A6iJPU7ZqL3qoEK97eV2vVpODD0BpIA9U3a4vaLZIj0pO7E99/6bPbgogjwahHq9
                      SqE/PeUrnD1G0h09jVtFvZBLlL3dVzO9UnFDPSAA6Tv4LYc8zg+JvW0PhD2t92W9wgatvXgtlbxs
                      4vS8ndxfvRgIg72ALns6SBOtvdGBwD2uKGc9UypmvYCC1boCSY69VE6bPANkVL2Em+Q8W6y0Pei1
                      E7y0j9M8dGXcvDwoCL2o5n489VCbPXm8nj2Ene48qGwFPKIeo73seAe9K86rPYZQkL2d+X+9BeSs
                      PbyV6zwmhQG9RFD+PM6DcD0A3z88c+qHPaAoBbulr7g9eiA7PYALwbxgA9+8UBq2vRpFTj155oI9
                      AN02vZ0Dx706mws9EhsRPRp1Ab00Y7u8csF+PWIAaj3EQ/g8CJT2vGD43zuGWHk9c/rIPRdItL0K
                      I3c9otxDPQCT3rkAhqw5OP7Hvdv2uT0859o8Nzc3vYB0zjuwiEG9GtECvUBxELspCMg9hPiDvdSv
                      iTxQ1aE72oBqvco9bb0AIly7IKSWPKLvIT3DaJA9AIDzN2A8/zvAnNk6EFx4PACecbwMldA8OhaP
                      vQi46rwEdtQ8ePS4vTjTlby92z29SLH+vKg4gL2GbGE9n7+XPcWDqz0wjYs7GwOFPT+0y71KHwI9
                      aIW9PEgA2rzd14w9cQ2bPSDbpL0zN4A9+bi/PQ0Hkz23ije9PfeRvZr+TD3QTim8s485vemXhD07
                      RcI9wOd3Ox79dD2oI2c80OYqvRh83rwAt++8NILdvEmWgD0sW4I8yC6CvegavjwQ1nQ8uz2OvfRg
                      zryX/B69QC/lusiUxr3MQci8tKHhvAPoOb3d/aq9nsdTPYAk7LuAFkC8SBGyPPCUFjyOVEI97NOg
                      PMeRnj0Mju+8M2SWvY+Tpz0UOgq9yPXIPGKJxL2MXsU8kMwkvJpFRb2HFcq9j6K9Pcy++7zeXZi9
                      KGOFvUYaVD2oYNi8QFPXupb0i70SZo29gGHtO4jnxrzpe7U9uvYDPaU5vL1KXGE9z8PFverQCb2j
                      mHK97lURPWddH72AecU6Qt11PYC7iztw6228UJKWu9rvlL3Aw0m9ACvZObzAgb3Wi0I9eh1DvXBq
                      e719Kzy9mJYOPPZhjb2o1tG8tlQIPU5AJT0wC2e9olxkPYoEFb2gk9m8amCGvYRIjL0Ss4u96BuT
                      PLASYrywe6K7qe6JPYB9XrwjI0K92nekvbghsb2TuZA9WiIuPZdaZL35YMc99Vq9PfNTSr0le4q9
                      0xWQveyJubzTgZY9Q/aUvfJ+SD3z68S9pWi6PZp8Hz2N+Zc9Dj88PbYQk70zxJo96IcJPLTsDL29
                      3pi9AtpTPRpscL16a1Y9zH6tvN39SL3pnoI9EE41PKjqfjyZRqM9vYJOvVhCj7yqQTG9gJZcvH92
                      oj3DuXC9+6uxPfcpmT1AX6A8mWioPV52mL1DniS9Tbdwvcd2uT2ybmM9pl4XvfTv9rwx8Yk9SrIp
                      vYAxkb0STbu9wOt6PIDz0jsfeLC9oAo1u4zIwjzRRro9d52IPd4raj36Cj69k5ctvWByjDwzVoc9
                      ex3IPTSW3zxHwKA9Xc+6PcCUPDyg1hW7KtkRvV5vAD0Jn7w9Yy2sPcIGhr3Mrv087gcePRDeu731
                      UYU9GgpePT/9vz1WMQA9DAmJvEAnw72UO/s8MOjBO1Aadjy+GKe95/uDPZrRDL1PooY9dklEPRj+
                      wDyw70M8Lk46PU/xxb126Zi9EhYKPWPJVr0gu8E8iC+uvaAX5bv1+4S9oMpPOzhjxb1JCMI93UW5
                      PZqjHb1wxyi9cca4PbKQBj2XtmS9+RCbPQCDCbrAoNW8Z+q+Pfd5LL3SIzk9gCBWva2Jwz29bsy9
                      YP63O3SQgzwBUMo9LF6MvS3pJb0MOJs8HyW3vaCkhjxUyBa9DLmrvFL4Nj2IW429pqALPVhLhr1q
                      zGy9aJulvQxU3byommA8Q3xjvSKcKD2aQRy9kHQ/vGJIaD31XZM9kyOYvcF8jT2d0Um9gpY0PWLN
                      g70n97a9ELViPKz86ryAplq8f4KuveOEnD3jiEm9tS+dveIHGz2w+ZC7rmsgPXeIwT3acHQ9ufiF
                      PYwdDb1cQvw87Ee8PHO6l70e21U9rJyGPJY1BD2j53W9s6RXvVfLrT0rAJk9n8m3vWCsoDztomq9
                      4FLIO1MAnz38mAW9efG9PYp9aT22HIa96bGnPayvuLw7iJe9dzTDPZ3hhD3j0ps9GKSiPJq5bL1C
                      fmk9EHeFvdhPBDxYjqK9oLjYO0hst713AjS9GIyPvRSg7LywJIq7LOPrvGBA5bzSqqa9rKbTPN7P
                      hb0GTzw9GCK9vACwwjySPmM9UJAGPNQi9LxdWo89JhYGPfjb9rwKOAa9K2WSPRSN6TwgZRC907jF
                      vbu/tr3eu3A9uEvLPPtPiT3XccM96IlXvCrjEr1mhRk9XCTxPJO+Mr3WzAq9MkZTPUBOdjw91U69
                      MBksvFbDVD3NhpQ9UBvTu0NPf710SP687AH7vL21KL2wEG88Wx2SPdtAwr1D6Hm9YtFsPXrpnb0e
                      Ehg9Kn1KvXZ1cj2QmVm9DIfkPKheYjwXjL89jg9pPXc9uT1xPcM9YtIfPUHwqD10Nti8aJlcvG9+
                      r71bl4I9UEeZvZ9Dvj0fxYc9Vn2TvVn3oj2Gnoy9gJajuidQnj0+1mg9lxqbPYAPh7pAIGa7YK5X
                      vVNSQb3mMQ89gGWaPMDHPLw5yb09BWS7PaBOBrvaEzg93Yi9vYB/SzwBDcc9kbCVPRQl8rxsiIy9
                      9ksTPei59ryiGX89mmBqPcBborwg2Lg8oP6lvMDShL2mqKi9X9LJPRC6QLxofq48HuU6PVLgfz1A
                      uns7R2JXvXpatb3AlqG6viqTvYDMtTuIZ5A8U+AvvXReGL3Q3mU8tNmCvTIGLT3jPcG9Qyifvdfx
                      tb1p1749gK3LuzExoT3qdlm9sPfQu1Ts1Lw0n8Y8x/VsvaJbfD0Mrb28uOn+vNCJa7x0i4C8Hept
                      vfrPwL0hIo09OWeNPY3Vcr2Bibc9mJtAvMaGYT2BJcc9v4WbPY3BhT1gKMi86DBHvBQok7z4Ass8
                      YsVmPXOlUL0wbPm7mBybvaAezDwkdhG95OWBvVOflb1QoPS7jaiJvWDWCr2Y2p29sKscvIqTWD1j
                      E489oL+Cu7tXuj30WZY8pZunPaRiC7205Ow8ECdqPFe0V73GclA9DKvdPJvdiD3qLRy96sJTvV+Y
                      gT0qm0K9QK1SvOyq8zw40Y28K5eVPSzS1rzuVj091yhTvctRw70MnKM8AKoXvM/bqT2tsMA9oI6H
                      PLVEjD2wSBa8QDGmOk0IjL33txm9oEqpO4IAWT3Pfca9uGiHPBfmnD0A5li8g2N1vUONjb0j/6i9
                      YoWTvVSHjTxU5rg8eyS2PYgehTz/J5U9DWypvb4YEj0C3Ya9cEltvaJlZT23/nq98gZvPcxhgrwg
                      Cka9MG1IvYxj7bxQrPw77e1vvfKSlL3Hd2C9QZKpPRfAZ71KZhI9oHpnOwBHz7zgyPQ7kwqlvQA4
                      W7rnkX29qWa7PQCsob31Jqu9dTDDPYQt7Dw1cpM9aqgbvaLOiL2q5i49SITIvLCt3bt382S9YDCa
                      PL8pxD0wx+S7Y397vUbefz1qJDM9v2mPPcnOrz1AgEc7Ctmcvab+pr1nzEi9eG+LvKhSrLxv5Jc9
                      LoNqPQusiT1xtMc9OoJ4PbMEwz3Nnzi9WIv+vFHAvz1n+b49KugCPQDW37xGJi09WaukPTRan7yA
                      WQW9Nyy4vWCHvLzrQ489fTJXvdXgqT3ABp+6Bz6dPTAqjb3yr8m9SqWgvdB8eL3FtYk9GNhIPF06
                      qT0pI4o9DYGbPYqnt72oNRk827uTPT3NhD3KJhA94rk5PS2LKr2dOSS9p5qoPc3yrr3+9k09dqFi
                      PcC89zpcLBO9Ac/GPQC+mrpg7w87BwKyvedMRr13ibU9pZ+SvdDZVr3n+ye9SzS1vTsTtT2jvXC9
                      0vwbPcIzQz1AMGa7/OMNvZvMnT1jv1S94bjHPbN5XL3sWYi85weePf5VLj0tv8q9za+JPRUToT2o
                      60A8ogtUPaYDBT36KRK9ACSGut2RXb2IyYK84/Y0vTBKHL1U/8u8k0DIvTpFTT2tJaK9SUCMPeQ8
                      Ar1C0D49fWG0vYrjEL0arDU9J4divX+RpT1AGES9crkoPQ32H71ueG49nRCEvTAiC7y+opu92JXF
                      PCh3PjxrGqO9qoAkva7AET1gaJ68IfetPcfkiD2eJpK94Me9vVAKSryQxwu8GZ26PdCvYr0CnhI9
                      DxvIvSDU3rznjTy9htVkPfcCiz39fY89lE3GvKDdQruBCb49Sj5Rve9qrr3oJV48fpooPSvDpr1Y
                      vzS8gH/fuyW8gr2mvBc9NA+uvHfrxb2W9gw9ypKWvY3PZ736yxe9+emgPcDqgbx8D+o8zFHwPGFz
                      xz30gPe8bWo1vQVaoT2YKz28ykdbPTaJor3ifko9ALjlO8A+Wbx8joe9QcGrPYm4lj0AjHi8stNc
                      PXCcO71Mrpm8AM0pPFAFtbuLO7o9ELdFPAjkmjzvoMg9iKnuvGhKFDwwP7W9cAAWvLWTkb3Bgbw9
                      ABqROpCqcL29MEa9WopxPYrwHL1q2E+9Tj9xPcAw47pgVdq8crpbPSIJWT3azxo9AkRXPSCf7byV
                      gZs9oMWsvezlvLzVZLC9oQ2CPWJurL2saYA8KpAbPVh3wDxg/2+9WttFvSqBUD1QbRk8UlsBPYMo
                      Nb3RZq89WkcfPSIUIz2X86s9VHLfvEbMfD2ZbaQ9shiHvRPryL3DRKC9LaWsPVlUkD2Uy4i9gIIS
                      PACop7hYN1A8Mv4oPSC5tTtqqj69AE24ufPMnz2E2tA8cj4pPexrwjxRYIQ9VjchPbCVNDw42sq8
                      hGvZPIDTvLoX9sK9zUC+Pcqafb3KpVa9oOYWuyhKRjyKZjU9NFcQvTCxP7zyvDo9jDb8vLCbjTtw
                      GkQ80y8hvVqrez2V2qu90nlaPWtehz2jvLK9yNLDPKKCYz0FlbG9oKNmO7uvkL04sO+8CL+qvfAT
                      tb3Rl4k9wrhrPXewxL0oGq08jbsqvQyO8DwAMJa8V6ErvT6zPj0wxDC8NZG5PdA5cDzyDGs907qy
                      PZzq6jzYrFM84Gj9OzWgxL1qvka9sDxevLCZiL3Qrsi7DUCZvUBmPDsYnuu8T4asPQDrVTpn6KU9
                      Q9auvU6ZFT0DDHK91F6EvQhks7w4pZQ8tAEXvfpkSD2sPZe82G4FvIcboD19bJM9Z8OiPdRXBr1h
                      vYQ9gHi+OyzK1jzpEbw9cdGIPc9Rkj3eeWs9MEgZvcfPVr2t87O9IXarPSbkaz1U9pM8rpcKPRjd
                      ljwD2XC9MDYwvdPYnL3SKUY9eBT3vIFlgD3U85g8RBaIvWMbH70YvFu8d6oivR7xGj3LLca9Ai0s
                      PUKPez2y31Y9aMnzvO3Puz2CNr292LahvYA4Gr2PDqI90tQVPQI5pr2j2GS9y0icPcZIOj1JdJ09
                      QJNsOwtmiT3owRa8KA0xvOjcQjwji1a90vd8PWdsjj0wnU29WFtGPJy/1zwAuPo4YCDSOzhqnDze
                      VZ+92PY6PIE2sT3g1/67bNYFvRS18Lxb0J49A/iaPWWkiD0qlFI9YnquvWXcqz12LTg94XKLPaxL
                      zTx4S8W9Ab6WPZhauL0LuKg998xHvRKFxr0yznI9rUJDvZlzxj2JobA9OFGWvMkWjT1laMo9oxh4
                      vUboPT2vMbK9w2lqvQAX0buKbZ69PRWwvdGmhD1IVsI82GEcvLvZvj1NOzq9t1N5vQBNdroXAz29
                      g3YtvfE3mT0F48Y9aFyJvbAIFjwoPNu8dBPYPGirgTzA4I86+4/HvdYajL1ljZG9m8DCPTo5E736
                      T629WOJYPBTQjDy5iak9W4+0vUgQ77wKSXS9YPMjO4D3zjrSoAY98N9wPEOAvD1oNz28eeGtPXiV
                      6rw48vy8wg9/PYCgUb0QxMu9MAFPPF5AMD2aSZi94fasPUBIQjs2nmI92Ii2PBJ/ET21JLu9kllX
                      Pb43k70HAXW9+vmGvcCaxbyxTq09pt02PYxEir1plpc9cl9cPavSxb32EIy9BrFvPf5roL1em5i9
                      3vwdPVArp72I/q88lo91PX1vvr36fiQ9Rv9uPTh9wTyVQLI9YKSgPHC9Xr1gIPO850GQPaC0tDwY
                      fmy8IBXOO2Bwirymtge9+ZGkPWZmYD1zUUW9Uu5SPQWXqz10HIu9XueEvaLVLT25Z8A9gCf0OuYU
                      fz0kU4K9or+evSYxRT29goi9AoB8PUDcDTtJUY49Xo96Pb3DHb1yVwg9849UvVCDiLsxPKY9mrOo
                      vfH6gD1vtLu96lSevRdiPr1s5sa8AMfwvJE5sz3nsDi9eGOjvKDPfb2IEZ69QNtIu4St3Tz01Au9
                      oE+PO4pmZL3jSI+9n0TKPShsub0zfHK9x++SPT8ss7239cW9oBDzvIuxsb2edCM9jIPkPN2Qxz0x
                      w7U9gG69PMctvL3MnMU8UukQPaAfzrtbhYs9WI15vPbpgL0vt5M9C1+VPYDP47vwcE29W1DGPf+a
                      yL2otqs86b6MPQxPkrxA8GW9IEPfu+hXLbztcoK987bEPdSKg7zYxzo8dqMCvSNdnj00zeo8DfeK
                      vbfiNL3S1nw9gASEOx4JaT1T3sU9MDw2vEJxKD3ovwm81LXFvF14wD1ojEs8DKLVvNEUnT39+Tq9
                      vYBfvSV2iL3NNC69UyW8PerNYL0nsaI9ckVqPX16iD0pZIo9kQWsPSHJqT1Cfg497XXCvQhKt7wz
                      KJM9nvVvPVmLjD1wjg28My9DvcSJ3Tym4B89hFjNPOgbXrw1CpQ9Uyw2vdRU3jzgxYo72MdivI3K
                      uT39zqY9mqVaPbC6MbymLGQ9wMInPADArDttQSe9hB39PP5AVz0ETOE8DmWBvQ8esD0ipxo9SArw
                      vGooTj0ATGG5ZeCvvUfVnT1YNss8znJSPZrmrr1gt8s8AEryOx6wUD2xL6o9g8u5Pao+Ub3HOGS9
                      Km94PeCvqbxA+E+9NusJPYyFh72Nunu9V2OfPQdAub2ysB09EL1rPC0Ju72U3Lq8gEL6vCyZj7zM
                      9KO8RxawvaPkpD1AFzG7WogKPT6LSD3+iS09daGxPWqmvL1p9aQ924iOvUvOmz3M2s88Q0m8PXQt
                      5bxmkls9mMalPECQkbxSlHw9QlSgvVboGT03Ije9G0qwvcUugz3BL489YVLAParsF73A5by8N1aY
                      PZINdj2WSyw9kj5TPVqTcj2b6bG9xlIrPW25nb0odYs80HkJvAiBoL1KJ1M9QHILPP/Vrb3ARby9
                      T+yQPUZ9fT36bnA9KpQ6vXXLk71A06I63RFrvYOAJL3xnYg9zB6evCAxkbsngpg9+HexPLAhfjyX
                      x3y9ScaTPWm5xT0vB689hxZSvYQY3DzX8MI9/fE7vRQJ27zt4pE9WplxvTC2FLy7jZK97HDHvMIY
                      OT2lR8M9A8OkvUWdur12AQg9u/uRPUMLoL3KgAC9K7GgPbEanz23dSW914CxvbDidjwY8BE8YE8a
                      OwCkYDqDao29VpM4PZijSrx4dZK9m2qbvdGFoz03nn29KDNlPPglsDzu6kQ9qNVAPLfcIb18Foa9
                      gwi/vUJ/fT29EZE9DdOGPTrYC730vco8gBAwvG6UMT2T4Jk9st8JPc65ID0ioMK956tzvQ4hYj2b
                      1sa96bjIPayIpbwUHBi98yOKPcogTr2IDJ29QlccPRjk47yVkoy9xRuuPWjMizwA2HU7OOGXvXpX
                      cb1y22M9qFHPvNTBvbwo7u28MkxGPaper71sSK687RzKvRCGJrygop07jOuSvEVZgL0OPh49QMl7
                      vGA0CL01ha29gObEu8xT0rzN36g9gHo2OsT0Br2AYU86noZGPa3RHr2AJsU6WD+yvWjce7weJ5S9
                      niBcPQP4mT2hGJw9FASgPOW1oL2QDxQ8CgoevRhaSjzenyc9fTCqPcKdXT0O4KK92uNFPegWNTxW
                      q5a9zLn3PJrROr0wN7A72nQgvXq4Db0kafI84IaEvQBRpzvGils9TeumPcEckD2Ij7W9gxE4vVIJ
                      Qj0YPM+8VaygvdTG2TwXKpQ9QPNCPGorJb0XFq69sR3BPUI0bz151o492bODPWKNCT3dpr69aqEa
                      vZvroL3xmoc9M4txvXSVoLy9ipy9VI2APFq+gL1Iaa88osC2vaTl7Txqg7O9QMdsPGklmT1TG1m9
                      WVm6PQk1oz0WkJC9bZWoPZm7iT0WEX899TC9vahCsDzQjcu9UBWvuyOslz3DyJc9Q4mTPfgLpb1i
                      iYK98mFfPUZEBj0VLMo9eisQPaOtrr0KUGI9KLdFvJDLUrwV7bQ9MDj2uzBf2TtBv5k9gF2oOjDX
                      gzuWrHo96TiqPXIUPj0AuJ25uRm1PSfzwj30+vq8QlSYvfS3jTyvJ6U9Y7lkvQ6nLj2C0WQ9ks4c
                      PcPPkj2Z+rA9YUvEPfRUu7z2fEE9bSLGvZGfgj2BQrs9s7dTvY2ptb32u2Y9u4ujvbEBgz2abny9
                      2LcDPO//sr3w5z+8gIKSvGgukbwjVbk9ICTXO2iFuzzAIDQ8VlEwPUBXYb00R4i82msmPdj0B7x0
                      LwK99mcPveAfqryNZou9IFmyO4CCejqg0cC8MKk4vBRVhjyWflM96v62vRN7QL0QUhI8FldcPUCf
                      tLxCfVg94HOcvKi647xgD327s79IvQV8vz2mY2g96MM1PIMtH72J04o9/pxCPYDamTyY0oi83YAt
                      vTwaib001428NIvbPKxpubxIi8E8AAtBuyt9pD0G6Qc9UdauPZQFir34e4m8eJu0vNeFhD3aiwI9
                      MCJAPLRV1DxFGsa90oFePUEUkj2Ap9M6KFd9vJocgr2AeP87MnKFvUxM5rwSBz49R+a1PXLXj71A
                      XH08laCbvZiONjzmyF89unxuvbpTXz200ey8o+BvvQwdxzwNva29IBmtvWDlYjsAPlu9J0cqveJ0
                      pL1+X0M9w8LKPXLVRD29h749qOcavCIDAz0OzhY9c2mevYjFw7xO3kw98baGPTPeqD3qwW29VHnP
                      PDpeSD2Xqk2955GFPXYng70TAo09A9Vxve2dub1d+kK9CFqzPL4Dqr1Nr129FTKTvYQ0Ab1AcjG7
                      4IahPE1kJb3WCZy9wKEYu3h5yTyGKYi95ICMvbyt+DwVDso9A8GZvcJKJj2oPMm9kJdjPLDjn707
                      OJm9jUbEveaDkb2gNzM7wIZTvOD4pL1tr5m9Qu8uPTi6mrxnVby9cnETPSJdFj3dO6g9sBN2vKC+
                      4Dsg6wO9MQPJPaD/HrvAfME8uMyJPOBHAL2wlcO9vjZqPdcxvD2AKgc6NtiHvbdTL70jhly9AC4Y
                      vJ22X70mkSs96k2NvZvaxr22uqO9fvw1PSbxhb3aVhC9MXfGPcD6kjxQo4O78sYUPYp+vb3Trse9
                      uKzYvP6jHj0AFGq9GGllvCzj97zQS0a8wDiWuqDvGrux5aE9KyyJPboiCb1SWUA90NlEvbBKDDxe
                      ulw9IP6ruwM6lj1uYYm9zr5qPQA6SzuW0Ro9Q2iNPbPcUr0VZsg9+4OtvWsiqz2A9gQ6YNXJPGey
                      hz07/oQ9S/29PV93vL2yaVE9w0GzvWJrPz0UJ/S84sPBvbeNtj3gmro8CpAVPUEihT0w8mS9MYbG
                      PR0TTr2gr4c8i93JPUDOCDzApjg7oqEaPXBYKLwxmKc992kyvUIJeD307rK89dDJvV0+rT1KtDq9
                      sCoJPAA0TLudKJ8925KCPQiWiTw9P2K9Ek1HPWE6lT1Q1Eg8mLqfvAEWqj0ojLw8O9m0vYIHaz1r
                      /4g9oqVoPUP+wz2PI7o9U02NvVWQwz0CryQ9pNjVPLr4cr2mqQk9UzzBPX15qj04n4+9mrs6vYQT
                      8jyTGcI94y+qvYDFGTptksg9KJkGvDE3yz1x8b49gO60ujAm3ztAKQW94fW0PVhod7xSMby96Be9
                      vW3bPr2SQqi9nWRivVAjBr16wTo9oAJavXe4YL2Axfy7UO5ePCM/uT3LT5K9B/ttvQFTjT1tEsw9
                      PpKZvb2AN72L/789wLT0uvDFLbyyVRM9riEJPRAgnr3ymKi9pwFvvTsgl70hs7Q9wocyPQBLGbx0
                      hsM8RdSovaj9djwyBH89OUuLPYuNxj2+Z1k9s6Q4vWBOjTsA7947+EGdvKsexj2O6JG9wWCVPTbt
                      bD3M7Ko87erKPUzsyryHl2O98hwMPQAB77tzhHK97XzMPWA7PL3XWcG9fMDbPFlWlD1IZYo8XFsQ
                      vajvNLy40MO9bnomPbjkvDxKHUA94YrLPRCHeTzT4rG9hs8sPRBzZzyow4m9/fmyPY6mqL3wRg08
                      TKKwPEBwcDwUwQa9onZgPVtpiD3Hvb09eEuKvGhahLwAply7APcWuhNUor0AHAw89H6GPDoCGL3i
                      LJa94gVjPUBMgzwtLkO9+r3EvdpLEj0AZuW5BWKQPZbBYD3KPqC9gNPmO+6KiL0ASIG6/FH8PEAW
                      VTuXzsI9ukdHvaD1yru3RMs9m0+gPagCvTxVg4E9QHmqPDPYvD2pgYI9g2ytve8SzL1hx5A9AHeq
                      PFOVHr3jKai90L6puwILHj1ssfE82JnFPLLZbj1AvRq90ooUPQBAdjggYNk7Bg1RPd1OnD0cLes8
                      4LOrvDgpl7zycYK9AaeGPcPJGr058IA980OPvVhrNbxQdnS9Pz7APXQ43Dx8Fc08WE6/vBS5krzZ
                      18g9gjgNPV/3kD3yPWY9eqhEvequET1r8qg9JY6/vTNot716EVk9F4eZPdgE57zVA5u9bD/CPJjh
                      1byssdS8KnR0veLCZj0e5oy9+iuivXp0Kb2FcJc9oJGTu+2MpT2WpGA9WM2AvfH+qj1uFZe98OpQ
                      vWAbyDuw6xa99otLPStInD3CB6i9lySyvaBunzzQfzi8YB9Du0DTs7zABCY7IJzwu1j/xjw12q89
                      zDOpPJQ46jy2KaW9kr0xPcOzK70o5G+8C+qrvSE9uD0GOWY91PXxPK5uWj10Iq+839SQPQBtVTrH
                      DWm95064vSi7sryo1Nu8HsI+PR3PVL3sHKu8+a2sPexJybyeR149oM7APCJERj3r98g9CZC2PUCP
                      jLpiy4W9g61MvVNxpr3Ahlq8kCstPHNcIb2Dkkq9YMeJvAB0GjsNUcw9PrORvXhA8Lx0qKg8N+BQ
                      vZpVbL1BYLQ9JaLGvUSyh72wHVi9jKbFPKI8ob29I6a9QAG9OsVfo70ayCu9ou5RPTtknb1gq9W7
                      sBV6PMAZKDxacKm9vf2DvdzsEb3QmIO7qPYIvG5Fpr2f9cO9urM3vafxZr0J6Jc9UltePS3Fvz1R
                      CIM9TmF0PTTL9LzqgZu9qGGIvA4/XT2AmBK94E+6vQBssTjwrVe9EdGBPRT94LxgZSa9mBArPKN+
                      tz1gfKe70wePPWeqH71tXqw9SVvIPahKmrwg2hC9sv9BPZpTxr1rG8S93hpVPSrSw71j00a9tamA
                      vWZiCz1EcAa9EHZIvGohdT1pb409589xvXAxp72ocWy82LAmvOI2QD3PX5o9J3aBPcCcMbzVm5m9
                      RksUPVUBpL0eZGE9DGHnPEBJPDtQYCe9FJDoPDtYwL2+xIa9oF0cu15bib0A5Dm8ii+cvf3Lx712
                      Jys9JlUQvadPqT0w5xo8MHPCuwItQT3fDMi9AL6lu0EjjD23/LW9WRyzPQymrjwBxrI9MMgIvKiE
                      ZjzQvKu97ecgvTDlebxsVK48c5V2vQ1QYL0QfjS8pIjVPDAYkzvsLsQ8qfXBPdDaPL0mqAY94K/e
                      O5gJnTzs7Ne86H9uPMHgxj2W+U49JB/NPMPKsT01F8q9Sp82Pd2Dv70U4q+8SJa7PDsWj72+Rio9
                      YP4POzO2mb16Bxu9mcaSPQq6HT3w+3c86DKFPM2YkT0AcqE72NpAvFo/AT2A7JI8oGPvuwqVa72C
                      4kE9wg5NPRrexr1Vnog9Fuubvf51TT1iLAA94nNjPQBosrrYyhG8yHXFvaBVobsarMi9qpdvPcDI
                      3LwLrr29MY6HPWgTDjwPgro9TCvhvFXoor0QOHO9ANTpu9uRlL2OsQs9jJrYvPOwyj1Pho09wNKN
                      vdCFEjxNije9APwYuxLgbD1A+j+7CPzRvBTNxjyoyTq8aKjqvJtglr04Joy86OESvDB54bvgxhC9
                      sIcUPMV1qb0SQ1k9AOQ2OgDYD7wbK549BCXfPIPPlr2RTbE9kVyFPRTAkDwH2De9GG1VPC/zlj3+
                      DFM9xkdePejxBjywZK07Q6KFPVGuwj24xvK8Et11PSh+j70jvaw9gHRavSwiujzYjsK9UBOeu6jr
                      pzzkpP88dG7/vOwx/rxjvIo9aAoPPOT53zyA6ku8626wvXyC3jyZQ8Y9EmmNvcjulLyF3Z89bWVs
                      vSq8HL2G6ms9R9GYPXBhHrzk1v88RCzuPJZEZT0gr8S7ieu/PeBXyTsDuFO9DJQZvRfFqT1SeBc9
                      EjNtPU3+wz2YhWs8wPMCPCvmhT3QCAu9+SCmPQPNOL1BI8k9xj0kPdD/Vjzgh9e7UUbFPSjzB7zN
                      XLa9HrxAPXgTurxKW7q9PfnJvTAnbjzeXR89LBS5vMs9uj0i0Xk9YgySvV2Sm732Ega9zAoNvdAv
                      wDtkbts8MCbkOzBKtzuwQP07I426Peicmb12djg9QHsYPAO+qD26DUa927jIvWCWBTtTRza9oF0w
                      vUHcrT02fpa9fFvfPAHorT2jhzS9FJfgPFcnrz1iBCw94LxOvdooKb2JnKE99jpRPWjtqb3gf069
                      843BPazco7xLpbK99kokPfa/cz0SDRI9oqZXPb0MlD2YK1g8NUyDPTCzSzxEu+U8gG9ZvP7vRz0V
                      3YM9tiV4PeiPajx93oS9OTuZPUC/vzzyYMe9mCLCvYW/vT1FI8a9kZuGPSDCqDxn8Jk9iD62vOp5
                      m70sAey8rAP2PGDOQrvu73g9hBLnPEsQjb1QA3q8adm0PZ1tjT1Yigs8uUrFPV9YmT1396Y9crEI
                      PXR0iry8pvM89FWEveYdGz16IWe9l3ouvR/Utj1Alw27dWG9PdJVfz3gjZO87FWfvK4ymL03/0O9
                      rHGcvPW6nb2NzWO9Mt+DvfCbFL0uj0o960qfPeA+u7spfMI9DU6FvQITBD2gJaw7L6TFPWTtBr3Z
                      jMg90yTLvU0kU736ecC9Rm0hPc4sBD0AzFy8M7SSvcCVFr2dZq+96rqMvUD5xr2e/JS9MKxUvCIi
                      JT0wtkK9Je2ePbZ1Vz32ZUs9UUOkPVhUVDzLWKq9Kr52PcGNoj0g8aK7Og+wvdFIvj2VGIa9eG6M
                      vFJMRj1/T4E98Jc2vCGBiT1KnAW9YyW+vZRM07wekj89wFgxO4ZXej32TAm9rHPivKBgH7uJK449
                      tKacPFooHr2AttO8DQBAvc9ClT1Gakc9DaQbvQD0ZjsoSlg8WoVkvWobIj2AB8w7WAGfPICAmTq0
                      LcC8IP3yu52afL33jze92NpYPK7vq72hIJg9wA6NurJwIj060Ky9bh0OPWqWBz0KP0i954+6vTrQ
                      Hz05tpE94q1BPVBfEL2ML/g8wJO9vOfOZL3Y0ng8TTOxPdMWLr2YmFK8oJKxPJUopj14LMS9cvtT
                      PUVykL2q6Ue9fM/xPMpurb1Iy4q98yJPvSWQlj0gMLA7oAWtu+fIgD3qPSe9vdaevR3wG72gRbG7
                      ULEUPOmcjj3hwKw9NqumveBVwLxiiGM9zKC6PPh/9rx07Pw8bWcvvXIjED1GgBW9owa9PVmnsz2F
                      aJC90Ah0vOlawj0AzTO87Fe8PNdzxL0mQyw9o9e6PSzxnzw641m9ymhfvdBPlb2UOdw8SkZ7PeO0
                      jj3Dvx29bI7fvEAxYbzAhbY8crdyPYKrLT2S6F49koLFvZr5G72aV5W9DsaovYZmSD0CgDI9OB7L
                      vZI+fT1aKDe9DSIzvZjnh72hBqw9uEq/PJpREz1V2qW90fG2PZgVZTzAIBq7ipMPPQASR7xigaK9
                      jfI+vQ0nij1w00081LGhvLCuOL34uIe9gGKxujpGkr0Epu48g4SNPTg0obwM0QO9+t9fPefJtT3M
                      oq48bax7vZN7oD31PaO9A3XKPWIvLT04l4i8Zox8PYjUrzzF8a892belPf1Jor3iDqW9jDfMvBGF
                      wj2EfQO9WaK5PbZmEz25vpk9Er1oPaAHlrtq2i49JRa6vRsKij1QLdQ72+mIPfqSYj2GAwo9eNK6
                      vLRLn7yAk5u68MvIvSrCQT1rk5k9+gJkvSxl7jxezy898muZvYYXZT0nOTy9hY6QvaHxyj2sUai8
                      c0d/vSSnFb16fJG9O/aZvcKPKD1YRb69gYySPYBpMjrA9um8zKXnvPPaK73cjtk8lKazPBFViT1w
                      y6m9G0invZu6iD3Lj4k9CVmoPUTczzwwApg7eHGavcrYEb1Qrwo8C9m2vfbGm73gRlS9TvwAPRXX
                      tb20SuI8Ui49PUD1eLsuGZe9bK//vMPzkL35vqs9noYuPWAVsDw8f/k8JMUVvZdqhz3YSB6842SR
                      vRgaNjyAwZM6jgd9PfpiN72ogmU8ykRlvdG2nj0XD3K9jgNtPfjyi71gQqe8MBvWOyH4sT0LGrW9
                      jtKevbwSgr3wUlA8wLFHu06gk734+cu97EfrPJ14OL0lUZ89wP0huzCIfjxIBZ69Y5yEPaQVFr2y
                      JX09mT/BPT2oQr1yzG09QeGuPdYEKT13tEG9UZekPQA67DpaAKC9jybBvYfjUb24K8I82IVFvMBY
                      GrwMUde8XcaAvbUOmT1qgT49B1OzvTcRsb37B7+9m5GQvdkHlT2A8H29O6y8PWWavj1W/Ia9wGo1
                      PMBuD7sy45e9/VmVPXrVoL25Wo09wEuqvRkjiD1gOo47v/e5PVQtrbzdbUq9x/JJvYx2hr0S8R49
                      UFCgu9dOSL31u8y91JnoPJbHp70so+28i0TIveorh73sSru8Zv5WPX5gGj3xKrs9MJNWvFC2RzxY
                      gEw8AHhLvdhoRrx7Mq09SMylvBAyer3gNso80HYGvWrcGj2Sthc9iJbLvJUSlz1wOyq8TcaNvfRZ
                      pby2jGE90N50PEcvpj2ov4294qeavV4Iaz1QqeO7n6vGvYD3WzxbiYw9N4PCvTAhFjziIzk9AIiR
                      uRRjzbx5EaU9aPeFvF1gn73ASh69AGTEvSQ+3zymoCc9GgMLvcyMuby01LO8fdarvdWXvb3ALyK7
                      SpQhvc0Qc73Q+Qo8UzzGPZKXaD3CrTI9MI6gO7Erlj1hrJs9UGLBuygJwbzyASQ9qJVivIAmorqt
                      1qu9oR+VPRHipD0IyrO8AkBqPaQk4Dwl6Lq9KcqxPaDSgbvABFO8JmMWPZdmyT04EZy8oNQDu4yu
                      wTwIAr08DeCmvSDekjyWKn49gKs/PFcTrb0gX5m9NRSNPf5qET2Ai6O6Yv9xPV1JWb3L35O9kau0
                      PUL+or0r8b69wMPavKI1PD1h+ag9QPWIuo6gkb2tuz29o6kavaVSu70JKL09GMXwvJGIgT1wz0S8
                      oD85vQfvuT0oLT68Z3UivS3uQL1g43i7GE6lvcB6kzqjtC29tNn5vOpSur0IELY8oMONPHuKv73/
                      rLC9fY/IvUDeDL1s0o28NBMYvTkJrj0GsGY9WC2yvSuQzL3QNCU8x+BBvVh1GTzU3bA8kHGxvex1
                      mTzNAl292dbDPbifp7wAYtW5ozRgvQAdSrvQdM87ls1tPRxV3zzMv9w8UlFwPaCpxTzeoAk93Z2L
                      PUCTkDqqyQa9tHGovDL4fT3KnMW97fklvQ5shb3SPmY9UWGRPa0RLb3kAoq94G4uvTnBuz0Jh609
                      1yCwvVFOnT2V+cq9EcGmPZ03kr3oYws8Az+qvd8VsT1NlL+9XXBsvUFWiT16gSC9KIxfvFC9Jbw1
                      D7m96sLLvSi0rb2aBXY9XL33PLAPrb2oaoU8tB+HPFEixj1GuAs9EDbIvWz9/jyo0p+9WpMjvYgZ
                      wDxilby9oQaQPZghv71cWc48jajFPQBjLLpKLHs93Qh/vY9umT0UtBe9h2PIPeD2OL3H3MC9PaBE
                      vWSH2TyGzH09gJSmu+gC1bxNO0+9TP6zPG7ErL0AXFY76k1GPXS1DL3A1Je8M3yvvcCmazsgkZQ7
                      gAOguxWqhT0HrbK9vdUvvSguGzwzOiS95lMnPYDahLw68Xw9NiULvTpbLj1wZS68czmYvXUdpr1z
                      rU69DRqNvXCgLrwydHc9E4qtvRoUSj10zpG8oHjpOy3jPL0Mh9Y8zO7gvECFfjxT35i9gAmWOma+
                      IT1XebY96kBNPfehtr3X17c93QJfvQBAbDtYzxM8vRo6vcLgs71DtKE9enetvbmDnz1dBVC9klJE
                      PZQN8zzces881ILAPMB3Njvg2Ou875OuPaFnqD2g9hE7FiSevVKVo72o0qQ8g5OavXBmJzyinCM9
                      UOG0O/MVkj3Cm2c9QrRsPU1bgL3QLUe9wgVPPS9Hvb277qY9GhRGvYoFXr3UwBO9LiIYPaRI6TwD
                      JYc94Lr9u+yPrjxAY7m8VECQPCgwfLzss5m8eAaqvKNUyj3gZ6W8lI+HvF4Lcz2TSIA9FOKkvMzp
                      szxQmla9kMZBPDiOrrxS5J29CTOfPUDc1LzA2q+8siKLvWHogz1KAl+9Xz6/PeCQvzxxL8g9gO/c
                      uxjEETzsNPi8IUDLPVEZwT0M1No84WuSPbIjkb0mNUU9pRm7PRpuwL1BkZI94msQPTadBz0wxCG8
                      MFYgvdYoAD2AIRo82gh3vXTmvLyaK309ehFpPTAxmLvQhkE8mmsKvcBABDzyR0Q9pucBvb0xSL3e
                      71M9INKgveiMT7wPSso9S5KpPTglmbwqhDG9QtqavZIOwr3SSwI9rkusvcPZyL0NLSi94ZyKPR5n
                      kb1gm7k82qp8vQBcFjxq9z09oDFdu0aBfD0csg+9tIeLvO9wwL09wHC9M9rBvdlUsD2fM7w9bymT
                      PbFQhD0rVK29UFFnvc7Fdj3K60y9Ib2vPYCVb7zQlk+8LGaVvCCWyrydb7S9+xWYvWxzxLyTA8c9
                      gSu5PURqgr3DQjS94RCePcARujy0JeQ8uGiWvS2UnT27FpS9YFUsvTSYgLxeRjU902MdvS7ooL2A
                      x8o7oH3MvEX2mb2YUQg8BHcSvTBSuDtau3s96mxFPUNywL3bJbs9SMO6vHJLLz3y7GQ98pywvaCj
                      9LstPb49KA6QvLB+ib2A/gq6gNeBOmCIvLzeh289QEuxOgAmqjnJIJ49r7SkPWwUtzyyloO9QDpR
                      uwhWm7yPIpo9w8CFPZACATwAg4s8Mwm6PdodZT1btsA9gm53PTEiuT0kQuo8WSurPeVTjD2oP7E8
                      wMJtu8HowT0DHi+9mM87PMLdEj0r+Yo9+FyiPGSrB71dd8E9MT3APf2sqj1pZq09CXnKPcDbVjtx
                      dKI9Q1WkPcxo4Lzi/be9L0+uvRQWyzxArCe7fR82vWCOCTvAKo462HsAvBmOhD01Hbu9Yl4FPZHM
                      gz0vGJU9UEZVvCA7jr0sub+8feC6PcJpSD0AGCY4VwJbvdxN1DwuMx89LQUivShLBDyZS7A9KHR/
                      PDcorz1qBF29tw63vbIeGj0pC5U9j2OyPY2Oi72HAL69QIaUPJoIOj2m8ik94tYfPW7KCj3Is8C9
                      vR6uvfgNkjwJnac9sPB3vE2qvj17G8e9taWpPXsWyz07O7m9jkyLvYAtc70BYpw9ey6DPZm8vT3D
                      0q89dLH3PBcmqD10aBa9gIKavAzRhL0YKks8SrVBvSOlGr3sdRa94beqPTPft71QzD+8lrstPUJg
                      WT3NEsu9LTCvvT/4yb2I7oY86MuUPPrbbL0q5qm9sI+Vuyp4Gb18cfg8sR6VPTAfEzyFKIc91DP/
                      vMdFw73CIIy9PVmVPWitdDxAA5m8MstUPVKQur3xkoo9yjiuvRDqQjzAqBw7wsk7PWeIxj2F5YM9
                      4MpDvRpDpb3YGDG8Dc96vXxjEr0skgu9vYSSvZj8XTw2Y2Y9sGLfO/PVcL2qPR094EUzvbNVmT3V
                      BsO9z56rPQ18g71Hdxy9MKrhO8Whtb1hUI092nyWvVP8n707lp49jfbAvduGwj1JA7M9lJfWPGPn
                      sr3bJso9w9SLPVC/VTwtbVK9hE8RvTK8Uj3iHsu9aMgbPGAj6Dt6Oz29t9pKvavCnT1Gdou9bUCb
                      vZJwpr39f3K9MMpaPPG2hD0CkmY9ckspPQbNgr3ws1C9HgATPeyQjbw25wS9ICSLu1V6vr3Gmg09
                      KiB2Pe1OU7210aM9qgFBPSjN4bxmlg29uI2YvFqWCj2LOK29svcoPRkTnD0RoZg9kW3EPbMDlL0g
                      kIu8MK80vQMKpz0wZgw8aIEdvOnSlT0Hn0u9UKCqvTDSpzuHi4E97HjavDXwxL1UwLa8aqEBPZi/
                      yTwHscU9hz2zvc0hhr2gFM0733iwPZDkRjw0iYq8om1BPYJUpr05Ab09aIr6vDcarj0qjEY9N+O8
                      PXBozL0M9cO82yDKvTCdRr2KrFs9UCfKu/G5yj3MfPA89glrPeHFuT161Us98C1DvQyYjDxOYGI9
                      MoFHPT4cNj3IIaG9S5KIPSB+ujsYVAC89HDHPISl0Dxn8SC9yooxPQBQOrmJqIk9RInoPNjFxDxQ
                      d/i7IicpPR+KkT3aAHw9S6bKvb1Zu70wCOa7ol9rPSS4Br2yLwc9cnE0PVREi73aM129DESTPEgN
                      yjxyH7u9gE/Fu8WEpD2pCp09AA2su+o4s73Avoy6QAu+PJjJpzxgpVi7AqW4vbiXuL0ocC48yOyr
                      vbecfb27W7C99IDrvPeKrr018Li9lC/ZvNjIFLyNtJA9uBquvS0ZRr2A5KW7WXWqPeqMWr3z0Zg9
                      bAwJvQ3phz1yWby9WZy1PacovD04BIq9gX68PdffV73GZ1A92NajPOvnmT2ul4q9IOI2vZyHAL3O
                      lKO9g3ihvebOjb1HdEi9hX+yvTNYxr1lX5e9dE3OPA3NR70GyTE97cY9vQDh4jtslse8YHS9Oxp5
                      QD0AtbC8Yp25vfKfIT3Ki1E9GrcHvS+jjT3NeKA9BTvGPU+Gs70AmFO7FO7PvBpYw727Acc9UEYw
                      PBJ3fz1grUa9fXKvvV2owz0AuXG9SimNvcBEUbtAUeI6AByiu4MOoz1ofgi8avhuPfTc+zwgWWm9
                      ybCmPS3Ylr2SK3c9osObvVITub2wePW7dbDKPQG6vj3dDZ494CbJvGspt72AaIw6XUNzvTKlDD0U
                      Yci8Bgt1PY9/kz0lyrA9ItF8PS61AT39Kbc9f9aGPcqfez2zBDO9owiIPUbpAr26I4S92IykvH8c
                      yz0z3rg9YKV7u5+Usz1Y+JW9B6tJvZiDTLzHOLe94GaPuyiagbzMjqK8wMD2vC0DQ734UcW9NHwV
                      vQ3hkT2+zT09Itc5PbZoh718x+08Sxq3vV0adb0qrSw95vxaPZhO07zibkY9jKnfvKo0Gj1qoh09
                      GOW+vOoxZr299ZE9mN2ZPNibpjzN/a+9tYmevf3mgj19CWi9TeujPQU9kb1M5ci8qh5mPazuib0A
                      Yr68GFTTvBtCtL2gKp29xvSWvQCIGrsAYQK8Ec+sPUcsP73jRb69F2Q3vQdHqj2OAWs94hcYPQA4
                      IbvYIL88Ew/GPdCmHry5B8Y9YNunO8wOhryAhR88rmwLPT8Qxj3eRgs9GGzUvJ6pOj3wtRi8gL4i
                      PPTpgzzwUDQ8h96pPY3Uhr24H8C8ELu2vb9QnT25kco9Y0LEPUJgDz2US4E8UL0gPIU6iT1+jiY9
                      aBsgvPCneLxAFL08boA5PaPJsT2uBAY9NltlPdLQu70mPQ69F/o+vcEIoT16cWw97PCHPNpAlL0g
                      gce7IiEzPY0Ehb1QtL47GCGzvAG4ij2Qrly9zB/evH2dS72CgkY906pUvWLRq72fzL49EdKhPSg+
                      T7w35ii9szatPTNcbb1lF6y9urZ7Pdsdwb3Am1Q8yssAvXJ1Lj1Y5608ajFKvQCxAzwSkUI9wIvc
                      vMDFiDy78r49CGO1POpuur3QuxG97WiTPUOEIr0I3Z28E6ixPaDUJr1gz2I7gEXtumQw1jyw7sa7
                      mIukvUrxxr0qLXa9BwZkvbj+sjwIwru8RiVoPXpQY71gS847YItbu5d5I716RqG9aFkhvMDGjTxY
                      mKu8UKp6PKL+Tz34eK292kO9vV2Xur1ZsJ09lMLlPC9RgT0FOqC9zeW0vTebyb0cV4q9sMdfvc94
                      jj20Lfe80GJwvONzp70+diE9SpqrvYzqj7xbNYQ9k9RhvWOAkz0HKpc9sCooPHUBpz2xJJY9DiBX
                      PaiTWzxzfcm9ICWEvIeanz1S+2c9oGzLO0C/bjz4V4488nE/PWeBtT2yBLO9M1GVvUcilT1wITY8
                      r9CaPaC6yjvdtn29pS+wPTLaGj1n0o89yzanvYB/gbtjriG9LiIPPTrNXL0OImQ9VJ++vDiri7xQ
                      Mhg8ixeyPToeDr0a5ym9PaKjPapHMD1Zso89Oq5ZvSeCjT2XKLE97dpAvcMpvT3yHXU9ikdLvYBM
                      4rxXYRq9ILGqu4x9gr29YX69NZ6cvVGVlT1Uroa9Q6RKvY6chr3o5SM8kns0PaBwkbyo2xa8XCn/
                      PBhw1LyzVyK9bROtPWyr2jz6jL69oJ6+vbvrsb31UJa9euA2vfKNVz3A82C7V11TvTJfFT19ije9
                      yDCZPH6NVj2jQCm9E9NxvdS+nryMm4i8VnwBPd3DIb1+2XY98+N3vWczMb05GcQ9t9eNPYbVfT1C
                      cS09tS/APbAWIDz4G6U8TgAYPbd4Ir3EEPA8bZVhvVoroL3yE4S9QChqvK3FwD2IGII8EY+SPSao
                      KD0YgEe8QKqEvABAm7kBMJI9K3ijPRgdDDz6/cq9HvI4PebqAL2t7rM9L++UPUjxx7zCrse9+txu
                      vUBuGzz95pk9gC7mul1UYb3TXaS9LSmJPVZWID3pXrw9y6S6PU7teD3Akqq6kYOkPX73dz2pJIQ9
                      aEy2vZqCGb2wHb696RuHPUY1Rz3DH7Q9NugePVhwp71MIfo80tplPXg6xzyAg/U6LcqNPbsPqj1r
                      e8i9v+iEPa53XT33/ak9+kmGvenEtD1IEZ681Hb3PMkwsD26Ol29pXKpPWkbjT25WJ89zsRpPVJX
                      yr3A10A7gk5zPXQ5kbxAE2275hYUvUAwMDzLBci9QJmIPNuRsr12+AG96EMfPEasCz2KjKW9JqZp
                      PTCxUbzaiZa9kRydPeaxaT2DQVy9/7quPT46GD1oqPC8v4u7PfR05jyVU769kKFRvOKvjb3KgFi9
                      FAG/PMCROr0grpS8dIvGvAAXKTzuVhc92pYxPY10tD3g1qQ7hZavPej5HryPq4s97EagvAsymz3Y
                      y1q8sgw3PWUhp71+qhw9GkhEvcT21jxwai880yqPPfNVl712Nhs90CYwvTMCW73zhGm9SXGcPbIT
                      aT29zci9RopfPTGZoT0GzJ29kMAKPJSktjywsDS8JtYUvQXFxL0xI5c98aW5PZiB67xYcMI8uvBL
                      PVB/xzsYyws8XosMPeNEXr3DwZe9QI6xPFc/pT00JeE8ATWiPbU/lD0+Y5+9UO5KvBQI3rywW0i9
                      rnGIvXTJtDzGD249rEqEvYLPWz0fk4Y9oGSoPP4xAT0sPNG8UtiUvVCezrtjiYk9UJ1evfY6Pz0A
                      IUS87puGveA8U72dHXa9nah8vS5lhr1s1rU80O3gOyPYfb3SmXk9tfO6PSjNbbzeq5u9DjIIPRqu
                      yL24v5k8BZS/PaWPrz1amSO9ogFxPbQQmTyAeDk8TwagPbfitb2Q48a9iKW7vcyDmDwAVxm9tg9/
                      PblDsT0XbjK96beYPaGQkD2XPLu9aA/4vOmLrT1//pU9proWvZsbwb3/A4I9N96VPRj+MbxguWs7
                      cOtlPBtZzL32FXo9x7xevbCbODxeVSA9VG35vKNnrD3DW7W9Uk0oPX3bib2ogb+8cumEvcZ0Jj3D
                      MoI9aohhvbDG/ruGVF09G9S2PdDi9buJm509QPE8vUALMLzJGYQ9gHZDPPrMfz2UXqM8laqMvTec
                      dr0whBm9JNUOvTDUprtwWoq9zKOvPOAZ3ruAlro7ClXIvUKJHT2wCxs8wuobPUAm77wycUE9pzEc
                      vSeYpD1CIC49rJ2ZvOAlXb1hX5w9xUmIPbPHLL2yLBw9HYi5PWFRuz0KkCU9LdiZva4URz2o4jG8
                      1NnKPOX4gD0U4s089FYHvajp0bxcfRi9KGiePA2Fbb0GsaW9Bk18PWLmAj3gC4a7ziJ5PQrheT1R
                      9r095y3EPXqObz0aYma9AKiIvCUqtj3ApOO6qtArPf39JL0vQsK9U58kvcO8Pr1AlSS8qKKSvKNT
                      dL2SHno9E1EbvfaaSj0ALYK9ACvLve2qwz33a0i9aMg+PPBdXLytv0W92aOhPRuxjD1mD6u9pLf0
                      PBubwb0As8k8CukNPUx9zjyYvCQ8+sACPeExjD1YU7C8Fr9CPRimU7znasS9XtORvebIWD02rgY9
                      wMFVvdCl8LuIxNK8Ci0GvTBqazziZcy9gKOsO0pxXz337HC9jOKxvGXtiT2nQ2S9pXXMPX1qp706
                      Px69FkhRPXM9WL0RKo89uOKNvGDil7voaC+8qMgWvBm+iz0ARrw84GwIvUj1jrycPP08AYKvPQAa
                      fztiw0Q9IC/NvLHJyz2q8bC9kg2vveDrSr3U0Ra9AJc9uos7hD2K9RG94MieuxTf3rzYrsm8pwi7
                      vVJGMj3YrKC8dMXxvEItfz0CN2U9Lj1CPTUguj1UVa683FjQPB4ZZT2oNs+8RuoPvQajFT0CJxg9
                      rYdHvfL3bT0AgDw8q7HCPesXwj1qrA69aBicPBKEZj3A/1K8p9JSvcYYFb0U+sa8tMDvPKLOpb02
                      1UU9dPS7vGMryb2s6em8QmNTPaz6gzwGS4+9sOVxPEqlBb1eI0A9eoNGPceUL70egIq9ih6WvTDf
                      ZL2PKcE92HtsPCBNgjxsdIK9DbO5PSormL1YeCA8TF6bPEgboTx6hiO9BNj8PK6qAz1PCbY9QE+h
                      vYIeFT2g4Ty9Cms6vRCxtr3gh6E7KIfdvHoXbj1DwGG9LWKSva1brj1xJKw9LH3aPMyrrryNRh+9
                      vHYWvVCU1jsS2l89QcrGPUZiRT1Y5xC8TaVxvYBU7btKxRS98pbGvS7VJj27iry9+VvDPYLWbj3Y
                      d0Q8pzq/vVj/8bxEoOQ8Sc+ZPQ6MUD2MV9e8pmAvPVE8xj0omrM8Hq2hvVuXl71VeZy9Z/NuvfDz
                      KL2E0uU8DLn9PMBVbzxt/ca9wDlcvKiZ0rwYl8q8Gn8DPVRC9DwkIOE8PxnJPagdUrzFbbA9qp9m
                      PcA86rzReI89oMHLO6wn9zy0OBi9Mb2qPYC79Lz1rJw9nfGFvWIlYD0tnrY9KMyOvP3Pu70ALPk4
                      YfyqPb5Wcj1o/hA8LYePPYBNlDstQ5S9YVCMPUhM9byK4Da9ULMVPMCIib2SJ3I9A22pPciE+7xQ
                      om29sLShuxhihLy4H/28G6aSvTKVnL080xe9hfiSvUZPQj0qKgQ9jJ4RvR/etr3UaY08APj0uW2Z
                      zD1KTo29jQdYvWlmjj36cXa96DPGvTHEgD2YbKu8MyEpvTSwvDxA5zY7SKSTvRBXTTywLjY824Sf
                      PevRpb3YMZ69aXCWPUBdQTuYGPK84MiDvXdSL701q7a9fb1MvR56i70pH4o9AKK1ua+OgT2N8IA9
                      RU7KvZh29rzgCPC7kVfCPSgyqry9eo89bz+uPUedmT24hqW9jK0HvVQ987wQD8K9F5SBPRbgOT3I
                      Y7q8gVKWPahtgL1ahRO9/ZmNPRAPezwtDVG95qNkPc1Uyb3by7M9cLjJvWbaaj11isW9opBYPQtg
                      rr2Qdy69wK5VPJp5M70KDze9ueuPPW30qL3dy0697Jr2vGKOBz23Mjy9/F3OPDr7cL1/ma+9Jbio
                      PbBMoL1Fv7i9InoPPUNWlr0Pw4A9g8myPbAqpzslG6M9eUiOPZjRPLyA09W8AjupvQMMwT0yS5W9
                      1rKkvZTR4zy7e6O9lDukvMwh4zwAFj48ei4GPV5Gqr0B3aA9fKjgPH7Tj72aORk9dNOqvA/Qrj2W
                      DVc9MPpjPHmtrT167HU9yrgzvfJqYz2UXNk8jUk5vQNpnT2AHw68IEFXvQlVoT2EHfo81+s8vcC4
                      z7zC2C89wFTSugJfgL1AHrC8crggPQ4BXT2TQHC9UDNlPJQnjjxgUdy8xQKmvZi50LxB1sU91vqe
                      vWDTgDxA8AU7Oi66vWl1oj1K43Y99R+lPbZDCL0yhLK9PutIPbAujTvUus08MUKDPc0Pkj0dwHG9
                      IL4wvedMlz3Qi388GmE8PW2pvL1+EHo9IGfJvQLBob3Sy8O9YFmNvSNyrb3YzDe8kKMcvQMwjD03
                      Yss9oGsqO3b6KT2aHJG9GA+evdZPCr1JDqU972iuPSTf/DykL/M8lC2sPF5dhL0svLk84ciEPbF/
                      uD3AyDY7lW+avYCLQTxKWnU98xrFvQJisr0g7pu7gTauPQT72Dw3BbY9Kqi5vZiwQ7xZZsU9Y3yQ
                      PbOEQL0QwDK8Nd+UPebAPj2CBGU9APvoucdlgT0rIKc9gG2hOrrzKT2Vfam93F/iPB4Pib3gTK29
                      8EMnvSVXtT3CMxk9dQ27PTDgdbwCJx095z3HvcvxuL1Amuu8BjdKPczNkbzG7go9+VqWPVBnZjzY
                      Giy8i+6xPYdkpT0Avis7G63HvTVSgb3omXU87wusPYD5wzzeyUU9Ke29PQ3Jmj2MgQ692WnKPSqJ
                      aT1Ewg69AIaDPKmXoT2gLaA8lvdtPeIbpr0PPpQ9eCu9vOVWkj3ltJc9g5yVPShGtLyELgm9QPwH
                      vUC3gLryQQo9gtwcPQMVbb3AHF+84PP1vIZ9Vj3qqko9C6WGPRpddT2g4+G8eB6DvcOesb1gHMK7
                      RvgcPQFooj3ASGy7MIBkPPpdfb0POLU9sKcJvA0Uo73TOx69APFau+8Usr2xqog9ewzHvWVvyL1d
                      +ny9ehs4PUkPuz1C3bq9DaavvRx61jwwHjc8JhEKveRW0zzOaSw966egPeAMfL3mxwK9qBFFvJs8
                      rb3ffaE9vpVMPaARPzvU9dc8/CLOPJgObLw3WrA9qu82vWLxaz3yFEE9HR6Ivdmwkz0APKg8rMCp
                      PPpDur3zPpc9gFd9PGxv3jx+5HI9/EsZva1bO70ACyc7/cCJveiisby+H2I9DrOsvdLVQj2y2IC9
                      QYOxPd6XZD0KPSu9cvR6Pbd8Xb0OO309hSLBvWLRHT3OjGo96opNvfhXj70YpQW88Qa5PTHlgz3Y
                      A8G8h/ofvbhfr7x16so9FqUUPeiTUzxWazg90Kq9O5R28Tyy66q9cLsAPLbmkr2BKIU9+xyLPWSv
                      1jysMqy8Wxy2vRpepr3AGgS7g8OivYgFx7wQTQC9IPi5PICf9zqSFFE9wLpNO5eoyr2YhLU8Go+Q
                      vYkoyz1SzrK9WO4HPHqYbb2dYYw91cKQvZrYFz3AehK8gEzpu13gP700aw694Ng1vZJrv71tyBm9
                      6m57PYA3ibvqDDe9bowiPQZRqb1rEo49IoxhPfo9B72gKZY8ACaNuqgpj7zEVBW9UN22vXI5Jj2v
                      mak9wNTrOm8bnT1JLYM9h2NivVjLo73TGzO9YHc6u/6CWj0Q8ZC9jIbvPCBPgbvkVgS9MO8cvdjW
                      4bxiGBM96ApLPCgBjL0tqsK9sjxzPZyx0Tyd8yO9KvNCvcERvD1h44c9ngU1PX2SQL0yQjI9j7nB
                      vYlpqD3E/IO9VhZbPVC9Rjxs+fs8x8SpPXpJHr0AT7K9VpVPPWa2Fj1KElo9MZy0PYAxdTrHbZQ9
                      2PiivQwpwrzhK6M9sFl5vM6leT0AxRu7gC6bva7ch71uD3U9TQqQvdARb71wL0y8Rm1gPba5Iz0m
                      5Au9skOevXPewj1NA0y9mHDBvT7RAT3dJJ29JbeYPbQk/7zSNmw9y/GUPbC5yDvvV8Y9FFeDPLZv
                      RT19U529EtCUvT+5uz3s1Z68ung9PREzij3AnSq8+nA+PZ1cer3rMKy9KmMiPQapAT3AQIS6UKP3
                      u+z+iLzkZRW9WKv7vItut73oZxa80BGRvTCuQTxQBuE795PAvaDaML3AyK28dJa3PFSHFr35XrQ9
                      Ir0yPfgrtL1yer69Ypl6PSaBQT3AUO86miUBvaB8Obtc0/M8BG3XPAXQlD3Ro7I9E3Mevaz33ryV
                      d8w9yowBveaLNT10hIA8dOiCvVDtTjzYab48E2fGvczR/7yg8rk7eustvSfjGb1su7M8gVjGPQSY
                      9jxdHIE9AIvsuedTqD2SmRo9goEhPUjEy7xLsaG9sp8xPaAsxLsUgv283U4jvRGSqz0o2pU8dGea
                      PAkLgj2HP2a97PUKvagNprzgrNW82beWPYUjrD1I78W9ADvBuVS7lTzGLTI9MJVYvAGZpT2vg7M9
                      gNPQO+lLtj3V1ps9AH/lu8FRoT0qQx09ekEqPRXYrD1v9769sIG3vUtZlT3oZGQ8Y/ioPfAUIL2g
                      /KI886l7vWamFr2h1oQ9SoMFvUGmuT3Hrbw9qVesPdCdpzvGgDM9WNAhvEBnqToaKV49dH7yPM3t
                      Lb0LraI9UIfZO3sAkD1iN4S9xkdIPbnChD0FaoA9chNEPSoUur0uDKK9Ros+PYzy/7xghJy8xWK5
                      Pbprgb0N5MQ96DCGvA4yAj1YmZe9Ot3EvezszDwSOmY9Tk17PeBBmbtA+Q69PeKIPSESmj0odE+8
                      UBRevLiGjrxOjGo9eukqvW+3sT2X+cW9aEm7PJZnHz1M1om9HlaEvaoNsL3mmGc9xix1PXdxKb35
                      NLg9bFnBPPlOsD1iBDI9qa6ZPaZ3bT2Rd8g9+w+5vfmstz1QK+m7bhZjPfjZtzwKTio9tG6ePGYP
                      eD3CIXU95B2MverkKT24Y748R0d+vduikr3bcse9cMCAve05d70YkQu8uM2VvcMcOb0TnFy9WrtQ
                      PZzUEr3Onxo9w0NbvXhThTxwRjW8EnQePRszq70tTi69kFgVveD0vDtSuH09h5+BPVyF9DwgwzG9
                      AGrJPLxs4jw2VwC9C/uRveA6xzyfRL29tbrEvVqpu70cPPU8aN3avKDtt7vmlgu9bmqPvdDRDrxt
                      N5I9B5R/vSPXJ70qf1Y9yyqXvc94pz14oaQ8L/eNPSCPnr2a8EG9rTm4vdW0xz2q9o69AI7YO4Ck
                      xDqYWt68ILRFvS2cH72d8q69ACxAO2rcED0ymoS9AnxmPb1twL3oZZW82tFLPXuWjb2g5H+9kChq
                      vRqgib3wrAo8DGWAPKWHyT1oezS8+1e7vUD9abwwNVe8GkIGPYA4l7wwC+U7V9CPPVDWtrvCe6i9
                      1FPFvMQg1zzCZUc9RPLqPGwKs7yB0Jw9TbckvaCfoL0zJJA9mEUDvEEUwT3k/eA8wvBKPUAIdTzC
                      0VM9PymTPdDHYzzgBI076KmfPEaDAr23fl+9s6WaPcq7QL1AjiS8gGoIvSzcDr2YU608mDEdPA4m
                      ID0Mx4K9gFJFPBevqj1SxR89NI25vNFkqD25L5w9KExtPMDThrwWMGU99OYPvSz3lrxI69K8mDVP
                      PJhggbyuQhw91NDEPNGAsj0Aico8S+yNPQBQxbsHErg9gAPLPDAjnLuihm09h/GXPUrJdL2wr8C9
                      6IScvQvBnr0wFd27wCbzvFIUHj33yL+9wscuPWjPm7ycDes8lYvCPbmvhz3Ag428QLkGPO7jj73S
                      u2g9tjVcPZiUmbxLjII9zDTIPE3bhz0dfYG9AcKHPcrsPL3WyIa983JZvQwNmTwW6D09XtWqvRN2
                      mL0QCG29/IHmPJhMCDxOyiI9wFlEO5Qrp7wta3O9QNWTvdhBOTzX7Dy9OBfwvA1hwr2mnWU9oLWW
                      vT8yuL3AWga9MElUvJgMLLyoXag8pgUGPRDWTDyAaju82zGcvffnI73biaW9Pux2PWAfJrujcVK9
                      rLzgPFLVyr2oAm681FjFPPKzOj2M7Qe9QCoBuytzqD0GNG89hhOqve4oMT2qBjQ9tXbGvYP0Mb05
                      WYI953yFPcAAYTyOWlc9gpxpPc5kVD0Qdke9KrodPRrOaT2m6Zm9CASwvVabFL2grs282MmCvZBH
                      DbyQLhS9F7VavRondb2X1b69Cg9fPQSiEr1h8Jg9gL4IvGXOnL1DSKG9kZSHPehMqrw6Y7u9KKCU
                      PAvhkT2zfoI9wFm3vdRw+7wAZNY7ezqovWAsU7siuw89FwiOPZCoZL3oar68YN+VvO2uX71zTjK9
                      gfavPdeDtr2Ir8+8YB1EvSCMmjuwqGe9qF1/vO3vVL2G94i9MI+hu2IPIz2RXrU9NEu6vIbHaz14
                      irA8h8lRveG0lz2ckP48dN+rPODOQL0AOLS7QF1vu2EJpz2p4so9tig3PTOkT71CiVA9UceJPVrf
                      Bz3mTV09HVCsvaflwj3408e8SPDEvAhXkr3m8Vg9x9Y5vdC4Ery0wr68oFjTvISF8zxKMmK9oP0X
                      u0qVLL2C/Iq9TNnsPL3dgD06M4+9IFhEvbTqi7zH7pU9X0CuPeVboT3V/Ys9aIS/vWn+jj3dPcI9
                      g8x8vcIpIz3DGLm9gcTBPSTLFr3pR7c9ECGHvRWSo71v9rk9Q0w/vaC7p7tnHMu9dzIcvZFzsz27
                      l7C9amYePVOpzD1TVJ09FcuKPbDDwL1NPyO9MOsGPFX5o70N3cW9M6FSvadHxL1qI2W9uKSivAR5
                      5TyfdsC98EK4vRfowD1A5gC9kc+BPUZbDD10NcA8AAR+OaBLILsK8jm9dg4DvQNwO70Gghi9Bvuo
                      vcBAc71XZhq9B+qfPVKwGz3S44G9Zl6fvZulqT076qw9fZSkve1lqz0jWCu9sc6OPYoPbT0gSrm9
                      +oklPcPKsL2ZRKU9WiNJvdE1uz3wUS+9aiEBvVATIbxDfY89AABauCFmxj0mRgS9tzDAPWxxsLwN
                      gEy9BpA0PXAEVLxoUmY8Y9aFPeDASr02bHc9xpckPc2zUr1WSVY92uhMvbbkF73XlTe93hVMPRTB
                      qDxSRQA9WGS8vBSH/jwQSCW9m2msvc0KJb3aqgk9o2tUvSBhbb3aB1S9t+g3vXXsqT3YS5O9qPmt
                      vCohLT3Q4uy7GFrBvE5OPj0SChs9Ygk6PbbdXj3oHDg8YHlwu1SA7DxSNhs9TPa6PLHMxj0k44W9
                      MpEMPXYRVT3hJJw9Wl4NPQpNer1AuaO8owm5veh/vjxajrm9EjJ/PZ36bb2gmJO7eW+tPSkqlD1J
                      uqo9AEDTtgB4+LvzRFe9GHSZvVusrb2w3U28ump3vXqBGj38h4e9AE9VuxswsD0TGU29col4PSAN
                      bb2/tas9Wn07Pd/rsr2gvX+9mni0veDWibzXVVO9KtdEvVZwEz3I/q+97eEmvR1PXb2uCKa9quRN
                      vUIgSD0j8o09NLbavAAsj7qMOeW8MZe0PelnxD2AJ9k67aAhvUwj8Dwinno9nRihPYOaZr0wDck7
                      i6/MvWfKNr1Ra7A9RAwWvUp9w73CO7W90+fEPY3HsD0Yhu682iF/PYu8mz3dD0e9BMABvQLmQj1y
                      XHc9FgYAvRI5bj39zVm9QDaovWx6Eb2aNga9tLXePPDEN7zUHfM8mjgnvdRnAb2QOSU8wAWEPP28
                      lD3YK2y804K+PSZQNj1A7Qm7aISzvZ6ak701b489mughPSgv27ydJ5e9FViiPRr9ED3alVG90CNr
                      PCDMoLtY+fO8HlSBvehUqbwDFSe9fT6pvaUthj1snus8bbpwvfAvvr0Y4nq8VD3JvIimlL0RT689
                      1WqEPYG8iz0YAAC8xwk4vW6bTj3KU6S9uQ2oPXFMgD02L6C988jHvR6VhL1Ibcu8ja+IPYmFnz14
                      SJ+9mOeQvTOYfb3XlWm9lATiPMDtgzwD4py9s1SovV1FxT3iwSg9V8uWPZRK8TwpCMg9rGysPPrF
                      q70A7TS7pPOGvTHHtz1KxEM9NS+YvUrYU70Y98q8RZ+FPeuOsD1AX+W6IKP9O9kxjj3HIjW9zIiu
                      PBsfxD2crQ69YG1ju0Jgs72IlsG9JqA3PeVJsz36VwA916+/vVD2Bzy/WpA9mTGFPVNtd73TtLu9
                      toUoPcIWIj2/sIg9qHayvLIeFD3+Zkw9CoaZvbz5E70ogkQ8K1ezPVBb/7tAAy28lu9tPQBgSrxH
                      Bli9FB8XvRAfDr2LtoA9QMU6Ox2Teb1yB0E9yEKKvCB1I73Gw4W9wPNAuxhgBLzVwbK9eziwPUaS
                      mr3irzM9Fqt9PZ4IED0ym7O98h4qPcC/+LzIeb48aAeIvAPkmr0oJa48oFTJPKhYorwhuII9V+ux
                      vciTvb3jSD29gFuau8U6pL00NI68LbSvvcohez2qTAs92AhFPGoHhr2IwYC92LAnPLe2Gb0Dw7a9
                      kG14vXsiwL0gHI67BZPFPW2kUr3e0X49BlF+PUBsujyHvsu95KX9PDWKuT0ArwI8EmoLPQCWTDya
                      IjC95auPPT3tpz2o9X48kSa/PRjapbwsDsO8IjIaPSOCG70U96K8QtNoPU4CeD1YPYo8dks1PTKh
                      wr2fuZI9YF8wO6CJarvwBVY8DPHWPBSovLy6Oz+974CfPWhtZ7zQgAU8DHKZvMEZgT2j9Y69AIH1
                      vFJAfz1pmJU9eKz3vHNkrL25NpM9e6Cwvb1gzL2VaqC9AgB8PR0nm71gosq9mG+QvXqhy72l0ZK9
                      A9hnvQjrnb3eqkQ9g6JAvWCUITsYLqq8APUXuw4PGz2W4Vo9gPIVOmKhGD0+6YS9mjdnPQafDD0q
                      hSW9sw2RvUZOob0aiVw9x+XHPYCovDyjbI690FWovTbAp7390oM901e1veh7y7wCZWk96At0PICR
                      uLrAzvi8aSOMPXW/vD2UKOc8EM1Vvd65Tj1AhbG9PAPwPBig9byqSJm9/1KHPbCHcjxjAse9TlmM
                      veFdwT276ss9D2Cuvdppcr2KLsa9shMyPTqzcz10KPY8jLiAvUCfUDu3nbY9J2aAPQy08rwoPcO8
                      CymbPX8YwT0tQJ69YGCpu2FItT3D9Su95mIAPfDxh73AfgA87dA/vRIiYT1/2cq9UiO5va7Kqr0y
                      jyY9YvJRPZoqvb3yl1k94uIiPVBcoL2io3A9cTK6PUI0dj1OtVA9rgZLPRDmbDygp/07Kj4EPS54
                      Mj0Mege9gNcyvKxWB72AHi46ajAtPSPZij2C0nU95+KEPdt5yr1Q4sa9oNuJO1gAaLxCgH09gKos
                      vVh/qjxq9Sa9zWYivWDtjLxjc8O9Sc3IPQw3qDz/8Zc9muMNPXCyvb1gBHG7KtWKvQYzib2q/Hy9
                      9I6zPPcroD3UG6E8vqFjPSynr7wtFGm9nbmkPU3Hqr1gv6690B8NvAyz4jw+shw9OIDSvCB5tLuI
                      OMq8zng2PSrQjb06eVs9MM6JO+tPxT2oLbe90AAcvAXwhb0mc4i9sAW1u5gNHLw4bIk8wPzWOktr
                      j71yVWU9py/GPb7LGT0hiqY9FDGCvSyVtTwjeUC97Z2bvUsZnz2ikSg9YMt9vYqiwL2MsaS82Ly+
                      PCu/yz2AKsc7Di6KvdNTbL3jCLM9dXWuPdKtOj2iP1c9eotEPeVPnj1lUqC9EGtZvMqtW71oONa8
                      c0swvVhcWLy3nUW9cu1KPcUQx71UPrk84+pzvdL3hL2tIG+98JyLvUA8Mrv6pKS9EroJPXyR0Txo
                      wcw8NWKkvd8gpD11AsU9p4EdvdJwYT1Aq606WlttvTP8Vr206p28Gp1GvQBNVLwZuJg9TqoGPVfF
                      kD0vn8S9MHqCO3ZbcD2xVLc94BnnvGdTP73eQk89WC45PN3Hsj1rCMi9TDiZPLx1ir1+oj49q6ip
                      PVGSlD0NOXC9EyuNPffGiz3ojy+8miuVvV05kz0I6Iu8AHavu4CfiLz+T3U9Ka6TPWDPpjtQ2s87
                      OlXFvagCujy2cFE9hLTSPNjTWTx4/KI8i0zIPWXYnj1MEsc8OBCuPPRJ0by3Krm9mhetvRjln73w
                      7wW8M6IvvQdnyL0hV8o9qAlXPHdoab0pDsg9G3OWvaqiPr3gMTi9aqGCvYmooz3UNp48tJPBPGD7
                      JLs4cuW8gCagPMnTuT1KcHc9yzWRPXPfvr0X4Z092POvvdY8Zj3QF/y7eo6evdIBYj0AxC69/oA0
                      PY03jr34VrK8Q0tdvd1fVb2d1JO9QU7EPV2erz0bOJE9imIEvbO+jb1ai1Q9yLm7PNgDEzwvD6E9
                      UKK0u5AqPrxgIbM7sJW7OwXUgr1nzp497ilJPcqKar3/Mcu9MtMuPaBtnDxNZEi9Em4rPae8oz27
                      jsA9VywnvQOIyz0nPVy9YiJgPWJBej39zMO9s8JPvVu/yz215b29MMNbvCQxzTy09dm8tFyaPBbs
                      eT3mwgU9EjAHPfNPdL2ABha9UOn6Ozruor0OCBA9AC2oPJKjib3gl5u79G6JPICx2bzIEL28Yjss
                      PaCSnbtUuso8mL4GPMAcVLyEy98850GXPRc0Jb0e2EE9AEO4vDWGiD2oj8K8jJjcvN2PxD1i1CI9
                      OVLCPSCGi7tX0xu9gBXMumAiPb0E0tc8hXTDPdpVVb3gRvK8SnR6PZtSgT0Iv7M8UHm5u8wwvjx7
                      CZW9Fv1WPZr4WD3qQw69pJEWve00U73AdLM8QCJtO1RpjjwATKA7eByovZrTHr1DaaW9UF8FPEbq
                      BD1ueiU9tA+cvNC4l70nlya9AJ0Ju4yB5Tw6zgs9GC4cvFPQjL1rd8K9gOzqOzL5s73gmZ67YQfC
                      PVhqdTx2K4e93j1UPZCvDrz5vIs9gSypPRghnb1wJZ+9JZu3vRRDoLzCwWM9MBKlO/ingDwdM6K9
                      VQ2TvdpRQb2dSqS9vm9CPZRpAb0yLpu9zD36PGDEmbvXAz69Ko44vfTFwLxQUlq9/gpJPWO1kT0K
                      1a69opUaPYj24rzSdhU9A02bPZG2yj1amge9bRPLPVrovL3bE6A9P1C1vRtLrT3g2te7rYO9PWdP
                      vb0Yti88AKpHvCBd77tSATs9mHSZvIJjmL1oRPS8v2OOPSsUlj2AqMS8xajCvRu+wL0CKAQ94Rev
                      PWdPWb3KPbm9mJ3vvNx43DwH8oo9MRCOPQAuhbvqhK693mUEPUDFtDrwvyE8iTDKPdpLNb3v/6U9
                      pbWnvToQCr3IZbS8QH5VPGITRD3PW4U9InChvfZSID2Uzqq8LDmMvK8RoD30GKI8VmaFvV9ykz1g
                      vcO7ABcYOuhvO7zoPHg8qN2AvDAWPLydB7U92i07vRhVZbyAwSW9iWWgPQpBrr2kdf48I1WNPXj6
                      rjzAlmW7Pu+JvQCkIL3A90a7+HDPvADdBrv/57U9qiZFPWbHRj2grqm93OgCvZWirr0K3X896JG/
                      PPrOGD1bibm9411qvQdNMb2nybE9ZiWmvSQR/jxGGZq9AIz6uu67lb3qUQu9AGzWvMA65bz2YaC9
                      ALT1ukiYkrwIMeq8QHmPOpYjBD1kvvE82zyKPZp/Rb3pwsg903NdvQCXW7v/sp0943+qvZh1irys
                      WeS8CEq2vcTI4TyMIoK9RKMWvXQAibw91aA9d4rAvVRowbyUMq+8drANvdChMjz4c668+tUvvckT
                      uj2wcBU8mh9MPRINzL2lH6E9et16vdZiZD2j/ne92b+VPTiqvb2jh0G9SGT4vKhRUryA4kG8GDYs
                      PARxFb2zNWG9CIyUPO85zL3/C549MIo7vcPckb39rji9hcW/PTlEiT3sNqg8ml2yvawtjTyg+PQ7
                      uF/lvNU/oD37UaO9AkiHvVqzFj2XU7A9KKUUvBEmlz1US8m8cZuXPSzlzrxq/mW9sBx2vGYYWz2g
                      8CS9BHkAvUkHtD395YU9o6q4Pd1deL36u0w9QnqBvTSr/DxTm8G9dzmlPfT0m7wyu1w9cS6EPQDX
                      lztisW89AMJwvbBBfb1fnLO9wOaMvHLMFj2aSE89KP6uvMrcdT24a5C8h09MvTDGMLySaLm9nUG6
                      vUZgGT0FgbO9gPwSPCzDjryobUC8SgnMvfrqaL1S+oi9wIwmvWDe7rsHbEG9fV5tvb2Pn72w4nW8
                      FRKuPbgvuDyOMSE9RHXZPMPAn70gvvs7y76NvYOqvb2C7Xk9pnUZPWKyOD099qW9VTmLvTMiIr2A
                      Yr86N07GPSEtuj0Nn6O9BvQKPcDwILzwbT884G+gPFDzlrtovKw8MKNivbSWGb0Bd6c9gOf1u4wr
                      0jyQck+8P2O/vYMOZ70yiUQ9C5C5PUDbaTuaqxe91bDGPbbGIT3C0gk9NHCcPLXbxL3YVIk8yhmt
                      vbGvsD1O+CA9ACYzuWMsrT34z7s84C/PO0VimL3qw1Q9APeOvaI4az0sMha9rRZVvZzdgb0bSbY9
                      THWkPMD2I7tvWLi9WuBvvU3jTr20iJa8h4jGPWAoUruexCk9ojwmPSTPi72CY469VoZEPfPgt70A
                      ifg7gFLtuymMvj2Gwn89GPn0vNi+vL1avcm9j77DvbPUiT1RcIY9qGYnPDqfKT0Gh5+9UDwVvbGI
                      iz0LF7A90ZqbPfFcvT3iyqG9okjLvQZaST1QCmi8MPhXvMbQm73idRo9h546vS/vpz0PtbE94O67
                      vH2+rT3MK4I8GkgJPTiqvzxjyJO9pvJKPSR/i72XGxu90kV4Pbo8Fz2iaSc9xcWPPUt6nb0NeIA9
                      rXHIPawUlzylQIa9DFGQPB9Pvr2aCUy9und+PdAWzLtuA4S9euu4vaqJfL3Nb8u9Ywh3vTZYbT1j
                      Xq+9aMGovBbpST3WBH89qI41PIA0Ur0CmRI9fl51PYAdgztEiOo8yKuVPKUKub0hn8I9nsJdPRBP
                      rr2RX689U9+1Pdi0lrxRAJ89ALVOuwZIir0S2AI9IslVPTK0Qj02BaG9VmGovWj9wzzKW6u93KLc
                      PBght7wSbBg9VIXavGCpE7uwOXi92JXIPHa2Qz24GMK81jgqPWXLjz3yRlg9QnhmPSkzlz0Uo+s8
                      IyEpvZo5k73gTYC9kp9ZPXbwBz0Y85q8CZW1PaiEqb0AALy4gQKXPa2Nab2gKi29ADVSusJucD0Q
                      0mA8Y66zPbqjzL0WhWU9MNytuxqvSj2Gkam9YJv7u91Fmb14lfW82GonPLpNtr3LJMI9QLcjO+Hd
                      pT1o7j28AIEKO7cKwT3a3J+9KzWuPZCsWrwqH8S9U2AavWggeTzEP9Y8tqYBPZC0fTwSzyc9vaRO
                      vVjxFLwcLtw8kMW6vQzx4Lz+5U89wJYiu5junLwrwKi9BhZzPXjXyr32k6q9WGBgvEfZUr0nwnO9
                      qtMMvefHJr3z95Q9Sv8dPTChMjziW6m9sBvPO6i5dLzHpci9AF5WvCBvmzz9Njm97MTqvDofar2A
                      AFg884u3vaOtPr0fLJ49yCisPOlenD14qb29wiQBPVypib2gRYy9cEcMvVBDJ7wJxIg9Z4bLPUwo
                      zjyzl8s9mOJrvLBoIDxib2091r6HvUiYy71gnZ+9kQXGPVDl87tcDg290g5KPUKWBD2EbNc8c+se
                      vZnExz07OLM9xfTLvQMda72AvWY6BnsCPYZHJz3YVWq8pud9PeSM/TygsLG8UFIGPJo5Jr1hIqk9
                      NhkVPaCh7ruZ+Ko9JiwwPdBsgLu0idO8Gkt7PYYJqb0J/MQ9OMfNvLfCcL3HoqY9ktxmPUBBYLsR
                      k5c9g3OavXATWTxCwCE9ljw+PWORWb1RLKE9g8o1vcCOcTz3xbG9M8K3PXQF7Tz2b1U93gJrPQAk
                      ErkoqNC8OMCdPL6nhL2AnVA6UyCUPZg4AjymcXM9mceGPSIoMD0F9rc9+2PMPVHtvT045sS8BNPf
                      PLD4FbxujgQ9G4ypPRqrjr3XoF29nCEJvdIYs73dEIo9NxqiPRMHu72DFrE94DHXO/BLqL0tnSq9
                      wHKuusHKjT1sid+8C1imPaCCKzslVr29I9tuvYxq9TzSyxY9suYKPfl/nT1cdvI83vBHPZjr8bya
                      UgC9vgNFPVRl8jwg13m9ELMOvQVtuz39XrA92NOjvOglWzxx5YU9AGL2utONLr0oNLG8iaKRPVDQ
                      WDxYdYW8txu+PfR90jyEuNY80CG4vQRE4TzXAD29iGqSvBo9ZT3TwLy99byxvTDNub2Am2u8taKT
                      PbLTWT1KdUK9+rnBvRR/7Dz5D4M9gkgePRJ2CD2CnB09WJpKvMDiL72fg7O90HLcu6jEODxMOuk8
                      AuN9PV2/xz1Sd8O9gFOvu1Y/XT29L1+9QKQuvVjMULyYhhI8vvZdPQ6dND3Ic/68Jl8OvTQgxbzC
                      xHs9bGDBvPPuI70ZsKk9sZu1PSF/gD043rs8PS/GvU5VIz3QoE68gDGHvJgrrL1mCEY9FKO3vAJ1
                      mL0dfcE9qFAXPH3NrD0NZsG9nCr5PHIbsr2Z05U9eV6gPcN4sr0N9nC9wB2WvOi0RzxAPRm7zS6E
                      PRT4q7yg1gG72IKwPCjejTwIFZ28KmCUvf/ZmT2IJ6G9Aj0YPVcKqj3iDH49qBrOvEDJZr26U3+9
                      qvFKPUrrDT0wks07sm17PfDuWzys4NK8drCTvT2fQL1LuYo9QPkJu1KqYT0ovo082aCBPQBUgjiS
                      Qqm9AG7du7H6sT1HFmm9wTabPaMluD3fuqs9JbGLPXKXub0YtC488Jw0POORNr2A3Yw7ia+dPbD7
                      oTuw/z48GvaovZaFAr34+JO9HIH8PMMgfb0M39M8U8nJvRj6fDx8ANk8jUNMvX05W71CSlk9LaOA
                      PcBOPrtEeBm9jZ7GvRK0bj30NeA8gJmCuz7VCz2+OKe9wirEvWBF87twmlw8Mt0nPZH2gj33a7u9
                      qI+VPHncgD1ibVY9KRCNPfInQj2A9LC6tnJTPb1olD1SxwA9wp9tPbSTtTwCVVc9d6mLPeKWBT2p
                      08I93g6bvdCDyzuApOe6OsJXPVK+Yj3M7fE8yCCIvaDboTwx36k9QEIWO0wOtTwCLmY9x6q0PWmd
                      oj3asWE99lRKPTL5Bz2WWY+9CstsPQCyfbvIIpi9MMdrvajpwb3ITLK9MOzGOwImMT3V2sg9Ja+G
                      vRC6ETxjbSS9YInOvMhwjTzoaZu8Ca7BPZD2U7xNZD+9EsDKvWaoAj3ge607oKb1vCLuVT3p44o9
                      egxsPfrLIz1gvx+7yhgvvaN3hj2ZdI898xk8vbQxlTzABQ48alwtPapFob3IcPO8Z9qPPSmsoz3A
                      MUo8xhsYvWFwwz1gw2S7TgmovbRb6Lz6nFo98gNkPSATK737RqU935iEPRi1Fjyg6Dq9kq8gPUBn
                      Tb2rMaM9+yiOPdEuxj0Ropg9H/uCPUAEOLuQb3s8qDtwvLPngD2g45g8zViUPfUrkb1EHNo8pX6x
                      vTwHhL0oDu68I38zvUbXKz3FrYI9NI6LvZPpRr3C62097E2BvNJPOj3IIoG81/msveA/xrwAsXq8
                      N/MbvawJ2zz4KN+8ALgDujBsTr2JDck9wBJVPGTmzjxDvKQ9MDtzvJ+0wD1Svi89YHSwO2BHujwY
                      HMI8ZphhPShPw70w+U48BjZ9PQCmkzxmzgS9PZ9ZvfWBkD16mEG9XM3RPPkEyD36sK29gtd8PcfB
                      mD0I3pK9hx9avez1vTwISpu9IX6rPemivj2wo667NZ69PevTob1+4TI9ACAzvR2hfL1AfZg69Pzy
                      PDsdnb1OBGg9q4eXvbidsjwApOc67dKBvRnNwD0gcdg7ekhNPU74Dz0e8lw9xgs0PZM9vL0CfsO9
                      CXGbPcuagT0ASAO7B0B8vaC83ztwjoG96ZSNPa0lsL3nWlG9mCJLPPL5dD3nF8a9XQmVvYDYjrty
                      bB49utsEPeYQjL3lIIS9WnF1va1xwD0LF449AMyyvTcyIb0gldq70aOOPSV7yT0QuX+8YJa7O9CO
                      ETyhYrM9pmJIPXM2wb3izVI9IC7Vu5e5sb1Fz4M9h7LBvXpfMj2d+z69cIpqvKwE1jz0XpW8fvBk
                      PWJUJz1oWoy9N/guvYpRIr1AgUI7ZaWVPeZfBj1pvbE94Au+PDGZuT0/Zq690Ebhu3Y1Xj3Uo/o8
                      ZutDPeMLoj2UD488OyWiPfVMqD1n97q9GgmLvXCMLzxA5M28AOo8PB6mAz09ZCW9FzSWPSzt8Txw
                      V1s88PlHvACm2rmAyfA6K86qPaP3Z73O3KG9gKHVvOCoLr1KuDG900nKPdfntL1g9U29u3q0PUOV
                      Kr0CH0s9mP7ovACkbTttKRy9bLr8PBRnkDxgckG9urRQvQD/mbum/hA9NMCAvSJmSD3gj9k7llMV
                      vWiux7zadHC9+56qvcCEfDuyIl094kEtPViG9LyUz/U8k6HKvVJ4RD2gXq87UFg+vfqAJT29Api9
                      YHIYO1SgGL0Rk7Y9zncEPUK4Dj2sSQS9oA4OvSgrxL2ybCg9UA/MvdgDlr3e0ms9WF9ZvNAir73h
                      vss9CnN3PWSCFr1wWje8etvBvTBVW71zRMw9MJUPPAwssTxQRYa9KcaYPaioUrwxw7Y91OaTvLQO
                      1Dxt03W9ABS6OkXnur1Qfh29UJB7vd0kYL0abRG96Kf0vHRU87w9RMK9YlgjPV28xT3Qn5c7aEdb
                      PCz9jryrUsM94E+gvdi/KbyTiJQ9l2lAvQiKxjyl5sG9tm4gPSfYxj2xPZI9OowWPQBLwLxnQEy9
                      DeSavesPwr2UzNi8ABOOOeiYMbxgCz694MqcPEetkD3ru5U9vGXdPDJOwL2oNs+8/aJgvepFQz2w
                      5go8CpJdPZu0kj0wTS29K/yhvayKlTyYesw8AGkhPAIHCD1S4Ka9SM+ovaO4r71AhGq9JSWzvXhS
                      wbwAQU88+9jFPRuYiz39z2a9QIo/PPB8bDyiX2Y9xEaCvRhPp7xeTJa9LfFMvbH+rj1gxce9Roxq
                      PRrvcL0FcbE9kKQ9PIfobr21T7m9OgKzvUB+F7sAip46z+6tPd0jSr0ACrk7WAq/PAD8PDyAKVW9
                      ULWKvQz2/TygSr293amfvYTv1TxleI09VE/mvKYbrL3NskG9WLwCvDBPnbuCDKu9mHOyvQ8Rgj33
                      UCW9qD9avJhkvDzg/Oa8bwuSPdomwb02GQa97DDivIAc3juow6q8tVW8vXr9VD1C6BE9zd2yPaDT
                      XjvjvZi9DJqQPGnOtz2TNMA9SOGlvWUqkz1NVnC9T4SzvSX+wr3gOla9M6CDPQi8jTxUe8W8bNGB
                      vbdulz3SZAY9TbyoPVDXAjzgF++7a4aoPUpDAD3wj0y8tRCKvViCMTzUF8c8laPAPdV2jL0zLse9
                      WjiNvQDLBruQSzK9WD/UvAAC0bzDw5M9PnNmPWwOGL19hqy9sQPIPZ2PHb3i+ZW9qUmvPRGPwj0C
                      EBY9gBNvvJBtfbyqvhU9iICDPKPRbr2o8O68qASfvNqRv7098FG9iJWHvfpYxr1oxfq8NHmCvFbJ
                      F73SGWk94L0wvaAfBr36KKm9sKEhvVj6FDzhXLg98IM/vT6Fo726s669qM5XvKSE6Dwgj6u7oHMx
                      u4CcpLxU8OK81K6qvOwF7Dz2boS97ECAvUdSuD2qYy89ZPKAvfjRwLzQWz29KF48vJ3rir2MhuO8
                      l0mbPRgreTwACRa7QSzIPWdvjD2Ll549o/uUvfnrnD1WaSs9wuOkvdiNaLzI7p29rTC3PWDmFDsq
                      QR+9EoeRvXLCXz0Asse8SvZzPfq5or0pv7g9I/CqvdyN4zwiQXM9RDv6PJhzcDyZ0bk9UGpGvKhu
                      jr1gUkS9Cte1vehhJ7yo5Sk8NO0NvXHOqz1rXJo9cDR6vUPvqL3FcKc9WvQrvcByAjv03rG8YeCR
                      PYCzbTwqV2I99NrnvBZvfz10G4y80KU5vIsjij0TOJm96dHFPb7cQz2y6So9H7C9vd1Dq73ImpO9
                      YikjPULBBj30F8a8h34wvZSdC71wRh88z//EPZKHTz2MIby8RloXvaCLervqSBI9GfqpPTj8pryI
                      XZo8sMaku7dGf73ttWm9GMndvMZxTz35VbY9Jj+mvRqGBT1AvH681BmCvF1LwD3MarU8NMX6vADB
                      uTwSNC89pJroPF0lUb0SrLG9R9WxvYGbwT3AYrY6s42evYHfwD1S5Hg9kFANvHO3rD10CNG8LmRb
                      PU6xdD2gOEK9V6IcvWpmDj14kde8/VZ8vfRYsLycSYy94td7PSJEq71COkk9T4qVPdCd+Ttw8o+9
                      QKbivIB/O7ww7ra7xlhoPa9Jij1MjOW8UqTJvdLeED1AdxC8ltFGPTCmXDxA4o28OpZBvQovn73z
                      n0q91wpgvWL4xL3akSe9zNmHvSgdpzw5ioA9pyNdvdZnGz3LzbI9I/+CPVpyXz2t+0W9rVm2PWnB
                      wj1qTTO9pAgLvbanND1CIEY9HYp/vSvZgz3isEw9v1ahPTJpyb022IO96uhRvWBDljzNwaM94w3K
                      PYJZSD0AAVi9MF1avNju3bzAiHW7UDpSvdzMDL1NP2+9Cv13vc+UhD2VcYa9cO9qPPSt7zy7ZYQ9
                      GyXCPWOKnr3KGWI9OgeFvU0ebb0QE0o8QcSsPd4TTT1jr4c9hCz+POPltj2DZHy9QltiPbacFz1g
                      /zY7BocgPcgXg72Y15Q8IImEOwL8GD25/b091K/svB1AH70GAnM9MMkRvWgzZbwAc9q8z2/MvcSL
                      3DxgJW+7Nx2rPUDccb3aXkO9zxiVPfCplb3t5q49mt0zvfAMHTyY7nC8Yt29vTZvXD2ewn89Y1c3
                      vX2xvj2Fk569wjROPfj9mr0MEP48cIE/vMERgj1QWhe8rqhZPYZSTD0ZF8w98uwGPSaphb2Is868
                      H4+PPfMNdL3+jFc9KHzMPFt5xj0vD689hG7TPLinyb2lyKE9YF5/O7wO3DxqFl69/W4pvaivkDxw
                      Ena8wBd3O8kIkj0anrK9eooLPWQghL0Yn5Y81IvWvJPDMr2Uee88cGuLva6zlb2i50w9qyadvYBC
                      qrxgHAk7sF0BPK3Hrr0MF4y9FstGPQvlmT3AvI682AslvCpRvb1Ysx+8l+y6vR2Fvz1M1ra8UwKi
                      vUVHqT0TC3i9FOX7vE46nL1Jv4k9MwCwPUngvT0Y4FI8ORGFPSCpAr1i7oe9AHNEOzBMR70GzlI9
                      F+GXPfM2pz3YMaa9t+c1vaAWnLs64B+9ORWjPf3bI71VYoS9zrpwPZ3TSr36BQ89RhwbPfnHpz0d
                      z4U9TlYBPTLodT1RqKw9AHpIvQAz5rwmRWE9wgBvPbFBkz3i2gY953pFvRTy/rzVJ8M9+MuIPPSP
                      kzxKDA+9AWzJPcBRdDzAspq9oBh9u+N8wT2DYre9yG7lvAyDzbxwnky8AEasuc55cz2Rqa49BZGv
                      vXhypbwHnXq9NBeHvbL1or1ZnIQ9WQ6JPXpGpL2MWdG8FvFvPfERuz3RJ7E9gH+jPBLZAT0AIyw7
                      QAMyvTonwb2yW0w9cRyoPcEHqT2WyTc9+uJHPepZib3QQB298tuAvbLvCD2gNTG9Jx0gvRVNgL2y
                      nHA9wJZcvVNwkT0AjGe81CuQPEAF3zowMFq9QDJhO4nvkD2M/vM8+xq/PesxkT1SvTA9UFwgPIg5
                      lryg/JU81kENPXKGTT3QvsS96TS9PdCHj70O6au98diGPWFblD0mNYq9wFpoO1mhkD2+O4O9+z2R
                      PVyugL3dhII9oF0ru6BW1ryANtM7GIK9vBrQZ70Pn6k96Y3KPVoRBb132bg9Q3OFPaym+Lxua1k9
                      OxLAvfKqJD0tAY89
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNDY4OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODEwNDY4OHEBYS5kAAAAAAAAAIFRxj2AfjS6qghdvYPlkD1h9r49mGJyvOAVfb1MtMc8
                      deC/vZhkTTwpr4Q9ADk7O5BCcbx9kV69XV93vfk7rj0itFE9uZ62PU39OL3gpeS7wl5wPUTziL3r
                      Obm9QkmXvX6bbj22NVs9eNbLPApomb2eEXY9AJPDO3Q+lTzz5U29g7GmPSfvpz0A/yi8AAO/vCi8
                      v71skv08wORovQaYjr3V4q69w9qMPY4LIT3CgQg9ujFLPW+esD3AcV69RgIzPZBFDzxpwI89xp1P
                      PWAwnjsacgY9cOxcvS0SJL3QOSI8ANRqu9fguz3HZlW9JRS1PSoiX70ZAJU9gz08vdSZhb30QcO8
                      NlUHvdZ7QT1GtQ09Uf28PbA5ZryAKa88KCBwPBDlWL3Trpa9g0d4vcdPbL31zpO9E0BzvaXyj73i
                      1i09wu2yve7PMj2DBqO9aAM0PH6OMD0IcJm9R0KzvWfzOr0Haqw9qZ2mPcKeZj02n2o9qIURvMNi
                      wj1wj7a9A0e6PRWxob0Yupi99yq4PRNcTL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNTA4OHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODEwNTA4OHEBYS5kAAAAAAAAAC8ur73AQru6/jcXPSeLiD34CIM87E6zvCUKvj2HmsK9
                      u46gPRC0U73NR5s9TPCFPK2UOb30Bhi917cdvfDWQL0AB8u8vb20vVi+27zoh1G8+u2nvehWt71H
                      t2W9oKnsvK2pnL1ENvY8n8+HPcoTET2UiPO8v+WUPe6bHz0ASHq6mp1xPUzKwDxRkI89mOWLvEJi
                      w71Ke0I9g2AovUodAr2oXoS8GgFwPU0cdL0DIY09KV6TPSYZpL1H4Ey9dgeqvadbt71eGaq9wguj
                      vUMHWr3PfbW9ReXLvVDSNjwHcTa99DgIvWY/Gb0x6cM9Gd+wPUkalj2PpYE9Nh12PVhrk7waFBM9
                      2XC4PZ6eh72JuLk980QfvQe8qj2a62m9ZwlYvTCUJr0HuLo9yLiTvXB7ZDxqLG09wON2vEeQtj0d
                      lki9doNhPXh8xLwLNYg9QPcavIxEorzlM4w97ZWDPazdkLyn0Vi91nByPUtMkT2svas8kYSYPaAz
                      w7xTk6i94AJZvapwYb2sbrq8E2FQvahgC7w=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODEwNTMyOHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODEwNTMyOHEBYS4BAAAAAAAAAGGMqD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        B8HEKoF12ShZuagoWbmoKM4UByc7exwkdeXGIXXlxiE1LZ4lcClfJfB97iLwfe4iNS2eJXApXyXw
        fe4i8H3uIhAFNi1FCpwqdQ4gLXUOIC3CvgMt77ZGJ6ThNyik4TcoxCtMKy6+PiazfU4ps31OKcQr
        TCsuvj4ms31OKbN9Tiljy14u2ddLLNEA5izRAOYs1H9rKzvl7Sm3DAQotwwEKIlHdiv5PSsqHoJR
        Kh6CUSqJR3Yr+T0rKh6CUSoeglEqY8teLtnXSyzRAOYs0QDmLNR/ays75e0ptwwEKLcMBCiJR3Yr
        +T0rKh6CUSoeglEqiUd2K/k9KyoeglEqHoJRKoM3sjWLP6E36dLPN+nSzzeyyoE5WRVgPBpMsD4a
        TLA+ja7dOqcgHTsKB5M9CgeTPY2u3TqnIB07CgeTPQoHkz2qpEAzkrfgNQIUWzMCFFszFRSFM2B1
        MDlhsT44YbE+OCK+KzVN1Tc6J9ApNyfQKTcivis1TdU3OifQKTcn0Ck3/GIdMtcELDQxdJgzMXSY
        M1jlFDVsZZM2hMWEOITFhDjgYA41k8RMNhVeJzYVXic24GAONZPETDYVXic2FV4nNvxiHTLXBCw0
        MXSYMzF0mDNY5RQ1bGWTNoTFhDiExYQ44GAONZPETDYVXic2FV4nNuBgDjWTxEw2FV4nNhVeJzY=
