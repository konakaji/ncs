N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgxMzg0MHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDM4MTM4NDBxAWEuhAMAAAAAAAB8/Pk9xiJCPussS76WQmy+0ug6PvXIlz5aMW4+q22S
                      PsCHLL4aAC8+wMaMvhCmAj6WFvO9HDvTvZWliT4oIQC9svw2Pgh0CD1Aumm+WOUePVxMkL2UVo49
                      NSOaPuiRPD2HKI6+aQSPPrAhkjz7Q6A+rEmcPZjQWr3lGJQ+Ly+RPvjpR75UC/g9nOWPPb5rRD6Q
                      xwu+Qi9OPkLXGz58wZ89IrErPjgEBb6VRIE+ToEHPkA1hb3ZxIg+7JfVvXXIoD6AAVG8Tg04PozJ
                      5j1Dvqi+3LeIvhTLnz0A+6o76g9qPv6lpb6O72K+zCyXvuCz3T18Hsc9woB1Pvj5M76nppU+6uNj
                      PlioLr2YaiK+zsgJvkZuI75aOVc+QMBxvjP2YL5epxi+BDmTvcx/tD08dqU95uhDPlCcqL0AoBG4
                      dbKRPmFhpT4sXJk9qJ9cvTiySr2vuYs+3Fu7vehmBT7z6Yq+sKGovk6iDL5gJx4+1FuxPavQfb7r
                      o5C+ru8lPgCm6LtAnz2+rtsAvgetjT52NbC9XdKSPvhEmL6amX0+wNlLvmCZN7z2v02+QLU0vWPg
                      Zb6aOWE+ABuuOnpfST4re4++wsKGvoBjbL6CsXQ+bJimPYslnD5pF4I+g4QlvnDaJ76EmIm+ENSV
                      PTjXGz1DrYw+IZKJPpxBlT1zNjm+2I0PvqJdej7sT+G9n3SovtaRcT4RMqM+RopkPtU+oj4A4hu9
                      QLqSPWerqD5STpG+lN+EPSDaerxwmY49xH+HPQajNz6esnY+TJapvr5KOL4oypC+qjdhPjZobL60
                      +4i9JmcaPqH7lj7o0FG9gKdoPIb9dD64LFa+FO7OPZ63bD4dqKA+nusTvo7rTz5A8d08CPxRvlGE
                      lT68haK9OIZWvuDZYL3epl++kmZ4PgqRVz4Jr50+gutjPuJsMD4d2ac+cWOJPk9mmD6ALPg9vqAa
                      PrZq7r3oyn6+I4+XPqrUST4mGmE+31uVvs65KL60/cE9UReOPsAyj7wsJeK9NIOQvj1Ioz544xq9
                      IrpUPhoGez4UH+g9eooHPn66pr54BUw9CIEaPeg2Ar32cwk+vq5ZPlrnZD6guUs9gJIcO173CD6w
                      gZW9QFTeu/DHvT1vWIq+ZiozPsAihb4W8dS9+yqAvvDLyT0lKp8+0ycdvnIFbj7QyKK+MZ2QPvV6
                      nz4MiKa+fh11vqMDZL7rV5W+tkjvvazAt70ed22+lnkDPp4Bgr4b9TW+gE3HvPBU8z2U35A9heqL
                      PoPTmT7Ajy29EEjLvXm1gD5g4ce9gPwDvSrTYj7VCIg+K8pEviiUFb3G9PS9opBLPrA/zzy2tTW+
                      7mNLvirdbz5wt9s9Q4lEvnDHxz1Irhq98Dr9PVd7jb71AaI+/mQdvn1dlT6DvYA+wBkoPgCVeb6I
                      ch0+4PkHPPSBo72oIG+9uGQ6vuBVPrxT0TO+uJMHvva8Sb5mwK69+Kc2Pf4HF74htYQ+FXycPhYe
                      u71jWzK+IFxdPbhUWr22Jls+yEIVvfv+hL65/I0+IDRCvmBaGb5DvI8+5RmJPuAv8D14Qw++vrxk
                      PlNJa74gelK+NqsLPoYqi764Mzs9kMvUPVi2Br5WDEg+DJGHvpNJnD6OiSU+/4efPjAScb5wuZW9
                      IKUwvcDZBL3gHFi8wEGNPLulkr7wH/G9Dz6kPihuer5wlMm9AND8O870R76W15K+zLydPcBqgbuB
                      2YY+Hn85vqIUYz7gDPo9lVaHPhClWb5aKhA+4Bi7PYL8TT6IdS29aJY9vR+wiL5gfAO+L8qGPtxu
                      8D3jjKG+1NOmvnjoW70CzWA+PJXTPVj2Fr3V0JU+AAQBPOglTr54Lnu9sy9Ovt6/TL40jIO9q6Ri
                      vhN+PL78HI090Pj6vTjGIL5cSIG+Amp7Pka1Rj5O5oW+BF2hvYVjkD6evyW+Bl2ovpgQFD0QL6e9
                      o7dqvkBMrbsXTIc+J7GQvtN4Vb6MX9E9vduRPmBRQT02ogQ+w5oGvi4Tob6gdsk9uCMZvozB3r1b
                      Dk2+mF8NPtssiT6uMks+0GmcvL4/oL7Ve6k+ZPPbPURj2D0vcYY+qAIqvi4aIj7mzLu9/EbHveaP
                      370ThIC+4ruVvoA3GT7W7Uo+gMDVvaqQdT7u1iq+QESbvgA/Irwgzme+Zr3lvSYmfT5iepe+qmh+
                      PpBYY76cu/E9ZLqhvsBTeL0Kk24+YTmFPnjjZT3m630+gHv0vG6yIL5ewjG+qUGHPhSMmT1p3ow+
                      YFl3vi5xOr6wtsG9VmQevoSjwz0Wnk0+01KcvkDjND3+3WI+yMyMvuQ6kj0TtpQ+xqFPvtBqHD4A
                      Mrg8hG3aPagCqb7wA7a9ZPKgPbK5ZD4gc3I9WMo+vT8vhT76yYe+DoUsvsE0jD4LWIE+ieCOPkS2
                      oL4WNDW+wEiqvkDOtjv7ikW+jAHZPWBVGL2uggQ+EEXvPRrXNT5OEjA+8A93vkaPLz48o5i9qtyR
                      vji7W748Tu29uIJavhChe77QPuW8kvotPhEthT7of2m+VgsRPgCDT71AOs+8MNsSvh7CAb6Wu1I+
                      SL94vhsBmD7qeZy+BPjfPZAyNL7v+5G+woCZvgCL8DpA4GK+pHPxPZLTcz6AS9I8gz+OPqKrWz7T
                      LI6+OLsnvrcRiD7QSaS8QHi0vB7qCD54mDy9aIgtPZPZX74xrI0+QO/XPaqecz7c3IC9XAO4PWAL
                      XT20K5C9mJ9hvhuXe75llIM+KG9dPZKOID6F1JY+BpcgvjaaQD7emle+RuPivXw79b0wezO+kp9w
                      PkBUkb1KjHU+tuVlvkB0xDxO1S4+/nVnPjouFz7CZ1s+Qx0rvkBl/buYLF09s0YXvkB+yr0E2uk9
                      hi4MPk6rjb6OPig+OaujPo5nMD7Qr2O+uiehvrAA7z3kfJA9QEf6PcOSRL746WA9qO8FvsA00bvE
                      ns890Ga6PA7VET7YJRO9QOlnvbBYmb5TNY8+LLGhvuYsQj4jbjm+7P6OPWE8iD5rWFK+KwpFvrMF
                      UL4Yhim9HJOPvQalvL17qm++zb+IPi7daz7eUG4+omFDPvxPmb3wDK49VeWhPsBNt7xDewu+NPqa
                      PSJ0ED7jOaU+nsdlvm50lr4ubDe+g22lPgA60zstc4k+2P06vgGyhz66FZe+eMspvvw+l7784+w9
                      +GgWvcKnYz5Gjzg+Wz9ivmyl2j3frpq+evZYPszgzj2iQ3I+LutiPsGymT4arWI+JjDkvfy52T1g
                      PXS8IFRWvarlLD5UWYO+UqYtPizZsb06YGs+UImRvJDvkT196pg+75+bvjYSV77Qwdo9uOxDvZxJ
                      3j3FVoU+lKyGvlgqWT1UdbY9G/+BPkSaj75gt4w9YDJMvXr2qb61RZs+00lmvgCj6LxAu/C8Y+k9
                      vsaQDz5+AgY+KPI8vdABDL7odS+9hDKavmNzhr492Z0+cFKMPONyqL4wqOm8jjBKvuj+ED6AmP+8
                      u3GiPlI6fz5ISGO9NhWMvtsshr5tJKE+wPuSvPATpby7WoG+HdaRPioiNT7AdEw9+GZ9vp6KNj4h
                      tZU+gIcpPUbV4r21sZs+N0mJPr56ED6AiBq8SUiMPqBDdTz40Ey9rpJSvorSgL6GWPC9WxpWvpjE
                      Hb6z5oY+FrMQvtoCnL5EqZA9SAQ3vvhBPj3+r4q+4FRRvCAWdDzyb0E+MIKJPIJGFj6WLo++EL/L
                      vahzHT2jEWK+Fu7xvRSojb2QePw8MCntvfqUQz4iS0Q+O76TPrm7pT748nG+yrs1PhihZb3qfmI+
                      2CoQvZK5PT6wzus9Xk+evkFToz7eg6G+44KGvkDl+j2g+yW8dYKTPsz0i75pboE+QGx2vXkioD67
                      PIM+difevU7dbz7Iz1W+mLibvmrAfT5YfgM+CkZZPmpHSD4A2vw81iHCvbAvxbxWYlQ+osd6Pmjh
                      QL3Uub49ZGWzPSgXa70IiUK+W3+lPiCyTrxMRJU9rjERPkIBTj5QXqI8HEaivRmeqj4sAb492MMf
                      vZ7eY76gci48M+hqvhu8Ab6E+ZO9a1xhvhAWmL3AEzu+iGkEPkMxmb5cqdK9QMKMvHWkhj52cji+
                      W2FqvsdTqr7l7Ic+gr5ZPmGroj5p2YU+gKyRvaxmtL2DdxC+/CiYPU/4jj46Hg0+wDhTPRQoj76s
                      xMK9qKp7vbJSRT6AFKQ8x3WaPujIR73Wgmo+VpO5vQBCIryorBA+a6xvvlNcM76yJB8+0Es8vsgO
                      n752LzS+oJgCPqAnQjxr3aO+hySDvrTd1z0rgnW+ZYKmPgyzlT3A96o9SoYnPoIgWj5YoXy+dGqM
                      PdbzKj50g6i9+QihPrSKjr67f5I+4MkJPUhOI71ozUc9K8l8vgBM4jnZt6A+aC5ePRuNhL5V6Z4+
                      wrMEPryr172Tl3C+CC9nvVghWr2C5k4+cPS7vRDfJ762LDG+VR+NPlCaqL6CflI+5fiMPpQcoj1V
                      L44+zicmPszgmr3PxZu+bq9dvrZfr73AAp675UOBPjXZgT7bhD++MDGjvNCi1L1rkSW+QLE1PZuL
                      ir4TDpc+yIcAvtBcvj08OIy+al4qPgrYCT40U549OKlCvmys370qjBM+djYEvmPYHr7+JXU+I/JO
                      vgjykb5laKc+QhJkPgW9hz6AeKq+duhEvm6nZr7A/M88zuppviL3HT5AcKy9vvk3Pva0YD5CUxw+
                      bv0ePgAGjr32cGS+2hlqPnDjgDwiQjI+AY6gPsCIYD2ecnQ+dpKuvXYCWj6KrIm+IBo0PSBVTb6U
                      r7c9b9yYvvoEBT7whg++30aFvkA6Or5m+/29Wjudvr5cAT4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgwODA4MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MzgwODA4MHEBYS5kAAAAAAAAAFJyqr4iJW4+gCFVvAgvWb56dDY+eiadvlp5Pj69MIw+
                      BvDVvcCh5j1YWwk+OtdrPgNIp74yAG0+PxegPtAEh76CbJC+QGavPNhMFT2+cje+vdSIPtA0kb0A
                      Ocm6wCEPPoLzTT4pPZU+SXKcPnCy/L0aZ5++Yk5zPvhAcT2OBQU+aP4SvrCh9j2BiaA+mhc/PgD3
                      bb1ctPC9amQRPuBCNLy74A2+WHclvuiqKT0gBK69+KMbPi5WWb50GYQ9V5+cvsVmhT6A8GW80JlV
                      vsqgkb5Tnia+6vYCPlPziD4MhIY9xrd5PnTEgr0ANr+76JCavo7nF746kBI+Ip98PuhFX77g9Da8
                      eicjPsTW7D1NDak+XKKcvRiJmb4beqY+jbKLPk+Yl77a4wQ+zt4zPlbLq72Atya7i/tmvkw/tj1A
                      eK489qTovT0XpD44il2+oOAXPVCkj76VdJw+jQmKPp5Xkb7AwOq8yVSAPjJQVz721/a9JsHsvbBK
                      p7wUiZK+/mpjvoY/7r0s78c9Jt3BvczMtb0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgxMzkyMHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDM4MTM5MjBxAWEuECcAAAAAAAAoopo8PVaFPUCFtLqjDbQ9kKAJveP+xD3ATDU7JUSm
                      PegzQTy2PHo9WPCNvEGbxz2odXG8Ca7MPefqsj1QY2A8eJiFvZ3Tlr2g/LY8o3KQvV6bCz1Krgc9
                      rI2ePMC75rxAO/M6yK3cvDQt1rzNqUO9zAW+PE5on73566A9nvOOvbg1sTzAAB29YJmsvZ0piL0X
                      812992BtvXEVuz06hbO9Emd4PbBetjtolcE8k6m6vQjJizxAqzY8uEaJvKMInb2imhE9go0bPXHm
                      rj0rQIY9MplVPVP5nr3Wb0U9qG78vLpSKD0Pp7o9rv9QPTENoz2vg5c9Mv1QPeMMOL3HuSq9ZJnV
                      POgTy7wz9ye9xHbUPK96vz1NObM9wPcNvLCOWTxKu0O9YN6IPFTAnjwyqpu9JFD8PIaVJT1BG489
                      wyscvTDvUbyz6Ga9tNXPvHQ8Gb0KVT29nkcNPVkrhj2AwCy89ZSiPSqDcb2Z8cU9RmAdPQg9sLzt
                      Uqi9wRigPVNZsD1U29u8JOfpPLA77zvlYZA9Yr9lPSyKoLzklvo8c8UtvbI0t724f6m8hnOkvTh+
                      7rwUYaW85Mz/PEhHpr2Avbi7Ou4XPRYPh73QpoM7wTyCPZBDQL0vqrk9xxp1vUIxFT2+XJS92uI/
                      PScRaL0AEKG7Ia6yPebYHD0HDGW9gEgJvQphID1AFL29mzuKPc5ffT2KA3k9PSRrvQJhFT1Q+o47
                      YH6vO/nPxz0VP4E90P4evKg3kb2p7ZU9cEYhPFd7uj3wunM8UFCsvdm/uz3EsNc8WLqhvdgJprxD
                      FKo9x7xbvbVhpj1AEKw8Bh8Qvd7Dp736+yY9ZFrVPAXfvb29Osm9R/1tvQK5LD0gqZE786ohvVmT
                      oz2mLTE9AxqRvUAnKLz+ayg9MuJKPd7NmL24Zsa9r4ePPeCxKb078LU9ZthVPdV5rD0dqDa9s7DG
                      PRcMX72gAaS8MDYPvK00qb3CLoG92SrEPcA1erz4nrw8cKYPPAKvbT1eb3A9eIORvBh4qrwYxVA8
                      MDsevBWQhz2gCgK9DCmbvJTmizwGsam9YEceOywjsbxANVI8rkQXPSC34TtY50g8UkyDvfAqJL1Q
                      APW7wPvivPator3TB789UE/7u0y/uzwFjqU9LVifPUM4qD1iJIy9U6jMPcdnpD1IoPi87MaxPJLt
                      HT3okUE8e5itPZo1JL3Iz4e94J45vfpNhr1j+7O9N/RmvTS56DyY4Ag8PfvHvb4AIT3SggA9TDXh
                      PP6Nqb3gHYk8GZ3DPUJwRj1syuI8okY4PdC3zzvg+MU8kMtiPOgrubzbw4Q9aoEJvSAYprxli5G9
                      oCOoPEIyNz0Pf7g9QIF8PIvvr73OAEs9wNJYPHFmoj1gHH29+ooiPWpfKT0ikIa9uN2TPDCwFLyw
                      Wlm9zXqtPR5FYT2Si5m93SWjPbgk/LwNH4e9Ga+OPe3uar2Y9IY8jQK/PXdKyr2kig+9MgaJvQ35
                      nz1Y85W90kJ/PczziL1MqpE8TJ7wPGAmsTueuXA9dKGvPGecnz2y+wM90BIhPPhTr731W7+9pcup
                      vfckWr10rbY8cnYyPXqzCT2TsnO9fd62PepfeD3h/Yg9Ql63vYuwgD0tnY090lkBPb1bl70dycA9
                      8obBvTAjCDzzWnK9KF0UPJllkz3QXlY8AzRIvUKRzL1AVYS8YMLrO4biVT0nXsi9Ohc2PZOLtT3U
                      5rI8kGwgveC0Eb0a8AC9s4OtPcSY7jyJA8A9MtaZvc1TsL0hfZs9XRZwveu4hD237Le9sgSzvXC+
                      TrzKMl69cAGyvaAxIDvJLbU94rglPUr4e71uoay9ZmSQvR3+kr3QjZM7QOPzvMplqr0jZbw9jYaX
                      PdiZRDz3lz693oIiPWBo3rzp3aI9ALM3PPr2ur3ABFe7rk+VvT31sT2P25c9SmXHvaDQnL3U0po8
                      dmMWPXUIwb3gPjC9w8wxvbqSIj0SUmc9G4urvcAzvL2z0LY9IEKxOxIWDz2gb547VuwCPZ+BsL0z
                      N2C9MGM5PDDIuTs5V8g92D3DPLmlvT1ZH6Q9OUCQPdBFdTz3xjm9m8rMPQiq5Lx4taq8Mj11PQqf
                      Dj3fw5g9gYW4PSbsfD2MCBC9inFzvaVDpb3Sc3U9whk0PeOqoL221aW9PcZEveqyfb05l6g98HZE
                      vRr4eL1O9yo9Tb+UvTOxZr3sl4m9zW+RvfJzIz0WuKq9bHGmPC1wdr0C3149aUa2PcYBFD3q/5+9
                      vVOuPXi2+bzo/SI86MRYvOxUkTxwM0O8wms+PSuKlD0Ahhe9TLe6vNOjyD0HJLO9OQyiPRA1JLx4
                      BoO8sAHNO1Ry9bzQjOW7MC8UvCidR7zoIgM8MtCivS+zkj0Sm2c9cq5aPY7ZVT0d8LY9QpSdvWha
                      FzxmswQ9YgKTveNSoL0yEFk9t8THveDs/zstxGq9clplPZqkpb3s4pu8yohxPVLqHT3WpIi92QGj
                      PY72jr0IkLc8pLnaPANgxr0iT1s98qcqPT2Rbb37ArM9tEq/vALKlr2a9xi9MuxLPRDgHzy7E8o9
                      w/uUPdARl72KQIW9SX66Pffqyj20p5S8lmMrPWihorxBuIo9UtFGPXHRoj3eHZe9Zzw4vebYDj1G
                      AH89tEzDvM53nb1Mpv28wqC0ve53Cj1N54G9UElbvaLpJD3U7+O8YHDNuzfTnz2L9Js9ghDAvZ2G
                      jr0vObw9kr11PdDLnTuh2oc9ylpmPa9Ftj2Q6js8bf+jvRBBPr1G3Ss9EE4DPLnewT1sVqO8PSty
                      vfs7kj0WAxk9aTu1PUWUob0q9Ww9U6CyvQALQjysKZC8IEa+vHLkcD0YvzW8ArK5vRZ+mL3LzsS9
                      wOpwu4D3p7sr0489+IbFPIyUCb1AO2O9QC6zPFh1fjzQ/Lg7GGZAvCAkML3aB3U9PceVPUyourwY
                      Nbq8ML60vS79MD3A2vG6zd5kvah9tb3jRh+93lenvWDAxbsJOMg9jzjGvZrXS70LFKM99gRaPWLG
                      Gj3rgqs9kIVRvHN1LL3g3bU719qxvQAQ0bpaLBI9aDcJvFIkTz0mTWY9NtilvWA1kLwUM8U8VmGl
                      vUz4gjyBXcc9wLdTPKhm4rwAQxY89OeivCeBqD0AZmQ70GJ1PCWdlj0UOPK85ytvvRharL3KzXc9
                      U/5MvYB1BL0XNsw9Yj1wPTeBoj2wL2i81NrcvEjawTxwiz68rZyEvXgxvrw3VKA9cUGNPaiiBDyD
                      OzK9zlECPZsagz0ghZS9IiIEPQ1WW71shpK8YpCQvcL5mb0TIyS9SuuqvVOAsT3Cgws9s7A8vRoz
                      e71W+pO9RdCxPWKAQz21l6O90lwPPRqNEb3AqZK8aGgFvJgIsLy5CZk9J1i2PVRkE71oFrW8SEOG
                      PPQB4zyFipW9BD7OPIAKer1p6sI9taq6PahiZjx21xS9TXhzvbqBGj2gVyI74qcoPeXvtj3tjqG9
                      QtagvQCGpr1ODH092Mm7PEj0tDzAt5w85DIVvVJoRD0ABiu8kQGyPXGLgj20Tsg8NoMCvVPVYb2W
                      P0w9dfm1PbD6i7uA6HE8mK25vQBzJzp6bxw9VDfavERW+zwClce9FjeSvd9Msj1HOme9Xee/PQM4
                      yD1EHdw8ZhOkvewNxTyGEEI97iwAPRR43DxNi4Y981JXvVKWZD0qXbO9o8p5vf1PN72nhTi9aKPh
                      vEOeMb3lSZ+9l5ZZvQBoTritIsa97MnWPA4Pg73cutI8q/iNvek5rD1SMwA9I3ImvfIZfD3ofgw8
                      5925vX5AnL3a5SK9jNSMPNCPc72K8VU9SMSpvTEyvT06T7K9KKSgPB0pXb3MU+c84JHIvdYsVD3a
                      RXM9KpapvaPBrb0WkSU94Nn1OyrjXz2HU0S9tc2RPbAC4TuKc569sXKIPbn5qz13lSK9DECoPH4O
                      Kz3wGIG9DTSJvZJ0Sj2OB6C9VgUFPevKqz0ldas9NUWIPcD+gDyw7V69EYiEPcC3pjz44YC9ioER
                      PdQAijxwjEW8WOaqvR2zqr0JeJY9apvIvUCXU71Vdco9DURGvUX1yD1tRS+9RoGkvTDuhbtgxkG7
                      PjY+PYC9/rzWzhA9rJ+svCrBgr1gJsO86dyWPfR+hjwTImK9DHSIvaiWizzAMoS6mFRePHC+Yb2A
                      U7+81cTIvSVetj2SaRg9PfC+PerImL3jkTC9KiJOvSp7ej3QUia90AlcPOreBD0s1eQ8HbOhPSCU
                      hLswYMc71dq3PYJmGj3Lqr+9eaqUPUnuxz3AZS48UD7Xux6bMz2Oiwk9pmkjPUCLubykldM8y2fK
                      vYmXwz1KvyW98N9TvQBzbrqCtXA9R8dAvbDJpjsADF+8cCxIvCHxmD0Y2Ya9Y1fMPfKCCD3BfJg9
                      3idZPd/8xz1ApaO93PELvbQQgr3Ed9s88mhwPVCiujsT5KE9eF2Bve4HXj2UR9O8ovobPeArs70Z
                      ZJY9QO9XvCjGrzxplaM9bfGTPShlibyFpYC9nHwZvRK6Mz3EMuI87vmmvRZXdz1fEqA9gCi7umzq
                      hb3obwQ8oJXGuwCQRDt5vKc9FQiLvabFdj2kdYO96DIwvIglqb2yc7u9giJgPXAxLL38Y4G92Lq8
                      vcpPQr3MFvS8YO6SvJ0ZjL2nWzi9E2l2vadoy71uz249CHuivLTxpTxw5Vw8mMj5vCVuwz3Q02e8
                      yp2VvWgkF7zEUIK9dU6tvdjZP7zGwm09yWSQPYA93btg7iM70H3+u3drsj0za5g9x1GmPUIhwr2p
                      QIg9AGq0ujhHt7yI6o08U3wsvdiobby+JiM9yKGsvJYJlL00ieO80PShvaAIhb1fm4Y9aCVOPBC9
                      CLxeqmI9QwI6vYD8iDuofau8eaKvPfgXoL2wOVC9UsBaPfg4gb2aClm9wlZ6PYB1njwytBA9tS+V
                      vfLPbj240oq9ccy4PRCxVLyUT/88QAuxPOAydb2XHbS9c0BRvTgoyLxyIE09UGj4u2BPIzvIRsi8
                      9NObvBquxr0W5hi9+N+vvCQrE72ATkA6EUqFPU1kcr0RwYU9tWKdPVAQcb3K/g09+k6QvdPSij1u
                      oSs9YOCrO3RIvrx/Kb89/jphPQTD4jzqtJm99pOqvUBRkzqkpAC9+fjDPYJmST307Lu8ke2LPeFC
                      gz0ol5K9C/bHvWD34rwbari9s7G2vRg5erz9IcM9GXzAPWZ3ET3uB3U9AFppO2oKN73sY9m8lKzO
                      vNapGj1Xt8u92lkUvYDmbjrAcai8uRqiPbfDIr0DlLy9sIaBvVzsEr2AuJg6x916vSqdOr2XMHG9
                      KZipPYJTcj09zbu9oOtru9K0hb2+jiw9fAUAvcn4wD0f8p09RZekvcKKKD0GtBQ9iBavPK1JoL00
                      LRW9qWaSPbDmkDsUW+W8K3GLPeM1lr0YW1M8gL7/u2jpjLxKSzc9xS26PT5SfD2yISE9c4HDPbIl
                      Fj1pRIc9ocqXPdCeebwhaZg98NwevFM5xr3sFBS9969AvSjknr1tl2q9N5giveOrKb0crvY8Sayh
                      PRKMGj1sfKo8KdmYPZIfQz3pfII9eM2HvE6pBT0zaX69r7C5vYBCUDzE/NI8A2EvvZ5MJj004dK8
                      FMjLPF/Kyz1gGWK7uZGTPcDoBzvAWOG82rCzvSwNxbz0eom8UtGmvdLjKz1j4E69VyjKvfF6lD2s
                      eOS83MXZPGDs3Dv6ejQ9UdrLPX2ffb26r7G9qFa+vICPyr1e0ou9dJiSvKAlsLvMsec8FhAVPSnJ
                      yT3XNn69gKqTPHLELj3ySg890lZLPefzRb2sDMU8lWmgvSLyyb0wjn28+pqmvdUIjb0a4Va9EJEY
                      POtAoD3oN2g8yhVxvTS/0bwAXd47Moh3PaJ7Uz2YzqE8F5HAvTjjwr0g3eI7uKaoPDU5kz3Gmpy9
                      Uhq3vZAGAL2eKxA9QFOoulVayr3kGOg8UC0IvaD5xDyEtxW9pkUFvVJpJT195DG9ox9gvZrkdr0A
                      Hr673aFovdljiD2YubO8I+mIPWQu7jxwUha92BKTPOPfRb3B0sg9wD/7vB+duL0QjAK9W4+6PYDd
                      Qzy0qp+8KGH2vKAxir0+Toi9ebWzPaArSTtXUBu99tRHPfn6xT2nH5Y9zgVEPcAb8rxj+cA9rgFI
                      PUIkIz3Zxso96JCLvABy57pglG67RmFjPfHTnj36Uo+9ftMjPQKUZj1dQUm9iRiAPcD6FjvAy729
                      s6PHveT28Dz22xM9mLxxvBrJdT14s529alNJPQUhjz0g55M8NTi4vfjQgTwCJ7y9V87BPUx+kbxu
                      qFg9+k9nPaikSTxgqfe7+fmAPa6tnb0PRqA9aHonPBtDyT1Iasc8oNm6PA8Gwb0jmci92O6ZvUCC
                      X70pO8o9JF3qPGr5kL1EUPg8G1y5PRMrvr3fb5A9VgZOPS1fh71o3Ym9Fo0pPZ9UoT2PpZo9wFOf
                      vaLzRD1iug49wB7MvUBEk7yqg0A9uiTAvYnUyz1zhri9dCqIvOUFtD3bELC9d+eSPbDxF73HXnu9
                      qfzLPW4dLz0HqaA9iqIUvcanbD10yYW9gBK3vCnzjj3fd6E9PZPFvUDTVb0AeSM8Ck0FvTldsD2C
                      Sxs9wAS9ukBZBb3KZpC9gguqvXDGp7387oa94nZ4Pe7Zlb0hOJg9YyMivVfLQL2OdQ094fqTPTCw
                      lruVorG9fBEYvdUAkz1UkKm8hJj9PDroDL24cow8UpFTPZQ+1jw6nz+9IQOMPfr5ab1Emuw8MF/R
                      O/Oxkb3Aeoq9oD/xvB1ycr1h56I9ojOLvWinrTwX1ni9Gs00PeAl07xQpiq9wO91PMBXybwgKxK9
                      wEBTvaCMZDsqCjS9IqEkPUsioj0ouWa8d0gyvdAnhLsm5lo9nXtVvUsUpD0KkhS90hkuPdpVQL2B
                      Lao9CFXEvHT1szw27Ra9rEmfPMaVBb23VK29LbYbvekZlj0pQsY9YrVEPRracL0FT7g9LW4uvaCP
                      kLvlvJc9gGHLPFRFqbzF6K89WNQWvNA1jb1Yljs8t9ewvRqOOb3oZSy8nlqMveKvZz2TV4E9GDEj
                      PJtEor1EAwO9gL08vfOqqL3/JK09Qot+PcrNXD1nrkG9Y++RPXRvmbztco89YDxYvUFtjD1exQg9
                      MNuovTBwFTzmZCU9U1l+vQCKgjknQrm9TGGwPI52PD0qrEy9SiwPPWzJ+7zxdYQ9jPKkvED0Kb1B
                      IsY9Q9+wva6zGj09TZI9YHUGu2L4YD1M3co8UO+2vffcSr32iAo9AOmhO2AqA71EuoO9dNq7POm/
                      iD2Knkk9iwS5PeL2ej0AoJg5vmugvSKePD2oG4y9H3zLvaKKBD1zQI09TZqcvbpJl71QZZi9bWEy
                      vSFZrz16LkE9YDCGO20ehz1Nc0O9Qpq+vTDAljuwMR28Eqd6PdYfpr1kFO48ACsOu9RYyrzVhMW9
                      Qnepveg/VzyQhQ48p+KpPT5SFT36Q049M9wqvXJgfT2ypF49AEeRvCAUyzygC6M7UBSmu6IACz2Y
                      a728s6i9PcDIYzwtBao9coO1vTDuW7xgmzm9u0yoPUJzEj36NjI9wI+zva5WlL3JlrQ9qAzrvKho
                      TDw6P1y9wLcFO19pnz02BHU9akEaPWgT2rxAfBw8qXm9Pdtznj3sSKM84KxxvQtjsb2JGIg9f+68
                      PTZXm73gY8G8UEoWPJLraT0trYY9gXeaPWkxlT0FdpG9QLi8vT4MNj09q629QL4ePFDM4rtXcn+9
                      HGcBvbAlMrzRgIc9gLVDvBcaQb2IC5O9gudrPT6QET2Kapy9q46bva71Dz0JFsU92rMHPUgXvL1Q
                      eQy9iHnhvAClEbwyZ2E9b7nBPb22kb1QD9w7TVtFvaym3rwdV649JBP6PHQN57yImYG92AHAvddr
                      Mb1W6H09M3Y0vaVMtz19jTy9NQ69vXkxgj0tmZi9gN2GupwjDb1YriU8ADULPHC1W7xs9Mi8SvDI
                      vUBnHjsAELc5YMjWOwZnlb2SRHs99H7/PPfxKb3KhT6952Zfvbcsd73JHbw9Iul+PW/8nz1HycA9
                      6CWpvBNpxr0AbGW7SEq9vGwkhr0tOpS9QDTDPJ1NSb2qT0u94MffO7JLQD16sjY9OFW3PJdEwr3e
                      eFc9EzxuvcDPIbwCcrO9VzRlvYBsNr0zU709YEEwO/SKk7xoeAi8cN0mvHCRWzwT2169bH6ZPHCS
                      wb3AeU47AtamvXrror0aBVg9sIB3vOj8BbywVEY8ec3JPbhlmrzA+Oe6TDeHPGMckb3Q41w8/5DK
                      vR3pyD3knNc8g1aDPdikjbymThU9iqaGvXoRI73hAYM9DdOAvcZxWj3aQwu90ETXu4tulr1SHRM9
                      lPviPMKqhb0uhBM9msNqvQBisr1adXY9cLcnvKUikr3QKXe92vV+vbPcgD1MrY48IA+SvQ6ocT1z
                      nqe9yrEZvbcDJL3ADIy9bxPLPQDm0DoTLsS9ce/EPUYUAL3Yp6i9iFyQvWukpD0sJsc8+FumvdBl
                      lTvzIle9MDsWvFDPHL1r7rw91qUHPbOMP72iYjU9KudwPYdkK73Y93O88zBSvTZfaD3AWTC7EHd9
                      vdQj+bzQ2em74QvDPQBcurvysxU9WlYFvdb1mb2tbp+9YzCxPZJYRT30hPQ8ChZlPexpg70qtAA9
                      lFLCvKJaHj0FC8s9nzSyvQCfabtMSIm9qCAOPBcmab29p4c9YApRu0A6GDwiqJ69Vd+8vWJwvL14
                      ate8FgNcPTRmjrzY8By8AiE4PdICi73M5Ae9Kp4CvQDY+rjWDAA9FDDpPAskmb0VF4A9lm1ZPfTu
                      uDzyb5u9UAWMu039tb29qDS9wB1ivJi+brzAsGa8rUDDvTF3pj2Gb0A9inwEvWrFTz2whEE8U264
                      PU+Pyb3ZC7o972+vPQlRpT1RsK09cPJPvHj4s71ab6y9GIrnvLqoLL3yrU49gPeJvWB6t7sEvPs8
                      YgEAPeaqAL3S4xU92d2rPb2YT713j4A9M0ORPZrhdz3dC709FRCiPaDke72ubKu9YMRwO3qaMj1Q
                      VFA8IGMBvdkogz2Q7Iq9lNaWPN/elT0A4qG7yhy+vYydxTy7yr09PaFTvcA6dr2wMaK7hsZoPZgo
                      eDxAyiM8B4NLvcAfWDxaAAk9XdhZvRX9wj1ouqy8kptAPVEWij1CgYy99GrUvC8GmT3La669EGs0
                      vE+YrT0CMj09esqQvR+CqD3yfn89x7urPVOiTb1mdgI9o6K1veIyKj1KnFO9gIWCOsYACr06j6C9
                      WK87vNSOsLyAz0U8WNJHPPq0bT3gcq+9SDSmPEBuPDsOBU49nT5NvcCZ3bySxXE9arwovQBIUroV
                      0qq9P+C0PShtpb3wm3O9YKdluwn2nz2Ah9U7QynAvRJlOj1KJWy97YyyPRidVzzHdGe9csd1Pbnq
                      gD2ir7e9oAPXO7gEuTzSPnQ9NcSbvTLGLj3HU5Y90SKNPZC3Hzx1qLM9NWuQPQg7l724Mrq8VPYE
                      vY1FmL0j0K09+LyDvGTT4Dzi6Qw9hYynPQAzdTzoCdK8zxmGPe3Ry73qETK9OoQ/vfBqib0wdIO7
                      ygpMPWTJDr1KaiM9qEmvvKCABDsRGbA9ogwLPfsem70h0Zs9HhYWPdPmUr0sSI288UbCPYfSxz3A
                      w008vaQqvRVHkz2wCx+83k0sPVTbEb1K/x29w1q+vT1tzD20bKy8QHHBOgAugTp3ayS93aupPeum
                      mb30QZI8M0eivSiGGDxNyqa9gDEAOpgaETwUl9K8mIAVvBjmx70NBEi9esHEvWqAGD0i68C90c21
                      PQxQx7wDhSS9kqhDPVmUtT1yYk09UAY1PL1ctz1gZ6U7AHLDPJDSLbygPou7W/ifvVHvrj2QWSm9
                      35+qPXR8tzxgnYs8EqpXPXWarL3le749s2K/PSkEmj1Rm7o96II3PAdosD0WlGo9Ym0DPW7QLz2Q
                      u6y92HCqPOgzH7wBDIA9OYWyPQAY1LvCdAw9Gd2qPVenwb1245a9J4B9vYxqhTxX6cQ9iG+HPG2g
                      kj29lZO9rkZaPUAecDxgm6k7LPO2vIRU7DzTySe9CwO3vYYkRT3Qxju8yjtDvUB4QL2AIsu88ndS
                      PdgpajwBbsA9R968PSJzXT3MBda8AU3MPbK9Rz1DYo49einKvVCILTwUUQi90GmOux+JsT1oYKI8
                      YHqTu3F3hj0JIZE9QGHEPH8/xL2oKL68AEw9vSgeoLzNFri96mEhPWhqrL0o2Au8aFYivPjj/rxi
                      cru9B8lZvVskpT0wS5C9TZ9UvU25Q71V2rY9uOi0PKO3Gr2Orzc9ki5fPSX+rr1r6ZE9SaOQPZi3
                      2byPo7s91P+NvK0GML0XMMs92wrBPZowFT3OEE8988arvdRf2rz0Jf08ZQyhPZ2xpT0YEu28UDQu
                      vWlOhj0bfMi9EFsWvRGTjD0Yuri9ZMz7PMAgyTpYfXQ8ePjCvP5kBj3/7rA9oPDDu2C7JL2WeQg9
                      HzyXPVPmhD0thVq9MEqAu7zNGL2rw5097yKtvZJDYj3ocV+8/vUqPdgJIrygh5g8OarKPSyo4bzC
                      ZMy94HK+vRgMAjwtozi9AEamOn9sur20Tck897MjvUSl8DyQuy48uXCFPcDSDbyp0o09AAgzOqK7
                      UT3OYFw9uudvPSkCtD2igys94LL8uyijIbyg/9M76oJMPZjJojwKuns9hJTUPFDvWTwNeG29q3Co
                      PQCnvrzy+2c9wG0ZPGsujT0wZLI7mMeoPLCm67vafgc9ndtAvexRgjyyyzc9vYScvRSpjjyqaqS9
                      PUptvWqkv73m5aO9Qp0ZPXgFwr2e8lI9QDQMOzM/Y73I2P28wMT/vCBfurvLIZ+9oGqwvJAvU71t
                      yaC9AGqbO2DlHjtF+ra9N1yWPR0apT2jt8E9N7WzvQvesT0K2F+9wJoyPB57Tj0xl7k902Z6vWA7
                      tjuoME+8eF6CvLCr7TsU7K28YBnhvEpUH72m/EE9evx1vezz5LwtIWa9IF+tO9Bwi72VioG9dPXf
                      vD/TxL3LWKU91BW8vKBmy7vWAxC92kisvTNjhD1wE1I8oI4avWC1u7uVzoI9ZNfMPGVouT1AO5y9
                      SlG3veFYkD0CxV89yFnVvJLbdT27eKS9Jv8XPTAJirvdanK9DbgpvdNBl70svfE80Es6PNacOD3C
                      N529mMKcvecwnT3AAqO84N6XvUwd8rx6mC291sKNvSjkYTwX2G+9bLaKvNY7Qj1sh9M82ZCXPbjz
                      i70AeUu96E6xvHqcw73zCUG92EdtvHRG7zwophg8yxaRverslr1OMpq9kzF8vZBKK72zmju9MBHK
                      vTSvqLwMxKu80sZ0PQ3hxD2SaRg9YLSGvH6bfz0+QHM9lFWDvLBj37tXOKA9jDbKvFDkurs7Ero9
                      gEq4O4DNA7x5Mp49wfnHPUJeMz3diXO9B/e8PTUqjT0akEk9GPTQvLPnuL3tBru9GPrMvAKFkL0Y
                      gqi8PW9AvazLwbwr+5S92sYIvVU+xj1z8j+9pp+HvTKvQz0qMgk9+CfIvH9Bsb3Ayq+98oeevaIk
                      Cj3MXpu88swRPTNPo72W1RY9r3eVPWDxALv9Cqw9aPRYPLFrvj3+4lI9d0pUvbkzjD2U7BO9+cSw
                      PRgGKTwYrw+8C6mLPZ1hiT2D2YE9ru0VPWcBtL2CNnY9IFayO9hmT7x4TIe8+ay1PUBjZ7tJ3I49
                      wN6bvKwJ/jxNsVu9wGZTu8AWU70egUE9IKuTO+Uvxr2kEPQ8M6+1PYrmx72EkuA8U4+fPYN8Pr3V
                      scm9IksmPWD7srwgNMy8CDCMvLVThb29yIK9+5euvZloqT2XeLe9LK+9vFcxb71AsVI8mIAxvFGY
                      tD1Qah48QKIou+Wyyj1qJmQ9juR3Pc14gL0Xxbg9LB/4PF1+pz3duoM9KqbCvbsXuD0ah0G98sW6
                      vWC7cjtt3GK9P4aLPS9Yxz0FWJM983KZvbI1lr3BGpM9iaaTPRKHDD2KU5u9bGz1PHdEgj1Q8rm9
                      MZvCPX+8hD1gWOg70HuTO8xksryXRbE90KycvSOnxD2epFs9c+Mxvbb6ej35yJo9wSmFPe0Hlz1E
                      NfI8zrdOPeiFSTzecIu9gKbsvFBhijuKngY9aEA9vBP9qD3QqCo8SsJEPZiLTzy01488+VCcPbNL
                      I702MYa98Ck9vdRbzTyHlSi9gBQSPDOmM73g+Hi99zJbvdMkyD3gBbm7eNrevMIVhb16hwi9LIb9
                      PI20ir2Zn6k9FeDAvXA9ObwK8hK9DVMqvdC3Nr3VAL+9gLBOPLA01jtR3Jo9VCPVvHC6QjzC6X89
                      BpiJvR+Wtz3drso9sbewPcXGt72svaq8q1CdvShzPLy0mhi9lN6cPMprYL1AoyS94/puvXrGv72G
                      lys9bucsPRWIlr0UU8w8+t29veSA3jy4d7284DzPO+ByyTsF+q+94a+0PaAbwTzaqyc9jhqjvXug
                      kD27AJE9Vug7PS9/tD10cvy8kggjPSiay70AvzI6o/DGvUJORT2ozNO8L0ejPalYvT1C74W9Ik+k
                      vcDhLrzdKiO9eRWhPc36kr2Q3BO9Mq5kPbZ6DD00xAi9LsuZveQW2jy1k7E9RSSqvRU5wr1yi3o9
                      nC/NPNBt1LvF5q29gEyWPA/1tz3rr6w9QOv+vHLNbT1lkbA9GhFkvUyuFb3dU7g9AIOjOwCzM7xa
                      C309yocxvdju1Lz6Ox89UDxBvMnWpj3ARM06ALTEvZh7qLwmkZe9e/ybPUa6Sj2g7YE8LUJQvWI1
                      Sz3KTwM9w7JovXDTezwoApy9klCPvfzS6Tx405U8wkxBPc4RCD1ClWQ9EEAYvatyqL3T9LW9k7Yu
                      vSapKz22oJe9kGFRPAMEj732jBm9qFG2PI/Boj2FraA9MKMrvBpLbj0IL6c87T2cPaO+KL2bepu9
                      LpUjPc1RwD2WbZ291Tu7vXD/GL2QmFM81N/dPB8tsj2Ki2m9pogWPQAk8DqKwCU9yeqJPYCVl7z7
                      WpU9AHgBO3CRBzyzPZY9CJP8vGqePz3wWli9FiAIvZ1yt71XiWq9KktVPRJ8Nj3Kb8a9+nChvSxJ
                      0TzXwD696ITjvP3Mvb2YZoi8fNDwPLTCnbxMDvc8AJcCveKbJT00V+U81wDJvQ5/bz3QXXi9+1DE
                      PYr0t70kF9M8k4iyPVLwaD2wzpQ7zNPuPH6rTj2JDLw9UWKyPajFujzjT0q9hHHOPHrcVb39gsu9
                      XgWfvVCHeDw3k6c9Z8fJvSzTirzayUO9lGjevLJdu72XIm29ZlkUvQhllDxqhEo9D4a4vYwSiLzC
                      A209F7/EvdB4ajxXo6M9ffnCPcV+jD2fRbI9oLSlvECAKbxiJ3k9WO43PJU7vz1xAcg9LHfkPBox
                      a73XvZc9MIZWvCE5kz1ALDu7I0dNvbYQh71ozoC9+9ifPZ7fYD1dlok97H7bvCIPcj0wllS8ImQl
                      PZDVfTxwrZm9qxKZPVvfyr1pZ7c9qP+2PDfZSb0IxJ084NghvbHDlz07aK696nZ7vbNpUL3X8qY9
                      MHB9vEQP3zzzZzS9WdeZPSWNq70AGbC89kYxPT14pz23JMa9KRfEPVsMyj368gg92thyPZxGF71i
                      Am49ziyOvUmMhz0KFle9GATkvDPiIb30B/688B9UvRTX+bwedpK9/EkUvZoxZz1dnHq9iooyvaKu
                      yb3N4lq9983JPSJvDj0Sq4W9/MjZPL1zor2Avr87JTCdvS4fpr1rRoA9CMyIPLNwrT3qa3A9lJLi
                      vHOhjb05jIY92kfEvdJccT1Q3Lm7GoRHveDe5jvHbru9xlagvcuZlL0wRPm7sDIqvZRdnrz+myU9
                      GskavVQ6jzx4u5e8yGDLvWa9Vj0A6au7dDz7PKZfCT2aTmQ9hm2fvUAV7Dolcao9ZOzuPCSrzjzo
                      IaC8Sjk8PQ0KWL1AIsi8/fEovVAKyruTzL09UF8RvUCcvrytUyO9Dl0tPXJIZj1zuKI92GIPPBiF
                      bTzKk0K9NHi6PPpzbr21d8u9UvPHvWyWsrysv6O8DcLLvRhgprxONpi90oAFPeV7gD1Ywp48APBm
                      uutQnb3afHm9zlg6PYl8hj3QJBa9Fh8HPbUGnD177MQ9AKgeuMK4Aj1QE3e8lIenvKBMF72dWL49
                      MiJzPfJETz1IJNG8SymivdqSWT3YJ729KnesvUhh/bxxqsY9KC29vaIEZj0SkEA90sZfPWO+uL2g
                      6gq9gIuvPBo0gb3vj6Y9a82tPZPYO71snLc8aP8nvNcbtL3Fg5O9CuuEvdvqlr1tvow95z9qvU/u
                      yz3jjWi926+8PZV1rj2vg4o9c6SSPSxVgDyAg5G8+ByqPAVvlr1QTKe9pXqFPVqKb72EPvw8cpfK
                      vQbZET3U7vu8kLF0PECrA7xQ15W9SiwOvWZfRD1ww1U8XD+HvcRd+jxHalW9MsaSvUf6Or2WlnY9
                      XzGwPRX9qj1iOpS9JGjsPDRJvTwivA891wO0vS3Lub0avCu9R1pEvYC8YDxbAME9+rMLPQCkiDp3
                      S0+9VmEEveD90byAnhQ8aa6DPZqQbj2RapA9i/TJvTWBi73DR6y9b6fEvUDc7rwAUHo6QGYwO5Un
                      jT1oDJe81VqrPWwJ8Tygcaw8ODXMvOiHiDwY2b88V8eOPWCdeLtq+Iu9EdvLPXAKWzz0neg8IEFX
                      vRK8XT2o8pq9gPSavLQF7DzUMNC8xo+ZvW5SFD2AjUI6EDS0vWB78rtcWAi9L9K7PYD0EL20YAq9
                      HzS0vUqSVb2AJW482FiYPKGIjT1l4qo9nuUpPWBPhrsWezY9kP1avaLhp71uGXA9NPCcvOoQAL1I
                      VMO9qOVbvL+1r71i6jI9up6ZvWiK5LwOVA49wN4Gu1V+xr2ow6u9BiUfPdivv72GkS498OkNvVGp
                      kT3qBGM93cudPbSBnrxtgLQ9CnGivQBTBTto+by9oKO3vYY7OD39fFC9xDXTPCo3ib0fMYU9mJFB
                      PEtPvz1gANS8zXCXvbRhk7x9ik290JNQPOK5fT3iD0U9bK6+vFHrij0CgD09TOEJvecnSb2LqbY9
                      kMMOvFptWz0M4bY88QaOPVX9vL3skNK8gMJxuk6nTD2YcRK8mCxbvPCMGzw6x3O96pXDvZWEob2a
                      lA49MrA2PbEGmj0AgXU8HBPyPArIZj13Iok9KJV4vPKLHj0AuFc8f/29PbVYwb0Rk7Q9d4igPUAN
                      xb2UO6A8OjhdPcS+/DzSAIS99Dj9POsEnT2AV4m7MGvLO5eUy72Hji29Kqx4vYA8jb1Tdsc9eOOf
                      veeJqD1yLwc9ehB8PUriZj3sOOg8KCXLvaf6Q73Gb6e91nwRPYtogD0Nn3C96IMxvIBF3buVArA9
                      +HaivKDEXL3Yvhc8pGPgPAmjxT2yGWg9V3sqvZXey70i+Fs9VAsRvVAOQDxKxMC9Tnh6PXKcOj0z
                      5pE9WHDqvCJPIj37zcA990AovUKuFD3G9BI94faoPXM2Sb3ebh89MAkzvfnClz2oLMa9ehaFvWzu
                      mzy4gKm9ZS2kPfiBlTwwBDu8s7dQvaDALjuRUI89xr8oPQ2Riz2AuMq7mBw4vP94oT2/rsE9W7eW
                      PR2vH720nKK8xY7CvaQb2zy315o9kHguvC3Ijb3j9o29kFp7vd77Sz06rWA9iPv9vCtjtL1YfHw8
                      CHKUPLu/u71XjR+9+EenPGhvNjzUJdS8sK1FvYD2RDr3+yG9MMIXvYDIibsAoNA7AKa/uSEgjT3K
                      hx09wkSIve3ZvT114bw964zCvf2FPL3Anwa9MFqEO0+Uwz00Q4y9EMRivFAevb3sPey8v/a/vZCY
                      ZLwQKme9ufqXPcCOwjzAolI8AC6PObRBxDyYyz08OC78vI4gRz0QNEC8NaqMvchWhzxgCrg7OiFe
                      PYaBBL102aM84LLGPEqaHb3e5A89MO90PHcXTb2rfcK9pBflPFg4Jrwwraw7wGl0O+LObz0pYbQ9
                      w0HHPcjS77zkHug8EMRDPKNMrr1pZMM9KNRXvLJDs70qu0s9aGQcPHtlrT2gnly9aiE9veJ/l71F
                      X4q9AJ80OnXEvz0jlcG9KBivvGA0IzsDj3e96468PbgsmbzyVSY9AmRtPRGswT1QA1s8MIm7O8m2
                      jz0uO3091A4YvapVGb3bCLy9QCeeOjl9pz3Wg3I9EueRvWOQyj0ID8w8g0cevZNBkb02Ho+91PzY
                      PLP0qb2wfqG7kzW8vVgFlzxCyQU9T+yiPY6QGT3X+Xm97lsMPdBM2Dvoz6G8RXO2PTBKBLxydW09
                      l75EvQNJeb2wgy48kZqWPVBM6LuAXLS8GMtWPGBy5rw2jAe9CV6lPWBetL2rfZo9aJo6PACblL1w
                      bXc8St9CvRHNyj1CRT89neJGverIdz3gTa88oEe+uzUGuz3s6bg8k8PGvQANUruCajQ9/lOWvbg7
                      jryZ9pM9iISAvYxF4bwmqqq9yk5NPRLOAz29dqc9cvwcPcphb73gh4s7uBiPvWpeYb1gW6s8xADd
                      PFCByr1e4Zi9NI/4vNDjnr2Jf7U9qooQPcW9l70YegC8QM25unsVgj2mDBQ9j3WPPdiKNjxKW0C9
                      N48svQD0QTmHZEO94iQxPaAjCL3ARiC8dZmzPSjDSLw9CMM9VuBLPTKRBj0jKsG9QKNXu8h1xLzY
                      kaU8Dkumvaohar0okFQ8lqV0PfE8uj2MnrQ8mCNUPGoSHr0I3OC8wOwVvWtQhD1gYz67gF/LOkWf
                      iL3/w729BFTjPO3Skz0Y0GK8wzqfPfo2M706fpi98MoMPECFBjv9XB29Y967PR+BvT0rgqi9M4id
                      vRRj3zwADB66qxDLPQBZRr0J5LA9Tq9YPeJuaj0RWKY96TKnPcz5lTxCUpW94oIlPVIaCD2Az6Q8
                      eKqNPFmKnD3WsxS9mB2fvIaCLD2nnFm9B7K6vQpAwr3NHMA9XlkkPTeNJ72qIrW9TcBavVHGmz27
                      D4I9h42yvXBVIr1V64s9eiZKPYAkPrzj3mi9AJqfuWk5ij1SQrW9I8zEPeCI0TvMjqS8kLNzvQkV
                      kj25AcU9lB3yPLRU8rzyhV89uF+svQBgvTo1WKi9AAq2OQ/Cyz0eim89yqyNvclqtT2QFQy9g0in
                      vfJfdD1Qwl69PRbEPQgph7xA2W+7o71yvWemmj3pqo09QGoEvbrskb0SmW49+zq/vUr7tr0wKXy9
                      CN3EPIpUKT1Fqou9rVGyvYtMo70IvpS9ekkuvRHwxT0Vk6o9FB/FvC2wcL1zT729Mw0ovcvSyj0B
                      e5c9nzG0vXFzgj1qKG29w30pveYCQj0wLwc8rS+fvSVwkT1Qsj69zIQZvcLtAj3GxSo99294vX8j
                      ur0TVaI9YNitOwB8uTrYLQQ8/RevPbpqmr3Mzr68IJQbvd2WS73yAww9gqBYPYBsoTqfmrO9Iy6n
                      PQC4XTrmK009M5mYPXTFiTxRRZs96kQjPbTFh71ANaE8LFQNvW72VT34lrw8MCJPvTLCSz2krO48
                      GTmhPbDHhLtlba29dFzDPATY1jyqoDA9AJq7uVD1Yjxznx+9W4bKvfy94jzyCAQ915M7vQKWRz0o
                      Xz08NI2CPFc0ab1z/ZE9qnQVvUjTwr35FpU9vaBXvYbmYj0iwiU9kNIBvQBdFTqJe4k96o5rPcrh
                      Lz2t1Lu9xcetPefzML2aFk+9QE8kO2Ipi73t9Vu91cqMvZB6MLxo9Ws8AARmupvQu71e26G9+SS9
                      PY3tGb0A25G5d19pvbSHwzzz2cm9JipBPZfKM71++Ho9RX2ZvUDf8bwAY8Q84l04PbS53DwgfQq9
                      glE4PTU9kr2NoaS9ZBLZPArOa73w6Gi9qPcsvFTuD73Rs7s9W22kveWek736jgi9o1hqvTcJH72y
                      EHs9IvUfPUHEpD0o3CK8NBfHvPi6pLxQkH+8Ub3FPSBg3Dt0gae8uI+hvP0Ebb2MLK48zAzkvCyK
                      ujyiK2M9IpIxPZcVmD1qPwg9nryfvROZbL05cKI9KX2lPQBxyrtqCT69YlF0PcLpIT3UfJA8WO4W
                      vLJgbz0oXU68om41PUr9dr06jwS9Ux+XvZIqLD1TX129ANOAvboXZb3oWnC8qVeiPf3pY73nXWq9
                      oBU4vSc6Tr00T608AJJ1O8aoVj1I7YO9gEecvN2sfr0gL4k8hGzNPAHVsz00d4A8kgxrPSWSjj1A
                      3+O6x4BavSOxLL12Pom9gKW2O6CSg7znEaM9QIyTvbhjxL1xP8Q9x40vvRBOW714IpE8wAawvOYn
                      mL0IU7O9jG7YvP5/bD0R6b894IxFvYd/mz1YJsa9grZbPRgxT7zAXYg8CAbUvFBa1jst+IO9Fpcd
                      Pdklqz3GjZW9MNQXPOjDgTxN9y29SNTQvAjm9Lw0Tty87xm8vTi09Lx7ksq9PxabPdCN+ruoqMa8
                      oKLHO4AEHTyx+8k9dVKEvRrneb3SQ7a9kiaZvZCdbr16TyI9wge3vffucr0CYAc93bRAvX0PV73Q
                      K4q7RCfXPLJNBz3yiBA9TP/UPElGkz2A8LU8HUnDveIAdT2usms9tswJPdDrPr0z7ly9KAm3PMXG
                      gb2IjLQ8j6euvdBrEL0fN8u9aqhoPfimlrxKIpS9YDwAvbwA8DwqCSY9aoYWPbrREj0z/0y9Sh0O
                      vTBAqL2ysgk9lqw4PeNLhD2tBbw9wJsqOwcBwr2whaE7QGZjvFCqcL1mKqa98/WVvYZ1Gz01M7i9
                      k024PWkYmD0wAm+8NbqcPUrbFT2w1Ko7wNZtuwD3tTy437Q86cynPcB1OTs0veS8gjoaPexp7Two
                      7Lm9qBWJPOhfKjxZfYs9oDGXPGC5v71mznQ9s0qTPcKoYT2wb729gGhoPA14KL1RAqw9JOfuPNgx
                      FDwMNPg8WIB0vE8Jnj2OzIe90DTIu9wxzjyACLG9mCVfvFGkyj3AKwm7stKkvV33vb3QhCe9gXin
                      PS7ufz1eU0A9QEiyPMIxUz2nLIM9l02pPWmpij2aD0o9GAijPFxa1TyZO4E9AvCdvW7LED0BzKo9
                      rUHHvTbpRj1OXjE9ILkEvdfubb2v0L09QKsPvbXilz1SBW49cIl+vSoIAL2T1L698P4pPFDQ0jve
                      mi09VTqzPQpZBr1fBaE925CZPc5AKz2O/nk95HDQPHhht7wLxZq9AD9QuwDY0LpJjJs9B8wgvQc6
                      lT29s8A9mSqdPTDaU73KhC09kMKOvWrpeb3JspY9A+MwvWLOIT0gQ+a7LxWMPQA8ErpDm2m9Smhg
                      vasjlT2n9ZI9xIrzPEmRiD36JLC9fIf7PFDNQbxxDr49gGUhvcis9Lz417K9qGtzvKqbmr0KTzK9
                      U3AuvauCq71Y+xO8D23IvYYtDj2i/3g9AP5cPFaFgb0z/ac9wLN1vYgAvrwAsOC3ArEYPbjOjTyv
                      OKA9KPjSvGpzLr06aQQ9KpYpvWICOz0i4IC9lB3VvIb/UD0QYy88EWSvPVgrl7z4G4a9+Fj0vMuI
                      tr3C4ls9cUe7PX1wXr1ihG89F2l0vdeAsb3Sp1w9saqjPXT71LyS5ZK9ipmmvWIEVT1rpK49Ueqh
                      PbaSqr0GsFY9YtwqPdNixT0ovVo8ttZfPd9JqT1vG8q9n8WRPbQ757wfvok94oUqPdIAFD0DtCa9
                      hDj3PG1KmD0SUi89FWCuPT7cVD0A3x87ELh6vKCzbjvkX9M8+66Qvd7geT1w6S68AEklu2hVrLyM
                      Xdi8IJ5VvTB+97uArgO6kKpaPLC5TjwtC1W9wFb3vBSnFb1sF4y9wA9yuzjIk701ZKS9nHqDvVDO
                      0Ts6Wkc9sOuLu2fnK704kIm954mAPaxBxzzooqi86KWLvSO6lD2SeSQ9srFgPQZ9Dz0APNI6Zzi+
                      vfM2c71yrwc9uS+fPUjnuTyyMAw9gN/NuzT5wTxsfKS8neSMvbSTpTw4AYa9KMoBvHPPwT1sHIm8
                      LkMrPdCbk7s68Wq9AIo4PACOtrpyjD49YZ2gPTCoULzHY7299/tbvUqmQD2s1pk8cHk6vBDgkL22
                      jmU9VZ6IvQInHT05MZ895cqTvZtsyz0s+d68AIAJu1pwJz0lDJO9sNWuOwe7ZL1MmuK8Ar+QvVg/
                      KTzOsXY9NEPVPFOeub1TiXG9MCaJO2D6+Luekmw9UNM7vJn6iT1RBcE9MnktPYB/hzsY4kM85o4D
                      vYBYtLqgnlG74AaAvbPThj2v6LO9IDjBPCPWjj1e/wI9EphfPcG4wj20OMc8wz1xvaegyT2U38U8
                      0JWzvfrKfT24gMK9ltoIvVo2eD0A2s05l4SZPVbreD1gMoa80vVjPUBpy7yLyqq9oBGeu+x+l7wM
                      jqg8tYa0vV14sj2gsts78IZivKB/r739XUu9LWm1PS5wkr1jk569TF6wPIJYpr1id149qkJHPdSj
                      k7xQa2a8EVaHPQDTcLuEEds85hWUvdhQq7yS50g9l3MrvahsSzzoZRU8AMcSPEaPoL3QbBe9hgkL
                      vS0zKL3DxX+97pw2PbRnh71TH7y90NMcvGAOGTtWpFg9u2qoPbAMoDsKRGM94svCvYbvCT2scqq8
                      +RC4PcAWrzoAFO84kdmePaE6zD2Y7oq9J+UavW7Bqb1Q44O70FjjO0Ywbj24ie68fqRJPQU4kb3e
                      Kl49LNbXvC87v730Org8Bq13PQLrfj2gmia9GFt7vI1Jnr0LM6a9ZYWWvYzv5rz6k8C9YNfJPHeW
                      hT2yLjU9ovFePbxQBb1uJSM91c+XPZAYsr0KfFi9wo1vPWx6Dr3Zh8E9TeqKPZxJi73Pvpk949yh
                      vbv5rD1YDIq8hZK3vYh1hrxNN4S9AIduuu9Wkj106OM80tENPWyyrLwJwrE9OsXMvSqwcD04ka28
                      kwl4vYy367xAr3S9AKVeurRir7wz0Zy9JXaSvbbMkb1itwc9w6QyvYfkUb2qvMa97WIkvRAuDryd
                      h4E9rca6vRnRhj1vAsQ9sEeRvSJwIT01mcK9383CvYz13DwAHYK8LQeOvSiLrbwACjW8Z8NFvb+f
                      uD2FOZ29b6arPQ4AOz1YZfK8gCqqvRdmtb3UiYW9oCFvuyXFkz0pVo89O1rGPd5jmr0Ib+e8r7e7
                      vaefVb39rao9QFlePEe4uT3Yuaq85fyEvfqdJ71mh289gJKouoFswz25/ZY9HLXWPOSL/DygBku9
                      0S7IPVileDxzCJQ9RA/kPGAoYb0gGt28SigyvQM4Ib0o1Yi9jqEYPYpDaL1I2MO8YD3bvM2zS71E
                      5YS9asSCvZHFnT2zhsg9QNZouxJOGz1AOpg8sACeO4G/oj2jjYw9R3IyvbSv57zjXJ69d5/EPdg9
                      Grwv0J49aWSKPW2Ys73ZTJc9OIfbvGL5Cj2EX/081QDBvXhLtL3XFmK98MpqPKEZtD0WdJm93S6J
                      PXruAj1gOj47ukhJPVZ/PT0QUTm8wwbLPb2de70A0Ge75dHBvYynvDzSh3A9skmDvdg8SzyAsB08
                      4JrPvD6OBD1DgUW9fVGiva+boD3CPci9GtWkvQ6Rnb23HbW9gOyLOio6p73Flqo9B01nvfOevL2w
                      s/s76f/HPQ7wZD2YGHq8zr4/PRR2uTwgLMK7y97EvfC2Xzwr+oU9k5zCvaA0FL0M6Lw8TUKEvTSp
                      4rzIbow88nUWPXKLwL29YzW9ktBbPcDpUDu3Yje9mM0pvBoILr0Hk2e9fo2IvbJVfT0xcZY9MvoC
                      PbhttrwpwMo9cAOsvSVWjz219YQ9ItAFPUgOlb2gBkm7LZJDvSrXX704aKM8JzGCPeyL9TwPSKI9
                      fouMvUxup7zoY6i81q1APQAmmjpl4KY9UBu8u89Csz3KBFE9zGbGPMEQxD0Cnis9yfeHPWZAJz2A
                      oN06ELhNvDKcPT0Awyc7Qu+gvZedUb2lnJU9sgZmPdC9TLy0epu8mkmzveBqmDvHIrs9Jyhhvaur
                      tb15pcM9nEX0PBeMvj2Ue5w8cOFUvEeTQb0EYAi95XaAveKlsL2YV4+8jY/EPWOwT72gSI68sC3u
                      u4qvDj1abVe9Ew+uPUQEB73UbZm8GjlivQZOaj3iMMi9V6s5vV9OsD1pqcU9t2OPPb7ABD3qhAq9
                      WP5sPBunxb0Z1rc9CzuzPVB+zDt0CIy8QA7ZvKkPgT3+VYW9LV6ZPcvap70hFKs9qzjBve3VTL3p
                      uJI96GhbPIAP77zCRis9gh9mPbWeyr3mxYm9WcejPfhFir2MnPo8E7u8PYXJsT2gU1m9WHFNPBpV
                      KT2V/7y95Y+2vcGOyT3u5n09A/E0vYm7jz28/dk8edOTPbaddj1bwsA9cIxYvDYmXz3zR8o9kVqO
                      PeDNuTsYAT+8FC/xPLfeqD0QGgM8wGg/u+rGQ70NM6E90usXPb0wKr02+EM9PieovThzj71w7k48
                      7RC8vSBi+Ts4y7+9ACUCPNqxDb3lBLw9mJy8PDmzuz0ZfLU9zSc3vWXhlb3wplS9O0iiPYU/wr3A
                      Pl08GrZ7vZCCCrwSYBo9w2aTvUtXyz3JNrM9CvikvZjKALz7z6Y92Nw7vKIeaz3wyjA80vEHPZY6
                      Db1Ad8U6fxabPdBSZrzglui7YuSjvRC0PDwUypG8+ESHvNKTVT0UPae8BsAvPUp1Fz3fw5U9EMst
                      vRPSW70SaJi9oo9wPbY+ez0EmOc8RxOYPXTjxLxAe5y9wMl1vSz5iL3Uieg8vfnGvTpaYb34DrE8
                      sceXPcJprr2/+Ls9t7aSPXCXy70Q3ik8mTaRPQB0zbwYAXE8YAwMvYN5pr2wS3a9N+W4vW5VXT3M
                      HuC8sn4jPSMFJr0oMR282hYmPePCnD072bk9mnRPvX7CSD20dda8am+qvW0RlD3AakM7yyGuvcCI
                      xbo9hE29qlhuPQwJh7xG+2g9J8NwvaU0lj1SLKO93ghaPW2vNb0AQr48ncKivRm1lj3Kn3K9oAxK
                      vXjAsbyMhre8xbervZ3MZb2AXvK7DEGtvLCnGrww9v+7du8qPUAdd707S469s4h4vRZNBT0YYj48
                      7OHpvG6RZz3Ains7Aiw5PTA6SDyyHxo9TfmMPaT50Tw/ccC96BUavEZSjL2g3Ue9AK9Mu8o3Dj2W
                      XFQ9Ta2AvYwjxjyHt3y9wXyfPUzZrjwDKsu9sSCLPVdOmD0uPDk9gHIJvPbHkb0m2x89VbytPYBj
                      5TrnR7I9yDrAPJgbBjznqzG9t29nvaRR7jz/nca9H8acPczLqLxNGlK9UFhuPCgIw7zeho+9KIa2
                      vAixy70+12E9NyiWPVJRRz3nqL898NoEvQzo9Lwsy7q8+azDPUPIhj10ipS8/tyKvUSs5zwAduY6
                      Kk4EvZjYCrwiebq9yiBrPfros73frrc9TZiEvWezhj0czdo8HPMCveIVxb3OuSs9IaKvPdFOsD22
                      two9waeAPaF5jT1g/rW9A2e3PQ7qPj2laLG997bMvRBlCrw9c8m9lDbMPLSakzxl1L49YHhLveBt
                      prwFCsy9pbCmPbBme7zHL7y9sPJCvLSn37yGaz49N1Y5vf0dwL3lQIs9nRg0vXlSwz3W+Ji997Mn
                      vWhh7ry3bmm9ynQ1Pah6cjwyEVI9Fh4QvU9suz2j+zm9eph9PYJibj1M3Ia96vZ0PWITGz3kWuU8
                      1VKGvUkRyT0B2Kk9+tuRvS3Mgr0SAhU9DlCDvZmrqj1cK/g8dlMrPd/zrz033p89LotqPfahcD1T
                      yMQ9gJvLvHqhrL1o4OG8ii2ivaUhlT0C+pu9kp9ZPapYIL2U6Qe9dZjMPbRwqTxOhUM9QD1Rvf22
                      M70C6m49+KObPICJyTsuQG89s2GtvWKsEz2w2PO7mKxcPCJfAT0N8Bu9y+KrvcUzor2DWay9766I
                      PVAND73ntL49w9tnvdJVRj1BIr895zqePXKKEz2tgie9SudRPYtGpr3iZYe9ypkQvZXppb30jRG9
                      XW6UvQI7yr0Cdsq9UzYivTCojTuzCoE9ZdCsvfWkir1wxmC9FUmAvYB8krw2T3o9l0oovc02V73Q
                      uDG9qf+TPfe4Nr3gp8m9s9WWvdO4vr1graW9zhoBPZgLorwi8k4981A6vZhfjbx4kcw8A00ovVL5
                      Jj1Zz8c95YCnvYI4hL04Jq48UI6CvcUBjD0SLwY9oAdJu0ANObwgAWe9RE8WvdKnBD1M1JM8Sr01
                      vRVmrL1jeaO9vZ14vVGcij2sJOO81OPwPOk2mz2tiH69XrMRPcg0v7zwC1K8sAVwPLIuy72t78s9
                      oK2ou81IhT0yAD89cNQ9vdtnxj1afxq9oLaOPOHYxD2jgkK9rR9BvcycA73ALny9+WiEPUwL1by3
                      7b09V9NQvXlupT0oRai8AE3fO5Ftij3gjp67Y5GevYDLv73AHbG80rmdvYAIrLwYSWS8gpqLvXKS
                      XT3al0Y9Om11vSCcsDuw7uu7+AWEvHfCgj2Nk5k96kZZvTbUlb0AvDM82Iw8PNiOp7xsSZA8cUW4
                      PcT+i70sVJw8WC9sPIws7bwAYN26tBeZvOyAjLxAIzo7MQ+cPQy+/Txrccs9QFe4PMYoSD2TZMg9
                      gImJu98Cv700itQ8yMTMPBGyrT3SarK9h+6zPeInJz3mXB09aj8KPbTSoDwW9xK9wD8KvLjUyr32
                      Pjc9pooYPS7lSj14Pqq8iQufPdJsHT0CoAY9gM2BOu5cBT3gRNq846+JPSiERzyDR1i90GgnPObE
                      AD15loo9lRWOvYwT+7zCozw9gG7AO2x9kbwK/Wc9eSCDPWBhJzvg3de7UlXIvQCZKbzki/M8iEmf
                      vZfHSb2jMLg9UK+GvfSt/DzTbCy9iiGGvZD9iL0yfjM98/OmPY24Mr1z8aS9+HT8vHDXb7y496U8
                      boAJPY3leL3J7rI9wwDFvcDpfb30OYE8hG3hPL+6nz3YWOa8+9OhvbLMWT0YffW8mkh4vWbQMj2y
                      /nU9eRjEPTICcD3w2KG9GJ86vO3+tb0BF8o9SmYPPZANSDxKUo695zM7vfCvZjygs7y7RgZ/PaDO
                      l7vdcm+9w/SGPZgmrjzKV8q9wFsJvFA+AzxKq2Y9GuAwvYXFpb3aICW9vQ2+PUkVvD2STom9oM6i
                      vTR9pjygO0i9GENvvIC4pruDiWG9yl9FPekmuj3Qcl69N+aWPckEkD2SiEo9Tg8APbCghbsze6I9
                      CnwMPTNOuj2AcT665JARvZAwQr1gjCY7qgsRPWx8i7ywxgM8p5d+vaeMUb1AJ9+6cYOePdPTwD0f
                      YbM97hGevfTX4byNMIA9wANaPAwkrDwTtjq9aKe7PLCutTsOxqG9r+m8varWir0o9gI8fV5yvSAH
                      vDzeli89ObCHPWikgbye7U09VATOPIBiILpg2oy7cnqqvWJWFD3d4Km9wYmbPYBd3bu6AQy9Sq9H
                      vcolKD1Stng9KrdxvR1Hc71QcJo7UJ6fvQBoA7rNar89wA0JPA3GXr2WmpC9GFsEvMTri70oCZ+8
                      yAePvMwZgDz5dY09fZhJvXPxYL1+65O9yACyvMuDiz0KNhe9gm9cPYjgvbyIr9C8ALpYO7K+or2R
                      S4g9QpA3PXZQCD2al0a9hhgPPbaUEb2sQam8QYyQPTpoWD1Y+AQ8kt6IvQUosj3tn5k93fC3PZS5
                      B70A7Py68CoDPH28V73D9Ic9ylUovXS3hrxsDaA84ymePaCYpr05eKA96z2fPRtfxz0yiHg9j9Gf
                      Pb5GQz2LGIo9DmmYvYgprL1LT709+qoyPe8ss70Fva89YJ+yPAvEnL0AgFi88BFVPH2YdL018r09
                      UIBwPL2rjL1cIug8bZRIvcjlwzxoLSC8QCiIPMVdrT0N0YQ90LftO66hdj0wi228KkWMvXUtxT07
                      hoQ97TqFPelwwT1xRpA9NHWMPDqKZL3hJMM9SzSOPSwP+zyYccg8uOKhvQL+Lj00B9o8kOtzvHxc
                      7Dwwc4M7wGViu1S2kLwA1QG7l5x/vbfeR73QoRO8La4gvcT55TxVVLO9Tj9nPRyt+DxfF8w9AAi9
                      uQBlrTwYoZW9YOt7u6uvor0+eDk9ucfGPTn5sj0g8v07K9KEPVHsvT1rhZ+96MQ1PDROxDzryqA9
                      0OYUvG1FkT1L44Y9uUWmPROEob2NxcU92rA0Pap1Nb09V1m9UlZbPe0aYr37CbE9kGJ2vCCIlrtK
                      7a292ZOePR6SUD2kQec88oZXPZARWjwoTgS8AFyKPMD4cr3H5UW963CmvRMpm71gmRO9lBDovF+N
                      kz1jNIo9UzutPYPFij2mIYm9Ywy7PWi81rxgEfm7kZ6KPWCDw7zQ/H888QyIPbCkHrx0F/E8l05a
                      vcwEtjwKAy498qYJPfZrAb2ZTbg9rN2EvOncoj1A2ie9MEwUPFjKA7zl6MS9YPmHvQIgaT2XKlm9
                      AJ6Fu5Biyr1s6Mq8oFzFPBSd6TxARbq6N9CwvWmvsD3dvY89/dBAvVPzP72aOxE9Hn46PbOytL0g
                      dOG8AGQ5unT9/zydSGy9H87APa7ll73aliW96KOzvKNAjz2yvZ69a3esPfC/STzNE6Q9yqVevQBE
                      8rt6wwk930y+PSxes7wGWxA9LWeWPVAOvb0ttFi9AIEgu/KaQD1QZTo8Vk8WPdCx77teETQ9bEr7
                      PEpYED3gt4E78rMBPfoGi720I4U8tzuJPVDWvLuPboI9ohrAveAp0zvs58w88EODvZF1uz2obKM8
                      ALgEuywe9LyNHay9wHsNvIR8DL2AU5s68m6KvRMmb72WCFE9PgEkPXAAV7ywNXG8rdptvV/jxL1y
                      lTs9+FGTPCiuebxY9Ge8YH59O+VGmL0agWW9xFLOPDqdRz0VTrA94uhQPUG+sT06/gQ9XGcTvQB/
                      oDvIsIi8wDhCuxy36Dzgg947oN2RPEArOjzkDIO9I7N8vTDRor3sNZy8IGtbvc9mxr0EsfU8KfTI
                      PYAnnTyjz2+9G8SiPZLGTT3xxss9srgKPadurb2KtKC9aJ6jPIo9OD1Fqpq9rssKPeaPUz0gSsa9
                      6H0VvK6aRT3Mo7q8gMIcvYDpsLs/54I9yGOFvdiz4byEJha96Ow0vIAZi7wGG6G92SDEPfAbUzwh
                      oqo9SqqlvYFRtT3Og3w9jc6vvcgYtDwh6Yw9+kejvWfEb71uw1E9qKK7PICqsTsSzRU9cL5pPLqc
                      Q735/K49YAyEPBpFdT2MAZC8Y3tavdTLi71TVJQ92+TEPekgyT1oaAY8FkV9PYisuzwgFPE7NMK7
                      vD1lhz2Qv2W96wPHvWU2jb2o0Oa8/AHvPBCURjxKmXw99pdZPQ48Qj1hqa09s9w3vax7pDwpxLM9
                      sOEZvKJaED3jpju9feFqvZuwyr0AhqC90DysOzDOjb1wZnC9hyOwPdo3Bb391MM9BL3gPH4dFj0W
                      F209E5d+vUr6Rb05R7s98u6ivZ8xxz06O4a9tNmdvFNCyL0ilzA9M+U+vVp6N71yzVw9DBPCvIv0
                      qz370qI9Q6QnvW5ao72/Lsc9gwx8vXJjjL06N169+IeWvQAdTLxow+y8U2rHvaIst730YYW9ahom
                      PdkSyj0wPDG8MrGIvT4yID3Cu1A9kRmVPUp/kr2g18O9B7wkvWjjVTxAqD29pKblPGCmdzvpwZM9
                      QNwVOxDSWzzw8BW9Ey+lvaA7ubtgMQ27Qe+ZPRrhUD3dy4k9aNw9PNgxq70HA8U9toBYPYBiGTwt
                      c5e9gKjIOwqHGD0AE9q8GN4MvKAppTzinbq9yHWBvDU9w716nD29vQajPQHKtj2rOL89LKK1PGw6
                      gDwDQHu9SoZYPUPzxb0pVr0981bMPT4qNT2fqZI9UMo+vZI7fT3APiY8b3CgPR26nz2COgM9SC/E
                      vYWtpz0Wdw29COCjPGzZ1LyPtbk9EH4mvJDjdjwC8lw9avFiPaireDwQaUi8HFfXPIO6Ib0genC9
                      0mxAPUKIor1C9oS9RP8YvY+uqT2mMAk9sOySveEzuz2kMc887KjEvAeBoz1q8Fy93znEPcQV1Dyi
                      L0Y9owx4vb82oj1w3XO9dN7jvEcOQ73QfAo8UBdTvIDuGb0AQ/W8Nh0LveAj7rsyzRI9FJihPIBk
                      zbrv48K9U1mdvW35KL3ifZe9nEHkPAAkTTx1mpe9IOflO4ALvbt9D2G9R1BtvaqQUr1g5va8ADj4
                      OAZyKT10gui8ANimuoNTYr0Cvwg9aSyFPbgpurxJoco9KKSHvWgUSzxgW8K8J/Y3vSSJ+jyiQjw9
                      K6jJvY9htz1WZAY9fePGPZi52ryNUWS905LKveqMf738HhO9LrFDPYbEIT0hGqk94C2PO9gS1rz9
                      Py69gF9vPEggo7wZKa49kv1PPQB1vzywpIA7rktLPeAGmr0qf3I9WH9JPFBOKL0AGi87okx6PTh+
                      mjwQhzM8btE9PZDfsr2/Nbw9196HPU03dL2JJrw9chtDPaAp67tyuiY9BNj7PJcYsj2A4b28NNer
                      vJK2Nj1AIza94FJ1ve5oaT0UoMi8GJsLvBoRrr1XjEW9STXIPZouBz3rlce9LWNIvXkorj15+589
                      aJW5vOAK/LuUF5A8JAvUPKtEyT0AVQo7GoorvdAolDs0Lay87EL0vEB2LLugrcM8OJapPKg/PTy+
                      KAw9cHWTvaBheb0Amuw6ECpgvLf+wL3Rusw9GMStPAoaWT1ZWbU9AI1eu1I7Ez0gZtA71HXUPDIu
                      JT2l3b69GuEzvbLis73NSau92bLAPQxE2Lx29GI9Gq4hvaiCPTww7n08vdm2vcTizDwnzK49FV6W
                      vUDedbwmDgs9zKibPDCmwL3N4XO9F/EpvVgjQLxKn5G9aCOQvXIvFz2omfi8N2i2PfvKx73C7Jy9
                      IIDNvPT9+LyPh8e9G3TKPagXQrzi3BE9oCutvbd+Ir3kIuo8efSuPVRl7bwAmHG6aCkAPEqSBj19
                      Rqw9CgUIvcD4orppkIc9MnxFPXkNjj1U4c08WCh/vJorZ73NcoI9LL/xPJclwD1Plbs9I3OlPaZj
                      qr0457y9sg3JvZDKTLwYTLG8Dr8iPUC9HDtg1Dm9iJuXvHsoo72cxYy9pw9/vdoTib0AuMu4IHa9
                      vcXzjj0tpW29gABNPFBXrztYJog8ocGePatyjr3QAQ+8xpaMvdMxqb0gToU7aRrLPfOulr1ZJJo9
                      ncynPVCntTv0h4K8Gk6KvUAtv7rRysI90N2tO9gnCryXc609YJEnu0cmIL3yz6u9x1AuvZ3plz3U
                      UQC9euAVvWQw4jwzJKy9mLAvvAfeWL0wWOY7TA//POhevDyQbVM87CmHvAmWhD2esws9qnYWveAv
                      aL3oObS9k7F7vRjZtL3AkQY8vZxOvUCZYr2HVl291kwXPczsAb39h3G9gI7kOwBvjbzle629yOP9
                      vJraU72Av4m84BeqvGyc+Dzy03M92vg1vUUykr1ha5893huWvQ2hhj2H3zO9T8vCvf6AQj0AZgc5
                      areBvbJyt720lqm8EJoXPLa4F71O+1A9opynvV8Fhj2pJ6k9EOuWvVQt0jwwPY67lh8HPWz6sTwD
                      PJW9QH5pvOKIVD0g38e9muMYPUbRUj0AjE87cSSGPcMqt71T5K49DLn1PPYeAT3iilY9zicbPanx
                      uz1DkVe9gBrHumdXr73wOya8GP0PPIx8nzxnmnK9jRtUvTK6PT17pLI9GLqMvLT017zKREo9QCv9
                      uhi9ub19wq89IOCMveglnDzROsM9ZieEvWKwej0CIEA9yHqZPOelIL3msUA9mv63vRrUNz3Vx6s9
                      eZGsPfAepb3Iq8u82MrivFzrFb3jE4Y9gBrpu22mJ72s05e8MDoJPKdwer1+G0o9uO+evWe0oT0o
                      TyK8xgpiPUCyQbxoNZa8h7ipPZTu4jyD2Ys9S56ovbCLZTyz4Vi97cV5vYq1dj1gqpQ8YkIUPdTL
                      m7z079G8ukY6PXQDib0jn7s9VXXKvYD5sjpow7K9li5SPYDcLjw0xA29DDvmvIFshz0KK7W9AGMy
                      OwWZuz2uiqC9zxG7PbcMnT0onnA8htQVPbBS/rtAmWc7WvA2PWCbhL2OwoK9oP8qvXiOhDw47868
                      8lg3PXSkzLywYVO9qnocPVMTnb39UFu9AFqjuxhUmL3yQLG9SoZgPRKxJD0S4j89ybCKPfhklL3n
                      Nnu9AQemPZV1sL1yJqi95dCwvTBuljtxuJM99bq1vaCfV7231ZY97EoNvcZaQD2jl069iuowvYDk
                      trwC8G09UP+3u2CMKr3N8X+94vWLvYB/oDrmRgC9rDbrvKyHtrwASLe4EHKWvQ0euz2tfo496A99
                      PHESjD0fPbm9NIebPGJbnL0tlKg9bPW7vP6gOz2XHEK9B1ccvZYFJT2zeFq9DKuFvNgnVbzAIAg7
                      zRWUPejhVrxbpZC9yo9AvQD4jDoeTHQ9IJxjvVCiU73oJaC81yM0vZ0ZaL0T68s9JlNEPRcCgT0A
                      oue7QLk3vZMUzL1gIq69pmcBPTdgZr34rYu8YGZUu3pLFz0v/cC9cAS4vQqydL2pJqU97SBwvVf2
                      fr1A+Du70HLSu4rldL1MGZc8iOb4vBD9g70wyaO7ZDYYvSyyvzwdoqa9jI6/vLRxtjyx7Ms9rron
                      PXT9sbwn8MQ9Oq5OvcWhn73A27O98uQXPTR2+bzQ66G9wnEZPawRr7zyy3g9irlHvWAKFTs62L29
                      PUpEvWOQq71WaE49pmkVPVL0Tj08suk8wIrEvGOhwb00ec68Ab6uPeg1oL2dKII9MHPyOxhQCDxs
                      QrY8wFEmPBIybj2cN/o8qIvYvI5TAj0T9DO9EFVyvXrcDj35pqA9gIVJvcPYu72Nf3K90Imtuw2o
                      nT3NVn69lb2lPYAoxbv9GpG9x0+yvTN9G70qlru9dxVTvW5Pqb2uFUo91pdyPQrCv73anAE9qP1M
                      PBjstr31/Kk9Q66CPbc2mj0kp/88szNzvVjhIDwVGcM9AHT7OkjhxLwXubE99EQXve8VqT118cK9
                      0VmRPX3Vxb1sa988PnSGvaBoLL1Agyu90IATvTrjYD1YEMS8WpkGvXLPLj0iXnk9OlGSvWJrGz0A
                      WYg7dixWPfoLPr0zN6a9RZmxPcibxL1KHMS9Y4Q0vUQ/i72AefS8tokFPeBw47wQj5S9ID6FOwiU
                      qrwq7pe9mrcKvUBTyb2V9Lk90BsLPAyS3ryMKsQ8w+ZYvTRDCb3M0e48gBuHPKVFmr3KOXG92OUT
                      vMiY+rzwnjY8Kkc5vQBZfLx09Bi94rStvQ1Zij19CD698gVLPVXPgz15ScM9FD2XPHBLErwX9LY9
                      J8yNPbM+jb1184Q9kARJvaZZPT2Uy4Q8PWSbPTLKBz3DCFi9AmS7vS0dnD3DXp09mFsLPNbSmr1i
                      2ms9kWyfPR4ALT3w9nk8Glsrvd2Oyb0GxXk92sO6vb3vjT320yw90A8evYdPOb2w/qI7mD9ivBJS
                      gr28avg86odtvZPpjD0YrfC8GKEavDomvL004tw8RvtjPSCHqb1XN7k9AuB4PUFxlz0fQ4Q9mLLi
                      vICDrDzoHyE8eoh9PRjOTDxAy9e8R1LCvcoUQb2sFgm9nKv3PBqnRr0deIg94qCNvQB6AL3QLu07
                      yC6SvTa4dD0HfK09AIzJvFg5FryYbku8oDqTOwCshbxQinK8Is8ePWi6qb3Ouwc9AJ0Ivdjek7xh
                      rsM9aIwBPE43lb0heY09QxiwPd6lUD3SJzM9rUKMva1Xm72Q9Bu8mECrPBm3uj3oB8O8U1mMPSe6
                      Qb2wWH+86DOnPGPqd73SWRk9UFP3O/KODT1lyY+9V8+BPeCpwTyfAII9Nq9mPaxiirw0K6u88oxG
                      PTAxLbymCXc9lsyIvUo+Rz22y189nL8HvbKQTD3zeo49Sm98vSQ06zyM5/O84QjEPXD8TL16hoi9
                      U5KlPRvoyb2BBqw9sA6cvajDeTzM8xC9sVypPfd4lj3C/049mgMrPSJfMD1htcE90OHEuwNhQ70A
                      Q0A8ffq7vfMhyT2i53k9cHinvdA3PL3ML8I8oBSNvIAa3bs937m94xolvVR96bwDpSS94FXtO3ZB
                      k71I1IO9MFQLvHDAA70gcCW9Vh99PdsRnj0Ewu08qMuqPDoasL3WXUg9Gn14vY1vqb3Y5Sc8+W+S
                      PfIgYj1wKCw8BxyZPZCMH70Ah+O8/I4CvTDYbrxQCLa9GqV2vYCYurreUnM9gQ66PaN8qz3secS8
                      AA2guRKEYz1dBMe9wKzIui3Gxj3dCqo9g8qSPWi4IrzcbAe9cPEPvXL8NT3C0zI9JGjUPPtjiT1j
                      3L09ssVXPcO5Kb1QD7Q7oqaivV8Prz1Rv5k9D9u0Pc6wKz0wUbA7zcW5PZD2KrwAX5c8AMB2u0CE
                      qDzAEUk7MFvIOyOWdr1Xw1C9oqpjPehDvzzw65m91D+BPHT88jwAgLa7aHUvvPQVnrxA7Qe7qHcd
                      PIuQp73tvsi9EIssvV1Xrz3DaB69thVjPZdEVr0vCsE9S+yUPadmtr3j/jK9QE8nPG3UqD0Sf6K9
                      Db3HveqVb72ARvG66CfGvAA0srpKCxI94Iy1O5QLlTxF6Yy9wEpjO6rBkL2LaKg9v+GQPQNctz2p
                      hsQ9gsyGvZ1nPr1AWbs8FKSVPNQ7jrzg+Y08oxiQPbKCsL1ih8a9ynYPPToMSz2si788ALTavOdi
                      vT2jMTK9NiMXPZJQUT0qJEA9fgaovW5JLj3BbZg9256kPcoBPL20bew8ADHmOzxP1jz/E8I9qgkT
                      vXAzEb1N/qY91Lv7PGD4fzvIU4k8OlAoPR0Dir2WB2M9gJPQO2Qp4jzyPxE90myVvZoQyL0Acy07
                      FGTcPFAktjsGC4O9+ZmoPTgm07xg/ce7hViPvWRv8DwU9KW8IxJ2vaAqoLtJ/cM92MC4vMGeiD1N
                      Eaa9Y8ZvvVNalb3JWco9XYmFPQA01jgYzpu9zLb1POyWnrx97UW92YqXPXP7G71QG7S70/E3vUDB
                      I73J+4o9vUlEvbaaIz0yyFU9QK5Ru5JpLj1oZ6S9iaWnPWPjY71QQqw7gLXMOmhWIDw27aC9sudS
                      Pej0CTyoa4K8w2C/Pf6zTj3xOaM948AcvQUVzD0bUow98Op4PBscqD3QJcm7KiiEvZR+1TxnHTa9
                      gFipvKDhPrvqJ1U9p6FdvQt6o72zHqo9J264PcByl710SOq8UZGfPfSU47wUwIm89IexPC9fsj1a
                      lqG9cQeVPYLKcD22Kh09goRiPS82oj2G9BU94H9yvaBNTzukodg80kICPXnyvD2Jlso9rLeHvDTe
                      lDywlma9mkTMvfS4yTzKsGQ9QGlqPDAwjb3gLcG9URSePXKwkL3CVzU9tKmjPCAGkDsymqi937Gm
                      PRAcWjy4E588tznFPbI/Yj36uH490Gi9OwBWfDnCpUE92o1pPQI0az0SJ7m9fSmsvYyByDwUk/M8
                      mAMePJ+2qz1H4W69xDwBvVdHoD3emWw92WuePQDWZLkXqbI94u8GPSDveL1099O89KWCPDkplT1A
                      n4O8mdWOPWOTO723Q8a9i7LLPT3Dtb0EuYi9gCLguqymubyGlik9UGsdvHg7ojy6hBW9QP9nO9gA
                      kjymi6a9KIZXPGLcBD20TLw8QnShvUyhEr2iuFg9yhtLvd+imT2o2pi8wLO8vEdUeL2gFnY75rue
                      vQBzyDwXkVm9NfWavfium7wswua84G+9OyjQHjxeZ2c9ANY5O7B5wju0vI88amU4vYDawbw0Yu48
                      xTWXPay3/bzOSVA9ma6qPdiuLTwCPDg93TE8vaBDj71WGiQ9itjFvd0Vyj1fDYg90GD7ux0jSL0U
                      tfg8wi9tPQDVybtmnU09nncOPUDTvrwtKqY9araGveS05jxl2Y09zCbuPEojRj3qSG09x7OMPSpC
                      wL16hJi9mDTJvODfCb0H0Ly9jW2OPdxb4TxkR/88ATuhPSDQIb2gDO07oDDDvPijmLzJTpo9tZae
                      vbPBXr1AVQy7Bc6UPXJSnL0dwr+9ALEIPDEejz3NloC9WI7QvEBGHb16k6S9u87JPeiVrjzKc3K9
                      IC+/u0QfGL1qJA098gouPaCH6DuMncM8X9XIvUqgWj1SAKq9PlAVPefLKb0gjts7pmJ9PWrVB72k
                      49g8RQW2vVZSRj3YYlE8+ErQvGHboj0QSF69MpNWPR/IwD3bRJA9T7nDvaCUWruq64W9wAj/ugYi
                      l71kTBe999PLPafxPb2OdVQ9QDxDvfNzuD0QY2S9Trqnvf5gj73w9Tq8l10uvaCBYjtyxnk9yoRu
                      vcgpsr0UbcO83v1KPV+wvT2DZqA9sS+aPRu/mL1YFV48fkVxPfL3Rz0ATtC8oK2qvGQk2TxSdB89
                      lxXDPa9irr1CNmc9wCd4O/x//DxddJY9EH2RvQLPLD1AlA69RYiWPYWEpD2hN8A96ECSvYxq17zL
                      74+90KD+OyBL8LyZc5c9hCEUvfGmkj3Q5sC9Y1uZPX7VYz0WrhW90GW8vYCWd70Zy4M9EpQsPX42
                      fz16bXK9TEHtPPQt/jzGMaW9HWNOvfQJzbwMZow8B1Q1vS6rAD0ha4U9wzeCPed6oz0oZic8ekpf
                      PR6pPD3uPSs9Nn5EPQeHvD1N9qk9+GmSvAAKSzz4nr28PpaVvfLELj2g/bI7AFXcOeYTEL2/27o9
                      N8EkvchVlTxUjpm8TkaAvQAtErxoO1u8u/q5vUgiubxKzIS9QLGePHAFIzz+USE9X6W0vXFbvT3s
                      95o8fKn3PGtDhz1TgY69Ify2PcpoEr2n9KY9LHf5PPARsL2ItMu9IkxbPQCNYzo2D1M9c6VjvZEO
                      yD2VnaA93ZCgPSF5kD1E1/A8E3gpvXQ1m7w3Y6o9qGqZvOlFmT2w8kg8gBGqPLHomT1D0JM9JDyM
                      vd2prb2AeKE8PdvDPRKqHj0oHL682J2qPHTXgbwA7iW9gOFOOoXcor09bpa9zRyJPbB6YL1gjjG9
                      DAfAvP0MlD1n2KI9MPL9u0SV7Ty2hV096ZaqPaq9qb0uMzo9gLqTvAA27rpUn4e8hEPiPMDzAzuY
                      k608MOyPvUx/kbyayAC92CcOPKjqTrwbd629KEUsvELafT1aPxa9vp2LvYD3Nrxpo4o97edlvfh9
                      wzwA/zi8jW8/vTCLmL3EDAy9KbqEPRJQGj1TpYc9HQyoveJqib2PU8I9zObBvFSV57xHYVi9gBnW
                      vGpsJj0SCzo9NuaBvXPmXr0C2DA9yEeqve8qvL1XjUG9Alk2PVuCuj2eoy898E9DvF6nLT1k0gG9
                      EGNXPDKvyb0jhrw9IA6IvNeDJb1VdcY9G+O3PcApdDuVf7i9mLN4PDDIUDynSZM9rxa8Pduemj0g
                      5Le7CshfPUxBmzx7NoU9bqELPfDODDx67E69pbK7PYpmD734G5S8LkaEvVKEDz2Rp8c9gCrIvXIL
                      eD20nJA8uLqTvRhol71jLbK9kdKmPapkQ72SjRs9/oujvRdmpT29hB69Ci0bvVSOF719MJ+9xrGM
                      vQxe8DxYfwA8CP2FPNdiRr2wQ1K8Uk2yvRjNADzCnDM90bSOPUJAOj3Sp5O9oBsSO/oKXD3Ks6a9
                      vpspPd2Gar0gjSu9CNylvTdrf73YWic8oIFUveJlNj1QI887Pt0tPUyu4bw4Q8y9sq97PcDSSLt6
                      EA09inakvegKuLy61gQ91JO9PGZ0Tz34toS92xLHPaZ2g73WpFU9Vm1RPaiqZjzQMs67JqMCvWqw
                      bz27W5u9V3dVvX44BT2JWKI9qLX2vOH/ij2XU4o9goxhPV/hrz0EtwS9c7sdveOJZL20hOu8iauc
                      PTqNh72tNzO9z+XJvWcysD0sAPQ8sGSCu5CJFDzQRMQ7QKV9vTESzD0wdFY8XvupvThDhDwY/OG8
                      U+1tvfSE8DzQyya9eDifvMifnLzoo629tRGuvVctIr0lLao98KJBPMZCSz1O4B8954+uvdmbyT0u
                      eUA9+XiqPXa9Nj0oJaS9AC/PvF59OD0fcMw9dOcJvTygCr2UM6o8KWCHPRuskb0mixc9XSKiPXH/
                      sj1dtxm9/P4MvRIRlL2izgU9dObIvLCHeDz4VbM8UjulvamVuD3sNPq8QI8Iu61EMr3DiDK96pDE
                      vUZfKz3yi249wJO5vcAiL7wUQri8UKsHvObPAz0ggIc8wNRdPA0qq702JWM9AAObOXwt+zxpDcc9
                      x567Pf1lHL1ZILo9ESqdPaU5uz257sA9fTRivXQCFr0kzcw81ugLPUB9UTunTGS9y/yNvZ0DQb3U
                      94M8++CQvWR6zzx6EEC9YNSoPG5EIz2dgZo9+MfJPAeFhz0g6/i8GCwmPD0Ebr2wBGo8GJ/9vHde
                      gz0k3988Y9OVvXcLN72WSI291Q6hPQ2isT0g5eM7UlKpvXuUkT0l9rG9TWd1vXLEFT34Gqa8Wjc1
                      PapqBj2D7K09c/O+PWx4v7x/S8K9C0KrvY/DoD1tWWO9YNyDu+vXlL3z+Y09QDpsuwRu1jx0o+i8
                      mAT+vLB+DLwKq169z/XKPRDhAbwTlS69aJUePEAPQLxn90q9HTWuvRqKlb1UJog8812+PVD+UzzU
                      FoS9x+8nvTq2rL3gtvq8BAkTvVHrqT1Anh275ZW3PZLzfj2YR5a8q4yDPVAGnruN+8C9vmkaPQ7L
                      j71gcMC7hxWePbAcdL2oOYa8LWuSPfAkfL2qpAI9iiR3vU/WiT0qlxk9EqkpPZUTpL24q5G8dhUJ
                      veBhiLzu3HU9yro+vdBo+rvb5K+94tWdvQIoXD0N4Z+9eeyGPWqTKT3T7rS9xjIrPYEOjD2VP6A9
                      +lGqvXJVfz0u1Gc9wfyvPcCG6LoM16a8RcGSPVAqcTwSrC09kKehvdqNnr10Kse80ITqu8DrCbuQ
                      HA+8YPMgvUA9WDvFwsK9Ga7LPdp0rL2M6f88MoF4PewCsTwainK9ALbMOSx97Lxg9sC78JQ/PO0l
                      YL2373S9IoKSvWV9mz1o/SG8+0q3PfWQhT08hOA8cA/JvVPBbr3+hxg9h89lvS5IRz3QddK7MN9Q
                      vUK/tL3yc5G9kvGZvZwL0zx0xvC8K9TIPdEAmD0AgJS6j3GtPTa8UT3aGSW9U/S6PSciU735CK09
                      9FCRPFvFrD1WPQ49MCVmvJg4w71yrns9eE6ePEFsrT348ZQ8Zuh+PVRw0DyoJws8TzefPfRjjbz7
                      r6Q9E3wovXsewz2AZ7q80zi5vTpdUr21TYm9t9e/vTpWRz0ae4S9tHi1vPgNqTy//oc9qOdEPDat
                      k72VHpM9jxG4veVHjT0sDZM8/ngEPVDxOr0ZPLI9OgEEPU1rkz2jqyi9sBnVO6hMhrwD6pc9BVPD
                      PVJtZT0oLhU8AOgkO84Nob2XD8A9OGaGvGhrMrzAtzw7U+9dvUAjwLqoQlq8wDo8uwPmqT0nC8e9
                      VdihPQ2ZxL19WDO9MFH+uyypyby2bwC9u8iZvRRf7zw3o3a9DGqevGvfhT0Jv4s9ZbavvaGjxj0Z
                      JYk9av4fvQxz5ryioX49iKyNvOyx+7xQ6he83b2yvZEppj3AOrS9DUS/vbDZuzt1ip69w92wPbpR
                      dz0ooTQ8fDCGvYiUvr0A1d072PCyvIIJAz2YJhO8izWivZMyab0uuxs9HTkyvbVvwD0AGVY6dDC9
                      PNkirj3xRp09RqgVPUYpiL1t/US9wG2TvND6nruk+9Q8VwyTPQXIy70yqwA94Mr8vABQZ7qw0Oy7
                      YmxsPY0mgz3iBIK9hg0NPVXUnj1ox7K8mP7XvOSHEL1dkhq9ZPrgPKJhQT2t0bM9xr41PW8ByT0w
                      Nru9vwHGPdaCPz1dGo294C2/u7CO2rvf3Y09qe6TPaBJuztKdxs9gnG1vagjFbxA9/260/eXvQwK
                      5Dz/hcQ9d1fBvWAWH7tibg49gpB+PaEyqD1ndFu9GIWYvZA/RL02vxc9qgHFvVt8qz2YzDu8YHOb
                      O2nwxT1Iq6s8NIDBvAxw+zxmSSE9hQKfPXrNNL3QqLi913rEvYP5cL1WPDQ9fNYTvQAqnLr2nj09
                      00+qPdClFjywxke8ANNhutcDtD32KQk96uqzvUPPrb3ZpbA9kg0fPVTjnLxG6Gs9SYuMPVBn7rt6
                      qJe9pQfJvYC9er3TQyS94ALOvCvXpT2QzBO8STy0PYXdwD2gD6G7ehTCvRMoxb2KDxE9AB3tOwDb
                      Wb3a1Q09NUGdvTptw72sSxm9/1CaPbXwqD1stKE8hwRNvaqKPb1gGbE8gySsPTEPgT199TK9bxmM
                      PTN0OL2HJi29z7vFvXKPwL0iTHE9pMn9POhQazxzvMm9fx+5vQmQnD3gN769lCrzvC5RFz0azVU9
                      n9y7PW1RML3YvRE8VC6QvEdPvL2Q9mq8yh66vSgAmTyXF7S9zqsnPf09g71Hn0+9gBCwPKNHJ709
                      yCW9iqVTPf7KlL1MfuQ8aCQqPOo3Ij0gfS29mEvpvAgH7LwAhG+5kpt9PfWwkj2i4xE9YGVBuzJ9
                      xb2AwlG6Tc+IPRmFhz0t5zK9tq97PTWZkT0G3o+9eUmHPfY3ZT35YZI91wbJvXZ4or0dW0a9oLpX
                      vT1zL714bO+8dEezPFPqkD0AjYy8uixqvSzCwrzEP9w8mMapPACI7brIzqg8Q+KxPRILxb1wVny8
                      I8kfvfYCUj1cY/U8QBLHvWFywj154po94U+RPTDe+TswQFq9XVqQvQgzrbwCVSg9qWOtPRaFMz2k
                      Wdo8CIGjvdB+t7sg09u77IPqvEJUOD2U4+o8+POXPLwdAL0qZkM9WMRTPEMRxz3oNPO8ZeqoPSbX
                      aD0yIF89fFYYvQAddLvnA3q97S6pvSCEojyAPdK6DaaXPSfJc73wSV29sLUvvdRCy7zBV7E90BEL
                      vYAer7ucIfg8I2BIvZTc2bwTmpu9sHiHu22Tor2bur494AHHOxFesj0Ml9W86BiJPFDZ7btHt5g9
                      Z81/vZhNjjwOMC89rh2FvWaNTT3UGOW8oJjjO2AugLtQwu67EvaavdjMob0Q+W+9k08ovUDe27zj
                      Cp09Zv0AvYIOVD3dmKw97UpUvWrSMr366Sq9YIK/vAKgOz1HnGK9ooZjPfaKcj3JKL09BdGPPQ3k
                      xD3IHI48KH1+PGDOyTsaPF29x5+8vQCt97toPVm87wa8vZNzjj0yd0Q9TWHGvVDm3zt6S3o9dzAj
                      vcB4hjxOX0Y9GGBRvEE+gz1QFUS8lVWYvXbVVD1QeE48GXfAPeONRr0ySpi9FGUAvct6rL0qK1c9
                      ECx7vS/zyb1ybIS9R62xvaHCij1nxT69ehpLvbcOYL1YAS886qA4PZ0Wg71kctI8wPQ2u+NseL1i
                      0lw9AnIcPe5Rjb0NZCa9DjJ0PTRLkjwIoIC8QrwFPT/mkT0O/om954slvQQg7zy0nrQ8yCPHPO1m
                      lz0arXw9rucuPTIoHz3YvIW9p9nLvY15dL3o9KC8q1GCPXBRYDwCvsy9gJlIvMI7YT1IIMA8iJqb
                      vDuprj06Nj29E6anvVA0/DtYZj08lMqoPNuspD1YEYM8rvhaPUHlpT1SWUQ9kvFhPbr0er2FV4A9
                      wIZFu2caOL2MaYY8ehIqPQXVyr2oVX688xVhvceXL73tYk29yXanPciIjLwsdfm8aTqHPaAnmr0w
                      qiw8orclPWBKyjug2XO7TCQEvbBMSbwkOfU87IyPvLXPvj0euSk9SdWDPdrwWb00H6w8SsYUvbZp
                      kb1Eavs8aByHvKAhmDv2THk9tDXpvJp1iL0i7189trBsPVlduT1aDlK9+F6JvQDuhr2IJqe8S5yn
                      vWaqfj0gjqI8WKCGPKwN6LyrzIM9oXDGPTd1Y73toLE9QMQ5PAYBGT1CABQ9WqFoPUA1hjqju8Y9
                      iHKwvadYvr3QZpe93FTxPInMjT1Ad6G9r2a1vXqLRL2TUJ096/6kPXMeKr0aVyW9agmGvYC4vbzY
                      mXS84MPGOxrhUb2o33m8gKS3O+Do3bx7PaO9GPh8PIg3rr3AUsI8aLotPCcZTr2ocxw8KRHMPQIk
                      az0snae8oNsavbj5xjxSn8G9+2u1PRBZQ71EW/08KH6tvUBBSDw2OR09FjQ4PcwrxDz3uZo9536u
                      PZhyNbyRgbs9uiSKvQGyvD0ia3499W67PcCKZL3sDa08N0htvQAYXjjAmcs8NWOMPWDCSTvko9Q8
                      B9jBvePvmz3BI5M9FIuvvHk7nj1FhJm9UChYvUMgwL3qbzA9/YOJPWAoLzsg1JW7EZuwPd3vmD0J
                      aIU962S0PYAqQLxiqlQ95t4LvdkwvD3gkf67DV84vWnwpj3YJAI89EGevO5NoL1jCaC9wDgIvP0r
                      VL2r1Zo96fK3PeLUVz3pmaE9KlvEvZbanL00to881c/FvYCd3LvM59u8KOrIvbMQuD2Dj129RKkE
                      vRBUDDxum6m9CBm7POJyFj1CdUg97BvOPAPLLr1YzjI84FxdvagT47y3uki9CLafvTIZMD1gNta8
                      NzF1vVabiL3FpaU9r/+0PYCcwLuo4w68rBvtvIDRmDqwbse7hniovRg4B7wUwte8IyilvcCVlbzy
                      ymA9WOhaPNgIZ7wqYC+9kd2bPVhUoTyUI5480Ga9vWKQDT0vTa89R8I+vRgmYDyyOgE9lwOxvTgJ
                      yrzAHRK8lxeZPaA++bzgX/O7PV7FvUCnzjojtCm9LGPiPELaUz2nqcO9swbHvX0FRb1s1oK9QXOx
                      PeVgnr2aTks98lQXPSLwGj1YnCQ8jWdQvU1hgb0WvWk9WuarvbuDyr23Cmm9/T9jvSpQR71hI6I9
                      wMihuj/PvT1lcqm9qMNrPEqfAz3YC9G8TcKyPSKJBz0WQAm9weiVPQg9kzzJ8os9tL+GvXRQr7wA
                      qFC90vahvWKjtr3ozQg8S0agPblyjz0CvR89SM7EPB/ewL2ibxc9FDQVvWBi3ru5Eq095P7pPF/9
                      mj0AqrM6Cv5+vSrqEr2oUss86E6kvJkhij3wwgu8OQOSPWAMmzuWvw29QN47vUJhZj3/s4g96hQg
                      PfDXSb03InC9biOrvVApsb3Q6Bw8HQTAvYAVL73640K9s3hEvXtco70EKO88b96QPXorfT3Quj+9
                      wNzXvHqTur1nNbY9tGaivIzR0TzvWMy96C2JvbJ3sL0gNbQ76s4RvRDEQr0osDa8LA6FPMqwrL0B
                      iq09wE98PBi7tL24MbC8zEaCvTSr9Dwflq+92WmxPeLKCD2wkY07QG/ZOrOUqz3D9MS9BQjHvYMD
                      fL3LiZI9gA0lPEMiRb2AP6y8iIrJvQ8YwL0gWfC75W22va4BND1oCXM8k2q9PTfXV71nCbM9A9YZ
                      vRKGNz3bpLK98EhuvSzy97xQa6E70CBEvWDSmbx4SbE8HjE1PcqkgL0Yz/G86uw9PcDLa7wn9CK9
                      13K+PZo3Db2XZr897ROVvTrMQT1sNvo8H5yGPaDNu7ulH529EPEAvHTomrysosW8cyPGPeHmpT2N
                      aVa9+I6SvBh15bzmXAC9MmIcPRO/Yr1Vo7I9dHAXvbh7nrwW0iU9k1JIvb03Y72r56897QxOvWCK
                      QjtrpsI9SUuDPYutlD3G6KC9aKmlvCYkVD16UWA98UmVPUQG8jyBE8k9YMLTu0wiyDzIYrQ8QGya
                      vSqCOL2QG0i9AF9XOsDI4DoYLFO8qGEPvADv9LyxV4U9AsQLPeQBzjwgE8I8KFyOPOKXaz14SI08
                      pai3PWys/jzderE9QDSBvIBAPryjlqK9JXzAvfHywD3Kmkk9sGAzPPNCsr24Jq29oPnqu9Dh2jtG
                      +oa9JHvoPH8AhD1CGiE9Ip8BPVR99zxhjZU96u+nvS5GIz3VlK29xEz2PGPQHb1z24s9sWC2PfAA
                      O7yZna09AMXru433wz2s05S8kbiYPWAtAbtKISa9bMmSvNKEWT2U9rw8KNBQPIxQu7x0KbU8kAJr
                      PFqgaD2Y1TW8mE+vPEhiwb2tQcG9u+iYPdCQoL25up09kpxGPWAOxTsz9b49wzO9vfftNL0VDro9
                      /XcavZ4NkL3w4Yq9+mxJvSK4GT1KSnq9qQOIPaDilzusYJi8OCbevOCngr0ADGE5ErG9vb3ubb0A
                      m4I5ACDjOayCjTxSHHM9aP5RvLKmIT3rR5i9oLDCvABYM7zdvVy9OSaQPaq4Lz0UYJw8uNOgvOjP
                      r73wARI86WPFPTRZ3TzrcaA9cO0gveuFyb1XDHm9Or49vbeZJL1js729IDkwvX1wYb2eUkA98kdI
                      PTQmirzRhJU9EndnPTAFAr3AiOE6xkKivWaBeD1QOQM8sMXYu3DXoL0Bv7w9x+x9vUA3DDyyzGA9
                      mROSPX84wz2abzM9YKh5uzC8/Dttl5w9gsFrPcMlsT0KFGE9ip1aPau/mT3gJJo75R2CPeBA0DsV
                      Csu94JdevZuqsT3Q9RY86KJnPBrpAD3xl7c9wLy2vXvXuj2dv8I9AIqtuo0Vur3HYsC9cWm4PaB2
                      n7194KQ9Ti8PPaDLRjudRsS9I0pXvQqacr2k0eM8pmhxPWFawj3UTJW8ffttvUAH87x9IaQ91N26
                      vNNlrz00MxO9IAPzO7Nxlr2ABUg6GIC2vCr0Jj2wivS7p+BhvTA/VTzVGqQ9MLpAPHWXyb3sGa28
                      mzq4vUfJTL2lvMg9YLPJPLjL/7xKSWw9GfiLPUMCNL31WYS9ZWWtPQaOEL3omkE8Y6d0vZ0jwz1g
                      b8K7AxWgveAvqbuql0k9YDGAu6XqxT1IuLs8COWZPAjXvTwYvsY8TiyqvQCu8LmsHMU8kI0/PJDu
                      vL1XCyW9UGG+u9rQdb1grwW9tWKhvUAla70zeV+92L+AvIDwtzqfKsq9KkdbvZUpqD1IwJM84+Wu
                      vcrOFD3tMzi9ufm7PVrIPr0hUIw9os0fPUAN4LzBq4I9wmx2PUyuhzzLtLy9EpFRPerpED3oyzK8
                      DPuYPBcjjD2iqhA9T4SvPdqkk71EmO08HDPmPPBDbrx2AnA9P9mRPav2ub1qEQW9QHkvu32LPb2K
                      QXi9Q01UvXt/w72QGBg84+IevdrwfL0o3ky8Yzwbvd0iX71Kvj49INiuvbd4yz2oLsW9HUudvaNm
                      uz2C7TY9HeauvWCERb2Yn8C8xudWPWQX4TxlAL+9Rzq5vQCPn7zACKi94HXVvMpYDz0HBX69APDg
                      O03HMb1Aym47bz7BvdCuNjyh24M9p186vXBkC7yFAbS9jHuzvI1ajr0VvZU91G2MveIMHz3Ttkq9
                      vteovatbhj1gg9a7YMWHvAGLxj2ZGIs9DitgPRcRyb1IweW8OOiJPCjZhr1ACrU8CoJgPbDgrzsT
                      LcA9PlhePVmYyT39v0S9tuN/PYZ1bT23Pb49UKKfvZSVqzylH8u9uvkNPaUGxL3tMSy9as0YPXuO
                      x71jKmG9aNoxvEaTVD2HjLm9BAPYPGUYoD036ma9YJInu9ghdDwMieO8oDyBO7So2TzjscE9OMSJ
                      PHZtMD2oY4a9fspIPXQJ/jxQiMu7YCZeuwi03Lxk0IG9Z98lvZfpU71WEBY9lgc1PXlmrj19bzi9
                      RBrXPNZmCD1i3309ukNWPSC/jDu1N8I9DzeBPYPOvT24PKW9Plw8PVeuer3oCb68ex+TPdB0tb36
                      QKS9WcujPRBTJTzC5Cc93r4HPZA9bLzR2bw92tMZvekKjj12XwC9gbe5PapRtr1Yqjq8sDMsPP0P
                      Ib0rwK49Xt0kPaCT4LwsU/y8EoM9PSsDwD3emo69Vq04PUe0K72MK8y8YBatvGDWfjvwhEG8is51
                      vdmroT0hSqk9hnEgPXFFlD1JVaE9EgvKvXLvib0DX7+9c1WqPWBBdr1h0Ko9WuOkvQdnkT23C8k9
                      PbWtPfrNVL3Qi667gPe6Ok0Kc70NX6M9ow7BvXodLr0g9RW9VaCOPWjaUDznGnG92RiZPVavFb2q
                      SB49UNRqPFp5aT1SrWI9AJ7WOYVsgb2UD4G8SFO8vZQjlDzA0Mi6LBzwPOKIED36UiS9O8Shvec5
                      mj2dRlG9UGjPO7OMr72wRpU7sdmEPcAsdzzA/Tu7kxZivccdqT3Qq9c7ADKAO6DpTb3COmk9gElU
                      vZMsVr0AJBM5QusyPRBWMDyLxI29+JHGvb7qEj3MCf48iUuAPQUVrT0DsEi9AMbVOsf5oj2moQa9
                      wtG2vWT21Tzi2V49/d+NPT84sb0GKKC9RcXMvdfquz0ucBY9ltl0PeLvBj3eqhk9gExLvYDk37qA
                      LN0718JivWe1kz0emic9aB6cPEYSnb2EftQ8YPBpvYA8yrxmVR09fjRoPUCxGbwDG2C9fqFKPeDY
                      l7vwpHu9ELEhvIE0tz0YXx08MO3ju0DTyzoKnQw95S6KvZaiPz0shrc8dx/DvbaPEL3Avu683psI
                      PUPisL2wk1G8IxIevVNtVL0+KG89i5eXPUUFnT3QNQm91ayPPWdHcb3OTxo9mDrDvGK2i71ovKy9
                      VE35vOorRj03C6g9AOo4vL4RXD2iuTs98N5jvOs6pD3YXGA8AHiAu9S01zzPirQ9QMe8vIAnkTtk
                      D/88l35wvY8Ehz2GMQu9SLSNPMu8pb2g4pQ7VC3tPEwV8LyKoSo9AOzUusICmr1M96m8P+qjPZKM
                      Kz0KpnC90ER3PB0Na71ggyK7CiKZvVq2bj0YhWY8zgShvU/BvD1eLC492O1bvKDNgjtwxIe9USSL
                      PUwsC71AYqG8QJgyPFSK7jwy6Xc9l8yvPTw6GL00Dsi8mfXIPYuvvT13P2S9iKfkvOAqIb0AYMc6
                      YO3WvPzEgb0xsY899idmPbC/hL0g7uE7YFzFO2oKHT1ofwU8gOD6vP1ihr2axr296TXBPTrVlr3q
                      hpu9rWHFvRBfQjydXm291T+WvT2ggD1SRYu9/ZrEvbiUhL26HWc9admUPUzChL3TqcO9E6qjvcs+
                      kb0dlZ69zvBJPQD94rlgmJG7fJgEvaitOzwAmU69jym2PYqwJT10uI08FSm8PZ1/Wr1A0ik7femE
                      PTr9I72DmUu9XVLIvYGgqD2khdc8LYKjvXhbrr0A9227KDsOvHoecD00H4m95S2ivbTw9jyxor89
                      C/zIPYDKD7x48oi9m4WiPZyWzzzB87o9enFkPboqSr0oMe68gG5rvKuTnz1obEW8Fe6fPfQ+57wG
                      exm9PLfhPOkxiT1Ng449TXBRvTBwd73I/I48sjdyPdLiSj0oDpK9VH7lPCj1YjwAIq+5ISmTPTRq
                      i7x0iqG84uh0PWFBqT0Narc9EFAiPGCEvTsqb3i9AGdRvboZUT10LJI8NPDIPCAUrrvCTIS9QtFO
                      PVh/tzzFoam96KySvaDGxrzm7A+9l+WMPbJnWz2YYZe8iOmGvWoqyL3Mkda8aotFvV8qsT2YASi8
                      VLqbPOpIJr0MVp28yOmzvaoaTz0CA4S9AlEcPSyb27xdGMG94LyGO7BxTL2Iisc8E0udPX7YMD0s
                      lgi93WlUvY+Ewb19UsM94yluvRTziTxiQ6q96thUveD69ruClLa9E5BuvYD6+bwUMo88sNpBPBCr
                      uL2G5RY9yQORPTDccTzD/5i9uO6gPEY5Sj1Onp29AN3Ru246LD07BKu9kxGcvcyewzzgzqc8gk+a
                      vacQJb2Um+U8jo8vPd1dWL3W/jc90U+VPRNxyL0ARrQ7HDiDvam9rT02Bg69wOUfvODP6TtmyVA9
                      tuEXvXjQhTzH4yG9DrI4PbxvzjyYhXy8r0LBPVB1eLxgtKC7GCKzvf4VrL37baQ9Ti1APdIGNj3k
                      0u48oD9Uu3++pT2/W4g9gIMfvGBRpLvXfWu9AIswPPfeXr1SZH894mFuPaBYQb1Rg7M9yikZPSpj
                      A71hqLo9WrW0vYDwF73My+s8g/WCPXYtHD21oq69+lAcvVcJZb3QlSQ8qqcEPeoqab3kNoG9OJPN
                      vJn8qT2ewiE9IyQ8vdJBWT0GwEI9sICYvdawKD0AkyC7WCjBvXmWtD1R2qQ9X5PMvRIifD1nRmC9
                      lMHyPPVvsr3jrGO905cbvcD5qTyR3r49+VC/PdJPYD2wUPi7MKOSu60+uL2ANV+80il5PXQuwzxq
                      ZH69YGCQvA31Ob2OgYu9uVjGPWYmNz1lR6Y9mrTJvQqmqb0Opi89mLhYPAAW0bw2pyQ9OpdkvRD8
                      JbyCq669MKURvYPxvL0e+Ws9I/2ZPTxx+jxTWJU9gri5vSNjdr2IMaY8JSSHPagCb7yFdJU9Fces
                      PQKcQD1/QMe9N0m+PauBgD3kCfU8mXiDPRYXHz14w4Y8ZIsMvSUTqj3q3FK9UJEQPIIPxL1KQXw9
                      3ZxIvTMym73j+cq9p9+9PXP9JL0AQyA8C4KyvaAQX73RGqQ9oJTRu6A//rvegHk90Pq7vZRR3Dz5
                      McM9mw2XPajcZDyjiBu9NW3BvREZvD3Bu8s9oqZ0PQrUOL3ujxE90hpKPWiZZbxSnDw9Y6qNvVnR
                      rD2tNY09jPoVvVB8JTyB0qU9yiFvvbVror3MdOW84MmyvTiHoLwmPKS9VLrSPL6PNz1QdUI8YlcL
                      PQxK+7woRJ29yMeBPMCHib0IG6C9gIDfu5+XhD2Mcp+84LnBO9BdXb3Lnsw9DyWNPXLdNj0wn1y8
                      IKAQvZQzgbwx0IM9K+eMvcB3h7z9Zh29Sd/EPdkznD1qh1O9KK6ZvIYsm73L4Kc9+utRPVEBiT2A
                      6408gJ7PuoVVgz2ueUE9sPnnu8CDkTwAOh27we+nPV0Veb3A4xk7p/u7vTxGBr1MpKw8gL4TOqAt
                      jrsHDWy9WMxlPGUNoD1oxuu8ZyNCvY2Sjr1g0s27KhphPdCZTL30JPC8oa+UPVDn7ztBr4Q9sT2c
                      PQMXij11lpY96HwMPCN0ub3WCEg9uhQCvYE6ij05tpA9git9PR1dhz2U1si8DPELvZrUOD0UyJa8
                      NXKFvRiRQ7zgMca8AMm2veftU72iNzY9ToxgPWiMGbwu50Y9qCUUPEJJgL3blZ+9ygUfPVRSFr3Q
                      NGq8yGmOveJtfD2OM5u9gOSQvOotPL15Qoc9y/Slvc0Eyj3IdK88Qh2SvcBSajvkchS9Hr97PdDs
                      BTygVqI8TnyZvbUAkb2yJQw9j++5vXdpuz3raJc9TrlsPS1Sdb2A4Wc61x69PeeNVb1h7ZY9guoy
                      PfYiEz3yH2k9wGJ8vXKoMz2eSA096gFlPeASiLsBT8M9w4olvbpIRD1vt5c9xYqbPa14Zb1gO7g7
                      I99pvdr4bD3ywRw94h4HPaXto70AfbG7gO6sO40Akj3x+pA90BOmO6pQZr0gf7u84N2EO+Jvsr0Z
                      sag9s8ZWvdSF77wd1Sm9lHCGPLB1K7wA4NM3XbsgvRAvcjxAOIk8lz/BvQQSh71Agxe9brZoPUoe
                      wL1WyH49ALbCvfHskD3XepI9jIGEve1tUr36G1k9cnuYvUhQuTzwbBM82e6gPaphKb3Q+3i9ltKX
                      vWKrOz1a5Ee9VskhPT3tpj3QAbe9b36wPQB7D7yXwbk9OCW6vZ4pKD2YgoW9YFWMvAAx7bywQW48
                      lKq7PIHLmD2PLJM9ZxcxvfyEBr1smQi9YE8BvXOqm72Yuom8eHeUvU7rWz1++Gc9bqc9PSihjb3w
                      qTy8dL0DvaQN6zyHNoE9EYWRPcg2nzxmMYG9YC2zPAsXw724+sW8eWiRPZpLDj1aIA29nVyGvRca
                      d71npkm914hFvQcJyr002Ki8aMqnvKA/ub3XGYM9UDjMvW7Nmr16yRw9UL3Fu2xYszwNvDG9GnUB
                      va2Ztz30Iri8Wr9Vvfuavj0Amj+5AIY0uehDgL3C16e9ZrYkPUBMRjuKBA69B6O0vZPOc73Nnki9
                      2VqdPdDAfTw2CHs9oDpku5KpKT2Ck0M9I2KbvcCiG70gKMc7OMGzvTEKjD2wJkm91G/sPPrSMb1i
                      YHk9sBTjO4Th3zxNqXC94olTPbkyxT0SsF09rW6AvT39fL0a7qu9PkoPPeSE0zzzojm9UMvnO3dY
                      sL2ZR4k9fVY6vX88mj2xCbI9dJSfvGyKlDz1iIQ9WBJYPKf6iT3gByi9Lk0OPcp3xb3hP6A94jYM
                      PboNsL1S22g9hFPNPECnrDw9o2C9ZUuRPbRKlLy5hYk99yBGvcoMg73o3pK9wDMfOwwp6jzPl6k9
                      8U2zPSwij7yb1bQ92P7zvJeurr1qjyU9EPdpvCmiqj2g9ey7GPhoPISm6jxTr1C9ma6zPY8cr72E
                      ZA29YmxvPRQL57z4Soa9vLTSPMflxL0AvEM7iODEPNByyr1oJ/S8F3nGvajS8LxwP0a9nW6EvZEB
                      tz2qSys9oO6JvejAIrzLEpo9qo1lPTIYVj2ItLk8GiylvZDUwb3aXSW9PV55vSwpuDyYMvK8o7dh
                      vTT5iL3QItS7djo6PSPyiD3X0KE9HgKJvagPsr0g5Gu9v4eePRWBxz0IIsI8Q8OTPZENxD1Y5v28
                      mOrKPFEroD1Plcu96tQcvY/gsT0yYBU9dLSuvBjN/bzZoKc9uOSePB73SD2ymFc9qKTCPLK/Yj3A
                      EPy8ABTqvDjN2bxzVZu9QwKTPUcFuD3AUIg6oDRTvb1Upr3w+pS95MwWvaDIDDs0Coq9WnrAvXSZ
                      hr3XUbO9wpcBPeAO9ztt8CK9R1tdvWL8Zz2FI7q9Cu6DvSL0LD0YCxo8ut8IPWvLnb2wDs67M7iP
                      PYmkvT0YoeG80K1xvAuwwz0zm5M95zldvQYjRT3g8Iy7ML0TvG2vxL3xs5k9PYY6vYB3srwHpF29
                      StIFPU+Ovz0UDpo87nolPWgFnb1gbYc7GN22POASRb16+l09PTg2vfpSa70b2MS9GL5nvP3ufr0d
                      u6E9Qo0PPXsqy72JRMw9MFxtvODOgjt3Ijm94Nu8vJ+kqj2SbDM9ZFf7PEqjs73NF5K9QDgzvSv9
                      vL2xV5Q97HaAvCh9IrxC1qO9KCpIPICvFTwZ18s9yiarvSLtdz0nMqM9dFn8vPD3J7yVDKW9ai4T
                      vRL+l71Jy8o95ySoPb5aCj1Jdcw9D3SMPShgcLxwoF48JV2APcvskb0rGLQ9E/FQvVaaBr1LKYs9
                      pauBPepMMz1MVLO8siI7PbPHJb2gaLQ8AcKGPWp0fj04e8i9rFW6PAhnmLyol4+9BkBRPQB/v7tQ
                      7AO8TN+LvVrEsr1nxj69qPmRvG5AET1foo89oJOzvGrPbb29sIw9kMYKvMzsiTxAtni7oBiYvRgS
                      sjy0tda8gGC6veWpxb3QAjy9wdWdPQBIWbsU9Ko8tAyBPPHcrj3+MpO9RcynPYjJkL1oZsm9zR46
                      vZIoAT3797g96iEFPRlhtD1lmLE9GKWevTc/J72K7RS9wOmxvEDAZLv8fYW9sPcuva7HQz0dZJE9
                      3EjiPI1bjz2gCcI7T9zCvQhzrb0azUQ9dvg4PSw7srymbgQ9EpJ9PdP/gD1QnSQ8HBr8PKA0sbsH
                      CXu9kdjGPdZvm73AYDI8jA3FvNCTLLzECgq9sO9PvMDLfL1GAyU9NNzaPBrBwb2U7/g8/Sg0vbwr
                      1jz4Pqo8cj+bvayqkLyg1Ru72fKHPRf9sr2oEEQ8YBD0O1g6GTz6GjE90h+6vTKMTT2I+529DQyv
                      vZJ4IT2wDmG8B5pIvTHjxD2CDx09NxHCPWeyY709mV29GtmqvX8vqT3ukYq9kr8UPZhsgzzXyz+9
                      XrCYvR1ZnL2AWy29AIxSuTpdJz2Uy6Q8kOIWvXoBVz3FjMi9SowCPYO/ur37m6y9eByoPF4ARj2a
                      xMy9SOnavGBwyTuevys9YcioPboaWz2HGri9yRWWPaOfaL300Lc8NoAPPcp3WL0Wg4S9PSSYPZqw
                      E71zbnm9YlkpPUB4GjyoVIK9l6VfvZTdsrxhRcg9PRU4vaR2E72h8cI9G9aQvbnpgT1tqzS9kj8u
                      PSZDWj28odk8LHWCvA4Tlr1kFuI8tay7vTAwUDzvSI49+lc3vb1ExL3w45u9GP4TPOv2wr0ItpG9
                      +RqSPaxcurzR24g9eSSLPdLZhr1RJKE9AIEAPJ7aMj0YE/e8wEgwPF1WS71aMY+9A+yMvT5OHj0N
                      Npk9svUmPcD5Obuombe8O36XPbD/Jb0o4cU8DghlPcSniL1YbXw8wMXBvGMyRr1tQx293a2EvRY/
                      k73IMb684G7Ku0Dti725DbA9vaqBPXn/sD39xE+9Z+mJPTXTyb0T5jS9lm5RPYfQfL1EEfw8RlNE
                      PYs2nr3qBa691nNQPUuKkL35hLI9gAwUvZAXITwM1rW89lOVvd3+TL3MHJo85P3uPKz5uby18q+9
                      bxGdPdfDXL2TFsU9sHrouxkjpT0W3we92O5wvM+Kt70cvtk8DxO1vVmfrT1diGe9hXK6vQsvoj0X
                      2Zc9DWuQPcUPwL3C3xM9Akc1PVWEjL03mly9oGuJPI1fuj0QGmm8aHWHPAuvxz0FeL09LBa+vH3K
                      br3VRoS9kBliPG1+yr3+A20983NovbjgjTzHHcu9MN4GPOAPoDz2njM9mAzJvZv8nb39m7E9+v5A
                      PYCODb0vcaY9ADUqvbPVHb0sE4W9+zavvUHJpT1gvIS8zaMkvX/Lx72J0qk9tkAQPUgxoTz/e6o9
                      V9tnvZXCur3d94o9UminvS9cpz0oAsA8AMiKuuy0Bb2T0zm9gGnKPJDViL2NcMk9Va+gPafLxr2d
                      bDC9KBLkvEZrhb0UVfK8xJSGvYCLWLyoJWY8AHSfOga5hb36Wxq9fdrKPa1CPb1P45s9yUWpPTCA
                      Pb01MJY9mLF+vKrCUT3Xcog9i2iVPUlPoj0Apek79KKjPE+FqT2zhqg9MG3lO5jMQDxq5TQ9WCn3
                      vJE3jD3weQ+9ETHBPbDfoL3/1Lm9mKw4vMU5gj3CmGA9lv0xPWJ9JD0J46E9EI2ZvSuDpT1Ff5Q9
                      8+hTvQDlDTqSHRw9kF8lvSnfnj1jypY9AIXkOYNOP7229H498ClivLxg8jwAcxs6ABbTuucjNL1D
                      Y1S98LUNvWzs8LygZLu9sACvu09nrT1gPiu7soSxvUruNj0IOry9DLPLPH+xyr1CbHc9i5+5PbaI
                      mr0O75W9Oh9pPah1g73QNuu7kI0KvQiVuLyDh4c9uVORPbzS0zz0prM8AqycvRSAg72Si3U96H9J
                      PGZUbz06ZTm9QL9pOzTx7bx300S9uQm+Pf+shz2o5YW9tJfBvAUTwL32Upa9oT6yPYpHUr0Sc1M9
                      dBWxPLePLb2WKU89NKIJvQwxi71gGMe86IQVPGxzpry3DMo9F+2CPfiC4Lz7h4g9xpdpPXsWnj1w
                      NLm9g54nvYTE6zzAmFU7ZsVnPSAepDzmi5C910BuvXhTmzx9mi+9iFCHvXALBr29yoy9tI2RPAVT
                      pb114JG9JgcYvdOWWr3Fe7g9EwBovew3oDyMO9I8TQDDPSKwjL3iF0w9IJ2AvWrCOz1Ay8u6GOHE
                      vBDXOL308uU8lBD7vLdZY728Z9I8jpUlPePnfb0qlQ49+oZlvVjugL2iYRw9ekXDvakgjT2UR6u8
                      0nxxPUiKvzzdO409rcp/vcLkeT33y7Q90CwGvdAQqDtneB+9UJV/vZKbWT16fxy9mO/DPJrDWb1g
                      Hw87aPTKvYkTwj296ai9Ksx+PaNTKL3gl8a8FklxPXGDvT1gfOs7mJFzvADfdjvXCMe9+cbIPaO9
                      j70YXVS8HTayvdATgrufJZw9jcSsPbiAvrzQ2Y+9zHSdvPDzNLwAcry8EV3MPWp4ZD09up69ZDgK
                      vRdpNL3Ag7Y8YlIcPUBnObzM3vo82U+NPTSXrbwM37089APHvJnOqz2fEca9kmQ9PU1vvb1MdKU8
                      9l8vPZU0zD1DgTq9KnJ8vUDZG72DZ0i9JXuSPQlbtD2dxMA97/6LPUCJhbw6Hh09dCauPKbVi72S
                      kSg9SCOTvHJebz04cJM8OFe9vPPGtD134769RYyavbPwdb3AJ++8+B6WPKpyTz1aAyS9ul9dPXMq
                      nT36SCW9mtYKPRhjHDzVv4M9H3/BPUJqeT2QahK8mB63PKG1wT3YpnM86mQLPUCefrsA7DM6PQPL
                      vVSZAb1AH4U6Q3KlPfAssb2A+9C8QO/2vJj+lbzYZr48IDjDvUAHLb0HuoU9WMayvVZcKz2qjDA9
                      oFd5vWhmDTxI9Ka8dI6bPGz/BL1WqJy9mFWWvW4TQj3RZ8k9svoWPf2+Z73flKc9usMJPdpyBr2w
                      D8C9jeK/vcg2grw5EIE97AmEvZtDmL12cE89kvgiPbZRMj0U+eA82IIkvLKOCT3VNsA9TbeAvdR2
                      nzyihzw9qb/LPbAuM7yAOmi9Ex2mvQAhNjwGvha92nG0vVIDn73DW8Q9kqqyvVIeRj0nDXy9Ksmr
                      vavJvD1UB7+8MiQiPRsYvb0AMB67YUyrPU6jNT3vFKo9x/dXvdz23DyBbJI93r2ovWgkn7ySggU9
                      lG+bPLEhwz3Az2M8oPihvRhDO7zIRoK8saaOPYCZvL3QJlW8eYWQPSABtjslRMS9r/mTPSLPBz1z
                      kMY9Jm8Bvd2rRr0w6Ow7h2zKPTLfPj1S1bG9byipPYCI2zpaXFm9wBEHvUYefT0LCY49ME88PNcO
                      jj36fjY9SV67PVKdST2XKyS9w46UPRpYgb23ksK9ItV9PcyO57yQfHk8LfGcPa3ppb1wFH+8Owae
                      veDnm7y0OOQ8kCjHvbqCRz1sH/a84t0BPbS3qjwXCJQ9TaqPPXAkXbxAkGI7SX6MPZbUPT1WpCM9
                      O23KPcEawz39RZe9UNCMu6FwtT2Be549LL2dvJRr2jz6KXA9qz+wPVvkpb0p7rg9wM3CvUxo77zp
                      16k95lEZvWC1sLvdZTG9V4SMPQy49rw+zUQ9Ef2bPfJDST0G01U9AOwQvJMbwT2CKAM9nbLGPRJy
                      Dj2wc5S9g9KVvR/vjT10gg29twa4vbCIjztrUb+9r9qOPf5BZD3535I9AwmpPby74zzagL69sA+J
                      vXC+DbxZhYU9YnwVPaU5xj3glzq96GrIPDamHT1sm/q8zbeFvRJfKD2AtlI8LBrhPDtOrj3w9kG9
                      GVO4PQxShTz99a89StkAvdjqXbwSvYu92QTDPeA2hDywSd07wJVTuzIBNz1bRqA9SfeVPcDcNL1K
                      snw9vn5jPQm1wz3gvve8TyWBPXVfhT1mskQ9404rvU0oNL24qK68XBsPvQlRrD3Vlsg9oXqYPWjQ
                      87yM/NG81BjxPCRGCr1QEQm9iHihvFOQoD0SslU9cD40PNKQeD3VDpS9bIT+PCyrqbz5q6s9APRg
                      O7ppyb14tLa8N1G4PbO8Hb0wI6Q7uGKzvShpfzwAuZ67B6+JPVp+bb2poJs9oEGtvd6nQz1A0ge8
                      0uNgPaZfB70Xjk29eMvGPP5/cD3zgcM90WXLPfm4lD10Iue81bXAvcMvgD0A0SA7+FSwvFL0VT1O
                      nqu9sETHO0UcwL15zqM9vTCCvS08wz33E6c9mNWVPEV3l72pvYg9xqNjPYmKlD1THK69oIEBuzL3
                      Iz03xLY9aA+gPBTQzLz9yUe9oiJ7Pej2yr3QSoQ71MmrvGODxD302ve8L+uIPUifrLzkWeg8R5pC
                      vQcoZ72gax87neI7vdIkTD1oM3k89/CzvVD0ML39Cmy9gDk0Ovu8jb1g5oC7DZFvva5jqb2rrpS9
                      0GXdu3Ndj70X8na9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgxNDAwMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MzgxNDAwMHEBYS5kAAAAAAAAAFo5F73gw029QZ2rPWBATjtIS529RI/3PIKJt72y6no9
                      bectvSJQxL1aBkW9FFKRvAfpyD3l2cG9bCnUPMBMV7zWZ6q9AHKWvciXqLyEXdo8L9+7PZANCL24
                      tpa8k4R+vbkbgT1fCb89oNhBvchbqbw4c/y80O8PvYBDD73qPI29c5ifPbJwaj3Q5AG82DZlPIAX
                      fb0qtwq9amArvSIIED3oZve8irVHvQrKQL3+9qi9efKePR51CT3pn7Q9owUpvQjnqTygage9na8z
                      vUAzcL0IPIu9q0a0Peq5Hb0DnaI9k0mbvdr2GT3z7H69jt9XPUADsjpCw2k9oBKsPFA0Ajysvt28
                      qD+UPEjtn717Fsi9Q/I2vZBRPrymRDs9NvJ3Pfs6jb1KBGy96noYPfUyoj09Yqq9snWevRjT7Lwo
                      MhI8uNWNPOhek7zTt2a9xLgDvRAdCb0SXkI9oASku6yK4DwU+vc81FDZvEDUzrxZ2a49R3CmPVor
                      Yr3YdEE8mdmtPX+5lj3T4pe9KKbMPDSs8rw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgxNDA4MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MzgxNDA4MHEBYS5kAAAAAAAAAKo2vL1KOcG9amG7vWpwPL1M6K+8yCyJPJiIory04ui8
                      1pFsPYOxtL20OAO9MKO0u/JemL1rp5I9zUBUveWThL0MnIQ8gCZevHGMuj3ndV69IjCPvX+zsz0x
                      DpY9NxCwPejQoTwDPk+9gN2luw0wwL0YiJW81Ui5veMCxr1lzLG9MHVJvbt1tT3xAr49KBulvEuN
                      sb0qGrK9gDFMvZnIgj3Ytgq84Pa1vdo8Dr3/u7U9kGDMvby90Tz9AE+9gAU5PIIQg72xGqI90TGs
                      PcATIzxVupc9iZGjPe/jtb34yKK8W2mXPZ0KxL2zpni9dBXHPFazJj0Q5wO90A+GuyyjrbyRwIc9
                      QMsTO6D2o7t4Lvy8WC0JPB4gGD2zCog94hEcPdAJUr05A7o9OrpnvbIBLz0UwqG8kA8dPGLptL1o
                      lm+8YxSnvfM0R70qAXq9aDJxPPCSRLw3s029vrpDPc37db2rZMu9+kpHPeEmpD3yRws9QA+LOnQF
                      w7ywJKy7Pg6EvfZfVj1g4s67mDr8vE2/G70=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0MzgxNDE2MHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0MzgxNDE2MHEBYS4BAAAAAAAAALC+Hbw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        aLOKPPe/YDxdo1s8XaNbPG3r0Tsqeuo7bp/3O26f9zsv95g8S29gPC7Gfjwuxn48L/eYPEtvYDwu
        xn48LsZ+PGNyKTwhNxI81NPdO9TT3TvNZfA7AiT5O34s7Tt+LO075xKIPGOSdjw+XUA8Pl1APOcS
        iDxjknY8Pl1APD5dQDxiz0k8GF8hPITZFjyE2RY8fMavO4FzDjw8QBA8PEAQPMoaKDwd/UE8PRxK
        PD0cSjzKGig8Hf1BPD0cSjw9HEo8Ys9JPBhfITyE2RY8hNkWPHzGrzuBcw48PEAQPDxAEDzKGig8
        Hf1BPD0cSjw9HEo8yhooPB39QTw9HEo8PRxKPIjKLzsy+Vg77AVeO+wFXjtOTeg75PjPO33uxDt9
        7sQ71mUfOzBHWTthZz87YWc/O9ZlHzswR1k7YWc/O2FnPzva5I87sMGmO/XU2zv11Ns7sNnKO1a7
        wzuPm807j5vNO1MvMztdxUU7jYB9O42AfTtTLzM7XcVFO42AfTuNgH07BqNxOz4YlzsyoqE7MqKh
        O5m2Cjy7Kas7DAepOwwHqTv2CpE7GWF7OyNHcTsjR3E79gqROxlhezsjR3E7I0dxOwajcTs+GJc7
        MqKhOzKioTuZtgo8uymrOwwHqTsMB6k79gqROxlhezsjR3E7I0dxO/YKkTsZYXs7I0dxOyNHcTs=
