N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTI5NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM1NzA2MDUyOTZxAWEuhAMAAAAAAAAPEJ6+AI/xvA5KEj7GdBU+cNuKvs89or4A9xK+NK2c
                      vt75BL6StV8+iFl3PamxkD7WJym+4P/1PbJqVj5mL929qCVivmCwODyK2lE+xJ2BvTpAUD725k4+
                      cF+CvBEshz6gedK9uLcHvfydt73NEZU+osh3PujqCL1uK10+oAHrveBfDb2TJS++Slh0Poyrl71A
                      09c8kjV2PqtNNb4zqT2+mOlzvQYuZD64fG6+WHAZPUK4bT6qw3U+dP3APRQcnL7k3rg9mIcgPdgT
                      JL544B0+AJTMPIs0br544Bc+IOoDvOAtX7zaw2Q+diNSPgBk5rz+XFY+O4cCvnqPEj72Yn++CMNZ
                      vq4RAz5AijY9k9lyvui/Dr6g9909mQ2qPlApLr5eIkC+6yILvoj5HL3IvUO+UM/fvcQdgL2O+w2+
                      YCFHPFwCqD1WNpy+4BJMPeTXlr5k7bs9LhuMvhs5jb6y9qe+8rdBPhl+iT6ntZ8+vGX3PY4KTj60
                      7Ke+FaWBPvgQHT1Xk4I+VPjtPdeGgz7sf4W+DC2gvchqaL5AZSc9wDqaPKCXzb1xfYs+VZ+KPs5J
                      R74gBRG9BpTFvR4lAj6Wdfq92auDPmjrAj7iSH8+vIXtPRpChb4eHHE+1KmXvrQb0D2cPp++3p4N
                      vp5iND6oTxG96QCqPifDmr6stpO+O6BIvvVSpT6IdC2+QPVFPWyRpj0mni++dpgmPvBfnbxQNX2+
                      KiUYPgDGnb5SPaK+GwdivhdJhD7yBJ6+GigjPrYSTL4gqQW8NnASPjVqqT5Qv4G8oK7HPdglfr1t
                      3Kg+5oPEvQ81hr7Zzok+S216vnjykL7pZYU+THLDvRbsDL45N4o+QKlfvgIWOD7bT2K+hD/tPZi+
                      Wj06nIK+KUWYPlylo77I/DC97DDSPXY1q724Uj4961ABvjb9Kz6+aCa+Qw0uvqONS762wiG+iHke
                      Pt5UTr74fEC+Wh1/PsrlhL6ITI6+xPKGvYDY6rxI0xW+ANWIOpIkSz6waeG9OB9uvTE5ij5D+Hy+
                      +QGqPvjELD14vDs9bNahvbBBCT5A4D2+AMyGvm2SlT7gyjG9+6Y/vkA/qbs8BuI9wL99vuZ3PT7N
                      IIM+CNhqPbIxaD544hg9QFsjvaDqJz6eYSy+DqwXPkWfqT5vS4a+wBvTPStQmj4AAR08ALJUvPNB
                      HL7AaoC7xpHgvTDZ9z0MXom+gJMYPeCoBD3Ytjy9x8WnPkOTAL73w5S+yi9bPkwVzT14DjW9GyZ7
                      vv0tij7jMJS+1ndGvkAu0rwA6nC9thV+vgCCZLpIq0i9sJr3PBKsND5rAaC+WbWkPosEEr5c7Mc9
                      eOunvgAAFz6wxz++GvJUPtvUI77lE4E+rnQzvoQSuD0wMP+9Mh4/Pp7cNz7Mu8y9VstrPrBZ3D2W
                      K8+9vgMWPnhtcz0Tbxu+5tJRPqrXUT7mTha+++AzvsRDmz1mvEG+Su89PlzoxD0Aagy6WXynPnCv
                      w7xITBG+/uN/vkhvDL7smeC9yH4qvXi6ZD0Idx++AMTQvEgUGj5ANsM8y6Jfvpnbgz5geDw8/qYS
                      vgxxpr1OHFm+QhWLvtBi+zxzJWi+p7WBPu20lT64J189uq5bPqO2db4kR/M9AOAcuBzj2j0gFoq9
                      zMXXvbxAwL3Ltmy+ThOdvoAoXj1ebWO+ytxZPrOhbb7G0Lm9ZjZvPpDgHb6ri5o+wMyivPJpcD7A
                      sR0+wNGhvVZo5L3sOu495sESvhgZc76WrbS9ZAipvuKlIT5P7pW+XgV4vuAeir6EjI++BzCXPkh/
                      Qb3Ornm+aiFPPijcj767XSi+KrJoPpbks71ae4O+6zBOvnhZUL1bTCa+9rx+Pv50XL7gXSA8ED6h
                      vhZ5cL5cUfe9ACXHPSRwkL1AGmq+n0WkPsDyu7ycerO9yteovsp5QD5OmzG+vyWMvmBWA7xgUc+9
                      5nWpvrtPUL74Oy2+SAFRvmhcHz6YUhi+4Jx0vjarGT5tZJ4+qhEfPowZ0z0zjiC+podlPloUbz5s
                      aO89yD1tvVrSHz5YkAE+cueQvnhiRL0GVzI+0CTAvNifOz2Zpoc+luY2vgBz+Dw81I09ki07PhDY
                      j73WAgQ+PCCovgB4irxaqVw+to0JPsJScD5mcVM+LziNPiyV471+fam+l12QviBfPb6W/Zu+QhyW
                      vmkjoz64cBI+r+uBPlAorb2Elug9HZCJPiEaqj5eAV6+5lPAvbwogr76tIG+DL+EvdDdpL10e7o9
                      XEGCvcDqnLzUyLc9qDiIvmBxSL0eV0g+sCBvvgBPIr7AJJG8Z7uaPgDDrTtoZYy+rMHOPTV0hD7j
                      7JG+ir5GPhjZXj3/CJw+6FsTPsaQ8b26DT8+kO/pvLbDmb5zJku+QBPcvfGynT6G/nu+ADylPdBo
                      hTzI4lm9M1ZCvhiXlb60Vtg9Eq2YvnbDFj78F6g9Ntv6vfA0vLyoUFS9h9qJvhrPSz5zYQm+Uj9B
                      PoDU/zyokhw+tPCqPfC66j3DLpA+lUSjPkCTqTwQ+Cq+wABavtgllb6AfwQ+9glAPqQlk724Lzu+
                      4E90PQSnmD00xvA90MPKPa6VT75Zqpk+cDW+vWomaz5wZ948Nt3vvT9vjT742IS+AOAPPcokNz7m
                      qiu+wBvzPcgOWT1C2AI+wMGLO8CwyT3KpkY+YHB3PGhZAb7cws+95vsOvuDN0L2YW229Ta6BPvg3
                      Mb2zI1i+C5Aovjhlcb2Kc1k+v9qDPr20iD6wUNq9sC7iPUyKxT32NmM+VkEfvhpUmb6OnWc+8KL3
                      PNzaub2KGFs+KhqjvrCyuj1AaJy9LgohPiLBfz4oCXe+kDTDPDvYAL4A/408CGMePQ6+Xj5iq24+
                      MC3YvREVkj6m7Uy+pO76Pa/Gnj5+FEG+BaqYPiA0Dzw+kpe+DOj8PXaSwr2y4FY+gSmDPuryXj7+
                      GDg+5rTzvQgKPb62ERK+KQmAPnpIez6S91U+26FmvsabKj74L149UMqEvrjLb76jVHy+G7wdvp+9
                      jz7jOKA+2OIjPnLcOj5IAni+ildnPjDR+j3WjTm+gAhwvZYnBT7+7x4+M9kXvlATjjxYQkQ9UwGa
                      Pv4LQz4WD8W9di7dvVa6OL6QhP88AK9vPU6YCL6Q08u8CB0fPaPYqD4t24Y+thMNPgZxor4KvKa+
                      3Pm9vbtFhL7EA5K9kvhrPh7qNT6AlpO8/tpYvsJNRD6wfO29AOtBvvBgC77Gi2G+O1sTvjy6hb4C
                      CUY+g26mvpAg57wkLIW+Ji8uvmDcEb1cg5e+gJWMPLacE77wIwo+HA2iPbPFnD6qQDA+Oi0wPk3J
                      pz5o/AO95nOBvh/Ck7789Is9zjOMvrKuDz4DuhS+gHbpvESZpb0qk2w+ANHeuhIOEz6cUc69Cwaf
                      vp+bob5upUa+Wg9jPt4vEz5Av4496kVrPqxowb24HRk9dPaCvmD6Xz07whu+lI+jPRxNyT1TKmq+
                      1BfvPVm1ij472Vq+JiZUvqAoaL4lEKY+AMWNPTiEeL6sHI89ALXuuhyNuL1ROJw+aLVZPQD1T73W
                      yzs+anQDPsMzVb6Ia1a+N82APu4GRb72euu9hpHgvZjXib7gqpe++2hFvkM4qL7Y23W+2AlZPYKU
                      eT4gaDs9rtVmPiH9kD6sno89ADpIvvDUor4KKkw+4u1fPjDVAb67a4s+kvqHvlVpiT7woau8XvRN
                      Pivoiz73nZk+pl5VvhBO371k0YW+xvwJvgChzzoSkhU+NirivUZ4i74QhHC+oPujvcIZWT5JWak+
                      utRCPgJ4nr4q2Wc+fyiJvut5X77wBZK+Lq9QPmLXez6geWS+aXSHPtNlUr5GNhu+zAmEvgD2ULtE
                      boq+TGqZvYiNm77ep18+SLJMvSYOV74Cw1A+MPaavDCNob1YmwY+wJw+vqC7CL2/zIU+vSmlPo6F
                      RL5TY6c+NpQ1PkNTGr7YkkK+0PiGvkg6DT04Ihe+gHKWvpAgyrxEP5q+Vm2evuYcaT7guX+9gA8P
                      vQAaQjyohnC9RLaoPUxs4T2E8OY9IHaLvYORd77n+YS+8icMPhpENT6GV1y+UmwoPux9pz28qam9
                      JjYRPkMFRr76Ujk+jG2DvWFEqT6gESI9kLoKPrF9qj7DVo6+GCiMvu9Rjz6+1Hu+EleKvuK3cT4w
                      +ou9a70BvjqvUD78aty9AMsEPm2bhz7rWZU+uks8Prvqjb4AYyk984xpvtCgsLwCa38+OB1HPfK8
                      Ez6Ytg++WMsPvSCVQbyUnZS+IMQxvNBdEz5v/oU+7nNSPhg5Hj6fvp++gAxxvpKOaD5o8pa+oosZ
                      PgzVpD1/3Ye+mhlfPsbocb59Do0+OvwKPnOBbL6gTMk9zvgpPkcRhL7woqm9W06jvkBP7j3mUyG+
                      PEeFvgSEyz1yi6W+olGcvmIhLj7afh8+UGXLvJjVPT34rzO+bqV8PvPtij4sEvE9rKajvsZzd74j
                      iQa+mZ+oPj8ggj4jsoO+OJAUvdX7kj7QAv69H7ulvqBkGz2yX18+ryaVPrN+W75+01u+2mVYPkAD
                      zL0gMAU8CMaKvpzBlL1AG9c9pySBvhhJnb5IPEU94It0vXhvKT0IwyE9lul/vsIRAj7wV+U8sqAq
                      PiDpALxjTZ0+0xk3vuimBL3buhW+GbSpPtQZ6j2FfIs+LeuDPp5JXr569mc+3qEsvtIpAD6kca49
                      ENHTPJZydL5s5fQ9yO16vTaJk77I7kw9zr+pviChET5GD8y9sFXavMAYhzzw1Iu97iczPqAbD7zw
                      O+W94CG9PeP4JL5Lb6o+ymchPsOXlr5OGjm+HDPOvVCkB74=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTM3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzU3MDYwNTM3NnEBYS5kAAAAAAAAAJYPIb57M6k+qjJkPvvkpb5QqDG+EKScvkP+CL5Sn0M+
                      NmpLvtv4Ub5G2x++aGwPPr7QMb5cKLO9QBwdvbA4trxgAEA9U/ajPuzdzT1wSbk8EFJrvoD5C75r
                      Tac+xgd9PiRL3T3A+De9X3WFPtX2jj4uax4+qEMDvprLKT4/9Ki+RlYlvsg3Y71Rjps+4AhIvgZF
                      MD7gFn49xGCYvp7yLb64V0C+ur9nPk6VeT4zzZ4+u0aEPjTXxD2g3GC9NPigvnM1hj7Kx0k+2CgZ
                      PpKydj5EfdA9igsOPqM3GL6g1KU9Rr47vsQ4lr28VeI9ONxtvj5TUj7A7DC9VPKNvuiYUL1wjwI+
                      ujkwPsYgLL6ym1s+hsMnPuyv5D28q5y+iItgvhQQqr5RF6g+tHulPeS7lz1W8JO+LBTaPaLfQD7g
                      3Ca8vD/bPQAMub3I1Z++u9x7vuB4cb5gO0G8EuaavtRL9T0M67m9vR+ePqtRhL7rqaA+hl1ivsD0
                      m7voKwS+WtJTPjAduzxsO7O9KKREvkJqFj4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTQ1NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM1NzA2MDU0NTZxAWEuECcAAAAAAAA6Gk8982Slvfv8jD0ari09QtsoPWh/ib2VW5C9/IQM
                      vcxJorxIsIM8Yzc1vXWByb19jMe9cOlAvU6eKz05ZoY9c+1nvX/jkj0Z/6A9yLLzvKY1HT0iPXY9
                      lSqzPdLlLj2A4IM7KKuCPAAKVb0yAnw9t6qjPWjryr1UarU8MH9HvLWSlb0H6jO9oE85O7M6KL2i
                      xTg9EGFDPF2eNL31g5i9EUWLPeWwyj3W85m90IgvvB14Sr2QrW+9MJkLPNCfoTsgqKC9IcmyPXD/
                      PLwOv1A99FqvPFRP8TynQJg9wOdWvECVTjvj2229kfqlPXF5nT3MNNc8AAs2vYFuoD0Di5y93P3m
                      POdWHr2n/Xm9vUWWPSBKXL2QeAW8sOmlvVBTBb0AEiA7G5ibPfBHQ70U5ce8jUk7vRr1T71ISf68
                      uioGvcK7UD08x9s8dWuSPeEvpz2itEs9EDEyvWx3urwvzLI9BeiSPc2pzL21+Lw9vzW2vTgoq71Z
                      7LA9End2Pb4oRz1xUKY9NCu7PJ2EzD3wxV08pWu0PRmflT19LYu9TSmXPepTZr3Myra8NHrUPEcf
                      iD1qYxk95k6JvQCh3rxs0gO9c2tLvQy/A714DpC9MFYivEBRIr1qkEu9svMqPcDBhrygq4I8sBQ7
                      vVcWW726e2k9aFJ6PGApvbwwwL67NFy4vJGQoz2KJHO9UGE5vdNwdL0KMMy9GZnEPaDJh7tgz8I7
                      hSOBPbDDELyK7Im9Y1cavQBwqbzn2MS9zOqAPMOvwD0REK09oRWdPRbyMT0ZopY9GEK2vCzrtLyA
                      UoO70IWkvU3Lob0EmBi9w6fIvfJyub3ax1a9xe7LvW8QhT3pH4w9nNL+PC8cyr1cnv48knhiPbRT
                      qrzodEi89nhLPSOBgD0LUqM9n1CyPRDzMjy0RbA8inRKPbsVlz3JGI09sHsOPDG/rj33lUW91M72
                      vM1dVb150aM9ndBDvcDWGru5Brg9DtgPPaCtMbvAsdq8oCGpPOwdr7yIx4S9JiNzPUDipLw4drW8
                      bEm7vE7+or0Kth29aV6HPar8jr22En49bXCwPTDtZrwASRC6KHWLvIfrkD0XA7E9ACOyvYiSlr3X
                      V3u9QHc1u7B4db3Z+MM9jdfGvSRo7Dytan69qKgKPFBgbbzYpA08/QylPUMCdL0THK+9gmdsPYIu
                      kr0zlMw9cmJ8Pdp/Nr2C4kE9Qr4bPQ2aKr06l0w9gN/3vLBLKbwIxsS9gQ+KPcC2LjzDC5u9cz8z
                      vZjEyzwAFh85wC6TOq4rlr2Zs8s9SPDGvNw/5Txg25a8oCzVO5KyMT3PrKI9SmpsPcjEyTwB3Z89
                      iivHvSIEUT3dfYk9QLu+PKCXYbtsjMy8RncPPagqwbyN/aA9sUu5PWorMz0m04296lxMvQD6MjuT
                      d509AOX+uUmbiz3ywQA9qh5UvU2pxL1qB2e9ahcEPfM/pb3TOju9rvaqvVD3d7xQCmS9zq4fPRRt
                      kbxZDpA9Sh5TvcRbir3beaE9V1OFPXLVAz37lMm9YIzxO6AjE726rY69mtQBPQuCyT2gzLy8S0aP
                      vSzAxLzYDny89rJePU2Xo71FOZw9AEgoO9oNKb2ZObU989vBPTOZm71TV6E9QDrDPJDfDLxMEr28
                      DXAavdg5eryvV7U9LaOkPWprkL2pT6I9Zp4Mvculob2xaY89gq99PYkIwz0QK3e9TZtIvSaabD1g
                      S7c8YKPFu868mL0aLBU9QMTFPBKsUj0u+RY9u1jAvQYmAr1o+b2866jIvbLQAz0Rw649fWCsPQpm
                      Vr1+Lig90yOxvZgdrbxJM8k99LmHvRrwJz2wbFC86Ct2PDD39jtkuuo8v2iAPQ1YuT1RZpM97bto
                      vYOaKL0ox7C849tlvT8Tvb2lSIM9SuZCvctSjT2G90Y9kBU1vTSsoLy0euo8QzZxvYcZlT1wMHk8
                      o8GrveMaxz3qBFQ9k8B2vTL5TT0rrZW9idm4PXdOsT1AYgY7kvhOPdLTWD0u9Km9aESovNAMo702
                      hno9Al8lPaolMb2rwpo9FhqHvTL3aD0wrOk7VyKDPTDBELyWj2g9GKsyPCl1pT23qoc9lw5SvTEo
                      nD2adkc94K7fOxKcKT2AZG+9zdBQvRN7qr3KTwc9mtMaPRjjLzyI96q8r4auPaIKRz0wdRa8d4Gp
                      PUoKt72u0Fk9g7fKPaA3QDv3zUm9cudxPaRW3Twgf+w78sVpPUXMt72Crp69CgU9vZXllT2wdCG8
                      5PP/PIUWnD1Myqe8ullVPXPcJb1pSsk9Cea9PVSJBr39Jsm90xhQvVMzo72A0fq8QEblvJ6ZmL2B
                      mIg9EksPPYktgD21mZe9pRq+PVA7Tb0C3y09E6FOvZRuvzwHGnO9IvJfPX7lir16oTg9wJbMuq/i
                      uD2XYMo9oWyWPdZ/ir1MJZm82CDAvBgGAryw6DI8tk50PczeCr2ysmA9YkYKPbikuryFZ4K9+lCx
                      vTadFD2yiWk9V5F1vQVDxb3Shyg9+OT2vPImDD31OLQ9wZygPYh8q70mPx89IH97vZ5/bj0FNZm9
                      3S1GvS2RkT0ADlq79LGNvEpOVD2HsK89+g85PSKHGj26t129G2DAvdg7A7yDObS9GGa/vICy8TvG
                      PVc9/j8RPaotXb3hQME9O+ycPUjPzLwXUMW9hJ3zPOHngD11bcS9U6XKPXiwiryLXbq9Hb/FPWbn
                      FT0qSgK9d2zJvVTQgbyoZoo8oolgPZDYY7yQkTQ8AHdQPBrpLj2XJKY9agEWvaA3xLxQN8u9ekcQ
                      vZulqT0At0G6ypsePZRfg7yrFqQ92fi8PVD/drxwHF08Tet+vQNxcL1Wr529WoGtvQyihjxll7Q9
                      LlEgPTKNZz1K4k+9AmcbPbqLSj17VKG9nafKPd3rJL1q76q9c8PFvfDwKTwTOXy96NZHPKKKl71n
                      UY497e+fPctSrb1sBZi8TFPVPKuTlr2gjP68gr2EvaDPqb0Uerw8sPp9PNofHT2Y8R88z3GQPVkq
                      kD3lxMk99CLxvEC0BLwQO028kgMYPX2qnb2C5Eg97BPuPMRC9jwzXbY9eITLPC0dfr01Sco92w66
                      vb2+r71oqiI84dmMPS7Oq73a2W290AYbPJiUITwXr0K94Um4PSiGTTywc7w7F8+ePY7slL0wYj68
                      ADdTu9YaCr2BqoI9itIMvfjvkL0is5S9GiijvfgQxjyJOKE93ZrHPYdLVb3KP569yqgmvacawD0O
                      x2M9av8VveQS0Dxkzvw8292vPed/dL1Y6qy8oDW5veBpkLu74LC9wkV3PV6FND1o3aY80nMJPaJj
                      Wz3A/5e928yfvYQ83TyaXWA9YOSnO8DrUrzaIRK9AGepPGi2pjyg1oC8H3/BvdVDwT2RNKo9x8w4
                      vYAUZTzgff+8Qdm4PXNAY71fDao9iSOfPbE3wj1AAm076j1nPUMlyD32uWY9TK7lPC13Y72O0Sw9
                      FNqwPHTph7xpz8I9wFhyvRgaM7xzI7c9PsUHPeBdnbxS5IW9/qJfPZXomr2sQuy82JJvvLSKozzV
                      lrO9OyK+vUI/JT3bZYc9x4bFPSgDabwdXVi9Sr5RvenWgj3aHlw9UNjuu9SpEr1yd8y9d5B4vZbT
                      Wz1dv4G9vkw3PeFcnD0A/F+5aJ4UvKhI7bz5gp09iuu9vfuQwT0kM+I8nlWMvXSElDxDRiy9Q8xm
                      vaDo17uC9Ac9QN/guiCtm70UV+c8oPJ4vcjvj7xSNlg9b5OdPbAY/7tnfB69fU+lvX9UlD1MQcm8
                      Vg50PboDob3dUpM9cj4rPXlWoT3o/jm8dtQRPbCMQbwQfim8KMmhvGUxuz2bco29peeRPSnasj3F
                      QYS9yhgbvYrcWj2eglo9bP/ZvFyR8zzdF3i9uFfTvJT4hTywkpA7TOy3PNBvxTuoelQ8qR3LPeI1
                      JT3AI0Y86Px1vCyXvjxMRo28iNW8vS23Sb30bKS8rFbBPCTP7zywlDC8kCF0PO2uyD149sW96EJD
                      vNAMDryYaby9GPbxvJjib7zO4pK9kEyHvR+fqj0w9x08Dr5QPfT2qjy1LJG9Ug5vPefVLL0pBaY9
                      DBwPvWhnOzzE/gC9gFzVu7LqdT02vxc9widfPW76Cj1Y+HE8ohY8PQ23U733WrS9ZoVcPWDNAjvS
                      OTg91WaJPQ4Qg70OEgA9TV+5PeAlhzuBSoc9LFmdvOA7pDtqLxu9sKaoO0MvR73I5s+89LyYvNR0
                      qLzn78m9wD40uxfhRL054ro90mZFPVIWXj0NnZo9OoMevYQigr1si908q8qoPWvOhD3q6xG9APSg
                      OIBGEbpQLXK8teiQPSw6/TyHSGW9SO3hvGjambxpF4w9MWWPPcVdoD1zone998avvQBLuDvL98E9
                      1MHIPMwvsLy0UI+8cBJjvCzLAb3iZhs9Iu+GvYfayr1gPQe98IESvVIFRT1gKEU7SWiqPddXub2b
                      IME94lQLPRlRuD0JkaA9QkCIvViZobzj6XW9YFyyvfQK2DxZbLk9bh5xPQDozTnOs1I9OWKYPfOE
                      YL1Qd1C8sSCLPQgRuzygkSu9zZa6vS76FT0MN4y8gDvjuuHznz0A2Pg7JmpePUCvCbsAyrU6su5w
                      PS6OKz3xJYE9FumNvXhnqb3XhV+91l4QPcyk/ryT/LK9ANAmOzJfAT3hNIw9FteJvahTjjyHNKw9
                      2GeovMpHdr1qW0m94PDAPN2eg72SqTE9BrefvfK1or0u5gM9XQO1ves1qL2Ko1q9Fc6sPZlHzD1d
                      0rC9dheevdC6gjsQww29ynt2vY1lmT2Fz8I9ocOaPQAo0rng9pU8ALT1ONDPCLyvXKA94FMpvWKY
                      dj1gEsi98iBUPUDwkTywqiy9EmrGvQkbvD2SvZG9BdGDveBBh7u0YLo8urSAvXHjpD0h6LY9HLaJ
                      vbBR7zsoBcA8EXaSPUzBtzzCiTI9bETbPHYsiL2oe0w8N5iHPYi68rxjpoU9vXWYPeAFtjwbWqm9
                      522ePaCx2buVCJG9x/i7vZiMtDzYiLy9kl+jvcB3dr1CW2w9mBMrvOjJG7xABe68IIh3vQCYkTlt
                      bJO9iqF5PZB/XDyE3/U8D52pPfrRvr1Ip9S8pxa5vaGExD3R7qg9xBQIvc1Usr1d4CC99hYTPVpY
                      LD10M8Y87IS3vAkbgD0AjBI5xnQFvbCDfjy618W9Qmx0PUorfb2ok6u8m6KfPcgpmrxy8TE9vfh6
                      vbj9njyjsDK9cLhcvbu4oD3Q6Dy8j12gPVJZbz0gctM7psIfPYDikrsX/me9TFS2PJ/eu71cs948
                      YO7SvHAlGL3YCLm9Qri8veB1c73QjrO7u2W7vaNXkj0YKpg80A+rO5NEzL2okAE80l8dPXC3SzyQ
                      ezW8+raWvcE2pz0rYZI901tmvYzFgTxSLkI9NYnDPczk97zoRre8x0AaveD7Gr3Kqh2908SYPX7X
                      LT3o2k08efiEPRqeaL0j7IQ9jT+uvSR+/zx2XBm9bWXHPSCNtDzlDMa9t9Y+vQ2qmz3SKWA9AEub
                      u7CXob2A7lS9Xp51PWC/+7tdt8C96nh6vRe8H71z1Y49N3E1vRSQDL1A9ly88IBUvalIhz0/MLe9
                      OoKKvapvGr34Bca8OM2+PHnJxj3QSlW9MLYFvCqcAD3ARtW6WPFwPAk/wz07XJM9PS+TPcYDFT00
                      ZPk8X42+PQym8DzC5Qs9VA+bPDhjh7xQ+Bc8QDGEuoo2Hj03FZY9ALe7vJvKpL36OnQ9aMINPF6h
                      gb0aYMu9YQbDPQOPeL3m3Uo9YxFhvelcmT0OCpG9p9fEvZlHmj1m5xa9tzuJPXRSsjz2CWo9u/2h
                      vVSA8rygJLm7KKqOvEmJhz3dtiG98DFqvSUkkj3wPTW86GKovUGYqj3nlLg9TVO+vZKoZD33AD29
                      AC+vPHDVdbyBML49cosWPezn1TwdtC69AIGhuyPNZb2QmX29gze9vdtwt7148b883zWdPd62nr3R
                      EbU9ABs5ujaDOj3QhLK76jFsvSzg5TyAJU68081uvanypz1bYK493iVaPQDlfjqwEG08wHoIvWJA
                      JD2/k7c9oIPgu5L3jL1ZIZM9ULhhPGCtbL2ATu+7WOFCPBKdWD2wwnu8cq9gPUr9HL0thMe926eR
                      PWb+kb00aKg8p8N/vVHFsz3Q8N87lvVoPeaepr1A7UC7OK7KvNkeij2tXCy90MJzvO92iD38Teg8
                      LCTlPHz8iL16eTC9KJKNPGmclz36YIC996mmPTLLsr0sV6o89JzvPADXTLv0t868NWyBvUDVETsq
                      wG29YKrKva1IYb0X2cg9ftOFvZvbpL1oHhc8bRODvZkkoz2gKhy9UUeZPWA3rjxAjeo6UQ6aPRAF
                      m71X4Xq9t5OsPV1fyr3gB/s7suULPdZUWD2EG+M8wGBTu1k5jj2/8r09Z4JfvQp/bb23Xba9aO6l
                      vCmiyD0AWQQ6oc6UPQpRdT0oTbA8JmpmPR82kT1onAs8aHK+PM5Dpb39JSC9suSLvW06mz3+WVc9
                      q8K5PXc/mj0mTW49gNDruxTctbxvoo89HdAavZh4g71vT6c9uCyCvWKCbj3MIoq8AhatvVj5MDzw
                      kzw8hyKAPf7RSj0/Nps91GcOvWYQXT0Gu3E9cxORPS9ryj16TFu9gL2yuihterwGFAi9Z6KAPR9W
                      iD0NlaS9d5ufPdstwz0qgzY9KCbGvQCXt7ySinQ96KZgPBpNWz1kBeA82s9pPQA1zDmoq5i9yuIJ
                      vYkwsz29+HK9HQ+uvbg3yjzy15y9vpYSPWCRJr2WeqO9lFauvAARYzz74rs9ANuvvE1GrL0MSuw8
                      Zw1wvSClob1Yrqu86IBevEsriT2ok8u8AONgOmtPqr3st4Q8IMcovQjxmbzThy+9KKuHvERrFL1q
                      ZDy99ucCvT59g73vMoo9AGfVvEA5iLo9DIM9sVq2PRCxJ71w6sG9ekNnvbY3Ab10ZPy8QT61Pcjf
                      /rwDgcc9wvJBPZQK2DyOIzU9UD5BvbBPYrwiF1Q9YGoiuyj5jrwIKaW9odyxPYOSQL2w3lU8JZHL
                      vVqZUT3Imsg83ZmfvXR2krwj7aE9g0+lPbBuQzyiCwc97i4xPR8Hij1gsQ27YolDPWs7w71YO6a8
                      RJnzPMxM9DyMcZ085fi4PRXmvL1Ol4G9sugSPbARDr1DLJk9WlxkPcAa2rpNtYa9cs+hvcRq9jyw
                      Ovm7PchsvbAEa72ecSU9zmCNvVCdWbyo4oU8xRPGPWA7ujtAHkY78iRCPQWevj3SK249+4GwPQA0
                      KzuWsBS9xXjCPdDYtjtkRgC96kQnvWqAIj0uDqW9lxc2vapdSb22jUw9Tc68PYNAkz1958i9+QOi
                      PXOHgT1DHHG90I2+O3v+jb0kBfw8DVY9vcrBMT2pRKc9lyKxvRX6vD2DVYs9MKttvEXakD1LUss9
                      8aS+PeknkT3Q/Sy9+iOhvWBJfDuaHF+9ymEDvSaYOT0Sv089gHYsvMVynD1Mx6W8sFmlva8EtL3H
                      lkG9/eSAvc1Htb04vZw8RLPTPJowfL3w1lg8kk6RvVBnxr2YSRi8UBdCvFLfCj23irw997VevXAP
                      PzzLHaC9WDiHvS6nbT1MuZw8MLSSu0a7Zj0MGes8FYDCPeSN2Ty47Mq9gK0cvdcQWL2jMbc9bMHY
                      vGold72L5Z291xyoPcrJxL0AbpA6gH45ui7mlb2Q4Qm95hCdvY3Fir3WVEc9BYqYPdDohTuIBOa8
                      wH+vPGE7kD1A8SO93Q86vYCCyb3hcKU9MNovvIDu+Lwfo8c9yGnHvCAL6rvzZog9gyZUvcxVgby5
                      Fao9yrAzvQDCnro9vLg92iB9PdeoM70dm5e9xvSdvW0PH70auw89bdaHvRNFLL0AKve57ACWvBun
                      nb1N6Ia9evxNvZiHqL1UDts8aix/vZsftT3UzOa8+p9fvTqOGL2YNYS8mIZvPADmBzvePyM9xnMR
                      vWx54bwAllS5zPPFvGRl/jyynFQ9wB/wvGADUrtRvY89vY/DvWukgj2Gvy49wmpEPViY9rwq8wi9
                      enPKvXhjor3UU+A84AuxPA9ds70oHMi9UpYjPfzOCr1PqMM9AOOXOVRt4zymcAe9CBKAvVvJo72a
                      5ze9eOSiPIB9Yb2YXI+9C2G0PZE9pz17a7u9Wjo2vdZgaz22f6y9hIT/PPpbNr3HpIY9AIdIvGLA
                      tr2S8kU9UeiaPWIQBT0YQwE8VHD6POjvB7yqQKa9wYeRPSnuoz0AhAm654/FPXmRvz0Ayga54K6o
                      u557UD1eqVc92WuxPR2Emj0dTK89Tt6rvdCmnTsqHnc9gHeEPDDhk71Zaqg96lhovcT86jw0+qa8
                      xAHfPCnttT3s6rs8re1hvWbRQj1ayTI9ADehPACq7rs2z5y9ZAMJvVDzuDs51ow9eOqXPJ30c73q
                      h5q9KgF7PV2zLr2ZAbM9PCEZvQblDb32mgU9BH/1PBR4kTwwF7I75ydgvcelWr1A/906jc6nvdWN
                      xL3g2Zg8G2jDvayC1LwsS9O8remIvQDL9rngyFW9VGGdvGzoEr2gM3C7h6gyvcCkJLya9xQ9oxTH
                      vTx30TyJCIE9V3AevZDzEzx2myw9AmmXveOGlj3zz129QPlcO54dXj0+YAc94Q2CPWCQkb1Tp4s9
                      AFi/OUZdDj1KJVm9FLuHvDiTqLxppqo9CrOLvQAZrruR6JQ9A6GoPTC62Lua/Q89t71QvcrNd70E
                      Cfg8mH/IPIAAa72ARHW9qxy0PRA3ub1AhZc6jd1MvRQVqjz7z8c9qqqFvQMGrz16ETO9QOavvZha
                      ADyV66O98ia7vf6sfD2sjqi8MX7GPV4WSz12+C89skV+PQ8MvD2Sqk49SmNCPdQl5DzcfwS9i/+l
                      PY0PRr3Q62Y8sRWaPQCihzyon6+9QwLLPbizvrxwPiq80CxhPHRz4bza/Q49XT9evbbxYT37bpi9
                      tHXOvJHwuT2YnHa8ZqOIvUEZtz3hIbA9mCWbPBl+uD2AenQ6LZW0vZPmkr0qobG9sxuRPUEhiz0s
                      wrS8zBz/vFiJSTxImMa9MI5lvNnzgD1Fy5m9AJJxu63cmT0OBZW9slc5PQjk07yQZhi8oDtLu5W7
                      vb3PSrA9EoUSPaKGUz36zry9WjORvXgR3bz8k+g8ag5jvVqZQr0IK688ondIPQCRWL3GxAe9kCKI
                      vSCGBL0gcCy9AN7NvAnZmD3omKG941aRPeJ5jr0CdHY99CfIPF5Oaj10S8o8+TSyPX4QPD3usY+9
                      AObeux0Srr2mNzA9Y/tHvS2yiT3W3ZG9Nb7IPQQQ9TxON0M9LsdzPUKTbT0AAII4bDmpPGCEGjth
                      Q4w9/t83PWCCYb2Spiw944hEva4Pi71ghnS9ZbSfPZ6Gi73qZiM9wJ65vEGztz3Alo+81ooiPaQi
                      AL3Axk28SbKzPYA+q7wKGHA9TCfwPMyy2zwqFGw9SiJ1vWrLTL0ITNe8f8O8PQIZWz2Y50S8ep4A
                      vZSZnrwoyx88ArJaPRA1frxsVo+8aju+vSCOo7womBG8ACySvMx5/rxQri48KCCzvTNTgD1kGdo8
                      pkl6PRSIwLxAxAy70KBPPGmZjj1s1/s8L9a+vZqGAj2FcoM9kJOGvcyRjDyPMra96FQ2PLNJTL3K
                      n8W9CbuePZrrfz0j1sO9oqmxvaKOAz0qGEq9AGh/u4d3vz1K6yY9ZwlnvXwZ6zw2V149k3wovQlD
                      wD0GIHU9FKPUvE6+hb13PIw9gPFUOjxehr2y2BQ9ExhEvcqBTj3Wigm9X/q0PVupv72Sgzc9pgAE
                      vdTLqTxHybQ9tICYvN2QuL2r+cS901UnvSKOXz3yclI9HZHLvQCgxjxtj5Y9sFYPPMyQ67xG72c9
                      kKWRvTBarr1TAy69GJ66vZJ4dD0wmaq735+7vVoejb3kcNU8GASdPJ8NmD0q3i+9K2TCPWPqYb3H
                      PjW9a07DPXhNxLx35bE9UGYlPCijj70UmYe9r3uePW4jHz3robo9UNEVvX2uWr2YL4w8qLqJvfMC
                      rr2G7GY9wAIuuwNWcb03lEu9nUtEvYAv0jpHwbs9d+hMvQASoTmCkwU9ArnLvanjqz1mmoK9irM4
                      vaCdyLtaLRE9RUaRvSpBnb0AuFe6dIfTPN50or2+qaa9IND/uyO6xL1KaZm9sg2svRJdej0Y+VK8
                      3QWiPWINBj14uJ+82JdfvLcVeL2TucS9lBKDPNY3MD3aREc9gBfxuiHzoD2SVgs9gMClOx3bVb3y
                      yhI9imgfvYD1BTqpCYg9OhBqPWwKnbzYDDk8/gkGPer/Aj2QgzO8lvmpvS+7sb2QMx+9ABrcO+A0
                      QL3AKj68meOvPYg1mL2A+ku6B42tPaWUmL0k3tg8xPPnPAYtJD0s3bg8l2VBveKBkL3wAp6936+o
                      PfmRnD3xRrY9oMWyO/Mahz22WAG95GuFvUIAKT1S61I92Cz4vJDRErwlqqk9KkRSPUAWN7sADUu9
                      WLKPPCo1QT0wdK67402bPX0orD3Xz3+91mZ3PZe1L73IHYI8rDyovDA7dzywN+s7dLXEPPpgb71D
                      pzS9zh6qvf46FT1gkD077ACRPJocd70A1vu6hW+svUgjwDxo9RG8tT+WvejOR7ygIyK9AEjtOvdv
                      sT1b/KA9ujJ+vVJmWD1DUV+9kSjIPSPgSr3x5b09M9qxvVgTEjxMxt28kOeXvdQZwTzgYte8hQTB
                      vcOUjr0Ik8i89KEAvVlKuj3wJiO9mgkEPWGwkj0+/yc9WKi9PBLUej2q1sm92K8YPLccUr0zXlm9
                      53gcvddrwb3E9f88U9eZPerlrL10Oem8gCToOrDDxbut4X290LalO8IfUz1r08K9gCRBPKV4mL0C
                      AWA9Qi1lPUq3db1QumK92o90PShU27wGXyo92MbMvRJYGD1idsK90r0PPYrjUb0iYBU9n8q1vXDx
                      WbyNt5Y9SC2UvGIVXz2A/L06c/jHvZBHcTzFl7q99uCQvfAdMrzvM6o9kUyUPZJoUT1mlDU9QB+n
                      vEA49LyXu5g9ivQAvQAWxLr9AU69vTlbvYbmmL0JW689P/iJPc3dgD1MURG9UI0evAbMob1Qu0a8
                      1YKpvaDvnzwvlq+9HYqlveCynjvU+Ko8yimqvbIlbz2Y0Js8zsiIvRljpT3ia3A9s8x3vQyTyLxZ
                      DJU9QMU3vH5Th71QL028A6RRvXJXKT0dko+9mLtEPGWtuz3Q6oq7pqeEvZ6ZWD125xQ9qLmSPNI8
                      oL3HkE69AOtRuqC6z7s6SHA97FLBvH1dfL1P6bQ9AGk3O0DkG7w0nQG91TbFPZNGpT1AqUS9WN2Q
                      vPdFoD3q1xA9Eo1HPXYzFT1YCWS8ftZFPXhgvb05uMc9APXZOQOaqT2AcqI6muihvft9s716VWW9
                      iuytvS1diL0N37O94gk9PZrlhL0MaZ08zG20vP5cor19aCe9EuR+PQWZl73pMMw9UFSJuzaGIz2P
                      Sa89mA92vFNuPr0AeJe44qmyvXM/J706p049e1WYPSqkHj1z6ky92BiBPLZLnr3MDYS90DOdvRQj
                      6zyrlre9UK0pvf2vPL25xLY9lZ2GPeBKnTwIPbu9BqM5PQ1xLb1fOKY9s74jvZXFwj1Aptu8QD6l
                      vMJcCT115rQ9k1psvUebnz0AXne7aTWBPWYFQD2T8mK9bDWyvKB3MbuAmBy8lhwBPWp3ZT2uxzQ9
                      oqxJPSLoFj2iAn09mSWEPRD2VDzvX8I9ZVO7vYCypDwskxG9yfuaPZhzJDwdrbG9Kzq5vZ2Xhj3V
                      5qa9WO8SvKAJWb2hJYo9W63EvQjIjr3BPq09yNSFPF2dtD0yYzs90OEkPNUYjT1dOUC9Oj0TPRJK
                      KT2IlNK8KndRvSAO+zsg6ok7KASkPLTr9rxYIaa9ss46PTCeZ7wyinU9tnp6PWyeC70AEw6631WN
                      Pfr8Jz0wb8877XRVvf9gvL1uNzk9uKu8PILiaD3ptb0949CDPajhvryKCEg9mOr2vApDSr0kke88
                      yYW1PX5RJD1Ad4u8LQ1wvWyKwTxgDu282lWevYOWsb3nGsi9rb1MvVDIKr0F6KK9pKzgPCAkq7zA
                      bW28EiG3vQWLtz3935K9NnALPfo+e70VF7G9OVSIPcXDub2bm5i9p6NsvUAdJjzgfPa7wFtfPD2W
                      yT1X4a29qTS6PYDiBbq8OtE8DP3svK1Bij028A+9KAsdPKS29DyAhMK6AGbfvCIzWD0BsrQ9qEmw
                      vYC1zL3wQVA8wCN1PPnNqz1UUJS8UOb0O57qdD3QOh+9kiQhPQ4Am70ifh89LNTCPBuivb0fnZ49
                      jL/2vCA6kL3c3P88/SYovXEQgz2u/Go9s6WJPTgiyrzY4xA8bqQEPepNKb2RIb099DuQPCLGIT0A
                      dHs8nWaWPSSA9DxIgL4804ygPXRe/rz9K4i9c6YavREOoj1AniA7F1XLPa4zGj2rs669ZnqIvfoE
                      VT1B9YI9N7JuvU0aJr3SDXY92BM5PIDmHLy0xvG8Zm+VvaC3vr3oraq89bi1vdgdPby0d788yUmZ
                      PeB1dr3nSos9iEWmvOj1kbz5zcY9KjUnPYJOv70xkcE9sKjgOzgex7yjzmO9jPTnvGFhtj1AeUg7
                      aI6AvDqlUT0t+m69cRGmPUA6iDxPhcq90tE0PdPobL1136k9OGzKPApyYb2+uoy9d6StvUcOSr1G
                      ORK9U//HPWaUKj2gmNw77ELtPGQQ8TyA9ak6M48rvYAxqjvCqZ+9sN93vewjx7ycG/Y86xmvvRTE
                      kryKY1C95kaqvd4EbD0is2E9iO+ovGL4Bj3kzuE8Zqo4PTTiqrwwvXG9UQG9Pc1qV71soKg8OByF
                      vSC8Nr2cZ9w8ZylxvdpzPb2chds8Oj57PW5RTz3yAgw99eqWvcCp8ry6qCs9tmAGvU6yDD12aWY9
                      4FA+vTKIxb1RqME9BkQQPT0zxT2aDSY96HumvMIMUT2GVEU9qGSFPGMsIr2YDgm82FVMvKL6Tz1K
                      Flm9Ov8jvXb+Hz1INqS8r5+uPdomdD3Q8GY8yX2bPWBIPLs4BLk81R6zvX/guL1h3IA9PCj2PC+3
                      kz0Mkd481sYnPb/qgD1wETa984Q/vfg0lTzg4pk7ZN0IvZ5Zcj2YV/m8YL9Xu8InDz2C6go9GEYn
                      PJgvlb2K6LK9IvYcPbCFQjxYKte8pN0LvSlzjT3UTOo8a47LveASzbtwJ269ur2/vcRg3zxzBY69
                      ymV5PXYWIz24+eu8ymZevShGPDzjyKi9x0AnvcgIpDzemys9sGXdO4Egpz3Jsq090Pjauzj1rTxJ
                      9oo9+gdEPYX2lz2oae68xrVIPQMEnb2435Y82HuSvLT7u7yMZdw8OIiTvZJHvb2OGR89s7aSvbHY
                      yT1+Tzk9wN8NvHKMWT20as+8EtpRPYJTcz3KDi+9NhCavfXqxL0SimI9jV6Xva6fVT3TtMK9cKFz
                      PGKJQD0gpbm9EGFMPKW0mT0mvlU9OqCCvTxKzzzTDZu9yOmOvZp+nb34rao8ErlWPTljjD1D67I9
                      p9SkPVabhr2t4zy9mV27PeZWUj1bKKG9yN/FPMIjXz3XWrg9RzIzvY4KCD2y2U89l+6wvZckx72E
                      ju48s8aRPcOlZL2Yacs8sN05vaPayr1cKYO9ULudOxdtTb2Ca389Hac+vaZbSj3AKSy8ANMVO4wb
                      E70GlEA98q5fPUK6Yj2Kxmm9A6jLPZvyxr1AKlk8bF8TvXGTiz21E749tNONvPVIlb0wHdo7AKTK
                      usdNwb3UL8O8fhEjPcxL7jxj+6G9pguBvbAP7DuXgLc9ipRmvWigqr33rq09EGFhvBbOKj1ARWO7
                      zU7CvVDvWDwmZxE9yDjOvKYXBD1C9Ke9YE++u/DtA7x3CTO963+SPSzZDb2YP/K8yLehPIe5Ob3o
                      Ncs8I41QvaDit7wKiHa9sEn+u0CNNTuIu4o8GJTUvA6uFD1BPpQ92otMPZg4tbzX4Ko9AGHau8tr
                      l72FPIM9ybydPfeGjD398Ui9GzmMPfAFGrzAJta6c1YjvWF+gT3QFT+8EOYjvcBtQbwtwYe9GJ1K
                      POfTGr1Mp5Y8AAmpuw/wwb28P/08KNuePPfslj39+7q9CnNpPfBnD71eNQU9zCj1vLDIcLzj86W9
                      J2qEPY9Ytz3Q34i9Q5A4vWgB7LyCmTM93MjgPPLMvL3pVJ49OvwUvUpQtr0ar629C7SSPW3fd73M
                      9fS89mqPvYCkybrBGLE92NlxPHmWlD2AEaE8+ucVPWcnlz0tcSy9yEmyvXZACr2yu3c9hXmPPVop
                      lb2we5K9SGL+vGJSrL1Qb3i97VxbvbgnvzyA+tw64MmPvXrAJr0AyUg8hl0hPcgl97w0puI8IeyQ
                      PQD8obwAkBi6tz+tvX0Zjb0CuVY9ypxjvSUCn72axmI9/Q/CveZfUz1nWjm94Aa2PKirQryYBhe8
                      4kFiPY+xmD1mAAW9enoHPYoXbb3OG3o9BTSivZ2rmz2y2jQ9XAeIvV1imz17v7a9Q3ClPeBU/7uK
                      5bi9D0ytPbZ4ED0Mxbc8qE5wPODOg7semJa9wAAnPDJow72o1ow8SXq/PWRu7Ty4G788T1W8vehD
                      frzgOMY7sEIxvBosbL1e3z09QO2UvWc9S72subQ8gOX3u0gl97xw+bm9FemnPX3gab1fnsA9KOx7
                      PJAQLb0is2E9AA6fO3VFnj3INIq8CEGSvEbtFj04Oe684MeOOwcNf72wdZ477mklPcDKFjyu6Q89
                      twfAPSD6mTtat1w9DgZMPcXYkT31VKw90BU0vY3US72aKbK994gmvWe6R73KLlc9pm0DvTHWkD1A
                      W786Mbi2PbomLT2nB0G9AKiwupm5jD0KRci95uMJPaAf8jvfhZs9c8lbvWYWBD1qEou9CKP3vIeT
                      hD0Q+H692LtLPGiggL2mRIG9DJn+vABXlL2Uo9c8oHg8u+AwsrxgEsQ79nGEvYpBQ70tLoC9f2Wj
                      PQBJLruxwcw9OHLBPExNxDyuhn498uwzPVYhHT3NJBy9hRGkPfc/Vb3AIoI6AIa/u9fneb0/bLc9
                      LNeavOidYjwXNWS9oHSWO68igj2WHZe98eTJPXRYyjzUErc87SAovXMUwr0AnIM7/VqdPUuHtD1H
                      vBu9qvNrvQ50m72dZ0y9AILbOWUXyz1TFbk9qEQTPBcIXr2oLCm8oOOMvEf0mD1RvZQ9XjQDPeCd
                      szxa9qy92AIIPEgHjTzAFiy9dNbNPPX0nz1NkCe9BRaOve6mkr3Y+wQ8Goo1vQgalL0m3Rs9wBuB
                      vQdzP70A6qW6+l6hvVCsGL3OWiE9O3+pvRCQCbzyyDA9ABPZvD0dO72wcXM8U10wvQrzJT2eiAw9
                      kQG7PaDsvrzAZN46MlAnPS8gsr3QLUm9g5hSvasWur0TGcs98MIlvOtmiD0AdgE8tM7iPNBRbL1q
                      jQY9eImzPAAywr0tXIo9SIOLPJfKjz0Wcws9uYLJPRYHSD3H3629FIDWPKwevzzvPLE9QKd0vEAF
                      ArsZqKc9B4SUPSEApz1Auxq9rJHqvOi5hry0fIK82GxOvIL7Tj3z3cQ9LMIIvVc1cL2pf7Y96Fvc
                      vF5IdT23n5A96IWjPND5V7zgBYG84FqUPLt1xD2EdhS9atM6vTWJtj2gQ7m9b0OHPQ9FgD3tMLi9
                      3+a4PT5uJj3tLzu9UGKIu90rxD3iTlk9wz6sPVixhjzs0pY8+Ay5vPn6xz2wcoG9vObmPJ94hj0a
                      MXG9WjkEPYiWjTy9Cia9yaSfPcoDT72SP1A9YEHVO0C+MTujQae9oIZ5O23uK73MSQi9hfDGvfsa
                      tr1A0Na89kVUPRRL5LzHRFm9a2u6veIUID0YZwW8/8jBvYqDCj0ETBG9gMU7vPIvHD1y6VA9KDJi
                      PGUwxr2q+Uw96DNMvPSTjTzVmqa9+VjDPejwm72qPxw9MjNpPayqiDw/dbM9sK+HO5pAcT25RZQ9
                      DP6FvY8ir70M85K8rv2cvWB0ursZasc9IDqEO4zL07xgIzg7E87IveI2Nz2YgSi8UmKFvZE0hD1A
                      tdA6eGruvCBqzbuydTE9Nut/PSKAxb3q3k+98SiIPWiOsDxg2r+9I5qOPdAZFLyML628INfFvDKU
                      Dz3S0VQ9USCAPTj0grwB2Zg9UHFfvULZpL33DsM9yLSFPJK6Sz1bgsY9It4hPZRah7wH8bQ9AKxi
                      vHrnxL2xdqQ9aCOxvbOFjj09HLo9U2FjvYBBGLoAB0c7aCKFPDtCoL2OB5W9EqknPbT/7DzHB8W9
                      +hoHvRcrOr0+eJm9Avk1PWAPtbzUyMW8ShJpPQWrgr0t2YK9pDn5PGkymj2UvKy8glI0PWlnyj3k
                      wc48mK9HPKgcpTwyMxU9MOqLu8esqz1Dcy+9jUQcveARhjv9f2i9PU2fPXqZfz00cto8THjlPIj7
                      nzxWLQ093UDDvd46LT1Ym7M8gC9OvAbNqL0P6bK98gjCvUu6or1MZPE80hFMPV+rtT0A1TI7oD/Q
                      O6Fukz2w5Vs8MgYiPUEHpj1QExM8SCPBPA+pw71YrK88e5mpPV+rur3o/1w8tpZoPQB0FDsSGrK9
                      0hqfvY2cjz1QFJA7z1SqPTobZ70axGu9Cv1NvbKOkr15lsw9E/GZPdFCtD0uw2s9CViNPYIONT1Q
                      W3S84ESPvcpJOD3l5Y+9wDrVuv4wnb3I8q+8CzWHPdaKBr0qfZm9SBC5vB5bEz06W349wGtjO/TC
                      iL1vy72997FAvUgVhzzEdRa9dR6HvVgMMjyAPIa7u/WXPbYbXj0/U7u9mPSqvK5Hl72Uj568Uthg
                      PYIwDD3I0qW8am03PVMDnb3BgK09PmiYveprjr3tWjC9Z+J/vehzSrx6nau90wgavVsoqD1tF1q9
                      rXWVPQ9HmT2QtnS9nn2avYcOkz0HTi69KPytPMBq47wX2cu9qC2rvdoZcT0ikae9IeaAPdAflDtE
                      leg8xTnIPe1wgz3gmmG9FooUvW8Luz1AGxe7r1LCvZMaur0OCZW9zzeLPaJZw708fO888Tu2PZaV
                      A73IqJM8EIRPvWACJ72+VE09iBXJvQQnzjxHGjy9eiYKvYJ5Xj3dDJo9HjKZvf1xar2qUT09qCTe
                      vBiNjbw4fbE8sOBnvZPnab1YHU28eZ3DPbpZdT2atHo9oBZ/vWBg9bz3jli9IwvKPbCK4rvtsLo9
                      NlkbPeTr9zziEEU91b+0Pc+7gT0AO/+7aIWbPCCpxrsApAi9LSXLPZoFVT0Z9LU9y0eWvZiVbzxn
                      krm945KgPRETiT3d/na9cDhZPBZ2qb1+m1Y9n9O4vQmpwD2WlQk9AwrFPV0EL71/XcK9SNi0PEE1
                      rD0kTd88Dp93PfbhD709Sxu9cQOvPV6iZD0kt/k8gHSGvSu0rr3gEqC7ZhI3PbrPXb1Gp1w9+lgJ
                      vX7wlb1/pps9SMG3vW8Llz3dUR29IihvPVhtEzwPEME9BM/QPLIzEz3eO2w9U3SuPZOdar1okkE8
                      BtshPQ3Mur3nhLW9rMCfPADAdLlWuAs9qOQmPMKZvr1jUDy9rIXgPPxL3TzQrwK8oNZtvW5MPD2B
                      Cq496KwovOD0gTz01e08laWkPW9CgD3ecZa9gKJjvCc+zL1IWqO90efEPRkXgz1IlbG8I+OWPf4U
                      az3oKWM8h12xvf1Ph70Ig7O80s0lPdAvcjy40Zq9sUyNPcAO1rpPA8i9c4KrPbMNoj0qmDi9OAKw
                      PLOCkT16Dzq9WheevUDJ27wdMsQ98IVavOyIjzyAvQA6QO8cu4CdlDqMpZO8GFGkPIp3lL33N449
                      shVrPVBX2jtQA188GjpIPQy6C71Ni3O9QF18vcxviLyMHM68xdKIvVR3i7yA6sG7SmROvXVwsL3a
                      4zu9gIufOyDBvjx6I1+9w9l2vZKwYj0F65s9cL5GvAheqjx5PcE98GWqvRJ9wb1/5sM9ktkjPcAB
                      ETzHEUi9YyVevRZcmr3Eh888OtBvPdT21bxAd9W6wAu4vK2kIL3AEDi7fQWQvSYBYD3VWKm9s/Uj
                      vf39mr1Nro69UNsjvTQs07zaUA890W64PbIgRT1Dz8S9Sk2ivRBXGbwQ7gc8cpiUvQNzN72je5o9
                      2o5qvcPMa71UnOe8jBAQvaYEfj2KLny95GwRvR6aGj2gUcI8CGjGvRJNUD2jZI89WlesvUcYy72A
                      aPk6nvwUPdBS/rshVKY9MwnBPRglgLyonT+8sEfBvWwDhDwBIIA9nJQDvXX5sj38OBC9lM7WvE7L
                      cD2ov6A8876MPX2tjz20r4u8cx24veqrNT0gTeq7HfmjPZhNgzwot8m9pPXjPFIXfT2PlcE9lCn8
                      vIDcF70RZrQ9Yg+ivYN5j70HFYI9adDBPa1gLb0gOs67kCYWvfCYDzwRjpM9DzOcPc7/BD0WiJS9
                      gBLMu+c3gT3HeE29UNqdO9AgMb0oS769crd3PbA6+zvI46K8OkZxPZR28rz1Qa099gSKvVBJHL2C
                      3UU9WiqlvWDHkbwQvLK9YYecPaRd7jzsGf08n/ePPblWqj3A23G8GnxZvRLxhr1yxiI9E/cfvWdI
                      xD22MWk9i7iavWavCT3zrsU90GWIveIZQz0ARtE7qbCdPbpJSz1GlAO9ehMZvVX/xj0CZ0o9Amth
                      Pbd5Vr3wFHS8urCkvUDHWbsAKQg8MsuZvadujD3+7zE9WD+IveCuS70p07U9s0s2vTC/A72Yk5q9
                      8qVtPQAkJrz2lR89+P+fPHNQyL0KiMG9mETEPEmCrD0+e3M9w1G2Pd+Byj2D6449yqqcvUryr70Z
                      KpQ9YHi7u+CcGr0fZq89D624vYQr8zw+SHU9cNEgvfBHX71XvKU9Z2iePYK/Xj0o/Bq88j1gPVj1
                      7rzNCoU92S/BPTq+qL30td48JmtVPSqOJj3XS8q9Z205vZlbuD2K5WC9U0gzvW2Bpr3wtE69p2Kt
                      vaiwojyHcMK9gY+3PVJEMj1S0y89krxNPamonz0qVDU972GcPRjITTzAv7k8Ar4nPZBGwb1yMhU9
                      VncQvaBXyjtANi27yYiVPQ+nhj2Hj0+9tKXpvOiVfLyIjdS8eCfuvKyn+LySFcy9ihVkPUDyFDzb
                      CaE9UXvBPeioM7wwEJS7YGWQu/sAmr0ClhI99EjDPNi17Lyna3a98zeqvSKPaT3EfQ69h22HPVAH
                      Jr1pda89IogVPZ50Wj0Db609LLmfPKKfm71F8o29SWOIPXiJ4rwSeJK9zMsUvRmkvT1oKbe9GLKX
                      PA3uIL0/erA9qP9KvMezQr23h4U9etG8vWMUmL1WJF49yY6tPTfcdb3Y5Om8BgAsPd0YqD0mUYi9
                      FOrwvHKhOD0a6wk9EYTFPdKkez0SVGI9Y7rHPcAAmzy8RA+94QDCPWelub3QoyG8C2ujPdqac72X
                      I8S99QO9vbeKqT1YM2i8JnJkPa/Htb2/xYU96nUkPUDT4jqPtsy9sNZJvDMngz1T9qQ9wvVlPeAq
                      jjz0tAm90FkavD6HMz2qM469+JuLvbVOrT2XZEG996iTPejB+rzoaSC8PTKNPYuMsT0sW488eceq
                      PUxa7LxVob69Gi07PWOaSr1SdDI96OaDvC6SSz0CmRA9eSWoPWy+yLzoZVE8qGKYvUCyCTsp/bQ9
                      JmNbPcGuwj3zAYs9JOTtPIXFnT0NM729lgMZPX2EyT1zELA9l9WYPQSn7zwoAi88INCgPOICMT0w
                      p3C9l7gzvajYDzzLAZu9txxTvVJ1ED2LDYQ9K+CRvaP9pr1jCLE9jHOJvS+wij0Awl07MLiaO44G
                      PT1KuFC9gP/IOu4YGz3Nb4+9IEu3vA4cYD0td7I93T5rvS73Ij3VA749ubTFPcwniDw6ESA9AO7w
                      u6gYkzw1xqE96mSfvShBbrzN1nK99kKUvXhsuL0o7lk8Ut4RPWJtfj399Hy9y9WHPUzypzyMzOC8
                      0Ap3PFrfMz02uE893rKUvew0tzzAZTS7AP0uvWDkSjtqw8a9X8WJPaoJDb2A1+E69YTHPYBkfLx2
                      wDM9pteDvcqSfz2uIZ69gGazO1xs/jxju0O9k02hvd0pxr1AIQu7CFq7vSh7PLx+Qoa9LcixPbCE
                      wjvAjpi8usYCvSjGuTzdm8A9lzayPT0TIr2KGAO9hk4SPeCkjDwCTgo9GIRKPGzksTzS4py9aLfL
                      vLBwATxlL7E9rn9lPWgFNzxJaso9hIvdPNqUSD1YLp+8ggRDPWJdhL1Q8WG9mBXJvYNFTL0Wc569
                      dK2bPCEBuD1O46S9Ok5JvVezkT0Nfb+9gMgHvFBeYDzlbLu98LUSvHCIc73ucRY93CcQveyTrLxg
                      Oh67ahtGPQBURDl6mxc9QTbFPaCZjbwgIY+74HfJvS1lLL3y8ZS9ttZqPaJJUD1QWRe82LZmvNsm
                      iT0tpaI9Ji0yPfqJAj2jTZw9WKc1vPUegr3x4MY9tU+HPcqHRz0tUqQ9mA8SPICLTr1oHAw8UHtT
                      vTImMD01C529EO7EvRgdjrzAC2W8wCQQvcXuxj3iYCk9YAEROw1qsb1ggSm9+F6lvWkaxj2YGjU8
                      IJM+vZF2xT0tsjm9SrZ1vRZkez3DR6w93RgqvSzxprwwwlK8tS+mPQAzOjplWas90PjFvfE9lD0h
                      4ss941SZvSZeTz1Qh/k76u8mvSwRsjyCf2s9oGpPvSpqy71Fcqq9gK3Vu3Bzqr3ZSJo9wXKBPbDN
                      r73HnLO9SPTcvGOoo73NQLE9b4nIPYU+jD3AOGW7qOrAvDemkj1wAB08seWWPbskub0jJ5o9sQGA
                      PcBFZDuMk7i89363vcr1sL2+kpq9KiN6PUoVtL1gaB29mv2NvYDkxzpXW3W9gPUQvAAsuzjzml69
                      9A6AvQzrqTwEb/Y8uvF4PXAgCzx6H6m9g1CcPVyaAb2iOLe9UDwivKvEwr1NGBu940C6vR0Mwb0b
                      rK+9mAz6vAR40jy4+bQ83VRvvVL2Vz3vcsI99Nv0vKBvsbzAdru8sCiKO6DQGjvX+629oNRqO570
                      Xj1YbIm8AAkPukzkDL1uTai9gDWau3LjBj1Qq8O9UCAwvO2lVL0/0bA906u6veEakj2tgIe9gHlh
                      PLZyjr34cJ+8OJyjvRg97bw0UJO8pILzPLgprzxOyiM94hcOPQZGTT3M2OO82mMOPaxthrygcbe9
                      x0xuvaDwBb0Q7Ii9gFHYugDccbpTysi9At3KvShRTjxFb5i91vkbPePYmb2QxmC8wFYQuxKLQT33
                      uZI963KjPQUlrb0A6Ci6FmQYPWD3gbsx4ao9/mMQPYRF5jxJ6Y09TAbjPFATPLxwS1U8SDqfPNNC
                      RL0qLDo9MFr5O7YHUD1Gugg9YHyXvHPyfb2Rw8o9P9TDPTNYiz33nZM9GvcqPWY9RD2xnYQ9IeKR
                      PaucnD3MvaG8aKSSvO1boL2sU5U8NT+8PWyupbz8t/c8tdzHPQKIPj3MhPw8krU0PeCPmDvAOBw7
                      aLpNvGgwjTwxuco9zei/vTAIur1m3UM9zakzvQncwz1UxMy8QlJHPYxWq7w5hsY9o22iPQDYsjpg
                      J+47KMHsvLTlBL0ozMq9e9OQvdqgbr1nxkO92FV7vN7ZST01I7S9gLOIvJ0Uo70UNvo8yrBDPXhz
                      ljw/+689/ObYPPF+mj3zE0S9sipUPZhJg72wfm68QM7LPPO9xT3d1xm9ZOiJvdqCIT2Hn3q9jDAJ
                      vQmEyj2i0RA9l1GHPYLXIz23fGq9jrKAvaeoS700mee8I7RyvRO2x70eBoS9C7SuvZ3vXL35iJI9
                      UGEdvPVYmj3Pl8q9ACVrPKEDvj2NF2+9qq4LPWJ0WT20CJi8Ss8ePYM4tz1OZVc9MBW8vVLuCT1T
                      6rU9UCdMPKVmxT2SIhM9wHFnPOwx2DzgL/W8LymAPUA0R7v5aqs9G/yhve1XyT0IucK9I+lgvWcP
                      a72JdLs9N4GpPfD3Lbxt4n69aM2FPKCzwzuM/a08AE69vDS3hDzC+CE9nNGCvcCgATurP769oPCO
                      vPtAtT2RZLk9y12ZPRviwL0+Hh49Qj9jPbBDmL3nBXa9oILRO2vZoj3loYa9kvaqvWMTJL2BZ409
                      qrMgPf71aT34ovC8Y3VLvYliyj3lMo09njyYvdOFlT3l6LE99hsAvRiibDzABqq6a/KkvacgHb1G
                      eWs9WNmvvLOWIL0RBqg9MpILPZrUCb0yvcm9uz7HvblRnj3AWY48H6DKvZFayT2GXDQ9jPvQvFBv
                      Ar3w60M8x5davQENsz2U/NC8s2TFPQDQd7rTqZe9Lr+lvUJxHD3Ig788YO2QvTNHxb3MIgW921u/
                      Pc9Tsr3g7+g7Ok8IvaBuDr3ALtu8WBunPLoeJb0/hIQ9WBzEvSVTuL3nlWO90FdlvYwPjLxUqMO8
                      dVq+vYJZnb2aZWa9CZmOPVwq0Dwsh/O84gBkPRJ3Cz120au9QAeLvWj2vzwALMA4aI8svOD2p7v7
                      mII9xuWhvfLhWT1gtBK7L8OIPR3XyD0gXOc7m/KZPQDe6jpMXAO9P4yTPV87kD0AcjC80p4iPemX
                      wz2RH7M9uay9Pbfpeb1pO8I932auPYLGcT0LZYo9w6SqvTR5i7wQaFa8oIvju9jmqr2idTE9sE3J
                      vQnqkz28xIi9gb6TPQAgKDl1po098hkTPehcoTwoVoe84pRRPQBfSLz1ur09oYO5PQobRD2gMRg7
                      UXTLPX1BhD1WMFg9johYPd4nFz2w0by7kgejvf6qWD2qpoO9Wx6yPdsOrr2vmqI98vh8PYatFb1S
                      dwA9dx2OPVoYCD2aelI9vwiZPYtzub29RpG9vUrIPRWJmT2WcUc9o8DJvcwKhL3Cqy89qOP7vPIj
                      tb0gCpK8hiIWvdqbN71TW2O98N1hvP4fLD2ndoM9ynhMPcqRdz2S1D49QP2nuhf2Zb0UOt28iuMX
                      vTdMoD2SGS494UGhPdodDD1goHS9/pqevQAg4rqo8j28Ctq1vZaem70ixFE9GIe3vZ6zCz2xDbM9
                      52qFPTcGoD0wcXK8i7iSvZD0EzyYgI28OL6fPPBteDyj/Vy9KSGuPdgHzLymKyc9QsCMvdrHSj2A
                      3Ik75VzAPb3Zrb32gR09nz2lPQqDvL24QpM8nxmvvWfRgT2k9c48NGuXvNYGEr1qAB89xPLZPKGE
                      oD3mPay9WpCjvYDyJTzGx2M9EzNPvZ+Gwj0ZU4M9aiIVvQVAiL2gbgc7mkQVPYD+2bqBcqI90L9g
                      PHnMiD2Guxw9Ay2XPUKnJD3s6v88oTCmPaKHk72qJk29MEB3vNgQbjyoD6a8UjV3PTo/ib1yGQQ9
                      I8dJvZf5SL2QoiI8YQyYPc/+x72Gvp29999fvZAwSLwrTME92tCXvbe2K73U1gC964mvvWigz7xM
                      N7s8LH7GvFcsyT375qM9ZuQ+PbQWpTw4e4y9p2xDvfaXE71ykZ29XUKiPSD4ozsTMJi9So8rPesu
                      ij0A2Qa6wjOzvQG/jj0I48k8f6uNPQa3Az0FyZY98iWMvZEXxD1NJH69UJKFuxIiEz3eYHs9AJF6
                      Oj+Irz0S60o9ANr1vMDieL26/Ha9ZauYPbE7pj0scLI8cuVxPYp2o73c3w+9sNYcPFDWBrxdwki9
                      eq8yvSEZkD30y+Q8WpO5vSC8vr2QbwW8oIC9vccPSr20yAG9og1jPeDXmbsU0YW8+FLJvFAl5zsE
                      7Nk8t6w/vZ1nnb2Hj8o9YktxPdXwjL2WLXU9rgaUvYA9lDygfz+9essZPccaur34l9G8Sweuvc9k
                      mT3Gq189YnkBPWBior1Ur8E8dNHhPFR3gjyUo+I83Y6kvf3Vlj2R8MM9aneKvYCItr3HMzG9rCWx
                      PIGVlz23BYs9PA0Dvc0zHL2Ebs08eL23PNZvFr0eREo9kBcRvWg94Lx+nSM90PllvCLMZz0sCBK9
                      YMOuvUDjWr1AiCS7TFaAvVJkRz0Qqxi8G06PvXDAL70L97K9N6+dPevAsj0KAEI9BaDCvT5MHj1J
                      KZ090UaePTfslD0afTS9RxIcvVW3j73jzbM9cj1FPeyNhb1tVTG9dTibPXK3Uz19IYa9LgRIPSgl
                      27wqqXI9yCrnvODX7rvmiaa9CyCOPbmJgj2gmn+7Se+RPc6+MD0SjVM9zbtKvS0agr1oUFa8Vy5u
                      vdEVhD3hjJU9VGOJvZhiCTy4CaW9hnoOvbNnsT3Pwss9kHWsva3Nd714ytG86uImvRKICT1a4i09
                      gEU/vOXxgz3ovSA8Y64hvUDgLr24P/a82pjEvV2EhT2pL6s9UAO0OxR3nbwod6G8U2NEvbY7KD2j
                      OF+9U/GUPShpjL0IEdS8oWjEPUlrrD1iG8S9UXPHPSv1hD0ID9a8YjtEPQYoFT2AFNq6YKVJvYCQ
                      /bzeEk09gTODPb4flL3ga4e8g9WxPQqUyb1AhLU8t/uwvYCbS7zg/n+98rMHPbAIYryAye676IYC
                      PLm7qz0FT5g9oqiKvT08pD3afzY9QqWyve0jSb190jO91SmoPbjfqb1ANsM84XDEPVbhir0oAhY8
                      WPu+PJ7ANj3D2L690uI7PbwX/TwSXzw9pbG+PWiAyr30csE8lHWpPOyQ4Tx6Dws9IcPAPQpdXb2a
                      N2G9FHyfvC3+v70t5Zk9e5i7PcuSvz1FHYq9zNm2PEV1tj2z8Ky9cz+PPcyliTytPL89zcGIvf6A
                      Qz25v7A9WukqvT2LrD2fe8K9D66vPfLjNz1XkpA9y9W9PT17jL3JB7I9ii4dPQDkR7kKFRi9IHiW
                      O9A9mjtgS2Y7gjpuPdATXTyLTZo96WSkPalFsz29anq9QpA/PZzq8DyoDOe8w6BWvY45QT3t4FK9
                      AOj2uGx42jzQgks8A156veC0qb0IScS9bmSWvQIqZD3pv5Q9rZqsvYcgZ71oio68pAbgPFgewLw/
                      37u97AmFPL8Zhj1JzKs9/WKtvaGJwj09xTW9GpCpvb0phj05jss9vvQDPZLEHT3Qx3u9QLkVvYDo
                      obsPrsy9UHgYvFYzmL30O9e8Hgabve7/jb0/e6+9RoERPTelZL2w1Dg86WmFPahPezz96oK9YsgR
                      PUBR7jqn9MY9QLtrvKOZJL06PmS9tD7kvA8ItD2RcKg9woNmPVnytj1Gbh498ioTPYy3vjwMrNi8
                      6eaOPUqKBb3oISk82lodPdqtbr03dbG9F0qSPXTF2bwUr/68gilZPRutoz1RyZU9IFWEuwCsbblQ
                      hHK8AKyEOpBECzySbQg93Q+hvarVOT0dtKG9yAKNvT3Gg73F9Zi9IIMtvViL4LwAeBa8AkJ6PahG
                      wL1DbaS98LB9PJPIJr3b2rg9RODRPB3sib0yQGo996u0Pd32xb0zNZQ9OUqtPVK/VD1Cz2U9jJ+/
                      PG9eoj1i7Xs9Z20uvQs5zL1HaXG9pychvWgqITxwCpK9un89vXLdfz3sIYc8aisDvXYtBb3DrIE9
                      zJHHPO4PfD3Alge9oEu0vKINKD1xcYI9u2qKPVDEnrvQW7e7Tp4QPSC4Y73SLi894PskvdlNtz2Y
                      5Y+9KJeUvZU0hj3O1ZG9+MWevHrJn70iXl09GkZ7vQBZnTsAfjc8D+qaPZNOUb0A28q7OSeDPaO8
                      yL3MepG8kJITvGAS5rtyv2U9p4ONPaBYL73Gjhc9mDBTvMAWGTw0Roa8U76VvfINhL07AZs9Wl9b
                      vQ2uIb0AVza8tN0YvTcdrb2sBYS98i1KPZtFsr0AmtK5ekoIPUDgWbvJGJI9XhSZvercQr3KHzY9
                      JCDmPMgM47zgQrU8GBNZPDUDqD1abl+9Kx6SvZVVlb0m5TA9DtAOPfR0C72Ql1c8QERZu7L6DT2I
                      2pc8gMDeunHLxD0acy49dMPFvI3EzL3tZ6g9ZEbYPE0VoL1Dgie9Wtu5vSCjiTwe3Y29a+/CPfpn
                      VD30Y/88y8eVPQ8Nvr1AS7u9cxTHPezEoLxgRT699RaNvdjW/bzhfak9AKD1uvSFFr2CX6e9sEya
                      OyDqgL1RPLA9BjmqvYUBvj0KwFY9oTa8Pa/3xj1gKVa7dE+mvA9Qvr2z9qY9ff+rvfgMzL1UHus8
                      qizIvZqUAD2lxrg9sParvZ/ux71iYis9ci4JPf6znr2gnxm9Ur9cPWgCU7ydwUW9AKrMumpdeT2T
                      oiS94AiKPHL9Rj0+lmQ92jsavYRi5Dwzqzy9AI7aO+grtDxUu+A8SJDBvOKdxb0icxM9AAQzvRvn
                      r70inSE9QuNAPeSn8jwQOBG8fJEDvf6FAT3S+gs94D9HvYj/hbzPQsg9sHHDO3eYHb0QjxG9x71O
                      vR+Nsb2evEM9lKmvPFBDK7wR0bc9etoVvTNevD1oupi9ufy2PdocBL0UZ9G8Tb50vXA5eDz4V+y8
                      pLrwPPBvArzKrFS9UvYWPbCVIL3R2q49oLiFOxUks70MRZ280ODWu3NRvL0o3248VylevUCAYzsT
                      pZu9FGfBPEBK7LwXaXq9I8+VPWJwaT2NR8w94LaUvYQ8Br0/jKA9HhScvbccQ72KMz898DpOvBA4
                      jb0woXI86uHIvThDub2weI+7bO3CvCqFjb2VUso9r8XBPb0Rx71IPY69HAnqPEbFF7007Yq88CYg
                      PHSbjL3yUjQ91Ej9vF1QU71nZ3292FlVvG17iz2RI5w9pJ/wPFB4yr2AuzS9A36BPcQh9zwADbo7
                      6NBMPABSar3Mx6a8qGWxveh5pL0YwWu8obOCPaK1h72AxJ+9l42GPVQygL3Z2Yw9sOqsvVDkDL21
                      +pm9WJQrvBhFnLwproo9rSi9PeCP6Dskoug8EO09vYKJuL3pGsk98Jx1PJrcFD39BbI9aGmevd5F
                      WD2ClR49Fq+AvfZ8IT0mZQU9eIiEvSRt6DxK7wY9EpI4PS++gT03TTO9yX6bPZThxDxTRoU9gADk
                      vFB9iDsgN5c8UG0GPAAi07yAYhe6LVWRvcZGOD3ga5i7gvWTvS7YSz3USvE8YEv1vKK2k72g7Py8
                      InYFPST79Dx17bQ9GJ64PPdVXL0KVUc9liN3PWelxj2QM2+9WyynPTcYOb1WVB498gQWPWJWpb1o
                      mZi91P37PMDsYbySlC89VN7ZvMjaqDyAF0c8gAm6vJK/JD1g6bk8mnu3vUDbQTwaHqG9pgkXPXZu
                      kb3ICb28MK8OvTcITb00Dey8JFz0PMj7njy1Qb29PUB+vfrLB737M5u9GqhqPY6/IT1iRCA9zKb8
                      vENMkb3B2co9MaCIPdjRT7yCfgU9Z9Rovcr3Hr0AjAM5+0KFPbKXmb1AX/E6pyZBvcCRb714cOq8
                      EqAxPcCuODwgXqm7EPU9vQ3Esb1FTcC9gJzgvGA5kzwgee+8gJxmvLeSH72A6ea7X7qwvWzNkLzX
                      51m9wHHQvB9Tmz3aXnK9+eSHPWftxj3UxrK8VEjJPPWLpL2gF8W9IBypvQpoMT1tkFG963mQvRoY
                      e70GIQ69kTGlPVpeGL1OUqK9LOKUvOiAF7wapnE9n3W0vUDWFDtSiio9QOIAu05+eD2NzCS97eWb
                      vdB+Dr2YF8e8nX2zPfgJy7zgfIU8gNVavQWmnT2wuyS9OGeBvWiEBTzLJIk9FiMMPZJpw70M8Ai9
                      QLBYvVUWhr37Tp+98ilePdTU6LwJuZs9cpApPSjnljzwSms89CkEvcqbMb1glVQ7ALXDPNKEnL0N
                      vY29NIWGvc2hvT0CKUQ975aZPTRv97xbiow9qPCFPAx6kjzn8iS9XVyoveP6mz0UTps8UNuWvcs1
                      iz1IJ828AGdru4B7xL1EKOo8wN4gvKAmaDs96Uy9ZTChvROfXL2q8h+93XOsPVgYxzw8kOg8IuE+
                      PcCmqTyKQw099t9/PYPRoL1RFLs9gzbAPbKXCz1SpxU9EEx5vc5ug73CAcO96iVkvUK5MT3kLIe9
                      0IAHvUHuij3yuZu9autBvdrNl73CG7S9Ktp5Pceyhz2mhH89Z9SNPehJyb3n+LC9v6DHvVjyc7wY
                      VzY8T5W9PbIUwb1yAXA9EM8HPCbTCD0RMJE9u2GRPQCoNjhWlVI9iyWMPRVmvL0FMZs94BjpOw3t
                      Xr1V2r69TD+IPGKhVj1oerI8x1FyvcQs1TwAjaM5IG9svUBLsbrzgqa9amSzveiiiL1sV8i833Gy
                      PXTphDzdp5I9SBW9PHZoBr3CnC49AOu3vNjlFLxQiyE8YlC/vcqme730zvE86Hk9vMLHWD3JQ7Q9
                      Pq8cPYAr2DuY9428832FPXNvKL0x5as949rJvdNIlj1wzB48YEaJPCCMAL0oqyW8FlikvTV+sz3j
                      PYM9JstpPQCcer3GSQu9GJaAPP7nOD0CZSs9d6mcPcdCGr1gIHm9oimLvcmvrD2dUyW96emNPShh
                      Trz1gJ69Zx05vaLlaD3vtYY9twFdvZw6C70w0wI8/jFIPcCbcr2YtnE841N6vZxo+Dwg19m7YXm8
                      Parabz09yMq9p0lPveO1uz0edhQ9bDvnPMJkKT0nMW69MzmCPVuLrr3x3KM9gMV4OgqAtb35ysQ9
                      oNIfO+KXs73COpW9MOHKOwAAerUywEM9V1omvUrPp72CTCk9hxuyPaAiZLswjc87cFt/vYuhwj2R
                      B5I9wOdjvCWiq70aqgg9JiBrPenlnT1gJKM8DFKPPED9GjyVtIi9vzCwPXpuRj1rrbq9kERavY6k
                      mr19MIQ9SBfxvHLRwr161yS9Dm4dPbzLF71YNrE8IhhNPWjM5bwADmM74CLJO8w54jzHKpA9px8w
                      vbTqmjxzWnm9TZQ6vQheqrzgiaq8RILfPDUOl71YqG68U84kvU2XvT3Ynik8YCEqvUu1wj0AqhC7
                      okobPbYfKj39uaO9kCVWvcxHGL34XbA88NOyveieijwA5ia7PT8ivWChBTvrBbA9dhNuPalDpj2y
                      ZUU9MvMVPcJkOT3Hj4M9OY+PPUCi1LzI/d689rCkvaASfrsWL4u9MOkdPGP2PL2wBJc7BpFyPXEc
                      uj0wpo27TV1bvVq+Db0gt6c8cVCAPQCDgbyCxIq9gDgSvWCccL3FoJW9Lk1WPWvBjr3wlZW98thO
                      PfFFpj26Ujm9fc2uPbBxpDvwGlK9YB39OwD++Lx2mSk9g6eIPdptbT0ynFQ9mjojvc0Brz3Azzy7
                      ADShulQvsbywNUa9VCHOvICRx7w2PFs9qXarPaENqT1mDQe9ni9RPQ2/iD3DI6O93jQBPV6yeD0N
                      LLe9fhgCPQDhr7tLaIA9Wz68PbFWlz2u5qq9QOcKvQlvtT0ul6C9Ih8aPSt2sD3nG409011ZvViN
                      2Lzio4+9lrqmvUrQUT1Qs627LquXvduOsL0oY9e8wOrhujjs9bySPSY9t3A+vfB0wL2olJC8alxc
                      vZp4DL2Mpwm986kZvZA8Gb0SnRU9UKkyvQB0aL0hFpE9asM6PcJnYz2gh4I71SCGPaxFvLyRx8w9
                      1haovRpAKr0V5Lm90PKkO/FPsz1mhaK9sGCvvf2CqT3gXoy9ADxzvO2xoT3EB/o8cieJvZDxP73+
                      ijk91BIPvVBFO71gubq9dKuwPHqkPL3a2VM95H+GvajJxLxopa68lrw1PTj9vbzW/ls9hIEKvS3L
                      vT0pPMk9YpcmPVOmwr15upI9c20nvV2fWb2MOYO8ctOtvYGdkT0gA688DSutvWMhtT1nt7C9akPG
                      vdARor2j90i9ytd3vTvWhz3gGce87VSNvSodJb3ATEa7NIjfvJeffL2gLKS8EMp8veQg3TzV96E9
                      /5SoPaooO73yaAE9OrIqPbvDgz3wKRC8wAtAu8z0zzyjLFK9UEWgO2zurbxwITO9b3i8PdoBKr2O
                      wRA9s+ImvYqnhb0QzU68WtOSvZL9ib2z/rA9KggrvUUNnT10cfc8E6CnPaLcdj1s9RO93V25PXVr
                      pb01bry92t5pPSjhkLyokmU8EhsPPYDaE73khIq99eaavbKvdT1jtsY9+JCivKr5MD1l14o9qBVP
                      PMJhkb3W0BG9o5GuveYUAL2weK29mKpKvPqJCb2RuLo9GfiJPUMbsb2hBZA9g4BHvUvGyT3JRKM9
                      9FymPHral71oxhO8p6mFPX3LtD0u2JW91zK7PQDGXTxsu488YqtjPcAR9rwHdx69NLACvYBf2Dt9
                      KrA9FO2/vJ/Svr3EVf88sl9ZPaCdrr1eYjk9cerIPfcrRr2gF2E79XesvSaFXz1yl189mt6AvfC+
                      Jr1jUza9+6eYPcBl5Lx3w4E9UJmXvQKjcj2i+SU9k7uQPfXPvD1AMUE83hJ9PTiBurzL0Mi9s31q
                      va8CzL0gRwS9uzS+PQl0lj0b4I49iukoPdlQjD3To6q9dCuYPAU5vz0Qoi08aIquvMYFDD2XKEG9
                      md++PR5FOj2kav88aikFvSbzED3udG49MJ22vToIRb3QnfM7V24gvYyiyLwp0Mk9jYGFvaL0l72O
                      YJK9WLofPLCtuzvQtmW8TrxiPUGImT3N08O98EkWvQNntT26Ga698vEtPQE0xz3MT4i96QaKPUMp
                      ML1bs5m9QOQbPNmcxz3sPsM8JGkNvdj/AbzX+Jo9+k83Pb3sl73FRJK9WLPPvCafdj2EI+Y8uS/K
                      PZedwz1mY2Q9XhEQPcDQobqlKpe9FYaFvV08mD2aGcK9YD0nvQk3tT2i+UQ9jCbVPM7BbT0j8bs9
                      q9SMPZPgob0Veb09SB/+vFwNir3My/U8oPlTuyJ6DT1oonu8B6aUPdv+jT0tIsW9AWGXPY7YGT2w
                      v8O7wEMUvfQr9LwgxlG9teGoPZshsj3Dxbe9AIqwumAc2LsbIKi9J7aMPejWkb0YbkC88A4JvYxn
                      q7xg8ki76AbMvAdmgD0KQhY9nWawvTuFx72he789TKv/vLxQE73RGLE9kg4JPTBwfTyGnqu9Wv2x
                      vczQ2bxii2A9xZaPPSwFxTxJj6c9wC9LvaGKxz16Djs9mI+avcDTZ7uV0a492qpBPZL9TT2buae9
                      zFH/vBIkRj0AfQy6obClPfKaTj1gx+a7Gs9aPYye1jzozam9bbB4vZIgTj0kitw8FdSHvbCW6Dua
                      vCa97J+mvOr2ST0AGrc8SHKcPC15dr0SUEc9vHsZvdpRAL3AsCQ8uHzTvCZ3DD2yl0A92tTFvSI8
                      Sz3QMje87qkOPQBTMbxDo789G6fLPWD/jL0xkMU9fdVQvWghZjzXkGC9DO+WvJ6wCT0CcQo9WpZj
                      vU2flD0sHam8I9FhvfPqoL2COAw96PC4vHgJxb2BNMA9+vhcPcyN9bzO2xQ92i8HPfo6Oj19c5o9
                      sNNtvSCK4rvDaka9rfyAvcDZDDwCh189IAavvEamhb1UmqC8jC+9PCinZjwN7E69c37JvXNmxD33
                      AEe9sCxGPKM0wD1faIU9WaCwPfBgbTxU1Yy8rMrhvIBuib3tJYu9ZhsjPWXVxT1RJaY98BAXvWG8
                      kz1sqZY8ULA0vDfXaL1fZJo9ZJjuPMC0rTxaMkq9aXe/PWkQkz2guMU8PxTJPfYFaT3zKpU92v8/
                      vRUmw71HoSS9YKLvOwCQZL0AeD86hj1aPQbIKj0QPnq8F4i6vQs3gD3U9aa8V4+pPUOcTr1QdE88
                      vZWVPcD5cLtYM7e93gYYPUjFubx0V688/Q9bvWxvhL1+T2s9sBeZO8mcjj1A8MQ8gLyCO+Fdmj0t
                      +Zw9lPfLvKAySzuXHJY9G5iTPQNDS721p5w9hWDDvfUuyr0AWXA7IAe4O30Oy72SGVY9OMKqvWp5
                      Xz1Qxmi9JlCBvYJsBT3UHNA8AKKkuwAtpTxomgo8AcSwPSwd5jwwb1U8+gprPSNlyz1G3gY9AGG4
                      vDENlj0jDyO9MryQvdT9gzy9pLo9S2KtveCrqjuXZ4Y9eKebvEH0xj34d7+8id6JPfilyL0sGJU8
                      cDxgPG0eOr39arq9oVOnPYCpDroHh4E98hYDPcz8w7x68EG90DT4O9LhZj3+Ho+9MghDPa8vnj1+
                      SF89WKWfPKNwQ71DqCu9VUaoPTya3DwAwsk8lb6dvZeKsD3x9Ys9AKtrOic8IL281fE8ZYqdPQ0Y
                      J73Q/Jq9BupmPe/Ymj1H1me9kGQVvMwFhbwy7xU9V8ZmveOosD3Jcbw9mDGYPJTRszxexic9zcN+
                      vbDpjbvfypE98NN2vN45Cz16NBS9eNqvPFafm732/4y9stAlPZKwfj3kMvQ8IvZAPdqty72Jq4M9
                      UHh5PLKZnb2S1yM9yrTCvWjwA7xtt4W9HjgnPejBBrxad5K9MGvHuyz1zTy4LKK8hoQTPbDtcDxT
                      AMQ9WE96PLF1lz26ST49qtKivdgUuTwnkoA9seuWPaAahjstlcq9RFv/PACjxr1jrCS9tTe8vVTY
                      hrxAexI7SOaFvYC43LpDAyK94beXPUiLkrxwhbq9ymwyPZ0LpT0d/Xe9GmipvUBwVryakFY9MNtg
                      vVBWgr1Xrso9/W+oPWDg/rwhT7I9/aFOvYaoaz3YcJA8FPH2vBhAf7zqKDw9JSmQPbQy9bw2ZBE9
                      mMKnvGVIvb1AOi+9MIwnPJ7CeT0QT6q98DA5vNRuE73Mrsc8jyC8vWLoZD2weLS7tXSsPUAYSbzQ
                      L3m8BFeHvcNOW73d6bk9blJSPXGYiz2qpy2974/IPbMWcr37qKS9m63FPRpKNT3AUJc8QP78vM1Q
                      db03KHa9ShMuvRByLL0Q/hO8FidGPbTAq7ziKxE93h4yPcqwRD33IyW97AXlvKzXkbz1Qpe9qH/6
                      vDUXxT0QWX086PRJPCZYGT24pNe8K5ysPRKoRT35Dag9O1OAPbCmPzygxqW9pQPJPYe5c73vJ7G9
                      pzs3vdYWdj2oM2a8NOvIPH2hGb2Z8LM9r5O6PdLlbj1hZKE9CnlVvSlDgz1Doas9eymwvYw04TwA
                      Rn47aME9vObhBz0XXBq9UEAaPAfkiD0YwGK8yrt/PW5bnr1wNTu8mElovNFghD2KyrS9Qlx5PQH2
                      tj35BMA9hEjVPL5sqL2wfOO7U3uVvdQSuTzMxhC9feSwvcRt7DyAwLM8p5dAvUrWwr3Jeao9/PKC
                      vaBuTrtKIjA9Ns4cPaAlmTwrVKA9ZQPEvVBAAjyCGJm92ZaLPfSH8jx4YbC9uD2NvKhCajxLJ7m9
                      R0F8vUzppzzzOk+99CjfPAp+vL1lSKs9/nIrPSRU/jwKMCO9E17AvSZFgb3jPjC9bR6fPQAUlrtd
                      96S9qKdAPPZsXT1pCIY9dp4qPS3wdr3QbRM8vPrePKgdgTxMcs88t8e/PQK6Bj3H3aM9FLTQvMOs
                      J70KUa691YLFPSD0aL1TH7k9rO6SvNNNpT3XLXW98NaDvVAXdrz4od+8UDIGvC7/nb0AlyW9KH5v
                      vNWpsr0o0si8hXmTPT/+pz0oThs86BpovMDnXjzjWo09qEaUvfBgZjzeLk89/l6evUK0bj3fPcM9
                      chyhvdgzBrxyiQY9NjcBPck6jz1qKQk94cmIPWi+sjzjA689PoJfPf5uST303tY8Fdq5PYC0y7so
                      oQY8Ku9aPaIRPz2Ra8s9QEE/u+d6xD1AE5o6ebGbPSedKb1aJ2c9bJAQveAh07xQTE29MG7Yu4NF
                      yL0tycA9iRudPaOVoj1sYcK8/0yxvVgTq70HUmS9SuuBvQCPRzvWsCA9ClgEPQaSFD1U66q8Ee+V
                      PbEXuz23KIY92j6XvSeZrD3MMvM8AYyVPQB0/zrAnCq93vWAvWW0pL2tJru9PGgNveOujr0wJVU8
                      mJhPPMBA5jqQnnG9rkuavfCvKL0Dmq+99fyovYSeh73CVlI9jgqPvWP+ub1MetQ8O1CTvSZcDj29
                      K5A9Wq6GvaYwdT2PcKc9gLSqvF5zTT3WNGo93rdKPQDFU7tgzzo7CoFXvV7dRD1Ik+y80jGMvdO0
                      pb1MZfS8JdKivWBncbu4kJS8GEevvXMwYb3mcUI947Rkvb9mur2wO5C9QrYFPcDNcLzg8TW9aAuA
                      vGivcTxgjMI7gBCMuqhdWbyo2ti8QJt5u2jExTwN2CW94NjGvUXdt71DA2q9obeRPSO6nD3qM6W9
                      g52BPRMQXL3gZJa7QP1SOyxhir0nkJ492QOGPQBP2bvt/6q9/XF+vUJdfz3SFIu9YBSRvdBI2Tuz
                      MLw9/qGcvcB8lrw6M6e9KZyDPZQUujworVM8oET7uzILMT1OiXc9gIXLPMCwQLxgqYe7NE+CPOIk
                      Nj3Kdjq97GaFvCRwiL0A22G6R8dnvc18k72aU3e9pyiVPS1fer2A5TC9bM//vAmjuj1j56M9otJI
                      PYCeGTw4Bb08gBhLPMzyrzy7u8Y9kZLMPVDtjTtsoaK8AIUdO1iwN7zY0KC9wCrjvMLEeD0CglQ9
                      AoVAPcBTfLy9arc9+wisvTQ45DxQFLW7KBVZPIBMOzwm75O962SgPfu3yL0AedM7AHsEvQUIoL2I
                      Ava8yhWRvSqiQT1YTpW9wBBxPJ5QYj146oc8EFh5PLA9p73SMmw9WNGSvJarWD2yH4i9oJ8tu4Dr
                      MDxKHgC9ztIrPaQA2TyLdqe9vucFPTnwuD0Gfyg9gA6Gu4ADHb0dibC9NqpFPUl2pD2I3sm9KSqf
                      PYCA/LwA43W7M8nAPZQb9zyJnIM9rw21PXgZrbxNnsq9FNEVvaHKrz0a2jA9xUnMvU9juL2iqXE9
                      RuSIvQE4lT3LvoU9u3yqvViTT7yjKqC9rq6Nvbw61DwMHp+8mKc9PMiF67yisig9Hq6mvdrltr1h
                      BKQ9qKCVvYDrBr1AG9g65LvjPE59az3AvlM89WLBvf8ruj3S+mM99swVvbTZg7wq4Fi92LafvOuy
                      pT3oHRi8DNPnPBImdj3AWtQ6lFzxvMSi7TxBf4I9OOnBvWxt2jwAspy9shtiPbk1sT04W/y83ee8
                      vUw+obxjEXG9qgtNPWgDoDxatHU98we5vT4ODz06dn09aISZPCD2i73QKXM8TMqKvQ1PnD0qesq9
                      lLXCPDrFfT3AlHS8UuBKPZBIBLzpoow9ID1mvadTZb30tw69/xaLPYApELwSD4a9JQTBPYBKdjrQ
                      T3U8tj2gvRQfmTxoaHe8mH20PN3Wyb1CJSw9yMqePKirNLytgGe9Ie/APYAQWTz+I1Q9p3q4vceS
                      c70JGqU90YqbPY1+nz0j9L29y1aSvULxWj3wWQO9jemXPdq+ZT0AkUk86IVlPL46FT361ls9Rm1Z
                      PXDfTTwGPge9YNlyu0A7eryA3Zm6eEHMPPgMk7yS8pC9WKwsPCRZ7zw+bqi9S1jDvRBBWDwZpcw9
                      ZTKyPUADPTuu0kI96vauvSqBTr0AAXW7WSGXPbJCJT0Dn6u9KMiJvc5zir3N+rc9coCwvacqpD09
                      RHS9sEmJO1VQzL3GU1894FA+vYBOWzrAc+W8gQiiPTCS7DvQ8F69kis/PdjJ9rzGlHQ9Qf+SPYB4
                      xjwNZDa9GgRKvTKUFT1AF8I6tJD0vADDjrsAXss7x4tHvZ4qob2HKbI9oTa5PTpwDz39t409gJJn
                      Oj0uwz2wmy+9yF26PLTG4Dy9+sM92vpJPXD2t71QrzW8YNsxvZ+Ftj1KJHc9/Qh7vZl4wD0yYmM9
                      23q2PVhJxr1YBkO8tn54PWp4fT2ZuLI9i8O2vYHOgT2GBaG98CRrveAJkb0py4M91CGfvIanIj2M
                      6ow89EKBvCDG9bsy5lo9Af2JPajrWjxSRgg9YETpOyCBdL0qOWk9aZWhPdsTkz0Bhp49SAyNvZMe
                      vj0io7q9L2ePPRsYob2S46y9GJBjvDGZjD35bZQ9WZW4PbPxMb1s+PK823mLPbQlk7w6PGq9wAz/
                      Ounsoj2gAWg7uQmgPYrSGL12gyA9oOlAvVDxsb1I4o88YFF8O34DRT24RMG9gTGJPZTczjyASKc6
                      4AAAvRJAPD1uJS09NOiLvUIxDz0wknM8GDF7PD7aRj3akaG9Kha3vcy8v7wr0Zq9Sr8EPaP1LL3D
                      pHy9WsBePeyMkTzyeyo9YWOBPQP8ob3QCMs7KBAkvNhknrzghuu7AES/urdEzD0AtKI6WmsbvQBT
                      ib1A8B29YDSFvOAZwrySD0E99VeWPc0auj16xGu9oeuWPbHWjD1mrAq9lInAvGgNVjwoAzm8wIsa
                      vbCzUL2Skhk9ehcyPXCbTDxLabM9gOgpvKB6ATvA6RC9mVa4PVG6vT0K2T09cCS6vciorDydcm+9
                      QgyFvfkslD23syS9OFnvvFUVsb16KyS9EqhnPTQ07TwEXOo8B2+DPcgGgr2o7I28XQCAvVhQ6rzy
                      DmM9wSPFPYiElbyY1ri81zW8vQjItLwnAkW91cOMPVejTb3gFL67eQquPU70IT1RPcc9wj8uPcFQ
                      nD1sAve8y4e+PXJ7u705aqE9ZgB9PbLIYT1SCHQ9d3K0vai2wDyArao7mIyFPMB4K7sAxWQ7IAq8
                      vOEsmT2o7hO80E/AO8qAHD3sLP88WDsivEbjDT0tuFG9g6I6vUxstrxQG9C7GFwcPDfuuL1mXX49
                      t927vQJYeD0CqAA9FPX9vLIYHj2p7rc9piFaPRH+vj3NOBy9tXSYPZkiqD3MAc88ODvEPGuUmr24
                      H/C8OX7CPRBIb7zz6cS9I8dnvei1lL2Y1f+8OulYvTb7B73f+YU9DDXevDCD3TvBn6k9WTXIPW4b
                      FT2mTBE9m6yAPaBWzDvWs2M92OzFvMAkIb0llqa9dkqkvQA8W738/c88zKDzvH2vir3Qb527+nBu
                      vdh9DjwFk7W90HeovRNKjb1tzB+9DOHdPBVqur3noLO9+1+cPRQxljxncS6907+1vaio0LxWFHI9
                      gbO0PS0bJ71Slx09T62jPbDT8zvKv8u9tlsuPZIdFT1gDSu93sI5PTommb1Skam9Q20tvcvImD2L
                      Q7g9VpRtPVoGAj1wcRY8YCKou1LYvL0K+WQ90XCgPdAegrsXnXO9bm8LPT3ijT1kChO92ispvQg5
                      xLyKpm09viwwPdhbZTzNUaI9Wsl6PYpVQr2yXDQ9gIUWOhh4hjxwSiI8DI67vIrdeb3gGKg70sVe
                      PV8zmT2MNZe8M5pIvQGurz1lbo69kcGnPVhG07za2Dw9IFTevLiepbwAbO84zDutPLAHHb1Cx2M9
                      DG3xvG5fUD3yrlE90uszPWDWt7u18YU9OiLHvZG5kT2aLAe9gvl2Pa0VwD0IjIS8eOOuvLDsvjtf
                      nrY9oYmsPU9qzD1w4je9QEzDPEBDErtLXcS9xjEUvSD/xDxQfn29CMq/vas3hT1Csi49XiwePSdE
                      rj0jj5g9mgGxvcDkaL2qLLi9pG2CvYltiz2AKc27dNvYPJwF4Dy4SoA83dIrvaDlpL2LRIQ9yh0G
                      PWN4ab1oy6K8xxXMvfg6wb1YUTm86PcgvADWPTwAyIe82X+aPcIAHD0F76K91zNlvTdcc72om7u9
                      YNHtOySK3zxATaO9XmdUPeKIbD1Yu8W8sInROzB5VbxGT1g9EOmHvRgbmzxZGsc9UFh0vJGLtT0g
                      sle94iuJvQt1jj1wlwK8V9EmvVGmpz0xsKw91H2FPFsijj2idZC9JTnCPdl1sz0AINo6UsNpPXDd
                      AL1LCMO9QGQjPOreLr2f9pE9wt/LvV/Bwr0+Zqu9lIepvNB+rDtdYKE9qLVDPETs/TwAH7o72Mbt
                      vFiWTbw4+IO8giljPctohj20T+o8TeNlvV2LNr3o0Ma85tN7PaAqor04W548/a66PRvhxT0P5I89
                      agVzvXjoj7yzk7I9RUWJPVB6KL1UYI+8fepRvU3/Y72RsMs9cl8bPYq+Kz0oY8C8wp5BPeGIoT2i
                      Zn09kK0XPFAUuTuqmzW9pc2yPQsanj2N8nC9Or4hvdwR0jxBK5c9VYuLPdr4Pb36Oqu9ixHMPVpf
                      w70WK5+9FGmKvCkBgD19iqI9FuwoPYDuOrqgw7k8xikQPZp5Kr1mt6K9hQbLPQwK+zwr6ai9KmqF
                      vZeir72iWk09ilhPvZ3tG72OFF09QC2UPJjEqrzRfb49B0hUvUA+hL0qRx+9hFgPvbQ+zLzKeS49
                      MOPAvUa/Pz2WFgY9QN1ovDDYHbygCRQ75t5+PQymybye/j89bEj8vPH8uT0fZby9N3q+PSKtFT2g
                      nM28GNSIvVzK6DzAzqM6UncnPb9WjD2V3b+9rvs+PeWri71sPhe9+dnEPei6mL1tlqc9laClvTTD
                      t7xmQFY9tNXKPFJbiL0I2M+8UNO4vaD8Jr3n/q89Ezx7vYfMt70Sfnw9+n15vRAAx72QjKe9YK6X
                      vFmTlT0t4pS9BvaDvS2ugT2PGrC9x5prveeTK73qyKK9bYV9vRcNgz2MG5y87wvIvfDRb72t25q9
                      GYmPPWD8oTwKEA09dgkQPaBwpLuocG08FtIkPSMTV704UIK94jYZPZzl9jzhDr49Pj8OPRKaBT0B
                      Q4I9WNwBPJQmpDzgALa7Xnc0PT1SjD3ordy8TpsgPWCAhTtxx689YBf5OzDulzvqiCE949WUvULj
                      WD2KRbi97N2ovH1PbL0215i9+w65veByEb39Tcu9bfi/PQjVxDywyy+9YH0su0DciTyTIj69LXeM
                      vYV9jz1Z1rE9OfDJPTE9pj1QFkM87AOWPL12Pb2blaA9tTyhPUHOqD1AxOC80A6ju76GaD2xjsk9
                      9F2NPGW4rr3DHUC9/T9VvU77Oz2AQGe9mCDEvMg9nDx+8CM9IDaqvBd2oj3MbOM8LqqOvT3Dq70m
                      kVM9PaXJPb+ukT12x0g9iEfCvYCkqbwwCVk8CWSjPSDbKb0Tkqw9SAjDvLJfNT0AjiO7QJCFvEjJ
                      vDzB78I9+IeDvEsyvb16fgG99M4YvV4qTD2GppW9TXc9vaAZnzxr6bG9U8uuPQBMLb1oQp+9ikIJ
                      PQ5YLj0KGEO9D5WOPdC81btDynK94D+6vNtMxL3PJYU9Zbe4PeDQmjt+BZW9SngnveOsyj0SvIS9
                      Z/WVPTxHgr2Sw0g9cEVDPCBOnTt0+/g8VJqTPM2nIr2U99q8qAdmPFSJrLwj5E+9iEy6PGB1Br3x
                      VJo9FE2ivMi7k73QSxi9sLh3PM3HnL3ANg+9v9yvvYD3njtIv8c8wBTeOritwb2LyKs91N6XPOYl
                      MT0mxlo9UnhrPWDv+bskS908bdWOvTf2eb2IoqW80HS7O8LndT27I529DpdnPRC8YryWKz49jp0H
                      PfTb0DxzUDO9AIFWPAD8MbtA6KY8R8xlvRAnG700T468s6ipvfMGYL3S2Uc9zSCiPYWYy72jcaQ9
                      AD8gPFkPkD0RecM9TVZYvYApxLvwBjC8UBi8u2DZSrsA3FS9z6W5vdip5LwAE5K9ADZvuRnfvz1R
                      Z4w9M9y+vX2Xwj1uCyA96K6UPLTn27wi9Dw9Dp5SPViEZrzCjBk90MUSvQTE+zxREac9Rp8WvQgV
                      3bwtjpC9R2mJPejaqL04QYg8jPm0PFDriru4NMs8aVmiPVCssrvQnj28q4vGPQg39LwrVL890ND9
                      uz1Job01/as9Othpvd7JQz1spck8eWnJPaP9pD2tq2q9AOrdO6KqmL0y1Ky9FAOjPFfXbb3mmWg9
                      wHgbvXVwub2dOye94tIPPb+4pz1MkOC8lo6pvSj8BzzyDEM9gNuUOyATJb01Aq+9apxAPWLEdz1L
                      yMG9aLZavErvKb2g88W7IrgePdDcT7zjE7M94D+nu4jKyDyX9ss96QSBPSAlY73XEVe9DaRvvZC+
                      vr0TGkG93fQpvelwqT0D9nS98AhxvdgtVzzY50M8utdQPRoum71YH4a9EnM+PY6vmb3ifT099Q63
                      PUMEt71esWU9fYmBvaRC7zzJdYo98mZSPeCQmjs+mwM9wD0Yu/l7uD14Bpu8zIiavF9cxj0aTmc9
                      wMFUO+iEADxM0qi8tHTjPLFmrD0YtjC8LXUzvRxVCr0+1HA9UEBrvcTB5zzw0yu8CC6QPPnDgD2d
                      T8w9IzvGvYcIiT2YhbW9djYaPbSNhr3rl4g9oF9+u3rWD71eU3o9fXm9PeydqbyS6Im93WuKvRss
                      zD0AIIY7OlF/PQEmoj3oZVi8VPnivGwLxTygWBI70tYHPVjjczw0qe88uBqRvBEtgz2AsMm7AjVE
                      PVhLx7wHhKY9jZy5PWlIvz1YWV88chkbPaxPyzwA+IY6YF3MPIO9jT0wjHa9E7OLPWcacL0mKkM9
                      IzlQvegl1ryAig26UUm5PZBTezwQjlE8xayyPYrqVj0D+J29N4/EvWhvEjxtbDS9IMDVvGn1oT2j
                      VrK9TwCDPYCS9bzydxE971eyPSHfkj2A8J+6gFb7u70fsb2cBhG9gl13Pddwf72Av4c6Q5WyPbI8
                      jr25br09vs19PVSV4zw4jIC9LJKQvIbxE73SZlw9IGz5u9DZgbvmOTw9/YDLvfJZsb0Htre9AOD9
                      OAAdrbsoFju8MaXKPdoJLD3XM0290m5IPZj3tDx8Jvs86NU7vCvKtz1wvBK9EwuWvaIJTT1aIwe9
                      5/hQvYBRgzs9kmm9o3+4vVvxrD2q7A29cq95PdSMgDyoGUY8gEVGvOwMoDzhtac9iHTivEqyRb29
                      4Te9IDO6vWPMYb3jci69gXfFPTFXlD2BH5w9ZYexPU7jbj0MFOE8g8Zhvb27jL30FeK86yHFPe7u
                      Lj3SsXU9ZpWDvTTChr1wu3Y8FcOkvYrVMr01S8M98M+rvQpFNL1yBg098J53vJQ067w3IIg9sgtH
                      PS2gsj1YOf68AGa1PCKKUD0aWGy9vgodPRUSwD2gobK7GtodvaVaoL2ARyO9UAg2vMDdKzvw1CI8
                      qCZMvAPXur0w/p29AOitvXQQ8rzwArW9bs00PTqoYL1E0tY8AVSWPaX6nb0ARfA5APrKO7+sij0Y
                      1DI8w2SSvZAKJTxh0os9pqldPZNrlL2mh4m9TZyZPYgMjDzcl/487ATUPL1ij73CZ629YzxkvW3H
                      W72H/nq9pXGTPS5bDD1AZD47fUe1PYKpOz2sbO28COGwvXImAj2CoJi9hxCgPTYdRT0iLAs9VgIT
                      PYBHVzys1fW8VC7AvNqkBr1FJYs90GgmvLi0wDyRXo497TmqPWxbC73e5Ss9ACx7ORn7yD3SG7m9
                      0BmCOy8chT3qTDm9bmQbPSxlxDw457U8WgcJvYJyib3AFmY71yE3vToASj0yDG49bO2MvD6UDT3d
                      yI49APFivIDiTr1keNg8EFoZPEfCIr32YYu9PX7DPZBIYLwA01g7MrZfPesOlb19Rrc9QtMoPQqn
                      yL3CxFQ9abC0PZ40cD3M8aA8g9OIPXKDcD0R98U9YI6RPKc1xr1gnBO9+PSTvQmAsj0azmk9VEbl
                      vFehf73AZAW7sldRPaW2kL1QNSw8QEGTvKAHxTuYFBu804mPPYMrvb2dmWK9CM74vCyrrbwA/VE6
                      k5yNPVp2pr0hLsk9IW2FPY0xT70AKim5YKMKvdoAfD2w9x88dOfJvNrmJr1tebK9qDlLvNg1g7wN
                      h5U9FNj/vNgVn73ocao8KoV6vWJtBT3aBCs99sJNPVNToz0QzSu9DF/LPHQgsryM2RK9YMyFvILG
                      az362gC9fGjsPKjxEjyUr8M8LdPFvXrxQj2oOrY8mgwOPb0FL73U5Kq8QlhJPTobET2hvoU9Zk8n
                      PWbNlr1sALk82wS7PdCAxL3iw3A9GvEQPRhZPbxuUJm9sCQavcCwwjx3Osm9xJPVPGAXNjuyQpG9
                      jWiuvaFOnz0AVeY5LOTyPM3tcb3gQL07y3aRPWiuibzVkZS9/YF1vaXUp70+FKG9UvEDPTlmuz0Q
                      g8y9wFKIOlR8zDx+hwo9U5NpvdBWzTvqO5q9V908vRrCVj1eY1I9wxJDvXBNbrw0G+U8+hRivWDS
                      +TvIa4I8ftl5PdB677tXypE94Gn5u7Z6Az0gSvG7APn0u2nKyT3vJbq9aqOKvdcCpT3x1MY94EqI
                      u7Npvr2Ad6C7K3CwPdTc8bwFDqE9TTQqvR8rgT2DgHO9UkxmPZqSDD1AZQe8ztOXvQDkurzWYAc9
                      jrIIPTDBYL0gJsk7A1pavRtht71AGU67Q1OwvWBR2btQHrG9uHGYvDtMnj1JzZc9JmOHvcAwJTzs
                      nMy85mUWPYNFw73pBZ89s9ZhvZUdtL1Co3k9EhWivWVryL1Aj2W9ANcAvCJRFD2aFi+9MMI/vfkX
                      jz0g9fm7JFP+PPy06Dy56bA9QB+9PPpND72quS49LfQxvbagFz3YGnk8Ni1wPbKaoL2mbBM9WC2p
                      vczR7Dy6+hm9QIfWOkCxnDxUPtO81BedvPA+MbxqsnS980VkvTpJR70kx9g8OVmoPeYySj0w0aA7
                      1BehPDR++7xpwao9YRi8PepKLr1dp3a97NTUvIt0oj1TUia9ezqoPTiBkrysYti8tDXKvEpLtL2v
                      GY09t9WOPVB/fzyOAIe9a7HGPbuPsD2g0FE7m9GjPYlSwT0caeE8Lv5ZPUVHjb0oX9y8+iQBvXjL
                      grzNkMU9UOaovcWQgz0QyTA86NGYvJDKPr3w4Dc8DcSFvZPpfr0zzVG9kpNkPVpZWT2Yw2k8/DUT
                      vQrmDz3poMU9d55gvSjRArysi4a88iFpPTJxRz3jD1292vxOvUIzFz3qc0C9sCkdPDOGxz1gWo07
                      IsxQPdhPoLz9ooq9HewevYBLkTuNmp89uU+7PbqXOD0VcqY9wbySPZTuhzyCGxQ94HdgvQJxUD3y
                      g0w9SQWGPQVcsD3pipM9CZubPb7ug73AuUU8sFkEPC4CDD0gSLm8AL9Buka8UT3j7Ka9Xxa0vZ6B
                      ID1rrYo9g59+vbQ+7jwmV469EMxhvHqReb2oWt689qBsPRJ4fz1UYoU8TdmZvRYwGb0b0YA9demB
                      vYBAGzyS/wI99FylPPXHy73aQnm9Ezu7vZjEyL0QfmQ8Aj4qPbSOpTxzuLU9l19dvTRBwTz/s7Y9
                      6KVaPOK9ez1M6cu8wPA0vWBRtzx3nSe9zhhQPaswhz3Ifo885ptuPfQ76DwvXqY9MMqZveeixT12
                      PYi9aEf2vETsBL0Iy5C8VGaDvWt/pj000vG84EbFuyL8OT2RJJo9tE/+vMUOyT34/LA8XFf7PLYo
                      Br0HmIw9RWOyvaMQLb3rncQ957RAvSp7Aj0VCLM9QNotvWuikD3oUIS8MEM9vPxx0DxYwyW8DOmI
                      vQBgRbrFgss9qJNaPE14Tb1Hlbg9IvojPbC66jsBR4092WvLPXoEEL0pp6s9bJz+PJoIND3irXI9
                      wuhiPbHewD0I5ee8wn1cPcWskr3prsg9yLe4vAx3oTwaEgU9kKInPDAx+DtVSLE9SrAFvTK2i71N
                      FMI9QTGtPcsHkT1Dv5y90FzLuy8KuT1qsxI9k+acPeg9yryY2ui8dhoXPXJZRz2qkSs9ozO/vTm7
                      sj2jj1y9bKjOPBnCsD0YAAg8rOKjvAdqIL1IIMW8oLuUPM27Ur0xrLE90xA/vSL+Fz1//Zo9psaj
                      vU1GMr1ruIU982civWIuKj24sr29k7mhvTDUpb3YG0K8vQ2YPa5anb2Nj1m9gyW8PczCiL2H31q9
                      KSuPPR3Og71gmso7YBXDvLj6vTxq+Q89GFnHvLa0Dz1059K8WE69PFB+8Duw2X48wNZGvUB6DL0d
                      8Zk9emS5vX+HyL3nqrG9KCacPIrmI70BL4g9pDoVvVqiNz1cs848sI0BPJS9mLwazby9s5CVvbbe
                      JT07l5Q9LFeHvcNxer1ojig8edvBPZZAj71ZaLk9MJKGvalYpj3JZZU9XkNkPSwEuDw3Cbu9jspe
                      PczpgTyYD0+8R4uoPTrLBL3klfw8IhU/PSomOT3ya0g9Hg0+PeLrUD1jcia9ACjUuTSj6DxY7Xe8
                      87jIPcCzGb1C/W09kGYNvDTrwrwAXI+9mjIjPW34nj0i6309AE2nPFYzEz3g/km9nafHvVD2D7wY
                      3568x4llvbYjob1NzGS92PeDPMrRm720r9888idMPQzGDb00J9k8ZXqpPR8yvT2vWpM9PqttPdLG
                      vr0oOKO9yAHkvDYeRD3opsc8qwuxvdrZIL1Iz729O8LEvUoWLz0D5rW9P3ehPUjz9bw3cMy9Anow
                      PSZFqL3ARI88mDSrPABoj7g9frY92tF/Pdgt6Lx0Lri8YGmqvDaaGT13Mcc9GEeQPK2Wvz2gkay9
                      1kcAvVSkhrxwJ8a9lsSDvXBYF70gwN27khtGPSoXk70X+ba9LKfvPGqbKj0Kw1w9QmgTPZgZxbwL
                      hrC9OLbpvCNDmr1MNM68elk3Pa2tsj0FRJ+9Ltt1PexysDyaZTA93VGZPeBehrsNH8g9fidJPWvp
                      oL3qDFK96Mp7vOJiFD3g42u9TTGoPWi4WTwwclk87JKnvBKHAz0zLHO9lCj3PFSc/zzUore8NAmX
                      vAG/qz24kqG9grwDPRvtkr0l/Y29apUwvUBcW70gVtS7t1yyPTO5f72AWCo8h1LGPS38a70n/6k9
                      2MjKPP8Bvj1iHHQ9cB+zvfnuij2zEI497eGPPaa6Nj13z3S9BzHHPaikVzwCdjg9R+mzPUgVq7x2
                      jXI9L/GZPWzRtjyOyTY9ywiavWVcsr3mX3g9Qot/PQ6CdT0/6749afO6Pfj42rzpd8Q9m+WZPezc
                      4jw9t4+9IAuxPABtlLkKzgq91S+DPRDkar2C1K+9+SW7PSLveD2zxIs97jBCPbrGQj0Tu5a9Baie
                      Pad1u70ABja7SIy/vIDprjzQDWe9grISPZBMUbzBQok9fQW5vSsRlz1YZaO8gj68vZglbTz932O9
                      MYmZPU2/Vb3TA3e9cI6DvenPwT2sJuc8P9uyPf6hcD2gLvO8tP68PCgjmr0NDW693hGIvc0Yjj1Z
                      /5U9Z8WqPWNRlj1eP349bxq+vfG9xj1D6Hq9YWGKPWTD0TxY+tq8k3GqPSy6w7wnD7G9vipBPUA/
                      n73jwWa9r4STPeB9mrzcHw+90BWduxp8mb2iJZ69HPD3PJMOor0g8229nCeGvaotEj3qrDw9M4kt
                      vaKUtb1wAie9Vq2KvT7nYj0zBzq9SwiiPdCkSb0AbSc7M5GyvXrbCL1REoQ90L41vVOslr27TrU9
                      GTfIPexEpTzGtZK96mUcPXRv6Lw0o4y9vklUPaguLjwAAyW7wELevIw/mjwiZhc9KIKuvKd2U73p
                      aKY9DOjmPJYGMD0C9TE9iyrCPQReF70qtVM9GdCqPcCk2bxgxpe8bkNiPcl2mT1OVBQ9QL0WPJPo
                      gj09rxu9YE2QO5BnG70UV6O8yzvJPaD9ejsCLaS9mNKyvVbCbT0AygK7DQy2vQcGjz2IDPK8S6nF
                      vQzxmDzDS0e9/CQLvUbuiL3hTY89BX7DPVIQnL2Aa4s7U0SyvYO5UL1MkJ884HF5veCGibzUf9e8
                      yaeaPQobob0AJJe6GipFPaLJID0s2KM8MIRFvZhVEbxq9TS9IUHAPfMoYr1SRbu9/If6PBKpOj31
                      YKi9hQeNvX88wD1dVCy9oFlJvYy+o7xHsbU9AOkkunOrRr0DW409CuCQvaAlmrwA7DK9LRSWvajw
                      BDyQlGI8QU/EPRfRvj1JyZg9lUmivRVerT3o+B28M+W5PeCRmjviHkM9UKmDu1ChHr1oDG68YiI7
                      PU5rm70UJL+8cPdOvUPgML2kGtY82L5yvABtmzkBf8U9AH89PGC7F72W0BK9yqA1vd71dD0OW2Q9
                      h16+PQA8cjksmbU8mLzGvIDUE73dYSu9IucIPWJWWD2xX8E9QMhmO9Cwc72VQJm93pBzPTmhiz2S
                      REg9Ivy7vWjYJjwiAk89TpVWPY4uIz0icm892HFOvPm4rT1Dtlq9YL6gPNc/zD1AJq88zmAEPZ7x
                      qb0hDaE9Pe9TvUtQmb2HfVq9AIOquezH6Lw9ECe9UMjBvS6jKj0K/R09IjR9PWBnibz4TLq84By5
                      Ozgbwzxtvay9ajmLvR9zsD2jr7k9NvRhPWdqUL3IEpu8GvQwvaLhHD0FZLG9tDD5vO2Wcr2A7vW7
                      AOkzPOFolz2iqyU9+sdQvdBdVDyg0C67cwNHvTPRPb0j63+9f3aRPRI8LT3kqNA8B8NyvY3gT70K
                      GzU9yiC4vfpFt72zeaM9LsIwPUAAIb0jv7G9RrmUvbLtQj10L7E8KKBbPAbGIj0jnpM9vYWyPdgu
                      ZDw2Q2E9GLBNPCbqfj1AOEy8Gqgive1Dvj0d/Ti90FBkPMmXlz0MOIq9CdGJPWp1gr1qy2+9Uo9l
                      PWIqVz39OCS9AM7Ouuo4TD0oxCE8UBAOvdEEpD2jHbk9fg53PcARLb0IobC89scAvccZkz0GoQ29
                      VHOlvNKcAD2u+nE9QKCivAheuDzlVJ49da2IvXAqfzyrTrY9A8LBvZBpbr0YYyU8ARWHPYBGxrrM
                      erO8oDKqvFQjm7yCEnQ9TTPHvUAymLzG0Eo9O6epvf0CkL1kQwW9gLUsOuB057wDua+97IyJvbAx
                      OjzaXYa9CSC6PcAccLu6Abm9V82gPQCSrbkHIXm944CFPb0alD2+/U49uHeCPNofFj2Vta89Paar
                      PfI7Pz2DP7Y942AdvTOLRL1gAzw7wthaPUxchL0pWYE94G9nvda7C70aDDq98uEwPRpBYT0QEWw8
                      BrOlvb15mz38cNw8zXmjPb6JED1WnxY9k72OPatDrj1LarA9V9yhPU6Rmr1WjKe9VTOlPcDaaDwG
                      TQq9/m6SvcMpyD3msKu9842BPeDtt72dkh+9gC0wuloGab3H7m69RXajvdgSGDyeJWA9pW60vcKs
                      ez1Awu685LECvYA9ULracms9p4F6vfIOFz0KoWO9jDmmvCDAsjxgf7A7QuMmPYIjWT2jTrk9koIh
                      PSsgmr1hRJk9jA+bvHTTp7xDILS9AO5kO1VJxL2AWoc70EQtPMDuB72gi7u8oB4evXrhq70FabI9
                      ApnKvVbDo70z/Mk99U+5Pd3Mpj3oY8y8ZDfkPGrpZz2AF3Y8LTJnvZBLwL0TvV29AjplPaMZur2J
                      rbs9zNS9vEKyHD2SI009pPL8PPhN2LwVEoK9SjKkvfSN1Lz66Q099iA9PfWmur2BpoA9+KzbvF5q
                      VD09tpi9WBTWvH0VZ724+vC8Rr6Svd0wPL2bOaY9e8/BPWUVx73tGIi9QExjO4dPYr2Odzc9GJL7
                      vMDGzjrpebM9gJpDumA+mztsmwu9oJ6TPFpodL0YAxO8AEiRvIEsyj3BHqQ9cx+lPbEmwz1yIAY9
                      t6JMvdfJTr1SxX09KlwUvfL/Az1UPxm9VSu2vfczjT3KfGC9PbEdveiNOTwEv4u9kGhZPOkqjT23
                      aMa9gj8dPfVKkL3QMTK8CTeGPcAZp7zX1yO9LEuhPMhfvb3+0lM9gDCjuklZiD2Ah4u9WvhTvUDz
                      zrzA1zI7Xh6svSpOaD2m7Qw9QAFju7YKYD2AK7g8TPLxPHA8ebwyfh09Jt1APeC4lzywsBi9AAaT
                      OcABY7xr27A9aDMEPECbv7o58Y09f5WtveibhjyGjhI9PrsnPWnaoj3THJk9ue+6PQBhSzxGKVY9
                      INTIvZb3Bj2dm5K9QKravKUWmj1gCRk7ACEuvdiawbz4Ba08oLNEO5ZsIz3Rg5A9d94pvQD9xr27
                      N5C9mk9VPWQU6Dyrc709YP9Ku0AUvbweOlY9wPanPHOcGr3q1z69aH6cPIzL4Dz4Z6A8bHbJvCCn
                      jbxRQLQ9wM+NvbkXxz1m/EU9OQ6cPbyw3zxztkS9mky5vajUfDw7qaU9fOHtPJ7RGD1BMYw9C23I
                      PTSx2rziMX890hgCPSvJiz0i34K9yrxxvSBFrL2OyTQ9UH3NO4xkCL20SLG8X0+nPcbWTj1HGKU9
                      2fWXPYSP0DwaSlU9LgEBPViOy7xQ0ey7qGHJPCwGj7zetw4949WNvZAGir0IZLI8BFyFvXJGWj0g
                      kKu8Qhp7PTQx8zzPKpA9faZ6vVWbgj0Z7Jk97SA8vdJmAz3ArP+68XSrPX76Nz1DjJe9bUCCvUAu
                      Nr2SKwU9pT+evYh0wb2A/by6ptxSPcHGmT3uG4W95eCNPcBFbjsGeUc9q7jLvbBTVryXeVS9JJXZ
                      PBAcrb0JOIc9ckgCPTfAnj1otqQ8TQaLPcBdMrwOp4W9Hh0NPduInb3sUoM8cDYqvHONl71b2JK9
                      gPKwPF+wiT2wlfA7+3irvfBJLLwAEpY8gtFnPQ2dWb1pF509UDLsOxHqjz1gpHW7gIo9uj1jnT0n
                      eEO9ad6OPQBeVztFpMo9DFPRvHZ8NT0AYUY8AOzKuONOmb1Bl6I9GrMsvQwHn7w6uGU9W+euPQAM
                      x7pmFFI9gKyTvUvGgj3MtYC84IHEOxZaor1hQIA9lMTXPNJrPT3ArtW8AABqPIAkEr2iElI96LSa
                      vSsFgj0qojW9imgcvW3Xmb3AaX08PWafPVTh07wkU/U8xQHAPQJ8Hz2AbZY80G29uwrpu71gyk+9
                      AoYRPXV0l71xLrs9E9OXvZ1Wgb3yfEA9lOu1PDFRnz2sB4G9806IPb9ewj2gsWi90C98vHFMxD1R
                      zqk9I7u8PRpkZb3owI88TbmjPZ0Vrr323pm9gha9vRjwkbwdbCW9eC6nPIkFsD08dIa9CXKTPcrg
                      vr0auzy9zjcaPfTAhTxJ/Zo9XfmHvY3zWr3ICcW8kh9yPdy6+DxqQgc9zNDdPNC+vr1cQfg8QD50
                      vQBc9rvHgiG9GDh3PBErnD2IjYA8OH2LPNJXRz1awEC9gMPVOnlFlD1TfjK9nDfuPFMNxj2mexg9
                      6qmpvcRbEL1NVps9NZGePXC0E70nV8w9KmJCPTn9uz39ToG9NYLDPfe3Vr0buaY9sQTKPTakFT2C
                      rsG9wuNuPRoHVb2ACfc7r6S8PcDDTDtg0CW7YhcCPUMiyr3no8y9GPYLPP23W73AuN+8KO40vLFB
                      hz3k4eE8OALevPrjXz2WAig9C3Smvcvnkb00roA8tDS/PNBXgb07OI8956BOvTNujT1g/7k85/0g
                      vQLmIT1KKF69gESbO5juDTxwfi88sd6LPQOFnb0AHNI6sxAhvSRf1TxFscm9w7W6PUjmur1ujnc9
                      XoU9PYDFxbqtxaQ90a+YPdiXob2BMps9FCTnPGNIhz2wyaQ7QkVgPWVxm729qHG9gMzlu1u+jj0u
                      9Za9uQG+PT7ggb0THJe9QMFmvYws67wANPs6YkR3Pdp6HD0Fd7I9aBRqPLMgRb2A7Ju6QNB0u2xV
                      9DyiFR09WE7JvZKqh71QVKY7F1o3va73q73jO3u9ZGALvWjjhzyAyK27NNvTvFP4cb20+vo81a6r
                      PVDqJryIFY28AMQBOybWiL3aSJW9gZWPPTTb+zzo9hC8sKjzu4t9lj0ANUu6HJuAvbTykTyVT529
                      DIOKPCFqyj16RKi9ukQpvUACjr1ylRU9aXq7PQEItz3AKki90O1QPNBysr0grB29hgc7PT0btr0D
                      AyO9+4izPbAPwL1ebnI9fs9LPW/dvD3CtHI9llcYPQdhYb0w3Wm9eo1JPXbFOz0R36w9Cc3BPUBB
                      RTzzuog9Ksh9vRKtRT3BoaU94BnOu4DBhzw48oS91JOHvahqub2qp6W9tsMCva82w73A6Um7Xrlf
                      PbjMxjzV+a69twjEvaUrub3w95m9Ai49PWfyG73Exeo8FoCCvYzT/bwsgrQ8Eo9WPYAZnrveJE89
                      N8qzvdRB7rzQ6A48T9vFPQBQnTsQrwC9xZGvvYjpjryPqcy92GkJPHbJl72AwpE7cvojPT8Esz34
                      jpe8YO4fO4fxgz2dYsa9gND+u+IlID1W2KO9EocdPVYjFj2vp7A9qMt0PDAl+rum3F49YEZdu4eC
                      v72S/p69CPC5vFVYqb2nucq9kChGvQUCyD1Pf7+9CBaRPPxogL0n5pU9lk8DPV4EHD1opiG8OdiX
                      PQDbqjn9/Jg98PpdPH6UTz3dhIQ9YI7MPPn8hz3Aw3c7sElSPCjnRDzqHRy9uGDavPAWRzzAa1W8
                      15KwvbcBUL0y/ng9LI6jPBrrf71gEmS9bqtdPcgp3LykwdE8KmZSvQUgvb2RyJI9TY1IvbOHdL3y
                      eS094Nawu3yX1zxJd589qJXJvXhGlTxhLKM9e6jDvVhzRLw/T7E9yB7JPNDznLtN+JQ9DuVcPdpz
                      br1jmZI9xcaMvdD1Ab0sP6q8AAUzO4CiEDwAR1G8MxA3vUqVWT1QAjS8XGvcPCBH5DsQUHq9sM0M
                      vFLJzL3QW0E8QLHJuiwP0ryUcYG8cK98vQcJH73pjJk9QswWPZeXOr2Hk1y9UCzLvfh23byP6589
                      oHyPvexptby8EPc8QCYsPHr/Kr0AJBK6bOPXPDJgGD3Nc3q9FucwPZHoxD0a1ng9I4fLvdVcnj36
                      1rG9w9Qpve1RVr1mVxM9yNfcvK3zhD0Nj0O9Hu8LPfvfyr3Njyy9aHGcPI8Yyb2GYwK9kk9JPa0i
                      Xb0Arwc8B7aWPe39QL1XV5M9Y4hdvQqNML30ApA84r+Gvbelwj18dvY8yKGEvFWLj70AcdO8Yp2p
                      vbBTwTsG1U09MlhAPT3Foj2sGvc8Bh0ePQxx3Dzd4ri9lvI8PR1iuz1FiLs9gI5VuoAGGDyWfBO9
                      JIgIvQKfYj2XqD69ozwhvTdcqz2ArBE8xOH+PNO9Rb3bG8u96FGTPANba704r8m8W03APX94rD0x
                      58M9SrswvfB5tL2QAUK8uaK3PUA3/rwS/629IJbfvMEroT3pssA9GvNjvc1yqj2xFoI95K/oPDp4
                      GL2CKiU9YPRsuxHelj2yIBI94IG5vanHrT0bm8q9oNqBvZ61i72Yc5a96vJgPQgflTxXayW9KEVo
                      vPq3aL2+xz49AE3vuUqBdT3iKzQ9DMm1vN0/xL1bZcu9sQiiPfjylzwXNx69K83JvSj9jL1dvIi9
                      kfK2PSijPDwY1KG9YI8/vQBUfDkTjbC92BL+vJA1MLwwyMk7UMzLvVAiWby1BJw9ETq1PYlhvT3Q
                      dtE7u4amvRUilD1qSau9qV3CPdOEQr3AbDU7gKljPCjZeDxGzWU9jW+HPcH2rT3AFSG9p/S4vU9b
                      tb1oa248APISvYdour0Se5y9Uo0CPQ3dsD0A+505FT6dvbJux73VyYY9Pt1dPWPoTL1Ye548zbZj
                      vSVPxD0YzZi95Q2IPV7ffD1CA6u98S7KPeqAgr3PIcY91x/GvTRisTyuR6S9nBUEvaYJRT1jnao9
                      itlKvQA6LDmHgZU9QPNuvGCtRjugEIA70G0EvFuCrb21/5C9CLTJPEheoDxRCqU9CRuEPSjyrL1B
                      K8I9eJzVvOlKxz2N6Ik9Z40nvb30lb2Dk8c9buU+PXIZuL0AuuW5EHILvLAaEzw/6rS9gN1eul1n
                      mD03By69ojfEvXGdwT2B6IQ9KHJ9vG3qTb0ruKA9x2mEPSPZtb0FZ5K9apkcvaCavzzigK69cGln
                      vRJLCD3UJ9c8TdfDPXu6mj3TErG9tJ2tvD6VOD2RL4c9gEtIvSu2gz36CLu9YJgFu/OBN73wfFO8
                      LEO2vFMbOr3Ym7296C2IPBLURD0gQY27t1STPUA2kjwCzR89BQmlPccHLL3MUKC8gODYu4JnaT1J
                      WoU9GilxvYqddb1pl7Y9DGmrPIJHhr3MCN28DyqJPXg047zNaKG9ICjFO+LBk71Qdce9ZJ71PI5T
                      dz29L4o97W6fPWgOjzy3DF69CzjDvfzcgL1AvRy8aLh8vMDNUb3A4hy9aJBmPP2zT724vdS8UMJg
                      vCy2u7ygRYs7OrN/PVHIpz2PDIc9WqZAvSzYsrwDaLu9IcyTPQDBM7w0YRm9WhAuvf1JTL3aWDG9
                      VAfCvCC4jbuat7W9Vm9ZPdgRHbwza0e9b1LFvTgMo7xsrrK8lFX6vCarhL2gat278xmlvcrZPD2w
                      X/Q7tGCsvFmRiD1vvLE92tpfvVrXvL2ojZA8QiEQPXqncT0DyIs9Q9Y2vZk9wz1Wt1Y9sMYrvbAu
                      rr2CoGc90ylSvZiJKTxy2289QgdbPa6Skr3Zsa89cOVkPPwt/jxv7r890mopPfhG1rxoGMi8UCt7
                      PNc3yT1Cm769+E+EPFdeXL0Amgw8TBmEvWCnUDvjccK9CuAyPbI9eD3QSxK8XWzDPVHSqT1oUgM8
                      1QeKvRU0n70ZvLI9MGSavcoPFD23mEW9g1ylPfJhDD2gYWW7iJDzvBDIlr3UL+C82FQdPJj8G7yg
                      Pze97IGhvFoFQz3SmDk9AIh1vV/Ir73oepO8daq/PQD3Db170LY9qjl+PTKIWT2Wgpe96PlVPEAU
                      czy4Bq28tJ+KvTetwT3ocYC9AUajPZ0biL2SS1092t8zPYfuVL1y1BE9EDdOvICui7qo9ty8HIgT
                      vSK1BD3gipO8BfycPfNXd73DKGK9mJIaPID2pbx+XkQ94F+AvYFNuT2Qtj29fjwGPWg2wr2QuH69
                      RdCQPQAGCzuT9749+ptrvQwQsLyoFRs8EVevPbbpFz0Cv1w9NY6ovfcvZ73ysD49eoZEvQDUc7q6
                      bVs9w+EfvcBFB7ufqsa98x6ZPWDOGDsl6bY9GiJavSDZl715iKQ9W62GPYCVJzxwX2e86DdhPJpZ
                      Yz0oFGA8TPfAPCFUsj0zLoI95+bFPUrKOb1+aDA9RZaWPTjNrrwAQBG5ef+zPZQGmDyZhak9iXCy
                      Pcopgr3C2GU9+y27vYMMHr2xAqU9EuVqPWrXR72hJcw9iklbvaL7Nz2nQZU9+Ue5PdAdbLw2TWo9
                      ykpNPaIyQz1zn529o6AfvdIyeT0AyLI5LbCYPUgcijzF+aq9U+gdvXfNuz1jzWS9mNcLPEBMSbyY
                      xAq8wLo4uz4nVz0sbRK9nVqIvTTRubw/Sse9APP5vDQR1rxNf3a99mGQvWjmyLxxNKQ9aIpHPPNy
                      Xr0JJKo9SgVEvcNvnz1g69678ueFvTuWjz0bdLK90PRUvCxgFb2inGU9aJY6PFv+rr1sW708Mm8b
                      PRB5ODzAIC+9YkSFvSj1nLwCg2M9p0OoPWgoKrzAise9fahUvSyl3zzQXzu8AJc7vWChbbtJOqI9
                      4kFJPTBtC7whdsQ9IXrFPVRNrDy+7Rc9ZaOOvXAWyL1lPoK9gCunvAK4rr0GiVs98FQwvPhaoLxs
                      obw8LX8yvVJxbj1gOOo70pJqPTVch71Vsr895IQDvUCioTwdlb29ZA+BvWWLhL2gmcE7sCI+vSzO
                      Cb1qfWM9aB4SvKdPjT0QGTM8jT+gvYCbnLyApOm6DViPPcw497zJ1609L8DKvTWriL2O6yQ9rYiY
                      PZg5hb0D4Uq9EMM9vADlsTvQQKY7bYmRPY7OIz17kJ+9EkJLPQ72Bj02Z6a9jHThvMB6OL3ho7o9
                      xGvfPPB2Nb2qXVW9OxTKPTeMfr1zvES91LXcvGwk0TwFbKs9vGj8PADHk71S3QU90l5cPcCiBTw1
                      FJu9onaCvUoOeD1p4cM9Fj1FPTqBAj0qH6O90G9HvZf1IL2ws6Y72UebPamJxT2Y9Uu8Ky2VPRFc
                      iT25OLg9kxRWvVSpxLzQeb67rZW9verVV72CdLy9av1+PRe+pj01HZy90LBKvFmWkz005Kk8AJJj
                      vBLJHT3KURy9NJmdPM0jzD0yZDc9SIK8vEfXVL3WvGs9gIqDvcXsnb2Mqs48VI0QvYx66bxuIlA9
                      msuCvT3VHr0Ak+G8
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTUzNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzU3MDYwNTUzNnEBYS5kAAAAAAAAAIQ7Gb2d+rm9FlMZvdgG2bzYHI28oeGwPakCrD3c/IW9
                      zhVzPSbsTD35m4A9mCWaPL0AtL3XPMy9kbe5PZcCO72UW4g85QWVvTKkXD2swvc8YFLlu3ZrAz3A
                      N1O7VT6VvcCPvb1A9zK9B5sZvY1Ac70NqLU9mPVPvLOOU72dusW9EL1SvTKvOT0a/3m9ZcyFvQHH
                      mj02QQ69vldRPTerwb3pTYU9kEJ2PEBP/bpYiB28SKauPMegvz0ZFZk9FrArPQEYvj1y3FA9AQWh
                      PYDoVr1/HYs9DR90vdKefT0GCRW9hvt1PS1rhr0g88q7gFJ4PCAYQ71ghJq7c04mvcz1lzx5wao9
                      2swcvRphLL2BUpA9UAsoPEMrhD3gm5O7DGvrPLMkwb0Atde8xvgAPb7BXj0N0nm9FGmqvGCqYr32
                      x4W9QgsoPQCUDrnV6aE9rhknPaDuozur05e9ANpNu2Dtqr1WWTA90iKMvUpWRj3XVne9LZWZPSdR
                      sz3C/lA9cQS6PSrcYz161p696X29PWDlsb0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTYxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzU3MDYwNTYxNnEBYS5kAAAAAAAAAKX6ub1x1I49cvlPPcGMjD1LMam9UDpSvKMQI71rkJo9
                      mNnEvZoTor1Y04W8ec6EPfH5iT2KCC+9sIN2vYgMlTyXJZo96uk0PSmBkz0O5Gw9nyGHPTKoUj2Q
                      0o29J/uHPQFcrj1zW1K9vkUrPfpKZD2jBhu9Qv+6vU9Crj2/vba9ape3vdDImbu4jt28bsk2PVdh
                      lD0jQYE9FiGAvbrzCz07aaW9OfKEPWAvu7vWUJq9gYC8PROko73QBXG8M3jDvZwziL3QVSe9EZuy
                      PdWgmb3alms9d9G4vSv/tb0AAaA7IDS4O5LMDz1nR1e9QGw3PN3jf71i03U9gJdzPL+Bkz235Ee9
                      8q1TPTvvgz2EG9M8bUopvcCSIjsw93K8LZ+WPYC/lDpYYlq8RXWHPToiMb0oP9u8SuJLvVePZb19
                      vKW9fkQcPX5RVj3Ur+e8TR5rvd4rRD1+qF09N10cvZ5/YT1wice9lmY7PYfmgz14NsW89CC/POGd
                      wD2i2g09TlIXPVg2FDy0oNm88WiIPeqMXT0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzU3MDYwNTY5NnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzU3MDYwNTY5NnEBYS4BAAAAAAAAABobfj0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        bdsnLsSRwCrEnQEpxJ0BKWjRTCu4L+kp7Q/LJu0Pyybp3h8wyKG7LGd2Yi5ndmIu6d4fMMihuyxn
        dmIuZ3ZiLpDX/zOa7gou/htwLP4bcCwEXocvP8G3Km9QfipvUH4ql2YENNyzCzF0E64zdBOuM5dm
        BDTcswsxdBOuM3QTrjM5t4Y0gHG7LkKB4y5CgeMu33e1MYBQTC1yEvIrchLyK2L0QTUyCCwwrtXG
        Mq7VxjJi9EE1MggsMK7VxjKu1cYyObeGNIBxuy5CgeMuQoHjLt93tTGAUEwtchLyK3IS8iti9EE1
        MggsMK7VxjKu1cYyYvRBNTIILDCu1cYyrtXGMvG+kDdtV/w6T3O7PE9zuzw7QG06VmPQO2NN7z5j
        Te8+CPqXNap9ATlFk1Y3RZNWNwj6lzWqfQE5RZNWN0WTVjdB770xouGuNzJhSjkyYUo5mnwzNhk5
        BDteEz87XhM/OxuCtzG06q00KZMLMimTCzIbgrcxtOqtNCmTCzIpkwsy1Vo0MQWfATeUl9U2lJfV
        Np7jBTTp1W04Ib3IOSG9yDkOinowsDuNNeZj9DLmY/QyDop6MLA7jTXmY/Qy5mP0MtVaNDEFnwE3
        lJfVNpSX1Tae4wU06dVtOCG9yDkhvcg5Dop6MLA7jTXmY/Qy5mP0Mg6KejCwO4015mP0MuZj9DI=
