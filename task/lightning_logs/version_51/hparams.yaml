N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 100
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzIzMnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMzMTIyMTcyMzJxAWEuhAMAAAAAAABg35o9uig9Ps4oAT6gvUo89KmivsCusr2GkoC+CNwC
                      vYzvgj2A5g07pTiJPgA2VbqwGce9Wnd5PkDGbL2o9iS+YECFvohTSr1UR9w9wFcuvYj7eL10r5S9
                      Lh07PlGkpD4k/ZU9ay6JPgsbpL5zIwO+5K6qPbJhCz5CCUY+likXPlA1kj06kyE+QGzcu/lViz7S
                      bWE+1kGUvhxqvr0l958+fG2fvUYCCj6KSQo+YwWTvuDQXr1WARY+eH4lPTpocz4mQG4+kCS9POLd
                      bT4mmx8+thK1vawL+b349QI+JHGCvQY8Ij7Loos+G4tVvmzWl75A2Ke91c+nPsaVZ7725FK+KKJg
                      PTB9iTyQ5oo8AnBiPlCnv70A4968OtNoPtSfj70vtZ++wud4PtDrAT4lG6k+OC5IvbMrqj4F140+
                      wG8SPn6LED61OI0+a+0nvtKCOT4AqmO8QNfbuya/ND4y4js+gIjJvTtyK77zGZS+X2mdvhpfQj46
                      R08+Fn7MvUjybr0UMew94IoXvfFPlj4LzDi+AKGpPcozpb5ejiS+m4Onvhw5sL3jJEO+DGyCPSCK
                      nL3LPia+VkU5vlx0kr1AZ1A9QPBYvbYw972Uzou+vihSPoWxnz5s99W9DlVXPhtzU77Y9ym97qOd
                      vjErjj7QO588gPkVuyhjqr6XjKa+QCzRPP97pL5gKxQ94OZxPAhrCr1gqmW8qGo3vbVLlz7wcJ29
                      O09UvjBxoDwAP9c9RkEPPnDv3D0Ssnk+yAs7vQ6JSr7AqQW+MIqoPcBVm77IrhG+YjM0PnPfPb6f
                      d52+grYhPrvLHb77paA+QCiWvnN0F74gd6i+KsUmPhdqhj4xc4M+Hg4lPurAKj7qJns+E5MwvmC2
                      aj12xGw+wHaSu+ZADT6eGhS+ANuRPUilXb1aXV4+QHAtvawp6b1YvRs9ADCFvVxqmj035o8+snFH
                      PgCscDvB26A+68KQvuysuL3MeJk9SMVvvUBYJL2AGwU8TbOfPujRZr2kddE9YHmOvfvUjj7oe2S9
                      D7iVvmBAU7xMYKw9JgfWvQBQRTrQVWy+hM+dvRwdoT3M7Ki9JLTEPVDVu71W23I+RPLmPRznwT3I
                      4gk9BAanviOWgz7woNO9ppTFvUBhdT2C4pW+Lv1kPtjJCb5cYIk9EHu7vI4adj7TXBy+B8iXvtr7
                      MD5wnbM8KKl3vgDjWr5chN+9X6OVPowQjL7APnK+WmlqPmt5Xr4Axz08llxcvoCcBb4Q7ki+DXWq
                      PoblAT7PBJ4+o/EXviMxZr7432W9kHtlvoouHT6iU2U+tMWnvbjUE74AvGE7kCDxPJ8dhz6+3Fy+
                      OzkXvnDZrj0mMR8+E1MUvtwphr2jvYy+hk6AvjibR7092o8+xFOhPfZKFL6rHDW+ZrAxviqoj75L
                      EiO+AKmEusAr+z3qPoa+27hXvgY8770az34+/tkPvkBSDD6bx12+njkcviZ2Fz4Nx4Y+mn2TvmBx
                      JTwLnha+gKa9vEC7+bvejGO+il2pvsAa0T00BY692FRePRINCT7A+su7oCRhvQNxLb7EwJa+8GaA
                      vjkWpD4AjvO9jYGaPiDNED5c4LI9MaCqPtjYK76wFsw8mNM5vuBdFD5GQ/C9F5+kvp4TkL6Oalk+
                      GKFivXLlLj42Sx2+7V2gPgOTBr79j4Q+iDMYPRIMhL49jI0+aOp8vgC5hLplTJs+JukAPgBUwzyE
                      OPo9vFTjPdrMAz5sg9s9euuevpGNhz4mqWs+PSeTPp+AqD4WJ7y9lB+VPcBtdb5QD94929oxvsCc
                      vz3Agu+9ACOjPfIrbD5mBZe++ikoPhR/7z0TLRK+PllovoB3yb2wj/68FmRcvpr3VD5G1IK+A1lL
                      vkKCQT75C4s+QKP2vTxC6j3mZ4e+wBgIPmD5Oz37c6K+HGH6vUA0lb0q0jY+C1qbvqgeOj3wU22+
                      0OS3PADhuj3FvoU+tp+uvRGflT4UNpW+Cq40PoIvWj54sou+TPvkPXym2j3opTi+Ym1kPmjDcT0Y
                      eBW+wBZnPUmlmj58x+q9wfCbPiaz/r3gvAM88GDxvbTppb0OO4u+DHuDveKULz524Zy+vFSIPXjG
                      fL5dOY0+sNuBvPPPQ75Mre693SqLPugoND3BPqg+tgG1vSj9FD7EmKS9GEoTvg6gKT6AqsY9t4yS
                      viBMBb5CezI+wCnAuzX/hz7YBke9R7WDPqaALb60LsA9liEWvjLQMD76fT8+ZvtaPkLdKj7hx6E+
                      zIOUvkALljyAUy+8JtklPrILGj6A2L08EBqNvmpvfT4gK8W9gM5zPMQvhD0GxtW9wCZKvoLeLz5b
                      YCy+W/EKvuJ5OT4r6aS+PE3cPUCvVr4AgFi3wA1RvQDPpL4/E4++BLehvUTwgj2VuYc+7S2VPs76
                      Lb77slW+hn+2vUNLkT7q12s+ZtUEvuC9LT3g1fu9mAwsPcuWmr52dCe+7qtrPmbUFj4j7j6+EgxJ
                      Pv/Wlr5BRag++PdxvQ6WAj6SKWo+WbOkPgnpnz5qAT4+qKwOvs6pJr5+RTW+8POFPFhvBr6l1JM+
                      W79avu6Ffz5sDvu98zKhPraow7221Wu+XnKhvus8Lb6I+JC+imRIPpRqtj106ak93jgyvtBAg72f
                      Pou+iEEWvqATi70QOuK9Bk4uvtskX74Bl48+NkL+vWZHF76LPag+kOmfPW71nL4mRci9YPoFvH4B
                      JL5A2Y89Uol+PmKSWT4w/ME8OpCUvtxD0L30lZe94D4/vCa7AD5OC1w+kMOWvRCxeb46O2Y+6Do6
                      PSA+9D0a8Tk+HgkyviSdiL7lDqM+AAJbuwOgWr4Y+Wa+nC3BvYT8kT2SCQI+2NhdvqaPUD6iAmc+
                      PkYnvt5UVT5gcHE8K7yEPt3qkz52kcm9umN3Pg4gVT5+pzK+8NuyvNieWj2nXJw+ACW8uowGmL01
                      n6o+w8JPvhgicr1Mpai9ADvFvdCUt70bLYQ+4OU3PB36hz5Axou9FXSVPjh8or644nE98CtMvhTv
                      yT2w8WG+CFhMvf6FQz6A0V091zuDvimghz6ATSa9U6M4vsDY4r28aoy90FrpvV5vHr5Q7aS+Ts92
                      ProQaj56rmQ+KgmPvupYQD579KA+myacvp7ON76mXWg+3ldNvlpsIj7weYC9ro9Hvo4yGT4oFVe+
                      a44fvhC7pbxAUBK+rLeaPe/VgL6UgIK+V+yWviAEDryETuc9gMwQPO56or68bIM94LacvWopNT4Q
                      qcw8wJv+PA/Nmj47ixm+Wj5mPpUEhD7m6QQ+MIP1PGBwJrwOXko+brUOPq5ea76gdma9UO/Jvdxl
                      6T20PZC+gHbDvA/Hob7QSqK+FsatvbT2qb3M27i9v1+DPig4DD3wP1m+dj4Xvvb3d74AKR49+ENB
                      vpyiwb2cP/Y96BkwvT5+OT6G84S+CyaQvlAklr6AbtG9aoNpPnANFj57x22+onNkPmfdjr4SCzU+
                      Jq93vlOXOr5+53u+YDAdPnhdgL7AGrY838qOvjAEwzwAiaI8jLLnvVx7or10+bk9nltePss7hj7C
                      x1Y+FltzPkh4Gr75d40+0IyTPBCBuL0wdJK+sFO/vf/CpD6Uk4u+uOUAPdDYnj12xPu9LMCjviS4
                      pL3ie2Q+CoGIvpHymj7yYFg+UDz9PDpuST5DcF++YOmdPduemz5IZ5O+Y/ChviCcJD78jL49IgJk
                      PlKoPD5cXuQ9jJXrPTDSYb5OKiS+wHPDu3/cgj5CekI+/KPJPUbZO77eLm8+lJySvWAks73+bpa+
                      ONMAvvAJ/DwQmue8AGp9ukjod76pD5E+WpGivqNRBr7GM2a+DXSSPilpmD6EqYq9AFOqvnYXIj7O
                      XKW+KG8RPTZHAz5IiWw9EPKPviuDlz51MZg+pt9HPsB5ozvS0yw+TQmePp3RhD7GC06+Xoo9voLp
                      qL7CAS0+ZFiSPXOFML46LXg+umJEPovEpz6I+Z++VuzKvUE1lz4Z44U+mKQUPthNDL4Knwo+wNmn
                      vED/4jye2DA+7LePvkh0NL1v252+FYOAPiwej76AQWM9lJOkvTYDEL5gsQ6+GkBNPmcDhj6Tuwy+
                      bQOqProXVz7ItW49ZqNQvpsrj75qj3o+cBEEPuI3OD4WU4m+nkQmvsLpl76e7B++L2eGvitHqD6r
                      yxC+RvslvjLvYj558ZM+cLmuPAhAID3buJ0+Zlx/vgOHV74mmGW+PDbhvYzf5j3idG8+ZjUmPgFH
                      oD6Rt4w+wAEgPRKDaj4AmKk8iQCMPlDMvbyQGWy+T1OIPsBSor1TTk6+aOY+vWjJqL5ADy69BoCB
                      vuQZwD3RSJo+otgMPksWo77jaiu+GjUKPvzRgb0REaQ+qxg/vjr5UT72pmo+661mvtCyyjyDOhy+
                      YL0kvVQWmj2Id0i9+zCFvgDUFbwoV6e+uK2KvkClb774y1W+ziRiPsrXLT5yt0I+Gf+ePpbxUb7A
                      V1O9EETCvUyfsb2EVow9/Guqve7pML4xvJM+AOt0vPXRiD4OcGG+W1VtvgXbhT6g7oG9ipZoPoBr
                      brs134s+BVqiPvAPxj2kGKA9KNE5vufJmD7ueSU+6JIWvRb/ej7eoo2+jGjCPWSH7j1+lD8+jkAM
                      vrDlmbyQ+N29U/6WPrBwHb4h+qg+4n0iPmDF9r2giqS+SOg9PcFTjT7oYk++MDK3vdh0Aj2A53i9
                      IjJaPgA+F74DKhm+QlAJPnA7o7yGlRY+mndAPqjtSb25k44+YsQsPghZTT0wCPs8xnbdvVjBf75u
                      sw++hkIrvhtOHb5TvQW+APzJPfS/g77sPsC9MHrZPBf5mr4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzYzMnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzMxMjIxNzYzMnEBYS5kAAAAAAAAALBakD3t2pc+2KEovUpJZD4gpxW9SsIePgAuFD1yDww+
                      IOaovvPLFL6GO9O9SCNZvSsiKb5AkkS9rWyUPq0tiT5mJwK+wCFPvl7lN75AaD++8oBaPtgFZb64
                      MF09oOGcvaPZnj4AHyc9+KgRPiY8A77//Ig+eriovpaxQj7WHVc+p/CLvsCv2D2AG2a+FsHVvcAZ
                      pbwglXk8nuZdvt50g774FRQ9qSSSPj4zJL6Kz3g+NJucvZz/uL0+lYG+LDbCPSAN0L2oUQm+r1uX
                      PlAZJr6I0l09pNSMPbADtryYI5u+AHMSPmjHaL3oo16+AHFOPObdV75pF6U+fwOcvpCQpr3g8IY9
                      pLezPR70ZL7UQbQ9hHGovgRtmT20AaS+cEKfvsJ4VT6kJY69Os9bPkaddz7A3N+7jKmxPXJJTD5I
                      A0y+zwGlvoD4gr5ONSu+QHvXu+dCnL7GLmW+QNjhO1eLpr5rqHO+AmUAPg5XJb6I4ze+3oOEvqDB
                      Dr292Jg+yHo9PbayNT73rpK+wHAzvTuePr4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzU1MnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMzMTIyMTc1NTJxAWEuECcAAAAAAAA+zpy90KrwO00VxL19mxm9QXKHPfYxor0BJJo9VWWt
                      vW1Yvz0PSaY9oBlBO9AZr7ss7Ou88sthPTBUmTsj8689TtorPWe7iz3fHKE90+vAvQh1pTyZab09
                      zTFZvRNoGr0XF0m94LTxvPSehLw9rMI9qL6AvGA6MDv5x749YBWPvWhkcTwHs8Q9mii5vbDsq7vC
                      cw09F422vaOXYb2YTsa8oObFvfrMfb3KmS49fTguvatlmz1AFw88AfuIPTrwbb3sWoO8tEubPH7f
                      Iz10C4s8sxtvvV33mb1W6ws9g2mPPVNlyj165li91SG/PdTC5rwxpZ09AMeju2Wjgb10NcQ8x9nH
                      vdjlq7xQgFO9Ee/FPRrJBj0+M149g7MnvaZGST2PI4Y9u9OmPXKxcT1AD6s816pQvfEpkj2/PZU9
                      lRqJPQorzL1qcCQ9FX2dvYIdUD1+2Ii9YhtDPdL5cD3D4x+9f2bGPcyLgDzgIn29HaemPQxHpTxg
                      8h+7SU+vPbL1Zj2I+cq9AcTAPRyU5jymF1k9ibCqPUvetT0AwVM84Ojyu2gFmTwRSZg9qDGLvJXn
                      iT1CzEE9QbitPTD1STxsK+s8+GWqPMtPqb2QrF29zNytPCYtEb200968ciFvPWL8Nj2fYI09sIY0
                      vOAsx7vM94O8wMs0vIDf3rqgL5q9V12UPX0ZIr0MUxa9lm1xPYclxr2l6Ls9WDe7vIMIyL0okbc8
                      avYRPTgggLwt+489AGJrveGarj1TzUy9P+S/PaADzryxNoM9OLLKPCyFhryAXhs6ACp1vXYjUz1n
                      8EO9yeSXPaWTx70yG0A92tVDvRqbDL1J/YA97mosPaFZhj10xam8PvelvUDJu7qtCom9iay1PYol
                      Gr16pZa9YK0fu3+9vr0eJZC9KBQoPKoCFT3oCBo8tOmXvAChP72wzmg8OoIKPVeaZ70ShSc9R7Jc
                      vae6wb2G9IK9DhVwPTR1ijz9ZZ49LaO/vbNUmD0J/Yo9/W7MvckWjz3C7k49Au8iPQDAnDpKUaa9
                      oHG9PEBJqbwCOKS98t6xvaqifr3QZfg7AKxluqCGkbzwCDK8iYqQPS6tWD1Swik9gSubPbXZkD3L
                      Z8I9AH6vOspGar0s7v489pNkPdrSYj0dGIm9YOJKvQDRe72ja6q99CfiPGKxSj2Ai0K9hzy7vTDu
                      h7t20T89He8rvcImAD0YZLe9lH7xvFOlgz2jG6a94M2+vcXhxz0d7oU9xg5/PQDkwzq+v0o90MQQ
                      vOj3wzxbu5m94/kmvXIRr72mMJq9eXGFPbIAnb1wTnw8WS+2PRgNJTyiESg9ePWjPJJwDD24au68
                      NAnZvD48Xj0sosy8FlhkPTJBfD0na7E9S9rDvYDNlzuyAUc9jp0JPRQSiLyADo47QJthvfKhMD0Y
                      GuG8zXG3PWiCrrwoEFq8/cS/PSPpJb1wlmq9ojFuPQm2rT0PNq29b9CtvdS3jryqfzM9ILGKO7Dt
                      gzuMNfC8AM1TvPAYEr1sPpo8vU5AvVj4vb34oKs80CLnOzFXzD0L4aU9KaSgPZLIPj0oAh+8QFH+
                      upg1qr2rU5O9eNatvVj9eLwNB6+92EiPvB2xdL1wZzG9whkKPeDW67x6k0O92f2hPQDCwLvnYLW9
                      oFoXO9NPN71Hs4U9kjqIvYnttT3ayZW9Hqt5PUA/sr2Bl5M94PXgO8Wfuj0+tVY9jJLsvFJIhr0W
                      eV896XiCPeC95zswrOe7OOmyvODd+LwMpuO8GjMnvd2GuL3VYb29hv51PaB0WDupMps9WmtCPcbj
                      jb2DdqA9J5mwvQtxjz06jbC913CGPaukxL3MYro8EpxMPQ4aZD3kgOY8ACGwvWCe+7vgqfY74pHJ
                      vcKHi7345bO9INHiu9Nigz36T3O9QvASPZCsIDz2kEk9iJKZvCgwLzxQudY7Kp2PvWjfsb1mvpO9
                      F+Q+vRimNDwxr7Y96ggDveX+hz0FDME9likMPWpKUD0BHow9dBaxvOABuLtoshC8KpNGPe0BmL0a
                      B369C/HCPdBQyjtFOKS9woNLPap2aD3wJQe8ihimvcyxsrzP5Ma9ibmWPSfdgz0AkFq7hyO9PSJC
                      Mj0je3a9mI6ivGDcf70a2jY9rYVhvZDnS7yKTAC9EvMoPSFtgD0qZUo9qWOyPXIRJj166sG9gOib
                      u8aRBr1A/IC8IjQCPQytm7yDqDq9QEtNu0BnSzul3q29QO/SvJWtvr0+Mjw98UHJPcBUx7oWJqq9
                      i2ygvcxSzzz8t+k8QraivYBeZTxAWC88Zx9JvXq7Vr05Yr0951ZNvQj/w7ywVxi9eVKgPdDN77vQ
                      6v07E/+UvWlanj1qmkG96NwrPGPnsD2guEI7mrMkvWCj3rw4W8m9nBLOPNCTmr1UR9m8focMPXg3
                      17yhN6E9AqGvvV08vj0zXJm9GqZovd5iOz16JhY9KkZFvQCMNjwz0cM9eHvGveg0Pjzwoki8lzJ8
                      vei4CDxAcUC7UpsjPVG5jz250p091qplPWBXvr0oGa686Ai1veouVj0U/wy9NeWnPbIBFz2L56C9
                      mJurvA58Rj2A8zS9QAKgPLrbTz2gd2K7/sCUvcqNyb1gnr270HNsvCgDnzx2BU493ATsPDutqz3e
                      KBo9gBRbvHeVgj1AjiO94u96PbNQjb1nnag9GPkwPBIDVT0wfDo8Y5jCvUcEL72a5DY9bH20vKCb
                      W7uAFbI6Pq4JPVMjpT1awbe9UznHPfK6dj1dpMY9M9CsPQxDzLzVrLy90r1bPaxLxDzL4qm9eQPA
                      PXWynT2CxkU9NQe3PUN6oT3mNWA9FFGQvOA02LtkvdE8Z2UuvYkEtj221RK9Ph6PvW6Tlb2xTZE9
                      zIb4vMxDt7xxs7097BPjvIIygL23ka89ZbKoPZhsgzzDXZe9wHtKvZfnub07M7+9xliXvWEimT1s
                      7bY8pnSWvRloxT2A9I271UWqPTr3fL1yBMu9bkSZvXJrVz2pN7U9TxW0vbR0q7wAxBW8U4x1vawg
                      szysNYK8aZ6RPTDoUzyAHtY6TZlkvdBitDuiXE09gMDjvEgJs7wGP5+97tg1PZOMnT1Y41u8lf20
                      vVCFIzxA0kI8NPOXvLdrvz2gBWs7h1Jbvd2lNb1yqQI9DksJPaC+lruC/Yi9GETHvPjnx7zo8Ru8
                      ozdVvT1kJr0IZ5297ZiWvbVInT3bJLQ9GqRYvR12Qb0o7Ha8MhubvQBmn7z4uao8oaKqPUoLHz2v
                      F4s9UtkOPVRs9zyYiPi8BPrmPEz6tryMp8O8JM3rPGGGrD3Dfog9XVm8PfJ6cT0QDDK80JQrvNi8
                      /bxzAKw9a4bEvbvItD3AH448GdiEPcaQBT1tIz+9KGAHvGiA07wAS5k57MDovH8drj2I6Jy9XLYV
                      vZbWkL0wglW86iERvSRejL0+CKm9X+qLPba5Kj3r/4U9bIS6PCJtQD11O8K9YuhgPfZ3Qj3lh7g9
                      6M2MPMAKs7rKZ6u9MEUivLV8kz0B18c9sOKBu7jn7bxauS29eq1KPQMaNr0HySO9xXefvSZlFT3Y
                      KIC9XskSPTDUZryD3sk9GLqovDCkmDuUpLg8Z1VUvUJtvb34Mss80OxTPBPcwz3aaaO94y+HPQAg
                      kDza0Qa9tFflvFMrcb0w9zS9xM34PKD5rTypIbM9/fWbPTDqg72O9pG9gJG8u1nUij1ek3Q9ZQeX
                      vbRBnrw7aLC9e3i7Pexs2zyAEIW70PbHO1Vfgb0A28C7DUiYvUiIiTxsg6g8t6u4PUDIYbwtlsc9
                      gEMmvMpCdL0WJgK9jAaIvaiddbyKMw+9RWLBPdLOOj09XFm9B5o3vdA8wjvdKLI9g0ykPSMgqz14
                      W868TXGVvSp8VL1MCZo8Dm0uPWpXaL10tvu8AsifvWfIR70ovkY84HhUvXCmDjz6RQ29veGsPe1m
                      Rr1YjeW8QvNuPdg8vDwAScu7KJJovNh1dDwWOx09TbhjvbagFb1qIa+9Xai+vYH+vD07Q7s9cuMi
                      Pd9ynz16+A09VpwlPZAtC7wnWMO9FFKgvNKxCz2CqgE9MJn/O/RF8zzW4ks9jaKwvVTO87xnZqQ9
                      8UmIPXnDuz3USvm8eJuwvXP8O71zeK09uTCHPbdevb3RWaY9Z5YrvSbqkL1hWLk9aXe/PcB5Yzsv
                      2bK9wpFzPezDjrzTgJw9HDQQvar3FL0On1w9PvkjPddVx71tal+9rLGMvYn3jz2GfBa9MJKlux2k
                      Mr2yzy09KHZZPIBS27qwKWy8LVtVvedBsT2dHcy93akrvUC5/ro2MTg9QEgAuzWFt70gpqc8gAuv
                      uzKDMD2zsci9wA7hvHCJP72LOcU93nh0PUQTFL3jMUm9eiNEPXD/ITwn9Ru94hMiPROtQr04Q488
                      kCaEvdHQpz3YRRW8CeqiPdfMsj2wULG72rcKvdR/kLz/nYQ9GC4jvEkAlz26mVE9CyGtvUAUSryU
                      jAy94GQRvb0LS72UML+86sgJvW7tNz2ALcM7xBnkPLE6tz1AQ3S9OB/fvPJ4az3abxy9FP7ivCwo
                      kjxlk4U9+ObCPMaHkb32LBk9ZSyhPYHQhD2wuLC9Z5khvR2zkT2y72k92GLbvFJgTD3oo1M8EMB4
                      PCU8kL1I+bW8Nuh5PUX8ij1OlX89mOH/vAzH77yBMKQ9cx2bvbS40Dy4P8m9p/hRvTM6Kr2AZ1k8
                      wBTIvKYhDT2L6LI9ADOVu+dFiz1BQ5096siYvQ4Tjr3p9Zw91nGnvcCZOjwo5c+8KnJDPTiU9Lyq
                      lZO9AoovPXC0WryTAVG9a72OvaSLFb0tH7g93n06PXs3o71spvA8sus0PYY6k73Nj5W9sgwyPbqt
                      Ab1fxao9wmlmPQ3cmL2nx8u92NnDvECgLr0IcsO8lWO/PeQA7TyyLbq9aOTuvB2csT20b4I8kkkh
                      PX1gs73X5IA9NF6jvOMMxr3yfQQ9MBk9vNqyjb0i1SE9AK0gusakFb2qooe96JTJvdJdgr1iykk9
                      u+yHPUAf0roI/aY8E9JHvVQVs7zWlgI9sAlRvVtBrL2Uo8u88Rm/PcjKhLw5la49JdLCvR4Xgb13
                      c6I9BQOUPWrZjL1rFsE91HvXPBmHvz0voaA9LwmYPcLmJT1Mq/U8UMmlO7bueT0jfoA9xJngPAi8
                      0rxg1i67bEuqPKkLqT3VCMA99E7KvLAPy7scrvY84AOivGO0J70AZ8a7hKMKvcowJz1UEcY8GjIL
                      Pfm9nj1ns8O9dvgbPYCDxL3ZXbQ9rY08vU79LT0714Y9IiVOPXC7fTwGMwU9C2COvZCKMryAGXQ8
                      ycmRPZXFsr3gava8Q9tgvchki73ki/s85Y2sPeJMcT1AoYC6Y1WTvbkGoj1MEbw8cBJFvbBOCryh
                      hKk9kf6bPd9avT3oYGq8cPUuvXqXnb2BZco9GFx5vMl5oT1FUqE99/SrPecQyj1ZIYg9qpWxvYdR
                      ub0g7q871Aq6vPdvkj1gey+7/baOvXK4Jz0yasa93P3ZPDSxizyweCi9YOcOvajDuDzKB8S9cSa8
                      PbA+p7vCBpO9uKiKvfGemT1MKea8Ym5fPQDfYjpB5rw9uc2yPcxUiTyWdhS98JJyPCAXsTsGbj89
                      AMXtu0gdwbwshBG9752nPejgsjx4r5y9VNO3PGqCLb2KRBQ9XguOvWJ7ej3T/Ga9jEuVPEiMir2o
                      78a96Jp1POn4vz3a+UE9TQOxPQAwVzsd+7g9aWDFPWxszDzOkY29Nn+XvZW3g72g1MA8NNvgPGnb
                      wT3aW4S9Wh3JvUDi5ryzzE29wwrJPaRC8zxgVLi87tSjvawQlbyFQ7w96GJ4vP3fgr32ORS9gKIy
                      vK10Ir3pAqk9KPq0vUohX71gG1K7dbC8vepoND2V9MC9GOcGPL/ivT1g73W9GPeYvGPmTr1QCj88
                      8sA5PUGOyD0iNXI9eOTBPEAyor2AJ0u9EfGhPcC7ITsKI169zKKkPEAxzL1CH4G98NZ5vNTL7rxa
                      3m49oN6xuyhmn701zZA9YXzHPaiLO7yCpmo9ovkJPSrplr2tqbU9gL6aO5fowL1YOY28MPXEO9zg
                      hr0Yehm8vsQnPTlKpj3gCNa8BnUMPSUBtz3lwpW9MOE1vT2hfr3Qx/47QhOmvdyt1jyBn4U943q5
                      vQbSLT3ySwY9Y+28PYAbjTyoAJo86Mm/vLexQL2v6rI9nZzFvfFUzD11bow9ZimfvQojpr3YwDG8
                      2Z2bPWlqpD3qZVi9oyakvVMcN73j0m29aJA4PPyHGL2XWqs9xTK4Pb0+nD2HOU+9VwIovQgAgrxs
                      zQO9oCtAvcBOWrv/u8M9zcdPvXpkub2ACmC8eom9vX3ey73Bw5k9aOqEvYC2kzpDOZM9v2LEvXCc
                      ir2ABaS6gL1FPEMNpj3KWGa9rBQXveOnSL2TnXm93vQnPWD1mTsJoII9mVmNPZcYZ73XqC696MbC
                      vJbIVT1C34S9U4UbvY3wfL3YjG28Y4mlveFSmT3tHbU9THTPPDbRdT0DS689vQ+uva1Mkb2li5U9
                      i1iFPfqfrL2wTge8urBTPdDy/bsFjYS9TmNjPWhHtTzC3Lm9aZG8PZalTT0qLL29Rk0CPezpljxK
                      67G9LdwivTXNob1KlGe90OHwO+uLsj34ed289+AnvSzOgTxwmQi8P3+JPXb2Yj2q5mG9BnwMvXA2
                      fzwi+5y9YMGOO2h+lr3XI8O9BViWPXD0qr1czIe9Qv1pPZruD71dFr69MenJPRJjaz3ygrS9OoMR
                      vTS3/TyTN7C958hsvYCwgLqKhji9iBPavHBXMDyxG8A9uH3EvV8Qlz1x+Yk9BvUGvXnIuz0RXbA9
                      oUyrPVn/xT3TEnu9tH3YPHERyj25zYA9YyzCvXiZlTwV4KA9gc2TPQKdbD0q55q9k96UPfFzwD0A
                      13U6UNptvOHFkT1KtwE9wGJNvdCHmDtAjWY8tj2XvYBRfbyjIsG94cmVPSpZsr1i+HU9+ByHPAVl
                      pb34zLO9tIH8vKhIsLxYc3y8TKXtPAabID3SF2o9WC8sPM66XD10P+i8xuYjPcjQszxUG6885nw1
                      PWgFArwyS1I9IDWDvaCRb7vzQ6y9Uu4LPdxMgr2vIcC9M/YfvR0omL2Is6G9o495vSoZsL1nhao9
                      9kdgPZf9P70qdRC9+LOuvEDzIzuGlUo9JZO3PRA+ILyoY0E8uSaGPfaFTz30cre8kcK6PcVAiz3A
                      TrQ60EdIvCdlsT0wRuq7fY2/Pe1at72gEAQ7k1ZsvQxs+zwu4WE9bE/ivNiJx7xY4008aA1jvEEJ
                      kz1psKA9wrI0PS+xqT0YOhG86BKuvatNyD2TEUy9KjgSvcrINb2w4/87tPuFvXM/V73mABc9hyxU
                      vZrkgb34Wpq8QKFqPDCjZDzxBoY9je+1PWBeazu6q6a9/e6CPSbiIj0QRTM8NManPHvvrj2ndiy9
                      JjRePaADWL2YQSC8F8U9vRWEib3Jrsg98CJLvebqIT3wBBK9VNeCvXhG17xa5wC9MHk9vQp2ST2b
                      Dci9dqQAPbhKm73YpWk8eerJPUBBPL2oznG8dJDkPMizgL0obFc82Bo3PGCsUjswiU293kwKPcIf
                      cj2FKaK9oe2uPfASRbxh/JY9iiAkPTSP6DxMK908ZjqNvanyrj3OjpG93UA8vQEBlz2juy69cSuW
                      PQNDqz0g1vq7qnJ7PYDtvLqAb1G8AB0yu6Ulir1TLlW9EPNqvRgVTTzwCjo8zrlkPYpEZb3gOre8
                      2KLEvJJ4CT0sReW8IHMzvfQSjTyaGys9g8mdPRIesr1BRps95UOnvSskiD1r0509UHRxvVKTs71v
                      bb69yMDqvPJvFz3qPjg9u5S+PQD37bzo7Fi8XUu8vTpnU72mSBk99HTyvFKQCD2AtIu9QJlHPCxv
                      +TxV4J696ybLPUDXm7p9gHy9NSS5PUBzrDpH8cY9RzO5vfiirTxwTFe9DeU8vcLpHj3uWF89aD+z
                      PL9Nr73i1k49CiQSvRI5Gz0mmIi9+gdvPZQj/7y9Hzu96Da+vZXMzD30Eug8bBbPvFJTiL3qOlw9
                      wtKrvektrj0Qkxa9bEOLvbWAqb0YQGm8dM6ovMw927wgh7a7Bv9dPTNZxj0zGWm9jTcrvSaoNT0g
                      PbK7Z6rFPUpifD1ezg49HXyCvQDdC7u0svU8Ixu+Pc5uRj0GvQ89WAZavAbtPj0MpqM82sQ9PcY+
                      Lj179J69yIHLPKhPYTzG43s9m6OuvaOny71/LIs9MjOxvQTU8DzodWM8IDDHO6MhXr3I66+9J2Zy
                      vVMiMr31RrO9+fCHPTaTmb2sxuC8t35IvaiZhL1r64+99Y2EPYh767yUwL68O6+gvTBvD7zzL2q9
                      UC5lvUzJxDziFB09QD2YulAVBzzH8LA98IB4PAgTvbzf0J09gDGeO5g5aLz+IAE9aqgtPVRVn7xe
                      IKi9mkSpvUD+pr1tMzS9O7SxPZIFZD2PD5o9YOl/vXtoqD3zOSW9AO8Ruivlrj0XNMw9qEgQvNgZ
                      grw6nlg9QJR3vEhbnzwa3yk9kAO7vbhiibzA10s7Y+Q9vc0gXr3y70A9u1qOvRhmzDx3ecA9VOy9
                      PEOZp73QqQq8WZOTPdw2/Tw4kdi8mu1OPZK5aD1Ayja7uAiZPERw5zxEi/88qMe1PEI2Sj0dPYc9
                      O1WavVlrhT1UpbM8IbyNPW1anL0EK9Q8wHNKPE34mj2gja29ANTLO/X2kz0x+JI9cucpPV6Jjr00
                      VaS8GF3jvPzH6DzYb+68itcnvZ5OYj2AOv+7RUm5vYr1dD33eES90C7tu7ykGL359ss97axOvQLk
                      QT1l+Ly94+ejPRNbM73yeAY9uZmjPYVbrj2si968V9Brvag5qLw1n8k9fRxcvVhEqDywNcm9v1md
                      PVDOYzxjVss9l6S5PfDHejx4Soy8KMoFvGbtDz1gKJ88g4lNvXPcjD26gF+9zCXyPOjUdzyZDJw9
                      hIOEvXTflTyT9Kg9XW5ZvVDBjbvMAAG9YKDdvPvtvb2u8zY9MLAZvSU9j73AbtA6Vn99PXSOrDys
                      Aua8nwe4PYpyh70A8PS61PaXvBOba73RFLw9F6J8vTtbvL3aax49CN7DPEmkwD3145G9wNltPLlX
                      jD1QTMe9syORvYBSiDutxz69UAaCuxmMrz1TJVW9YDJAOwpZez3Qi/M7NJeQPOePxT2ox008Kfa2
                      PY0Zsj1rC6Y99gw7PRDsPLyb4qu9oCkKvSCzoDzoFtu8FpQOPVgNLrzf7K49hL/rPDSHkDzx3pE9
                      4CNQvV2HoT2q2XO9tk6Wva3MY70wvBO9sV+5PaXjlT363lO9Ddohveg0xjxpx4s9UjQVPTcRqD1J
                      Rpo9AHdhPGZJhr1KGDm9Rwy4vSgrQrwQOBY8N9I6vaZUJT2NvW29WvxQvXBGDL1YkLA8Os68vTsL
                      gz3g2rW8TYyYvR4rWj1zJU+9itRhvQDCWzxYZhA8hgSrvRh7WrzieIO9BxDEvVBZvb0uYYS98x1r
                      vW9fxz2fJbE965jIPWHeuD1WuAs9Z2s7vVcZiD3fg7+9an9+PfILmL1A8aA60JL2u9ZhNj1OsZa9
                      g8qqPfCcPDy17YY9lJKKPJabBj26uD49wNYEvWJvTz0A3Qm9yCLEvB8Gsj0wfaq7GJ1CvCF+gj1A
                      wzu89fuRPSPvpj3YA608MDhqvYrSbL1u/kI9mD66vdAAiDuPRZk9l9VEvaBUXbumXho9GBvCvEDn
                      aTvgHoM8wAWxPLhXorwBm6Q9nzGfPegflb2RNJ099X2fvQwogrzgo6e9EPa1vYPumz2c/vc8aI/K
                      vQCvFLqx2q09G8zGvbxT7Dynn1q9lU6ePSp8ar29ZKI9XRO2vTBZuLuI8aK9RCH8PMNGXb0NVcK9
                      AI1Mu6H/gz3En/s8mN92PLDOwTsfe7a9H4aGPWLgj71elGg9qB8xPHAOj71UOYa9QBZRPHkOlD0w
                      YSQ8jJGwvHqyIT0Y5zO8IImHvMv9rL2wvE+90IWIO+AJML2gemw7uJK8POdRsj3SKkI9c021PdQZ
                      orztxsO90OrHO36oNj2aYl891e6SPbGHyz0wBLC7Yi8HPSKnkr2zaK89JuVSPX3Zy72AEKa8DTCe
                      vWe8HL1g9cC8JgaZvZAWf73Pz489Fp8WvaMsbb0j8UK9QPSXvCclnz3S4ko97GKuvK62Oz0tp449
                      5xqsPXXriz0HAiK9fYgpvRuCkb0KRDO9ylpLPYVfqL2rarU9gF+cvFnjvD1oujS8lC7FPAqrnr27
                      rcG9UlA1PQDRzjsdsZa9YlYmPTLSEj1SAg49AB2wuY/KwT2YHbY8Zi80PVgWS7xvsJQ9LIerPPPT
                      Rr2Fvbs9FVyxvbLwbj0wkFO9E8aTvSCCiDxgBGG9hCniPF3Oib3Q+cW9/UmGPXMAvb20ic88yKeZ
                      PNv9hz2E0gW9y/atPe+7yj3tR6O9wfKiPWtqkz3t38W9V5i7vRe9rD000YW87JX6PGsVm701SaW9
                      p0e7vQnmnj1QbGq9OTOBPdg9f7wtXS+9w+h1vUAdl7ypPLk9ws64vcRtir2Y4bs8oM/8uyjypTxG
                      FTk9h60fvTG7wT1gt4S7EymFPbBXo71pJ4c96R7BPRgSgr3y1k891+abPUW+zD2C8D89kKs0vVr0
                      wr3KIwq9e27AvfQFubzA4oS8VtVBPRLlDz2A1du78IWEvdZ+AT3tFma9OY6FPcz50DyU8NC8IhII
                      PWMDlT2qIRY90svAve5Fmr3KR249Y6KWvVDVnjtm2xK9sgsWPTA7/LuoABw8aCe0vVh1rDx/2bA9
                      QE9SPPlowT0Qp108BYiDPdhYqzyTpKK9xseivUwkEL2oE+68AA7rO0Oru72afl89NLOFPFZck71g
                      csa7sFEWvFJUIT0uhoW9/SyavfpLcr1HR2i99E/bPL7EDz2qcHU9k74kvcCSD7tw8AW8UJThO8rs
                      Iz1QU/A7ohSxvaAnIzubN5g9gFL0Onpwr71TVh69lOPkvD3bpD3aNT69oCS0O8CgHL1jcmi9WPhh
                      vN9jlT3UnrA8wyzHPdQmuzyaiqW9ACZ7O31vlr1pGpk9yn1PvfRp9jzRyrE9QPSvvABOgry/kr69
                      QHrvvLJ/Wz0LPsy9jaCFvVHLuj2DF8E95BfPPBsQqj0trKk9JlVfPUZJJz3oHEW8sF7zuxrixL2t
                      gIC9BViRPUDxcrzdr549ohOkvUbNRT3C5oe9LmQ5PYCrN71XULG9qNfgvDrAWL1lNou9P622PSuF
                      vL0xi4o9iHOBvB5+Xj3AUck8oIkhO9So6zygiZq9dVixPXlsqz3N6y694FdkvagPo7yTwqC9JQWh
                      vR0jXL1Achu8gL0futE4zD3Dopo9PhYSPaxn1rw+CW495psXPee0I70A7Ds8oGeUvbqqyb2KFAg9
                      OiisvQjHyLwNm8u9olZoPd+DtL2jF7+9wBigOtZkBr0Ylp29Y7AavXSfuzw6uIa9cJEovJztzzy2
                      NoW9BAPSPCMXrT3lXqK9EiEFPQBuZLvl1rC9q1qsvZeppj3GlKK963bBPcgxv7xRoa49QJEaPMIK
                      nr34jIK8qGeEPPhaor2y5kU9IFPcvL0cpb14SLy8pdSuPb2fQL3FdLw9s/mNvasku73ze569kle9
                      vUhtkL0wbly9BZKYPVLVr73SUho9/f2aPcOlV71otwE8ac2hPXpXZj39fYW97ZR0vQCtwjm624m9
                      c9bCvVdcfb3Nhye9IvsyPXpAJb2gwTI72JLLvZrTYr1P7ag9aG4lvADQn70YUB+840ZkvQNziD3b
                      pqs9gBycOicRyL26oCc9xb+zvSRp3zyCmqq9mM9qvJB7ur3eqaa95y4dvXIyEz3WD1Q9nJoOvfok
                      uL3oY5E89a7FPWODgD2E9e88e8W+PViR37yZrso9YEP4O0B/JrsnDzS90JG+u4Ds37oqnxg9aHRA
                      vJiDs71TGy69aFCHvABnZ71gNti8MD77O3Wbnz0Zw6U9iUSzPcBAp72IgJC9dLbMvHotcT1IQKQ8
                      UroNPcngjD1XgMm9MLHdu5DaTDzX/KM9Z08yvaIpSj3i7TY9jbNVvRGZyj3t0TC9UAsNPBjrJbyi
                      kA49UGsvvehnm7x2jmo9WRSMPQO0Rr1goRU7QMPLvdAizDuwB1a86Cj9vOuRob1iUMW9Kmh8PRKj
                      qr2958i9+y7IPS2kpb3tTna96lYTvVlYvj0TOWK9qAKqvYBBtjpWRgk9umkMvdhth7yA7rW6oKL6
                      vKW6qT3TQLU9pHPuPLEUgj2gMG47X2nIvWrOVD3RErw9Sm8MPYD/FjxYyA28rGK4vM60mr1E/hi9
                      yrhVPSdmYr3uenM9G0nDPQMXYb0A+gS8YA0ruzWftb3tQGC9dbqlPcBPgr1gz+687NmDPB+3wj12
                      IhS95uShvRiKd7xmSTc9cKukvU1LRb21ka29/f08vah2Tbz7XZQ911BXvXMERr1Aay69Z7svvTOd
                      Vr26SyU9UOf+O+20wL0FaoA9zLjBvOPBjj0L0ce9LSMgvXjNkr1+vaG9AWqOPfOLnL3UPqY8JWyZ
                      PRRJ/TzoIkE8EemuPerPSz2w1gq8V9swvXAdaL2YxLC8pkEpPZV0lD0UrpQ83YxZvX+YuT3qNHQ9
                      0Y3MPaDt6ztsHN68PRcbvaYwDz3A9la7CKvhvAUby73nlB29mNybvOTT4TxUaKk8qSyXPT/Wyb0X
                      my29aixxPdYhHD3ncye9xQutvQR25jz5o8E90mhmPQCU+LjqZqu90BafvSIHYD0kavI8xV7IPaPq
                      Ub0Rjpw9L1WbPQ1Fnj0gXYe89O/BPLCdj7tdr5o9UOEZvBnvsD10CrE88mdCPeNvvz055rU9cXCC
                      PVwbF71ZIac9sz6Yvbf5Lr1tUUS9/eBwvYCurzzAsvq6IrMEPaL3VD31AcI9dp5PPTf6jT2i6g89
                      z1eyPSS5gb3wDrK9cwEevUKWOj2eypC9CnxQPdimQDwfPry9YAQEvRg9hb0FJLC94ju/vcBNWTu0
                      gIs8WLYYPNb2Cb04nqe8qUidPS67n72KRk89XYCDPWhyN7zX0jy9oHdvu2MYS72AkKI8eh9aPX4G
                      bD1guY+8mIPDvbaZJz3gQR29mTqgPbP6nj0Mu/Q8IyQnvYaDjr1KILK9wIuAPD1MPr1YyGc8dyKR
                      PU6zg70KioG9k85GvU6XUz2wZ1+96M03PP5NWD1UP/+8KCt0PCpilb1/d6M9Y+9yvZiQiL3C0249
                      zTg6vUDzmLx/xYk9Oj9XPcylorzLFqU9OXOQPUAvSrtZpaQ9+OmuvNYUEL3GUn493ZBFvfNAML3x
                      q8U9QAu6vDXVg734pOy8q02cPWVdqT1Drbm9RsCmvWBIOr3Y01I8mqMDvduJtL3s74A8sS+pPQdf
                      lT2AbA+8sFccvFAGlzuNZn+9TCuvPDSf2zzkOA69wSyMPSeJUb1/pLK9/tMJPTCaIb2g3Pm8G3Su
                      vSizb7wF1pi9oHhhu421f70ncry98Po9PNVsuD3QjDK9uVG3PVYLEr3sRpC8YIn5u7LTXz2IXZW9
                      yik8vSnShz0SNRQ9ELNjvZfGpT3Bh709zO3dPFCQzL2N1ZS9AESvvReEwr0D0LK9jC6oPB36g702
                      KpW9+SWwPWlnhT3ksdE8KIeavLhJqL2oyb28UXG0PQBgI72DDkW9QAIvvLWxmj0DfZu9DFn1PLEe
                      zD3YI6w8nYojve1/sz3CoEk9bLTFvA/Mkj2fE8M9vTWUPfCGFLxq8JG9ns5XPV3Xiz2a8bu9EsgX
                      PYAkpbyzIpa9+T7CPcnTkj0GT2Y9i5SDPTqilr2glwu90gAcPaM4Y725DoE9BmxEPc0Gpb2wp6I7
                      wiI3Pf9+jT1Xv7e94G9TvbKSvr20B9m8WnxRvXexrT3+6Wg9cq9gPQDr8LuY/de8aAKsvECzJ7uj
                      gqi93WNcvXG3wT1+RZu9gQ20PTQYg725vLI9SJalvaAJmTsj2so9g9xDvQBGqTtuSKK9wP8gvbEU
                      oD0yHzk9woRrPWlxnD1/JMG9spcfPfomA73wV2E8SjjHvTmSnj0grsK8KB2PvXT3qLxnG789KLGB
                      vHz6/zyQWS+81O2LvY0ahD01h4K9pjyovb9SlT0Wb6y9IHC0PChtOzxnrVS9dh4HPSOQR70oWg68
                      9X6nPUzti7yYOrI86DS6vRboSD1Uw/a88k0XPdFeiD3YWZo8hqMWvU7rdj0AxJm8tHSWvF9bxr30
                      Gd88M1FNvV/Nx72XYS69IJn0vNSL/rwUKoC80/nIPej7gTyIT4G9O3OEPU4xEz1aFse9GEUmvCKJ
                      aj10CIs8Cv6gvQCsa7vyzzw9etJfPTgjkjxOIGI9HaxGvcAdbr0Y5D28r1zBvUqvi73gl5c8hqsl
                      PfQZqLwYRa68N/S9vVsAhD39Ni+9GmkUvYNaWL2nkb89gKAJvJsRqr3APis8gJuSvPSVtrwqgaO9
                      RYCePZ3Tvb0LpJa9AfWFPVRG+LxAIlQ7oMawvFouBD0Ci1I9APi3vHYeOj09eX69AOuuvDEdyj1n
                      i5s9GphbPefTpT0Ar7e9o33KPQpAVD2YVIo84CD2u4MaLr2JlpM9S9GePUAvq72iIno9OKqkPPIe
                      hb0o42A87B+cvH6xcT3l1LO9VEmdPMXmkL1bpo09AJ25u4h68LwJP5k9sAZDvHdgzL2YQoI8kkrA
                      vRCDgL1u3qu9fLYJvYYmFb0OARw9vE7SPDDdO7yEiwy9rLWCvGC+pDt4qNq8gFldvQB5ob0iEws9
                      oKWPPGpJcr09FF29GOwSvCRi/zyvOoI91PX9vFKUbT0oFsO87T05vagicTyJbb09FFDRvDgIh7xC
                      ZpC9qRmAPQv9nb2xoIk9Asd5PaAAgDsyuTM9uvUAvdzL6jw6vVM96PNjvMCmILsw4ng8uPuqvR92
                      uL0Qixa9lvVdPe4GFj3UE/w86vsdvcwUzbybubg9IB11vXkbuT3CE0I98xxZvcAAMrzggsW7Gbqa
                      PUg6q73YiZy8QJQcvdsCmj2sRZC86GeUvWVzoj2iwV09FHTBvDA4uDs/s8C9EscwPTIPbD1K4IO9
                      Y0WsPamclD0Yh5a9G0i3PfN+HL0++qm9AMpMO7T/1TyLBpu9WiBcPQhlnLw2YnA9jPi+vIKfHz0B
                      pZU9YFgwO/2wgj1KPRg9+NS5PIVSvz2rpa89sxdmvT4ebj0CIxc9uS2sPedITL0oGuO8iebCPUAX
                      fLxSsSY9F/amPTSkybyFrMQ9iIu7PNPiVb2zpLi9KEqCveNfkj3Q2Im9hsgsPcrOVD0TFZK9QMcc
                      O5pEVL0XI0q9KzjBvQ8noz1aORa9ndFLvfhd4LzZh6U9jUHAPb8nwD1QqUy9YDfNO5phr72gPCy7
                      wAIIu9qHGj1kkhK9GJ+WvM6un70xNaw9Ss4QPTZNl72DYHe9E71avWqcgL3ArjK8LRGbvTVvhb1j
                      AlK9MwUrvSbtE73Q1wC88uQDPTDOPb2YW8I8mlMGvYHWnT1j0aE9FG33PAAxELvg9xK9bWxdvQmO
                      tj0R78Y9ytFNPWCYh716g7i9YGzfvFOpr70A67U8eyGsvf9Cs70WoJG9848wvZoIcD1TMJ698ymU
                      PYATqry6D7695zZtvXh1obw33ne9MLUkvSdlJL2R5cM9JW+gvZCrbLwqJB29H5K5vfSM87xBjoQ9
                      qEu/vSNdTb1de7O9j/GtPdRSxjx0yY08gKmZujMvnb3YuLg86U6NPcktnD2WdCM9qUmXPV7pfT1G
                      vV09IMcvvSO9JL3gzeK7bhFlPQcqUr0X6sW9iiVaPQdRub3A81E855ymPSiZubz1LrK9BcKPvWWb
                      l72HE649y0mXvRDolb0VdcC9HbCpvXS/ujyf3Js9imtYvblkhj0Igsc8oMC0PJN4vz3rApE9Kth3
                      vQClH7qAP6k67WORPSwfrTwJ4749gH9yvDzOEL1Av2+8/TO2vbeRsz06JH89U6t+vaiMsTx5Bps9
                      5PT7PER26jxta8c9YkA0PSJEnL0wMMy7AwmhvecLxT0DIJy9mq5yvepRvr1RdZ49cJwxvPTapbwK
                      JEe9YHBCvZx09TzAGI48AWyAPYHhvz1QnDG8PiamvcffnD1Sb6C9BmysvcbCRT0r8ps9chdzPXr8
                      Or2gIFc78IM2PMIJKz1VWL69NA6HvJgKADxAmh07guBgPQ5feD2Hn269gC6fvcYLpb23eSO9JlGo
                      vSAZWL3rzq89NoBlPZPBp72LrZ89nZdEvXmniz3dCZK9PfqPPYA0wrtkJuo8WoJiPR+rgT1CmTg9
                      b8K2PUQO5zx5hpI9ACBXvIVHnD0GN2c9bym7PY7bOD1CdGI9Dl6FvVxB/jxnEXe9mGJ8PNLFsr05
                      jZ89w8EovSgeHDwYulc8hdqsPX4WYz0jAqK9zPSxvFqdSz3kaRa9woA+PYDYyDp3SkK9Hxu/vXLd
                      Sj3rT749sK4TPFXbnD34i7S8dCzfPJj9wbzjAne96d7CPYCqFDpSa3k946ynPXSKyDwBR709KZ6n
                      PbARyL1rZLs9V42aPSxR2Lxv55g9NNbpPAaiYj3U7t68qw+RvccegD3YW3Y8Kt59vV/Rnz1BgYs9
                      h3BbvaCEPL0SUhk9XsVNPWj9gbxVuLS99C6MvSNQsD1B6Zo9jbyYPYyGyzx5FbI9ZOfsPNkVwT1S
                      ZmE9/0e5vZOSyz24gLi94j80PTAFYby3bzq98a28PRvWsL2KfRC9OZ6iPVosRz3yz2M9KLr9vJog
                      Zj2ALZi7Zp14PSD7Wb34Tag82J6IvFCBrzvYOni8+1WUPaPMx73CfLC9SgJSva+mvL3Y9L69uWiE
                      PXqxPr1Tkro98JmKvUCSpzyFvry92DSovDBmuLt3RSu9oAd/O1NoZb3bpZG97AfHvFM6yz1gZYo7
                      uitWvWkCtz1gm4o8MN5LvAPJxL0AFlO7DvZ3Pc3QnT0SfpW9Dza9Pcq9Q70TQ7m9UP4nvfqZYL1u
                      fg89FBT9vGq4qr181xS920ucPYqKBb1nQHK9zDGCvDcCfL2LkYo9AA2/vR1VHL2Al4A7ieybPTjA
                      ubxqVha9gM0fOiF1oD3Aony8nLTSPIvMj71Utpm8ikkpvXlGiT0KGgM9Y9skvfQYEr0ta5o9orQB
                      PZgMADwU7/W8F4HFveDaXL3q5D+9KMQRPGvIy72dkDm9HC3dPPo+eb2/GbS9d1QhvejpFbwIXas8
                      evU2vRJhAD3phYg9L7KjPaw7i70Cm3s93rodPfcwOL2814u9FGDOvLYEhL3gQx69APhyOirhyb06
                      Fpa9Hf2OPdq1sb2KkyS9GLUGPB5YED301v+8qPkYPCqAWb1QUTe8BrqhvT+Dqz2wtny8jd/BPbAk
                      l72PP5Y9iPvJvFTl2zxCiEo96KO/PBekGb0sb9k8lSCKveK9cT01sKi9W/TKveiORby5Kok9gOac
                      uohsmrwjmZ89yJ21vI6bh72bv8o97haSvex3hrynMSy9rESNvOwMxTyAqKy8EjsKPYC0iDuzuo49
                      u8qtPVLWWT1A1Rs7SeiCPTgynTxAgFk8Nvc3PcoKPb30W8u8wGAeO8WZi73J86Q9YFULO7O4vb2w
                      GRO8hXqtvamEiT3CuFA9WjhjvfBrKDy9ZHG90z97vT+Clz3wKCO8ANUSurjwg7wd/k29H8aHPbYr
                      Jz0Gooa9F8pNvYVGkb1h8oE91I2HvB88yj0rTLm9WxSbvXM5I72D57w9OHbbvJ6abj32f1c9NwjI
                      PUusn73V47c9m4uwPVrxLj23px+9vVivvQpYkb3JYcg9HMSCvcr5v72AvN47myaJPZZiDb33mTO9
                      AL4bu5Wug70AeDw8l0c6vTFdlj1Yc2k8eRGFPdNKvj1Qceu7ig4RvdZAo72TC0m94F/qOxY+mL2W
                      4GM9bNMSvR3lrT1dhY49wxguvarKyb0XuJQ9GrkuPcZxTD315aw9uuRfPc4DWD2gQZY7izO1vdpn
                      Cz1VWo09aNUFPE5dmL3Zyag90DQnPOK+fT00DfA8I7HCPbXLvj22Si89VkwxPZkCsz2ngJY9u1HF
                      vcPpTr1MevG8AEcVPNFnuT36HAQ9tnIrPR0stL2SOX090zvHPUAeRbyy0js9t9JuvTDqULyZgqQ9
                      /QWSPTT907xgo067DNnxPM1afr10Urc8qORMPN3JJ72V8oW9mNHTvGacWj0SCC89icfMPeJOEz1q
                      M2k9wkKkvRyzir3937+9IIySu5gZdTzbc8o9Ew2evXepbr09Bqe9WKhnPKibTbwAnRC6IiYaPQpe
                      x72+74C99GX3PKBTgTsxaag9AFGduzYJdD0aoA49VFOYvAX8uL3C5gw9U/+avdU1w70tyKY99cbJ
                      PYN4Yb1wDQ29Nm1IPW9nqj18YdI8MMR2vaD1RbsAQ469Uu9fPTLNnL1N+oq9gJAqPCO4xr1uEEM9
                      IN7VvIC2S7rvxpw9DfChPRMljb1euWc9BH+FvYtwy72yQCo9qGQqvAX9mj20gLY8lBGSPL7pUD2Q
                      2QI8i5a/vVJ5ub0p0MY9YLVLvf2FQL2f/su9YlC6vccJnj3HnnK9QIhKvN3QQ70aWys9c+q5ve7B
                      Ez2wn++7kDkoPOVsuz3wORw8X+G1vftNnb3am029TSYfveQm9Dzvy6M9lioKPTKQcz06iR29SgjF
                      vQA+4Lx6wYS9uY2CPYDoW70ghKI7MFGqO+u7jr2Apck8yHKKvcZOGj2IO7c82n4KvSv+wD2z9pi9
                      qey5PVlDyT0Qo0k8hV6VPaO7Or2AgS88lX3CPYC/UbzHbKE9Apq1vUY5Qj1J1YY9gDTOOkE3zD22
                      wgU93gRNPdxTCr3iarW9wJ00vExmyTx8IPA8NutoPXhCgb1XlZY9ydCjPepccD1wN3286ZCuPXXt
                      uz3UMpi84us4PUyjjLy+QSw95cmsvavWoj0j4YI9U/I9vTA2xL2KvSq938fBPYPecL0R4rc90nYG
                      PcBwozy9DMq9n4+iPfJIAT0xTMI9UBc0vNNZkD1DYje9ank0PQM7qz3xMaE9QA58PCmPqz3NS4Q9
                      0HYFPMMStL3lOr29IyFlvUAMh7xlCoa9SB/RvEyblLymY3097EqtPDfmsD2S4wg9ipV6PY92qz2h
                      n5M9KNmWvDAm2zvRc8Y90XmqPfCkK73a/3e98YKsPdBKGDxKmDm900+kPZrAQz1KcVq9vb/DPfi7
                      pb0VN8s9x5+7PR7eTD2sqgO9NxK+vSKOy70sXt+8MrMEPaClPL0gUYW8QBdyu8BBDb1wtVi98amX
                      Pf1MTb2TB3G9gOMvvbq0vr0tUlW9WNR6PIAIiDvwnKe9t+tMvb1Sdr3wJUq8kwasPWnjij2gpKu9
                      yIydvONpjT2TT3K9kEWtvUyuizwdocu90e+FPYA3ATx0EfU8pxdqvWJWCT1uJpa95CgLvUBELrzA
                      WDS7yisuvedOJb0yfkI9oEY3vQplXL1Qseg71Mq+vCj4jb0+wAo9GOpDPP+1uz0QQWW8bA4OvWiD
                      GDwh5689ao9KPdpITz0KhDc9d5kevUXmhT0as4e9KsttPZDUur0CVjA9GrFRvdiAhb387ts89lEr
                      PbAMO7yAlVq8s/y3vXvnnD2bhLw9zxC4PfARlr1wOUw8xvcNPYwFzTwF5Mg9jgRGPe4iWT3MLtI8
                      AD6muTQwmTyQ1z48XsOYvZdnfr2gln+9QHITPJ1HuL3C5hA9aa24PWYupL3ALly9qu0PPV3Gq71i
                      /WA9zjWJvaBfzbuQAGC8pYGTPWjOLjyMZr883uikvZDfS73+BJi92GDDvDV+r71qfE89FNYMve32
                      yj0icwA94s1aPaCX2Dsi8QQ9QVPLPcAMGbsEdN08twA8vfrSGT1DO0+9Rm2bvUxx4bzKpH+9R0Jj
                      vUhVqL22epm9FxGtvWMJdr0VvY69me+OPRhOgLwA+0m78suJvaBqIL3ntbc9VXTBvdwFCr1w0Gm9
                      MOz7O4D4vjwCY4e9A8SwvWKgdD0qXFU9KuoZPerwt70M5vw8mEMNvPZ8dz0+vFk90K45vb1EN709
                      HW29Q0lsvTM5HL3CVVw9j0TDPQ6vQz0webs77Ue9vQDWGjtJFsQ9dsk8PfbUOj35eaM99BMXvcDj
                      d70iEsa9EFGmvchUwzwi7Qc9CM+vvShlXTzAUAk7yhuTvfZPp70o6yw8wP8Mu1RCyDy4oKu9HWO9
                      PbDva7wHiVq9zR6UvQDWpLl5D6s9tfeWPWr/Jz07bZY9AZyBPRTcw7wCE7W9AM1JuoAwyrvYPTM8
                      NKWUvK1Gwb1giqE7MqtFPaa2pr3AbJA6YMYzu1LAHz2kXOk8gaGXPYfvwT3j8Wa9QniNvTC+o7u9
                      SHy9ANw2OxiwRLxYzUQ895XLvcgEvb1IMqO9JKmHvQOmyj2AA8k8y3qYPYAa1bwwVk08KYGKPbPZ
                      u72F67C9uLqQvDCpPzyp6MI90jqOvbS4oTxRUZU9nQaDPbumkL0AXn87W/fGPeMoiz2SvDA9wNwC
                      PLeiMb2nimS94FSZOwCJ6buJir095Re+PW3FxD1g6e47GLvavOAdnbsAeoW9gHYvvKDbv7v19q69
                      CEyiPLIZST3Y9aC8OJ/VvBdYXL3o43k8/IvwPG59Kj3g2p699sp8PQ3wk70kvOA8OQqEPZRbqzzA
                      QH+9AEIcvb11vL0jcJs9sIvLO6rMRb3QnDo8Kh8avcoYgb1ANRg7mPufvSORLb2qr2y9KKQwvK2A
                      kj3m6BE9+ryqvUKrwb3DD5E9/duhvaOqnz1QOBw8gkFcPQBjfjuC/Vk9qG0SvIDMCzydQ1m9IBnN
                      u3YPFr1IE/u8SnBIvcgLl7100dw8wPtdvZJIAD2AR+q8UWKwPdvAkD0ATrk7A8NAvahfdjyAoVQ6
                      8AJivSB507yDnGi9B4fGvZncxj25lZc9l4SCPbL/AD3ZvLY9T6vFPUBZO7zOv6e9liVrPTpVZb0b
                      jpw9SJ2YPP+Jhj3aCsu98ce9Pcixs73SVCI9HxqKPcgwob3ASku8oAjjvGg+SDyEE9Q8SbCYPWkb
                      vz1sX/68QLZ/vIlxlD1wz0K8SyjGvf5enr3XbyG92p6EvXc5Rb1pwcg9pIzwPF0vrz1y1ws9UBQ7
                      vfjpk70536w9EgtfPeCJyjvjlLQ9XKMGvT3MyD0dPK09s83LPWbPIT0dO1q9KOG+vBVHur3gbeU7
                      gxFJvSNJqL3fzbw9R8qtvSgClDyDwFa9ZjUDPTKwaj1YjIc8RBjUPJEhkT3YMig80OHlO4NKvD1k
                      +fc8Q6OdvZZ+ir1ATKm9HBQIvfpcW72yQx09g363PTL9DT2qoWY9tKrvPP0mLL0RCoI9kDNkvMBO
                      0boA41k8AUepPUCDkLygMvO7CPKMvFtDlz0S5Uk9b0mGPcLuSz0NU2O96OK/vd38sj3hrbs9jBWt
                      vD65WT0Af327r5jFPQa5JT3JAoc9+8TBPfxF0Dzg0KU7Iz5fvU7TWj14FZ69Hu1GPQ4jkL0KD189
                      DcdSvUPhSL20GrW8KGGwPPKyRD1YzB480wmjPWAHlb19Jh29uFWYveyW8zxS1Cg9ANtMuyI+Aj2a
                      xsu9oP9kvXq8HD3F2b89BplUPZe1L732uhk9qjxMvWBKELu0hua8NGrDPGEFjD3Qh+m7TppiPccV
                      Qr1d9pU97AejPPbRZj3m2B09VAfOvADM57wdw7C9FvFiPS0Zyr2lcLI9rkthPcpCnr2KdFi9MBmT
                      u71jwr0zpVm9kAiVvWRKGb1QLU48gEQnPAkcgz2igS49OlmAvYDoxboA9C28rs4bPbj71LzYKr68
                      QiMaPXK5fz37hMw9RETgPFJ7MT0qxh69dGHVPLBEYr0Uyti8uniYvckwwj2Hfsq9sq9NPfqTIj2w
                      Lr47ECNsPN36Jr3gc5C9uLGMPBHlyD3m8xQ98N9HvajmU7zUcwC9T1bLvQA49bisr448sHspvFAc
                      4rsTVZc9AKavO6IxSj0QFX28gFfPO7CLNbwYAso8Fe+qvYN9jD0o61g8DRWqPROXpj0YxOW8nTy5
                      vWApPjubGZK9vzDHvRLSAz3dYnq9Oi5BPakphD3JVqk9kxKRvVj7DzxUotO8yYfAPYSm8zxa3xS9
                      6pQCvSCI7Lx0OKo8YEXUuyCXlDsa6wW9wzSsPSjwYrx3bLs9wNmMvMYHmr1Hz7W9cwuYPWNMRL2H
                      tbq9s8iVPefVZ702pXU9oxqlPZBfGL2y7ws9wKyfPHAeUbxPV7w9AGpeuVIVgL1Auco8gF+MOgaE
                      Uj00GoW8yT3MPWmpvz1LFoU9MIRRvJ03v70MH/m8Ut1APVGDuj20aKq80JiJvaAsqrv4TYa8Snlb
                      vfOnyL0AWRo7/WTHvZrQU72HfYU95BbUPBCPCLw3X3e9IP/5vGggmLx91509zusBPdH7sj0QAgs8
                      +KWdPBKRRT3QnCK84AwgvXPCWL3Qtna9bqoZPVe7dr3nDMY9IDPcu82itL3S9Y69htgUPQhi/7yY
                      lx+8oALeu90Dv73AlLE6TsiavQKFPj1ewyg9LkyavbAaKTwIjs281xtTvRTek7xSLBY98OyCvaCB
                      ubvC4WU9GFLHvZBkY73PX8y9Fn2EvbBhb72GoRE9jaS5vegI+LzzoEq9oGWePNSoszwiECc94CvF
                      PGldgT1gs4W8YQCgPeAeojyJpKc9uLuiPPCIlL0qNB49ojzDvSI/KD0HLnK9HmJuPYDYq70Uhc+8
                      Z2RlvbLXGz0OBDw9OX67PUqoCj2AKeW72vNuPcjwgDyAr6U7T8CQPUpcHr3oYY69ert7PUA2RzvD
                      K4c9cW6BPSQIE72AO4A8KhyGvTjmgrzq2JW92xCzPYD2P7q506Q9Fw++PRPuLr0S3nM9a3msvaiH
                      ADyi/Cs9EIAuvaCJ77xbwrA9QDtyvCHInj0CTou9KGsdvMBYfrwqeBE9rZ9JvWitoDxAqSc8yMW7
                      vFEerD2UlcK84L5cvSNJab2UPYq8uEW3vL6/aD3mUaG9Psh6PYrmeb36uye97tSTvca8lb3eAIu9
                      FSGxPVNFeL0qt1+904+pvdBMarxmoSw9Yp5wPaAJwzyAIWc8yu88PXRD+jxUrs684HeVPJb1dT3K
                      gUu941o8vWqgLr0o3oq88kywvdhMhjwAc029EGFUvRSb2Dxu+3896YWEPRBBHrzg8f27ACWouWg2
                      Mzx41ow8xZykPf1Ld72Prq89AsV6PehmJjxipmA9guGpvaiXfTx7x4Q94FVgveIuSz2ncJg9YLaL
                      O9kQij16lWg9wLbzvIAqfLqt/6E99z6rPVrohr2BlaQ9UPKbu80+ij3MkIg8ROyKve3+wj1dIXS9
                      Gt+8vUrZHb2qbMC9BJfcPNFnsD2x04s9ppYAvelyxD3Fjry96IGgvcCncTx0Wbg8Eqg2Pbgkgry6
                      yie9UMhOvRpIqr3aj5G916HLPYRSiL3Y6GI8qxmYPcmrqz0GJ3s9MICzO4vLlT0S6hU9cLCxvZgz
                      BTwipKC9ELMMvCipnzxCrzo9iD3mvNIMIj16FiC94JWLu01ANb0+FYm9N8+kPYBg1Lziqcu9C4W5
                      vezv8rywnIi9cCVVvAk4iT0QlRK8gcmBPQKRIj2q2qm9OOz6vLip77ztDbE9XWxJvTJfWT3JiIk9
                      nU6HvSSF/jwQLGu9fbpAvXrLN70iKjg9ylFsvQlAqz3+2SU9eAadPN50qb2nlsY9VtaDvbxEhr2o
                      0n88vFD0PDBSpTtCQxs9+ai1PdWHm7005L+8qfumPQM8tr0SR1o9QBeAPJ5aOT2w97k7736PPXSo
                      sbyaVYC99PimPIDS7LpaYDs9PYymPYpDy72gU6u96O81vIANPjxQ97q7eLipPKlBwz2YZQK8Vm0A
                      PRBxADyPkLo9SnezvdbbDz3hDZM9jTLMPZIzTz2BL7E9X6+HPS9xyD0Ju4A9l7muvYq4pb12ukM9
                      Om1nPcAXdjzFAJg9knNJPcAUr725zqc9MFU5PBMoYr1HHne90Nk0PC6Blb2u8aG9jXxXvTD5S73O
                      u5+9ti8jPcbYQT0M/ag8jPSBvFSdrzxQL7c78iXFvVR4kDwE/g299WWLPfgV7bwenqu9yB7AvO0x
                      uT2A0+68+2KwPTPByr0bDaK90iV4PdhfWLzg1L88H9K+vaDhnzyLtp095h9XPWDJebuZw4U9SgSf
                      vXGPxT07XIw9YAE6vQCFvDk0zKU8GW6RPccfij0UcJM8ncSIPSOwQr3aLCm9UrqGverGaT19ick9
                      gOXwOzCW/ruCjiM9bIiGPOh+Kjyh8cg9nLsWvWAcB72gUaq7yvbLveBctDsc94m9QLcDvRdCqz3C
                      hmE9PTGxPTLpZD0wFDQ8w7xUvR4fmL0COys9twt0vXQM5jxUt5E8BELvPKE/gz34Xpe8DlxFPSqn
                      Vz0AsRy9N741vWA6NjuuAig9DJiYvAAAxzvAAbi8UGVyvLCufL0sgw29oDq+PKSy/Dz0Cbe8MEls
                      vACMD71WVCE9ELlkPMJaob36GQe9t5YsvVmsvT1mfRA91+mvPZ8AsT0AYHO76v4tPXiFqTyv9sm9
                      uG/FvHPYZL2Aidw7l8ONPZLYfz2Qpiu8wrMjPbSZuTyAMKO6B7VQvTC8gTtzKnu9poZOPZ75bD3A
                      cNi6ZvgXPRgvqr0Iqaq8MI2HvWhDQjw4arW9yp6cvTOulj0AWDK9mFiMvK37Or3Cqjk9yATMPNT1
                      4byFBcI9mOC3PGyZo7wQCoe99u8DPaCIWb3Qzka89BS4PAK0aT2mcw89rWXEPaOCmz0646K9imdc
                      PWt1y707v7U9AgJ1PVCKeb2Hg6+90NMivD45VT0gfwK9hSmivfHToz3YaB88JlGCvaOtHL1dRB69
                      dObLvLB7zLsz5J+9XU/FPRrfQr1OSZW9Yh3BvX5oQj2UbPW8qS+qPbMexj065GS94MFSvTBFPTxQ
                      6IC99t0UvTCKJ7yaRWe9qKCOvAa7AD2wQ9K7YEORu8DDjTwY8dC8gSHAPRiM/LzzKJI9NKi4vOHy
                      uD3erAQ9kCJ3vZ9OvD2SeW09+shBPakfgz3RSZk9KLJzPOKmFz2M2QS9wqs3PWKSLz3A5DK9Zhkw
                      PWjal7wwurm75t1kPfn/xj3++QE9qN/DvJ1yyj3VOpE9Na6EPRK9o71gr9q7CEyLvEqmGz1Jrok9
                      M4GpvVcNqj1SQhg9LtlcPRNrj70qW6W9/t5sPYbNCj3QXl08ynsrPTY1MT0LNKM9ErR4PU4sOD2Q
                      nzK8BgRWPYutq70sEoK8MDfFvVCCMb33bok9tzNkvctIjT0uvD89GGQovJBwjL3D88O9AnyVvVuZ
                      sT1TKJq9X8PCPUMspL1QNma90WyiPTyygr26U7m9I3yjvVR8uDzoawS8B+GGPXS3kTxYEbo8arM2
                      vURBzTwaXCM96GS2vYtprT2iT3A9AKrLOiRX0Dzq8D095CPiPM3hwj1aTiy96XrJPTJpGD3QYTS9
                      KpBfPbCmVDxYvdC8E8PHPV/Qpj2tccI9JhwBPRRzxTwe04y90JGivckzkT2yrmo9Uw2tPXgisbyA
                      ijG8CsdKPbY/Yz2Z7ow9Ko2WvbD2nbs6uHS9gO49ujErhz3eMIK9E5wjvSb0QD3QdK+94F2Wu7M1
                      lT0wfZA7Gl6LvVpJur0wIFi8dg0KPUITUT0OPH49NqsBPVA2YjxM8Mi8+i+2vY9ds71iaZa9asRo
                      vRHSuD3CvHM9Iy6lPc5YPD3rlIo9NiOevTp/q715sbI9WOxDPLRH5byAjU284kBEPUxd+zw03dm8
                      4PDyvEGqgD1q5Ua9oPO3u0KTej1wKwU8xynEPVBfMLwkIg69XFfSPOBc2zuNBGm9mwufPRITTD0+
                      cRs9p8xkvaqmED3bZrK9qbWXPQzFhL2NELg9Be/AvYACWbpStGg9hGXtPOhGWrxy8DI9j9iVPcig
                      k73aUT895toFvboIKL2wdS69Y5GnPbAiIrwgu2u9WN6MvJ4elr2Wsp29GB+pvSGUjT0jV229qmRw
                      Pd7xcD3qWXo9E5iPPeBhMb3E+Ii9IPiRuxh2xTzuWiU90YTHPQrVUT3C81k9MA26u8tMrD239bI9
                      /8S3vSzTqTzoOQq882GBPew2pzwoYiI83RWQPcfLYr217qy9pPAUvUvQoL1gSMA7QppMPRcIjj0Y
                      FWO88f2lPWpROr3L4aY91rhyPYCCFbxAD9O8w7luvSX3yT0w1CW9dWqWPWD3srurQck9wDVsuzDP
                      Ub2acG69dhIqPRRbrbwCfzM9p6VlvS6FXz3oDeK8HfJ0vUrlaj0Yscw8CV6xPVJcdj1tUb+9HdmG
                      PfgGtTz4hbC9/GOGvadYyT2AH546uSizPeUggj0mKai9wFQfPEqxBD2XPKY9CKPMvBFsvz2O75u9
                      i8mYvUF2vD3soI88zQplvaAo1zvNhWe9BE3ePB30k73q0i89OiRfPWouOL0HeIs9daSfvXYMXD0A
                      gQ696EhsPIBOcb32ESQ9MpB0PTvhr70Q+UO93rievWAzrzz2cDI9mq5uvaLPor0mbww9fEIVvQyK
                      1Tx5q8o9v5qpPWaSND14VLu9OllKvdgEIrw1rcK9RrpiPZSyrLyu/jw9mBwcPFDcEr1dw44928ai
                      vcDnWrxprJY940NrvRIJEz1UPxm9DBDEvJGMxD0ChYG9IUDLPTpqDj1bhre9IwSePbD/db1gZ8u9
                      gOnIutr2Ar2WJVA9oSepPe5FGD2D33+9yCORvaAoKrs4u5C8cGYdvc02oD0+7Vo92IO0vN+Gnj04
                      jfa8gYGrPQBA3DjjbJQ92q8bPVj4XLwVWrg9AK63vaUrjr3QxRM80NKXvfXuhL34AJm9qnVCPTQe
                      0DyXdb29FU6fvdm8hT1Sxl89x3kvvWRf9DygIKs8QEIHvFPRx70plKw97PuIvV4jCT2df5i9mEa8
                      PEjYuzwA6ZE8kNEjvRs5jb3lX8W9rEGJPMQUDb1wfmG86l8vvS6CCD0u6Cs9gyuAPRCAub2q+gy9
                      6yOvvRgbODwQrl+8WAU9PJ4djL2wgZg7dzA1ve1JmD3K8lK9Qss2PW/Zvj3q+669gDvzO9u6sT2h
                      e409eKCnvYP4ar0q3rS9LkqiveicZjzgorm94TWePVxLjL3gHWG9R0N0vbRxqLxCNwk9Q8S5vWoy
                      ET3aajU9a4GrvSypAb3QDNo7KzSnvSpBeb36V6C9mEnMPO3/oL1HAZ09cWbAPUnclz3iuF09zL6K
                      vfq8B71jX8E9zn4+PcAMFzuBoo49sCCNvfggz7wAc2g7Wh1QPTShyLyKwMi91SiRPesNu72O3T89
                      bDyBvcAOeTxQ8k+8ksInPcc9lz10/sC8kL8Zvdfyer3AUCs7oiEwPcxf3Dw9jMw9c0R+vbDpX71T
                      Szm9J83GPX2Qv73e3lg9IJGEvRs8tb02+U097PC9PCosbD229ns98yayvbYZIz0qkxC9vreevULY
                      GT0iRQ09O0qIPTGNpj1ybWM9UxoiveEhpD3qzTu9dsU0PRBvJL17GaM9+EOLvd+qgD1SgYW92Ktr
                      PIKKkr0ddni9mCMRPBizDjwQSC28KhgfvaD/x7vgj4C7xy2wvTD+uzsYArC9aGViPBC2HLxH+JQ9
                      +A/GPEyK1TxVEpk92jIavQAgtrmXA8E9l9CZPYB1hTpTqDa944hxveaSQz3eSXI9mpYlvcjI1LyQ
                      JAY8QjQBPdEvvj072bi9aPOyvUoQHz0AvVK8EY2pPago8bwNrWu9qshJvW12Rr1Y0mc8PfrFPQAN
                      DLsA9968UxY/vZhwebz9OEq9pAACvdGijT3xbMc9yQSSPVuGvj1Xph295x03vQ3xkD0Asim7LvJW
                      PeBba70CKpe9c6rDPYAQ4LtW7oC9LDWjPJrAMb3QKW08APrgvFf5Pr3ExdY8xp9qPUOkoz2dMn+9
                      qmR/PQMhTL3iB6e9QAZ2vfs9sb2004i9xFgSvUwim7y82Ns8Vr8IveJ7Vj2Y+IK8cQbLPQPhkL2g
                      VG27p/t0vWSV4Tyo7RE8AGVIvRAEn71vWI89Enh+PYXavr1uRGM9rXBVvQaaBr2tS5a9DX8kvdiu
                      kDz0dvI8gIxHvGY9UT3YJ5G9dpKUvdbRGD3any297WOhvRgeVTyALb08je1nvcofJ71AMEY80Pml
                      u5Pbr73KNGk9hYm+vXc9L722mRi9mIIdvLOzuT1YthM8TIXpvOZ1BD01U7i9QpURPZVyob2Aox+9
                      olyKvbqCuL0GLmk91N8NvQk2oz0Av0c7JqdaPUCtjDwOSqK9iNDxvOprWL3KhSe9Uc21Pdefrj1O
                      qZS9aXGUPXZcDr1NMG29oMy5O2nitT2Yv1C8y+KTPePtwL0mkJ29SKW9PHOEmL3tKpA9+NKQvR1a
                      uL2g+r+7w6qxPYL1Uz0kkNs8+nwvvairPjwypUE9AISqOpDcdb3MN6889oyXvZM+mj0Fp4g94MXG
                      PG1xoL1tEC29LRiyPYCo0btxG8o9qMWVPPsRlD0PPJg96BXGvMSBB70g2L67R0uLPUSG/TxTkFy9
                      IJCYvX0UQL2BQco9UzJ+vf3DvL3NfJo93+SHPRJqMT2ACK+8HqegvakTqT20dow8DhqkvcpzVL2Q
                      AGM8JldJPTA3ULxafou9LTiBPfM2kL2vk5E9pisLvWSB3jwROb49kAcuPOA43TuuDXY9pNTRPABG
                      kjuqxmA9qGKGvNCqSDwxUbQ9AOEMunNmcb1xZYo9AAfVvGLUAj0CxGE9qmpBvXnikj0QdI+96KNf
                      vCDc/rvAdDi71BSwvCJqcT0+vXQ9V4JGvdjOnDwUL428/cnEvQL5aD1Qtfi76HDpvIcInT1aTC89
                      Nfi3PUd0PL2O7FQ9zqsyPbPhGb1ZRq49A1OwvWHEwD0Qcjc82PC1PGiwwb0zM3G9PfKOvWLYcz0s
                      lqS8EOuVvVJefz1u8TE9+uxzvdB2X72W02c9qInmvDDf67sI86a95oELvWrtWj1Au3w8rHufPGOa
                      n72KtQ+9qNG9vUn1vz2WM3A93eMfvagYnLxOKQI9aH1hvGgGNDwmuSM9AIw5vBdeoD37r4U9rihG
                      Pc06rb0AHRi69LvDvICUPb2Z7LQ9KkwZPap3T72e0Zy9DQZPvQ0shz2wDzk8SFHFPNRUmbwe0T89
                      jIbOvGtjk73AhD07IQuwPUY6n70MIuK8qcnJPToaGT0atSo9UZaaPd9gxD0ovsg8g01QvQJNRD2g
                      Qau7AAPXvJkwwz1ZxaI9V17KPYo2Ib2108i9tMSRPN1vxb2A9cY8T83FvQruDT00Xrm8EOy5vaDV
                      fbsDM129pPX/PCDZHr2mZEE9ABY5PDdDJr0+5wg99omOvbP4pL3oYMU8P+6UPTvEw73PRbg9ROGI
                      vYfxjj2sWo08AJPMvKC7BbtgXBc7qotWPTrGD73zV029KO5KvOloqD0SVlo9KMgEvPa6GT11SZU9
                      FaKmvYBKcDqE6Og84eW/PeI4ZT3BD5s9sidvPWEXxj2APaG64dqjPcfPkT25+Yc9GrmEvZKacj34
                      7oC9glnJvSoAGz2alEq9wCt5O2ONkr0A9+e86vc4PQMQxj1TRHG9AYOUPVh6BbzgRdO70KtzvV/B
                      hj0W50k9LGPjvBjkjbwSFg89JDQJvWZSh71KqhM9+z3LvSjESry17oO9OteMvaPiMr0kIYK9/p86
                      PXlipj2yHzE9cpthPShue7yACsi65G3rPEzLvrz9SpO9FtMOvdPGjD1xssg9OfuzPQJTZT0ABsS7
                      ivJUvWhxB7yA8hO8kI1KvYKZED2YD+e8bNyUvOB2qjtv6sW90D10PHP8XL3Ykbe9aM5VPAB76bzn
                      koM92jKpvXNRmT0QKVY8EFUgvaiDDzx+3FA98noRPZDXNLwlCLq99UbGvUJCFT3dL4I9I+SNvYZr
                      Hz3CAae97DqzvAiHhDzTHsg9ff64vdADRzwK/xG9UN2Su2j1Ojz9ZjC9V23CvR3Fkz1YSK68kpnA
                      vTBmYL0Y0Uo8jko1PV0OQr1ASFu70I9AvM3sgj2wa7Y79CYOvYvXpz3dyaK9gaKfPcSv0Tyavmk9
                      w3movfLQFj1boZo93ePCveyuhLzawjq9QpgNPRTo/jyw1Qu8gqKUvd2sn72aqlC9i0vKPfhpkr0/
                      9Ik9cxNvvVGUgz1BCMQ9xpU0PeiDB7waTLa97OC1vChhpL2tuzG987WQvVBoKDwAg0E7AMKCPJKK
                      cz1mzCA9e4aiPRg21bx0cYw8+YiIPdPGb736I2W9ouYRPU3tH71Ox3k9y9SPvcMedL16fzQ9y2Gb
                      Pf/YgT2qLzG9ANDYO4AjVLxeoJK9zKfTvICGrDwswrU8QDS7vF0/tD1yrZC9UJjAO5jxk73I2qs8
                      GZfBPQotfT3KV5C9cLfFvcRS7jz3qKo9QAlpvLzCC72Yn0k8gE6uvMovNT1tvai9NpwAvfDdSr0h
                      u5k9wKCwvDoVjr1wzWW9mNzIvDqGTD30nL+8UsdDPZoZJD13n1e97BbfPNFWwT1Qe1S9oKLWO36t
                      Nz3aMLa9zIGGvd2doz3avWi96I+jvRhb4LxDM6E923esvWihWTwPubm9GKd7vIbBmL3QaA48oELJ
                      O5fCeb1zKqq9zSBhvYCp9joMXuo8p4YuvZA0eLy9dMc9OrcyPXmGjD0Hjne9LhQ/PTlMmD0yV009
                      YjWGvYO2TL2BQqM920CSPaZIQD2DGaM9jLKHvUC9zDwnETS9yIOhPD7Sgb2S7UQ9LX6cPTB7+7sv
                      IJo9NhSTvcBZJztr9aW9Ni4aPWE3lz0ifoi9JqwUPTDoQrxXhrm9sCO9vYBD4jqARtK8XY+4vVZb
                      Xz0K4Tq9ylZtvZmWjj0MRJO8UK+UvYDZuroAEHW4i3qlPXDvG705/oo9U8jHvYP/wj0ydhk92Nmq
                      vY1wqT3jd4Y9uld6vWU5n710YLM8iKa6vAVNsL0OjZ+9ANjzOkWakD2tuZG9P4W8vYB+8brs++O8
                      cKVZPNj6tr1u8Ws9yihCPQBAWjmYWs+8SJSQPB+zsb35JoQ9LK26vEK8eT0991G9AHLUuzmPtj0M
                      Etu8OnUDvfAherw1NqK9iC3KPFFfvz0yWns9AFGVO/Amsr3WeVM9cnAaPd42MT3MFZy8AKs9vagn
                      AjxBeMI9Ei95Pco0W73kawy9+UWePeiSpzzXo8g9Ys2HvT1dKr1A06s8YGFeO2CWJTuqo5C9YIx1
                      u7BPxzsJ6qg94jjBvX6vmL3oqU48zQnIPQM8sb2z7FO9lSKjPfDELrwoWLy88VGWPW3dX71M7Kk8
                      TL/rvEBOsjwA4CG5gxK8PVDmmzuUzvY8czl+vTZlFj1B8K89TPLjvDCLS7zMoqS8Hi0JPZoWMr2Y
                      nGc8AFinuVk9nT3Q8dy7BIvyPKbWhb1gLya9jpdhPdi/G7xchRW9aCkTPCjUHDxobZq80/XEvZKd
                      l7275ZG9GhZEPam4oD1OBzE9YMCQOwI0nr3nWLC9coQ4PYDOHbo9Zru9Y1RdvfZOfj1yWAY9G5WS
                      PTC7vjsgEco8ut4sPSWNij0ACTE6WIZnPNRVuzzB8p090c3FPYfqKL0qgTU9t59BvYCWirtQ+bG9
                      oZWoPXR3lzyH2zC9k05evUDHorpDW0y9gHLgumBPM72CjG49Kc3HPYFtsD2gYyq7oNKOO3Vjyj2g
                      /xa7UyB+vcDoWbuc3oG9oRWmPWJUEj2jMqE9vipEPdgIezyIG688T8myPbT15DyfArM98FE0vZ7Z
                      Jz1zz7e9sYCePfStzTw61jc9szNuvUtnqT2So2c9MM1RvJKPDD3EPd48ibCHPdKbJD1Y+8Q8iUKn
                      PQMRqD04J5M8BnpBPZKdxb2jK5U9+m7IvWgzEbxymE09kox+Pf11Xb1YGpQ80S21Pfsgtj26IS29
                      wS6OPYrDMz3IPsG8qDXJvT/jyz0QFyC8i/6nvUwHiTyVorW9emJpPZJlir1V+p0984J6vYtwsL35
                      6sk9nQtavZhZojx7nra9CilavYyqir3NB4A9cFxEvTRrk7wAUFS5AKatuaeYxL0A0q457X2pPRi+
                      v7wI6by9gU2RPWgSA7yognW8rdxPvePSnb3XfF29LFmpPCBXhL2ommI8OvywvdFhgT0dv4U9jhYY
                      PUAFTDsVVYq9yi1+PayG/bwMXP48agFfveo1bT3Mw768uBOjvYEivT19hK09x4a6vS5tKz1gBQC9
                      PWsrvQBBwrusf5q8NLmCPJFBpT25HJw9FeuwPQDwV7sb+KK953/HvZhFPzwACrQ8SEGnPDCmc7ww
                      gs07kIVWvP05nT26DYC9Hf6SPVBYRzxj82i9WUqRPaPefL2f7Mc9wllMPS+ygz1OEX49iFjMvdg7
                      WDxAiz28e0aDPdlppj2HOna9/SnBvb5PmL38Se08z5SzPdpEBL2KqWE9grEMPQk9mj1aMI29vRtn
                      vdCRW7y/rMK95SWAvTsAqz0Vd6i91C2BvIawDr1fKry917+0PTCzOr1GnVY9QIJ1O97Edz0wOou7
                      WJYWvAAVSbzT28i9IFe9vICdorz/yrG9qDJbvHDSFTxBj5Q9+yXGPWeLWr3o6FS8wEqCOsT65jyg
                      8eQ7eESNvVikrr2xXrI9MzGfPZCPMbzgRNo7ELGvvScpxT0mkay9iAjmvPJqdz3ilUM9HiM3PQAE
                      rTxwUDk8WXvFPSynm7y1IKc94GNBvdpgrr1XFr49DE2mPGmbkz2ji3a95V2gPcB6YTvzciy97Abo
                      PEbKGD1ibW49MqibvdckHL2KGLC9oMVbu4yvmrxxfqs9+uPKvQQ3gr3DlVO9DlsQPaxQvbxoDaI8
                      gPZtOmDkT71gGd+7aOM0vNtPxT3Ykx88YCQTvVWijb1WJZe9C5+tvaZFGD2IZM28bJLAPNF4yz16
                      6oq9q165vVMMkz2b5pM9MIdXvL8huL3AsmI7gOfTOsALob1QnKy9oibIvaIFoL0CR0k9/2KjPUrP
                      fz0SZ1g9UH1HvIaIWz3hxaI9HWWNPR/GgD1rdag9GfyaPc3CVL2KXW29frQKPWqkIT00gue86sQ5
                      Pb42AT3HEas9kFRmPFxqir0yi4K9FuM9PVLOgL1a2rW9+TmFPaqrfT3IeI+9ZnAQvWNGpr3ozl88
                      kmMQPeIMMT2ySqi9PTVevaAYDjvMOhC9keeoPSGWpD0D+sK9mPq3vAU/gb0lsaK9YFGhveL0ID1A
                      5Vk8AKQ6PNfcU72IIL299A6uPCcrzL3H03O9WDQnvEWbtj2s34E8vffAvXdcnz0Yano88tm3ve0l
                      xb12DRC9132HPYBYpbwsJOw8PfqXvTArJL0Yy8W8QI1pvInprD30ToE8bqkKPQbvjr03asK9o/m4
                      PZg8jzwYg1q8h95TvcG1mz1i7Lm9spcbPTlQuD0QfxO9VLyhvEZsbj15V4k9vrBfPUC/6jqVF5y9
                      wJZZuwEnqT2SuaG9oXWrPefvbr1T35K9F3OfPaeeIL09jka9erEGPZgcDjyIJJu9eTuUPUKAwL2O
                      R0g9C8CTvTUljz2CqYy9F1t2vQDwhjotAbM9sysrvWM4tj3I5528OCmvPAqMmr2GHmc99+LCPSuq
                      lD0KQDY9Xddivc56hr16wQe9UQCZPQLNDT043fa8IPOiO4o7KT24HKe9MYi+PVXln70FB7C9n66B
                      PWSw3jxphpk9CFGovP7HWz26ZHq9yrhMvS17cb0ivFU9Ndm4Pb1ZYb1jwHq9AmBEPchgyzxg6sk8
                      tVOtPcHntz3Kl3M9ymp9PY0xkr0vYZA9gKRGvCKYYD2AfKQ6/poVPUrolr2AhQW6EAC0vdRtD71G
                      2Aw9IXHMPbf+vL0DS3a9aid3vTQ72zyA0KS77pMSPafUyr2QVhw8PmQzPbcxlz21Lag92qgNPXuD
                      yb1VoMM9wIvMPGkorD2aJAc9kV+vPZiupbwgFdQ7/JkBvXqhPT1ZboY93n2svUpoOr0ZYr09eo0j
                      vT91xT0M3tC8wOQ0O9BKAL2V+KA9PemwPbIhqb1X0je9pa2qvdc6xb0WiiM9TeRXvfF6iT2S6EA9
                      nQZPvSqXRb1uWww9441yvTOmbr0AiwM6gHIlva1JSL2R4L49rjRMPXiLhTwoLQ686hCLvRezJL2p
                      X649d0+CPfHBpD0HR7g98tKKveUaib0sFok8KKCavEMXgz0Y8jA8MtDAvZi2yr0AnGa5ALN5vDiI
                      hbydL1a9QIWXOsZaD70VOME95xXBvYCJxTpXF5o9Qxcyvck/hT3A4ZI8EAx/PHfuoj3AaHO8wwc8
                      vQP/vL1AY568jAOnPNIkBj3Y0Jy8IcWEPaVEq70asIC90FWZO4pSfr2AKYo8cY7EPbAgy7sAj7i7
                      5yw6vbHxtj1tGJW9q160vVqqxb2oT268QM4qvUR/F73rAa49Y0O/PW4Xlb3LSp09FEjZvKRW3DxV
                      6ae96mWEvf7dkb14Uo+91aCoPTA1Y72YuI28VOLBPIBM9zowucu9MbShPbBAeb37ire99HHMvFjm
                      ibzoNpE8bzWlPX12J71l4569dXu+vVgXnr0MQLi8XcZYvTFVrT1Np6O9T06qPVJ2r72a3wU9Yqg0
                      PcualD2U+eY83zPJvWq2E71tvq09cWzAPTMbm70aUhg9qGFqvIBvtbvY0TA80D0nvAINST3145g9
                      0ZuVPZJ7Aj0RSIU9mL5qPDgkkzyFdYK9mdaUPd/0sT0bMLi96ASWvLnbgz1g1FU7mOhSPEwG4bzY
                      FtK8dDiGPJLHDT2CTHU9DDKbvFDtnTu4bvG8gBlhPFlAoj2GEQw9+vEjPajITTxRZIo9gNN9vQvC
                      mT3L36Q9nZJWvZUXmj2AOlW6fPPoPPYKZj0hkrM94MewvVe/qD0lgY89ZpAUvbLEsL1b5rc9APZQ
                      O8Bm9rpjdTG96bybPTAw4Ls2Njw9q4DAvSunmj2tjLW9Di1DPW0yhz3iNbi95iU8PfLqgb0gg+O8
                      cN5HvVBNNDy4C6C81DPevIfWrT0AEgm7wJIjvQUOur0ucoy9YFKzPHBlXrwvgYE9txvFvfSS1jzT
                      Q5e9feuZPUArejygmNW8KYexPUv/yT1SRTQ9aJnpvJYwGL0wADo8pkKBvbJDOD36CAI9J3xxvYBt
                      9jvepzk9KswgPRZICL2942a9KCtavDYrlr2KxkQ9XuVsPaCVfL3Dtmq9qnVPvTVSo72q3Wu9YP6X
                      vADQ6zpQamI8nxKmPSAU+rwJr8U9yPWWvJW6uj2yfjA9oG1luwahDz1Yr6U8sJG6vTXIx73Px6g9
                      W1zGvfVZkj1wflG9jJXwvKIPp73A2Xy9QMS2PD0iab14+5G9iP2HPKOUOL20jdA8IBGGvKJ6cj3G
                      nIG9XP7xPDtij72ECuo8fUKaPZB5ar3tDle9uDi8vPDKSzywNl69WuROvao7Tz16WH89KGVwvAQf
                      0DygxJc7h5uaPQDCSjup2bY9mXWwPc+ix71Qq1+8mAA5vL7Wj71Ye6W9ropfPZHAhT1jbW29GiAB
                      vWGtkT1XNGm9eB6+var7eD2ojYm9//S0PcxNobzj5I49uKWAPNZQVj1Ctw49MKmcu5aOYT0vncu9
                      +pNGvS3bQr3am6e9gRuYPY1Fpj3PksE9QsJxPSgDyrxAs/M6SeCsPRbPCj2+PqO9ADauOayQtbyp
                      S8Y9k+SMPTpcfr2gEPq8NTGRvRoPKj3+Ioe9Ngx2PaAUdDuy1hc9AA6WuQANqLxdu3e9qlzHvWP9
                      rT1HPVy9Ox7DPeIpAz0yGm09DEWKvSzAi7xgkc87U+eXPQZZKz2uDF89QFHBulDXjb2nXYY9U1k+
                      vWRAAL3tyHu9+ggzPaqxiL1g4vy7inQmPaC66TvMB6m8YUGHPS1sWb2veqY9/Or4PNBJobvQS1a9
                      4FzrO2qALL0HWVe9aIKUPA09xL3gwIC7+gS8vRfJUr3A4E67yTvFPWUToL010o69ACtgumYZBz0g
                      yKK8bJSAveHyjj2j1bG9dvIQPYU1oT3GipG9ANAxOIzz07z4hsk8QMGSOrHJhz0Awxc8LQ40vcgB
                      kLwKtEi9AEh2vJj7S7wBFoM9U0Q+vWCNG73A1h47AHbfui4klr0qyDY9Hp5wPZVgxL1zgoA9NvRI
                      PXCwm70a9yI9lJfsPDgU87wQETU8HjlPPQeRY72+GEQ9yO3yvI1dnr1pKb890BKTOzXFsb3PpIo9
                      ls4vPXhXsrzFL5+9gl47PQSt2jxAFGu8KqwiPay2kzyySIy9C3ejvXP6nr0p3YM90l0tPTjamjzG
                      +ys9ILzLu3EEnD3NyKY9cl4wPcWBpj0HXnC9VrdPPaj2XzyqZxs9Q/yRPeCHjzu4odO8la2DvTRi
                      nLwobbq8YCY6uxZufT2+vR09mJYFvEpbND3A7I86E/GbPREsrT2gmsM82LN8vFUZmr3UkZa8dhoY
                      PXJPcT11GsO9QEAYPNKZSD2JGLI9ALjDupg56bw17aI98Od/PMJ7zL0TvEO9EoIiPQCXq7wnv8Q9
                      hYScPcqbtL0CYIW9K+apPQBIsLtgjE69OscAveVagT2AGjq6pq0IvRqSL71Dh6Y9SNOKvQBerzlG
                      CwW9Pr2jvQonTT0UKMO8GIiuvXTahr00KKE83lYyPSAyVL3MDte8uC/AvCCEer27B8U9gAN4PAqn
                      db2690A9yY/CPcD3vbxVaJ89dF0GvXlEpT1anqa9uop/vVuBpD1H28g9w7KZvW7Dgb3ZHqU9FVbG
                      vcr0t73w1Ue8WrleveDv2bxmA6O9WHRwPAkXnz3Qplk8dplWPWeGd73UWQe9AEYdvZExpj1IaMW8
                      QZ+aPSLoHj0wxxu83Rh6vWCwA7uOpiY9yhIRvWyVoDzyxTU91dapPefyY70yhSE9XViMPUMEkj1h
                      GIQ9ETCKPeU2uj0QFzq9gHiSOzoUcr33Rak9bimHvS2pqj3oEso8oBzIPIK9Xj2N0cu9gN83vMAU
                      rbwiywI9kJYGPGAV5rtr4pW9iAyHvGDGVjsiPE89WLTLvT5wWz3DkSa90p2Nvco3sb1KKzw9uutW
                      PYCvuLpXaGG9Q9RAvfr6HL3Yh9C8sOz4u1rrH70TWbE9wEDouoJYDT2qgTU90NIzPGAhXLsTc6I9
                      K/aMPUAbrDpoAa68hE7+PIAG4bv7gaA98Y2LPSBnY70Qgy29EOYUvPDsLbxQNlu81cmZvSAlfr0N
                      8C+9GDpRPLzz+Txs6pm8mOPxvNmPqz0aQHA9dS3Ivd2bWb1scII85825vSeOUb3amFq9puV9PWgr
                      vry2nhI9LqB7PRM3Wb3JA6M9ho6XvUr2Lj3yP2s9fTurvUv1vL34ZuK89kp7PRetkz2G2Q+98ox9
                      Pcwq9rzl8MQ92WGsPaKOMz3G3gK9OqwjvRo8lL1Ult48rNuDvXA3Qr21OoO90TSaPfB1ab2AMOU6
                      TXqtPTD1Zzx3K0m9ebOdPYM2nj25qcE9AFA4O9cvcL0CHi094HvivGxJizzTHlu9wPzyOoWCjD0o
                      MiQ8WHiIPGawdT1GrgO9GeucPRVRqj3sNca81Te2vXJ8l722ZAE9OmOuvfUxvT1vw7A9Qi8+PVBI
                      grvUC7G8VoOCvQ1ewL1/d6w9YJJHO7cqVL3KtVS9V5KVPdByEL1TgFG9W5+svQAPvTt5fMs9ZwYa
                      va6rez3w3m68auCfvSAorTt0RMm8Ig1mPTD/WjzF8Ys9A8cqvRf0xT1nGWa9+We/PdXSoD0uDD49
                      TvUqPd7MpL3AHaO9N2lUvUOnLr02hWs92CWAvTGOhD0utxE9Sk+ZvcvdpL1GMCg9dk0HPVCM1rtY
                      B6k8EsvEvUCOojwwJP87hj0zPS+erT1TX3K96LKaPJBsU7ygBKA7OqW0vbQ0ir3gFL28cFJavMYg
                      D72X5DW9mqUaPQ6jCT3gX4O8S8ilvXFenz2M0908FKiovEC+I73ZO5092rxPPae7rz2MdaY8eLm/
                      vEAvdrv5uak9srCOvcyNnDzajG+9yxW+vUfydb1p+Mk9O4uVvTnKnj1TJVW9DgOhvRVVjT3A5MI8
                      Y3WWPQIcRj0T8km99MygPIKNNz3jJU29KXKNPXbNJj1uaI29aRmVPQoAJj3dtMQ9gILVOqCCB7sk
                      yPk8YpS5vQLFYD1wgnC9sHkPvI07eb1AIGA8MIsHPOVSmb0WCBQ9aF7uvH5HGj2WeVQ9AE2GOdJk
                      Gj2weL69ozNsvXD9Zrxx85I99sB0PQKFEz1KIpi9IXeHPeq+BT1nf7m9EpcHPfBUI7y2ZI+9OmS/
                      vYCver0M+9G8cBAPva+ay73JEJM9ipMsPeJyUT2vPZY9IN+uvMgitDw0KJc8GjsVPfppmL1/y6c9
                      MnYEPQ7zWD1gdtO8DDabPCJUeD2AxRA6qvxkvbJZrL3g5Vy9GxeQPRf9I71k2tA8GAVsvEIPZz1H
                      AHe9gcGJPYcKxL0sZZ48kIpsvODoIr1tNUK9dnAFPYF4xz12ehg9oE54uzDYY733P8a9N62FPYDy
                      5TpeOSw9DdHIPeN1sr2s4eI8eHv9vPDgc73kIdc8fSxRvf78Aj1tNKS9aI5XPHYsDL1Y9EG8IQK4
                      PfLATj3auIO9wAXwvPcDpT10Ua88jjliPQDjpbvC0pa9APjEOer+nb3Gikg9IrYnPWfDQb2YZDi8
                      bspiPTCbtbuAV/Y64ApDvYe6wj2F8ss9limrvRjJ77ym13A9DVxFvd3BvD0642e9HvRJPddMIL0A
                      aPA4ECZdPAeMxT2WvCE9UuujvW9TtL1UA+i8LUdAvTAVPL3ODE49dlGJva0WG73AvTO9cn1xPf1F
                      pr3qUyI9oJTsuzD8ZrzAyqA8+DW5PCWGwT2+91Y9YHnIu1jzXDwQvFa9lmSOvbMZwj21nZ+9q3yL
                      PaHctz2I/4q98oEZPeghqTxQCGe9QJvDOn9ayT1t/1+9+toSvX/Soj1iwUI9fZJ7vYBg2Tv0KOg8
                      QNc6vLKhkb2sU/g8yF+evbgdnzweTFs9jaOpvWcWLL3kl/E8DY5zvbtXur3A/mQ86AZHPBfgs71R
                      v7Q9BV2HPea7C70Y7xc8MM9JvLgZyzz4MIm9j4eZPSbJEr3MFA69ah9RPelQlT0Adve7GCyKPMB2
                      zrqIa+68TdjGPViytTxIN5Y81iYNvWzjkjyK7wg9vjs/PYWTtb1YB3s8wOs8vBl/tT0hxpw96Bp5
                      vKPcPr0AVkw8XSBJvT/Qyb3R0oQ9ABo9OQiWrLxrjpS9MFcSvWtCsL32aTI9qbPCPVYHGD1ag4q9
                      lamRvTu/sj1skxe96e+3PV+Xsz0oxmu8NpR9PeWYjz1qLxy9WpKIvYXCk71L8649wDCZvBcrGr1w
                      Dxg8g04fvT43or1YbKk8DDeKvaV/mT0AnpU5Ni8mPcAvhb0Prsq9IWuOPWDStbzkchK9YMkrO+zJ
                      qryZp7o9sB5nvAxbBb01+oK9dqVuPS52JT3g6aq86FrgvH96sT0Y3Yo8QK45vGSJAb1wlFw8JYOx
                      vR82pT0gQqs7DM3pPBIYMj2vWbk9jBS3PBLfDj0ChS49q1mWPfaZDb3Y/C88kvosPeMtcb00/NI8
                      aImIPEjnjbzodLm8FKSVvEzd7rygRw69mgorvaA1D7vURte8Y7avPSQ2/TyZqIA9YDTNu6LLy72a
                      OSS9fhp8Pb6AcT37ccY9J1puvTrxcL1qL1c9e3a0PeKHPz1Rqsw9IySyvXjg7Lwso6w8Zg4XvcCw
                      rzpMfIe8YPiNvPrROb2T37K9Wf6PPQK4AD2yfwI9MjQGPVKLHz1z37y9C7CqPcJxCj2xgbY9/2u3
                      PYU8xz1CIis9YhO8vSFOjD3MP8W88I5YPD2utz0a5le9fMyCveZuhL0atQ49C/XBPRnnrj0l/ri9
                      7bBVvbOcfL2eBDw9B5amPbM/tD3QoZM7w+iWvQBgxDxpybE9YEJVu/zoB70HrL09wqR+PVP9n70t
                      RLe9yHzIvas6xL2R0b89eES9PMTEzTyghpq96A2GvSYvVD21Ar29PeOPPSpYAj1A49S6Lvl2PRS6
                      2bwbYrA9jvuKvaJ5Hz0HZSS9daacvQYjUj2rJZY9tR7MvcMGkj3T/ZE92PlJvHJYQj1g2Eo7cG+2
                      vdl5tD0rK6u9YDLCvTgJgrxClHE9QVGNPeiPrbzUB6A84S6tPRr+nb16L2g9sxd6vU1rjr0ierW9
                      iBSOPD4aUT2Mkfk8UD4RPMBRBL3lZIy90DBRvSU8gb3iyq292ME9vKMxHL3dxsm9M3WTveSN6Dz6
                      URU9AClkOzEmqz0w3xe8PlcUPTMrWL1m/Vw9mKiIPHl3hj0DiXu9xXibvT2vub3VA4E9HT5xvZnA
                      yj0A5tC8ofK8PXCSOzxgR0K7E0mSvWCX4DtgkbM7zcC7PYfKwT2BHYs9SpRbvd3Pob0gyKi9+jpw
                      PRKZHj3X2649X9qcPQEbuD2UsK88yJPhvPaWMD2j3cE9w2RKvbo0AL1idJS9zwSpPR3TaL3gRra8
                      mLLCPLRTjjzQBg285rFrPagXQ7yIf7G9oOYSu9itY7yQpra9bQaGPazZ7Tzp5Jc9gA0mPEw+r7yb
                      dsC9lztLvXVFur3juTS95j57PTP5oT25LqM94ErSu2Gkrj2MLQy9lK6fvKmVwT2Az/C7mio0vWK4
                      Qz05ccI9AGgRvLejcr2Ie529yJCFvHT3hb3K02k9UGFRvTRxm7wiRZW9QMoyPOBlqrxHnGS9EmCT
                      vbk0jD1MRf08SP6KPNbElb27YLI9RKf/PKzrh71WFQ69ZeO2PXrBZD1SkSA967ubPUyWpbwoTna8
                      3QOePUCvPDw0TZ08d96hPRJUBj1Eiu88koSRvR7gTT2qWxw9eMKfPLKYPz17Y549BsOavdI3Nj1s
                      Ubu8MYy4PVrlFD1AGqE8Ll+WvdqsFb3MWRC9ERWgPR5XbT0CXxc9U5GcvVCtzrv5hY09tfnGvQAM
                      bjmgpMu9+baHPREUgz2ivwg9X++6PRdITr3pbaw9ZErQPPDFTb1n2XC9UeOXPZ6CkL2Akke6Ik85
                      PQdLzD0EHYq9MHNIPLW8jz3KYzs9IA1xvUnasz2bpKI9JUWvPRzeDr2Wayo9CjJWvdHZwz191rO9
                      qzKqvZinmzw43sE8m82fPTfTrD0ASJe83RaXPRhydbxiMno97plmPVgXHTxVDaY9DHmLvB8NoD3D
                      BR+9cG0xPKPjUb1Hk8y90163PQuop73u6mI9IN3gOypBDT2dsp89IZqgPeHLsD1TT2u9QX2BPQws
                      xDwu+V89Ol9WvRvmxz0gHcA7eE7JPNAb3jtYNtK8kO8evHKoAD2XN8Y9x7StPbCnTDx/trG9qMdq
                      vLAYub3CiV89DLOFPICxl713wWi9eCmjveJMj705nrI9sPK0O4f7Wr0v94Q9w8aXvSdHuD3n+jS9
                      ALoCu/NfiT1gpvs7CNiGPMH9rz0oj5U8SmqdvcFLgj2NrUK9aOa6vF06qD3LVsm98rJVPSD73DsN
                      H4o9AvRRPS3uV71Y55G94DTZO0ISDz2UeO68+nd/PYMnuL0nnK49dJKdvOHLhD2nMbm9kItPvJP3
                      ar2Pwsg9mE2oPGU4lr0uQnY9IqgLPRjjkLzYQim8ZzMivferwb1olL28IPlqvVI1ET0tjyK949aD
                      Pdhiy73yfnk9wPyIus64Hj1Qw+M7V8ytPWb1n71Jprk9xhVqPf+wwz0Hvze9kNYrvc3fWb3Aye28
                      5+29PQDi1rzS01c9hye3PWbRKj3SM2o96jCHvXLZCD0efk49gNTCva0BlL0Ab3W8GMhFvCPkiT0Y
                      yaM80BttPBTXkDwOyGI9vSqdPYCiELxHu5A9WD8TPGg4sr2x97k9wZaoPchItjyUQoC8VGLMvMit
                      /by9caW9w+iSvUVQij3dm6S9tnxiPUKzLT1xV4M9NidCPdovMj2fN6A9Ei0zPVQR/bwwi9A7WWuS
                      PQNCnj1D/Bq9LtwNPQ7MLz1YT388dLL+PLffXb0Y/3a8mMzpvAIGqL1vg5M9NDCLvYB3nLreNIK9
                      mC6mvcmbhT1yiQM9tJ0KvbAhvL24kMg8cUqMPcjDnrxyoaC9xWeGPRN3XL2gk4i8SnFCPQESxj0A
                      35A7DOXQPHAgLTzs0cm85SmQPYJ7HT1gDD+7FBqCvMB2zDw0W9A8GsgIvWhjGjyAOqC6vYkfvYIu
                      Wz3Owgg9MCSXO9goxzzwJgS8jSWtvRkylT3sBA+9kEcxPBLSIj0U3du8PZPBPaissryRvpA9KXeB
                      PeB8xLsTLL09DsiUvadVzL3J94o9cDAAvNMbsL1Ahpu8C0+TPdMek71KgS29zFWlvILcKj2AU2s8
                      rcaGvfQQyrzgL8S78FhBPAkuiz1KgWs9oq18PdpjVz3K0Wy9ErQsPbRw+Lx0wp285mwDvRObdr2Q
                      aCA8wG5hPJERoD2jtKM9YFTJvRkXlj0RjKY96ImGvQDjfruAnWA6EZqdPf5aTD1Q9zK82OLTvHDQ
                      b7x6VwM9sIWnOwnHxz0ZgMY9IppQPXoDYT1x6cc9Gq5AvRAckL2mxAe9qMGNvabnkb1wVl08vOfe
                      PK6yVz3g0N27QwOkPWDSOTtzz8W9Toc7PV4DgL3FE7E9C/iPPa/LvL22SnA9Y/wlveCYyr23tci9
                      YhViPRRhv7wLqqe9cOFFPI1vsr0Yesm8XlNsPcfnt70YYLy8rP3GPJeRwb2gU367N/SkPbeFYr2z
                      5cS96cCYPUAYy72DqDC9KTzLPbjoy72XgbE9ylA+PQARCb3BEaM9U5GNvfingjygtQS9YNVSO1+O
                      lT29y6C96regvWeHKr2gejS7ltigvU8Gyb0CqRs9R4hZvTgepzz3x7u91X+kvTbBCT3qHAe90Lan
                      OxLSSz06kCg98Zu+PXPltD2aqgE9aO4mvOhN7ryFT5Y9r3PFPa17db2AXmw86FujvAeWpj2A0qw6
                      FPb7PBJaFz00PtI8Me6SPVg/aLze9Xo9swiXvWLgMT1TY429jKYIve8Ksb3jFrS9W0PKvTCzBDzF
                      3MW9qTnEPceuxL38ruU8RkiBvSjLITwHKDy9xrJZPdtqyL1sV/S8FLPHPB6EkL1lLKG9w8d8vcP9
                      t70WsWQ94OXNvLB1RTzoeGK8bWmNPWiPJjwZt8c902VxvYinorzk3+I8IzeVvXBPIbw4lqC8081q
                      vZiaObxQQLU74M9gvTrsML1teLq9DkVOPVB47Ls2h6y92/WYvcLfyL3S0SY9L7u2Pdebvb1qI6S9
                      gCzfOzI4lr0gycg8xmEuPagyDbwqigc9JT64PbkWlD0r9649GFlUvAoyIj3td4M9yt4FvaiQiL3x
                      y5c9KNAIPNKIJj2ADSK90GMEvXho57zALys7jYhkvVF7pD1MmIi9BKUJvffPwT2BN6M9iayiParf
                      hb1Az1e9FIi/POAajjz/RYE9EECTvdjuRbxNtcE9vN3pPEhMl7wAMJG5Bt0AvXKRXT2RPpE9746Y
                      PdLlTz2Ouho94kSnvVNZPL3otXe8F9AgvUClbjwJ7bU9YmmHveD9Cr2SKik9l214vdA5+zsMfAq9
                      bqZQPUxLnDzIfbE8tDq3PHJGKj3zzl29cjc6PXa0B70rnMm9uBPEvAyaqTwKKJa9KCsivAh5vTxn
                      u5c97nY2PTDV8TvZvoM9LmsLPZcfv72W92o9iJWsvIAgVLzEy/g8YMxtvYYXFj1ux5y9MN0XvN1E
                      c73AMl074ySrvTGJlz27dqS9LfNDvYhRxTzG5iE9A7eOvVNdoT0KHxm9k8TDvTbMdz2iuDg9X2+v
                      vRiTir3r65W9Bx2dPYcIJL3orIO8o6kavS5AED3BtYE9zSSDPYy1mLxI1pq8QBVivOBrk73YFjK8
                      S3eTveCbPb2Mc/U8M0BwvcHVyz3KAam9YNGWPNOHqz0BmLI961uNvVoOnb2V/sE9lnMePZ7DIz0h
                      HIM9gASUu+zsrzxQqqW9vrchPcEdgT3IAsc8gnc4PVqnVT0T2Ja9wLMmu6BYtrwTQ8e9VBSTPHyv
                      1zwoWTG8wotEPYhKmzxmBJm9W3+svdubuT3Gsh893i+svag+w71XM8y9mliTvQTXhL3ycEI9F/yU
                      PWrvpb3Fqrg94ED4OwyL6zyBW4o96f+iPVMBqj1ouX28LKO5PK83hT2gvya7fvRWPZ+Jwb3MxIK9
                      P36LPWS69Dza8zK9jdG8vYLUrL07ksc9QHwlvZQD5bysnrc8GyujPQCQrLugAom9wAR0vdmTgD19
                      hZK9uvAYPdRQjzwTXna9dTWcvaBofLttmqS986KzPUcWcL3JPow9jx+SPWSH4zwoMag8dAOBvTBn
                      zL3YZ9S84CXwvKb0C73tLoE9UYSlPXTltLxFx6c9ufqBPQG6nD1TC7U9UhNVPdcTRL1tDHy9Sb26
                      Pe30yD0RMaw9UkQoPXCUR7zkOf08QyebvSBzbr3ZIpU98tVnPZD2lb3H5S+9iCCbPNu5kb0wYYO7
                      O9GlPbl+pz0ODlM9CZvJPZPPhT160na9GP6vPEAeADyA7O67vYiRveDoiLsArze7Jg5gPeAi6Lyw
                      P068BC78PHP3mD2CTRA9zftKvYjHojwp1Y89wLcJvXZ9eD00vI48EEUrPHVLwD0u1lQ9UASuvdgy
                      Czxa/ii9SH+7vLvcvz1Ll6q9j4GzPaK3Lj3AB1U7wnQ/PZ0vPL0wNRi8cz47vasSnr1wPk68xdi4
                      PWolaT2Zrck9tA/MPKoLbD1KVlQ9s9bLvQAG1zuDxrc9R41avcjNmr3kCeI84sdTPWZmZT0Aq8i9
                      dAuCvaoTYb0ichA9MMNIvbLAPj1ywaG9LXe4vVABvDtslbG88VOMPQgOgbxAI748lrBBPVPhN70C
                      zyM9lAy9PAxoyjzjiyq9wNLxOqzMm7z0A8w8YNebPBgt4byOH209W4LHPcuJn71js5k9nvCavTQz
                      x7yFc7s9KlbBvYBAsbpg6D07PY/KPeO9sL2e4H89+9aZvTs0gT1S0Bc9gNmFvACyIbtstBi94Km8
                      vCi9Gzw3YX69MmpGPcye+by3dWC9AzMgvWCTtjt2D2I91XSqvdCKnLuSCjk9HVqAPf7WJz1Ax1W8
                      wMV9OzI1RD0svf48xzS0PbiBp7y965C9ENYxvZpcGz3orcu8VsQkPQMCTL3P+409I1RdvYALvL1X
                      L4k9Kj5KvaxPoDyQTly8QvIjPXIyxb3O3zU92owwPeMnqT14zbe94rlBPUBRuToSeVM9u/ScvZAJ
                      LLwyeVk9EKkjvOjIhjxoDLi944e5vWNssr1Y0DQ8FdyEvfaMOj3ncGO9xrtHPZj7qjwdVXi97TSb
                      PRZmB73SCBs9+qptvZG3qT1QbpG9DWKBvRIwdD1RdpM9/R5svcIlQz1PXb29ci9wPXBgKb2J0p89
                      NNXcPIu8uT1tOmu94gklPVCUNDyg7dK8TOSevPbxFT2wUBY8uSuwPbLoGT2i5IW9wWuOPXZFaz3o
                      Yna8wPywut0fnb0z9Ci9QIqSPLrpNr0gWQ69+vMEPVRIBL1Ax1U81eeiPfpBy71QssU7vMsKvdBW
                      FLw464e84PFWvQ6RpL1zvo69amWyvWBbTDtgKK47ACuvPBWDrr115Lw9jH35vND8BL0uhhg9FAqP
                      vAC3PjphH7o9qIy4vDgwkLz0Zoe8yKzKPKfBUb3/1449HX2TPeyCi7xpNZg90703vZCvFTyX9nm9
                      UHYwvDC8Lzxauna9oGZwvf4SPD3a7XE9YNsQvaAlVDuzIqu9JmtEPcZujL1s7JC8IipYPYDvJb2s
                      F/s8OtOhvYDWJrqAJ8K6OFOYvPSH8jx5CIM9mK2ZPKfKNr27v5a9AI2bvMzx1DxfX4Y9Qx7IvbNl
                      Qb3FQKw9M40yvZSJnbxWDRS9Se6KPWP6wL1gjwC7EbWKPWi/LjyAAk06WNO9PGSfib1AlhC8rXFg
                      vRDkLbxaImy9V6p2vSYnET1SAGc9UKN3PE4LfT0AQTW7mKQGPGracD26yno9Z0XDPRUgsL28Ztg8
                      vd9UvYr8X72zI8Q9HzejPeBAvDze81M9I72tPVrCHr1sxqa8ICmRvFh2FDzXaoM9u3mZPTr+uL1V
                      Upe9wE5ivfKfIz0bdY89yI3kvMdctD3QRn29/QCiPRgruL3Qmeq7vcGSPa+ZgT1q5Mu9jA++POIV
                      eD0UcrE82nwFPXlwjj1Agly7eO+ovUcTJb1gFWE7ah0qvThv/bxDWLW9qL+Hva5NfT2NyKQ9YGUL
                      vcyUuzzCyxk9s5ZTvaA6Bb1TWR+9XQCtPUBjKL1GwUg9cExuvOeHsr39sow9x3WaPbDcEjyzN5s9
                      FoIOvcodcr3p1bw9b6rDPVDPLTw+y3Y96udpPdEFkz2ADAm91OudvPBlQb3QGeA7pkYnPUK9Wz0t
                      u169UBsHvQ3by73tlIC9w9dJva85rb0O9X89UJoAvKkCij3wyy69ADX9O7i73bxwmky9qxnLvbBj
                      Bb0MdqC8JXmHvYDF6Luojnu8y6yHPSWLsL1HIrc9KfubPUDq6bx5eK49Y2hYvVodYL0rd7g9KIl2
                      vB5IZD2Y1Q68gFaEuxptKL0AU8m7vTygvZ+cnj3eAlY9QAgWPHBTXTyYO8+8SDrcvFUPuj1se/Q8
                      oGYgO1pPbb2wMMc7LpEHPV3Kn71oEiO80gULPah6k7xQP0i8aoGvvUPvqz30zvM8Z+OkPZDyNDxw
                      aI69xfnFPYMiLb0/2Ic97DPLvBjpmr0hqYM9COK0vTU/oz0xU7k9aNIdPHqGBr1wA8W9TUnDPXTL
                      +bzRGZ09tOu3vABfIDzA2j+9eFaEvOIJLj1jVr495WWoPVpbjL0ulXE9OVKPPUf5pT3g6og7jaIu
                      vcDQv7owYo290v4DPc04hj1iYRg9h2wdvQhhvr2Y94+8Vxq7vbPHnT1hpqY9/W1/vfTb6LwAv4+8
                      6tNgvYlRoD1yDpq9aJ/gvIx18Lyga/07AH7ZvMm0sj1ymj89JImMvdmbjj04Nam9JafDPUBLBDwm
                      KRm9ahAPvdOglr1LBMu9BFHWPNqNeT1pnqA9YNCSO8CNVjv6HT29R5jAPYrGA73BX7Q9hV3CveiJ
                      j7ygqX29meiGPUudwT3Ygre9AJoLvdJJaj2mfk49kMiRvfygAb0Tc6i9SJyivNjKWbxIOvC8JtcB
                      vUzx+bzR6rw9tYe7PeAGub1wWT29wNQCu4x+q7xwUnW9sGdNvB4BIj3KlSG9wEr4ukDqjjziVBk9
                      IGmRPP3md73YBB+87dqcvRqvRr10V7C8Cjq5vUrVUD2fkKY9wEt3u8BEi73zlYY9QHOOPBNLb73w
                      3D48QGu9vEzHwjwwg0a8dhEWPZYvpb2yaDY98DMwvB9iqj0g+cC9UGxlvMPBYr0YEDw8I9esPUJk
                      Jz15K4M9JJPpPLjXq7yjjL+90Az8O3Tpo7xdeSS9EIg2vUxj+jxfmqw90FVEvFgQfrxz+Ko98Deu
                      vWMRMr06OGQ96RCZPT1MY71OxSQ9PimCvUIFAT2far09AkAPPYD4VDznBL89dDXOvJJgvL37mL+9
                      Y8TAPbDOYbxQmoe9U8DIPTBysr0eloK9iNfIvYUUv717+cE9df6IPe3sLr0C1l49x5F7veg7Irwe
                      2Xs9YA23u88osj2+SAw9wBD8vItuuT3JjMo9CN+KPNepyb3SZl49gEx3vapcVz05nMI9gX2iPcoX
                      qL3qYpW9qJlHPPIfBT0rX6O9AMNCvAA66jmQhx68KoMQvbiHjzwS17+9mkFKPYClDzqW5om9wqW9
                      vfDHBrwFgqs9EvW1vU9jrT1F0ak9XZ+HvYOewj1Dj5O9AAarutCCLDwu0BQ9RIUVvbMRJ73vQJo9
                      SQasPQuqrD1+Q6y9bFywPPalqr33RSa9Ji8NvWr7j72sR7K8AGRFOuZrl701v7S91mmrvXzM9Tx+
                      xXE9lV+7PRPax73PPao9rKupPAIsRj1Mooe9Sf+7Pae5NL2w29i7w4U9vUDYY7tNxLY9mjixvTHe
                      yD2GPxo9JUbFvfAJHL1MeIi8b2qiPUfvMr24zqm8yxK/PaMFG71WJBW9N5+PPQ3Yvr14Q5W8Zaa/
                      PcDbSTxiMzE9P16LPdWxkL3JwJ89oFrFO1qoKD1qs3C9SDiLvdoQaz2OY1s9gOlKvHIYhL1GkTs9
                      YnKzveFsvD0q34m9AGhMOpOAKb32dgC9bbI7vVBmE7xVn4k9AhkePePunT1XNGm9fX/KPWubjr2h
                      /p492ApCPJArDLzQmye8Q9HGvcRhAL004508kmp8PTH8jD04Sr29KReOPcsTuD0YeTS8H6O9PWUk
                      pL1u7hA9f+O9vdf8T73pxI09JYSVvWAqazvjSEC9ggVdPTnCwT1LNLg9XRvDvRRH2Dw75K49mM5r
                      PGqrdT2Jn8E99wt5vU4RlL1zdGm9wAJdO+BMlDvrPr49Gh59vbEwmD0anX29Ii8OPTjAiL3xb449
                      k6+lPYDIoTyo+BM83VxwvXQyAr2HLW+9KFPMPGmHoT2Uq4C9UphyPWzskLxY+3m8gLBevFCQtLsQ
                      eAQ82KGivQ/dqz3AyFi8DMyvvBX0pD3SPaq9zayIPd5VED1pSo89DILRPBKvtb00KLs8sXCXPVIM
                      Xj0zpFi9UE81PLZhDb1QeWE8MQShPQKpEj1MuLA8/CLQPHqCZL3Erek8WMJMvLhO87zO6Vs9wstJ
                      PQPjVr2gJI88MKz+O2o2QL3GvhA90o0nPYn9xT3MhIW8s4qgPadzX70lUrK9Jl06PbDhhrtJqKk9
                      sroMPQqGAz2Ya0a8sPzNO8zMrLyUUxe9kp9nPT89hz1qf349MBBevFpUKL1KE3E9zBLpvOJol72a
                      jy+9mlzIvcP9Jr3oQnM8lCiSPG/gyb20EP+8rc6nvcPwPb0w8uU7ElptPcMljD2cfBa9QOlaOxCh
                      AjyAHL66QAVqvKcFmj1qkTO9YE5zuyCRjL2IL9W8Y0yyPdr5Qr14Qbe8sKEUvc0cOb1ZPb89UsxP
                      PcA29Lp7U8A9AzKvvaPYoL0s4OO86fLLPaeIPb3Uy848MyadPTb+Cj1QHF69hYCyPWC7dLvAeDQ8
                      DUOrvTZpQz3pQso9iKvZvBPOjz1gQa68+sUuvXZpB73wwEM8QNwlu6jUpL2J/pg90AhHveMba72t
                      6jm9oGO4vXqRcL0qjH+9gOv/O8A6tbwxyYE9SlWivbeqqj1eq6e9Md6vPbze2jz2aFE96CG9vFzW
                      0DwAOP+7rXOKvaUrkT1qYGw94Mmfu9d3gD20FIa90bqePeXQo73611M9x+nIPRAIFLyPD8s9DFHn
                      PDUHjz0C12U9aIMYPN87xz0FC429IH3jO6BZQ7vyQQI9gjYkPTrAt71EGfw8WuQtvaaMDz1AZ3s7
                      otqVvZG9gj1KjH89rLHTPJO4YL19aie9KP+vPKiKdbwikpu9r5O5vTPeRb0Mwb48czVIvTD27LvP
                      C7c9FEy7PGS+4Tx++hI9Lf6Dvdublj2DZ4695lWovSn+oD2FJam9hrUOPWK9Dz0LoJc94ba7PVr4
                      NL2a8gw99GnhPADccby7xbG9yEusPACnT7t+imU9ki2GvRBKSzzQkCq96ltgvfyi+TxgfJS72wnG
                      vQzl7bywNh+8vhVnPexv8rzAE8m9TGCdPCKwZD3M6vS8IM/EO0mZwD0A96I8gAuZPE+1wb04EdS8
                      eSSTPWmxjj1w1F69OsJnvbYdi70OKWs96/+vPTg2wrzM5sk8nZuTvcw5zLyoBWU8XXuHPT8MlD1A
                      xsq8hSKqvQoVDr0Y15S9pG/TPOhQFbyobss8iMGBvSSWEb03hE+92H9lPLTqr7ywcuo71JQKvRdU
                      Tb3glsA8Mol/PT8Pnz1An8I6wN6FvezVFL1RpbI9uGSMvOC1szwAiGY8fbq5vQDKz7wiSMO9N3/I
                      PaBYFTts8ou9i/mGPXAXEryaXBw94mM3Pa7TRT1gCyg7YbemPZBxN7ygFUK7aNoUvKPsIr0MdhO9
                      2moqPbkFyD3KK0e91PO/vFwa4jzzd8u9istPvXA9QL0UUfg8Ou2/vf8BsL175pq9BPTqPBe9iD1B
                      v4c9GAi3PFOwM70ivKa9jdAcvewuwLx/Uci9AEq5O3nvtD1yPXo9ry6wPcig2rwomyw8zhWlvQet
                      L70SV4e9kvl9Pd0tuD1OEyo9lCMFvVO1bb3xbq896ppMPVKOED3bxo+9gdG6PWjnFzwuWWA9Ct7E
                      vQrOgb040qu9oP72O4Ppfb0kbgm96LQEPDuRkb0ACCu7pJ7WPLr5fz0dfpQ9Khl/vZi3d7zN6Kg9
                      EM5VvX6HZT3LTaO95Q7IvVAsmb2CyE49Bm50PTA+1DsAEMg6q9KmvUxS17wMbM885yJXvTvvkT2p
                      MbY9Grx1vSg4pLx78pg99GesPPTikzwVE5u9hshsPbGYgj3/b7w9Pu1kPX7uAj3CeZW9x9iyPQsJ
                      kr0UibI8wKKxPPbKHD2EBPs8MKoLvN6RST1nhoc9ZcyTvcTs4Ty5ZZo9uk0mPfDHAr0BL7c9XSW3
                      vaCUEbuMqua8UIoYPGa4Gj2oR5m9tdWzvaBhprtsnvW8/aGBvY1Shj2mQ4i9chsQPQDRErq7eqg9
                      y9G7PY5QQj0ebTY9DKKBPDKpo711q7c9S53LvWPdK73Nl4a9qHkZPOBr3rslGKS9N9KGPSiOn7zG
                      XKW9kqY4PQDHpDuHak298pBJPYYaFD1i0AA9iqUwvX0Kjz0Pf5Y9NgFePdvIkT1/w4M9aMSAPAAD
                      sTw6woO9g/O0vcAZn70w1Ti8cmSrvc4vRj2yxzk9qphHvdkVuT3aDCi98PhzvOmUrD3yOWQ9WNnF
                      PGCN7zsd+Z69kG9uvGBk9DszFlC9IFLmvEdzsb2iuy09zTW5vX2lY72UZrK8VAiGvYa4Uz0wRnK8
                      gGN4vUAAQbvxdZs9AC5/vFVqqT3TRbO9mFs0vGAO4LzoG2a8oC7IPICDhDo7sJw92n41vfSH2DzA
                      CyE7jGPOvElzmT0otRC8A+SNvdeUNr3qHq+9yOKLPIA057sUu8W8e4WxvRgCO7yYl1y8V1gwvVe2
                      Q735wIY90g8aPdiyVTym8RG9eCKgvRg/dzwQZSC8AuMXPSgEITwblLC9ec+yPVhHeryAMgM6+ECC
                      vcq0Uj1aNEq97X9QvZgzZrz3l4g9VPPQPAamCL3WmBQ97EWAPM1PaL1aYRU9jo2dvQBnG7uCh6+9
                      IobAvWrwYD2uB2Y93WnEPVLKor2On149AAzIvCLFOD2CgFU9HjeovWgRf7wyLFI98UKPPTuIjD1p
                      4rA9+YC2PTBlYbw098+8+X3FPSocQb0B14s9abqYPfg8ir3s4dm8xNX3PDIYpr0fp8u9/mygvZRi
                      yLyDzG+9UMSGuwkTtz12gxi9t2LCPRifoLx1PLY9GIiGvD52dT1zbjW9S8C5PR0DRb3mbwM9sVjM
                      PdBYFTwkVPA8VMYJvVo6MT23kry9OnsOPRBNnb1YzXi8mDnEvSgSNTztAIy9v02/vTVFvT3iZgg9
                      t0GDPSf0SL2D7Lo9DIYCvajgeTxVZK29QDlAO3pLAT0KwQq9bCHOvF97xz1eYaW9qReePVh6nbww
                      Z8S7wMloOxAGML0UVZQ80FY9vWxNBL0ACyU7gFfNvOICOj0Tn6I9qoEJvXOerD0oPMi9AIgiurCs
                      qzuqlJq90zONPTAMvr3zyqm9BebAPXNDQr1UZAu9d6F4vXpLaz0uRV09PlRxPUd9tT3/nbw9dNy9
                      PLUgij3sksY8c0tDvWR/jL1g9mi9vV7DvSArybyaNls9ZF/oPOAv2Lzwx068c26JPWFGjD34F6g8
                      QEWUPICZH70JsLw9sjEsPfCCYb28Hd08JXuTPSFquj16QsO9BQKUvfKsnL0sU8I8kAF0vBjHQLzo
                      o1O8ksRPPZyuh72vpr09as1EPejxxr2J+JE9IOfFPLtQij0AWVA79nxGPfZXhb0z/oA9KTmQPQ1H
                      jb0sk9w81aDGvcDgC72Sjz89+rOUvVdecb11AYQ99Q3KPSTu4jxJiKg9umJfPV7DpL0RWsY9KtdG
                      vUwO37zr7Jg97HGxvJSdh7yI6YI86kZNPXLTlL3kBvs8mwiTvfgJjTwFSom9Xa1pvQAmObuZM6g9
                      oIcIu55wJT1y3EI9120svQb8GT1OKkw9WrmsveOpl73wwj691zdFvedle715cJ89AjI5PYS0zjwY
                      v8e887iovajUxDz3dHa9HmQcPY2Snz3w94O9mldBvdWOu71ai8O9D7GePeImRD0aD0u9k2bHvUDA
                      iDxPR5I9BYy/PctYtj1xAJg9sIvBOxN6Gr0wG1o8ED+fvQDqvzwhB5o9GYWuPfQX0TyxYbY97+KB
                      PTAjTDybnpU9xUbHPaJLqL1XLMA9i1ebPYDJfzpg7Fe7CqEBPWwL7rzQIwo8KoNcPVAJerwwW8M7
                      9zqUPeAfmrtafk094LrDu7ArnL3iTVM9gDijOyMBkT2gdb+7plVYPZ2+tL0MhpM81iKPvWeoWL2g
                      fk69WKWivdF0mj3ftbo9IMuBvR8vlD1lO6K9gPvCusBw3zow3Fo88CEMPKhxJzyaRTS98NoYPESp
                      zjzkHPQ8NeSfPegCmjwA8MW8tRaOvTkNkz2dsbU9jMbDPLeOij0DhJw9uemfPWAP47vNmSi9maWa
                      PXKYDj3OL6u9D5aTPaXpnr2MVbK8+P/0vMG+qz1zWag9TiNLPcCv4rwonXK8ND6YvLBP97tDlju9
                      +jg2vaAurzuYz3Q8b+C1vcLGGj0wTf475DvqPH1nqL3ABBq9bkaOvYcwKb0uuyo9kym+vYioljzp
                      6sc9Mf6aPRgJnby3Asg9jSOLvUJCTD3wZJa9vWmEPQDvrb26ah49gPfauxCmp72fzqU9LOOYvNza
                      Db1dvKu9Gn1IvQeruL3lQ4C9NGzFvCv0wz1mnoe99A2qvOx7pDxXtFG9d+AtvaQ8gb2zzaI9Izwt
                      vcKzlr3Hay+9c6ivvRmrtD2uNkg9MmIcPcgf37zsGr+8hgaTvRQzhLyguee8wGhju3mmuD1Bq8o9
                      UfaoPYexsz2Y19W8OKqPvND/STzl34u9elMevdXWqT0m3jM9bDawvHlNtT3KgmE92/+uPU+DgD1w
                      L2G82M5VvO2Xs71GZou9km6LvQCIg7rATiu9gIGFu/CqObzRsYk9ECsOvQBlQTyjZ7W9gl5CPSKy
                      BT1Uhqe8jMuePIGwkz3CHRs9GLcevKqqAT05drw96RXJPXTD1zzgV8a9/uqjvcIblb3hlpY9wFW+
                      PF20qr1S44S9cwacvaDiH72L8749aOO6PMgI47yUKsc8jdQ5vYgFxzzsQ6a8NPnGvKDmDL1QTl48
                      EL0sPFgolL3Xq1+9H6CtvQgqtzw/mIg9tCOUPBXLqD328zI9zXbJvbi0m70KDTM96V2UPZ04bb1X
                      +p098f6vPVwK/TwsafG87HmJPOkWpT2Egwu9Vx2FPdCMobuIfeG8buUcPeAvxjv15689xjMMPVSa
                      0TxjVGu9AKX4OeCJlTyg7648UiBPPa1YNr2d07c9xfuQvQLkfz2mshU98HWwvcwHz7y/2ca9tabA
                      PUi+k7wdJ4q9t4lMvVoHiL0qfw09dB4DvZBRcb233bg9ogAIPdgCMDzJoq49duQDvew0Er1FDMY9
                      ZqkbPfgirL3scc88
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzQ3MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzMxMjIxNzQ3MnEBYS5kAAAAAAAAAGqbBL3LCr+9ejBYvaSk6DwVSsE9AGXtOYhBpL0A4lU8
                      9VSdvbH+mj2XsGq9Kw6fPUCKD7tpG4M9Ie2SPQgd3LyDW5m9NUy5PS8hmz1gQX+7XpkUPY0hXL2f
                      1bS9aTOPPZkxpz3o3Lm8YE94u2wCtzyIX6Q8WKJbPOdXPL3vIMY9Kq1HPVFkhz2oj2w82x/DPXPp
                      kL1izGc9IKr/O85tUz3rzcg90F2Ju33eQr3IatK8GiEovUjewDy3yHi9LYlFvSiwaLwDciK9LxeV
                      PdwNE72TR4U9oViMPbGRlz145ZO8yqe8vQ0mpT05FJc9Usk3PdRCizxY4Lw8g/xfvSIiNz20MPi8
                      jnsZPY2pg717Rcs9LkpOPSqiXr1AgKC9AsFlPWBX/Ly4epC9Mlm9vXDuUr3mHoK9REjcPHgwmjxo
                      wXw8gGW9un+tyr2MM6w8qh8UvZ+orr2wovs70l5FPWAIu70nlUu9iNWFvf11Ur1FSZQ9EM1sPOAU
                      3bxQavq7UD11PEAoZDz8Aes87ceevT98qT0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzM5MnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzMxMjIxNzM5MnEBYS5kAAAAAAAAADXIl73qZwO93zXDvYsIvD3oAJO8z3isPeaKMz0A6x+8
                      yf67Pef5Q71ktOY8waTAPcV/sL15wb89a/nBPVqOAT2HV6o9mKO0vYnVoj2Vmbo9O2CkPRcmJr1T
                      2bw9/hFBPYAu4btCohM9Snu8vVX2xT3THW698DEkPP1xS739/3292hmtvV7BCD0MvKw8/hoPPQ2Q
                      Nr135iy9QmpxPSFirj17rLg99346vdbbTz3qkXk9Vy8qvbL/Aj1Otyc93zKyPVPXdL2+zWY9ACSU
                      vcD5b7u4F8G9ADKOu8ZRRD2JJJE9S+7HvQNSyb0tBME9CfbDPczWgb1RlMo9G8uoPd0JyL3lH6i9
                      vTlcvdoyyb2Fvcg9Zd6sPcoSDb3kRt48tb++PU5mRj000Yw8wLJ+vTxLEL0/n8E9AGEovYFeqD0w
                      vF69YcmYPYqZMz3Ap3g7lPL0vEdcW70UJv68n6W+vdgY5LzeCVA9WlGrvSBqnLy3m5A9QF5LPE8V
                      y70MDeK8F96VPXl6mz16kDG9YEvoO0ALkbw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzMxMjIxNzcxMnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzMxMjIxNzcxMnEBYS4BAAAAAAAAAKgsrr0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        osQTPHM7STvZYcM62WHDOis6iT4+Fi89w2w+PMNsPjwMle87I/29O/RNrDn0Taw5DJXvOyP9vTv0
        Taw59E2sOWV9PDrmFFs6zvovOM76LzjOFmk7LEhlPQvzBjsL8wY7h61YOgjPMj3P2Ig3z9iIN4et
        WDoIzzI9z9iIN8/YiDdFlQs8uXF8O6vShjur0oY7Z1MKPD8lmjzKoO08yqDtPC4NOzk1UBQ8/ESD
        OPxEgzguDTs5NVAUPPxEgzj8RIM4RZULPLlxfDur0oY7q9KGO2dTCjw/JZo8yqDtPMqg7TwuDTs5
        NVAUPPxEgzj8RIM4Lg07OTVQFDz8RIM4/ESDOB4NWzhX2iA5R6ulOUerpTmX4Os1at84N2D7KThg
        +yk46RqHOD9fqjio27s6qNu7Oukahzg/X6o4qNu7Oqjbuzoauis6Y78TOkzvNzxM7zc8Zd4KObMs
        DTfV22851dtvOf5iFTpPBjU3ZojsPGaI7Dz+YhU6TwY1N2aI7DxmiOw8beVnOLY4ADltFfA4bRXw
        OAMBajgQ/dE3VjeIN1Y3iDcnDC07+T5aOC+V9jsvlfY7JwwtO/k+WjgvlfY7L5X2O23lZzi2OAA5
        bRXwOG0V8DgDAWo4EP3RN1Y3iDdWN4g3JwwtO/k+WjgvlfY7L5X2OycMLTv5Plo4L5X2Oy+V9js=
