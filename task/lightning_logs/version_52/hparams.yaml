N: 1000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:qswift.initializer.XBasisInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: &id003 !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id131 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.012
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
  hamiltonian: *id003
  initializer: *id001
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.sampler.V2NaiveSampler
  all_paulis:
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  - *id131
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTIwMHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM0Mzc0OTEyMDBxAWEuhAMAAAAAAABZLaM+ECLAvH0CoT7jXwe+SElAvaBEMb7+zna+QMzA
                      PDiGJr0am6K+drVtPpxXy72A/JK8zzqWPiCdKj4geKa9AM/NPFtLiL7C/FI+LhGLvgvqqT7A/fq8
                      AVCYPq0Phz5YSyG+wNq1u/jfd70gOUg8CJN0vVOumL7uVX8+uuFtPhwluj3zBpQ+mjhCPissXr5R
                      HZ0+xMHjPez43z2jZpo+sCmjvslwpT7hR5E+HFnkPQh8mb61eYQ+dT2qPo5Hfz7yEyE+qyykvuWg
                      gj6AvWI7HsZOvnZ6br5DVI0+XJulvhh5Qr0XvKG+0MZjvsAQK70o8kS9MB+vPCalRL6Q9Zw9gX2C
                      PoBiEL1oxTs9fF+Wvi49Hz4yIzk+BhYVPsAwOb4g0IG+QDNOvrQb9j3QMEe+6AQePW9mpT4Az969
                      e0kWviLgk76TtpO+PaGiPqDIdryAOTO7ejEwPmzWxz1QWeQ9LA6ZvmO1ij6s4pa9VpRuPhArt73C
                      dlI+whRFPgYrAb5196Y+AithPi6XCb7ifFY+CAUHPbIEND5OhxQ+sO6nPXAY/Two2Ye+65IGviHg
                      iD7zl12+HgISPl7Xfb5kq9s94H2ivsywlr07M4Y+QJ5kvfzj8b1UXZC+smGqvoAUIzxOjC++JhpG
                      vsZdLL6gWxI+AHJOu2s8p76AKJo8qDxDvTBEZr4IzZW+AO+4PC9TiD7gtlq9HOn+PUjpfL0zaYm+
                      NgYPvjmEnD5AOLa81n7BvRlTjz6/uJg+BIWNPWpKBT6wqey9/DGjPSVRnT6YN229030jvjA3r7y6
                      TUI+ukhiPtnXnj7ARxy+3F3JvZGrqD74kxs+cP29PXsiOb4OeSs+WlVFPsMShD4KOJa+4t2gvjgL
                      OL1ZmYA+2CobPmAJur1ganG9JDaovq4vUb6M88A94IFaPLBAHz6rlTy+ii6PvkBXDb2A1xS8qGMk
                      PUA8Xr2epks+QJqWOw3Loz40MKs98Pu8vXgwP71AM727/ptLvh8zl774UwG+hJ/nPfi6Qj3I7hS9
                      2LVivWStuz3mSVs+DUuLPq19qD6+Jky+I5aiPghVRj3uuj6+F4SQPgBQETvAy+07AVyIPkrMqb4Q
                      BtE8FtfMvbyp0r0ACEq8yjFoPmZPXz6yeaa+Uqc+PttoKL52xXc+IHGuvcBaDL5yraK+ZzWnvnoY
                      Ez4YABc9pnltPhjfA73YWiY+hDioPbBx6j0ACxC+ENOQvRYDB76gx4s9kMCdvWbamL4SkaO+DaaI
                      PhiCEb1wfuM8kESVPY6+Zz4/DZw+OP4EvqAsCzyses295pO0vQDcTr6WMdS9YD4kvA/4mL7AStU9
                      4BtEvAM1dL6AzRq9osWBvmv6jb6QDYi9lGiRvUs+ZL5MUZg9VsxMvrA5B768kv+9lP38PdCTuzwA
                      B/e98vs1PmCHAD5/4ps+03t7vv61UT5mJ0g+u+gDvpJ6Lz7Wpm4+nityPorRKz4YAzC+So2hvoUK
                      oD7m1AU+g+QXvvA0+DzguuE9DCW/vWcjlr5yUBE+DAX0ve6hbj5Hhpq+EtNxPuAhJD7qDH8+61dS
                      vji+UT1Um4W9w/lvvoCcqj1MSqW+wNC1vNjmGz4idGE+JPKjvsA2CD0u/nw+6yEtvpCTgTyKtH0+
                      tsgoPle4oL5CHjI+K/2ZPopLMD7O1X2+WE8EPoBwOr7gn/u9XGSnvcDx1z0JqaM+MO+QPYBbmbzv
                      iKo+49M8vl5BBr52DhG+oQaDPuaczb3cnaC+UIS6PA6wKz4KrKG+SqN6PqgBE76+V2Q+QI7mO2o1
                      l75W7S++fLDIPU3LnD6U3Yu9mJ1tPRtsnz4fZYG+VO+nvThbST0ieTM+nuUNvjb7AD4gJVu+tOqF
                      PXjWIz2bNpg+4wiKPhBIV77gTGo9aGtKPepPhb6WTES+cOq2PRp4YT7CMWw+JKWpvVyOvL3w/Cy+
                      kjtyPvARIL4Iv3O9ploOvsACTr5EkZU9RgKwvTDrqDwSywk+SweqvojZF75gbn88phaGvoj/Az2W
                      xKq9dWmoPmYLcL4WnNi9kI3rvfI1hr6miV++IK5MPPcsqj6gRGc8vmNxPsa/DL4o/ig+ABc6vvbQ
                      k76oUWc9KEYEPYwLir5TDkO+3qumvqbHHD7uZVC+FLKTvZA6gT1caIi+jgePvgjXbr4JApY+WfCY
                      PiD+zb0AqIO71pbavZKbfj4jYaY+OM8PvYxpgr6QA8M9Wa+aPlwl3r2wOTW+QBsKPRmRnT7w+C2+
                      CFggvra4Xb6Lkam+UNCnvBlqnD6GF7+9MP7CPDVuiD5Uf5O9qFmQvjChvD1bYKk+k/1Ivk5Kpb5x
                      qoM+82ujvrDIlL72W1O+CV6bPnXmkT7KX0k+HPDJPbIwJT4AsWu99AaUvUaOwb0r6JE+HLaOvUCR
                      Sb3AO0e+m85uvngMKj0nXZg+yGEBvkAQUb7wUpy8yj+Gvtvjdr6rcyC+2j2fvj53DL4SRXc+AOaF
                      PaAWGb0ix0U+Q7RwvhhYXL08irI93Ne5vSiDDD1+kHo+DhNWPi38iT5A9iG934GaPspVbz4e0m0+
                      jfahPgCmg76ABHg9fL6JvZrMAT4bi5+++nZsPgJmPz63WoC+w3VdvtBzqjyuNk0+YOoVvFDPy7ww
                      4sM81nlMPoCWqT31VJM+DgohPm5UAr6YUyO+OfWCPj72Vr7QLHS+AAWPO+REkD2OE2Y+C8xyvuGn
                      pz4jFoa+3caMPupqRj783co9vIbhPfADyzx2ane+NmfVvedehr484og9J4qHPhym7L2kJaA9tpYd
                      PgGDgj4wMrM9pk7kva7RNb4QL6y8lzSHPsxfgz3AWAQ99NWJPSAcObxILBe+ycmJPiAxp74AouG8
                      NSmePhr1Tz6YNiy+yzpEvjbeeb4MlIc9QGGkO8qfej5wRt29/otVviB/9j00gpy+II8gPpNObr4S
                      +hE+CSaPPgqofj6bvUK+0vI6PnYSeb7GXhM+AjkYPoANML5vY4M+ykaBvhvJkL7ZY48+s6hEvgA4
                      EbrcwIO+WOATvlBC3DwMwf29SRCPPvWtlT6fbJK+FVmfPkBL470XpIg+AGBlOtbFtb0AzjC6sHv4
                      PXoep74wSum89loovvfiij5orma9h4yMPpzWgb4j95S+uGRlvlsXEb7ziX6+xgtmvnAbnb2tzJ0+
                      KHIWPQIwpb6YpQM++xoovlrsg76ewIm+0i+jvvtWVr5WDlq+AKZiPUodeT54SG+9AOlcPNlumj4X
                      5Ke+7AeKvaJCaz6Ow4i+p2+cvi1ghj4ijG0+RBObvQPmU77Q5o08LiBivijbIz4AScm8QhgkPkaj
                      Ej7akBo+IrR2PpC6vL3yT1s+ni6evqoYib5cHMU9QDrrvOQq9D3QuPy8OlhSPnvIiT7yZzo+T9qZ
                      PvrATj5AP4a8QAr7vbiwLb6g9wa8kj9DPltOmb4DqEu+2FMeva6wTT6PvYA+5WqjPjc1pT74q1U9
                      D6qBPp6pqr6DShW+MohmPsbQ4r04m289YJlwPCzCpr6wKNk8hmB8PgCx9D1AZZu+U2SFvuL9VD4I
                      PXY9SrN6PuAWZjyQDPW8/jAcvtAOjb62Fmo+L5qnvlALKT7mClo+ZNGlvThwPr6DJpg+3KGGvYhe
                      O72mxCW+Z6SPvguTZL6G+PW9lrsmPqYNj77A2dS7FgQcvk57S74iH3U+4DoLvnj5F74sTKa+CXSb
                      PhLGPT5UrtE9HIPbPfDxub2gR0q9wfCPPsh9Bj7o4wA+8NF+vtZ62b2m1X++cN+jPZx4+D2YhwS+
                      IAE9vEoIKD4aRg8++K0Nvsymtr36Mjw+SnigvjCNqzy2k1y+FQCcPiOFmD6AMUm8as1cPhc0nT68
                      iOo9Fr9tvjaRHz7sIOs9egcsPnvyRr4XW4E+g3A1vsDypzzMPaO9+E8oveMhUr7jJEi+ZA+PvbOD
                      Kr6mVhi+i3R2vguYmz7Tz3K+fmGNvhtgdr4231m+czZJvpCVh77f85++okx/PozCzb1AZZC7UWGe
                      Puyyoj3kX909eiALPhMoBb4AbJq7QHG9O1c8gr4gIVs95vqlvpDOyr0gcZw9jGvSPcBIOL0A8py+
                      wimdvlLnGj4IEgQ9AN6BvGreNj7ZPo4+fMyGviq+Lz48brs9iq1GPjjuCb7enKq+cNaqPCS8zD2C
                      A1s+EFL5vOS8yT2jh12+a7dovuLcPz5e6Vs+uM0XPcBRPL4Y7xC+SH0ZPda4/71WLzW+9q9hPgeV
                      pr6EWJi9VlmwvSp2Vj4AUxm8ZDy9Pa6uRT5qq1Y+3I2NPXquLT7wLMw8QwcbvigkbD1WDxM+6tIj
                      Pv4IaD4GY2A+WDtavtExlj4O7WU+EKKEvIBjmr5SmSY+KsJGPlCQ9T2jwII+9jnuvYQ4g712t9+9
                      xXiPPqA/g75QRI89VhJZPjg2TT2zGma+l/2aPhzVo77ujTA+UhR5PnLfPT4TGgG+APMEPfyOkb1W
                      lg6+hmDWvfovUj7W+Ye+nOyPvlINPD6YHRW+Tc6mPuIbUD7G4b29KFdPPQNDL74AD3C9xM+PvUi7
                      WT0gmh++Qoh4Po8Ln74vT4i+SE9mvWLyOz7LpaM+k4qXPmvaYr4q4zQ+AEQGPlAK6b0IO0S+nqWE
                      vi5UHb6DEaI+5ty9vZzLkb4YOQ8+4NwSPr7tFL5Ay8m9MHDrPMQNo76mICE+eGczvvTcmb7ZZYI+
                      A4UwvlHLpz7KU1k+IB4HPYIzYD5GRW2+6IycvrBma74zj4c+8EG4vNvlOL7gHVk9EFNxvibypr79
                      UKE+1vR3PqThmr4lRYA+F+iUvlhkfr3qPFE+nJCcvrRwh70=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTI4MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQzNzQ5MTI4MHEBYS5kAAAAAAAAAEdPmz4A2OE78hYtPrzOnL5e82q+BNDmPdP2Wb6Lv1++
                      YZKCPrs8qD5AJTy+8pZEPmAf3z3A2pA9AL36vWqSWz52vz2+NFDMPYbEKD6YbC69QOyEvGbdKL4A
                      5OW7QEr5PWUOnT5bqCC++P5fvtbY3L0jlRC+4FY/vp48Az44XEG97BOHvoB1vTz+WGW+EFggvk5P
                      SL4I3BA9+JkOPX5waD7SLKm+ZmYfvuKTKz5eqzs+/iuVvnKqQT4+3QA++nt7Pi2IjT4RDKE+4Kre
                      vWkWgj6K12o+QGuivaDj6L1Ak9K7bB6rvegcTb0JhIA+Qc6GPnrFcT5DFHa+wa6YPgSLo74AMFc8
                      knk+PsRJoD1gp1q8DhcOvkpVcz4J84U+aqZlPqzHrD3GS6e+QNwwPdCmkL1g0q49ULkNvoCi1D0o
                      mzE9kkh2Pnpndj4AqAe8C5Cnvty4gr4m/8u9SNcKPc7Cfz7AlNI7bF+fvvcYnr5YhBk9BpGXvhmT
                      oD5tA5A+spt3PgQUxj3z2KA+5LuQvijni74=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTM2MHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTM0Mzc0OTEzNjBxAWEuECcAAAAAAACCAG8995RBveA+pDxrVIQ9gIl/vIoNZT0cJeM80D65
                      O3DOAL32oA69gAuZPFXywD2cwYO93UiKvTAyGr0tnj+9DFX9vITzBr2wAfA7IhVrPbBMZjyYm7q9
                      sCuxO7DRlztUmeE8s5UjvdgvJbw4HpS8grK8vey1j7zU/LE8+Q6BPVB7SjwQcqe9+LHHvaCFULsi
                      RWw9p0CgPRRpg7x2WRG9SmhGPYMXqr0ahIa92IdFvI0/nD1TFMe9kYudPdaZGD3lssm9sAMmPA4R
                      nb2eIIi9AKy8vfbCjr2NnKc9ffmoPT6fUj2znMa9vEDPPPYtdT3ZSYs9mGxTvKwug7xA7yA8h9iW
                      PRenOb2j2XC9/b6avSACfr2BY4Q95gRRPSokJr3CTYK9vkp7PTBBcTy6kz+9MLFvPF3Cib1UE+w8
                      kDtLvbJ8Dj2opMG9eYuLPdbbND2fpoo9BTy5veoClr0Tx489EOCPvT6bTz2AJ7W834fKPflHmz3I
                      a6w8av9VPQCFKbsz/Jm9BHD6PCqEur1gTg07WrR4PdE/tD1gu6C8RpeMvQDgSDrFO7I96FxlPPD7
                      JjyiZj4919qwvQDvmTuy/cC93N4RvbavdD1Uv6I8wMV5u0z2szzXiU29bod+PUMCmz2Sahc9QmYO
                      PRBIQDwTgJ29YFnHOwwOkzw9gn69svhJPWLeMj2FQq49KrSZvZrAEz0HjoQ9iFeYPGvEpD0wYGC9
                      FvkXvS7iWz20uuy8EEYFveHTiz3+XCA94MnbO/OJmr2gyMe8GosHvRuQrz2o90m8yuu4vVrNnL2n
                      Fx29jYbAvY7zPT1AhLI8ATiNPRdSmz2irC49Z3pxvc2Nub0yTXk9kMtFPK0ii730hQW9cyq7PUBA
                      OLtUj6C84NqsPDgPoLwYER08JQjLvTZvbT2aMUk9653FPZnUpz1Ae/26QGV4PEYsaz04PIq87IjT
                      vOrAAL2+Bom9D6exPfRN+DxhFak9sEWlvcjW3LxVqsA9rBO4vKDBfDsRX549SxXFPcXJtT3oY7q9
                      FmULPUckSr0T7ya9os4gPdK4KT1Q19M7oN2sPGX9kr1TX0+9H0rJvZjJw705/4c9+ntmvbAUsTsj
                      SjK9ijHGvbTAjrxqWEw9wEt2O5CMAbyXaKw9yiEOvUDnazxwIgq8p+7BPQCTwLmcKxa9GSSyPRjZ
                      czwZ/qA9fOMRvYI1ED1gGAu95581vYytAb29uUS9522tPcyHw7wHI509tthuPTJ4FD3bkqE9R1Sl
                      Pdilib0Xv5Y9OdOcPW4WLz1U7d28fhlcPSx6vrywOTO8UmzCvS03dr0wOIK9bGiCPDDDpr1QWeq7
                      I6SsPaZQjr0gK5w8wLZyOyqnez048au80Meru1BqJDxa02+9iyO6PaAtaL12kQM9xcnBPV6APj1w
                      9Uo8gntJPSkQoD263w89w1ywvUjNkL1HJpo90zmmPfo0Xb1U9oi9bLDDPGPVkr32khC98S6oPVEf
                      oD2wu3y8bZlrvTLWxL3W2RS9416WvUiSxL3iZKu9MzWQvbfbdb3tU2295gEVvcCWZb0tNza9lquD
                      vc3VXb2YBRK8/v4xPcB6J73LH7k96ViWPbB13LsgJ9y8PY+sPbCyOzzUisi8zZ60PXqbuL1IJc+8
                      U8Z8vWAXjzzXrLO9JwhrveJ2Rz1oDWq8AGU/vNgsqLwTmWO9R/y+vYKQfj0p2sA9LqotPchHnr3g
                      Zju9z3W+PfWOoT3npF69YEnFvDM8yb0jyTq9j6WIPdhCib0KkiY9QNM8PPcwLb0gQo08gPLbuzBL
                      kzuR6ak9UIgsvSt3rL0AsEq88rJyPXvjj71XoF292UqfPYpkyL1+GWw92Q2jPVjMUryTFye99iMH
                      vSiZTTzaUR+9MbOiPQ7cFj1gshm7I8WUPViiV7zO9D09bQKSPe6OXz1YTbu8wBgwvUC8ibzyVoa9
                      uj5KPV+ctD29ma69kK8oPMVsib3eWiE9mGYQvEJ+wr30aZS8KnJDPSBLAb2t9ps9zNjcvHiVyL2A
                      lno6QNuoOl4kiL16NGm9AH+gO9tAy71N61C9uYmOPQOHnD2wBP67EosVPU7eCz2wQYI7XCaBvTQj
                      n7x8buo88ulvPcCo4zqwmXu9ON2xPEqttb2Akdi8oIQGO7ATZjwA9ai9CbO3PTYIjL2vfa298MEL
                      vQWyu71AE5U6wgC+vaZDJj2AOqA6EkoyPfUBlr0i8gM985crveSYi73gFr67KtQFvfBAc70utgI9
                      2K5oPCv0iT2ggtI7SfyDPageUbzBA5k9D/bBPRL8PD2A4cW9fjYiPe3gkT0O1Gw9LXCsPeVbgT0B
                      Lao9BlqIvcCPMLyTZoQ9ER2oPaacFz3Yo4i9oXnJPUckfb0Xw7i9vh0wPVorj71qUn29oBbTvI2R
                      nb1ueAk9Oa+GPVDCbb2BB789dLqrPJBCD7yguTe7sNmSO5B5ib2E++E8oAO/vH3Xqb1JlZE9yIa3
                      vaC+9bulD8c9bhEBPQQT4DxiRmY9nZ1QvboCaL1t9lm9TB7+PN0QlL2pmog9JVi7PagfFTwS0gY9
                      jDeRPNKSob0B9a89yt9EvVSXlTzQdJm74y97vVBp2Ttg/1A7pwm1Pdy1CL1zQWK9pEAHvRiER7xQ
                      yLm7D5quvXETkj0a8ni9YJ0Ku2Z/ez0A6fg7aAl6PGCU3jsCU8C968u7PQoHHD3WKyA98hyovfQ8
                      +7ygww67MKtivSi5zLw9WWO9y7ahPeW/oj3GUCE9KJrGvCAsXr1KELO9oZiKPSWJpb0oGY68pDX/
                      PEO3J70ttIM92l9HPdYRKj2ipWU9wwE4vQDtW7z3Lqk9WR2NPcsKp70U/aQ8wguNvdCWU73gJou8
                      9zOIPfMykL0at7y9CKmcvDj+pb048vC8plkqPcCRLDwry4A9UEtQPMqHJj2NJW29EyWgPY9svL2T
                      JIU9RHMVvQ5vlL1SxK69I97Dvd2xlD0MhP68R5VBvbgnqrws7wi9UGNZPPa1HD09N6K92HunPOUc
                      kb36jzM9kRmlPVmbvj1ATAA7z9+WPcQe6jyXDym9QMiwvICUsbziXDc9wfWiPfYsST2JYcA9Myak
                      PRcdgj0uNo+9XYHBvTBnFrwd+bm9jeclvfiftbz6Gsu90L4avX31jL0SA1Q9a1vHPS/0qz3w8Ge9
                      kANyvMK+Mj0a6S+9gGQtvR4LRT0kjAq9iIatvebwFL1iOo+9uLCbPCD7q719Ely9GHiIPDpPWD24
                      VIY8HWtQvSDog7xrDrA9wodIPX28t73wnzi8Y8xGvRdeSb3YdeG8T1i1PXhPxTxQ7fq7/Rujvfpt
                      Tz2sCoe8wLQJvBiujDyRCYw9rYczve61bT3YYEU8YmzDvahjr7x0UfU82rYmPe27pD2wY8E7pbmK
                      va5RIj2qvDU96WWwPWuNoz2AEII8sDvuu00oxr1SzxU9APKCPEp6ab2QyYy9MhFePT4wUj3weB+8
                      BGT8PACGczuDG709gNKRumqjKL0oMJi8kxhDvSFTuT2oYGw8q3O3vSWyvb0IAJw8gtUfPdh/pTyz
                      hye9BAuEvaLLnr3YYY48A6iDPcAKBDyhr449bWDCPUAKTjwR/Zs9uqisvXOjoT1QN8E7GdeYPaJG
                      Dz3K0W29NnQPPVDdubvldp09lFrZvNaHET1jF549LZtIvbxa9zwgOuW74ksjPRptcT0YD7Y8NPXJ
                      PHJxhr0g3rG7jJOqPObGWD3AGly7t3gpvUkUlT2LIoo98FhxveImRz0UO+E8q4HBPYGMhj1gU429
                      cKxovOMxOL2dDo+9Zj59PYk1yD0X+xq9i3CjvZRBkjyz8Ve9DLLLvC0VNL1sRvc8UGACvO/9vL32
                      D3w9Y4a8PccxKb1UFPy8UerCPSIwFz3F5Is9a7+bPYemOr0AZV667uZ2PZV1iz3WdlY9pmt1Pf/W
                      yz1NeZ49A1Y6vUs9ub0AoPS4B7WQPU3xMr1qi2i96CA6PBTdtrwA5tm6xUq7vUVBsb2zQnu99Saz
                      PSNIlj1a6Ww9bNWLvXexer1Ov3Q9ahwHvXVUpL0y8gs9SwKYvYBdIL0HFF2949xPvZAkTzxwh329
                      9ndUPcuvvb3G/4a9cOxcvEByQjyFNYi94kqjveXXib3Dp3O9aWC9PSzOC70i0WY9M7p5vSt3v72n
                      1rM9ZdervSjyXTznsXy9k0levQi+mjyVkr69sGw7PMJAZz0BuYM99Gy3PKnNhT1DnLc9OooCveCm
                      Qb3f1YM9bBCOvKAoaTvanyo9GAuzvNcvyr3AArg87MqJvVAKlb3DL4o9c9WxPQbiFj2riq491LLp
                      vCJ7DT3ioRM9mo4+PSd9Z73kJBG9YpsNPTD6/jueCCY9MmY/PWNghT0UxeY8q/uhvWORer1BzLo9
                      YmhZPXk/pz0tsiq9iIiNvd8ElT3evKy9gG5ivOy/Eb26Nhy9EtK9veDqsrxVJJ49vo1MPUvxnL2A
                      6kI6gOBSvICNbTyAVr46if+XPfLHST0575U9Un41PVL9kr1WPA+9hQHCvX8ftr1YXGU8H5G8PVY2
                      Rj3HLCu9IDnVOxNgmj0YPze8gOqsu2n0wT38Vd88ymUJPXiS/7wKKVY91i4/PYLxYj2QvmU8VPnQ
                      PCLoPT3qcXY90Dh2vMCLO7we9FY9aZCUPa3oub0DDEK9B85Evei+OLxbr5K9hnVaPehQerwO2qC9
                      ciUjPV0yur0gmOy76kusvXWMij3/+J4984xzvTAqHzzyaWQ9EocwPd68Iz0A1TY8ABKyOkAFLTw3
                      HDK93R4avYtcrj08Zoe9gCOZO95ZIj2QGBC8hz8hvTvVtL1Jl609QLQDu5g9yTxGLEM9mjGSvV2a
                      pL3YGTe8QJxkO7JzFj1dbUm9/LkXvSj8r72sFbe8RXeqPYDyKzpDQ8m9cnmrvYK9Gz1guUQ7kzAe
                      vdAcQbwMa9E8gJ6+OgCAlrvqUXS9V9F8vf6ql72ojqS8MV67PUCEu7wQH6O9KHTuvFhRwTxgQ4u7
                      AP53PMHQmz0YnAK8EJykvZN0gT3zLLQ9nZnIvVaTnL3cbQS9y/DDPUAng7zAto86cZ/FPWBYrzv7
                      xMo9QDoAvWjZU7zAuF69n2atPagy9bxhysI9oER6u4hUnL0AJG88gJm+OgZdoL2TUJs91tF8PaD8
                      WLuoitG8V9IcvYjfpL2MNtS8a4C6vVDaVLyiN3g958t2vTGzoz2QO0a8pNTQPECROrxT4ok9F8Se
                      PRb1MT2n3i+9L7+PPbNziD3XRLk9gt8ZPaCSILvQ/GC8uIP1vFAweLx41r28k5RcvY1vML3yQZ+9
                      xR3IPdAuc7xYiDu86wSPPRiGxTzqRyo9NSGsPZIMbD1aixk9WR6qPSgAlr1Atr68XRklvSZHAz1A
                      UCk8eA21vAvbnj0w8vc7nqCbvYsRm70ou3c86Kk0vE1adb3oaJm9bqx5PZm8tz2Anlu8vIsDvcDj
                      Or2gx0K9NogGPYjpjrxMc5m8HqaQvW2enr3giDe9kBW5vQaJmL2iNGI9Be+3PaasHz3AZI26dbC/
                      PceeyL20PNq8mWCaPcTNgr0gzkC9c7xxvc2JUL3X37k9sVGhPWiUory3vDC9gHekPPg/rr1Cvz09
                      qIIIvDlqqT3u7wQ9YReEPUpbib0Zk8s9xx+QPcCjbbxDxlS9AQOaPWFduT3Mm828oz6RvSJyej3O
                      WCI9OLyWPOp4XT0DuoI9USG2PdKOUz1Q7o87PxayvcIxHD16jsW9QrtSPeh7kLywzNy7fYrIPTDM
                      BDyhmJI9QfSJPa4khL2vSba99ztDvZ+TzD1gcuy8BMjNPDf3tT3uLjU9MiqTvUUaoD1KqDW9s+aE
                      PehOUbxnrKY9esRVvUrzO71Arck8wFERvSEEtT0caQi9ssJTPf9Cw72Wo2Q93sgyPRoucr2g8Z87
                      QBOLvPXbvr0Ecds8Uz7DPSA6qb25/589sMR+vGOjnL13PHS92dCUPf4SYT2xd7E98ZqJPWffkz2c
                      xPw8OZqTPWI0cj0g7DO9+IiDvfVNkL0gKZq7RSCGvWASv7wsi5W8cMdNPO1lYb2Hsqs9OL+FvM0C
                      YL3QB8I74CbhO4sTvT14O8U8pUakvY6yj70NUpm97CSKvK9xxb3A6MY8iB+EvVZSVT0gmse79Kif
                      vACbNTo1yos9oK05O2gmcLwTqCO9+BSOPJQwtDxudzM9WZTDPexVvbxqhg69kPievcWKrL3VHpc9
                      K0qUvWYbaz3opLW8xfysvYAK/Lt42MK98NMZPPC/ZLzcEPo8+CLzvHWnvj0OiAA93a2lPSqaBr1Q
                      auM7jS57vcSd8zytn169BKXSPFW4tb293q892NqXvA6oOz0DgLk96FfLvWgekTxuK3Y9RerEvYoo
                      KT1JyKs9PZWwvZaLFz2R7q89gNrMu9AUeDwARi+8ds8KvTTr1Dxy+k09q3WDPQBkHjrshPQ8oPqE
                      POyimLyG/Qg9YJi6vKAKmLuz9rS9fxvLvXqjQD0gJ7o8AIxTucfaMr2Axf+6cJ1APACF8rtw02M8
                      ++a0PfA1P7zo3WQ8HQKEvZrVWj0d87k9be6JPdmBrj1QRYs7nlI0PVDf9jsdMY89Ms+evcArSLsy
                      uns9vYEtvVB7bL0gsW290JF4vYBpgb0Al8y9kDg8vXkwnT1IJc+8zEoNvfrEIj0Nqso9IjGhvWGv
                      gj0YL468mF6RPCyf5Lww7ri7KeCoPcz9jryajlo9tOPdvNSV6DzqkMC9tXK+vUWmvT2MvJ88roFM
                      PUA6VjuQAlm9xUDMvQMFtT0gIay7QFGpvaWCqD3Szxo9P36PPWdtvj3Drrw9kJhrvV2/h70ZBaQ9
                      dEwKvaoXGz1GjzY9dKWNvENyWb1IEYO9r17GvXiAgb0orpY8h468vbT4iL2651e9dmwRvVR6njz2
                      MQY9KpxDPfn5hD14reu8aEabPKi4Izylp429BvdyPUckML2+kBg9TJegPJPelD1ZEq89gh8rPTR1
                      m7xUxb88EOROvHMZUr0Lv7W9stylvVPVxb1Ox4C9QE9Ku3IXyL2AvZg655C8vTR2/LxwwGy9uziz
                      vfHzjj0DgcO9GNCovDB/db3Y2nO8YBxYvda+Yz3wNTs8cXqKPRUQiT1YqaO9kl6rva2GjT3fJ8o9
                      EEd8POS2FL2mGaq90Dx1PJIxNj3Ab4q9wBJUu5WBxD3tU6G99L/HvOW5iD2D5J49I/QsvbKKv70K
                      IMO9oJ+kOyCt4LuI+qI8AGQUvRS2tLw7qsE9AJlMO9lWtz0O/Tc9YCNPu4CJiL1TKZ69QfmTPbqp
                      oL1noFq9VsMyPRhWWLw90Rq9m0WbvaFXqT0DXWy9c/lTvWPukb3Y3sC9tMOlPIBBz7pAqF07WZuO
                      PRouNr0l+ZE9rWlLvVJkpr2NoaK9o+CtPeo7uL14k8G9QRmEPeXouj3tFDe98OoJvMs1sr03TnW9
                      DBWXvIYtgL0SpTM9TktIPaGAmD0Jy7w97WJPvUu2pD3HBiC929bIvRaIEL39D48987mgPc6VlL0C
                      W8O9dJOrPMsjrL3zHCK98j+kvcKlj71dUFq90UbGPdO8mT2i2l099SiiPcEKkT1bvY294MmbvT4D
                      lr3I9KE8pXyWPfV6vb3VA4C9dgoLvVJqeD3aunY9+eDBPW5LNj1pwrA9aqcbvYKqbD1A5Uk7KfeG
                      PbrTIT109PI8kNdqPAFQjD10kPa8vEjOPBqsAj24+bg8oX6yPet6tL0wKNY7aSSjPfO0x71KfoS9
                      uMadPIW+mb0gm607Cp+BvbTEDr3IXI290A/Wu4Cvibsn9Io9mhhNPQCM6jgAjMI7DDmdvOjVijzp
                      b8U9P8PBPXxp+jwQOim9mB5+PFghSjzs4d2847hwvTX/rT1xdLw9AuVbPUlfmj0sRLe8N/2wvUrS
                      Oj3UWf480ElfvTEWoj3VgMm9VAqAveFyvj3izp+94hd9Pe7FnL1QVS282KSnPPr9lr3x3Kg9WByh
                      vUDNTLsUzIe9DvKCvcBwYztjpCa96G6CPFIAUT1tvKM9NOz1vPrdE72GsmI94OfBO1YCh71eCo+9
                      RlVhPSDiszz7bII99qc2PbXwjj39wFq92Kw6vPOccr2NNqA9UCdfPFzI/TyYLpa8h0GmPfegeL2g
                      vm29N9WsvUFHlz3Tg8a9CgZOva7TJz3f6KM9QEutuljwSLwa2jc9MS6DPXeUx727xZM9yz2bvU47
                      bz3Q5IS7iMyrvGwN4zz1Iss9UGPbO0FLyj1b1Yo9ExrMPWZKIT24Z7s8sNBEvVfNfr0AZp264KFq
                      vSoYR71hP7o9qMGcvY6gNj2QESU8gJCqvRRGpzzNwb49WK8kPJonV73NTpY9cg88PYSw0TxQT647
                      BL/oPLTtkbwT0zu9wwx8vYyU0bxLDK69gotZPWjN9bxmZ0I9QGN7vUwm9rwpOpw9aVCVPZmhlz1o
                      yRq82CjYvGArizzsjYW9k7CQPWDn4TuViqQ9jKTrPCMGmD2Amo482nE+vQDvLTrgvcW9VETWPAuP
                      mb0A6we8H+iqPYLsQz2sOOE8mRe5PZC2KTyVDcc902E6vWBpwrxtQV69xrtTPZj6Tbw94Uu90Eio
                      vYNHL71+ppi9Aha4vYv1uj1Nfqc95XqnvY9zxL0ZibM9NJv9PCpDo71GpSI9KSq9PaTJ7TwsF9o8
                      OCetPFCUUrzwdVQ80o/FvYe2uD3CJXA9zCXsPLBhrL1ofxo8veGgPYCc07xXlhy9WG8CPFimN7xq
                      PVg9IldjPVQwAr3YZ5S84i4WPfKsbz0AdxA6gCStu1mOmz1gkzy7HZeUPYIPXz1bNY292ESyvf1M
                      Lb0XGiy9Rya6PVPXHL2Rq4890uVvPRCfFL1hUME92erFPWCsCTs04ME84caFPZdPL70AK9C84jeH
                      vdZzCb1oFDg8ms0YPdB427teUIS9g7DFvQBqbDnbGq49gFDtO5pLf70AQAo3AGwhOg3JpT1Lq6M9
                      QqvBveLxXD2C9iU986NQvRj4MTwFGpy9ggIPPcAKnTonJ2q97NQDvY5NeT1Gr0w9uJvTvLI1ez39
                      zqQ9pea/vXesuz0IqcM8VrcSvUFsyT0N+Ci9MKVwPNj2hbw05uU8kjZUPSj5lbxBNoQ92L2nvUgy
                      hb2Rkqo9FeuDvaJCaD3dw6I9VVunPeGfqD3VFYg9he3DvZtkwD2R0Is9FJj8PNUQuj1QMbk7rnVx
                      PXMaOb34kJG9jJIEvfDJVzzI6Y88VjNrPZnXij0QAqq9IIP3vHgFoL0Aspw7K8WevYPUMr3NQii9
                      8joxPWeutj2KJik9Q5jLPZZQaD3izJO954BfvTrGnL1C0RI9/UtqvYrRVL3Napu9ACKhvHKedj2D
                      gsY9uiYDPV+2qD0AX7C7CtsuPQBjtjy7NcC9oPvuuz0HvL1N4zW9jY2kPYyx1Lx1YYa91MqlvKWF
                      lL1OiCQ9h+utPTT++rzmQoy9tr1LPZLbKj2fQaE9ZUzFvZz98DxtHFm9wF+NvcwnlTwdLMM94B9q
                      vUIVTT2NLo693WykPSHywz0YxFk8ABbxu5ImHT3Afsk80FMjPBa3Vj0nQq+98nI5PU6zrL1/SsC9
                      HoIHPdi7eLx6QSW9PN70PNqMmL0S1BM97HPvPFB6oL3oaiI8FXuAvfh1rTxPMJw97C+FvGB8Rr1y
                      IS09AE4GO7OepD2B0KA9fRujvYiFy7yglPC8GGq6PPKQeT1Farg9U3WwvYBfIrws7oW8MAIivS5y
                      hr1HG1G94LrJuwSH3zyXz8S9CeicParHm710xti8BgsoPehnC7zAe8U8LiZmPahRdTwALKk8x4Ql
                      vRMNuT1nN269cmGhvdHmvz0GLWs9qrF2vae2vz2zoVe9YeGKPZP1Ob2cMYW98jI8PYLCNz2jLKG9
                      IKSCPGCV9jvBa4Y9IpgcPS5FFT1sbom9YG6FPODXo7z6O2G9tQ6PvSJtAj33XjS9KBWfvQNzuL1g
                      DvY74GuQPJjDCbxmTw69F3dxvVDYX7xH5LI9sNGYuwCYurrdejO9AJAEOqN7wj02kxC9rhw2PeFD
                      nj2QUCk8mquyvQZLPz2Cgys927/CvYJhID3Z7sQ9zel7vcnaoz2ATqo6oHgDvTMqP701nq+9gOU2
                      uqARgrtuOZ+9rpIoPb4dmb0m32k9APdfvGfeO72Jebs9YN0xO3Uewj1li4S93YOzvQxg+zzYqVg8
                      mEUEvBd5tL3NNSq9EqpuPTtAk70Zjqc9rqNPPWCYYr1wWHg8O0iWPeRi5TyQNS684TPKPQ+Qx72j
                      ona9ANCnvPKVCj3q5KW9ogZNPfqKhL0MMcI8vfaVPbcMOL1oY5s8eup0PTDnBbzCCxI9IpJyPVAi
                      GDyhBsU9RktSPfHuxz3Vg5e9b6aSPQP+LL2HiSS9APNdOqpKZz3gk2i9sD0sPKotPL2NZJU9YPpq
                      u1LUDT3wnSa9FE3SPCFUhj2idHU9AItKPKAR0LudyyO9EJDCvd0Phz0Vo7E9FP31vPxQFr245/y8
                      namMvbKlUz2AEf26D1GJPW8QsD05DMc9YCtovTBsoTtpb5Q9xy+OPdOmwj1i/LG9Y4s3vVEOlT0C
                      xxY9V7G8PVRygrytECC9pDrgPGCFszsMgt28iADhvDCVojsjlSy9/bu9vWULgT0AnIm6MOhavUlV
                      gD3o4ka8le6HPbaEaj3gw6u7WiY8vboFSL098Ym9s29IvcyJDL13RR69ku02Pf25a71qLRa9Wpd6
                      veAcCr2tE2W95goDvRfEf70gm4A72EPBvdYSTz0go8s8sAvJu14MUj2jKZK9YT+EPQA+kjsKCnO9
                      0G2Eu7RDx7wAVcI5fTfHvSr2e71bvco97qcnPWvHwz2eg009KR2zPcgDqb1o38Y8Ulh9Pc47dD3A
                      /oa8yqVXvdwDEr3spAK9zHCVPPHtjT3OuX89KlsFvejcFzz16Zo9yYCpPajhwr3/DLq96GezPBND
                      jr3aD4W9LoETPfDJaL2DEpm96CiMvBYJF71A81M7lBOZvBOzlL2ARCM8aMagPPJgPj2tKyi9gxlo
                      vTCDtL1gvFC7ADtJu8e0Ir0or5o8c/lhvbnerT1iYgA9qF62vLKdkr2mmgk95YK6Pciywb32xhw9
                      2BIqPND7Xr3AM4K8sMmPu4rkEb3yalw9c2PEPTEAyj0AbaS8GQuqPfA+SL3Purk9k9pXvUpNWb2A
                      NYW7jVRwvWnYxT0U3Ym9CHKDvM6/dT2k1s08weuePeBQ9LvSSWw9Zn8xPT3XVr1K5Us9yHHTvBR+
                      yrzYfK28OFSNvJCeXDwASxy6ENw4PIMqZ70ftoQ98RXAPYQVBr1AirK9KIwzvEaEbz28iwK9UtMy
                      PY5DTT2Zy7Q9cVqyPeWMxL2YuHU8YEOzO4P3Mr3SgEA96P+DvEr4fL3uDSc9EpE1PfBFL7xfzMs9
                      0JWGO6jIjL2tSHm9JLT9PIump73QA4u7475Svc8+gT1Iaqw89VWDPa7kAT2TsXm96HiRPP3+rL2q
                      hh49ewqPvfoRRD39p1u95Ar0PCMKrb1/trE9vj1EPU7WOD3D2su9wJFouwDqubqU9Z88adaGPSmy
                      qj2pPL89GvxqPSEHoT3o+P+8UDF0vbeOJ72Cwx49HZWgPZ4SVT1IdNG8EJyyvW0TtL0Jt4w9r1DI
                      vV7Lp73AeMg8yEWAPHr3Zr2m8X49p/y7vSdNHL2YCb+9WE0gPGeLtr3jC5C91IS3PMqGST22NhS9
                      1GLtvFX6vT2Is7W9IjoSPRLdXT3Agp86nKgVvcyJ57yM/bY8wJlRu+rlp73aIVg9ACLBua9TgD3o
                      P0O8QBvqOo2Utr2zBHu9kb20PTrnWb2MC6a8wJE6O819hD20iu28VF0EvUMwMr0ZPrE9gqRlPYzL
                      v7wwRAM8DELwPHClLLyKlsi9APBTuFcvdb39Q6U9QKY6PHH+pT29mLA9otavvdCz3bvYSZQ8UWGk
                      PXo7Pz3wiS29FJ0MvcvioL1VI6Q9M1kfvS1yar3FCYC9WM86PJpOxL2PWKw9AH56PIDw9Dpw9S28
                      nJ3pPI1Gu71H3sQ9KB0VvCCmMr2S4DA9wFwlO1DebTyL1bS9xlVAPdhcw7xbvIc9AnsMPZLlYD1J
                      HMg96SyzPSgkSzzCnzw9AGSYO4+erD06PEk9F+2rPZpaVL1JKMI98TmiPZR697x5ZJ09u0+uvYO9
                      L73gNrG7amI8vSrYwr2zX7m9rAXrvECiijxGiIy9bNKPvGlDxj1yMDY98twZPb0yRr1q7zU9uHXC
                      PCMnl73AbKs8p/1vve58ib1tOVG9E6savdggYzxqlTG9GvZaPQwVqzxKEzY9jeJ2vYAC17sQi0m8
                      AFGuu4WMkb0IJvW8qYuKPTLuZD2KOB89Ep1xPX88rb1SiGY9gNzmOxi9O7z4YqC8yFycvWy94rzD
                      8KW9Sc+mPcAuCLuycig9gL3LurnMgD0o5HE84BoSvQB8fDmyUYa9rD+FveDLML0QUjm8Oh8/PfMs
                      jT3Wdlc9lhyevTXMtb0U3so8HNfqPNimzrzXpUe9Mx6dvTrBYz22vw89WJ6qvOrxPL1s3JA8Cweq
                      PaH3jz0Q/00847WfvYzPB71MPIU8d5i5vU97kD1cCfo8w8nDvcDS+7pGp6m9sg0MPWiq5LxzpaU9
                      nHYDvbBdMbxKbBm95zmcPfFctz3U4/Q8VhwOPa+cqz3qZFA9wfi2PZ5zVj2jGMs9ywWlPWobEz2b
                      gre9l5JZvXf9pD3wazo84xzIvWyP4bxUXOS8x9FZvQZABT2uTpi9phAFva3/Rr11hqg9knoNPfA9
                      Tb00KL68xztOvS4+Uj1iGC09vqAKPWxkjjwJOL89jvYFPaCTxL3wygK8AYiDPeY9cj3SMhk9aGKJ
                      vdzd0Dx6SLW913yaPXwa8Tx6C1+96uMgvTj/lL3uS1A9I2savSvZor3qIjk9LbpPvZ9kuT3QtdU7
                      ZyGiPfI7Mj2sW/+8AKXGvEEBrT0FNYE9wgCwvWCEX7u7z5k90sxSPViNOjxz/Cu9AhsdPSrPqr0A
                      o5m9cz0fvcD0sb0NWZA9w4WOPTQYx7xWEUk9sKV+PFBidr0SLDI9baQgvQCYNr1XbSK9WNZvPAo3
                      Ib14P6S8C1CgPThhs713lhu9ykhRPWY5QT3SGaq90rqYvfqOB73bPcm9Vj0qPWwM+zygo6M7V9mx
                      vVf0sb3qG7e9TZy/PRj+ZzwkKN88pwDAPds5uL11bKO9IEBvvXD+SL2gwC29d2g/vXWNnr1+RTI9
                      bSaBPfBeDjwIqc68rKXWvJg2Czwqu0G9KATJvCPOuz3IBag8Zp9ePSDJH71A0Js8d9uYPWAD2bst
                      Zki9s9XLvS5SRj1gDai9brQhPShcJ7wqHHO9kUalPcAO9TogzYQ7mMmTPDRXxjz9n369f/61vdQc
                      i71qWCk9fs9+PSxAoTyA8Ky8IG/WO44NUz0+9xQ9vX4lvWHJsj3QPye81+RSvVeza70qtxg9wGCz
                      Ojqei70A9168ZPvhPI3GhT0Z36U9Jneivddzer1DKaE93jsdPZDiB7x9Z6i9PyqHPaxmiDyILsW8
                      ikA2vR4eCD1APmO7xxUbvaRbCr2wpg+84h+6vYWAwD3dIo29M+hnvficmrw0jPs8gYWwPSTi5TzB
                      RbM9MB4JPDArRLxYN0A8c7tgvQMbVL0cUvk817J5vXD8cr3Y2kO8oBOzPCc8K73g7Im9sGH+O4Cu
                      0jusP6A83T6pvagcIDwjFzS9TIDdvOeGUb2YfN+8UEHVO0qxe71oPAk807o2vWi32LyNgDq9wBxN
                      vYH6oz2DOXC9GHOTvMIXFD2XJKY9v3rIPZypg72ol7i8KvZaPTr4KD1kPfs8wQe8PXT4rjxH88e9
                      KgNUPUPAqT12HZi9WaTMPdociL1QytY7ify1PW2UZ71alEm9sMWXvTlWwT0Y7vG8hVCGvaRzzzzM
                      q8k8Gm9HvfgKwTzgtVi9oMFovarGkr2rt429rC/DPMCMhTqALbA7mOpRvKDjqzxq8nk9ZCvVPHQT
                      8zzeroC9KgFfvTdYfL1yV0c9oDwJO9Ar7bsmiXE9APG2O0qBdb0zWEi9aN2AvStRq70SSaW9rqmA
                      vWLVt71FHqU9hXKcvYhxgr1sYa68cgdRPaOUkb1Awik7H8LJPeAxeb34FMs8wX26PdggB7wAcAQ7
                      wBUBvLYoWz1TXJA93ByDvabMDz2AWv47Xm8FPbu1xz0QmWy9YJCsPEX1nT23baI9KIXUvAHowj2o
                      y608KcSKPY0Olj3NoGS9pfjLvdeOSL1A7rI8niFkPefPMb0hK7c9OTazPZeyrr3slJO874WSPXqn
                      vr3eOJm9gAOWPBiYyL17aMi9sshEPSUmpz39v2O9xjAZveZUjL30Ibi8pjeOvZjpgL33aJk9bsgx
                      PQw+/bwGMj0958LLvcKMYD2Lj5W96P4LPCbgFT1acoq9+vwYPQZYj72znJc9GDQZPIjjxr0iKG09
                      4NyTOzBiBb39jo89INOOuzZAbT3M/N88sxCkPUOStz0AvKu7qtIXPcCnTby+4XM9yoF3PUrVAj3c
                      7fI8WES1PFLvaj1gRey7TSytvfNKyz2c3YK94hh/PVM3Sr0X7oo9wju5vacojz0a56y9sON2vRKb
                      OD0A7ny74d6ePWUqoT3MyLS8DPzFPDBN+TsR4r49JH7mPFg+kLy7XLg9lMbevBDuw71oAA+8EhoU
                      PTo6d70bS569N3y+PQinnTz7los92HgHPMfbH71nWK69R5hIveya2byyOF49XjapvTOYx72HF5Y9
                      hEHOPLF3rz3+vCA9oGtkO9NAYr3f57g9AowVPSLqej1a0WE9wLljvRCcYryzsaS9YIdvu5QyhTxJ
                      Lrs9doo6PYnmjD2Ay/u7mlMTPUBZ6bpUqP08YH3qO6AZrDz3tpQ9alM8PZrkd72DxY69n7PKPbjU
                      h7ySUlg9yMmfvbPGVL1ejGk9TUbDPXLfAT2o3By8gn5yPX2Hlb1QKsO9dwu3PQ1Dxr3ynLO9RPnp
                      PKb9j70FiZ+9tAIKvSRN5DwTyle9fhdqPYB66DoWd1s9Y3yiPSGOhj16/hy9molFvRbpPz3GC4+9
                      J/u1vY7cir1YB5M8GvYMvfBzAL1ddEG9FSywPcSV5jxaRh89MxHFvUxx3zx+jHo90FIkvUbqj72s
                      q/q8sj1MPSD8s7sQ9ye8rPSavGuJwD0Ym7u8ErUEPeoRDD2efAA9ht9gPS0QJ704uKW92FxrvPeG
                      mz14efa8rSW+vegYXzz2wqG9YHDZu+7Oi71arFw9GEUavJ8gvT0Gwgw9kIEGvPnQvT32phe9l/In
                      vRTZnjypT6I9XC8BvYiqlzx8etw8wFDfOnXsrb2tQqK9cXCEPQBe2rwt+au9FJWKPCxiwzwQWiC8
                      QNuKuvCjk73p5Mk9ROv0PKDNtrzTL0a9biUQPYDKjLtHmlu9gDmevAdLb72Umbg8LAzzPMZuDT28
                      6oa9WoFnPUlYlT1Sw3g9oHK7O2B1r7tnfpQ9dBHMPCp1G73NgJW9wzO4vWOUgT2taV+9MPoWva5M
                      bT1NYYg9Pm8wPXd5xj0A8gU7WDSsvDfMdb1k/Q+9yAm0PP6meD3S1RI9lzCMPRLKPT3e74G9YYuL
                      PWwLjTyjWKG9YDFGO5Tr8zyVSKE9a/uuPVifbrzAMQg7QFzkvIDek71Imqs81oUGPRT+x7ximVI9
                      NgkQvWPzIL0W8Wo9PR2SPU1HfL1QFDW9hbaUvXvVqD3NvXu9mbClPXSk/bz3tXO9zSuTvYyQ1zxG
                      Ugk9Q7KevShM+ryKimE9VROcPV0wqT2wmqo7TdmnPRINhr0DoKE97R+9PcDYXTuaT129wFQePK08
                      bL1jT6296p8WvRJrcz0Opmk9UIthPPqBFb1YkQm8klQnPaYdPD0gBJU8ONDGPMAry72E0tw8o9lg
                      vcDQCLxzWEe9gs+KvbUPkz0CVVE9GLx9POLRpb362kK9QKFvO1qnED2vaKE9p1CcPdu7hD0o5Ci8
                      omB2PU4xfj1NZak9YF2BPLLNAT3diiS9kgc/PeAiqr1gZ788gKqCuhD4mr3mdYy9VR3LvY41Aj3I
                      IJS8k7WPPSgPr7zdKLW9WhqCvR+1rD0y2I+9UR6mPdHqlj1D4mS9DCDfvCITMj0Uy9a8YILRvDAw
                      W7wy2X89MkVsPQFupz305sy8wClFPMyehrw36Ey9AO4OO+rXrL1h26I93pUmPc2MOr0rUsq9otY9
                      PYeTsr3Ysp68ABAXORIrqb2HSL29PXSIPVD5L70dD689szaVPXSEwzxoHrW9kPFVPLbFVj0nHlO9
                      zjsvPepcoL2CcoW9yDmHvIQb3jydd0S94GWtu93Xgz3AQXS8myeJPXJoMT2A5V08sESRvQd/pT1B
                      h409FwRKvTTshDwyImI9DVuPvYvkwT0Cpau9AvMOPbAMO71o/9O8FIyZPNJbGj39ayK9C9CsvbCw
                      O7zgyLc7ckqNvVSM2TxJrss9OgsKvWYsor1l+aY93TCtvVFqnz3Aroa9u0KvvYahbj1iTwo9pVa+
                      vbCQ27uHkKE9HlmbvbLWgL2nOZI91rZKPQoapL3giHa96LkwvE0War1n6pI9uqwvvbrhFL0kSOk8
                      ALDeOjPPcb3FgZw9B2OPPQLNST3xfsw9kElZvFJNbD2kS808maS9PWifG7xN2Vq9gCnduxh8yL2Q
                      xEm84DSWu8r9Aj3yR7W92lMWPeCHnbuw6Aa8qyufPTAyqb3s3s684KHsO3eFnj0A9Vm9aoskPWur
                      sz1Uaee8rQ+dvaO5Gb0IJoO9QG5pPAzA5LxtxYQ9LR20PcBrDTuA5CO9kFVovGG2hD3sU5A8e0rF
                      PTqBdz2hlrM9qI4gPKkBvz2gr5O9QNNluxR++LyXAsk9woUSPQfaMr2IdMg8Sg9/PQh/gzwAfRC6
                      xI8GvZPwbb3RT6c9KkY/veo/Wr2yfgE9XBcTvdCyB7yssvy867i9vSNzNb11eZO9hYCxvUATkbwy
                      tlM9i76wPY2mqb3Jf649VTuAPaUVoj0gCMy7KSa8PbuYpL1AOGe7AMk8O2KCez21FoI9uDaIPFJf
                      Gz3XmVK9YO7GvWzl+TwYvg88oFIou9HjxT0jbj+9gZy9PZXIlL2Bk6o9naSVPQDhibtpZpU9bCqj
                      vL3SHb1N/Jw96icavUynnDzlLpQ9YhvIvexHwzwnRza9aOYAvIcoNL1oDbQ87OPWPHbJET0g7Mm8
                      rDr2PPsRvr2tWnC9upsXvdf5vT3tRjG9LO0UvfpLdj20oLI8IOnivJBTT73obmY8FGcTvSOekD2S
                      YS49ukI4PYjivzx6JB69JXfKvRhTtTwsQsc8YPUNvYIJLz1/k5s9QMhAPPctu70AFSC81O7APP7p
                      Mj2Jebk9BH/5PFhIxrzkmeo8Y0E5vfYFMD2EnoC9t2etvYBo+TruLqO9OLvTvGXWrL2Q2Bi8BBzu
                      PGRE2jwws2884SqEPeodEz1d+le9JC/hPEXSp71AXzU7GJBNvDPjgj091Y+95U6rvcC2bzvG35u9
                      LA3ePAr9ET1/U449qnQkPajcnTzE5eY8MCu1u4w0o7xa5Ho9NI72PG1ngj0geiq9kyWRPaBfZL3o
                      hbi8RLzSPOUzxr2kaQ29JhCovSyOz7yGdz89es4rPZCnAb1DBn+9DTGUPRioarxjpzO9EI8NvWUg
                      wD11LrQ93aakPduGv7364D49sVyEPRMirb1A+xg8TiE5PeH3oT1ko/k84mFvPQCZIb2guwg70Bdo
                      vY6HZT00nPS8N0pXvVxt8DzTS0C9gvxJPa0BV71grDw7w6chvZehxL3kivU8V/yRPTbzdz2rNYk9
                      DAq3PBcgXr1cptI8NWW1vdiXgr3p0pg9YC3LvUa8TT3Kp269qNTEvX0EY71C6iM964uZPbYgFD2A
                      Ueq8fRhZvapQJD1AAUS7d/+3vWaWZz1XMsM9uGqmvSzTFL0SPTE9sTijPQKBiL2AC5i8QCaQvL3Q
                      kz3woDe8SmwYvcxRiL2Axhy6KaLKPUxt+DwAZTE6YR2/PUnamD3vw589MKqGvSJrSz1Ku2c94HiA
                      vBS5pTwwfpY7qfaVPZr6SD2WlJW9qL9WvJBAP73gOIU8TC60vG7Mk71A+Yg8L6uuPe/1kj3DKj+9
                      KvXAvVBJNLze1Gk9KVaLPRXznz0aPxg9evROPfLBLz0AsGk8AN4Wu9BtUrx/z6y9EzulPYDtFLrJ
                      3b091opaPZq8Mz3mjhk9SNesvPpjt709orw9EqAcPaY7hb1DTjm9505GvawjzbySFyw9KERYvBK+
                      jr3oO2w8rfx6vYBPBLygeom70ESuO9rMPz109ru8mN6ePBhJpb2AurO6UCjSu6jAob3Y2ui8WZaC
                      PQBLKb0APag59HiIvQBgTbzTsVy9H1qhPZmzlT0J2KE9sIJ+PMyR1zxgda+8ZE2JvS1ZxT2SK8K9
                      JjYjPRQvD739ozW9sSKqPSgdFTyw8j284L2/OwC287u55sk9B2t1vQ+npj2INca9mFlHvBRMo7yD
                      iG69iYqhPfvsqj1F7bc9iudevUBnqr0+q1U9apIpPUBHUb2ge5i9DreFvS9Str3tBiy9kFoxPN+p
                      mz1UOZQ81faQPaOFtj0zFri90gu7vWp/VD28t+U827G4PTArqLsLvpG9TX+oPdI6Vj0YFs+8wBIM
                      vYAj9ztogBO8+4rMPYPDwz1oi7M8O0iOPdNcyr2eaXQ9oLTkOzLBUz1/L6k9YB0Uu9u6tD1qjKy9
                      bBEJvaCcojx4OaW8IP+KPKzyqTxhJ4Y9pbKBvac6Wb14w7e9gyyyvcpHAr2BwoU9oQWaPW+Cgj2K
                      8Ke9VeiVvTTyhrwYUPa8oJxPu31Wu70EUt48eWvLPVaORT059aU9xd65vcBcfDyJH5Q9/wi1vTYr
                      TT22gEY97RInvQc7e70AK4K92KvJvD2mL70oOU48hpsCPcQfF73iNUg9YBjHO4o8mr3+r5O9eRSJ
                      PRopMD1AtWG8IFr1vKwP1jxjBbG9ku+rvXSD5rxQ6aQ7YkmJvRh7wTxjWG294Pz4Oy7kET0gRDG9
                      epAWPcFYuT3InrC9p6t4vUt8vD1r1bi9raVMveanfz18uuA8ADVsOwAgHrsA2BO47iM3PaDBVbuk
                      vRG9qAvPvD8tmD3odA48dTu1vQfTKr0yXXs9+PO0PF3bxz3wHkY8LIUWvWzgiDyo88g8UNs+vIDu
                      z7qn7Ce93wqyPeDI6Lys4aG8nIroPHe1uj0LhKA9KJDQvFukrL0q7y+9GgoOPZCJe7xocjW8AKwc
                      OpnIyz1ADB69MCXHOyitW7x0+bG8lNGkvLlRnz1Dx1W9DR+JPQCUszgaxjY9qO2mvFXerj1q78q9
                      MBTVu9AR2rvg9rc8IfehPbCwJL05NZo9BugWPbBNwrvqX1+9fA8EvZjANLzNi6A9qAi7vTBFKb3q
                      /QM9z9KvPT0qrr2TvL49nUfIPaJTdz1LNqC94EOqvY5rSj0C7RY9jn6fvVGyxz1kf988ctQjPQD8
                      Vzyo1By8Y2SOvTDnSb0CYwo9H4KMPXrHDz2ojRC8zHKwPC3gOr383O88rLDGPLDXwL3dlXC9lUWT
                      Pdf7mD206aU88BACvCsZjT2w80K9QKUAPFh4brwA1co8vUJHvbIcGz2gJbO8b0ioPQD+QDsT4y29
                      NCeQPDb7kL2cmO88QL1GPACSnjumsgK9/iBiPSWMpD2DFYA9TlwdPaq4t73Qm0i8XmVDPXXvhL2A
                      aH685tOJvdCudb3M9KY8ft9HPRA+XDztRoq9Ko5ZPZuPtj0MjO48LjxUPQvfw73z03i9VkgCPXNx
                      lL3M8Jw8gAIWPF0qJ73wZiS9HaXJPUm7nD06mpu9iF3GvVN9zD3CFcq92Ua/PaIrSD0CnS49mmQA
                      vRwlD70tbse9RzI/vQeioj2T7LG90LnGvZreVj2gb2w7YI99vS0owT2gLLy9pQKGPfWVsb07VJk9
                      BnINPUKfHz0D3pY9jPKoPBTLybz6DDM9goATPYBy6rqsALM8oa2ZPdDSzbvQDia8YPryO4DoK70w
                      JWg8dKOfPCgat70PeJI9XU1DvZhOpr0zxLy9lgcSPZ7/AT0M9Qi9ALFOOilyhj0XaLk9MiefvfIi
                      HD1sXPg8BaSEvelGrT0AY8w58Yq5PUtUoD1z4UC9KB1jPF6EWj1Y2h488weEPcO+kD0Bs4g9kUGG
                      PfIAfj2aT4W9sdGfPWw4qLyAFIk6svphPUpLnb3s9rm8+WGXPTKNYT3Yif28gL/bvDNDmL1k8RC9
                      mezJPRC9k70grcm7bTaMPdRPv7z6MwA9ydKHPajRT7zw9RY8ONyQvPiWjr0lobc90/6DPfO+VL2g
                      sF+9ybyxPWj5WzwsRdK8gNuLu6C7+rxgEeO8iPKcPJCdX7wASAY8VWGsPVkttz0h5Lw9HsClvTT8
                      g71Auaa6eCe4PHBjBrySWlI9+1SVvUA/DrzuqC89qEiSPERr3TxAwEG78LiFvVYehL3gt5o8oDjw
                      u4Nirr1Ykjy8YyCdPT1YNr1xr6A9ta7HvbQCwjws8P08KA20PHYMCr3YKyW8HbOGPZIzVD0jT1O9
                      0fmzPaKCJj19w669MuAfPUyzgbzL37a90+mwPR1Ljb1EYfg8yDutPHQ9A71Aeiy8l80avecUU73g
                      W4C7coO1vXBntb02UEw9migEPf2mbL1MEa88cu0TPW/rxL3QAqm9IIPrvMpDBD1FQLA9gLfPuxDi
                      bjxaOIq9Llo2PYCYTDwuFy09eg4LvS4fdz3oKK69E4wwvSCluTzbSp0934u8PcL7UD133Mq9ITS7
                      PWL5FD0vsMc9sKFmvGoEzL3jmr297eZdvczw7LwAO/C7/eGjvdJtuL1zhkK9KSKhPXr5yb0pqKQ9
                      oRKDPco3Yb3CHE89c89CvcZnA72TVGy9AD9HPMAYObyny2u9GItFPGgLcLwAxOQ7qJOdPDMfoz1Q
                      gL29WttSPRg6nrwaXXy9T5PAPR1oML2A9SK9dFzMvER+1TxaWCk90M0TvF26PL1Y4MO9DVVUvVg3
                      cbx2WIW90Dr7u2V4nj1G2Qy9RoWCvbNorj1A3BG9jgFCPScutL0Oe0A9OkwFvTqmD71Ie8K8FJS2
                      vDENiT3OqmM9DcYvvTIOQD1YX1c8wIs0PIoQF71BCsE9b8OVPYAoBDz+1Ek90H8gvN9fsj3oMn88
                      Y2tKvWyHujztlnK9evdhPZDNBTxQMOu78vstPZpvYT3EtNQ8POoOvWyahzzIycy8ahI6PZ5Li71y
                      BhY9aHpSPEAtXb0rkYo99XeJPYyg8DxYcWQ8pGnvPC0Iib3gRYY7yEyqvYnRyz0EW+c8ogdlPUlX
                      vT3906s9oOOVvS63RD3AxGo8pc+2vbAbwr3mn0A9OHvFPCpnAr3Q56Q7Jd2zvbGRuj2YAMy9lHO8
                      vNRTmrxgMCS7MGQwPADmvjmJV5Y9wtZMPZvbpD1bJss9YI4nvcyK6TyyNzw9NDAMvQdwqz2QMny9
                      q9qNPZN6P71saxe96mfIvffTsz1/4b49De2avWjXCDzYpJg8J5bHvUiQk72AwWO81q02PQBQmb0g
                      aeS8N4ikPUCFHLz6UBG9gF4IPGttnL3UibU8htEwPQDSZjuAVK69FUzGPVgYK7yXyMY9Irt4Peja
                      6ry6gye9hNUYvcV7wr3Ui5k8pKKMvQB7vTwsvdM8/wa9vZL9Xz1gXQe9mlJDvZ3Pyr2AGWC9cKsm
                      vMAH1byhhMw9Rkqpve+Bub3yOi89M90vvab7n71yoT09wPFcvFcnPr2UV4m9y4a1vbR5mzzkkv08
                      QMNxvAmQrj04pLK9SZqUPYIoxL0g0ts7cMVGPHOXlz3mqqC95zUkvXzC1jyEmtM8ZtAxPZDrJbwA
                      9se68hYePeNtXb0daMA9s4CLPbgTrL2bZMi9ulJ6vaqwGj2Sz5a9rGK+PLOqwr2j8sQ96pRlvfpH
                      Or0ppcw9mbSkPTmMlT0qsVS9OrRovYCVqjyusWs9VAEYvbB8FjzYaLG8MD9NPHT3vzypNKI9BnFO
                      PTkBxz3gBsa78juQvbxwhb3g/Ja8lFa7vNA2Vjw/eqg9QFuCvOhSlDytcm29RVSavYDLBry4YMS9
                      PcSQPRK5JD3SxSs9XFLRPNkMpz3K2DG9KFhavIlvhz34iJe84tSovX4keD0UT7C8pBL4PKl9pz1z
                      d129gOB8vKCz1rxQ4he8G3HKvd1bYL2tr5e93dzHvSzeurztP6i9Qoc3PcBNg71gW6A8aNTJPFdZ
                      xj3ObUk9MMJuPOhNi7wnOB+9UoOpveChXL17ur897If0PID+Zb2aBA29Ija8venWnD07DMQ92oVx
                      PSVkhb2NZCO9goZGPb25xz3Q9IG9NFoLvVQPkbylAYI9FTfDPUy2yzw1Jpa98BJlveJ6fj2AXjq9
                      /kCjvdApML0/cbq9VtUGPVmPhD3gkeO8qs53vfRwyjw3MX69Aw05vXkflD1wpDU8lhVRPX7HWz0k
                      q/88kg8RPW1/rr2uXIy9G5S3PRjGE7wEkwa9SGbLvOzxirzG2Qi93WqmvUV1hz3ovKy9zMqjPO0b
                      Sb2Y1zK8J65evXctT70Tj1G9m1arPZO4ar2Swbu9gAiePI1tZ70jzm69NxIfvdifyrxQuno8sGBP
                      vRoEWb29d2O9DKjHvAfskj3FLZq9QGM7u1Sk97w7QMO9BviCvZFVgT2UAMo8QB2GPKP3M70s/oU8
                      1GCjPPpbVz1AEhW75SK9PT18oj0iNgM9/QGNvaz557xEkOU8UoplPSSuA71z43m9B1JCvb6KTD36
                      r8S9yIqSPMAe/zqKmgs9xscsPWZXAD3UDK08SeujPbTEnLxrCLe9wmsAPQAeyTzwSx88b2mYPVUD
                      tz1RLLI9IgRePUiEsrxEpvo8+zmnPVCJJjw1doo9DhqAvXVEh72DbcU9Z7zIPRiGWDxAs6S6lkUt
                      Pc+kkj1oIYU8hWanPfZLGj0xPZQ91yE9vQ01LL3MF8m82NNJvPNpVb2VD749B6O/PeLZaT1y9G49
                      ql4PPWe+eL2dZyK9PSOIvbTI4zzQtAC83fyQPZqsDT0DV5o9VMftPIL8BD2wHbu7hcyXvXnywz3q
                      zmc9Z+ahPcRU3DysTdg8oHXGuybtRD1g2MU7GAsOPKTi7Dzg77y8GPqWvc7gcj2A7/i75x8lvYpK
                      PD149Ig8gymOvQC1fLrY2Qa8mAAoPI++zL2gkDq9OS2mPdh+zL1qTMG9ephtPVHamT3MNbc8ALD3
                      O+AOlbsjnCS9Pi1+PTDx67vPbsC9nUC1vTqHm73an1I9GUDMPbCmYL2ZGMc9uvt4vaPqML2d9VW9
                      rQSKvZjZYDzMy5o8K7mfPdieVjyihgw91xAovSnCmj1OP6e9GFrLvUQB6DzhHak9L4rIPX26Z71+
                      5BA9HV92vfK3Dj0d9TC9yIXMPIiulzxd/y69wKykuqbWLj3St3E96llivcL+Wj0y8XM93UGZPUCs
                      k71+g6i9GChyvFYnCL20kJA8nYyiPTJdRD078JY9OYypPV4Pg70d35C9C/uxPYoZHj3Rj8w9iihw
                      PSx4AL3o3R88wDS8vPp3az3Ark88jJawPPOzsT1gUZA8mCwvPCS6/zwhF449gpcVPSa9Jj0Htzi9
                      co2FvSh2A7xY8DG86i5AvTyE4Dw0K9A8oGjHO2gksTyYTsQ8F+G1vYD4tL04h5m8jUNfvVDNd7y3
                      OSe9mJluPEDGHb3pYoI9eilwvavxpD1dt0K9lPiKPBijZDzHE6w9SvEZPfB/SLwA5Xq7vMbdPBpq
                      Gr2Ucva8/KgJvSKlKD1KOn49FCD9PNd0sb3KLy89N2xRvQjWpbxkaf8865OgvdjZmzz35re9qDhU
                      PEIDjL2UO788AIDUvJKTET17xsC9mq2/va7tbz3KchY9g/BjvamDij1kwfM8saeLPf3/NL3ZRpw9
                      aMGKPAOzcr3N7bk9shmyvbxK2TxgHjm9yUakPSBj9bv7qMK9bbubvZ59ej2oK0o8sBWxO8h8jDya
                      lTg9wL6CvSRfgL3ARS+9JqhxPZBZQL3eVHE9BbSDvXHTmz0tLKC9UCxvvLmcmD2g7J69ek9lvZh6
                      vbygTTs7MHCeOynWhD3RyJ49mv6ovS2wk72bGJa9Rz2SPdCVITz0Wom9wMIlvGjTUbyYyno8isgE
                      PU4ZLT0wbhS9GOj9vLNhYr1tFqg94HinO1l9wD3aFzK9mFrLvfaRMj0/7sG9Y9KUvThNsDzacX69
                      UQuMPYAW7Tuzf5y9PcCVvSgzCbxXe8C90y6KPcBkUbvwBSa9BWCBPUBYnrxxnoE9Ubu9PRtYnz3D
                      bL89T3m+vaj1w7wAhHE8aNQSPGVxsD31z4u9wcyjPeoCTz19qDu9iD+/vfA8cLyASye8MNpJPDcm
                      pz19hzu9ge6/PSDtAL24gYS9VPK/vLFmvz2AUNo7kPEwvBivOzyp3rc9wvRoPfs3qz2S22s9jGCg
                      vHbZWj0AQAY5vQrLPafxrb2oGLa9lg5ZPdRujjymEV89ia2pPTPlSr0d6LK96o5kPQGNij2Q2Vm9
                      QxpGvRBulL2ZP8A9pqxePYBYwDwpu6Q9u1nFveSH3TxDKHG99BQCvb2hlT3MVs88gIR3vFiglTwp
                      OYE9RsU9PWptaT148J+8A2U5vcv9pj14U788R/HBvVAYVL38fYq9OTWkPRMZab1AyhW8gPdbvCio
                      HjxguaY8bBDNPA4Kp7100g29TDu0vAfEJr3DZVi9e+ivvc53PD1sVuS8X82mPUy9przgxDu9EEsZ
                      PEHIiz0GyD49m4KgvRawPz3y0DI9G7DKvehWj7xuZkk9rrUiPeBuY70FNMw9laK5PYyrizynK4I9
                      bF8DvXY/VD06/wM92pM2PawU/Twg+3m9mXqtPWDbxTswDtO7jkUPPaAlS73qLMi9IhoCPbrGJT1f
                      go095WeJvWomez29HKO9qiB8PUfWGr3w0MW9fcGGvXXllb2s6wm9DRZ7vYD+zLogSqy7MBiVuxPf
                      qb25x8o9sGcmPIdbPb3sTqG80HWHu+6nbz1Fbqa9AG1lOzVNjD3YNdi8miG8vXDTXDxoBU48wCi0
                      PA7ATD3wHHs8VZHGPbjL3rxT1bg9aO19vMCkX7zlkpk9uRXBPZJ8bj0ANtW5YKEhO0rHZz0VHom9
                      TNGbvHkChD2vF8a9LWSfvWp5XL1CJkI9qHfhvN7DXz3yplo96iRQPYqaC71t2na9Y6M/vV2IKb3x
                      3cQ9mK9qPIMRnr1ioS494IC/veokZD2izW09zXLCPXrIEr3TuCK9iwiwvTq2Bz3DIzC9MIGWvbDO
                      nTtFA6M9sUiJPRjSRDwbMrY9IgNjPQNxyj3w/nm9oPjpvMB7I7tZNLU9Cs20vRKuPT3suY48oM6K
                      PKDsHTvMaIS8J5KdPWDCiztjXcO9d2t+vbzi5jwyVFw9aZWfPd/cvr1oY4C8V+iCPWs/gz0PWYE9
                      A2krvZ/nvD2jx8U9Ca6xPYBgGrza/Do90CeAvWb/YT1427y9TkpEPZYvl701NJ894eKaPbAq7ju6
                      aQO94Gqoux6WAj35OLw9+qVpPVWwgr1/iqo9iKCJvWQ02Twuohw9prGIvSgWQ7wtFki91l6pvQCJ
                      UzoJFZI9PtZwPWhx77xKN4q96LGEPEhDqTyMZpO8cn7AvVTtpLzTHSa9kl8XPWjCrTyBv6E9BPPM
                      PFzY8jzOX2c9vH/+PFioJzxpJoE9wMebPKDPub2Gw5m9CiTMvaPsrr0vKMG9MGgrvc6OVD3gG6W9
                      R0koveKJhr2AXM07wEq+uvBNjr0Zd6c94lBzPQCGLjx4X4W8Su4vvYy0hTz6KbS9LwOzvaQrAr0A
                      4Vq8ywakvRb3Pz0AyHm6mJwpvEKLaz0AOFO6pSWbvTB/77vfgrs9DjtePUzYAL1K4Bg9JhY2PZhF
                      HTyoQLM8AHllu5r5Ej0Vr6A9MbLMPTD45TtIrra9GpdMvQM9kD2VBpS9cJMRPFjupL0wvoO77Xue
                      Pd3ykz0jRSi9ABAYPGh6ILwSDmo9VMGUvGL3aD0SRzQ92kCMvUW8kz0vrZY9ANXeOe5lir1N0SW9
                      gvd4Pct9wz0sS968XLcYvRW2lb3PkY09Ds03PXpQVT1s1de8nWGJvS0zwr2iO0A9kzK2PQB0TTxA
                      QVa9APd/vNN+uL3dbLe9t1BJvc/Itj0Ni7i9anu3vTy46Dze+Km9/YOxvQSI1Tz6P3s9nXDHvcA1
                      MLtOghg9tFS0PEqit70YBIq8fRCdPSAHQr2gQ4m9np13PVgenL2aloG9wEuAPEIKfT0rWo09anty
                      PbONLL3QrBG8DDDdPIqmAL0+EZW9uPC/vaA2MTu6oRY9buhKPY7aJT2ApcC9/dkxvVpUAD0wrw28
                      MD77O0eYWL1GQXI95qAvPfDQbTxoUUI8vR9CvUNaMr3w+XK8ABc+O3a1AT2yjjA9uDvIvEivo7wx
                      dps9CmptvbMNRb2YsCy8r8a/vTXJjz1wcEK8O46wPfC7Eb2aYke9AMdVu2WTiz2Viro9eiCkvYcT
                      sL25nsM9n2ejPYAa9TsNY8I9bHPvvPhh0LwIWce9h12xPYGtrD0mJTI92NV0PP3tHb3Quie9sA6R
                      O7pRSz3Dq7w9ZYOtPUfnJr0RZIY9ANNBu5apXj2tRWq9DNjzvA0Urj0XJ229oA6BPADB/7tTpB69
                      rvmAvbAgTDxa/bm92kG9vRZuYD1la6y9GHBVvE7qKz3Aol07EuynvYJdOT3aJMW9DGXNPHppGr3S
                      BEI9VB6tvMBWirqAy1g86Bh5vC0AZL0N/LG9/Z6hPZsKtz2NozS9oAviuyiQKbxYrhQ84oMePY+E
                      vb3plL8904eEPXXXpL2gHfq7BfOfPbUEqL2r3YA9lJiyvKYhhb0gd6+8/rhzPRMfnL0wI927VYCA
                      PSFBkD0mHVQ9l1FpvTeVgD2oMjQ843REvUwDtTxAwYI6ZfOgPV9Bxz3zsWW9SM6svOrjmr22Kw49
                      kJIBvF8Toz3d2hu97n2MvVmfuD09dju9UkJwPbM4uj2A3Mo6VJjXPGgtir2y52w9VzqyvWiYcjyX
                      uqY9YkeKvd4WKj2ge02756scvRhCmbySuSI9PwCKPWsRpD3QVY69EzmqvXf5Rb3Aq3G99suevREv
                      hD1SaGY9KEfxvM2YtD0B8qQ96MISvIL1SD2EFdw8wDBzPKeLxb1lK4s9FaWFvaocLj32sAM9Iqwy
                      Pb5Xm72XyLw9NGmvPMYzir1FQpE9LjCUvfAIC7z6Ub+9AaKFPfTPhzy9p7s9MrxSPUD8ezvj6pQ9
                      uLmfvcDfTjyAGsq82GWwPMD6KDuhvrI9KtNrPT2qOL2wKYK79kWavaOcyb1anpG91nEzPfSolbxg
                      IaC8o16kPShJkL1gMd07f4+DPej51Lyy3jE9tNL6vFr2Rb2gc4I8GEoAPE6qPj1wH0w8412KPe7O
                      Mj0HN1q9GBJpPLJxHz1qmXQ9VJLavIeTqj2Y0cK8gKoJuhSm0bzlsrQ9eDOqPDg7o7zj7lO9yHTB
                      PKJmYz27Qao9sH63uxTNE72Cy0s9DFgDve7apb2w2aW7clWCvafObb2XlZU9mG+4PHIbHj1d8so9
                      HnqjvcsxzL2yN3Q9AKzPuyp/Uj34M+e8joYXPUWdoD0AaLE6lA+TvEI2AD1MTMu8gGhPPHpTFz1S
                      Nzg9fym9vcjZ2rylT5I9hw5nvQNKTL0zG6c9VW3MvdicFjyx6K49VQ6vvZkOiT0geie9fbeSPXVK
                      yb0XCWO9QNHAOjBxFbw0f/e8ZBvgPCC4iTuRGa09WS+bPVWurz1ZOMo90D5NvcwxrjwXF5s98Hda
                      PFHbjD0gd8a8eAKdvdj1ozwCfF49FOEFvV0NPr3KWQ09o99uvc7ADz0htbo9M6xovWtrw707S8c9
                      BfrHvTJht72RCr09ircdvWg/Vbzdw8o99r1bPUhJ3LyL7p+9Yi2Qvdg6vrwfkYw90zuKPdiKnb2S
                      po29smUOPTAhCb2FYIg99cigvTu2tb3lV5S9Oh8jPb6jgb0zjkG9vZi6vSCb+rzzfo09wKoZvKCE
                      57xZ56k9x7u1vRo7G71Q08g7htpIPW57Vz16qEs9iuQVPWeqWL1Xrrg9QTiBPagzFTzUiYC8zl8z
                      PQzOtTyCXHw9KI8UPP1+wz1MpBO9ujECPUrBcz0Vgau9p9yjPXXpgz2Lq8W91wy/PSCHRL0Jqq49
                      gRunPQA6gjn6sMC9GYu6Pf3UyL3HN4k9I9BPvQNgrT3zLjS9WPNVPKNijr2wcx69OAXGvfmroD2L
                      1bO9ABKYOsMFWr3Y7qG8jTRrvRadBb1JD789GG5/PCTv0jyg7u47In5QPYOiNL3Y9oG8ZRSqvYDy
                      KjzmX1A9f0bMvdDS3Ls6gJ69yQmzPf3edr0Q6gO8ibPGPbudqL0oLRi8l1F6vQbDlr0uHx894ASC
                      O/rEdL2XjsY9ah5vPesxqL1gZFa7qb+LPaK2sr0JYLE9aJjAvDDkYrxDrTW9eNmkvcCyl70Vp8w9
                      qOiWPIBA87oY4h488rVjPaeld72zZbS9lrd0PaKcEj2YhE48U1mavZ1rHb0a3HI99ZuFPTkutz3C
                      d4m9B1uNPfTq5bzaVVI9EL1WvURX/zwHbaQ9jLTDPFAuMDyAHRW6oPSoO/6Zm71yam89uEKavCxZ
                      GL3oBLG9wRmwPY7PaD2djx+9MPXKvaa+Mz0V5Yk9MoxOPU/+xb3gFbO7pXyYPcefwj3Uhe28B6G5
                      vdADyL3o9hw8oAUUOxYzZj1MrQq9QMG4vNjXYjwAFDk8kGqsvSpeBz2gzas7Xq8wPUBDFjt85Qm9
                      OTugPcABILxAsci8WMREPIC+9zpwzls82NqFPIK5Wj0oz7E8ztxpPaxQoDw9yH+9QHdzOxFgxT36
                      sWs9va6aPT2GV72sjvc85rwOPR7EZj3hL8I9jTKavZKJEj0o5BC8Nv9jPepEvL2g/mI7bXSJPXIf
                      vb3Cs3I9OHS+PFBOvrv+/wk98b/APeAZAr1Q+9K7Eu1iPVg5q72MZYG8cFxYPGf4lz1TaiG9Gz+Q
                      vfG4wz3IH4y8IGbGvH/rr71nwLy9hArTPO0zIL3BgZ09Sm0evcDuojzIt7k8SHuGvfqvZj0zKaY9
                      AHMkvYDEhDsA1b85UHjKu9qks73Kr4m9IAexvNSRiLwACFu6570fvTOwZr20g6U8P6uGPYJNoL24
                      nr29ACXWvNACP7zYC7i85kmAvVQPxDxMqLa8mhQbPeAScL1YpLw82hxdPQduXL2PZbE96Y+3PZJx
                      rr2bho89nc+xvagebTySAjA9gOY8PL2oQL2qYEU9DK4PvWXEpz1LwLa9iI3uvE2zYb22NJa9MOsh
                      PChyyTw2ASc9GsFBPT2Aub1wYxC9RALTPEsTur3AIYk80WrHPTGzsj1Z7ck9XQp5vWjPyr3XFr69
                      zUKiPYuOnr0tYKk92ugsPTDmPrz4KLo8SX6GPZhqhL3RRIM9/bg5vf1ql72iKlw9R2VdvXDhezzU
                      ccO8h0SZPdLym70ak0s9IrWfvVvLsD1IFsy8lD7LvJIEbz0Ac8870OcJvGKfbT2uMUw9sFuAvXMx
                      Xb2Crgs9p69avdSY+bypUos9PttWPX4dmr0aPTS9sHTUO7CKXDzATDU8jN+SvPBfIzwwZXw8euln
                      vXXwoD3glr089EkWvYufsL1UXY48gZOWPcZSD72yPMq9T+++PYqcRr1tKSu9GOuJvQt7mL3mhge9
                      d61Avfwf9zwwak+8ExTBvcl7uT3kYAy97nMoPSXnhz13lZw9kVK4PaKeeD0Yrca8sy+4PRKsqL1O
                      c209+IncvAR34zzAgJI6toanvWCdpLuoM9O8/gA5PdSGhjwVBK09FjwmPfBIJDyWeGM9gLvivABN
                      jr0ZYLg9othAPWqxWb1gohg7nUOWvQSE8zwyVDU9QBa8vMD6Rb2Jmok9eBKrvaCdersr08Q9IFm7
                      PBMWv714Gua8Y7/GPTqRi71hCJA9APDGvXDMg71pdJg9bCkKvcADY70VcKG9UfO4PcsUwr3QpFC9
                      eArQvACsvrrAujM7cAsyvU6RBz1WYyg9wbyvPY8ut70e+XU9PYd9vS4ITz1HPDG9M5Y6vbDnpLtA
                      X7+6AlMyPROPwr3idrS9E6zCvVG0sj3j72W9vUOhvcTS1jx177k99rUAPZSy4Lyif4S9COSTvXmQ
                      xj1qBhk9stsMPRTd4zx0xRO9uPqAvfDmYzyeeBk957+2PdTgn7yoVW+8adC8PXR+2zxlncS9l3Mi
                      vTJxZT3wBiy9LlGcvYC1ATptCYa92BMrPEVck720Mq686Ka4veqWV71zr8u9YolpPbJ1fj2ZHbQ9
                      10u1vSMrmb29QiG9nSSSPb7Og727SLO9YEF5u8ZzKD2wl3e9Tnl+PbDpSL0jXqU9QBNfvLLlAz22
                      RxE9qBADPBSPDb3mowI9+02pvQDUvjzcmIe9B4STPfLwPD1i0Xs9cBurvXqUvr3VpLE9sAouvFNZ
                      nL0z4sE9jZVjvYbnCb1IuJm9YCTSu7OOYr0dtMo9AE3QO6PCf736aV49t46nPapWET3o5J+9Onc8
                      veuanD31zrE9YCMFO70zVL35+oY9qi4QPTbUOj1dd4K98l6+vUDKh73sgsC8wFE8O7Cclb0CNT89
                      qPmkPPAmPrxNTlK9356+PZpIzL0KBGE9H+mCPWBG/7zSkYq9g+dovYbjUT3cw9U8A7qMPSqCo733
                      JL89YHVWu8CWELxegFQ9h2u2PVJfMT2wbZq9o/yyPR4HPD2x+aY9A6iIPZ3KU73Up708jJ0OvVdW
                      Zr2gMk69tc2QPaCjT7vrwqw9GBP0vEAE6LwNWqw9ZcjBPZl2wD2WvqW9YDSRvWIeID2RIok9yjpb
                      vU5zPD0YcMu85g2FvYDQQjyYrsg8U5KwPXMpS72Sl1g91k5YPRIyvr1PhJE9lJqfPOqwkb10Qd+8
                      WJksvLC83Du3f8K9sfGzPX6Vor2GUl89iaqvPUccmz2oodq8lJz6PBD0d72YM7C9VWSuPb0Rxr0g
                      O6k8xgVkPR6jSD0AZda5mQ62Pc6HCD1QIDi8YlNVPWaCFr0pncA9Njh+PR7Bjb2UXPO8qwmmvbQF
                      hzyH96I92qIBvfD5P7yAxt+6aBukPAo4Tj130Yc96IjqvE/wqz21TLq9iqwTPaRr/DxYuZy83fUq
                      vT03lb3y9RE9e5SnPWDygDuoXlQ8Y+KjvTZFor0lKrM9RZCXvXokNz3mAFU9F4o6vRhxrTxz4pC9
                      KIuUvQckLr0jd3W9dvoXvSg0HLyAxb47K/mCPcAGV7t9MMA9+OmwvbMrmT1Dfqw902dGvR0rRr36
                      NV+9s5TLvTDlhDsUmfU8IN6HPL7rJD1wW3M88rJDPcmSlz1T4Je9taLEPXY0Kz1WKmc9GnaQvdKa
                      az1gFb68tBecPOBOsTxGqE09ANRduhjEZTyF3aS9pW++PdJBWD3Ig5+8gB2QuqI/QT2AIao6pEnv
                      POOglT3RCo09XVsfvW2nmz3ADzK9F8GDPQDO6Lvl08q9IPefvJSuFb2QVA68no42PUvuwz2MPKw8
                      SUSXPev6ob0l3su9yG/NvPvJjb20/Aa9IDYDveFmvD2/57E956abPV0Sq71CMzY90A6lO2N4Pb36
                      vpq9IF3Tu3O/ZL3KEko9IO/iux0eLb3QvIe7MBZjvKA8Y7uY/Vw8ULYuvEJyTD0f+YU9ZKTWPKsM
                      pL17bLk9camqPU0gmz2La7C9AOUfu22vM73DPsq9Z2a/vbrvQr2KTBM9K3SsPXfcsj1rBbk9kVaE
                      PUBKZ7zETek835vEPXDZLb0vLMy9gNgGverHZT1oW4a8Jm8/PRfygz1WOzA9fGXiPNMSzD1U2hS9
                      zuBaPf7UXj2n/n+9U/WdPUDf2zqyMB89E5+CPaCt3DuRrZU9T8nKvdLgIj3ebG09UA1WPHryV72d
                      f7E9kQavPViPgTz9Kbu9QBnUvHUPyr3r7qI9/FUKvfhB27wSyp691SKYPbSV0Lx0VA698q07PWpY
                      QT0tu2299aSCPaADrjtzDj29ii4iPbVfkr2AuhY6pjxqPRwRgb2RCKY98kBhPfKtRz10CxC9ytUG
                      PS25lD2ji5A9RfuWPa4Jqb3O3pO92uZwPYwAiTzFx6W96b25PSNgyT3Gc149tkuOvSdAZb0lsYy9
                      sBMgvKBQjrszY6U942MhvTDQNjwgyu68YIrxO0lXmT0SNW49wXK/PaOdiT0A2b68vfK2PUBqV73t
                      /D29cs5BPc31lT26nmi9o9rHPUFdwD1ilqq9+8+OPTCyyb2ASLU8ubC/PQxf+LyfsMy9AMPXu1yc
                      +jx+FAs94sqQvRRbg70D7cU9vxqxPbQq0bzwmTY8OYu6PcrcTb3oEP689y7JPeClsDurN6y9qC6h
                      vaB5C7sdXFi9MMc5POoCYD3YLda810Y4veAMyTyIbYu9oOqxvAAV9zkyEMO9jcK+PejH47wjIKE9
                      9vcZPeAqyb3AzHc8aJv9vI0vTb1GHKW9aZTIPRfmSb3V1Iu9MfezPfrMer1QQwY8ZroRvdLsWz1r
                      AMI90ulLPdgCsb0HvKk9YV+bPR0nmT03PLQ9YC0Au7Tu5jzCzJ29lng2PTBk9rtRr8k9YBqHPEDg
                      STsUyO+8EIbIvYupiD3skN68ElxbPdD92Ltsf968282ZvdBBhDuYmEG8gBkTvYDsCLwYf6M8Q/GM
                      PVFJsj1WfAG9HkqYvd46aT0M0KA8L/3DvSjZqr2oBMk8VrOKvZDzGLwxsIM9Q4JovVbLjb0lQJq9
                      jvANPXQT57xv5sY9S0mgPcy+57zoqBa883SuvX1wqj0AlG27Qs92PZp/Cr1077Q8qLa9PCjRpb0w
                      Em+8cpE6PRO6s7371aE9x6GPPQTm8zwvPpU9b0y2vbALQ71ggJu70AsQvaW4nD1GmRm92D6YPHdX
                      yL2QPUW8kiI0PTajoL1Q7Mm9jVGXPSLVcj27hbG9Wv/IvdSVxLxjNpK9iMeCvU+wtr0Uhw29EDIG
                      vXR8t7zPYcI9yscWPZMZpL0YYXE8QA0YvPOcN71g3uG8SY3GPUCoJju3Rkm9or1rPVacor0cPAm9
                      gb2SPSSb4Dxdwbw96gpFPRh/t72LCLU9UjNzPT4VVz0QKWO8nT+/vbOmqD1gBYi7xdORPYpkE73D
                      BmO91kYOPdOZzL1qSVS9QIk+u0eML72opt68sFPPO2hzvL37wI69CRChPYBtrroUXvO8Aig5PY3q
                      nD2rLbe90u1/PQpkZj0w1kK9M+J9veGduT1eE389jXtJvcprhb0AWzW6njxVPaCFbTttOZ89FbuM
                      vUk2sj3+Enk9w4JqvblqxT0ABik8NXeNPXYVHD3wMQ+9mF48vAxgoryGl2M9kCcVPI7cIj0Fl5m9
                      KNj7vBBQH7w1lqg9S82svfA+DryeBqW9UUmBPWgpM7zYXHK8N8UfvRa3WT2ScZS976K7vW1tNb2k
                      r+08ODWdvXqSLL0frLM90amSPdBmBbzAd5e8bcAvvSbYir0SXUs9Y3aZvaLjGD1nzcU9fXhQvbrn
                      r72vmoE9gLqfOwBs9bgUdPg8ABwGOXZIGT2Ds7s9qkGxvWeGpz22+iE9eh09vXG+vD2k/908eGSW
                      vG6oYz0ww1k83daLPVMSqj0G7w69hfCnvZqPsb2DMWS9dvkGvWhVezzAUw29daesvcNFZL2+B1U9
                      qCiRvBC3kb3SUUI9yEbJvWyd4TyGYQq9wPRIvPr3bL3XrsI90DEMPMp7uL1hdI89DauvvQDlU7r4
                      +/K8SF6uvQx8Ar16DHw9XUFqvcCgyDwQgnA8du0IvRoqZr24rKq8wm4VPWDkibxpncE9ERqqPUqN
                      NL2mZoe9iEmIPPKBQj2Ntqq9QMvNuqdQkj1YzeW8ha6XvbBc7buCD629jwjAPVB+qb1jAXe9YokY
                      PXdpVL1GPiM9k3OEPbJst71rf7o97QiPPUYFcz0/5609xTWovZ1gHL2ABG68APumPNDeJr3gv8S9
                      qP/YvPtOxT365mw9fkQJPXwwgL0JXrg9KfaZPaETzD2VD6A9wAgFvBKRFT1HMDO9fMT2PHo5Sj1z
                      lS+9Th+EvT+2oj0AtBw7RMrzPAoXDD3grZw7EySMPTjYl7xSzVQ9rGf+PHuQpj10G8A82MKDPKcT
                      fr0xDb89nhesvbKYor0bnMy9AMMCu2BSVDstw3q9Heo4vaxYyDwjCSu9tpJAPSlsyD1g2vM7AqIK
                      PSukpj18H+A88EETPHJESz3x97k9HpE8PeFdnj3ADVS9dzKmPZtskz2f2449aDWQvGhwhzzoVwa8
                      ANEfu6mrpD2gn867UHRpvAMpgD05W5E9oAYEO5RBirxQtFg8AoPHvXV+oD02y349NGmBvNBN/rv6
                      JVs9fHiFvddthj2AGjG86uMEvfGYvD2rmbO9oGe6PHMwSr0rEri9NDL4PAKKg700moy9R8DCPVgZ
                      BrxAhb+8FDz2vJa9Wj2orO68QeW4PQmElz17ipy9wH6Nulqzfb3qSR+9YD2luyAXyLtXvMG9ElEl
                      Pf22Zr3Q/nc8Ivp/PUCcWLvd+qY9WDnXvFqvrL2AKAa9V0+CPaF6kj2gQAq9Sl9WvT3hc71yfr29
                      bPMLvTCzOr1E/s88GH1avIoHXT3o2wG8WLSvvLCUdb1AIlA71hw0PUKuSj1tl1G9alsqPS4hPz09
                      9bo9YE0Lu0BwGzzVurC9UFpyvLTn1rzNfzG9YSOpPRBUfrxCs5S9AACMOxbpYT09wKu9jMjHvMnp
                      vz2aYB09/7qzPZ2lSr2EGM48pj4NPdsQlT0eT4a9ngaZvcxp0rwAP6C9uCG/vZiLpLw0sP68Sk1v
                      vf3Yoz2p7pk9InpWPco8IL2A/Uq625XEPUCarjzM3bC88djLPfT5nzyzP1694GzBu1EotD0gQ8I8
                      BOsIvZL3PD0tAcU9kyK3PcopAD1SmK69dslvPQfmGb32CGM9YpZKPaC5dL0yBB89ALwCO0B5rzqT
                      Uo29hb2aPRS4+DyMVYO8QyC6PYddNb0ylT09KuFAPT21kD0SbpW9wOKLvZplNz2QZE88ZfuyvaAK
                      xL1svIY86PRRvCzN6ry0yLI8NbWFvSjzDTxTZh69w5RjvRvEu72pxKY9xHPQPCcWYb0m63g9x/bC
                      Pb62Vj1yyXU9EEshvKJlHj2CJW89waWbPcya87wWwz09lxWPPZoEJz1I+I28rGPovJagnb39rrC9
                      YLR6u1psBL3tF7Y9Tu+Fvfqoab1cGuU8k81NvUN1hj1nHLE94A2nPLRa0zxuk189VLKGPOAWhLz8
                      94K9kKpTva9dur2AYoY8L/LFPTIbej3IprO8I89tvTQH4rwANkO52IVVvIlWzD0tkoE9hrZdPT0i
                      qT3zE7m9Yw2oPRCiTL0pDIQ9NkA2PSw78jyzGJm9GqQnPWMNtz3zJky9AmFQPZ1ApT0V8Js9AF9c
                      O6rcIL0g27q9QjqCvQg+zL3aCMa9oi0FPTKkMT0oMJ69hvefvcBkCTy+mJq9bLm3PCwZmTw0ptY8
                      dEf6vOfElT1zJYs9AO6JvY5wDj2C6X49X3alPe22bL1ATVO9S3HMve5GFj0AAOO6UlRUPcL4OT1Q
                      yCO9ONjsvKv5rL34qt68omuVvbbhmL1yZGI9mY6/PVPtrL3MLfO8zsU1PWRZFr0dKsG9UEliPEA4
                      yL3NGLO98B5lPP6uLz2YPmc8N6TAvWBBy7ztjYW9qkGzve26IL1oQi68gNQUPECjpL3MnO88p5Ga
                      PT6BRj341/y8R2+7vQkUij0Czqq9APqIu1jB3bxuZxQ9QE+GvXZlUz2ZNcU9zROAvaqeBT3Qnl08
                      W7+8vWPcIL3hT6c9o1MivZ1qjD1Im+K8AJ8Zu2Br77tdksK9IyvCvQejNb22bQa9sFSjO9RtkLwE
                      O/k82IiVvFh/OjziPj89NC/vPIvIiT3IiKq9DiscPYnxjT0GLJO9wpUQPblVkz3oJiA8mbe7PX+a
                      vb2tzq699iSovZM0Ub30E/A8OECmvFCEdL1ojDk8vXWWvRRr9jzAVry6orw4PXCRMLwIAbE8wSKI
                      PVAKZr3ij5a9sLSYvQJdBz1G8Fk9xDXbPBnZrj3e8EU9pVfFPSk4sD0cJAO9qZG3PbADYDxgw8q8
                      UhRUPaB6d72mUW49YGLavIqQEb1BNYI9FRqrPQrHkr0S/1U9ynosPQeUxj0KqA09rk1xPV3EiT0y
                      Gls9k7qsPXKlVD1Yu7q8bE8VvQrqEb3Qx0G9TFmZvECfT7sKRbm9XaPLPZillL1YVDU8VliFvW3v
                      wT1n4Se9aFomPOmTtj0EGNE8B+6UPYAtZzrN0Ge9LRCivZMCar0JLMQ9gIlEvdR46LzscIc8apN/
                      vTeyiT103+k8YBdoOzBQhr1yVnU94JeivRt9qD2APDk84jqZvUrWq73YZ1m8ZmGfvbDff73zfso9
                      oh+5vYAV7LtwjLm9mKTEPPpqfb3AMIM6YGyLu9B1Erzhw5Q9yjmgvahvaLyud3s9mHoevHOHaL2t
                      pZq9Wxa1vSMUZ71F6q096MJkvAAt6zms/4C9AJdOvJKMCD3Fl7Q9cjy4vZuKq73YZgs8iVipPcCm
                      U73QkAy9RLfWPOwJE710osc8KCWCPDpODj0AywK9JEPRPOiHqL3JHK49JzJ5vVePY71mqRS9AKYl
                      O/hyoL1XVa+9QsFzPQQx2TwoTMU8YFDxvKAOy71g2Ge73iJbPbcBt71Qgzg8k0NAveL9Cj0gJrS8
                      E5hMvbI0wr111Z29y0a2vQcqiT3BULU9QDAZO+jlKzzuGEo92vAxvVfxUL0wWbk7JMX7PACVGr0K
                      oU298nmJvaAcvLxMMd48Qm98PbA+Xr0E1v88lvYMvcNzMb1JMZs9ItR4PfuMkz2MM8m84H1ivch+
                      uTxV6pY9tRyJvcp0Wb3t2q09py9MvWstmD3uuGw9GuxQPTP6Nb0Ztos9bgUkPX12tT00Pei8tY2y
                      vWqWeL2gkHW94MXDu4D+VTrDuL69rcStvYCUSTw084q80JUOvYDEHLwTZFK946FIveg6zbwAWFu6
                      YGPAOzuTq70AQKi8UBz0O4r/Jz2KeQi96xmiPTTugL3qjhs9ANWcvG1KZr0v3Z09Yx42vX/wtD1y
                      8EE9hZLIPYd+Pr3t3bE9zPHRPEpJJ70lZLe9mpSmveK5Mj3UF6a8wlhnPTyLFr1amKO9KICQPPKa
                      Az1RZL094sSTvf0Tu73fjpk90w/MvUBsR7wHJrG9c4mNPTAuTbztA0q9aQvMPRDYMzyUerE8R7si
                      vepxKD0AX7q9UHu8u8ZEOz3dUJS9RYGdPVDVnzunB5Q9G5qNPYygAb2AIy69XH3mPLVvkL1g5nG9
                      jIDiPMyOgL3yjKK9DFuDvHK7AD1JfYc9K2mSvVCHCryXpmO9TlRGPULafz31C8s9+R2KPRxih71g
                      RjG782vGveCmj7wgJ7M7NGbdvJsLrD1MlvC8oM4Fu6prGb1aNm49jSyRvRhZSzz+bxc90IZcvVSu
                      3zwZ47o9qhGrvQCn6bvSkK69lGvnvHB5LbyKFHS9mSaxPeZiBb2hGKU9BGvbPPTYwzwAxza92NPA
                      vevsvb0yyUg9QLtJvGDkkr0O2ks9DFAHvYL9Zj3Q5re7wNVpu6KhKT2unhc94mwXPU+tqD0lzMe9
                      qRPKPegs9LzMN8+8aZOwPWZSAj3dqLW9at9OveoiCL0YVWG8rnlCPUBNSLwdY8Y9urJcvUwb8bxi
                      SGs9kNO7veKWJj3R+bM95kGKvStljT3SG7S9Fo2rvTu8kb3A3kg74Hu/vfctHb1TflW9wyZQvUhU
                      0rxvY4s9ioHKvWAo5Tsq0Ia9l69nvcZaF71DtcS9+WuwPZUdib3ruJU9M+56vcoRj70ArBe7qKir
                      PHpiVD1A4gu9vkYbPdDjEjxAThy9/YJovdrrrr1Snxo9AOCGNwA5KrtOyTM9B5rMvZDJT7ycAAK9
                      AISCPBEIhT0pkoI9FxSEPYUesT1a4Gc9GAHLvQVimb3bxJm9auN9PbqdCT1o2X+8mJIovCDb2bxA
                      wKS9c9BavXNUtT1asls9OG2SvdQcxrw+XEI9BlhPPQITGT24+ai9IDMTvUo0b72CjyM9xi4ZvUOf
                      uL2OIUg9KLq+PM1Qc72V6649iO/CvZCPrr0YgGI8dwvHPYCr5zquhpu9y5uXPXQLqLzEZds8ecTL
                      PWcKe73YO/G8I3CPPRMpXb1Pgoo9kDUdvErkRT1MA928/CMIvcreND2QUGW9EKBHvWNLsT2jQLU9
                      kXGSPUD2Nr3inTE9xqA8PTTnuDwdm3W9bZLIPYaTF736o7S9OHrCPAGerz10cZW8gbqQPWDvfL0S
                      XW09GotovZqcNz0oJCw8kpc1PTB3XTyniT69MoAYPcthlz0adw+9HXaIPWEyoD3yTAc9rnd5PZq/
                      fz1b3aG999SCPSMNIb3Yeoi9/duSPSjWg7wd+Ko9O/OQvc6+Yz0zF4s9Q+7DvVusq70QG8e9Rpsh
                      PcJRDz1gF6g8qduhPUnGtD1gqXW93WShPSayjr2kxPY8QPELvAMDVL3CObS9gKKdvfGvvT2KKjk9
                      9lhgPeCHojwJZZA9BNHsPLcCwD3mL2c9QO7HvWhmvTyL2Ic996RPvYb0DL3Xopk9sNtovXLbFT1w
                      3Im9mPLsvAjrkL0TT5Y9GCWVPCiFZrxbTaQ9qjI7vUAvTr19c5y9fRyHPUVYqz0o8be8qPzuvKct
                      Y71c6YK9vTyrPcxikTwQbmO99w2+PX4iiL3Y6mQ8Vx7HPWr6Qz1uWkA9gDMYPPY1kL073q69rA/v
                      vKiPKjyzGVG9VPKfvIgMxjyEp/M8TkIgPQD4wDq9ToA90DY/PJDZFLzK9pu97NaDvFqHIr1250M9
                      rQkevRhEALwYW/K8k76vPcoZdT2zb5e9wJCzvZXgr72je7I9GKDgvNEwgT0d0lG9BAsTvcCFjL3A
                      08+81Vq7PdsikT2WUwm9lDnCvHtihT2LL5m9PqCNvbBnrrtqX5q9xu9rPe3Dcb0ojYY8ojhhPdUy
                      hr1MExK94A+TPBnaxz2byMi9m720PeJlOz2iTkU9xp1ZPZDqKzyBzbY9/IoCvUD9mTo3pzu9tYCV
                      vUxQ0TxwVTK8BAnSPIrsxr30iPu8WuIivWv4rr2Qoxq9AGaVvAxx5rwo9JK9RDj8PDRSsrznrB+9
                      TBWcvAya/jwIZKw8sF2lOyAr1TvQ28G7wEx4vM6DZD2wdVi8KoYPPZQg6jyw4se7AokuPUChErxA
                      diO9/FYYvVuTkb2hGIk9liGrvXI+DT25W7Q9AGdgO3LGXj2XCTG9YCbXu0cFx71CBw89pPPpPMoh
                      i71Qrsi75QeNPZr8J70GSQq9gLfMPM7fAj1t/n69d79GvfCFajxwjSw8eKrzvCiNXbzQNJK9CIG3
                      vZTOkLxgVPO8gLuQvFCrxLvlAJC9WGiUvNhKPjzrS7U9useHvetezL19OFW9osY0PeB8q7veDRI9
                      p9yzPQ77TD2CvLG9Y4WlPbY1ob1NfR69yJLfvBXsxD0KnEG9o8qvPXE6iT3T7y+9aQDBPSK7JD3d
                      h7A9Gse2vZSA5rxOA1k9yHrIvGgXpLxtGT29g/wwvep2lL2o5jq8bntwPYqvbT3FDJk9M3p5vfDr
                      Q71p1Mo9Js9CPeqzGT1yhS49gso1Pao7ur0Kx7K94aKaPZ3TvL3gBZm8XlExPWqjRj0gpI27FuEq
                      PWvFpj18Rdk8esxaPQK6Zz0A3Z88x6iSPUcyfr1gc8w8cg48PaUWn72HJ2+9S0XEPTc7Wb0ysXQ9
                      nkd6PWn7kT3Lu6w9CH2BvMUujD1QNJY7gI+CPMhVrjyGfJi9Mo1tPVA+mjsk4vc8+3zKvXHGwj1Q
                      anG8A7SVPQJiHD0m8ms9VqqGvehi/7zQcTI8pzwuvbCRETxVU6C96zjJveAikTwFjo09M6Ynvek0
                      iD3lio49p6KbPUO3f734Xsa9nQyHPSyzD721lbo9AAgcvY7IBz36EaK9RhgTveYrVT2jncY9AFCc
                      t5sVxz2Kr3y9hLDTPFirmjzA/w27EgygvUp4Ij2g4ui78va9vWDBq7sqyb298LAgvYL/GD2QN5+9
                      zHSHvczW6Dwwg2O9EjkJPWOFK70BrrQ9/XiFPQI+q704XvS8JBzTPCugsD1qAxc9DmNYPUpuLT0G
                      sBe94MCtPBBfnr2Z77o9cYXIPQDsFbuBwIA9IDiBu4CB0Ltwmxy8yptTPf1kwL0rOqo93tZpPWjm
                      VLx1IaO9hBP2PBdKIb1uPgU9eo89PWxC/jx0RQi966WwvTbCQj0ODSM9Q0EovR0HlL2XOLs93Pjv
                      PCZNYz1C5yk9dJ2ZvECNrzq0Oqo8L0ylPTGBsz2DFz+9qjJNveKiOj2M3YS9jX+hvZDoWLxkavw8
                      MJhuPAx5gTwcjPY8wE0vvNCnOTxY6nG8GOtwvAAw2jlUA4K9AGD/OBZIUj1htMc9g6eZvWdbnT1s
                      BZc8VihWPSKQNz3QOmk8jF2PPC3wh727I5+9Zq1ePeCLqzz+P3s9bcS5vVjrojxyG3A9wtMcPZBU
                      QDzo54i8zJ3iPJGrtj33+WG9fMgHvVC2Vrxywqi9LIaIPFpuaD1ozd280D9gPKAhfrvWAgg9gHOS
                      O/ZPIj2YNeW8wI5PO4yC4Dw9wbw9S+e7vW3Wn70E9vQ80DVgvOaeWD0bI669u2mhvemanz2xJoQ9
                      yJiDvPqzCr1S4HE9DIESvUJEi70wErC7sULJPVF2uz2NmHC9YSC1PYUUmr3XHpQ9MqVoPXcGR711
                      Dbk9NNiWvGLyND2Zdr09ynRjvRH3sT38ixi9Hc/CPQJ2JT0YXVW8GJ2wPLtnlL0wDyS8x5povfOC
                      rD3Mtqe8b+rJPf7lCj0wkQO9uuFxvX8Iyz13H7y9kgRiPV+ngT1WCKK9sIFAvV/gtT2A4iu8RdeE
                      PUpPUr0Yajy8Wi9sPRgJOrxCnE89frVIPSonEb2bI4Y9nQhuvYY/Iz3oIO+8o6E7vZAnDjyHq0q9
                      kV6lPax8gbwNWbY9XPf6PAAU3TsW8RG9zQqCPUCiVrvEewC9sPKwu4JnUT3zN369WIY3vE2lzD0C
                      4Jq90HaTu/gerTzn6B2901Rsvabog72Qqk69GnrAvWDmrr0w1xU8EGcKvQaBmb1w5T084nZyPY2B
                      wD2UXA69FNy5vN9qvT3go5A8LKuBvNAHEzyWawm9n4WhPQiKp7wAhU88N5ebPcD+6rrshIm8ZQjI
                      PcyB2LwAxbs5MPVYvWaxDb3JtIg9uKOTvYA6u7oYKR08yICEvQAPE7yKjEk9hc7KvWq7Mz2gbDk7
                      CpRCvULFor1CHAY9JmEXvVqlQb3oZuC8XYmkPYCxGDqARNk7Usp4PRNVpD2XN3m9hpF0PQKKHz2C
                      pz49ciViPVCJxTuJeMo9N65BvWzY07w15Zy929mWPQDLbr0eMZG9APhtO7PXQb0gp5k7nQvJPddC
                      Tb1WPm89tJ2tPIo4X70ALDK9W4jAPQeHxD20E7i8Jo4WvXUmwb06y289MOhxPJgMjbzl0Lw9SBKG
                      vBdmG70ClE89rNS4vHOhH71Z9pA9kBlrPGN8RL2jwMQ90W6gPehtkL3IKpu8rQsevTIcMD3BxKM9
                      6uS6vRuqoT36l2k9plhpPYu/xr1fjoE9VOi9PIpOjL1ABGI7o057vWcjpT3oyW08aUPKPXifu7xM
                      iu68sJisu8BUhb3/VZE9asxsPY4sOj0Lg7k9eH2CvFBsHDwnk0u9LL2sPAoTJ700mZ88+T3HPYCP
                      qDoplbo9JV6fPbOsPr01BYu98CZovXOKIr2QjRy9cGsnPEy55zwXTW+99IbnvGFUsz1+bIe939qt
                      vQBJ5jtal1S9cO+vvQCZ37v+z1o95VqIvb6ahL1b/L+9QK9TvADZObyAnPu8Uo+zveqvE72j/1G9
                      WDkePJEYwD09aEW9FK2HPHDkN73g44q7AKrwO3RDjTygA5W7Ms4gPVPMhT2S8jc9lkQqPcD2A72Y
                      B7E8aoBgPe5cOz39Bx+9pHLUPKgsMryzTkW9MCYSvePJab3c1d88bUHGPSDHqbzxZpM9IP2XPPF5
                      ij0XzZY9x10gvYDKxTyUvc+8Mg1jPUBaGLvCJxk9AF9wPOieO7xoBnM8oqJbPSCwuDsAnoc68s0I
                      PfbGm70AyIU5OgtdvYEXvz1Un9g8AE+/vH2gpT23o2u9AOteuqtfiT3YFvG8StZmPayVhr3Y93G8
                      JcLEvbj9k7xMING8NaKaPVQ/njxyvhs9AD0fu8ppLr1kLeU8m0Gevc0dTb3MdN08cbiVPSaAPD3Q
                      wj29HY6OPVBTJbwIrZK94KPXO/hjrjwmfHM9K4qYPbAksjsANK+4+hdfvaI1tb2qZjS9bUSIPUCG
                      fr2nKLe97/nAvXeaKr09iUm9B0I/vTsPkb2+x3Q9nSauvTURxz2UOMM8LHHhPL3op70Ahw462Fot
                      PDr+wL2YqwC85bOXPYJ+UT04R/G8ccWSPSE8mD2uFkI9b7+7PSr1Lb0wQsc7uIacPFT58TwuP4m9
                      QA2fvFLhNT0+gjw9Mj8qPZqfWj3HoS29mGhRPIxoy7zg+sm9YA2rvbOjrT2aCG89IFu/vAjnqbzA
                      dAw7vUhkvXSRxTxd4YE9jkw9PWkmqj0aQl09QPZWO4JFAD2GA5i9qolTPQ/onj3j2ra9rw2ZPXLl
                      sL2KkLG9oHzFO12IsL18rdU8NDuXvDE0hT26RMq9+FHxvDAxzL26KY29AETgO/5zPj3CUqS9Gxar
                      PYMELr1o7Km8yFaWvP/Tyj3wvA69qsBsPeVShb2swp88gzjFvXNNLb31/qy90xewPTuyo704LcA8
                      PUunPYznvjzHVGO9KP6bPKh6Zrz56MY9xm49Pez7vzxgKf28PfO8PQBGjryOsQ89J9BMvVJ9iL2c
                      NAO9KMCYPLivgL1AguC8b8e+PYqsg72Du8W970eFPUiXlL0jnq29WH3yvAqbaL1Zwr09QF+SvPJu
                      LT1rwJE9TWkpvd9InD3HdMM9mt9iPWiYw70WJ2M9cGYdPNPDXr3xlcQ9mJNSPFVyjb0735a94OHc
                      O4OYvr0Muv081Rq2vS2ec72SFAE9WFzpvNkenj1WhT49AOrru3AqK7xaQRU9dC8PvfQgibyA2FU8
                      MV6LPYCbcbwqBkq9IwOkvXEZrT0SvAc9yxfKvVgB2bz+nW89ACV2vcQQ8jzRFbE9A0/JvRXFtr1B
                      pZ89gM0NuglEvT1ZAI49unghPYP0Qb1QmI+78M5UPAnflj10cdY8gJ12vFhEEjwwmD+8xiZHPW6z
                      Tz3So109aCOpvCCwpjswSEA8cO12vNBAvrsYW5K8AB7RO9NwtD2v+bG9QG/HOrKRnL3FJKs9ivx8
                      PVCPOLzJ5b09+u8yvQEVnz1AjyA78JwvvJyv4zzHpWm9952CPa+ctT0SHho9mP+KvB4dRj2t+be9
                      mMKVvXUnib0a9g692HUkvDNWyb2Ufwe9wD5KO1rVMz3g8ce7ersqPWyFlLyYRRE82m1NvW0wPr3y
                      fC09VjYtPftUgT2EKuM8Ho5BPaj1vb31las9zHvevMCvBDuCxjg9jV02vQn1xD103t087fCbPYHB
                      lz09GCm9hZrHvXS72bwhJcs9MId+PGf8rb3AfVs8mtAoPQAGl730TYE8OrNtPTj+lrzQxB29wqtl
                      PXQT/Lzynoa9sdORPRKvPD1g+ha7ur+zvdLufT1Apkg7lGjQPLRA2byoezq8oxrCvbU9wD0QZQS8
                      UK/dO/V6nD26DWa9FGoPvaa6ND1VxMe9gtFlPcc/Zr0owLu9kgmGvbxv6DxZGo89reBVvUX9hD3V
                      9a+9jfCvPUM6Jr2wOxS8GiQ7PXjQhDxgIB69l2y6PdeFrb2rAY698kBDPWxFp7y4PMA8DIqSPErE
                      QT1YPbI8dGqLPGeyb70Ggls9tLajvBGNnT0wPSE8YLUjvV2LMb04o6W9AIygvDQjjLzNMpU9oPrr
                      u6MdsD0wsTc8TlojPTCDfzxg0fw7mc2OPcCNA70Feq+9msS2vYBScTq+dIO9SqFiPfGKvT1qQWY9
                      7VGCveauNj1Anfu8oHlRu6BamLvZuJw9YSGzPeqyMz1A1H478GJ4PCj5A7zHxz69L1SyPdMEmL39
                      8Kc9aqI/vayY17yOjRE9ANnvvM6Lj72r68o9yY2EPY7CJz1YU4S9owd+vXXvwj3K3Dm9mlEovehg
                      lLxgNX29wlNDPQADnbkqSH29Ep5APQxt+7xkGds8y9K8vVKREj0Ms+w8DIEBvaxXA726DSg9gZKV
                      PUBDCr3gQ8m8Z9e2PakRwj33o1e9R60+vaCV67ysHBG9y9SYvaONqT1bPKU9XsMYPekktD0OhVQ9
                      PWuxPXomcD2gTGm7vd15vW1MML3m6A69RpFJPSwAn7xEDeE8nBX3PE+dtD0DBYQ9L0O2PTA9eDw/
                      acy9KGrDPCLefj0230Q9/i1fPf3xuT2q7TK9gopxPQKFGj2NZLq9KksOPTdYdL3dcKy94XiKPd28
                      jj3urpy9wMo6O0Lrt70D6xu9LSJVvWgnPTyAAVo8joR7PVxo/jygOMm8kQynPQvgrT3ECds8YNB0
                      u6iTezxd2p09UNOUu/MiwD2Df5c9EPWJvRHVjT3MI6m8GRSVPXc4cL1DepE9mEWkvZ2eYb3Xv7m9
                      wGdYPKpKLz1gXRK9Q/PLvTkEhD06Mio9JIAUvVd7S71QCje9iGi5POycgDwQACI81YGJvaUUrj0V
                      e7s9paGwPdhNxr0EGeQ8Ss7KvZFEpz3C9K29FOHrPNh7tDzaqkg980hPvcXxiD1TESm9Y0+NvXPG
                      m72Ffrm9K5rBPT6dZz2EXPU8mcnMPWLeUz0Bgr89AKFkurJiAz0sVN88stmMvYAhsr2A0u+7ILeH
                      Oxt/vL0YjGC88CGNvRj4ZDytiKO9IHWvOyM0Zr3Ax029iyivvVc6Zr2WWBI91YzLvbpzCT3+szQ9
                      WXavPZvFkb13wJk92H43PKONkz3on1a8d50rvcB4WDswA4e9wKM3O2iRwL0xG589slmlvUzV0byA
                      g767gNpuupi36LzZYsQ9COaLvMDyf7wQSzc8CfS6PbMknL3s0Pg8c921PXf7G73yBA09gAlFPJod
                      ib3ID5m90MpyvAYQVT3tKKk9R9NdvbDuu71D8rU9L86+vQAHf7y2xGI9hzWzvR0zbr0TZV69CoqG
                      vZw+iL19oEy9TOEWvcLvx706sia9bD/NvHToi7xBSYc9owEhvekTpD04aJ693m8jPQAf+LuIsJQ8
                      BpIOPU0hvr1ynlE9rAyMvN2/m72galK9j/OTPV2HVL2a1j496GxYvApwA72DW5C9ldawPXjvpDwq
                      M3G9nhohPcjIwL309d28KJSGvdpZRb0A2Xu6EcTLPZ2CpD2WV3w9eb6qPXhtyr1hLo092FW9vCvZ
                      mD0cn+48oLdivahtZDwtHp49WAiqvUgEyryyXAY9vc6TPWI7rL1hDMw92X2fPWCLU7vofxi8wKia
                      OmricL3F78s9qCG+vMkYhz3pBJo9UMw2vbMJH70wx1i8W/CtvexOzryg2Ak76EmvvC6JEj1XsWi9
                      qfmQPcXrm73UwuY8TIHmPDAJZ7wS1wQ9DgESPdgJAbytci29gJiTu5QssDxAu7m9rPzHvDnqqD15
                      2Z89UKKCvej4Pzzuww49Ft4MvZijrDzNObs9AG10PA56ej2JpJo9YgEmPZRQ1rx7DqW9VC+AvLhJ
                      nb3Y93C8VDjZvBXmt72dHK89Yvs6PaAjkbsBzrw9lSiBPa9qwb3ao0S902eQPeAgwjwcbts8Abed
                      PXZFfz1iH0c9AZbDPUaCSD0+h3c9gwgyve0ExT2h1sc9QIXsvBmqlT2g04u8IotSPTBGf7z3XiS9
                      MLneuzU0lD1ovYa8nJ3sPHf7XL02SVA9lyE5vXYkbD0108I9aZCWPQpBK7144bW8GHu4velbtT1e
                      01I9Kh1PPV9GlT1ecpC9+qwhvSoOIT1g6CK90HYevaSL1zzURaA8EwwbvbgEyTzohzo8FW2sPUAe
                      RDxalyg9WaSGPU4cAD2AAXO9+quMvefXkD0whgK9BwaYPcD6OzuC/YC9UhRLPdAnP73KZC+9kut8
                      PVf2pj2NisO9f2y9PXmJyj0AFAq54dKfPUBLHLyafYS9VIfoPBAmzL2Sh2A94K3AvPIHFz0XWW69
                      OODBPBBPVzwgacK7+UjFPaXFoL2skaq8E/8qvfB3Vb36E049wI4UvNiGHzwTi3u9Uy6tvbDAML06
                      6ZG9qxm/PZ2xyb1yZKm9khS5vdDBO7zCYHE9BpEhPbreTb0S4no9KN40PNALCr0ThoQ9APtrOpa6
                      Gz01GbO96vSLvbXDiT3SDDc99u0rPeKNxb09ZiW9rF6YPDzSzTw9XZo9bk88PdPZp72EptE8wCtJ
                      u+mhrj1QKqC7NGv1vHVskb0wEj69XdaAvQD00Lwtc0u9QC05vPpUVL0AOr87yAj8vKGatD3orse9
                      zWCzPfEMjD2qeHY93S+SvYr7Mb3N1km9LG2AvdfIvj0zrri9WaeWPSNtIb136Io9mplhPfzXhr1F
                      eoa9mP6cvF/Wxr39l8S96Cc7PJAYarwKSXE9wKXCPPuNnD3DTZO92PSsPOjmJrwRfLs9UkKXveBJ
                      hr1AnBQ7wY7HPdjMIjzI4pS919C8ve0muz3N66g9bZ+gPSOZxL3S5RI9qkIbPdoyET1HYmu9JtBq
                      PZ5jpr0YbpK8klgGPcByxTpA0fu8wqE1PdjhlTwjfB69gJMWvF25qD0HTb89PWzDvWvwtr1y/Qs9
                      OziQvcnVkz2miJO9fSa2PRaibD3A0pA8S7fBPYpHGb1AjWs8uuBJvY39rj2AmOe7XPuJvahFhb2M
                      P9U8YPOkvViOtjzd4a+9eA2vvejZk7zLs7y9apRnPcpGJb0Zy6k919VDvbDBBLyAxaa7mA09PKyj
                      m7wwEoE7UA/SOzIMaD2AxpS8WmMqvccKLr070Li9GG+wvYuMuj14asq90KBOPIAPm7yT1sq9Vwe7
                      PQChQLqTB669cUCVPUQYFL2xmbc9r4LMvai0HTzNR3O9UTaLPXTdgjwd60e9oiMoPQ9ZuD2AOM07
                      zg9qPaVem72NhEq92BwbPGFFjj1efAo9wH+tPKAeNLsXhak9yWK+PVBIwju4Dac87XKOPbpiEz09
                      RiS99h0ZvTuppL3sI5S8xQO1PTiQwLzEH+Y8yUmtPUaTKz00RoC88ERyvOZCF70SMm49UD+qO7ba
                      pL2akWs9LjEjPWLaOT3Fm4K98PcdvbD8vr25WYk9ik9WPUcZdr1dhKA9bNf0PIGhlT2QVXK9E5G3
                      vR9Jsz3A8Ri9QPXZuqAc0rxggL07IfiDPey8Bb19X2W9zDCCvUrDET3ompW9Gnx3vWzR2zwY8V68
                      5oEhPf19lL2KYSC9gF1ROoW4hb0Nho892roqPe+ysr0I6rm8E0KuvbBY+Lufcog9MqcNPdJvRD1I
                      AoW9Rqd/PZ23QL0Ke5G9JwJwvSxD2jxLap+98j+9vRGquz0Xf8k99qEmPecgTb1NN4O9QEZPvU+W
                      tz340K68AMD8uDPxt73AsR67GI7NvPjqzbzjI429aOL+vKwNo7zYWYg88PCdvR2mf72AT6+9YrpB
                      PTPcN71oAay9wkBKPbWxyL3zD8G9gJlhOrBCezzb25o97UPHPa5TYz3vobu9JrOMvZMwuT2FYag9
                      9ZWIPeDxzLuA1Jq6K2W2PaC/G70h7Mc9s4Rzvb1nhL2Qbjs8W++dvayB3byNF2e9X5HAPeB5/jsq
                      awq9MHGbO0L+x71YR8u9PWu0vdIJy73o76q9QJrMPEbXXj13Yya9BrVIPf/7xD0yTKa9ABvXO4BW
                      0TtYQ0S8woodPUCZnDqb/MK94z8lvSAskr3yqks9fZCwPVKfOj0Ds2G9ARCjPYI2yL2qsnE9lXK+
                      vUJSiL2TiJ29P1eOPfA+OLw3WVa9IQijPV6nJT2gMP47SROAPeLAeT0AMFc8ht9dPUU1yj3xXJU9
                      LQKhvYwY9DwjyLo9lL/uvDGEmD2MAAS9kOBHPIAcojtgxqK7HPjnPDSlyjyQAUe9cMi3vZdhnj0t
                      45M9bKL8vKtSnz194bu9fQW6vXL+IT0ducm9ANakubpYPb3KV4e9rlumvcDRHjxgI7m8AqazvX/8
                      yj0AmG69sMO5u/gvtDxqrxK9yUuCPQIfRz2NcpO9gvlZPUkKhz2+vh89gtFxPWe6XL2+PYi9VHcO
                      vYjfgLxoEL28RPTWPODGir3qMiA9iISovJubyT3Y1IS913kpvYr5Jj0w0Da9KK+PvUBaHjzCtnE9
                      T5WXPYObqz0UBZU8kD8xPET26Tx91Lq91tMqPc/djj2CfQY9k3ypPRS517yM2b28oyOEPTYFBz0y
                      cG09dHiQvIlCpT0TNqK9mtdxvQDjHryFk4K9ci0MPejwr70+ORI9Llw6PeBgkDvD3Kw96DoAPOmd
                      wj3a2Bs9OvetvTjkjzxoXW28zF7cvNCnab31/oK9wNRkvAgf/bzVXbO9w4HDPd7SRz0Nssa9ra1O
                      vWJmVT0Zf4M9ICWqvHK2Xj2gw4O9hYeIPeA+Rr1aPnw96/6FPWAizLs42tW8MtxdPcinl71g+pe8
                      MLTCOylbtz1Yrn487H+YPPGwxz3lXba9UtQVPaD/sjtzBVW9RF7kPAqZvb2q9Uw9RllXPUDQur2I
                      i668MwM0vXSWkLw6uQ29UJ1vvQC9lrunhsK9a0bEPaczuT1oatm8f87EPbDpy7sww807bVqBvWCt
                      gzx9Grk90PakOwB/o7zAazk7/WGkvejWvjwAEKC89S+ePQCamrz2tAM9kOg4vQAfTbq6wFc9w7y4
                      vfWtwj1gYPG7QI9IvKfouz0w+kO9YEJivQ8MjD1tNSC95L3gPC1GxL13hsw9wNd1vU06ab2Nvba9
                      s9eQvbyYzjzjzIw9NvxBPdE1uT3w8Ky9ANKsvPR3+7yO0hg9bNa9PFD9MDyBC5c966CnPSzD1Twm
                      cIq9zYZ1vYBFLLxdpqg9AhFJPTqCQD2iupy9i+qVveovaD13JFC9z8K/vTdtb70+r5y9ePGavWJd
                      mr1feLA9EgJrPWYvTT3ERfU8YIruu43hhb2wWAm9akhAvQ1MG73i0xY9eJPCPJo6W72oS4c8gK6f
                      u+NFtD3AtMy8nyzHPd3hgL156oU9rL+gvK3Zib0Y/HK8YL0FO4SX+DwQNSm8ndiAPWSw5jy31709
                      xZHDvQBIlzhjkZ093Y5CvRkJmz3zsF+9hwzGPeFYuz0SvWA9a5mtvcZHCz3ioVI9Vce7vSmAwz0T
                      ISa9Mg8cPfqdpr1FbLa9NRKtvWS66DwP3Jk9sWO0PaB5J7uAsp29zG/FPGhQm71KGB696RWxPS0b
                      cr0ov6a9ezSZvcD/KrwAFRu62DSovSjHp70wAR69ODGtPA3DLr1itgE9gfGjPXh7vL2yo3Q99uA+
                      PWAPkbzhxLc9N+ZDvcm+vT2exCQ9cixIPSGunj1LIsg9AER0PAq2ZD1WaBI99wBHvWvJn72gj5Q7
                      OPS4vZbhCT3YvXc80Q+APd5jg719CnS9mXyEPWBds7wAjAi5YPi5vbARRL2oEvW8cCJsvGDXP70w
                      SBw8UbOAPeKjDD3AkJk8EqNYPRq0Hj1gYgy7Ek16PVPIML2oiaE8F4e/vaCM0jsgEJ48YARQOyzO
                      0bxf4689VSKjPeBt+jvgOIW7OVLBPQCpWToWMAY9adiMPaCSorylc5C9mJGavaduqT1rwLo9c1/L
                      vcfFmT3Celk9yjKBvVqCH73mPRk9WAL2vHTgsjwulxE9FgMuPcxlpjw4uL+9WGmGPLDC07tjF6s9
                      3EmKvWZUib2rbIU9BemRPU/Ysj0AvHm84AmUvJj/hDy40cS8oKyCPN3Tqr3DP7Q96OaOPNzh2Dxo
                      3ps8kvgoPTtUxr1QyUe8dEPlPL25L70AdmU76GiavVGVlj22dBG9dM6RPJ0UzD3k/v88wvU7PfIh
                      Iz0N18S9+pvCvTTBoTyXqi29AFj3uYlmnz1A32k7g+K2PYkZrj0mYGU9Lk8dPfj1xzxg6S27gF6c
                      u4COw7zsCcK8ag1/PUDPIjwj3xm9U86RvaOpfr0juZA9r5qUPVAaEL1x85U9NvebvagzSzxY96M8
                      fsBgPXFEqD2SGWw9w32DPW4QdD1tWXO9M025Pag2gLztmk29NGqgPIVAmT3i3oG9XeI8vS3nlj0X
                      N2y9cLizvQZPDD1Ieai9KXC9PQk/rD3gnHO9xr+ZvcY4EL1jZqG9Y8W1vewm6Ty2+ZS9aJS5vXbV
                      QT2g3ZM80zy0Pfu5wr3/XaQ9wBd8PMwm77xGl5e9k/G2PXczdb092ri95H3TPNAcy71lpcG9dKvH
                      PJc4hD3DQU29UACiO3G+nT0Rs4U9IANjvdRohL3kd+U8zA7PvEbCeT1B5I890WG2PdpqM72lU6m9
                      bF+GvRBEcLzI2pM8rNbevDMRQb32daq9ZabIPTfRI73qJVW9gF41urKJPD2xYYA9wFBCuzrnLL32
                      IaS9qWeSPRBbczz9/pc9AisvPU2yxb0KQwg9RwAhvbRUn7xL84k9ejTEvdKnWT0Yw3+8kw+vPWxI
                      grwRoqY9b16EPdDsCr3oLAQ88OIFvYD6ErwAy4W5puVWPcgHgrzA4Yk8J0RqvfStpbwmJC49UN0I
                      vWrKGD396WC9B9RMvbsArT0sYKa8gI5VOnqUIj1DCne9oF6VOwABeTqnhsO92hMhvcAFYrw0Yw29
                      gR+XPQARnTzGpiE9LbSHPfAmTbzsxQK93UuaPTFmwD2AiuA6qNaivMfEoz0s5YC9fTFrvWDlCL2s
                      6di8MJ4EPBVNgj3Irqw8omAnPaQ6/Tzgkra9OCfMPMrwOL0Gdnk9IDMHvf7dgL2izA89FKqNPMGO
                      sz2TqKy9gOqFvNirrr0inbW9QBhzO2LKKz1VrpU9UIS1O/MQYL3YWUW8MBdWvBCWLDw+LBY9PnSM
                      vSmIrz0GumY9c2OPPVJhbD1NcEW9c8aavfg6pzzKjCG9dGSpvJqNKb3jC6494Xi2PWLyDT1A2ZY8
                      8PsgPBulrj0WIFI9fcuBPdieEjwwpvW7KXOmPXCbIr1aJx69le3FPYDdSzzdWro999aqPdyG/TwA
                      YQc8LVZZvcPLdr0Y/q+82BJ1vCdKYb1Kh1098gisvciCib1YDzm8DTyGPQA9jDyAWOS8oum3vTB2
                      b7x9TD+9rscRPWhtWTxOboi9c9WcvbBVbb1gPZI85DPVPFBgDbxCeTU9agw1PWOXXr3eWB899/Wo
                      PRQE4bxQVvU7SJf8vBpXID1y0Hc9UD0BvUZuLz1N98k9xduqvSjqPDwAEaq7q+OSveVErb2s26c8
                      6H48PCUfmz2I8KY8JaeivbhZ8by9NI690Bs3vRgrXLxTm5+9oGGZu4Bp2juAGUS6GkgfvbLDED1C
                      jiU9kHV0vVJtaT0NlsE9SMabvXDZUr0Sz0g9EJhqvUzJ/Dzd5Me9kk1VPYxLtzzHP3W9C6GePf2p
                      Ob0a3DI9gyC2vQ8EkT1yXmA9luAjPR3Ikb3oTFC8YHOavO03hz2jeLs9cJpcvc6Kg70i7jo9NaqK
                      vTVRkD1q+hC95kdkPaqweb2p3JM9sz+qvSavqr0f6LK9NCqGvE2doT2A69C60DdTvaTm4TypbbM9
                      0QOUPRT/6Tyg+gi7aR+qParLRj3wh1W8wJVCO+t4kD1Q42i8leeivS4Io72a9lM9D82wPdWfsz1D
                      4Sq9IrFIPafqT71C/jg9yV2iPbDPY7z+OJW9h+tMvfMsZb1Ad7S6PhdBPe5sPz2lELQ90i8NPc16
                      Zb0Dl2m98ztNvZQx9Dyg+N07LdbEPaL3Wj2+Iys9OImvvDvdr70AxLQ65C4GveY7az2qrsC9O+nE
                      vTd7zD3si7I8Ro0qPSrwEr08HOQ8sdeTPZtWyr0ju7c9GvEFvR34Gb27iMY9QQe6PSJ7ej0CNgY9
                      yqQvvXfxQL39Bzq9zDToPKSX6TydG6Y9uaCdPaAl+7xzCDu9UlGqvXFhgT1GLQQ9fEUIvU3cX73Q
                      Glu8NIOlvPpJZb23dqk9S5yRPT3bOb34i/S80FLUu3kVuT2SCCI9yBSEPJrqjr0ZE609QJ41vbJk
                      LT1+uXU9kPu/vZORUb3YF1C8VCmDvbB0M70xf4Y9cQjJPcCerbwCIWY9HYBdvZXyg73SWGs9Mvwr
                      PZi6IbwA3WC7XWy3vawKDL3NTrw98C9ZvQBNCDu4J6i8A02tPRYJgL3BLrg9LNQKvYDR9bow6JY7
                      dmNYPR2Sm71o63a8or8YPQdeKr1JwYM9unagvVquYz0AsGQ4M+ylvbLrNT3N1Iw9WG4EvGkVlz2I
                      56Q8+OujvAEesT3+DXk9gBRlvUCBV7ybHK+9G/KbPVr5Ez3AZDA8/OP2POrzDj2tq5u9xwpvvW1Y
                      Ob1NVF+9h92BPURQ0jzKakq9IHzDvLhM87za11w9kFQ2PKVykb1s3KY8ki0OPapYZj2orYg8K/2P
                      PTF8kj3MUaG8yYWSPXKUUD2okQq8mAojvBdhdL2WCCw9rmluPdEiuD0Ivck8zCOBPCoskL1Qzty7
                      UKcZvQAVd7wAKEw4zqEjPc3yNL0DkKE9/lUrPVdHbb2InLm8woB1Pcxyh7xjyYw97JnhPECPMrwg
                      2KS86M0oPFvOjr0ovbS9NwqRPUir+7wXKbu92kIlPRB6Sby9jYm9ACgvuNQanbyMqoS9eS+lPYA5
                      ujpAzwA8gg9IPVqXtL1iYUE9Y51EvYZ8HT3qzig96mgEPfZ0bj0SBD497Pv3vK5faD02mAK9wJcy
                      O7D+HTye0zY9voN1Pfa9Dj2Jeas9hEvSPNa+aD31irC9rHm6PHcKs71aXS+9msRgPc3zsr0B+ZM9
                      JuBjPUyijbwAIHq6o2TGvQVjhL2Fp7495f7BPZn5qz2iqx49WvdlPbIYbz3Qqy28NfiUvXBaWbzR
                      cIY9dI8OvXOfG73bI8U9wKkbvc4waD3GHaq9rnVwPRiBT7ySMwQ9YE0ru5CJrb3sis28SyS1PSAK
                      9jvCYpm9ZBDuPGDEhrxibEw90AK9vW0cur1KrBg9sCVYPANavr0ouIu8QxCevYlvxD1NPVC9fWBO
                      vfM1Tr0aO5S9JILdPCHmlT32LmI9qjwnPai5fTzQkkS8SXXJPQDAyTnQ3sC7x8zBvahWnzw8uuc8
                      f5qcPeLtEz1J/aA9GaWUPbbHAT1S36K9L5e5vXGHoT2hh4E9qMFMvGihNzxM1gK9GM3ovABWujyL
                      ZJA92F69vEHxkD2ML/m8oB/3O8rbUL2Ac8y7ACYzO1BeFryI54+94vcwPRqSTT20l5W8IALVOzao
                      Mj0PR8g97MMUvS0Fb72u54a9jDzePJBnCDzg4Ry9vnEvPWykqzwL+MO9otCWvWhLuTxiDcm97GOG
                      vOj/WTyClkE9bGupvF2/Y72o0Y08u2e8PYMAab0YYFi84N9MveQd8Ty3GcE9A0K9vUZ6jb09uIU9
                      wCYxu4L8Sj3orw28
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTQ0MHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQzNzQ5MTQ0MHEBYS5kAAAAAAAAAAtpgj1DeLk9NcezvRDxNDz6hKS9aHD0vIKoEj2pI8A9
                      //2PPd4qpr2U7by8gKeeOyAT5rxQ5rI7p+Mxvap1e72dg5y9zYxBvXKuez3aR249kD4BPJicxTwa
                      yUa9yDuGvChQy73+EAc9Q6W2PW08hz0AjRG60MN/vZiCxDzM3bm8ro5IPXZyEL1ytCg9aFNFvIyR
                      hbwOJzI96M6rvDc8jD1dMbw9LTWnPY2dy73CMS09LTuavTAK0Ltdu4K9F2iLPfCaNrycpOQ8qjd+
                      PQaQj730oA+9qL1cPKE8qz3H/Eq9SpgBvYBMzrpbiMw9sgHIvWiyQbzBZMI9XY91vQU6yD1SknE9
                      PQbKvZAMkL06zrS9d21IvbCpVTzYW3+8JngGvdglgLwmkKy9qEUcPADKarzqTb+9QDNOvOJBZz0+
                      ZVU9aqIgPUISUj1Nsyq9JtcRPRgMILyKTSm9DYBhvSAbtrt6fJO9R2q9vdAYNjz3GTu94lcOPXQM
                      F71jSn69aro7PdrHYb0Cvzk9Nj9OPc7HBz0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTUyMHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQzNzQ5MTUyMHEBYS5kAAAAAAAAAADCWTy0KuQ8IMTJO2itQTwa7By9UD/Du0BtZ7zNwzK9
                      DNDSPBY7Yj2mHTA9M/qQvTK6PT2HsGa9UTSFPXhc27xgoPE7wmcKPeM4PL3a/Rm97hKFvSLXND32
                      +J29gAiNPJRHhDwniR692cakPRI+Aj2wo3u87D+ovNK7bj3n8LK9kuEAPTb3dT2+WWg9x6u3Pdf+
                      M70obEo8YjE6PfBylb0TFEK9cE4TvIBZXjoOxpm9uzCPPZhu4rwAroC7vqgFPQBShTyQUkO8qMp6
                      PKH/sD1AMsO9iD6yvZWXn72AJiG9gz9xvUwV2Tzl3YY9GIiovBolRz2/gci9aYmhPTkagj3YxhS8
                      Zx3HvY7oqL2whBy9BSGtvQCIuzuAiZW9gLpZvPimtbzCOSU98xLMvfShm7zcSt08h5FrvSM0Ir2N
                      dYQ9ZnJbPSjFnbw0j7a8MIEwPDP8xz2SbEM9KAaNPIfUxz34GJq8Y5S/vWfkyT1HVm294wpbvQBo
                      VrwR/a89WVSQPdE2kj3WsTM9JLPRPJRmtjw=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzQzNzQ5MTYwMHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzQzNzQ5MTYwMHEBYS4BAAAAAAAAAEfIcb0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        GxGWPMMsbzxx3SA8cd0gPLK9NTx8fh886cwrPOnMKzx93UM80lAKPGsH5ztrB+c7fd1DPNJQCjxr
        B+c7awfnO9srJzwtoio88/UIPPP1CDyMR5s7S9LTO37VwTt+1cE7jzXUO5uU4TuK0qg7itKoO481
        1DublOE7itKoO4rSqDt+jUk8lltJPEZCGzxGQhs88AUlPCrNDDx3NuI7dzbiOyLHMzz4GRM8Wiey
        O1onsjsixzM8+BkTPFonsjtaJ7I7fo1JPJZbSTxGQhs8RkIbPPAFJTwqzQw8dzbiO3c24jsixzM8
        +BkTPFonsjtaJ7I7IsczPPgZEzxaJ7I7WieyO54URTuKT3c78tm3O/LZtzuju6I7gW65OxwmrDsc
        Jqw7fP+WOwDT1TvsAwA87AMAPHz/ljsA09U77AMAPOwDADxz6rA7gFOtO4jw1zuI8Nc78nY+PJyf
        CzyRlBg8kZQYPExeCzx4GwM8gS8vPIEvLzxMXgs8eBsDPIEvLzyBLy88r7ySOw7hkjtqfb47an2+
        O/43szuiDNI7qb0CPKm9AjyNgqQ7rg3JO30CJjx9AiY8jYKkO64NyTt9AiY8fQImPK+8kjsO4ZI7
        an2+O2p9vjv+N7M7ogzSO6m9AjypvQI8jYKkO64NyTt9AiY8fQImPI2CpDuuDck7fQImPH0CJjw=
