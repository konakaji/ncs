beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.qdrift.QDriftEstimator
  N: 8000
  _ancilla: 3
  _targets:
  - 0
  - 1
  - 2
  ancilla_mes_method: !!python/object:gqe.measurement.AncillaMeasurementMethod
    hamiltonian: !!python/object:qwrapper.obs.Hamiltonian
      _hs: &id001
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      - 1
      _matrix: null
      _nqubit: 3
      _paulis:
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XXIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YYIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZZIX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IXXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IYYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: IZZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: XIXX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: YIYX
        _sign: 1
        matrix: null
        qulacs_obs: null
      - !!python/object:qwrapper.obs.PauliObservable
        _p_string: ZIZX
        _sign: 1
        matrix: null
        qulacs_obs: null
      _qulacs_obs: null
  hamiltonian: &id002 !!python/object:qwrapper.hamiltonian.HeisenbergModel
    _hs: *id001
    _matrix: null
    _nqubit: 3
    _paulis:
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XXI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YYI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZZI
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IXX
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IYY
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: IZZ
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: XIX
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: YIY
      _sign: 1
      matrix: null
      qulacs_obs: null
    - !!python/object:qwrapper.operator.ControllablePauli
      _p_string: ZIZ
      _sign: 1
      matrix: null
      qulacs_obs: null
    _qulacs_obs: null
  initializer: !!python/object:gqe.energy_estimator.initializer.XInitializer {}
  mes_method: !!python/object:qwrapper.measurement.MeasurementMethod
    hamiltonian: *id002
  nqubit: 3
  shot: 0
  tool: qulacs
lr: 0.0001
n_samples: 100
sampler: !!python/object:gqe.energy_model.sampler.NaiveSampler
  N: 8000
  all_paulis:
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: 1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: III
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZII
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZI
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZX
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZY
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZIZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZXZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZYZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: IZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: XZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: YZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  - !!python/object:qwrapper.operator.ControllablePauli
    _p_string: ZZZ
    _sign: -1
    matrix: null
    qulacs_obs: null
  beta: 10
  evolution_map: {}
  lam: 12
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2Mzg1NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDg5NjM4NTZxAWEuhAMAAAAAAABgRqW+4EDSPUppTD7gzBA8kAEWPoBh0r0Ewrs9bwyP
                      vownoL7sdrM94DE8PfbcUT4gwQs83E7BPepsZj7OSki+mXGDPvKWCT4sj/S9lBuHvVKobj5bflu+
                      zvwcvgQrlD1rK0S+Fu8PPoeQlb5b15i+Gm1jPvKpYz4cprA9R2WOPpDF9T1gYLw9gKIqO+LGWz7V
                      J5w+BAquPRzBij2GPua9kF/ivVrOo77EANU9nKGLPQPmib5weK48a4YavrQW7j19uIE+b3uVPghk
                      QL1crpO+DlGWvraxo74GqOm9K+yYPixWtb0UILw9rrBwvm3IqD5aJDQ+GnmCvohXGr5zOkq+6Muj
                      vsAr9LsIvXI9xFC0PbDzFb4aVmw+zGKDPfY+/b344ge+Fk3qvYaBLr7wrfK9sLzPPZPeMb7MgIE9
                      s0qIPmH5mz6bp4Q+y6xsvtyuh75meZO+BsuDvuvDjD5GGRA+GOxuvR5Qmb7+d1y+jpCbvlduoj40
                      Ouo9rqMzvoDm873E8t09cEGwvH8Dpj5+K1K+G2WjPlAbsD0AjrA8HJ2YvfoXoL6w8Yw8ug5hPkDW
                      tj1ANiU+6NxevpBVs71g1RC+Q7wIvjBT9TxAHOq7o7FAviwj9L03OIY+yKY0vtAzgj34CQ29rdyD
                      PgO7nD7jt6k++9g5vjzQrz3FuYM+AO1gPAjqUb542CI+kEh1vlrReD6gW5U9HKzFPYA/6zyYvge+
                      gApzvrycu72o1xw9ck6WvmTWuj2UBYS9S9SDvniGQT0iaXQ+XpOjvmhZez0I2gC+M5eOPoEHjD4z
                      Gou+/vKPvgbUub0g7ny9VFKDvtSO+z2BJqQ+BUmRPnSzjr1+xl8+HHj2vXbTHT5cVKg9TQiMPkMf
                      AL568nw+8ipaPkm9qT5t6oA+20NxvlJpXD7gmPi9nl5IPpjsf76mqyM++J4fvVNHN76k/Zu9+A1I
                      vYz8nz0+ZzU+AFyJOfEegj4GaAk+ENb5PAXYpz7EJpi9HstRPpjzWj3ozRy90JeXPOzHvb2b4AO+
                      0MujvPAqk73oQRC99jhavq2xnj5SgnY+BksYPtZodL5B05Y+My1Vvvwdxz1g3xG9EOYKvtzWir67
                      +2u+xAHlPVyZhD3DMV2+2AwKvWLkRT7ag6a+IBp8vplVlz5ZNoo+W5pjvpQxyT34rmW9gjY0PrYQ
                      JD7tHYA+skQEPmRm1D1K/F4++BsRviy37T0nGpw+PJOwPbboor5ITBc+PsAkPhxUkz0EfI09GEIc
                      vnCwNb4wGQ0+S3MVvjBdlz3XXYo+IC7MvVzUwb0QLIa9gB8yvkBQXr35zaQ+UntGPmA2LT3Lips+
                      HKy+vcBNtj3Q8vm9aKVNPXtRa75QV/G8ZiVmPrrQND7cr+49sHGHPKByNr61+4U+rFPyvdD9kDyb
                      h4k+8AKIPBL8pL44UXO99rlCPh9Vjr4+4AG+VhlLPptsIr5TzYe+qcicPkCCqjwgmvO9cOunvdjK
                      kr6GalA+0HzEPIZvD76zk3C+gLg5PILuIz7UvLY9UOSyPWcEjj5Mg589K5emPrYZ773IFEi+dGyE
                      PTcCmb6QNN69C7QxvrtDCL6QPnu+sWqRPiarBb5AD1i97D/PvfaTFr5j+UC+FnE/vrJOUj7gmkQ8
                      0Lqevndggj64bWO9g+o9vsBTkL5AnnK+7u1pPhSskD3g7Ri8bkd6PoDN5rwN0Z8+WMAnPbj6KD7i
                      /Cs+OJILPsIGCD4DEJu+UCOaPXUJmD7q8GM+pigxPmwZ+T0iZl0+zWSoPp1ioT4AVuw988Z7voC0
                      ULsC4WY+cjl7PrgNUb3SYS4+p32TvtqCYD6QMeA8GVyIPvgdCb56dX4+GExXvtqdlL7eozy+KL8c
                      vV6ATj5werg9Wh91PtsAYL6M/6099KW0Pb4HNL4pk4U+ADYJPGrwAz7x3qQ+siQ5Pk5jAT6ATsA8
                      qo4OPnAm4z0XyZQ+ys47PuoxJD62bHM+wFh5PQA/eT1mNz0+UBOIPRjKI704+Xg9TH6FPQAPuzpN
                      2I8+XHn1PSA7vT3g8g++XkEPvtwNq73rWxG+QNCcvblGmT7CN5m++khwPmM7fL6uEKS+5mR2Pu0I
                      iT62aCC+4NOkPcKmcD7TiqW+rDSmvR+Slz7Ak8C74s6WviBJEzz4IS++6G4mvvANjzyhY5Y+Dq1t
                      PoDENrz+Kgw+bjuYvpu8Xb7uEhA+NLTNPbjFI73CfTY+uj2hvmJeEj4BUok+GEEvvejlab7kzYi9
                      wAaxPcAJVz3BcI8+bFGSveB4yL3qApa+WIRsvrxs6j1WjIG+qnudvqCnyb2w0/k80JCVPCNxAr73
                      +Ia+YhhNPkXPmj4eej2+t7WiPpY+Uz5AY5883mVUPnyNqD32CgK+gOfZvXB7vLwJJYo+PopPviyO
                      0r3Tq3y+/ZyJPnj+T74o76G+tl47vuxtlj2gmIq9FjkEvmcjj74AhR09ooQxPmCDGTy+7mk+Qv9Y
                      PgCEWzx/hYw+1C6MvYyJzT1MxZo94xGMvv5SK748JOy9GEdQvWhmM70AQbM6QOrlve5nJb72shq+
                      4HuNvYoPVT7qVz4+OXKbPsD84zsucz6+UxFSviJQVz6IdRO+ViSsvdZGFL7zJ2m+WN0HPsCX4jum
                      Lj2+uPRXvppndz4AyUE9kodLPk+smb62UH6+gNCDPZzkjb4E3pS+JNu3PchDQL70q5e9Zp/PvcAS
                      /jwA+xS9gME3vHC9NL6rFRm+TteIvm//nr7sIKS9YFYJvtDVhL5UP5895EbxPdCrzbzgKXa+naWb
                      PoSn5z3bRX++/NTYPcBy9ztjzYc+Up93PqBcbz2Iaae+YPQHPbB40j39n40+wCbCO7i9G75GxT0+
                      toKIvsNrmj5ePmO+cXeMPoD2Xr1C6CE+/IazPbxsh707SIU+xrZZvrsPK74ScVc+EKCsPdAaOb6G
                      0nS+q8QAvisbWb4AeWA8wFSkPIxvzb0YPSe9dsNlPijaWL4LqGW+Xhdgvm8eor5QmvC8O3sQvsDL
                      r7s62EI+Yq1DPu5YIL75jqQ+wqMXPoYajb5qf0A+ZlrAvVeegj7KZJO+Rpy/vfCMQr7AbKG9LCSB
                      PX7TX77W1Ei+yKYxvmazV74uEFo+yi8jPqYuCb5wbIW+YNNtPUCVo7su/iS+DxapPpJuLj6IN0k9
                      WaCVPiiLM74Q3YC95kmUvoxspL0i/3M+QIeLO6wdzr1r8KG+MDrfPOADVr3DGUC+2M6JvlzIxz17
                      goK+mjeYvljbQ74NHpA+htZXvgBTw7uQTO+8AHGLO6ZIGT5TMgi+4Fp6vkGugz7GZsi9k82Evsi1
                      Sb0s+Ma9cLHwPXwOyT3Q3ZC9SeGTPqh4Qr6QM++83ltLPvCo3ryQsZe9rugPvtxjmD0EKYo9SNwn
                      vYDAPj05mKA+Y/k5vigvCL7vh5++McWXPnBGrrxSVRM+dv4qPr9pnD7+JEe+wFNyvkIDej7yxFc+
                      YEQbPtcEmL4nR6S+XqcJvhx/z72v+I6+cgdSPtBWkDwsuqS9EII3vuCGUL2MHY+9mAA8vWMpA77c
                      g5W9IL08vQlFiz71CJY+ABBpvF5FKj5wFcO99molvvC0Yb5IZlq9LBaFvRC29D2E3J6+Fc2dPmDi
                      SbyYKXU9wB3Iu8KzXj5APu29qsoFPjHfpT7oSY++ABj6O4KPo76Ly3S+dv0cvkDWCj4AAAs92bWc
                      PrybtT042VY9h7GVPsYikr637qC+ji6hvuivFD62qg0+CN2RvpBsEr5M3eK9Q5GZvjhYjr4gXCe8
                      w+qUPrOpgj5suoy+QKZZPcQMkT1QMMU8AO+fu5DfiTwANOa8QBfSvIAeurxDqFe+dBeQPQDE7jzQ
                      GIW9sDJtvmjoBT5yCFI+ftpRvlDnIT5gbI29POaaPfKkND7onRm9cCeuvODafL2u9FK+EHnNvdAG
                      oTzZxYk+XADxvUwkhb1+pjU+1HfPPXCAnzzO/Xq+JaqiPspSFD6ghqu9tqW0vcl9hD5Ga629MxKk
                      vk5uGD6YT0s9aBQfPqayJ742QE2+5nQbPjdyoj742CK9/sxCPiUpkD4645K+9CiIvjpISz6Eo989
                      9ESgvad0n76jLIa+KfGmPrDEUr68Ma69KlZ7PstJn76wb4e8WJc+viA8db7yT0k+0vQZPgeViT7U
                      G609IK0nPljzP74YFwC+4O1XPfBvFr4cVvQ9xySpvoOGXr47PpQ+o5BRvlqNaj4X3KI+lLHhPRLy
                      qL6WmZG+lszHvYy3lT0Z/oM+wj95PkhADD2IWy694EMLPTj+aD04dA4+ANjcvUeYlD6D0JU+uX6g
                      Pszwkr5cA6Y9OtQtPrA8ar4ZMJs+ij9pPmBHQb0QPuA8RL/1PdJoTz4bE6g+jLSxPWJoRz7LSKK+
                      +tl5PiCmkz1hd6k+ToRyPmM/lr7L/l++DV6hPl1SpT5Ac7E8KAk4vpAgyL348EG+OPlwvlD3Kr74
                      Daq+4FgMPpzS5L0IEg492wkavtWTpj4gdCg8jNv7vTx+pb7LliW+oGzBvVG4nD6oJGW+KNsNvuBg
                      Q7147EM9cN0UPg4SCj4zHxa+3rSXvsQ5qD03EZ6+N8KHPmr5Kj5MO8w9oM5GPYgucD0Znp4+Iuem
                      vhPvf76TPKC+hGSDvRA3nj2e6Iq+LRqYPtI0dj4ceYo9I5CYvng/V72EW5496gWovmkopj5QY4M9
                      yFYlvRAOjb6AlGq77rBwPnvZYb7YkVO+YNlGvGnkhD4Ut+89JUioPiOOh76+lRe+w4Qsvvg5Tb26
                      7WA+uGEBvZoyCT6OekI+XrkIvvJcaD5iRzM+Oj0ePusuk74=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2MzQ1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODk2MzQ1NnEBYS5kAAAAAAAAAD4sbL5Qyvi94OMFvlgOJz6JmJ4+dBCmvjq8WT4xVqo+
                      QB1+vrRaiL4goCi8QqxQPtJRk75P44M+JFOpPZS6rz1gKnY8wxhUvoseXL4W8Tu+UCruvHOXiD6A
                      azw71DHlPfPgD74Aio08K46QPviIF73QQtk8ZqJBvlZFtL2orGe9BmppPv3fnT6g9A+953mmvgI5
                      Yj5wuqQ9h2iMPtvkoj7lyaE+0DfOvEUqkD4acTE+Xs5fPnIleT59BaU+yPh6vVibML3LhWe+nwqB
                      vuMdjL6sbIQ9joByvtbvz71AyZ48SgV/PsiGJb5wAv08lk0YvvhFCT38TuQ9kLaOvWBdUTzILAS9
                      xD7jPUQs1D3/0JG+7ETiPa0opD6ItW6+zJf4PSafUj7+mpC+oAkDPGulIL7Ytmk9+Og4PWPVdL7A
                      HbY7XuI/vvmBiT5iPZ2+Yb2JPjmcpz6ayZy+vQ+IPrENmD4AmzG8HLvePQO7mT7oHVA9TqcNPmi6
                      F722xTA+7mw3PlDpAz42xXw+sBKWPbBc9bw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2NTM3NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNDg5NjUzNzZxAWEuECcAAAAAAADQkWC9kEAiPAAykzp4A/a88GRovHQIlbyQ9jY86JZE
                      PAIBQD0NsEe9NKHbPGMjWb14wJy8I6e8vd1ytD2yujc9NcKaPYkamT16T1G9ZUOrPQi9oryUsbg8
                      EHV4vQU6xD3UZMA8F0OcPfQyh71A0029rFfZvKFuoz1wvI694htgPYAoLrzH9mK9xuVqPfbbEb34
                      SMq8iqdUvWOSJb04n629NCrxvPZSHT0UK7E8VAbxvCMErz1DKB+9qsqGvdFRoT3iiDY9ENORvZRO
                      tDwZhpg9xt9mPRyD8jxU0pm8u5zHvQzI4Dzohv28TQpNvSCrV72oIdq8468xveQB+DzVDI4985x+
                      vQqnHj1ACMK9gfytPUCzirxamzG9me6xPdiAtbznb129mqtivbhOizyCoUc9uu49vTluuz0zfGy9
                      YJurPOhzw7yAeru7MN5rPHJ5IT0aI3y9TSJSvdR/kby6cyy9nqORvUUIgL1jZL69DYeYPeq9ND3/
                      j4c90D+kO31tPL2ozra8sSOJPfrbmL1FZI+9aMpnPIC/sroCcWc96KdsPAC8ALpC4jo9Q3C+PYhP
                      grzYDHG80BIXvJIyEz0df8y9uglzPXDvo724f6c8cvF9PYr7e738owW9po8GPWCSsTuMEea8DGaY
                      vLAKaLy9lHG9h3m+PToFHD1gy147H4HBPZLvpr20VIq8vHjhPLVRlD0+u6i9zLvEvEcRyz2YxPK8
                      f6rDvSpPcb2qk6a9xQ7DvWA7mzu3F4w9aKybPDudwL3lEoC9XuBYPc/ctD1KfnS9WroqvU1kiD3d
                      oHq9yASVPLIYKj0Mp4o8NIqnPDYfBb0ZQb89WMxsvLLODD1YbSu8DhRHPcMGSr1m1wS9fidOPZot
                      wb3CbVY9o7NwvSm2xz3mLQ+999oxveB5iLxj6T69esmCvWqHU70MB/k8eocivRmBhT3zP6C9N52L
                      PTZYB72hJq09FhwRPQy3mLyOul499DSXvHJsh71A5ci9OAuFvQDewzwwb1i9SzSMPQpWWz3NOom9
                      DzTCPVgIkbw78o490O5xvHYTkr1hl4g9GAkqvEArJTs4i7m80P9IvRZjAr0COgk9qDZpvAjPir2S
                      kUw9Z2dVvTBKZLwAI4M7g6l0vXHQrz3eDmY99MK7PPICdj3Td4Q9eIm/vBJ6Oj2BY8E9dgUAvVDo
                      MrweDRU9suksPfKOAD1AmS486EA0PBY4Cz0Y/mm86kgtvYCrvDpYyW08AJiVPI7wNT1jppm9YDoh
                      O/Qe/Lz0Poi8+e+sPfEInT1oqiC8VYSHPUyMg72qkna9aCCmPEAvtb3JgsU9aWaBPUPFvj3UfdI8
                      O0G3PecyzD2i11c9xgoKPV/2xr0Afg27mNT+vFAZBjy0sKA8isy4vQJxST0Ar+I7pVKOvQaeQj1J
                      +Kc9OX+cPafGkj3D8oE96qc8PQwOxzw7qMM9ceG8PUVJkj2npra9LlCSvWrJP70jbr69qny2vT69
                      Pj3oGKq8mFeWPMrjO7396o29wLQmvBIdaD1vcsS9QD/KvKp2bb1Uu+w8dD6GPC3JZL2/9aA9ymuB
                      vaijJDzALt6640JsvSyYFL04fbM8kp6qvbqgGT3408o8zIXTPKw1+TzVtLy9BcG9PclkuT3A8a69
                      nW+PvdKjj70gbTq9LvOevbIwNT1IuaG8oz8zvWbLbT1AbmU8E+Y4vbkLyD3mn3k9kXHFPYJgnb0N
                      Ooq9KHcvPHOUbr3Trqo97eGmPSdmYr0TPJs9GossvULFwL36uhg9ExZ6vZoGub2dRIQ9apprPQm8
                      gT0X6co9zfq1varLWL0FM4W9VauYvVLvUz3/0Zs9FsI7PVhAor3kvNM84eyiPdnBiT0umxg9MDnA
                      vdMOSL14LMW8abOePfBBGrxpaso9iMGPvAAXEjvsVOs8VNOuvABVO7tcwYS9QeCFPTZyPD2IWqy8
                      68SiPQyp4jyWswa93ZKkvZojcT0e16q9/vpJPXn0tT2H5y+9ADEru4ATZrwKKam9gFWSuiWptD2O
                      iSk9+8GmvcrPM73qYrS90Ga+u86Xib0xAZU98mNDPWjmmDxAUeE6rSJKvUKvhL0Ii6m9wr9bPVXR
                      rj3KhHY9sMb/O+ZGBL2dNYE9jHeJPI2Yab2/8ZA9rdkmvXCQwr0tQBy9dPnyvGw/E719o5+9cGJS
                      vIxyh73zHaO9CCeqvOU5ur1SmgQ9wAZEPJibNjyRvb89HpExPd3YgD1g0gs7tFaXvHhSsTwijEk9
                      dF0CvcM2yD2bCa297Ni+vGA7Qr3g1ye9OkK6vax8pjywS2Y8qZ6PPTQy+Ty438W8xzJuvUg45rxz
                      Aq69t6CePWOkfb0AkE25kb2uPU8ztT3qRwI9UqZePeqzLT3GIgA9oFdjvRSP8bwU9Kq8cnTKvfCs
                      KLxE1BG9uUeVPRoxGb2Vh7c9BsEOvSQm7jxjQYQ9YP3cu8f0jj3a1jC92PwvPOdWqT1BUoQ9GLXE
                      vVj3BjzHYnq9SSGgPRErij1sX+k8AN8XusVuvz2aQz49EPxePAw62LyCXgo9qGphvMrpDT26pHU9
                      J2K6PbbSAD3glXq9xLfwPEfFK71YYlY8jt2Vvbt8uD2WGjY96J8RvEwT2bzjaCS9kHJHvRPhwT2s
                      Zo888I0ovRLOVz1BQL89F4TIvQ3NsD3MSYq9xSyuvQyvzTzyizg9WqmPvXrghL29Grm9JzCDPTU+
                      wL0zWZ+96FqOvI3QXr30VNy8iulhPaq7BD3oFMA8Ym5SPfMNmz2Tw5W9aHKnPKQ/1zw4br88BmBu
                      PfAqNDy63ic9N7SDPd1WVL2RyYo9A7ugvVagOz2gn4g7SmQlvXYohr1qjza9Arm/vYRs+Txjw469
                      +t4HvWzQoLzQISO9ESKWPatloT0olhs8jVTJvaPVgz2SeXk9hgUQvdNjdb1xi6Y91+2zPdsexT0E
                      jNo8G8OuvUheijyEgtQ8LDutvGi5ejx0p+K8cMEvvSdtXr2hsLA9sOtCvRHxhT0melM92wmNPaRQ
                      DL0DZMA9sf3DPfZjRz37Jbq99429vdLnIz3jCIo9afquPRoSAr3c1+E8pc+BvWiYqjyC72g9sJ2H
                      OwIMbD3s9+m8yMfbvONWLb3pgJQ9UwMbvSCBNb2oEoS8uq0GPepRtL3oNga8AKKEuVIeVT2FaKk9
                      d4aPPSrQAL36kwS9bYnKvYAR8broRoG9Hkt5PaCRlr2If9y86FoBPJnfhz3DFVe9k4w3vcprjr1o
                      j1C8L97GvYzaorwzlqE9veKQPZN5hD3QHj08E1ibvbP5Ur18qec8EYmsPTRxEr2Fd6u9eOaMvBSE
                      prw9qVe9sWmcPYFGxj2v7bA9YFnSvNCwWL2CvgU9wyeevUrETD337WS9FK2qvJNMmr2zh5W99MPP
                      vHL4rb3UzxK9vmSUvU+lxT3zUqE90WyfPRhOwbxQohS8AKjbOQyC0bxI6py9LO+PvHaCkb3QLou7
                      2Ne7PExv2ry6frq9hQfEvdJwCj2QBmC9zC+vvAtdxr0r47K9E5tDvQsPvj1zQq49jOuPPINVW70C
                      sbi9khNOPZARVTzyIV09Ewqhvd1rbL0dOME9r+SzvVUhuD2xVJ09vYyPvdBIW73XdSG9AJpDPLLb
                      Gj36KkI98LYavKJ2PD2AuYw8nFj3PNRPpLzC7zQ94LfZvKDAn7xthYK9GJ3BvFpYB73U8ZE89oOo
                      vVovYj1xEck9ylYKPZDYS734Y7K9yhIwParuYb1qLDm9ATSPPXLKqr1nacq9cPbGvTWFiD1yOwQ9
                      fwCwvbqewL0Zzqw9XdCGPfSkojyno7G97e+4vR0foL1xL8M9GYzLPYBZWbqwdNa72G0wvK3iHb3L
                      Frc99wFFvRBeNryLypE9sAerOxWpkL3Oz4m97e05vcDfDTtae4G9f0y1vT7ahb1XmSO9yZGyPRcY
                      S726Hnm9neGJvV9Bkj2XlDS96k5zvfiovzyD57I9mKayvTD8sL1NfnC9L9q9vZK/OT2o27E81seq
                      vTZUGb2vubS94HbCPJjZl71VGMQ93t4HPbvgxL1TV8s9XlyVvdcpu73tEcu9ZqRmPUcbwj3AWs28
                      T1zGPe26Rb0MW7i8HwS7vTpzMr1im1U9H8XDvVmrsT0KRGm9yVqVPfojjL0wg5W7+m5QvcKAEj02
                      44u9sLk/vMMmtb0WrIm9w7WIPYDSUby+5lo9oHoUvaDR9Lu04/28Ea+8PbWKsb0OBHQ98P2Rvawd
                      6rxvzok95HoGvSBN9Ttyx1o9LET+PIJjdT0QB0u8gMVTvNGVwD2w6s07t1ygPcC4o7owRHK8JvdP
                      PcDih70AwuW8ID5uvQlXuT07wqi9uCD8vGg2FTwjOp29XTiFvffjwL0sYQ69unAnvagV47yAeSo8
                      vPuAvejctTxpB7Q9EjiDvUxSmbyKRDM9oxldvSEhgT1WFQQ9eJPYvDK4Gz2ifpq9LlxoPV2lsj0s
                      ThK9AO3+OZTplzxYKKk8UfS8PRC6P733+ly9RgihvaCKIzs2Fks9GOyivRBEnb1J1bc9iuApvTT2
                      wDzClRA99Pe6PNbzbj2o8pO8OWmzPYrQmb2yWWc9nXVYvQC4Vjoe9jM9ItE9PSgxwzzMg9C8XcWr
                      vQArAr0AapO65vYJPavdm72CjWU9+Gi7PMnJoz0Afuk6GeSsPTmvlT0tZ3u9KAGlPKn1nT3Q88+7
                      mjBKvWZIKj2Jfrk9U5EyvTOdkb03FyK9jDLXPEvZuj1v8JQ9GIsTPACF1Dvg97u9KhrHvYDBCDrD
                      rbY9r1WJPVmZkj1gSP87NnVWPSsIs73AaNO6XlcNPYmjlj0tjK+9AfKVPdE9yj33OCe9HrIXPfAn
                      QLwADNy8YKG/vTqzHb0KGF89g9S2vVRO57zSE3w9QCcSvaiYVjzlCpc9oCH0u3g2kzzq5V29XYBp
                      vazl9rxY+BM8+3G3PQUSlD0/1og97iYAPdl7tz1xSo09THHsPAaKir2tZSy9NMvTvIE8qz09ErG9
                      8kqkvdD1aLxTsoE9Q5mfvdK3Wj2/AL8920mTPV61Yj3Ozww9sEHPu0fNwL1azHi9daWZPYCV7Lo5
                      BcE92p+bvRbnkb3x65g9+EWtvNpwdj2ARG699m4PvTPol72nimG9v5y7vUj8lzwzHWi9cA42vOOa
                      Pb2RD5c9/Vs5vTM+Jb1Bl8U9MZufPXDkcbxJS5o9U+61vY38kz2AXDW9AN4fvCpXCz0g1ba7C1PE
                      Pcl6qj0AXSQ7Ze+WvdV7o70XO6Y9aNNDPErRfT29M7Y9qsoOPU/hiT2s2Ye8f9WLPfYWbT3YXSG8
                      6z+2PQGMqT2YLuC8DZeNPXSCkLxPB8u9eQ2mPQXyhz2Apyq9g+1+vRLdtb0ZfZ89aHc2PPWLqb1E
                      kvs80n4vPQp1PL3mFCk95j5EPRJOVj3QIUs854csvTqrxr2g0Rc7qG1zPMB3NTw29gC9/+GwPcBm
                      W7wyvk49IL/FvSeKUL0YSsw8E+y8vegKl7znpJ89WM+3PCV6uL0xj8c9AKKhO9DVdjzWg5G9yJqH
                      vGVxmz1lA8s9Nam9PXoOYL3MLcE8miBqvbG6iT1xC7Y9+ebCPV3+Xr0INtm8wOqFOlpfF70MgOi8
                      eVSmPbRr4ryT/SK9NoqdvUD2Wr20CPk8jOnKPCBcjLyEqNw85ooKvdpKQT1A9Fu8qcSBPfcHrz1v
                      qJw9we+4PZWvg71gIK27YkEzPelayj0aPxU9h4adPcA9KjtmI4K9/e2HvSqYhb0id0o9y+3HvfBM
                      erx0Goe8IkoiPQFenz3NXX29g92gveeBrr1gU6s802JuvWBDn7u82M08B8OLPeodUb2kXA69gDgo
                      vYr9cL0JYrY9oLdYvWB+srtjVIQ9KOufvIAn+jqtcss9ysKuvb8Kvz3hycs9JTyLPbCFcr0tjao9
                      IrwRPYWbhj1Yh4y99zvEPahPtzzMKaK8oPRJO05glL3kUg+9igMXPe5IiL2szLa8f27CPVQQ1Tw+
                      5RA9hWa+PeyACL1WfXY9QPhlO3BqPL0Fnbu9gHYaOvBLEzzMgNg8/v0hPZ18cb00ua68sFUYPDwx
                      Ab1l5b29MbOBPSXRvj0b86i90gsuPfOoHb2Dm6A9jduCPWLlUz0AIoM74UPGPeqSeL0lSKu9Vvx2
                      PYDyozz5OpI9QNZ8O0zR2TzeJF89K0HGPQDYozxtSGe9oN4AuwUpj707FKW92ErLvcJHGz2ftrE9
                      jQvHPU1qcb10Lro8SuZIvXYtXT0QORA8MHdtPDdqmD2pUo89sNBevYAGFr2Apw88YJA0vRAkOzyC
                      2QE9ig0vvUAgVLuap529zl4ZPb3vU73xZ749gFFTvfVkjD2NMqy9dDL2PNSnFL1qJQI9NDnLvMCT
                      OL0JyYI9IGgivZPERr1tRJc9PwC8PadzwD1iC1Y9ADE+u5kmtT1H5629xBrsPArVGL1NpVy9iMzJ
                      vdKxWj09D8S9OHS7vHBRW7yfdLw9OpYFvdatJD2AseA6Pm0CPYCxpDyA65g6mqMcPRJskb26EnM9
                      E+J2vTdmLL1xBL49ktR0PQAwXjySaD09Bl0Wvbetxj1g0Ty9WKy5vGDoqDvvmqY9IBIIvaj0Pryo
                      2DS88KAYPPavo73Zz6M9gpWEvbrzLD2nSLa9HmGDvQBMDDsSn3w92LeMvbICEj0ZQqQ9uLvZvAAe
                      7LklFYs9jqJBPXMtXL2AtOM7ioSSvSodD71ogaw8pdaKPdFZkz0qeMq98ledvaBpyruEjAS9C8PA
                      PW6Whb2ZUcU99k8LPZ7QVT0AO1O6FIWYvJ2Hrz2nWse9BD8YvTBQt73geZ68UPoVPLBJcjzgN8K8
                      3vYKPemvvT1CeiY9At5EPRBPtb3a5E49iiJKvfU6g70Inty8JdyjvQUzgD30/Mo8c9W6PVeSlD1D
                      bLa9ICgYvUU7xr0EuNg8soaDvVOTXb2WshU9iqRKPZYTCb0S0xQ9HaVQvcqYD739lG69O3K5veDQ
                      ozts3aa81cGvvUB0qL3DJSe9Bu4LvblZmD2AHp86MBNKvXdaM7075by9gIiUvOJmpL3kb4K9qEHh
                      vJQgsrwuakY9wH1su/vOnb2ojnm87vM6PcEWsz3u9Fw9F7+7va1Uf709pJg9KMtZPNp9rb1gjao7
                      QAeevXYkgb0H1Wa9V7twvaghpjzQuUu9oEYJu2/mwj1bTK49kDEYPJhfBLyA84g61LvyvJjBurzI
                      8Lo8lJmGvT4xXD0+WFk9UB/pu5l3mj35Rso9wTq5PU1DHb2TGbo9xATrPCRzzTzGpzE9s8uevfvN
                      y73ylhU9etYlPQD1YLy4FLS9oCOUPFE6sj2hmqE9spRQPelavD01/Ia9iYupPWj/u72KLGS9yheu
                      vcm1tT2ShCo9a/OpPex0jLzFup89OvRmvRC9hr2j4sA9M36wvU4GOD3YnZ+97NjIvMBfVTswXFg8
                      csW1vUAlLzsALBC6ADQTPDA97TsZ/ZI9epaivfSgpDwEUfI8hYK7PZMjeb3+0ou9PSSIvWKxqb1Z
                      nZ09Ie3BPYIzED2ZVpI9lpkAPYAsVTwylRo98w+VvaUHpb0bZq09ANNYvQLteD2YFn28AFEWO/hY
                      jrzgPP+8LJcAvUqnBj2d07M9BskDPXRw9zxxw5Y9wDsDu/FSiz0d3Kk9PJaJvfGzrD3p5sA9JZej
                      vZJMdT3ZXrA98KoDvWhXmryfVMU9p4JHvUygg7zuKpa9NcXAvdbfTz2o5VQ84N2sPE3SxD1jCT69
                      c1FivQvOxr3zRaa9tLkKvd2SLL1g15o7NbWrvYeeoD0ytCY9wA4lvFLDRT1+aTQ9WOR3vBrWur12
                      dY+9Sr5xPQBFUrvT+hy93ttjPRSzoTwHcyC9EgIYPXtasD2UvLK8hCnPPMUwwj0Vh4i9tNuZPMks
                      rD2Gx0Y91GqYPIB4gb2aJBQ9Aw6RPYTw/DxgMz87eo1JPXu1gj2pi4w9p3S7PazOBL1gPqm8NPTJ
                      vGWQrr16EmQ9tGPQvBIlcj3ZF7o9wC5JO59/iz0UU4W96DhLPDBGyzv6z8W9rR0dvR0rqj1golk7
                      6EHrvGOurL0gm1G9lgubvYMQGr2wbsg7wE7NukpBwL2dncE9SAWOvH7zGT3I9LO9nVqDPbUFw73K
                      Bxs9y9yovdXJk72I+YC9kqU0PXjSlb0M95A86tZvveBH8juOqJu9U5bGPSzMCr0X1i+9IskyPTFJ
                      mz1YYL48NCXDPIyXoDzZKZU9sKNtPDCcRLyPZJU99OUWvahmuDz8cYC9Cm8SveC037uWKYC9VNDH
                      PEbnOz005Yg8H+6yvbJJx70QHgm8LLu1PPBmIL2405y8Q+Spvc1hZL3wAEK9bwyzPToBQb1m4js9
                      3YiYPYVKhr0DaI29iilfPa3alT3qUmO9Ldm7PbAcw7tYmtq8mHXzvOD/k7vEc9o84/ObvTAWQLzc
                      VOY8Urh2Pf0Zxj0K4Im9Kn9FvezS7DzMkOE8VFvYvMaVVz16QmA9QtGivYuTrT1s6ME8qEMgvK7P
                      o70sZaE8YNvBu2j4s73YIg288qBnPVbIDr2gCMa77FnSvIPcxT1SKQI9QKY9PNBah7sA6jk7Vf2m
                      PfZ8Rz3/dbg9UAC4O7CkEbxY7iA8UQSKPQKyDz3Ti2G9vYdzvRQgybyA3AO9ztIDPYMbjD2qqIu9
                      Kg0dPSQahb3wQCu8s010vTBDWTzI49u8QA00vLj4oL1DGJE9kIZ5vEs3tL1QNrU7o6C8vYDXfTyw
                      Sam7vjwVPWByz7unkKE9smU4PRWQvj1vhpI9lDaOvCp6BT24s/K8jOmHPNAq/zvOBKm9UB1YPH3c
                      tT3yMD89mCLgvMAeg72vmog9YFsJvW7fiL1qspu9cgQ1PRIKPj1Imru8OFWovDLORD2TASG9TaOY
                      PVQRnLxy5XY95wm0Pc/mmT1VQKy9X0KnPXhKkjx0b948ELRDvL2Mu70oiw08q4mhvQiJ9LzO1D49
                      cemPPdjYf7wtgqe9+ey3PZAnTLwkX848zHWnvNAGtTvLH7g94Iaxu5d4oj12Rh89kOxpPNCz4Lst
                      6WS9dottPetswz2IqMc8Sf+iPdAcvjtWLxk9AEavvHKHir1WaT89sJ//O7SIxTwL4Ji9oqgTPax5
                      1TxipDM9gzRXvbYyaz2SxQw9d4hWvTktjz2hIII9iY6xPdEooz0X7Lu9E+HCPbSB6zwAz0e8cEBE
                      vElDjz3uaxw9VXalPQcfwD1YLR28F/SBPcrjY73ug4K9uJ7EvVDEwL11ppm9eBfUvNBfxbsvVLe9
                      QlBVPRheRTyoikw8yoCqvQvTsb1AFb86L8DIvRTm/rwoM8K9ZTOPPfRM4ryL6o09WnopvZEIvz1N
                      mEu9isY0PejZKbws1Ii8BlUKvaBS9btCzUQ9/QWxPQBSgzpoJi08ww+lPR3ubL2AQt07t/ikPezV
                      6bz3PyC9zMOUvOzDn7wnuaQ92rxwPWCF4TsXdUm9Y52WPUN9db1i3wk9qGcXvDUnwj33WLq9YQ6x
                      PYm4qj3ARIa6gnYVPXUysr28KdY8g9rFPc9xgj33J3S90ZuIPQBC2zlXWDu9KcTLPUGHtz3sgoC8
                      4FPTu1YsNT2nsMK90DdXPNBdl71Gpy49QABKu4IAPD0YUH48YmpbPUUKgL3EmBe9f8iYPaL6az2w
                      AXO8i5ixvdLRw72Wf0s9lXCZPYwQ2jztQbs9YiwyPdGioD14nKc8YClLu4ClijvXMss9TNYDvRib
                      lzwn90G96tbHvViwQ7wYvsW83a/HveBBp7yAZR+8m9mZPfFvwD2T7sI9okFdPZeImj0EsM084L+K
                      OzdNI73iGWY9U9m/PUeCxD0Q2ko8SvhRvaf6wz2rt4Q9GJ/5vLgPhjzNITy9prMHvfpUTD06kIO9
                      6L7uvBO9qr3QaSm8+FOKvK3rf72O1BY9zOOfvBpFeD300Ng8QjZdPbA8c7zBZJw9VG6dPPh43rw2
                      Nqi9lJz/vBQ2qTyXZCe94IBwvUuZkD1ggGM7gIyevX5BYD3EVIe9wlV/PY2cVb19Oa69cILGvaJ2
                      jr2yvaS9py6iPRPCrj3anjK9O7vBPZG5mj3tZiq91e2yPU1DbL0q3zo9zLWoPIBT8DobPrw9iHy3
                      PG8TkD0Xg8y92LRWPLZnrL24csW9+jxuvWchbb2Wz5+94CjaO+iXeTxYFC48p/0evfF2jD0KWS69
                      O4qwPewjv7ywNRu8I3uMPWq8Vb2gx4y90kIhPehrrjwqQ4+9G0CTveL8MT0AUNe6eICovAB1BLpj
                      c5i9O3uFPWAZKL3+pQo9SEXEvbUTyT0oAzm8wBC+PNBaNjzSaZy9QPggvUCQS7zZ3KI9oETaO1LE
                      r70OwlY98s5bPUz7z7wttmO9gog7Pekohz2SCxI9gECbunqCWb2Pj8w9OCuVvSU4wb2XWEu9jAaN
                      vJAefL0qZBc9rUjDPdVcnj0D3qI9Dl5gPVsjnT1gGbA8i32UvY0vgL2SCwI96IHuvOORxz2vKbU9
                      wSOyPQiA+rwi9B49oKBfvSAymDsRlsk9oT6zPSuYgj2hyIQ946I4vVBlyTuqfZ29VzEkvVZTC71K
                      VTW9XzuTPdOgrb1tA6m9XBzsPPjEmLyAqZm6rC8NveycwTzqclm916O8PZ0TYr2Qtw+9ThSRvVB2
                      pzuV34K9RyVovSBnpzu3IjC9zP2EvYSXFL3TJkG9CwiPvUCIbbvzp8G9YClKO4lVsT2Qa2c8Wrl+
                      PS+qxD1Sm1U9NbiDvWGIhz3z9Rq9QuV/Pcdjiz0qsxc9UlpGPQBKkTySgh89PAgIvfPSYb2pCMM9
                      0re7vdcipz2QzC29bOW9vPnGkz3zSSG9uIuGvLClALx0nqa8RpZrPY5ykr3sa+O8kPoQvL1vLL1R
                      aYM9UGFvveCe7buRqJ49oNnivHHsqz3h+54994A7vZTi7LxNtK+9lIXzvNj0xjwwZpA7ROMTvfmG
                      wj3u5mA9+I+bvBPFwL3Qak68gEyzvNUHlL2KUnU96P7EvdhPkbwVhaW9WiXKvdPxOr3VM6y9UG21
                      uyPXaL0Id6i8buo/PWhBhLyxOY49wLdNvMb4Ej3A2jc8/U5NvWOhjT3Cpy49niiNvT1akT3MnQu9
                      hJnNPID4x7qobh48mG4/vDb9Xz2Y6Ze8UL1lvckRuT2t5129Xq2nvZrBRT1SIXQ9sfeBPavVlL2X
                      Fn295Y6CPXjemryAr9e77XTMPfhgmDzl96w99q6CvQ3VeL0Mqcq8oJfzvKhikLwZRZE9ITmyPTC/
                      zzsAmr694B32O5rUPj3Eu/480CejO6fMrD0Ab887t+ScPUBahjxaYRI9oviYvc+7xz1A+yG9k0Gr
                      vbNXYL1yDig9gC2UPCi0p7wmMGw9o/bEvVBkjr1oVUg8klp6PXio9ryqsJa9zeTBveGKlD0TkqU9
                      qVWrPYDb87wi8H49G/WdPQCFFrx7k589MCOrvSoxdL0KYEw9aAYDvMRrBr3bd409OgGyvV5NPD2y
                      xcG9djUIvSokNT2sHI28jJC+PJH1lz3jnZ+9bGLevGCZ/LwYwnO8twvKPVoBST07/qq97QQpvRBZ
                      RL3tBim998JGvYcDab3dg8e901J7vRK3LD3pY5c9AOT8u6ADw7tCpRw9wsdNPZi/Ljy0XKO8E4Fq
                      vXmDoD0Koq+9NZnEvTOzv70Mz508FIKKvZUVy70kyuM8XixWPb2vyr3Mcpc88GGTvejTqb1oM028
                      WYmMPYjNxr00vZ+8gMPpvIBU/btV1ZO9M7uSvWAJKrtqaBS9qoGfvbZrJz3QzKm9igC2vdUDiT3s
                      yOk8g9k8vS4+fz2uM4G9sI4EvTBGlrsRR7c9KCjgvLKFFD3rb7m97AjIPAzc2jyirCk9IuO5vdfG
                      Or3AKx48UpYvPfUMyj3tZF+9XdqLveiRSLxAyZ694p0NPaZtlL3Ic6E8mDcYvPcbsL1Q0fm7PphF
                      PerWtb3dVZm9WCgHvG/fsD2wKCy9AqRxPQiEu72sgNM82PUZPP1HXb2N2XG9j+ixvcpIez2TwMW9
                      TfZQvWefXr1g2uM7MFA5PNc1s73+jDI9AzV0vX1zyj3MkZ+8ApFGPeh2x7ywpcE7pmpQPfqla71y
                      83k9YHwoO9DyVbzIt788afmBPbUAqD1IZIG8Yai3PWijurwwOgu8sK6fvSk+vj1eGx49t5utvd6P
                      gb1jmsm9QFyrvXqjVz13Z689rQixPRJ1Tz3ss/e8IDWGu86Eg706nJ29MFaQO0W1xb1bE7C9oAge
                      vScOar2WaBm9gL/wu+eLQb1dpGy9clmVvZD1XbxoK368pFsLvbP3Zb1Cl049NCeDvNGslT2g5YW8
                      A9GEPTpKKb1Oflo9xUGevYsouT1mjhk94NTCu5MoM72g4qA8dTO0PSqnaT0KfW89gNgRvEe0XL3/
                      EZM9/VF0vQ03Z73H+KY9IzK/PWDdb73/qLa9vqZBPSDC/rvUk5M8bDXkvLiKkzx6EEu9QOEfO5eZ
                      kD1ecqW91A25PN0TtT0AbKy4NMjfvFoerr2w3xu9HeGvPVOpor2zZpA9Ia2WPVFzyT1y33o9UEt6
                      vZ2+tL2KeJy9xfuRvaBsJLvQrrS9sK3Fuxo0Wb14dYq9uMPbvJBbab1sDRa9M/FdvfWZwz1FTKW9
                      cOo8vaqYr73Seww9YM9jO3Y8j714aOO8bRpjvXMPvT0Acwk7GNfIvIfOkz1VNsk9c4+aPdH4rD27
                      hZe9uaG8Paxf0bxAMkK7+vchPYRj0DzgtyS9uFSkPD/8wT0bDqY99XGivYIPTD3iCp+93SlovQDo
                      TzzQXvC7MNAWvB2pZ70U1Yy8AEe3vMQL8Tw0IvM8FfOjPfpNJT0RErk9U8vJvZhUczxS6CQ96Hev
                      vbnxhj1ooxe8kLYvvAlUlj3dS7W9KA5cvBtHur2aUEE9LBe6vJocc70HZFy94IHsu8sDgT1XOWu9
                      1GjovJZlDr0UC928u5uZPe6nAz2Frbe988CSvZ0WUL0np4w9ulQxvR0OX72GhyE9MARTvOAyvbu+
                      fFs9IyKGPf7aeD2yEGo9WusEvVB0RTzyBUE99OTBPHgp07zY2aE8CjgrvQ1lqb1JgaE9lkZcPZoT
                      vb2wLU+8lEW+vHGsmj0ZeY49lFKOPCKYLD3F5Mu9zNuDvcHahz1gSD+94iALPYC0XrwqSC69wB4p
                      PDB2kL1FKYK9QK+Quo9Thj3/Lrm9mrViPbidsDwIrse9WjV+PWXOvz2s7Ay99GTNvEAurDxImvG8
                      eeakPWRn4zyKgSY9swJrvTpBOT1YbQC8c7KKPZYIjL3ANlk7gNy3veUuqz1APQU8jCrnvNKYJj1Y
                      SfW8U7y1vShEvjzKyRE9aC+ivMfdtz2hDqo9wnWJvTryer0xtpI9ItJHPRPoyz1AxUm8XcCHvfnJ
                      pD3gTJ87KfCXPaFdyj3hG7k9UAbzu0AORb1wCl+8V/iqPWI2dT17pqm90DyLvTHItj1DzJC99T24
                      Pf9buD0C4EI9qVXKPWhgXjzDm7e9CKegvDYTjL01tcy9/BnZPDRLh72qS1k9wAx9vfjgx71rcYE9
                      A7CPPQsxv70A4NI5TJGLvAMIIb2gExM7eZqTPeyP67wps7Q9KKZXvGh1iTxCsEg94AWiPBhgvr3C
                      CVU9SsuyvTx1Ab09ma+9FiQfPcyi6byTFMQ9UIoJPOIeKj2qLJK9hdrFvYpNdL3i5ik942SmvdLY
                      Hz1i7Z29LTmNvSIlWj3pdJk9ADPMO6qJJ707/pI94IprvWgNTbxgIYm8MOvVO9BCKrzAVgE7IbeR
                      PUr2vr2Df4Q9jtOMvUPzkT3B5KM9WmAuvYjH/7yszqo8j1qRPcxfjL1cqe48AESBvEDodb20kRS9
                      Cs0AvYmxvz3M/pm8VRaJvU4iCj0SRxg9SI6qvb7tID2MRPA86OIzvIUJvT2qsma983pBvXqper2g
                      MSS9K7KevbIOND2fJMk9GJkvPOiIebzjAlW9gihbPT/UtL1ow4G8YLNSO2S46DwlOaw9RWOAvY3P
                      qT1QNkc8Cy+CPbYPpL379Lg9Bl2mvbMFar2iPFs9lqxtPaD3xrwQqj48U2ZZvWCALTvynpa9AO5z
                      vYC+6jtTMJg9rKmBPHABHDxaxDy9uqY6vYH5kT0YSHy85YLHPXdZoj0HI7i9PiCsvQeoTr1krv88
                      wGkEvPPuwb2we7C7IkJ4Pak8wj2J0o89UPwBvEDGL71VCqQ9eCHovH6gEj092ce9rkiovUwt0byo
                      DEe8vfRcvfLgAD0SjKu9F5qKPVSBmDwZt7M9bfFgvYc9fL0NtJK9+uFdvacTrT0TIz29VhECPSSx
                      1zzQgqq73q0IPSotUL3yMFU9tB6OPJSb9DzEuN08RGHqPICHPTzmVqO9Bx6EPSAS+jtodY68hUic
                      PcB7artCsUY9sBSWOz4xcj076qi9NDvbvDWaqT17wpw9/i6FvQDZAr1dvGi9e9TKvTzCFr00jQe9
                      Vp0XvROtlj3wvoq9Qt6IvXge/7yAU568R8i/vUCLY7tUo4W9LTPFPU2bbr1mXGQ9nQaLvcm/gj2Y
                      TR48INHzOxBICr12AGk9WBmDvACUbTqqBzA999lgvS7CAT2U14g8lBn6vFhwYTzDlTK9VKiwvKrG
                      AT10cNO8mGWYvJIonr2CTl89upxPPd+/ij1g0KY7YTnMPTiD27ytw8u96pGgvbrOXj2SnT09V4vC
                      vXM1jr3SawA970ysPVDtqL0ZSps9WQ7EPd9lrz3ejBc99kMDPVNjtL0Cylc9wrVNPZ22ab1zTcS9
                      0t2kveBdgbzdClq9oBHkOzLScj1nda09dteQvTbCWj0ApHS84GvDvUDnrjqQy3S8gpIWPapCrr1R
                      u4s9KqGTvXfjur2aMUo9Fkw0PRtmsz2qqDa9Qu05PdAi57vaCKW90Kcuvcuwwr2fpo09ccrAPelT
                      kz0A2Gi6w+iLPYLKJT3mTxo96EuavZ46QD1xTcU99QKvPXdBlD22LGU9MDE9vOlJkj2ox4G9QKQV
                      vdrcj72Y5KS81uE+PauzhD1t81q90IHgO8bIUT2WfKu9jbbIPVGlkz10F608XyPEPVKRZj3rRK+9
                      gDzFOwBFVzu7DZ29umglvatuqj27+6q9KZGKPTGHhz1bXpc9jSCeveAp7bsOLA896NlevBphRL0T
                      lcS9415lvWrNP72IC8g8862JPaS2Br1rB6k9FHWDvXRujrxQWho8RkuDvcPpor1w8n08NIfBvO5O
                      Dz0uOHI9u8+VPXpItL0ozem8UtsuPfKpOD2ARUK86OBQPNoyPr0NX5A9Sj9vvXgWkLz03M88Gucv
                      PYgGrL1cvfE8fLv8PKCNJr1A7Ce7tPmTPFHOqD2gISg7kBZXvUDnmTwZaKI9yMb6vCgVezzlS7Y9
                      M+t3vTpjG73+zD49bWKNvTUHsz2QxjK8VUOcPYAmhDoyd5C9ut1lPaBtvTuwOra9Dl+ovfKVGz3I
                      vbk8lkGUvREyiT3aLYy9xU2rvblguz2a2Iu9dE3UvGEIvj1peJ49SEKkvdjaODztVom9aHiuPNA5
                      rL03LbS9ADzbOkDJJL2ibX09hK3bPG5+Xz3ocri9QOgaPCH/sD2UTwm9RgwpPdn4nT2NUh29WfqR
                      PadStj0wmik8AmKFvc+lij0wkWy8Lvc9PSDytL160Re9gNpaPJhDezxLa8y9t+BLvUqAtr0OnJy9
                      WyCZPfpQW71jOG29Gn4lvSnFoT3gX+C74Qi6PcKXez2wUmK9KpgFPXi/yL26b5y9gKrAuyILCz06
                      1jk9X9awvfLio70wj5W9MHQbvbBiNrx9xnO9Iq91PdBgv7szYr89t/uHPWW9xb12q2E91ik1PfTD
                      Ar0SDhM9oHGKPGrfg73uQKm9IjPHvfpXu7146t+8MDYGPM0IXL0HByq9USDEPXJsIj0AA5Q82FEf
                      vFwfhL1Ynqa86jRVPZRi/Dx2cwq9LWS3vdD2C70hCIg9Yp0VPaISu70goOq7PrZZPS5scT2FCsM9
                      ssvDvdC7N7xiazI9mswzPcIzZj1ywhg9P2/MPZGrvD1FJ5M9FwOgPRY/k72E/fg8SAKJvP5dgb2a
                      H2K9h4uyPSfIu72Txci94FCMOzJAor2KAMG9to0MvZAhg730Bek8+BmUvHFBrz3JCsk9oAXOOwAq
                      ezs4Hqu8gOdjPMkQnz0Aqy29d9FzvRBaRb03ai+9EtIuPTYYC72eF6q9RJKFvaIHSD1hNYM9V+Rq
                      vRiK2LxoCmC82N7YvPjHt704UIs89/gjvZ0Llb3Yb0i8PEIUveLyPz2AfEq9vrFQPYwMF72Q7Vu8
                      SqpIvS8JkD00FAy9WJSMvNINVD1w9TC8zCnwvM9Auz1QScu7YphePVLRm73WkxC90mspPdQLqrws
                      vdQ8d+tQvYAFqzxUedQ8FgaKvfTx2DxXzpM9HLYRvTqFir3NRJG9gM5IvTKJnr3LjbE92iOgvaCb
                      W72A1ii9rI6iPBhvALywsZi7zb6EPTBSsjvLHJI9fai6PWJQYj10rZ280BGsvaVWkD3yIQQ9ZdjE
                      PRk7kz0GLxK9ABwWvIv+xL32bAA9TzSaPQ3UMb3tH3m9QJvpuoAeXjpKkaO9F/AgvSgEJrxHDLS9
                      INWcPB6DIz199Ce94I4TvdjXZbx3mbq9F669PaiEiL154I49EGM5PNBPjTsUTsm8qEi1vBqDIr2D
                      PK+9qjx8vcouEj1NEaK9g5/DvZDUVLxA+Ss8bLX7vOP6m71miQY9GUmTPSwzD71iyUQ9vgcqPbLX
                      bz2v87m9QMJYvDarAr2jxIk9CslEPX4yUT3dHGS92MbKvIzMxjzAFlm7PJgEveAzH72yFWs9jY+z
                      vdi6VDxli7s9+ADOvLoEjr32Gjw9hq9XPTZkJj3OTw89Mkg9PT/Mt70o9TY8bCyMvF/Jvj265Mi9
                      W+GwvWcsa70wlb47GWKmPQCgPbtLRKS9gLYRPHoPGj3ALlS7TPC8vBHNmD2UvJQ8OmGVvSE1xj16
                      Tlq9j7SIPQyLzzww/1w8IqZcPRm7ij13aow97NAPvX2HPL0YR5q8yPP+vOhahbxYblI8nbUpveOa
                      qL2qeTY9hSqnvYbgg71boqI92K/kvPSDgr3WdSw91io1PXMFTL2MV++8UK64O/wH3TwqhaS9Aux/
                      PeBKpL0dO6u9w2mzvSgpnzzAbJg62OcBPKN9ML0ZUME9bDbQPGwllLzRGbk9gA0xuojNirx6ja69
                      43YzvcNymD00fQe9dmIHvfXryL2gWJA8YIS/vHT2kDwBt7g9opN+PYWpnL2L2J69RWW7PZiwB7zN
                      znm9DZt0vVGvuD3DpsE9GV+pPXl2yz0IE8e9BSazPRBIHL0auH+9tLzGvIett72j6pG9uGaJvQj5
                      xTx584I9rpNVPbayeT1q8WA9Ql8cPVYYdD1jAJ69MITku5KaIj1oyBk8zoIfPZeHmT1awDQ94EqG
                      u/gutrxA58Y6hNPkPMQ93zyWXT49Dc2fvaAxdTvtJTe9ENlQPLm6kz2BVqw9DnJYPez3lLw1L7a9
                      PRZ6vehGurySbCw99ITWPNSc2Tz1E5O9RBXRPANXU70W+BM9QxWEPdKuv71xP4o9FMnLvKB3FjvY
                      f3o88kBWPRS6uzywLuI7L/fBPSwamrz6xms91ODEPIPFyj0E+Po8gP3bu9ojLj1i4rm9Kr12vRcE
                      aL3Uq9u84G6Vu+lcsD3O1lc9INAvvQxb3zx8n/M8MYauPcKfwL2A0mM6Aja/vQwO5jygpYS7ZlxL
                      PYKBLT0gLtM7AOR/vVh68bwKh0A9GBKfvP5Cbz1mSQo9iqVPvVIlir1lbLY9AMAtvPhXur2yfRE9
                      L6m7PVAZr7tqijA9Gia1vfKZcj1uElA9gCBVPLTn4jzwHwQ8GGDfvI2Tuz3StJ299e28vSLptL3F
                      TYi95iJQPcdySL2yhMO95n0sPcAI6zqASaY8kLUTPGr1eb1QWoq9gqtUPaLQRz2zJhy9JCDkPIHi
                      gD0dbpE9hWLHPRhigTyIm6G9tGX/vPAWqr0g47y88BEuPLRbizzMzZc8l5tAveDLKL3Skzc9LWol
                      vZRozTy6xKG9GZq/PQh2oL21FqU9fXAivX3/Hb0ptaA9gWSwPcCUDzsKE4C9X6qwvQytlDz908G9
                      bBIUvfheqjwAKtc7MNYbPGG5yD3LU769T9+xvei2MjzT9Rm9OELAvYCGSDwR6Zk9LZQvvcbxMD2G
                      Mw89U+0vvXGmjz17ea09iUOjParlIz1RvsQ94HSfu3M3pL1looC95iMOvS0XWL3UyBK9WRS9Pb0H
                      wz2EOIO9FnVIPb55Pz3JfME9p6E1vfJsYT2m5KG9xEDgPEP1oT1EatY8TuM6PVcybL0oDQo8dCe6
                      PJABeTwYzry8LKzUPEq3Gb14Eqk8QByqvbqwJz3hNZc9NSmbvYnciz0iHC09M9OovTj/xjzsXK28
                      zUp6vY5gqb3gqc47RtsxPXsqwb3AJVA8ciQBPcc9QL3Ot089UB9fPIQS+DyqmYK9kztnvcyq9TwA
                      D2W8gCUzvVOwYL0euZW9bBfvvOKLcD0tL3u9JmsAvVCSsbspY6M9kkdxPSePhj3WOSQ9gNJ5vNoV
                      Tz264TU90nRcPVL5MD2ofwQ8JeChPfhCpb0RqKc9AhJ+Pc+yt72DtDq90vKHvVNQw72gVCi991WE
                      Pa2rTr11mbY9+JyNvM/OgD36Hko9UklrPVn8hD3wcVi8iV3DPXJNXT03nKM9QONJu3J9YD3yIzw9
                      gcCePXTOgb2ZL5o9v6rEPYXHm71cgPo8oCCOvLaVMT0DqJC9hezLvdVbxL3TG1m9AI1vPO6Cej2A
                      B7m7ppI3Pe+Dmz3jETK9KBQ9PFeWer1euY29sDXKu3EnuD0Rd7Y9QYSJPZeiYb0SW8W9ed2ZPbJz
                      QT1aRJy9q2+aPVjDeby506g94GmUvdZocz0A0ui7YHXbu1DQG71qXRU92RuXPW6/dz0S3Qo9kIpR
                      vDDfu7vQ85m7NAKHvdK2aj3Y0bu8Lt6VvcLJRD2LNsk9gLToOw+2rT20fPa8IwB8vUWQob0uHqG9
                      qOSMvPS9jTwXLCq9mQLDPVqqkb1M1t080ve+vQpqAr1fbro9GD89PGw5ibweqB09oGutvFCjFLxa
                      vMG9RhBDPYoaj71smOS8Wq5OPUiNqrwDZ8u9ErtHPejmj7wgk6Y74Av9O5dwdr2b+MM9mK/UvB5t
                      CT2YtnA8hk5lPaoJJb0Wgge9I26UPXVPjD0puJw9aEeNvWo8BL19DJK9H5qBPQnbwz0OiIe9p8Fo
                      vQ0TRb2Mvf08xxYlvdT7zzwjtLq9EDMnvMCDxjy4LcG8MEZovBadTT3dHKW9uhZnvdKRCT0plrc9
                      NDLmvOznvLzSoV89wM50u7gw5Lz7yba9g7+QPfIEJj2Y75a8qA2MvGKhmb2Au5e8LBMSvdMlpL1Q
                      hTU8wMmLPI39g70QszY8Y9KxvYAA+btd3GS9Jg0RvYynw7zs+o+801XDvUfqTb2ApKq8WqJcvfmh
                      nj3A77O8ukx9PXSmorzMHdk8rC6XPGL5lr1vN7y9cq1BPabGbj02sKu9dP2HvDwuE73MS/M8nymx
                      PY23hr1gy269t0FSvYDzgLtqolu9SXuWPaFIsT3SQC09zsF2PejYIbyAuiE6xVqmvXFUwD2LxZe9
                      FeCNPYBWl7zQXBu8aJosvNRh7DxeVCc9XDrqPIjP/7y0rI08A2KhPfIomr0wQHO9QzhVvchtsDyJ
                      /6E98AdTPPMbvT3AjMY6cjUbPehQxTwnEDW9F7hxvaMwlr3ADJw6AAUHvWPDLr3eyEY9vcBXvcBA
                      WjsyMkQ9+ibCvQBLTrx4iIO8dIidPPX6xr01ZZK9q8qSPWnpjz1Gp2I9QMuIPAR+2Tx0MA69AJCA
                      O8BnA7tkbOQ8I9lfvZW4oz3C0669qkp9PRXgij1jbVC9rZLIPSCegzxzzq89tUHLvahnnrwyUTY9
                      QACYPJ3XoT0Kin89rC6tPHOQmz0GtFE9DFKEvVSl0DyhxsI9o9ScPQFniz1VK489AF3FO9rplL0K
                      9Uq9tOC1PG0DNb2Y1Me9UMv4O4AeHDyQMTE819pnvfyr9zxA5km7CXahPX7MFz1HLLM96CpNvDBB
                      rr2ymwk9cBphvICxq7wwuv67cFJ5vfTKk7xZhYk9WGEWvMPHG71S9iU9AnCNvUBtfDw4YKu9qQOZ
                      PdpfYj2KmzE9ksIGPYgSx7yzX3e9AGjouACgHDzSCCk9IxfGPRJuaj0mhgu9i1WrveJEUz26dF+9
                      a5yYPcxY9zxy5R490AeEvQQv7Tz+nkk9hTW8vQisoLysRIc8sHG6u7ApUr2Ulrw87otTPepRfD1K
                      p6G9V2WwvZlomj1uGaS95j9SPVUZur0pQsg92AyuvZJ0Oz00Aom9HTQ3vaw66rzHsDW9yDbIvJg2
                      SbxMZs68QGB2O/D/Ury+6yQ9rSyYPR5HTj0Ycgc8bPrRvBWKwL2ZEpU9sE2JO0HXoD0lEoq93mct
                      PajYI7yg+rK8o5kqvbKhYj0qbko9UO+WvaztubyOZ2w9WPR1vDfvZL36wIK9rdufPQkdoj2Iv4k8
                      AIjJOxLZk7334Mg9+XatPVniyj3uKkE9BIIPvcagAj1QbEi8WOEJPLMYR736rRS9FwNzvYJRcj0z
                      MqG9sNKfO2picj03mZ49mPCPvAATCjwQ2Qe9UEo/PBj8jL2Y2n28Wr8+PVgOx7ynQm+9mUucPQpO
                      wb0Mnqo8D6yuvVQcsjxN6R+9OQqbPYQY6TyxVYg9/463vd7OPD0AyWu6jCIBvbyLhb0uTI+9fo4N
                      PdA1W7yZXsQ9+o2FvfVNpz3okps8bW9KvUB9qzrs/Iw8MCxcvD7Gmr1YHIi9l+y8PVg3pDwOoWI9
                      qmyxvTWUrr0w3Ay8wIzwOgAq/7z6Fks9o9GRvXOke71Hkp09KlJSvcAgqLqqbBo9IAmQu7qeKT2K
                      nle9f1KwPZinzrwynwQ90OYhvUCjgzoClMq9aUCOPYj2gTxXjV+9elUavT3FUL0/HMu9B/xhvVKk
                      bz3UDq08ETmLPXSZprzUVbq88rZhPfrLxL19sCK90zi6PWrdLz1zwXm9WPRpvLENnz0y4T49ewqb
                      PVmOwT0Y6oU8cNdZvVpXDz1KlTA9qFMSPD37pr3s8uq8yM+JvMt5sr0A9ui6WqgPvaYSGb12CHY9
                      oM9UuzF1xz3W9Iy93jqDvdjawTwqD3o9xN4DvWgVITzKVhi90K8AvOzb+jyUouy8k7qGPYCtFL0o
                      whi8wgBjPbqwyb0a7Ra9/xmPPY7dET3w6zy8Fzk+vbQapzyKa1i98K8mvSilGDyyGyI99kcQvZg7
                      JzwCGZ29LB2FPER06zz0Epq8vLaGvcO4Y710oAW9MDAPvewinLxOnD89cgSCvcB9RbsM+dw8uhVg
                      PZ6/ej10aA696MJ7PH1Ipz063Ba9JzIcvVX+pL1g6Ge7IBT2uz4TAz0wlDS8mH3DPDBD4ztHLji9
                      c8aQvTFxlT0xncg9U8stvYApyTsA53Y8jhkEPduMx71d4aw9Zow6PT4dbz0vSbM9fB31PNQCtjy/
                      BMq9YKVqO3mcmD3TLII9DXAavf3mu71wUcy9IIONvWBZeruVlZu90CyNvcj2n7xIfbA80o8EPUDS
                      TTveWQw961S7PYfFiT2J9I89JNcKvbCFHTygsBy7wxt2vRaiFT0gjDu9h72ePUKJKz0wbkg8SMDK
                      ve6eTD1j4cs9OXmSPZTThb0wzyw8RhNqPTV6hj2o0nO8GE+HvWzxo7yDE6M9OLizPLrIcT1QLvQ7
                      QJQ0u7dktz1AEOy8QDYIPLe/kz1Px5s9AB+JvPpQGr0AQJm5ng2Pvdp4Zr2zEKA9pzGVPajWtzyw
                      Z5e9IFJjvd4gmL3SSms9XvlbPb5CHT1ogi88bwyxPRqpTz3zh8u92ttrvQkjjT2gupi7WIcDPDct
                      U706k0k9XXZFvQpsxr20LPe8u86MvbQYhjw96cg9vBnRPOCHtLzEwwe9VSXDvTJeVD1wz0O9sCT4
                      O+DvgDs2YwU9K4aQvQcUmT0zyK89bcqtvahLdDwoW7Y8qynBPbQRwjwm9RI9Bf2nPdhfbjwj/SW9
                      r/imPXLZYD2MiNY8DEasPONMhD3N46a9Q+eVPfxTDL0jakO9enHLvULMWD16hgm905q4PadxL71+
                      FBc9Lc+QPahLHDw/88A9AOwpO4DYgDugZWS9gJngugCN4zkTnyW9ctZuPeDy5bvMzdI8oHHPO6N6
                      ar3W7nE9KuDDvbmMpj2MBvA8whwAPY3pyT1aPDA9WcWAPQ0hKb1Wu4u9GMemvcoABj2yfTs9vYvM
                      PYlYqD06NDW9NqaVvTBcYbzgC+c7kl6MvWAMmzv3/LQ9Jt9YPVgB4LzM5/m8ZMAJvcjFj72E/Pk8
                      cAwWva/puT3oXXa8YgJMPe1Uoj067Kq9ZDLiPBD1FjyXcci9YyOyPR6hZz3GFg491vQ0PanOgj29
                      kMO91p0fPdp8g736sX89wopaPRT90bxQP9s70qQfPU49Lj1F08O9msIbPRcpJ727UMs9YPkkOxJD
                      vb1Yksa8QLX+ulARA73D/Uq9s3lAvZjUijwBRo49w79pvTpYV72m3zw9p6uvPaDVpTswcaO7tP6a
                      PIg167ytt7w9M118vdgEgL2AwJY6oJ9CO8ekKL2OywA9k4hZvQc1er0oHEi8HViDPVKEdT1i6QA9
                      oa7CPcdvJr0Spgc9HIXQPBn6uz3lgKe9irqive71HT2mnlo9utBFPYD9BzySMig9yA/QvGD8cb3Y
                      H/O8UP5PvUC4GLzIV9+8SFfKvMZUIj0SjjQ9utYrvfBgrr3QrE+8Mh4hPeofLb2mpXA9wJENvdSO
                      rbxoh0i8Qme1vcNVkT0+Ap293NjyPOAeiDyi1w497twFPbIInb1k5P48+hYgvfMXmj2Yvpm9AGDh
                      u8yAr7wK+DC9KoAtPbN7sz0A9NC4QCWnOghIob07QZE9qIE0PNQoCb06x6O9RDXqPNMbb72svOO8
                      eiZovZ6Mqr28Iv08SFeQvISy1zy3ioU9na7BvSTrCb23pcG9CILavGGjpj3t18c9jm91PSgLtbzS
                      Kxs998JNvYklgj1yy3E9+AbZvEF8rj1w4G28fdW5vTQimTwAGjK8I21qvbfiV70CMBg94u1XPUjO
                      jLxgLKI8SplCvZcuvb3sDfq8WGbJvEAHUrvQ3To8jusqPUNPQb37VsI9cr05PRGyvD2IgJK8VJ/R
                      vOg4B7wsj/k8teCQvbA1bb3V0bW9wwmRPfsitb1ygkE9UqRuPbTIiDxtLEy9xYjCvaLWqb0HWVC9
                      DvU0PZrOnb0AcEu4ePunPDJsNT2hQMo9Zkc1PSgrH7wevx0986RIvV0CM72guma78254vTiLl70r
                      SJo9MMDPu9QRxTxW6kI9ZaKevWwkpLy4rpM80caFPRxRA71uu3g9aLJPPJnSoz0w+bO9LZeHvfDa
                      wr3WgRw9lzKdPTZyRD2S9KO98KZ9vN+noz0AmFY685HGvY+Mur1ZKoE9ip8tveRW4zyy2Ia90gwe
                      PXyzCr2XBJI9vfSlPQBWX7n0yZm8d6WDPQBQH7u6RwK9RkkJvVAKGb1SEzg9geKQPdMPhj1Iw928
                      zeWUvQqWdb16qlg9juiQvYD6cDziKEg9AdyGPSgpY7yIT4G83vhoPcA0n72MQKC8Xay+PSeQrb2K
                      VFA9MG1TvRC+bb0ixmQ9BJ4AveAK0LvRFIo9kzGcPRVIpj0EFe88nLkNvQcfcL2QgQS9rZnMPakC
                      oz3MXcC81PWfPMR68DwQ2mK8YH2Zu6uKyj0CC3M9LAaevAaYTT2gd7w8cTGkPWwmiDwoD/S8QHO9
                      Ogz1Br0BI5U9suqVvTCEYr2UOte8Zq1bPYy7jbyA/YS7GC84PEgxqzwYNqa9dJKMvEf0sj1adw69
                      kVSmPRi4ubwA1Ge6WoMUPcg8zrwBz6A99g07PQCGOTst0nW9p0J+vaiw8rzy/F49/PfxPIeqK70J
                      mZk97mVzPVY/CT3C6kc9X7C+va0qHb0A1Na7jQCyPYNspT3t9UK9IMGCPFKISD0KXrW9FM7TvKd/
                      rr2WfUM9PgGAvQISDz2Ajy+91SnBvWZrAL00rf88HTeTvbDjsbvYj0U8+HmdvVpeZ72wbGo8SSHI
                      PZSMF72QqnW8PDfWPHYbi71JLpw949S4PSDKyjzoesg87AzCPALRYD1MFvO8RukSvaMbjD3AjF+7
                      IjdOPV0zwz0snvw8kPFjvZ73Kj0N7mm90gFOPfGJvj3AiCQ7rPyovMSn0zxzz629hrUCPadEP70M
                      L/M8QH2aPGRt5TxMl6u8xlsxPY3ej70Gio298MUPvDGhwT2uEoe9qPiCvAYnAz1Tb4M9SHy5veg7
                      JrwA9Z29sP5OPCr+Jz2US+w8OFyLPOZln70xbsA9CdKLPUo3GL2/LJU94FWaOzAQWTzYrq69ydOV
                      PUrrwL0SHKW9KzykPeVynr2eIS094OGOO2YRYD2wlbO7j6m9vSCx9rx9v8u94W2wPQfwij2B5bo9
                      0GYmvL9Whj04UsC8xUWJvfVEmz14Np+9QGkOOwqsXj20UIM8N/eDPekwoT2dOrM9O9WUvdEIjj2e
                      2UE9QNyfPIrUXb3j75S94PP4vOqTJL2Yb3k8gM2WPHjeobzdebk9Ai1pPeoGtL3SpaS9ROjjPKPY
                      ML1wtjK9QzOavYBhiDv2sls9oi7KvaJ1QT3PLKI9aqQ5PSOcuT3sCLm8cE7Bvd4Jib0EAf88qn8A
                      PbAqKjyGTkk9wQiBPaikLrwACWk62Pa7vRWLjz2Axg+9UPIFvbUgrj2thaw9dT+Lva63Hz0AFwA7
                      bL6cPLK/AD0McMQ89FDmvAIYXT1Ulhm95FPePPIXx71sAsu82FZwPGjnZLzopPa80hunvQAYMTxL
                      6I49zSGlvSQz1TzyQ3c9IDVkvdEMyT2gu+M7qkEnvcBgqbzoESC8MOniO+izfLwoxRS81Re7vVjP
                      Kjy66oG9pnBtPdBH+ju9DMK9U09ovbqEAT01hI29OgQrPQ2Nfr0qBG696IsVvOw19TxFaqa9jMn5
                      PHqDAL3LBoc9KPPlvMIIcj3gCck8mP6aPIyKzLxMebc8oZOIPXRH2rx2ihG9kDcavTWpmz3g9oy7
                      qOuVvTgTw705u4Q9czghvZr1Bz1CLy49khOHvUcdyz0VKai9yzWevY/Tyr079MO9lECWvIjIlLxk
                      k/g8fniEvRJaob0uD0s9jXurvWjcy7yT6D69j7+uPdhUFrxxZ8E9rbiQvZ1jSr2Afvs7wHUIvaFr
                      gz2AoaG6oKWLuw6ODT2PsIk9SEzUvEsZuT1Fzpo9kIMEPKdgfL1ziDq9qPiXPP05rr0YNZK8LCvV
                      vNPXyT2gq6c7R15HvQDUNTwA0x462K5FPD7dFT2jfx+9OC+SPLInPT0wFBa9eNHgvJf+kj2Vq4O9
                      cYiRPX4qEj0gfPK77QmJvdCMsb3ASA277D+KPMBqbbz0Zcw8WJUSvHFxgD0GrTo9zD+ovEL6bD2L
                      5oE9r4aWPUYpaT3qlii9uELPvH32v70s5hW9ogUyPT8vwz03uCW9gE41PLp9DT00kZe8WgEUvX5z
                      l73UtfY8WO6zvbD6Eryg0Gi7LLy3vOOvyT19LLo9hVe5vXAbnb1ZNso9s0FWvTbMeT3cjeM87JKU
                      vEN6KL1FH8e9gohPPZiEMjzAPES8LRGrPSaJDD1A76c6aiaavakzij1zQa49lNuePMrOCb06Mzc9
                      smOvvQBkF7vA2qS6gGfauoCCB7xrFJM9EE8XvAA6prmYOJi9ALiuPD2JTr3uZZ697uCivSJuZj3M
                      nI+88BtuvAI9Sj39M2m91u0jPY/7wb0vuao9OugXPaLXYD3bK7Y9oHQgu6DlqrwwNmQ8jMTVPMxv
                      nDxg7cW9GbOhPVAqS7wF3sM9QB6aPDVTtD1a1AE9CMyovRANSDxc1Ok8CnBDPQnmtD24Z408qghR
                      PbSHDb2jo4k9RNwLvYZ3Bj14AcM8KnqovRRknryBjpw9oHzJvOCerDsmMSA9lUbKvf16db17R5s9
                      DTk5vTgxgL3q3Qe94L3evO2qq73ljcc9U/hLvRFsiT26ZRm9A3VOvTN+Mr0cR/88y/bHPcx3yTwC
                      iic92rsUPVsEuz0AzAw8MLS/O+D26rxmb109s5BBvcBuxboqx5e9RO7TPEFbvD2If5e9gN0OvPCM
                      LLxAGyi8YCw+OwrQKb25JJw92PgVvG4OZj3WWyU9upR+PTEarj3vToQ9AyujvaimRbyg4UW7M0WS
                      vXraKr1ipMW9gPpcujfZub2AhWO9cokqPYHRkj1iOnE99jIwPWMtsr3I7MG9cuZfPaqPFj0UI6e8
                      oTfMPZ2okD3HPq29+8HFvbBIortM44G9jXScPZKFPD3KjjQ9PtZXPahngb3w/QC84vm/vdhgr73z
                      t749pw+6vV7jAT2SeBE9CEqxvZmcnz3Qe0G94kBUPXA0Nr1YIJu97toKPUanYz1oij68F0pIveHR
                      hz1KKpK9YN30u6AWR70MU/I8XGzaPBdELr36QEI9c6hbvfQL0LzsroM890aMPcAuNb3Q44C9WUCP
                      PbBPgL3r1Zi9yG/HvRzO+DwBMJY9ZzCAPcCsCTv47oe9vY8jvQ2RQL0wp6a7TWOGvXPtV72wuFC9
                      maGJPQDmfbnQXle9/qupvSJliL3+m4K9sC6Ku08nsb3tNaA9V1CQPYUckL1AQFA7KGuNvPWGnb1o
                      eqG9EEfHvUvYy73llaE9mKefvBeeU72mdE89x93JPa1loD1Twq49VCnvvDdQwT3Vt489aKifPDhq
                      /rzKF2g919ufPc8Zvj0wNhG9IN29u3g917ygnJS7jqQgPS9MzL0bJaG9B9UovT0CLb3a8SC99a+6
                      vSYUGL05/6s9ySaRPYbXQj1VGLi9Qe6YPUx49DxaRLq9E6HJvaLnMj02yB89YFmxu9e2sr1AK6C6
                      TUtIvS1Acb2cf9I8/mclPWeInD0ohu28Iog8PbCO0bugeks7CjY0PYoUBj2hzJA96AOaPOg1FLwg
                      6rS9gPs6vZ4eST1BcIQ9jrRTPTu1qb3pxYE9QCpgO34qo70w74O7s8ZYvVD/PTzQiKU7a47GvXYL
                      Rj3/NIU9MnErPWodIb1uMqO9kC0+vJvEvb2SzRs9Ax0tvdBot72jSzq9WTS/PQ1gib1QKnu8FL/b
                      PM3BZr1Y5308JM3pPMJdbT2BVIQ9u9eqvf7xIj3oinm8QC+fOgBEj73c7808ApY2PYwcBr3AHP+6
                      ZnwWvapslr3Tg5I9cuUSPQj7qDztuq89mN73vFNSSb3InsS9gHv7u6fztT3Yp8Y8KdbIPfBHBzyM
                      feC8Cw+NPcq5gL2H7Hy9GPUHvEDdZTsYOR08lMboPKCCjTsKTSy9VRjGPR5RbD0wtGS9UFckvap1
                      w71x/oY9m2uJPZN6dL3X7b292QyNPXoDrr3yEik91ioXveviyD1j7sA9KqOCvdLVKT1tLCW92pgd
                      vXLoBT1U+5G8cFZqPILKx731s5W9QiCRvRwvjL0ZBpU9AEqqPBpuDL1w/2e8oS+fPbZpdT1p5ZQ9
                      DJfkPOvCq70gnrK8gHIvvHmykz0AozO7WFZDPEcdu73Xt1C9rkIyPawBobwQBkm9vUyqPVBqIbxU
                      iqk8AozCvXKHJT06AMq9C3OYvaGzkD1RzKo9gPfaO9dlH71mcpe9cEloPPRn1DxOQlA9e4a6vSUJ
                      mb3CczI9EBpevRCgP72DJUW9IGLtvIoreD3Q8zg86m+BvfRB+zwMOYK9BiI2PSA5+7zYZt28oMhx
                      u9KKZz1ieho9UEFQvCCMGL1A3kq88oeBvcAHGLvoALi8AAFuOwdLZr1kMvY86LmuveVwjj2umzE9
                      zbGavWdBSL1CFDQ95YaPvQOGgz3vxYE98NhZvBohfD0aMsi9Cj0jveDO7jsSVIK9TWKCPRQ/tby1
                      m5M9LKqBPHOgkL2sr6w8gOveOhgPFbwX4rY9j9WnPTaFBz1Nb7U9P/u1vWVUqL2QV5e9Dh1yPWK4
                      MT1g8t87dO/oPAA4YDsra44986fGPbbwJj2nwbY9wcW8PcO7Ir2Gqlo9IjOdvT53OD0QADO8Guc4
                      PcFXrT0Cpyc9yBzCPHiRgr2y3Ds9cgYyPQS69jza/L69wq81PfJ1Qj1NQso9XE7lPLK8Mz21Lco9
                      uRKAPWlgqD1AwZM6IHMavaWOo71HtDy9YGbROwCdCrsiTBI9wkExPWsAv736iiq9MNaZu7+gtj1h
                      JKA9IHSHu7fDgj2eglQ9VHfFvCMgrL0gkpi9Tg8OPa2ynD3KRI29gCFgvLo9TT1CgBI9k6ylPYCY
                      UjwTIRq9gBiYOznztD0P8q09ONuEPC9Mpz3AbV29SSWbPeK7Zz0un1A9w9KXPbD5C72WBUg90Hgk
                      PEBNF72idsK9NEXKPFncgD05ELA9oLFyvRL8Qj3DX8O9aZmEPSzOtTx3VzG9gys7vQPWwj3QYbw7
                      MNORvSSY7Tzg1Si92uAUPfqpWL1D77q9AlyLvWxTtrwARWE8rvB5Pbt6wb2a7hc9x8KePZIlCD0J
                      Ca49eiQYPdaUZD2mJmw9bxjDPQAkprz9eoK9Mt51PagPybzRi549wFuEPAy5sLz0hOw8nUmevebI
                      Jj0STMu9mA6mPO0qXb2978a9s66SvZqnXb1AjjO8sLFuPGgvQjyB4JM9IsUNPcRJ8jyAm788wo4c
                      PUgxoDz7Bre9k/aWPb//kj3fIJg9srhNPS4ScD0yUlU9oqO5vUCZLbsAyZY8MBmfva7tOT1NTEy9
                      cA87vXibu71yLp+9KryKveqbsL0YzMi9UiIiPTkfjz3AAyg7+WOIPSAhBb0g0K67+g1UvQq9uL20
                      vO08KIOPvQCwOrnoPGk8AhQ1Pd1Mtj1nQ0y9bg4aPcJwZD3Ust48daayvSYtjb38xwO9GbGIPd2t
                      H711BYW9u/uNvdgDGLwgeNk717onvbaVg71v6bA9gNXMOujSxjzKM6K9lNasvBB2P72a8Zq9rih6
                      PZqGKj2gUTq7WIFBvPZPTj3dyHu90LXuO3BeebxDjqo9wMMNO7KVWj1kKfg8LlU/PbPipz1JjZw9
                      KuulvQzo0rwSulU9bYu/vWmevT3ieWc9laDEvaWLpb10nu28VOK3vHkXxz3Aeqk8502uPRtnmz1K
                      jG69kOdrvGzZhL2KVno9mNfrvAPuX71QQWW986agPdRw3Dx4qZK9THOoPHrGU72TgqG9I7o9ve3U
                      oT2AI6q8oNRpu52Zgz1ubQE90hZEPfa7D72ovzA8PSegvZ3JfL0Kch69KP9aPIBi4LtTJL497Lqs
                      PNkBuT1g84S71u1BPTMMLL3Mod+81IsIvVVOlj1JfIw9dEzbPOhFtr3Izr08V9a7Pau4vr2qpHC9
                      Kf6OPWo6Fr2YWcc89aGcvXxy+zzldbO93pEoPZ+cnj2gE3O7bYxfvYdQtr1wFBm8qvsjPV3LxD3j
                      l7E9q7eZvXxRhL00VOC8Ys4MPcm+wT2QiKe9gBysOvmQmj1wFUI8uUXFPWl1hT05Ppc9Z7mjPWwY
                      lryDbR+9vV0jvcqnbT3aqAO9DKbMPMfyjz06X2A9FHuFPHSnszxok7e8ZiBjPQc3tT0G34i9JpR+
                      PYiNhLznm8O9aG1ivECuUzxo9E686C9NvFX6qz1ap529giU2PXK4dj2zBrA9DtMNPYcCdb1D6z29
                      A20pvZj8r705Qq09+GSYvdjphbytZVy9KFw8vAJMrL0odOO8Ulw9PQC6RLlFp6e9YB2UOxhTEjyt
                      KZk9OngiPehphzwverw9nYCFPdhJybx0aLc8gKh+vIu3qj1cfdg8yEzJvS0mxD0Bu7E9AXGsPXDi
                      fDz+ShQ9Jyu5PWMkM72KkQG9ZsExPQZuGj3iwr+9+LnCvWHDnj3lMsE9ElE/PSJIAz2QliS8x6ZE
                      vTCsnjtqzmG9Ck93vWVWub3K1Mu9IvNMPfCBCDz3C5c9rXmVvaeBJ73cPRe9FZHBPTo7Zz2fhr09
                      mCpLPOUHuj0F4cg9qSySPcoBYD3XATK93kFpPVELpD22kwG91t9VPdsqgT1gNim7BHr8PFAZajwg
                      tJk8zHeBPIdIpD076aa9Xj6SvQAFU7yNbcC9B/1rvQ1yw71u4gM90wKnvds7r71rHMc9jOTyPBAD
                      PjxUZ7i8PVKyvSBrzjuoLkU8m2mJPXlLkj2Me6s8EY6XPaHpxD2AOiG9AP6dugjSs70bHp+9vW2f
                      PWoXAL3h36k9UNnYOyjxWrzYeD48In9SPcKvjb3sh+o8YBNyO82JvT2ErvY8cKqlvaww3Dy6ZE69
                      aKOGvdImdz1QPaa7GGpevKJ7MT0dsJA9aLlhvCjQHLyYo/a8QKskO2IrWz2hgLI9J4soveA2Qr36
                      sGC9G6ibPerTBj0uRl49t6mZPWZ5Zz1M2sM8+H2tvE4GYz3+6wM9lio1PbbiOz3q+hA9iXWKPWak
                      dz2IOJS8mWWfPTURnD2fw629XcUcvRegdL3AKiS9ydCDPYB5LL3iCsO9TAEGvaOEvz0lKsc9oACe
                      u0AviL3mmXc9NOqTvKkSrT3jwpg9qs0Uvc28J72zmX+96/bAvXtMkD0gmc675bCYPQCET72/ors9
                      DXA3vZxr/Dz25w29uSCyPTIBdz3M9PU8MKqKvYK2Rj2NVoC9BpR6PdIRXj1lU8I9fVtEvaQihL1H
                      3Ca9W0Ghveq8gL1+OiI90BU6vdu5iD2IOI+9zyzDPVoYBr3qvFo9t164vVmJrj2Ud4I8mP+CvWq2
                      Vj33THG9qXTJPY6oIz0SyTM9EPxlPFcBTr12CJ69BamgPcWIvT0tGb+9rGunPCj7wb26MZa96geT
                      vc8qwD2muyc93AfNPNAa2bv7hJA9YIi+vFAdjb1mV1k9XxeePWQb/jyYqBo8GqRIPchRkb3AjBY8
                      l1UjvabmIz3s8Zm8axK5vdEDxj0rN8U9bE72PCqWHT0PVrI9dpAXPTTYgTwM6Qy9Jxm8vSOdTL1y
                      oSQ9MpFAPTDrVDxyqoS9VE6JPBBxn70bf569dul2PYIycT2AYvY7IHQRvRX1kb1HwYY9qEnlvNTg
                      p7zgm0e9QKF8OypFej2ytZ69gvMqPQDSbLu99L09zKH1vMWokD0B3pI9FqI9PWHaiz1mnQa9ENoX
                      vEAoG7zwnkS82Jt7vFhcvTwYFpS9LooOPSfuwL2g3lm7FgOPvbpCA721yqC9ee63PTNeJr1+zCE9
                      gMD8ukgCpb0Apq07EDpIvZGGuz2Y3GE8o/LAPRxC8Tz4lcU8TpRrPacoR724Tai9+IK4vVBHmbsp
                      NJw9all5vYsxm70Cphs9yaOLPahksbwRULQ9QFSJvV8GhD1jLpS978TDvTA2H7ww8lO9k7aYPbfw
                      ur3THZa9QNuqvBMroT1CzQQ9YPWLvACyqTsyTXw9KtW9vWC2kjx0ic+8YFNjO228OL1Tf5q9auC/
                      vUG5vD0whB+9UM1lPCd0L71HiTq9ofCfPfDlbDwC1AA94621vdojNT0SYwM9RKcXvX4YRD2Qbnu9
                      gMVcOr4UAz20vhe9XX9+vXgplL1OMzQ9jlcXPWoWQb1ybBc9r9LAPdgOqL2IM8G88iZoPYxu/Lyg
                      Cv47DTQ+vZO+nD0aDR+9V9xsvWvnvj3ANEy8N6rIPbIFET17vsM9ppWTvasDvr1wc3G9vXynPehp
                      brxMTJ48L1PCPfdcwz3AwlK8qfOBPbxiCL342Mm9GFhevKWxuz24Bfa8zCDwvKBibDs5ILg96P7B
                      vB8WxD2SCB09KWuZPVV5lL1j0Z29AsUMPfr8RT3cnQK9JLnlPMmFtj0T5429LPKgPChcd7wAkCi6
                      Kql4vVeHNr3VAcY9VQ6mvVKmez3DVUS9yc3IPWQe5Dya+gM9cKhBPGB+xbvnnlq90toIPWZ/az2a
                      6h89CNWAvUPPjL0EB/k8IpsaPejSxr0IKb68zvqQveiwlbzXb729tOePPEy2gzxK5XK9iAD+vICG
                      JrwKZno9TDqUvIDlSLwQ+ZK9Dq0iPbq6bb0bWa29bbS2PZjHEzz6VXM9cFhWvEpwCj1AfSc7Y7Gv
                      vTqsSL0zupA9AIsQOrAbDr0/HrA9M6CRvQyxhDzDwq89VA3fvB12Z70I2b29wcChPeeUG73D7MQ9
                      wFoYvICWKrqAiNQ60CNHPJtehT0wn6+98AA0vH0Dtj1wuru99kCcvbKYHj0oVy28g9nLvcw0hTwy
                      BqG9dDGWPHxK0DyAxmQ8Ee6BPR1Sjz1owpG9erlJvdA12Dvi5VI9ZJPcPKgIu7xUcpY8BBf4PCBH
                      sbz0fhi9tIelvADRWTyCrZG9b5C+PdSy7rxxyJ89xl6qvaX4rr1Z2Ko9PZCnveOGXL3RVbw9g8VV
                      vXKevr1wzHM84FDjO8OmLL1KvJy9gPG+PKLOAz06FRG9ecOqPUr0JD3Ir6G81YCwPcDLDTwqlce9
                      gsl1PRYxWz1Gy5y9+MqyPEBbdzwnyLG9zk2DvdC3nLt0j6i8LnlCPWoAd71Aq1+7UBhfPOadnb3Y
                      sVm8y4WfvbANhDuz3Lu9cvlJPZiIvrxa4Uo9UHbpuxc2hz1VJri9Kv7DvY6toL1gxmA7mOCqPJpL
                      Or3xL449De6lvfMMtb1AlAa7bdQyvd2uvr2+AwY9ANlfukZMCj0NaXe9bvVYPdIepr1gNUm9gPS4
                      O+y25jwGvhe9Wp5nPaxPAL0XK0i9DAa3PMCsH7soCT08qx6pPQeFLL0awY29Jn5ePSifg713jsK9
                      dAyhPGoTLz2inGA9SO2KvWRc8DwkH+U8pDvxPEe8N72ARVQ6mMr5vCoyJj3qAp+9ITK8PQ1qHb2w
                      6048V+CqPd4URj1GOaC9AIDYueDY7LuoNe680PN6PKD8D718iwq9l7d4vRQM+DwXra+96gGVveh6
                      ezyYM8a9gBpCvcnoyz05z4Y9E+K/vcNjTr3FE5e9wlwGPfp/a71ZjsQ9yKipPKhUzLyu0Ro9UHch
                      PNYcXT1gDya9kFVlvcynh7zYbMS9vqeJvQ/rrz2NdIG9ykIHPcABK7zE2dc88DA+vTfsJL2DsFu9
                      F9GzPVYGdT0gPce9A1S3vShhz7xq9mO9Fm0aPZKrnr1kovY8nC7TPOQQzzxodz88oM6HvR1Hwj0Y
                      8Ya9IACTvE/Mrz12L5u9R/UZvRk6yT2hwqw9NNL8vMDu4joPpL+9FZTDPadclj3KxWS9fk0bPRgB
                      f7yoxGI8KRqhPeY4Rz3aOFa9qGffvNX0xj0rXsY9T2+uPQ0fjD1IBac8Am+jvYOXsL3MMcU8aDlA
                      PEpLX70jv2S9sm00PYeGeb3iqLG9ABTTutCKyL2uF3c9ChVfPbJ5mr0ArIC4WD+5vBhxnTxgim27
                      0xYdvS02Pb0GzTU9t2qvPTFYnD0AIUC89bq6vWgA/rxQoCW9lyx/vYrIQL2PMqY9cYm1PXflGb0o
                      M8I8YDSmvPDUmL1QYdM77M6TvIDuRrwU2ZW8sQeRPRqImL34Hae9366qPYCBP72oM7K8mtJ1vc25
                      Hb37rqy9O5mlvT3gvD3eqgg9WQy4PScvtL3gKMa8AO0kO4BFbboEZdo8+27FPauUyT1om6U8Y2O5
                      PTatjL2wK2g8w/uNvaXJmz0AjA25e8+uPS2iXb00UKS8v7q6vbTMrbzPvoc96YagPSgdPzxij249
                      ydjHPRfIM71BfMY9OGHBvSc1Mb10qvK8MBl2vGWByD0L1bk9rLIJvZevkD15Nak9296SvU+KxT16
                      YJ+970S+vR7Dgr06BYi9qF+vPIywDr2go4M77NGEvPXVmb1OM5K9VpKFvRqMj73Sl3Y9lfSevd8p
                      wT1+L6O9QCxsPHKXEz2UzqK8LLOzvM9apD3dEiS9tEORPM/qij337yS9mrxwPTTr2rxDVY49OEKO
                      vEOFjr1YNzc8SF+APBraLb0CvgU97LW9vApKhb1+qgc9QKSKvXKLRT0tCkW9MJxJvD2rpz2gp+y8
                      qiu5vWhxCDzGg5C9ECR9PDA7prsspcS82uJHPUDD7rpgsoy8EGdbPFJsQz3ShF49iAz+vHYdPj3C
                      5Eo9emdmPQBF17nAHyO8BkwMvc8+vr0qTAo9GkQavT2zkT1d/Sm9uhNjPfm8tD3GjHA9ndqzPXhV
                      o7yISsU8JhYLPe3GvT1iUB89EzC8vazZhbygD2C7/7SsPQCPF7pm4Ho9gVCkPeITZj36U0o9dvt7
                      PQH6hD2bn6S92FFoPE/eoD1A3Qg7IN2lPK2CXr1ST0E9MqgsPWVlwj0toY69I2y5vRj8nbxbW7i9
                      +OOJvU8fzD2R1qg9M/aqvW3FUL01q7i9sYSyPeB3xTwOqWU9NNL5PDCuTjwdfbU9MDgwPPm2lz0z
                      17K9QI1JvP0gcb3JYIA9LWecPSK/Wz1W6Sg9/dtAvVdcjz3zDco9FrEUPUsLvT2ArJO9hw+zPfNp
                      qj0upy89xkwhPUCsHTwAlUE8dF2cPFpDaj0MWIg8gIagOs9bxr0nPLo9CB3hvGKRHT1ACmg7YMow
                      uyanFj25IZU9gAWkOli6XzxHTMS9GJ2JvAI2Tz1ozAk8MrxhPZig4bwC6Xg9AECzOmCXCzvA5so6
                      1cqIPXfrLb0wHZI7DbWTvbANbb08yds8UtRlPQCb9bnctgG92T+kPcyYxrwII8y9MGxbvfp1EL1p
                      QMw97UaiPbwv3jzA5Ek7KhNlPVDNrb24lcm9JLrdPMbHDb3wuDu9z3iVPZt1jD0ITJ28juCfvaMW
                      dL1dypY9ymQ0PVATfjzC6Gk9VhOnvexF3rwlMY897j0WPZbIZj3+5Gc9HfXIvcAsGruyNW49rKcS
                      vcBOVLxj20e9FeSsPcNEhj2yKVk9/iU1PbDAy7vt9Rm9QI5QPEIZNz39HC69hSaSPYManT16mIa9
                      YZWrPYceKL0ABZq9LCScPIH3kT0VpcE9qEetvPAzqL1NYIe9oZqxPb3xXb3IAZ48eKjIPNc0Ir13
                      UFK9BJXvPJJ6r72aB349WFaYvIRx2Tx5OoU90xbKPdLjNz0hurA98EwoPOvkhD33BVS9zDWvPPo1
                      Br1dOm69kLZtPDAbI70XS4w96torvSe/yj25QaE9VEKpPNsfkT1wYV28W66jvXggmrz0f4Y8KX3B
                      PQAaNTtDaa+9wNJtPBhPu7yW8Ek9Y3nMPYD9WzxS1lI9mDp5vB5PoL1SjYm9+qtVPaMlrz07iZe9
                      FK7cvGt0xz31u7S9g0iYPQ05ij1cvOY8ioC0vcx/0TwdksY9YF37O+5gLD3AFBi8VU2aPQCkOblT
                      xUO9zdtnvTIiNz3QCKQ73+G1PV7BnL0smZM81M+GPM4JZz2T8KU9BAb1PDChjjvrfqu9PWSVvQhh
                      jrwQizm9Ihs5PYq9K73IVZS85wsqvaWxh72M38i8jzW8veNVhj0AdV46et0zPQgAxL1Ozk09ST+2
                      PZ9xuj3PJLe99/mIPT/nhj3Yxaa9MNHOu2AVaDvzv0S9OOnHvX6ZXj3YUA48Qh8vPXqCYz18PYG9
                      GJc+PIOtcr1qHyY96PYAPJSizDwAJSO6yJjMPEm+vz3VZ6k90Fqtu+hXLzwnX3a9la2oPbIcoL01
                      K4w9x/SwPbAPiL3t8Uy9avs8PWdjd72Ya/O8QMSZvUCXGzyOJ2I9Er4APaBtUr3wSR28lv0kPUP+
                      Mb0fnIM9lNWHPKdbyr2jPaK9UIjcux1rwL03dIE9qKiQvMFisD0owM68dmx7PdCiBbygeRW7vT+p
                      vRusyz24ya886u9HvaKdeT3wkUe8iU+lPR4BEz0iHWo96uB7vTAE5jvDULO9AFr7O+H+gD1YOSQ8
                      HaZ8vWbVAz0ML/48F2vMva45YD3YR1A8UPBfveYLMz2vhII9CLmXvfOsTr27v6A9ACGXO2qbHT0s
                      PK68M2GqvVq0Hj2aO3I93XyVvSPatb0AKCm7hS+KPRRBnzwoNJW86Gm5vIZYHj00S/u81x9DvdhT
                      HLxAOQw7eocIPQaqMT0AARW8FvkxPVSJmbzOF6K9evJFPbNTab09Z5U9WFuTvQeSXr2YnkC86g28
                      vQ7xVT0iaTw9e9q+vWrlHz2l/Jg9Ps9/PUCt1rpx/pk9Ai4pPT/nw72q7G+9aIW9vaAsnzyY4Y+8
                      9YzBPTAm7ztaIEm9cDiTvTE9xT1z3nO9mEBtvEiYlTzCbzQ91z03vWb1o73TAMs9VCK1vMC48LrP
                      MMc9UbPIPTJyXj0C0iU9KPYUvHAFN7yNC4o943nAvZVfpr2CtW89sOLWu8DwLTywFJi93dqGPa17
                      qT0M64+8f6mpPWCcObvA3L26QqkjPWZ6OD14opG8IIKXPF31xD3SXGA9KvtXPcusuL2G3Wc9IECd
                      vCwvgr3qgAW9OabMPShcLLy0lIO9MA+WvXwrGb2wKWe8aMS3vagLGTzGiQO9cDl4PFjMFjyVR6M9
                      AOZduWjvi70JJZQ9GkcsPTP4Ir2AmVi8inE7PQHEkz2PMss9WZPJPUZsMz2thZ49kZ24PZHBuj2l
                      zsi9zBnXvCguXjy6bRE9PcrDPXAZZTy0tdc8yscFvWAFbTurE8y9DCa+PJmMvz3JTLc90a68PVP3
                      oL3wgnu9Mh54PdAIoL2gxPe7p9YzvW04Xr3IqbS9UOnpO7aShL3CuAI9WOyVvPbjgr1N95s9FN3X
                      PE82yz1T4TW96La8vQVdij2Konc9s+BAvao1HT0zFbQ9HuV6PXk7yD3O4DQ9EEZpvSufhT2KBge9
                      wG9tvaAjyjvwIFC9ofWQPfKIcj0Kqqq9wGyGvBdRVL3CyG09hvcTPY2Otj2/UIA9+gQNvbA3Ir06
                      FD69CXuIPWLiTz21YK89owRwvSfwlT2TDK49Az/MvZoWQD3TEle9jAIPvZgSCjy8Jvs8mw6IPWWN
                      xj2gy9q8oDAmvYD+VjrA8TE7KGkEvNBjNDyAMF+8MzWNvUyR/7xG+Fw9Ru0DvbgHlbzA/w28cIFw
                      vPrRTz2HHxu9yBD1vBHBlz3gzL47aoyBvcjngDxVy6s9FPP2vBN2mT0qHW49ANkJva5OID2t+k29
                      8ot4PXL6nb3lOIM9XjkIPUAMNTtCAX49WD8svNnmpj0464K8s4apvbOYqb1kcdM8NfeNPdZPlL1z
                      LCO9A1CavQ0fmb1bL6+9xTCpvQ5gjL3gLge92nRmvYGOnz014489/fqvPcBFBTt6YpO9k+ctvWhj
                      NjzI8J88D6mqPUhWqLxYfKu88JPCvSM8ab1kts88YLkwuyAOtr3SIzo9UFoWvAcoUr3Ivqu9/dGG
                      vXbHHz3oan+860yTvSPHrL1Cmik9krwFPajLwb3y9DQ9V6MdvcDbeDsrg769AFfIvfqZZj0TpMa9
                      sIE+vDNMQb12o5S9rInVPCg9C7ygco470UjCPW3AkT2QV028RMTyPNUwlT1Gi0g9p+dnvcfGR71D
                      o6G9u9KJPWC5tzsyw6y9XTltvdQZk7wGGyM91PqYvIgEnL17x6o9RLbYPAJrEj0g0SK99JuIvVPN
                      Ib3MxL48swdPvYI6ZD1Mwdu8UJHXu/lirz04AJC8dt1xPdVTjL1AVgy8aF69vJqLEL3Mzom9VB+4
                      vMDyXLzUzPe8YHPqu80jlb1Uns+86HEOPFkisz2nBmq9twRivcqrej0orna8AC8PO6a4p71ACVS7
                      AGCwOQDMurh3z4s9ICXEvYOlpr0mF149HZOyveaDTz0f5Zw9AiAwPeEiqj1iTB09306tPYDHSTyQ
                      p4C9tNCiPLhWoL0LrMM9fYLBPeayMz2AFL46fEbpPDTMzTxqoqi9PUOnPebJfz0jjyq9ozB5vZIz
                      Mz1OUCQ9+PmDvVC21Lu8PuA8gGb7uv15H716NXe9v7SvvZ54ir3yLAg90pA9PaWouL0A7bI5IJsR
                      vXBeb7zKICe9Tp5FPRHhkj2RQrw9dHC9vIlnrT27GsW9VmgOPcDQGr2gMUC9WF5zvItLur0135y9
                      FxJUvejWjLz1ice9KffFPdg3Z7yii7y9wJuBPEDsUr3pwcc95h05PewC0zwT6a+9BlZJPaPBYb3S
                      cb+9ktFIPaCvjLwAGBi77i6bvdDEKLz1T7q9G1a7PaGbxT0QwVi8g+PBvYBRhbrK42690IHvu6BQ
                      zLxY2Yq9nngpPbF9wz1Au148mFu6vGIaLD3+4V897pabvbrYNT0Q/Xg8fyXEvTZAWD3miWs96cyZ
                      PS75Vj3USLU8hTm9vdjiMDyFIag98GBwPPDwTzzNy8C9QBg+vD2Et73yVHk9xeGwvQdSrj1XN7q9
                      PtQ+PTdCpT1svpa8APX+uw7HQT1HZa89eMqRPJ1Xv7001fi8zGmBvMpYCj21j5m9EjorPWpeSb1o
                      fJk8ajxtPeCrAr0c4u88bZJ0vaH1tT0KK3A95TC7PcAOYbv0Ma+8V8cdvUk2zD3D+Ua9djAKvVIs
                      Kj3H7By9eUu9PYrnKr3eewk9zYNdvRyW6jwzMZk91CuUPIKvFT0nQ4U9g0tmvfYDDL1C9SM9OlMg
                      PQJLvb2A+cG8aFyrvUW1zL1CXV491UaSPW/kqz0hw7g91JOJvLKDWD3+mW09RnWkvdsGlb2y15i9
                      Xy+8vdvVtr0mgQM9tDr5POCT4btqS8W9lB66vPNChD2IGeO8UrMIPetqoT0PNsK95MkYvZCLS7yF
                      Q5w9AP1NvK5LMz1JdMM9wIUBu2CBy7s0Lfw8VDaavIQOF70TPMU97DfyPAeEU73HpoE9xNHtPEbE
                      Uj0FlKA9GCAjPMMfbb1RDMM9WC+bvMKpUz3IG5e91/g9vQiTmL00RK28UK0AvD6Cpr1MwKu80j9+
                      PaevMb2oGaq8XWJdvdn5jz0Yer+9bJfkvCx7xjzPQ4w96jhEvf2jIb0JYbE9RceqPaidLDwp6J09
                      UMHNO5BcM7xpc6s9ALOAve8JxT3tY0i9Gqk3PQpMLr36rX29NR6BvR4vZT3ZSoA9AABSOtQmzTzr
                      hJa9oPaMvZ6dEj1AnC08aDKNvfArFLyou1k8s7vBvTBlhr0H+po9g2KJPdDE37vgEq47oIPoO2bG
                      ir2mOJ29ep6hvf7CoL0wVKG7ob+RPVhJFDz9Xa+9goMkPWksuD3MwLa88pyvvYS+zjzahcC9nwDG
                      vdJETz3d1LE9kPs8vEKWQj3zWrW9cMVPPACPaDy2GQo9sD34O2MGx72b5MO9UPKXvTKzkL1swLK8
                      TKUAvW1Njj3N0hy9rTSkvYASdryw5Qa836q2PaIyGT23lGq9msB2PWDSyjuDFcG9ABOruSJ/Hj1h
                      X6I9h8C3PeY0IT1cu/s80kCdvdKIOj2EWxK9YH+Ru6DjMzv2AiE93vaPve4MlL0cNdM8QeSkPWAw
                      CDvXlXy9dKzwvPa6MT3qyx89PlKSvcr5Xb2yfBE90/+SvdjJWzxcmuA8HmULPbSEgTzVeYM9ThWh
                      vRCVLbywL9m7rJ/ePLGuoD3IS7W8WpCHvSklsD2Lu5g9lDnzPFfxY724YKM8JrcqPXWZqb1wDEG9
                      AhkCPY6YXj3u9D499eiCvac2xj0wznI8Dl1uPUp+LL2AYrc6QLUhO3P/jr0WLRm9ZdGOPcfkO73t
                      NUe9iI2RPCKiYz3u9mA94fjEPWWtsD0OZXs9UOX9O/rkvr0FgKk98dzGPSAk8LzFCMK9NM+DvVPH
                      br1IApm9PK8WvUkpmz0ba8Q9Ka2QPYILjr3qVRi9FRLEPderfb2xD8o9kMQtPEoKRb3pubE9QL6h
                      PPCiJTwAza65GsICPclepz2wYN+7O4fKPTu6kb1MmZU8IiFDPSwF/TzDSR+9UuQlPWp8TT1Av4q8
                      wIYgvE5kET0AFve8sMQVvDTziDzQD/07Lh81PSIwMz0gcVS90AmOuwAs+DtYHbm9AFZOuU4WAz3G
                      cKS94PCtvN3Vxr2Dv0m9GmxZPR1Nbb2rE6m9rnMNPSAWyryVeMC9zJ0RveQOE72VAay9c8+vPYZN
                      OD1Izaa93lSHvQGqgj2bnoU9TMmXvBKoRD3OKWQ9MiwdPT1ZoL2iWVY9a6ukvd3pfr0AjIW6Xe2S
                      PQM1qr0w8nA8MxK1vcEotD2fVpI9B4Gvvb/7gD0iUj896NKZvKDR+rtBz4k91RaMPRptrL2AUKS9
                      l4aePbesyr0w0g08ckDFvc08nj2O52w9QKXBOlDh3jt0I8q8MJl1vcAwRjwe52U9AG64PC+VtL1w
                      Nqa9IOPYO5DXVL3y7mg9ADQcvbiNl71zpW+94u4kPWZEnb0olwU8JCfrPJBQFTzw7b+9DKjFPKGT
                      yT0LE8G9CjUAPQpLIb3f3Lc9c5M4vWjpib1yslc9aNnivNGMxD0Ev988+BKGPI2rvr0NAjK9CIud
                      PGdBwr0qHnM9ausXPTfcv73JKsE9rn+jvbBhb71XX369AB4rO8Dprb0hdcA9QMa1vMoNJL1AC7O8
                      gOX2Owl5vT3X6lm9ZOUPvdTI1rwgAS69gK2hOr6BNz1dXi69mGJHvCc/oj1ach691m8rPUA/PTuz
                      VJw9pw9XvYVjrj1GAyw9FwmTPbf8qD1elzQ9eILMvKC3Hjvo6oS9SLW3vbNwQr0oJB+8qk9jvXRW
                      j7zYsnM8rZ/AvRA/fLyATQS86RqkPQr3jb0lnYs9BPP+PLciM70mEQ49AKQLuv/ooD3K0ic9QjUv
                      PedEvr0YTY69kpDAvS7iLz2tfjC9lAkMvZQ7lzwIQMc8gCwAvVrcfb1ytn49QmM6Pep5fb1cvP08
                      WqZ6PShAqjw/UbM9+US/PeyMkry5Rrs9AOD4uVI+cD0iFcu9TcKZPZXTmz1VdoO9QK+2umAVv7sg
                      /667JbKqPcL5Xz05Eqc9M8Esvco4fD1ISpM8UMJ+vSAcy7xXt729DUgavSquar02RmQ9j5vEPay4
                      CL2TF3i9lq9PPa3sG703DR29lMfRPL40ND3A9jG9oFV2vXTlujxmklg93QihvZ2AJr1I96a8u6qZ
                      vQC99rnxtZY9oPK5vDjuj7wA+/K8D2WHPaOXHr3uyRE9hoYVPZEuiD2dQaQ90tE3Pb04vj37FMQ9
                      CdqrPTCXvr1oAKm9os59PWKAQz2680W9vkw6PXO4wb0uOUY9kTaoPdA+cTwdZbc9OWunPUAayrzA
                      rok6Sr2bvaEqsD1AfGS71r9TPcGggT2T0zu9A75MvclNwD0xOas9gBy/vAwHibzQd4y9MoG7vSC9
                      3bzQTwu8mBWVPNDVxb0zsUu9wBttuwTbzzzz3029OOnWvGaBkL0/Wbk9+hIZPXUNiL3KAl89QNEP
                      u3uClL1AFe68Zb+zvSDUVr2tzRm9UnkSPcwbkryiQRg982aPvQCxsLtzvGC9HV5GvZaSej0xurI9
                      9MeBPEPAsr1yoBc9BkYZPcGQmj1TNLO9GUSdPZ1PRL2Al++8jI3bvK34ab04aba9mAaBvUUdhz0M
                      tdU8p2NbvRr/JL2TOMW9mBxwPO2WUL20XsC8gK0cvZdIw72Kqj+9oCOhvHqdHb2RW6A9ZY6KvcgL
                      hrzyXrG9oACvvCN5yj3dXkW9mwiVPV6POz15SLM9kj3FvWoUHz1INJG8hPDaPOgmcLx7QLc9gg+K
                      vVgCiDyYisq9AMRkvcDWc7tadCy9fi9GPVqEnr3HOb29GLiAvUL3Zj0zdcq91/AuvZvwgT3vK6Q9
                      N6yWPWBopr2Bm5E9is0bvZoJW73oPBS86TfGPQCaEzsBdb49n/m9veDLnjyCXUk9aH6VvEUOtr0Y
                      aeG8rcFeveB9lrvgViy94TmfPUYPTT0IPsE8pTKivQeVJr2o96S8iOSOvbwOAr12WRU9PpwePdyr
                      1Dz9EzK9jM74PLA/gLs6Koy9j7SwvcMgZb0wY3w8rIaEvUk2vD2xa4g9/VREvQAuYzwoht28Ummp
                      vaLFTz0SsxQ9Aly2vZh/XjyifGw9WDsOPEmAxT2e6Bs9c6zHPZGgjz2+rXk9ijNwvWonLj1nTmu9
                      MFEtPH0WaL0ImqC8NjhJPd6fYD0tlTq9aYGKPTja3ryDWTy9qgMHvcYRED2T5W69DnibvWMTZr1L
                      r4o9iWqVPU7vKz3M+qc8FjihvZB1l729O5k9Ph1dPYfMJb2gNl67KsCEvVDGI73mP0I9FniBvZTK
                      yrx6XXG9IuGrvdMEYL3e7SY9QV+2PaceG71Atji7vc9SvenGvD3QVe076g5wveaanL3NNba9e1XC
                      PQemWb16UgO93+KyvbIeqL2Hm7i9aPOhPDOkzD19ssM9DzHJPZISID3o+Z+9A2g6vXKsJD2MdYq9
                      lgqbvUoAOL0sBpO8UVy7PaRP+Tz3Yn69mXqEPcBcvzqghZw71IvivDCzILySUFI9TZ0dvVBJUzzn
                      4Jg9vlt9PWKbwL1M+d68xz2IPTYbGj0w5qG7ekYCvTIzgb1to0y9sIuCvRlygj3Xr4Y9n4+5vR04
                      Jb14Lo+9+t05vfDVTTxavDE9irYdPXvPsr3Quj+9rDAEvd1cuj0ykCo9AIQjvPzf9DyYyeC8jOz2
                      PJA+v70y30w9sRCnPW0Mtz0AoHQ8nqedvVv9wz0gAM+7KPXYvAzh+LxASla8UAdgvNhGqL3AOpe6
                      PW66vcB2xbr0S408bqE2PRxiD723F7E95s4XPcNIVL0Tq6+9msSovfAhNbxwrzO8SLSzPNUqnL2K
                      uCW9H5XMvYxo5rxA06i9YDKqOwzQujz2kVw9CXuWPcpRX70mgxU9qFT2vEq6Lr3oS8C9KFlTPA3u
                      Lr1nPZE9fsCevYuVrL20Mhm9vi1mPUCNdrwT2l290L3Fu2ZaPz2Gmqa9LJz8PMTd9DxUCJI8NgGa
                      vXPNxL1Nl8g9fbiSPXhkib3e96O9QAJ9u4M6dr15mJQ9NA2rPAKARz3Z0Ks9c/q0vRBZmb1l9rY9
                      yN2NvTITJj1UZ9S84FDRvKjO47yn/LI9mHeAvRiYRrzpuKI9efLJPRgIebzAQ2w86tB5vRlckz31
                      /4m9nXycvQODoz2dIbc9MPCavdjGEryaLii97KOZvKd7gj3Bl5k9hLvmPFh2cLyqlTk98OYVvGAf
                      T7uQc5q9oNjCOw1KJb2O+0k94MbCOxgTx7xAgc+6dt8WvYAyIzoorpe9s5I+vQguyb2KQhk9R8iA
                      PQagKD2KvYS9ACPsuRbKRz33HTS9avVrPS0tzL1AhfM6osU0PdTZEr2l4oa96j6CvRlJkz3zOkq9
                      YOf3vKAmFDupAJI9mED5vMlGqD1Xnie9OuwZvVVml7105uU8yyayvdBpfLzko/E8PUpJvX5gQT3C
                      WBE9qbihPZANab1x7Yk9TVOVPcp0QD04w/q8yem5PRj5bTwWuAY91lEqPcEWvD3FaLw9J7RTvb92
                      pj2Mzv+82FxyvGAoqbxzkWG9ydSNPUrvVz2gmai7CDOFPO46HT3zt789TMn7vKZAdz1Y3oK9DYen
                      PVZRo73TjMS9DE2vPJaJZz0rHZm9buZnPT5RLT2Dgsm9+5e+vfofOr1HHJ49g2uqPeCczDxCVJu9
                      hIr2PIjO7byctNA8LODlPCj9jryaomc9O96uPXo8bj0JK7w9z3S6PUC7KbxDk7a9lg41PQD0/zoa
                      mZe9PFr2PPq7TL2SqVw9ZVOdPZIupr0CNSw9Q+GAPUFurD3vNcA9mHv3vGmllj2VicY9Kr2yvSzW
                      gL3go/a7LFOlPJdSs739gI09QxszvXqtvb10wMe8gFC/vRI3VD1y1U09QNYJO5D6HLzC9qe9oI3w
                      O6ZPDj0A5Xy8uynAPfjqqTw9dnS9Q2QivQi5srzD66q9ACbZOXA/k70A9Ko4E4C5PXSiiL1A18Q6
                      YKGqu8xJ/jw3xL+9s42UvZPwvD3uAo+9hRfIPRGZoj005Yq9AEDdO6gpsb1iqHI9wGDduvrXNr3x
                      Gsc94EiFO/reGD1Eif88Q6TFvakgvT3QBAq91y/MvUIDCj2twMs9zT9CvSMAjz0zeMa9uFqqvCUo
                      xb0AKGC4JcqwPcCKGbyqsK+9wtlmPVJrRj1B3MQ9qGSIvcBFa71Asza8GHsgvBrndL1XPMG9BKfO
                      PAc3lT0SMx09xrCfvUCoDDuw1527EJ8RPNqMOz0wR9U7IoJaPT63cj3aaq69kFgXvUEnlz1Sfgc9
                      jV9jvWDzSr2oEcG9QD04vXiSi70SeWc9QH5zvVDkprughKO82J6/vIdzoz0tGJo9UMuiO6Ae9ryQ
                      5hu9a/KMvWCAGruZO449WlqHvZ/Msz3CE4u9Cj3MvRABdL1AKf46FnkQPZmgtT0Be5E9EeapPSj9
                      x70LJ669gF0LPLtgvT3kIRO9Bw18vbSbvTwQJgu9ADYqOY61i705SLc9YhY2PfmXtD2yX529om0C
                      PRQolrwASIY4mZGiPXDVXL0AFhM8YjgmPaRr3TyufC090dyHPeQN+TzkYuc8gN/xuijTyzz0A+E8
                      a1CqPcfRYr0Mfq88wKu0vOibjr3Suh09Mud0Pbilxr3A/488ps4cPXl0gD31YJc9sNtiPKtorb2w
                      qmO8Ul5iPVAmfb2k3uc8ADanvDDRj73vx7M9zdCqvSgVy704nsm8lMjbvP1GhT10+e28u+yQvZ80
                      kz3fDrK9AOiPvWBWVrsxfqk9VAe1vBpEKb1TbjO9VpGFvSB3tbxhhrg99C6UPCzv0Tww1sC9JxJz
                      vUAoFTv5+MM9slwiPaYaAL1ScHU9I+uNvcLudz3AQqu8AFBuvfwd6Twd0MQ9PfNAvTcWjz399ja9
                      /cd2va4rWj1Qcgm9bNrBPHQS0TxC9Fs9CKGpvSV5rb3CA5+90K0avSSk3jxZOqE9WxmQPZeqw70R
                      RMc9YCgEvd05Nb1nGbm9miNvPR5CPj0dvL29KNxvvO6bTT2gOm69MotLPUvKsj2toZ09aMyWvOKa
                      NT2AzoO9ENyhvaAUEL1yk1w9IkB3PQ0xjr0g9ea813WzPbplaL1dT7u9HymOPeIZID0dFcc9h7e8
                      vQUBl71kbtE8RR6APUMKQL3AIGw7EmZ9PUysmTzowUO8aaWgPTCZz7sNs4K90KGovQDm8DnF2IK9
                      UBITvOwB27zMPpo8nldkPTD9BLwX8cS9XYpWvWCbfTuDpDW9zHTFvM0ps71oO5i8WloLPSO2qD1m
                      QGw9gLEJOoref71gRbW8YZSKPdexd71UJ6O8Z+tivZ1iIr3Qd3e8elsgvaJQdD0gJTC9AEaWOpwm
                      4zx6wxU95rp1Pfnqtz2ubkA9oLwMOzF6iT2idT89cJUWvN4RZj3QRmy85GLuPFAbcrx2/gY9JCv7
                      PJCXTL1yeVk9CK3pvCddYr0zIGe91a2hPZlDkj27M7A9MIotPIwMljzhdZA96cPLPQAUVruo3W48
                      ciYqPaAytLzCGHg9iLypvX76ET0AMD65jVxwvXPEw7205oW8dgU2PWAaK737qL69ONeZvexMEb2w
                      LF69UGq3O+RIhL0tcqK9aJ4HvBhwrr1dUE29gjYxPfc6uL24UZE8OoYtvXilyb12IY+9eDG5vZNq
                      Ir3gL7i7Zvs3PSISlb27n6k9fiIFPYhVpDyyd2s9c1nBPcW4v726a169QF0WvUAEzbzXVmq9YJ2v
                      u51wG70Irs28s2BtvfRozLyMnZo8YMf8OwKqkL1TPl69dAuyPHFztz3drcc9JGnfPHsvrT1zEJM9
                      InxyPUCfQ7uQ5Eg8iB6zvIl+lj2hJ589GADIPLgk2bxAkVG7GOkGvJasZz0Zma89yVHAPdvtvb3D
                      qVi90bTFPdLITD3E7NI8sI4VvJRl7zxHfLC9Cp5evdSmsrzohg88MHNGvUpyVz1IWfO8UCnKu7l3
                      hD2lp4y9HQ+7vZLGOz3+KgE9SezGPaqJFr2YDBc8VnwAvcixlzw0uYM8AGpsPMDtTDvowkW8MxGM
                      PT7ynb24Npm8msZzPXKUlb2i/4e9vXafPbFBpT1znKK98jssPcryBz34MMy86sBYPdsbuj2AVXO6
                      6jdFPWheqTywEGG9KLOEvQD2VrvATvk6w55+vStlpD2u3CE9FZ3Ivf1hyr3qD1E9ppCnvSFWwT3Y
                      EBo8UyuvvaekSr176489YM+uu/w10zwI95u8ZLjRPMFAhD1guoK9OxeWvZ9iiz2qFCk9AFi1PPU4
                      u72Ev4u90KgavZR2w7xKRha9ky26vZcLTL1AX1S8905VvWmArT05s6g9dOiNPNeciT06l1I99MGz
                      vAefpj1beK+9Kyi5vSP+cL2JMLI9atO4vdypD72EZt48oGmIvahvBzzctgi9ZCndPGDXqb2Tmp69
                      AE4bvPb/DD3eeZG9mLqmvVhnoL1QNfK7jVy6vWBY3LtQhoO9zNK6PICkybvAF129MTDHPY0GTL3g
                      SbY89EDwvIBH/TsGJUM9gEkLvPD1LrwpRcw9oI9UvZrCGr3BPLM9dW+UPSDu+7wrosC92M2zvJfp
                      d70AQY+9/jllPXqoKr1sTPK8rOqdvKEVwD09Q4M9PHr7PALNpr3bTZs9cvpZPebWPT1DWnm9JCbT
                      PPBVfDzKcTO9KKWmPCdqpj0AVNg7jRe2vWgjMzziTwY9AJlpPGjxorzQdEI8UORTPLJMGT2ozDm8
                      cKg4vU/9vr1uVYS9/QOrPdD+mrvmkQE9gMIwvXplGb1OaDA93WJRvUBuUb3ob/i8UOrMO74Imr0k
                      O9A8AFs2unApFjwr4sA9osxMPQBGpbsD+G69EudjPU7NED3AmSs7MMmru/LKj73GxZK9QMZMvT4i
                      LT0Jk8s9+IaxPCYYJT20DtS8EIGdvTVTl707Fo691ASMPABlu7vWU3E9YC79vLqBLz0+kYO9F83D
                      vQAZX7oATPq6WxaJPaqjGL0ABGI51TWrPfi1kLxUH4W82kAtPZ1yyT3pC689WEeYvHjAiTzQ1Ki7
                      K2iBPZAIGTxN5b89oEJ6vepUVD0qXFM9aBCVPCk7vD0qjAQ9TFq3vJKdfD14LbK9sG4IvT5lVj2g
                      YUG9V0IfvVkpmz2gK2+7N5rBva6YAT2Z04w9AbqCPYYCCT0AuWI81t8HPdhVf7yidIu9YGK8vA2C
                      J72kEN08mmI+vX64Tz3KDTg9oNWVPEVyub3o50u8DchTvT0iRL1A1Ze9jHmHvYBlmDyTC4c9AdmT
                      Pb6acj3RnLo92usevTCQHrxiOSs9crccPcaAED27kok98wm7PT8NsT25Pa09HxzMvY8IgD1gU8s7
                      phFxPRGPtD1jbr49mooJvfD+O7xuBKy95Y2MvXZZWD1iLjI9KETGvHdku71SvFk9YK5eO8MLer0o
                      BKi8wp9pPR21yb0GpTU9qE6dvVDGHbzI+629RxlgvZhSBDwAjLq74I20u7BNrbvhzLM9Oi4yPSDC
                      LL06ChW95Ya+PY0rJ72NI5O9h4qlPWanqb0Uwea80Ex5vBiLDDzpsMM9P82EPQ0vlT1My5s8wh1C
                      PSoYjL0oiAo8mCusvYKwaT2w+YO9/tahvfgikzxBT7k9vb2dvZK2FD0YccS8bHHOvIAbRr0Jm4I9
                      MABDvOggzL0eUC09YZHEPbIEwb3Rd6Y9qO+HPIDfDrw1/Zg9UKlzvJIKor1qPH09/BMFvR0mqj2Y
                      mpY8oN6sPN7sPT0N5Iq9AEulvb2hGb0ho7A9W5m2vSkRjT3g48M7GvKZvQBruL1Uapc8NlZgPV0p
                      br10WZM84BSRu3qKtb2u3w49KKFDvNkVij3gZIS7r8CVPcBYhL2Hn7O90Ej9uxBgFzw46ZG9qkBC
                      vV0gwz3Mp/I8oK+rPPcDxL2GywQ9UlS+vbDBjjtA2sq80EhuPFD/ODwhEqk9urOTvf7PBD19RnO9
                      ABH6vIPXPL2LT7+9Y1OoPYBlyTzDq3O9qtE/PRiVtzxzqru9HugUPfMGsz2eBFA9oLPBu/Xstz0A
                      eEu8Qd2uPYLxnb0XMlq9N0lNvQEYtz1ur4q9xHzrPBsQpr2CNxM98ci7PWvmmL0NdqQ9oKTQvEAb
                      CDtAlvK8aMYavLCxMjwDC2G9chNXPa/vyj2g54o8sPMCvAYXED0Xz4Y955UyvYx8FL0/6pY9URih
                      PfDEGjy0EuY8UFvCu4Deu7wRIq89YW2APc7NOj0w5eo7jKzWPPhojbxMC5e8otCkvQBQAji1yro9
                      ALiiOtO+uL2YlRO8UMa4uyOSrT3TE3+9zeOYvVmdpD2wYUG8AMdSvV2jOL3j5WK9XqsIPW1Qs70X
                      Gp49MT29PUAgILyINd28QOZrPA6/HD0y9nw9MFGYu+MiG72b/4I9qAC+PMJ0TT2KSg698PfKveg1
                      iTx3Lb29gLyHvNBnrr2Ahq87l3wlvdQYg7zli8E9AARgudROsLwDHDC9ksk0PfQVoryff6g9ksnC
                      vcd7Tb0wlak790+NPXTv4LzQOl68qkoiPeiWIDyNl3O9w/S7vSjwvzyM0q68mAX/vNWKtb0CUpS9
                      wZy4Pf2Nl71q42Y9aEqFvQ1LN72AwJu9EGlEvKipG7xhN709WUuLPVejlz3Uvoq9mNEuPDbHfj1M
                      Aqk8R0NpvXgBwLwAxvW8k1azPQCDo7mQ/Z69QAm4uhhNtLyBJbg9QrwbPbWDzL2dP229TCH3PFy4
                      4Dwn3Tu9EFoQvHv2pz1O66i910+ePXWuqr1LB669YBECO5AEGbw0Gtw8huqKvSu5o72Qt148x0oo
                      veZzo73O43o9Bk9rPffDxb2UQLw8XlBCPWhxKrxR2J89hZ65PWCZBzu40JC9wHdwPHPIhT2seJE8
                      QyKqPdZfTz1A/Ry9Ors/PU2qYr0gq7w8nXSAPSDsQL2khu881xy9PXYBKD2gJEm9AA+Eu5Iabz20
                      c5I86I6HPCgVRzxH95k9qHuIvJgsKTwUrOc8KCz9vCCxgbwIpoO85P79PDSI7LwzhMk9lLgOveiE
                      gzwk9fw8UNSjO5FRhD1ph4Y9Fq2rvWnQuD2AZRq6g6dovbAEvDt1R5M9kGFbvXhvrr0s3py8XwXH
                      vY3oRL30UKO80YuVPf22c72jUpA9FCq7PED7hjoT/ac95FPdPDZDUT0CsF89U/e1PWG1vz0+3qG9
                      syRavXEHqD3GYXA95IyIvcXBx70INPO8tJLMvDMsU71xq749Lc4nvWzAprwaZqe9gnRrPczD77zA
                      Bxg8RGbQPBNmfb2tl7U93pwBPQCBA730Os084sAbPYCnJLzCCVI92G5dvFIKqL2OSno9gLnjOuwD
                      njznQnS96k8+vdAa6DudNKE9sMMmvHptEL20t/A8+qtGvSQ28Ty9dHu90mw0PVe2sj3Rg5o95HGH
                      vao2jL3GtBa9QG4fvQAfRTwri6i9g1fJPdD/rTvQMg69WiHFvfSyhL2OuQk9aLmAPBKwAz2UG408
                      7CCXPOhIYjzC8Sw9/sN9PcIDCD2CN1Y9h0i2vVC7Tjz+ozs9sRuaPdgahDz2NTg9XmIiPZB3Or2Z
                      gI498ypEvYixj72a6rS9pt19PaK3QT19hcG97z2CPWASlDt6rWi9g5lGvRjKI7xItKW9ahuavXwh
                      2DyqNIq9gBruO2Xhgr1R/sg9Ch5svYU1jb1/dr09wVmSPQFNtj25drA9cIRLvRp4w72v9Ks9S+OP
                      vVpuib3MjYW8skxFPQDidTxhTJg9uzymvRCvSbzCml89ZCjRPADY2zvqAim9pg6AvSI7BD2sXAu9
                      QwrAPUAtoDpAGly8daaKPRCcXTzQQg68UZvBPYDzCzwMR9U8zSYavfcAJb2yaRM9UH+XvQw8hLxJ
                      2ss9R5eyPR54kb35vb49VmuMvbKKZz10iN68TSyyPaN5nz0TKbM9mMzDvRAfEzz4KYE8iEbCPLKR
                      YT3kQAu9twGbPXyk6jxgSQM7FTSyPUC0Or1I1IQ8IOKrvCCuzLzA1aQ8FAT2PGJMy70im6C9uoS/
                      vSx3Er0GXD49ML9/POr7SL09pIk9z7iZPVY4Wj2frIA91n+rvXKVXT0FobG9coVWPcplWr2oFxQ8
                      vdPIveqfN715q7M9mopZPaiy9bx3QI090p4kPahO8bxwEnC9SC6ZvNLIyb1tLp89PkFUPe8bkz03
                      W789k4m3PcyNgzySSHg9uuIsPUuTiT080fs8CBvTvFjyT7xAJrw8GTGePUtavT2wb3A808i0PfKY
                      fT3Ak3g7rhwIPST75zwxv7E9aayFPdrDAT3QjaW7+tpPvWjjojxKIn89w8u7PdxxBL3LIow9IPyi
                      PE5LDT2skPK8CRWEPQA4objYgWW8FwuEPc7AdD0KdI690KIKvc1Ipr3KZVU9TETbPCHUtj1i3WI9
                      lRiHvVJ1pb1WelI9igirvWAFS7sBcag9aCFNPBWWlD3UarO8EHMRvYlLlj1A0sK998TEvWpeKz2w
                      LOy7p8agPd6Slb3ThzC94oUUPSO7JL1jcZ892qMovXkqxj2yfVo9Qkp5PVgLdDy6Wk29biuAvVRY
                      3rzsc+k8rBanvC6sBT0YGby97PuQvPXyur2N3GC9TymzPeReD71dAL69svmVvbPwiD3Uk6G8qEm0
                      PAD+j7mXRcI9QMSQvP90xj3zLJ+9AF2tvN/ZwT2dbsC9AXyGPaguCTyiTyM91ng+PTAdRzw/nrm9
                      p361vQyjxbzKVre9gLgHvZjeC7yjRx29DcmvvRuAhD0dEm29zFS3vGfosD1SOi89CqygvY14yb2A
                      i8y8KldVPZ+8rD0nUUi9lXiovUtHkz2QJyk8JBjVPJ9rtT3Yf3G81mQJvXICaj1gyrK97We4PTAZ
                      ezybCrk9qM2ivZ73GT1Hupw9eCzOvIl2oj0IHqK8mHFnvM2Gwz0RBsM9dngXPdCNHTyAj787cBtE
                      PKfyJ73acDm9yjecvQQm6TwAqNE7ysATvWXshj0w1HM8ZO//PB/DzD29jMm9rGWMvMrCoL1jkq49
                      sMaFvT5BPT2DK0O9bLzAvMoGYD2AQCC9MJkBvKz0+TxWYWs9aqqHvfcKQ706DrO9jHGRvNcZeb0Y
                      bQc8LAbXvME5lD2y2ho9ZjsQvd9AnT2Sbys9WmCaveDgzDtfAq49ZROSPZLvy73QVne9N5prvXLq
                      Nj0/YJk9OcqhPcK1BT1s/wa95tUuPTxbEr2N2aA9mRm8PXiHpL1bwZY92GTvvMawaD2FtZW9kBpZ
                      vREQxj2ZqKw9YBDVO2ACLTsYb6U8ta+xvcpDM72w5hg84KnvOy1hn70uw5+9uN7hvODai7w/1sg9
                      wY6nPfoocb0wYRe8p9hFvf70Nj1tEbm9msc6vRm0yT24sIm9SjpaPZGuoz2NLa8992qBPagpiL2a
                      iFw9EXCaPQGImD1AibG9t7i1PWitezxZVb89omtuPSDczbxYA5O8UvO7vTDkGDy3kj69UoxGPdyN
                      3DwQxVa9Vh8cPQr+Ij0Ascq9NDKYvIG5sz1gR5+8+iS2vWAvcDsAnvS5GrBOvVD3ijuI1aw8ZNjl
                      PEonIj0fYMG9AEvQu/1HiT0YPFe8PSvEvZhmHbzkzBi9xVqxvXytib2t9pY9Gu02PdmOyT0AV1a8
                      Q7+VPXI+Pz3cEvw8krF6PRhHoTyQdRi90CQDPKAiRDsbL7s9YqYBPXOhXr3477i94a2qPX7DZD1w
                      DF88DMbpvFoLXj3lEI89wkA+PRZDFD1Ayna95N/ePP3/lT3cnN88EOoTvGYSir2ga8e7lfCzveAY
                      rLwonRs8oGXIPJuopj1Xdsc9Cb+wPR8pwr3ofAC8/Xm2veYKWD1CSDQ9+opDvR2xtL1AEZO6LOkF
                      vXJ0zL04ja29rs4YPeh6qzzLbIg9g22/vZ94gD0qh2m9YmInPaPGRb31nco96yiEPUI3TD0A4Ji9
                      5bXLPeyax7y6F4i9UHlivQDyiDn9WXO9Yn4ZPczewrxpRa898aO3PYDm0TsAStG87G+DvfpggL3P
                      uru9CWODPdv9uz3QAia8qtMDvYiVvbwMLu+8MBa3vX6Mkr362IS9Gsd0PYJvBj3q7y89+K2EvVN9
                      rr1yvJ+95T6xPU9+yz1AqD27B1u9Pfawk72uYTM9WsgJPU9LgT39ZFy9OZnJPXvUmL29i6M9l259
                      vQeJyr3q3R89jdyrvWA5WjvtGpE9hSLMPaM3xL2jUXS9Jns3PQCKjzyAVPI7AsgmPWDodzsDKEq9
                      xTuHPbFrvT3VF6E9UEYiPMCLVb1ji8g97f09vZA8dL0a21e9PvQ9PbmLpz2i+QA9KDygvOVFmj0p
                      +7w9PCkXvWjZmzwp7689MzjDPQw1iL2nqbO9q0iUPekjvz3qR629QS60Pb3bs73YxpQ8/c91vUtl
                      uz3mIaa9rQS0PaxDyDwvSoQ90w5KvcRLGL301fa86NqkPL2soz0oC8q8mG5WvOgAt7z47868eGX8
                      vAJ/Fz0AAAW9nRdCvfCiQzx/u7a9sGW4vcLhXT3PB4Y9PRi3PVe3gj3U/cs8BBLlPP77mr1BAco9
                      gM6eOkDecbwYVj+8oAmuu9prub1jDka9yJmBPNaCmr0G5gm9s0V6vYASdzxAg4u6qMoAvF4KMj0o
                      BQG8wjJPPTd0sL0LbYY9KLasvF5GSz3KjVc9MbmXPUWFuj2AlwW8UKJ5vZnFtD2dtC+9zQt5vch2
                      nzwG9wu9fZhCvXZuBL0auwo9YBSOu8G7vD3QlVs8jFKnvGCT7LzQQiM8HvxGPWDytLxrGr096E+5
                      vfDRGDyF46+9INgnvdbVCj3mqDU9oHVOvZgC3byAKoK8X3m9vVfRML2gmRS7ShQhvZgYtTx/zbS9
                      evRFPWGRqT19QMC9rxW3vZvOjr0AfIE7wAd5O9CPn7vKAX89hnZcPS0PzL0zbYQ9NF+0PMBQGbzp
                      Ia09a26ivdA8UL070cY96O9svCEUjT3P+aQ9eJOPvY0Al73iB189tOnIPJm6hj3Ycau9pGP+PMFK
                      rD2oRYo8n7WnPQAW9bvBCqI9GqN7PTDKobuD0se941hKvW3IXb3I59m8GLXLvL6/gb0AuMy4m2fE
                      Paihub18me88QSaHPXjkojwK4nk9MyXAPVDiFzwHYI09bn6avXCZa73sSNk8oI1su0Vukb2WZKu9
                      LkM8PbzyzDxiKGM9oCc/uxCuVjxbSoo9pBYHvbW9j70EA/c8EvA8PaiqkjytNY694yagvUXPkT2Y
                      c8K8oFHTvEd9Lb3ItpG88H43veCC2rynaMu9HqFKPdITFj3oeuu8xtsWvZgJjL2n4Vy9uhWSvUrH
                      gr3AnEG7mBwMvKc1HL0wRYS94KwRvYI1Wz3kP808R/xdvXCWib2eJgM9sZWSPZ2ZTr09/Z89NH7s
                      vMpBcb1w4QG9dIboPO3Dvz2/q7S9m6+mveDUXr04G569wydDvednvr2xnJg9aKSfvGDU7juAabc7
                      nxqiPSWQvL3YKhw8t1J/vbhMkbyiAhM9jaSPvXIefz3lL6m9KkAqveDqgzyaYIy96pZQveYbeD2C
                      +Go9GK2gPGAKib1ANcG8oDuevKdDuj34M8o8GUTJPYRAgL30FKM8RU+0vZecZL3/pYo9gHLDu3mb
                      jj1iMse9WMqAPPLaWj35b7Y9sSCNPTJ0nb1YApa9eqtMPaF4qT06ITm90LQrvL2Uq73aAUw9dDKC
                      vRTOtrww2iW9gE6TPCCxt7upRYI9z3XMvXhP8LzuZxg9+v5uvVRsjjyYqWU8Q/A2vXLGXD3ZQoA9
                      IKrLvUHokz1itpi9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2NDU3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODk2NDU3NnEBYS5kAAAAAAAAALh4vb1wUg48gUaJPaJ8OT1EDQy9oMXLvFeryD1ZN5U9
                      ffGovZiOpTyB2LA9uETHPICtC7pgJx69SpgSPWWmxD2g2xA7vxGLPWCsZLth5pU9HSltvaMnIr0A
                      ObE89rmsvaF8yD1yBYS9sLYMvZg5L7zZy5w9AJqQuWFXyz24C7g89hkIvVRE+jxQ1VO8AZ+9PZiU
                      uTwQOcS9zo4LPak4zD3wAzC9OiglvV3uQ733K6w9hNAHvYftnj27KYU917DEPcpYG729L2K9mKI9
                      PNlgnz3Qn6a9WsCfvbDuPbynQjm9AlM/Pdf2SL2Asr+6liqUvXDlVrwQiwu9syi2PYwttzzMDY68
                      kyAmvVg/kL09BJM9ABHGu/VUtT3+wpW9HW7FvVCKLL2o3Wm8kKg8PDMRnz03oUu9AIgluzvSkL1D
                      Lp09CiNwvc1orr3eW2U9wPAgO4aqID0irMe9ewisvdUewz1m4hC9uSyGPR2Dc725z6I9gFlNuqMB
                      rT1QJ9S7g8/KPdcljT0AWgQ7WrlzPUCtl70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2NDk3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODk2NDk3NnEBYS5kAAAAAAAAABiKFTzhwbs9kRSbPV7iCT3hSbE9uuZvvbcQhj2AV4S8
                      zISCvIBNzLzOfGg9RIn+PO3ReL2AXKm6RffAvbD5sTsbaKo9jqFtPVhkJzxQuh48aDm+POv5ij3K
                      6iS9+GSCvACKjbl9IyS9oAMjuw37g737wcy9yDLYvD9/jj3tkMg95RmNvQeWcr3gl587oEOvPGxR
                      Fr2RDaE9AOO4vQb5nb3vcMW9WAKlvIAdVbz4gdG8nF7oPOMdbL3YP2w8o0wqvd7fIT3FHIg9vyG8
                      Pb7TZT0HWx+9nHsFvflXpj3IYOe8UMpjvNNMuT0X64E92QS9PUpCs71ntji9ODHuvNrgr70aKkK9
                      p7egPYOHs72nOLU9mBSGvI11PL0K9I69W8+lvYAH6LqAA7476IlavDhRmL2SIFs9LGm3PDq4Xz2A
                      mh46sUnIPXoRdj3WgjU915+1PWAWUb07TKm9IshkPVOhrb1gnkE7pZmavZnXrD26cTw9YExJOybZ
                      BL3ud1Y9OmNbPRICob2EjAu9naKqvcl9lj0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE0ODk2MzUzNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE0ODk2MzUzNnEBYS4BAAAAAAAAAORZ5Dw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f8
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        eI7tKVnEhT8h3lRv2qt/PyJ5Q3d2T4A/InlDd3ZPgD9LQeq+jq6FP+3hIKajiIQ/CqwbVgPJiD8K
        rBtWA8mIP1xbr83jWIs/6IuDnK3Zgz/Zi9z7CWaHP9mL3PsJZoc/XFuvzeNYiz/oi4OcrdmDP9mL
        3PsJZoc/2Yvc+wlmhz/TC6kfCiV6P3fQvFcRE3k/8X9EZ23bcz/xf0RnbdtzP9WTWGdDvH0/FFKk
        eHOzez/1lIk6CDp/P/WUiToIOn8/mJyFWsC3gj+279J0VZCBP7Hmjvai3Xg/seaO9qLdeD+YnIVa
        wLeCP7bv0nRVkIE/seaO9qLdeD+x5o72ot14P99rNArt04k/PUeNOcCrhD+zx0occbKJP7PHShxx
        sok/CaHfTRf7hT89oMwy7wSJP2IVyxUoyI4/YhXLFSjIjj/YFvzrLMSDPxM1gVcEQoM/LxpJvafZ
        hj8vGkm9p9mGP9gW/OssxIM/EzWBVwRCgz8vGkm9p9mGPy8aSb2n2YY/32s0Cu3TiT89R405wKuE
        P7PHShxxsok/s8dKHHGyiT8Jod9NF/uFPz2gzDLvBIk/YhXLFSjIjj9iFcsVKMiOP9gW/OssxIM/
        EzWBVwRCgz8vGkm9p9mGPy8aSb2n2YY/2Bb86yzEgz8TNYFXBEKDPy8aSb2n2YY/LxpJvafZhj/3
        cYltuvBzPw8J4tS7aHs/QBw//36cej9AHD//fpx6P5RwW8fEBHQ/bDJ8SlAjdT/Gm7FtGYNxP8ab
        sW0Zg3E/YkDKyjO+bz+Cg2O+n911PwLRTGLFjHI/AtFMYsWMcj9iQMrKM75vP4KDY76f3XU/AtFM
        YsWMcj8C0UxixYxyP4BSvGP8mYA/5i80F2FPgT/gaSaostuFP+BpJqiy24U/J0wkX40xfT9aYrlF
        bVZ/P/MzQMqjzHs/8zNAyqPMez+itfl3TzB3P8806E9Wtng/dR4pK5N0gT91Hikrk3SBP6K1+XdP
        MHc/zzToT1a2eD91Hikrk3SBP3UeKSuTdIE/ff/Drh/OcD/1vyegaP90P7mtWn4F5HA/ua1afgXk
        cD8pok84Eb9zPyjI5l8oWXE/kAXuWXszbD+QBe5ZezNsPzmSIhhp9XU/22g8m9KJdj9kAuctvP5y
        P2QC5y28/nI/OZIiGGn1dT/baDyb0ol2P2QC5y28/nI/ZALnLbz+cj99/8OuH85wP/W/J6Bo/3Q/
        ua1afgXkcD+5rVp+BeRwPymiTzgRv3M/KMjmXyhZcT+QBe5ZezNsP5AF7ll7M2w/OZIiGGn1dT/b
        aDyb0ol2P2QC5y28/nI/ZALnLbz+cj85kiIYafV1P9toPJvSiXY/ZALnLbz+cj9kAuctvP5yPw==
