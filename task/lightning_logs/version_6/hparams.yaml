N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI4NzgyNHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzAyODc4MjRxAWEuhAMAAAAAAABAYqA9ElN/Pn2Qoz7cP4A9wCtJvQs2oT6UZoG+dEyY
                      PeCJjz3icHk+YOp8vKAH8D0caa+9ENCjPYAhULtujBi+ly2pvmDgzD0i4Y2+2YmXPu8ZlD62qOy9
                      StR3PheOjr76sC8+WrBFPirnIz6t3ow+c8BnvlO3ML6lsKA+hO7+PZdQlT5FbIQ+Rk8nPjyPwr2O
                      6jc+yk0mPjBcXL6u+jk+YLQtvc5FF77IyAA90ET1PRyXnb0D0Du+gOT4PHioaj35mIU+GMclPrQr
                      pb1+s46+KPSIvlRsrj0MIdE9xNaOvXuXSr5QGXO+4FocvHEbmj6cFvo9aN1OPeboHz6jjUi+0BQE
                      PpF0mT4wvZs9wHvOPEsyG76di4Q+yhd+Pg4vXD4I/yY+1EjhPZjeE74+6nc+XM6jvY1SpT6AbD28
                      9CCnvYc4nb6RhqA+JaGcPueekD6M0+49Ud2nPmdYh778O6G+9g9VPitLZr6zRGO+rgo5vtzlvj3o
                      eB89zzaSvnd/nj4ccPE9okJYPng7Yj06Lgs+vEWxvfs2dL62fku+isxfPm6eV77I1DC9oyt2vjCn
                      Gb5znAm+gi1lPhRVxD0SI0Q+WE4Ovv5fNb5Gpw0+UPbXvW68UD6L5JM+WKg5PeADBD3gIQa9EDQh
                      Pmysnz2gigi8NG7aPWy7ib2eroe+tTunPoCVAbyWPOm9A+6DPiIyRz6ft4C+9iPbveJpjb6qwWc+
                      vI+6vY5hPT7aFaC+DnBZvpA1y7y0woG9ZOOSPUArZT3QJCC+bTmUPkAsIr3CkX8+ng+GvmCFSjyo
                      8QO94HQ8PFhYbL7Qr6k8BQSqPshfd742JK69wWCAPrZOUb5v7Zc+gJTCPJ15jz51Jqg+4Ogvvrmq
                      gz4gGiE889aPvvo4m75sCKG+gyg5vmw9h77oPI2+B+uLPkson77KroC+NCKevWB4QjwC2Vo+krUq
                      Pq7UfL64pZO+7q1kvsAs/719+4U+aJZEvp9hm77rRY4+CDJSvqD6LDxKqzs+AK2Qvo8anr70MaY9
                      mFstvuZuCb7AZpO+12KNPpMAU77ozj69zLXjPRg7nL7SP0g+jrgtvkhAPz3Q+NU9SLqBvthPjb6A
                      VFS+r2CKvrBv5L0kMYo9Ipo1PqJWZz722Am+7IPFPTRKgL05SKo+kEApvlYg1r38BcK9yM0IvZhy
                      Gz0M57A90FKpvYDhAbtBRI0+lHOSvgB/a72ADdq9utgTPlk8qj5wu32+DOXqPTiEET2wwdw97sFp
                      PgAqKDvgv1A9VujVvRzTxr00pvI9MH+WvbIgDT6h7KQ+MLHVPHDg+7zjgne+6KOnvoxhrD0wXx0+
                      WtFUPoBv4zyFAog+YQGGPiSEhb5Q3709yNI8PUpAbj4j9n6+aBx9vmYEOD722zm+BnRTPqBVrr0A
                      HRm9EG2DvhrGaj4QQpW8vJ//PVSIkD3ISm2+KEKjvsGdkD6w14q+yS2hPt5VBz669aG+xOaCPRau
                      Sr768l4+zqIAPjw+vD0c/ZS+1klPPgCCYzrmSki+WONpvVLjID5A69M7LLOMPbYkGD6wm7k9gE9m
                      uw5RWL4CeEg+7jp0PrRvnr4R8oE+kHuGvWC+uD2X3p6+04CkPmAUoT1Sdzw+EJ/RvaC/VzxT55++
                      wMnOu8jJJb74sXQ9XmxjPmzz0T2UPIS+ttNDvia7S76qQno+SkMOPmClNzwWkks+UCTHPSbNHb4/
                      UJ2+TH3wvWzupb6MuMa9a6hAvihsTr4AYBK5yFVmvr7YUr4LIqA+zFGGvgqDGj5Avc09CHVmvcMx
                      h76U156+CqUVPj8tlr5WgiE+G3yQPm8zkL7yoQI+sLAXPq7QFb4MI4m+1TCSPlLKnb4wVJe8vG24
                      vVhFEb2MYqk94qqAvi1Ihz7GBYO+rAfLvZJfRz5jC0u+39qDvoPTIL6xiqc+IGImvUb8xb17VZe+
                      arlyPrZfWz42ilk+/G7zPQA9PT3o3gM9d6eEvkVTgT46XCw+uNNzva0qoz5gZsq9c1KNvkutkb6Q
                      qOM8UK2fvDV8kT6YQT+9Fo8MPr5NNb7ve5u+kLvHPSJEOz4CA1Y+KGATvf6aJz7ufw8+3FnIPfJp
                      Fj5yAGE+ZhRwvj7CEL5HFqq+8wsWvuDid7xoCki9DhIWvmBFAL34WTm9Qt9YPkgyhr7BGJc+bgt7
                      Pn6CC75idZS+GvtaPiO2TL5eRJ2+MMflPHKLqr52lR4+JqFcvv4HSL5WKWi+vJH6vbK9OT7Op08+
                      cKTsPd82ir6YmUe9wXWaPrgABr5A0mc9jGeavnKmQT6wbAM+CPUXPqLFJD5aSIy+zLyBvQCQHL2+
                      Zz0+qL8EvVrdVD72i24+py2TvgjXKD5SJi4+5k4Vvvx6zb1QTpW+3Gj0PSATaDxgSda9CWKKPmcx
                      kj4GRMC9UKfjPLgjEr2wvvu9Ea+MPnavIT5C6HQ+J0OJPo2MoD7rSgG+h8qVPt5VmL4Q78k9gLXf
                      PQC/xDvTl0u+gBwsvohlTL0AeCC+2GcQvRfGiT4IbZO+2ystvjDA9Lx4mzy+CqucvtCCl70OQxO+
                      VIXLPbitob52E2i+0GfZPOFUgz4MnKO+lFSivSg6ob7whKA9/ICSvcBR9bxHKpC+4Julvr7bRz5V
                      rJA+cGH2Pet+EL7Y6Bc95kpwvh43Cz4dz5g++k1TPmDGlL0EOZe+AAjRvTIUQD7mBR8+kN/8PIbP
                      Lb4VzZo+OH8Fvj6iO74InXa+EFuGPXKGm76pZIQ+bNvFvf2ahD7LAU6+eMJhPS5uUT4Q8iY+qzSp
                      PgMhKL66p0c+toY5vkh/ej3YngM+kSSkPouggT5YI089ECLiPTiYGL7gohA+4LsHvTyPtr17H3W+
                      fPPtPULvXT67SB6+GPciPdqXMT6VN4o+YDx4Pdb6Yr6QUo29uB45vS5zDL5o7SU+tKKWvsP+mz4j
                      iVe+wGbRPOqXOz5M1Lo9cho7PgtLMr4b7W++6DMEvQM0Qb5ATYi9JAOKPcZ0UT5U18Q9fAOOviCZ
                      R74XUII+YKcFPb2rjD6YV4S+UKYFvnddgD7w7r+9u2CPPoLtbD5EkbM92dqUPlSEyz3uY10+8M2Z
                      vr7abj6wevK9k8invrAlvrzP7IY+Z+WDvugOEL6gcR89jCeBPSN1ar6D8me+QDzavPRp7T2AzDI7
                      QM/jPMwCqD0Q64C9npxTPsoNOT5Qsv88xsxhPljcqL46WRw+4rZ7PoCyQTtg7a29ag55PnDG9T2k
                      0NY9e7+oPlGOmD5ZSao+QsI8PoCpmj2Bh40+puhlPq6OoL5y1mE+DtJTvgAfwz035Z4+/PzxvQDK
                      Ojwnf4y+4JgSvcSC+z0ED6K+QK30OwHyjz6BlZc+Euh9PvYWqb5YJGe+YhluPrx/qb3hsoU+RoKQ
                      voIAAT4Gpgs+FF+HvgJEVT6x2qg+XkJXvg2Qjz6A+Qg7gFmHvXBD+r2LCGC+Hl4NPiDzAz2GOp++
                      YBRLvi5kmL6XSIu+3hRWvlg1jb4WH0++vV+OPiujGb6my9C9hjU0PhI1Wz5KMHg+OqRIPrAz+jyA
                      dF+8IOYBPRa1Z75Av1W9CIFAvaaQy72K2CM+YdWDPpgnML4ifAk+N6uJPoj3Nj2s5+C9QG89PWTD
                      kr1KSis+CKMwPdAVlzzhPao+Jh4sPixy3r1hRag+vHy/PZ+LjL5GlEI+EohwPrDSWb7A44y+lr0q
                      vmVHhj5af1Q+SNOavoS4jD1UT4S92vhLPgMrHb7skK29EHzdvc8QjD6bHRu+wU2WPsA02b3SZ3c+
                      aPZPvhKgLT5A/7A9U9ecPsYJXj6qzEE+UqQ5PjOZoj6jCgG+Q3mmvnJmdT5gLQc+pEScvmICbj6X
                      vJA+opNfPpi9ez14J3G9iaeXPuiDdb1sec49ZuttPmUfiD5EjIS+9K+EvmBfFLzyWys+roEgvvC+
                      1jwoQVm9KT6nPiBZWT2s+KS+UJSqvjKQaj5YE3M9ch9GPiKYRT50R4a9AEQ8vU58Rj7fuoa+7mZX
                      PmZ8xL3qFHI+vrChvgAk9zuiQ1E+A2wivvR5n73czt29vzOdvgZ11b3mrAs+cNWZPH5fR77wa9Q9
                      nE62vbLLl75Pl4U+8NGmvBYyID4U56O+4LdsvapvUz7WKxW+Zw+Evv4dXr4Yxma9FDbTPYo4gr5A
                      g8O8iLELvbg0Q75wcPk8Eh8KPp4eQL6OzJ++bN6jvSKlDD4k+Ia9UE75vIQUi736yW4+41WFPhC3
                      Q77ozD09lqOwvaBwVbzqIS4+kJ2JPcAe4DxQF5Y9ar8yPhaFeT4w5sS8igV1PkjyJT3Pk4u+MWmI
                      PpjObr14AgE9JsymviEooz4A24Q8I6l2vhsBlb4ASb882yyoPsJcMj4YNHa9GNccPdv8Nr5KlxA+
                      9v08vhZvYz5uBXm+5tqxveb+Ar780eS9449EvnoIVT5/x40+AEcxvKafyL3/J5a+sKPavZxsrr1E
                      /8s9lC+7PVDqTL7gdQw8QDb9vCgORj1WDIq+GDWZviJumr4cPqS+9snlvVV6qD5a+FY+xjyqvqg0
                      W77wVQu+eMxvvXKUob6+8ki+FwWXviLNjr62bou+lL+YPUBNpDtoXIi+yjg+PiDYe74AmgY98JCn
                      PE8onD6QQ/K8GZahPuDgL71AbFu9OwRpvsYk3L3wxzW+Co5MPoq9YT5rajy+RnCvvb7sdz5NZYA+
                      zHjUva9BjL4+PIW+2opgPirDND4cj7S9IFSTvY6var5ADUE9sAXuvHj1Db4wDAQ+roU4vkA607u4
                      Nyy9VCmivrkVnD5sadE9gExvvFzthD2jNj2+H5SCvpS2nj0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI5NzUwNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MDI5NzUwNHEBYS5kAAAAAAAAAPX2qD7gLKs9GFIAPWDg673W2P69hkKmvmTrkj2ciue9
                      xj4iPmxpgT2ov4S+iLAMvWaANb4+/xU+bjIUPgh8p762CHi+9FWNvo7QiL6wfBA+BIzVPexc6z3o
                      tgY+ehZBPugcOz1gY2A9iiJ+Pmz8sj0gZHK9Q5omvm4oUj7RwKE+YKosvQPKf77ci789YjZVPhAQ
                      t7wQ/lW+vnEivlDyQ74wIvs8gAinvJL+g75stsA9QHb/vJB9h71ajCY+OFcpvr7gEr6kxus9/l4C
                      vpLCh774QkK9I+5PvqXEkD7Y1CC99k9pPiCMGzwwvJa9YI4qPlzN170Mlcu9lvoYvt+8hz6OY3m+
                      38qOvnIXMj6z+ke+fpaIvpjuir6yGF4+2s0zPuCnDTyAlZS9gB19vJ4YfT4i2EU+sN7NPBamNz5Q
                      2cO9FMvHPUwmnD3IN4m+iUuJPuA8mr6CyTs+lmHXvWGHhD52Squ9oqIyPitNir727fa9do6hvtYg
                      ez70x5q+4ql2PnA14b0AHgu7GwOPPioqTT4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI5NzY2NHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNzAyOTc2NjRxAWEuECcAAAAAAAD/k7G9ArE/PX//hD3gcoq9+fqfPZCPWL2nqrM9ud+q
                      PYKyDz3alx69UIxEvZOamT1yWG49gGK5PJSVxjyifKS9+cetPRo9iL1Asxq8CObBvIWppj3MWI28
                      AOcKuuMQzD2A6BG8kFEgvCwCnTxAuHO7YiACPX9RsD1wozO9ogt8PWC/xjuTv3a9KwSVvZhCV7xD
                      ia+9R2dhvT4Nn73tIL69mK10vOr8Q72lMsY9IIyvvPKxMT3Cem097OuHPMDyUbtU4IK8eOyOPMiq
                      m7yg3Xo7UybFPQAaeLu3nos9sCRWvLtFvL3xqZA99potPdEmsD1c/IG9sBWLO/8enj22VmY9YKVP
                      vc8Cij1u7V097Y22vVCQHjxS2Sk9mSPIPQCuvrwThMM9JqYIvXBvdzzIGPu8PvUMPRhzmrwVb5W9
                      lHeXPJCBD73ty6a9YBy5vJZRYz1QWA88gCAqPCzxgbxWMU093keWvWKGbj1Bv8E9gHA9vVl2wj0o
                      0om9mO+iPB1dY70O5xQ90OuYvcA2ZzwA0528AvEBPcgbwzz+UCo9BrOBveaZBz36Kye9qJWxvG3o
                      wj3fbK+9cup0PbkKqT0QrTC9m7C0Pct+sT22HRA9SplwPVIAhb0Qjqq9Jz4gvQzu97xMgaO80Rqw
                      PXRiojxsyou8UktiPe0MI73sAcC8KyaYvVGviT3+5JG9TNTZvDBAJ7wgSEK90qQpPSRZ0TxQOPA7
                      I9lvvWARKL2AhBi9sDWqO8DXUDw46oY8StROPeo+ED3SX1E91+mKPSyy+bz0ffU8qMJjvIw5hTx6
                      7Ie9qoUivZjCSrzAHwY88GADvX8kzL1Hmmm9vuSavfVWir3Qcn29oBOPu1gu5LxT2D29/8vJPQ2i
                      yD0ABpk7QKhuO84yp71MF/q8/dSYPSkLpj0M/528ZTKRPQCXUTp4aLi9Zyo6vUWKq72Y10Y8QC82
                      vJc8dr2A4M677cynPaDJxzt3Yrm9tRi5Pc3rfr3g1uo7QioRPQLkUT2sVe28MKj9u2vwob2LSq49
                      AldNPZpPgL2g7r29y4SZPZiPCDwKZyc9WVuTPf0ysb2i0Qg9co0sPcQj0DzGRKa9KU2cPeSMFr2K
                      LgG9L5HKPQJ7bD0aeym9oF5AO6AI0LzWopS9P1fJPcxazDw3ire9eGiOvR4xDT21z8c9cDlcvAKf
                      vb3g3/07dr43PSDi/7ygQLK9ais9vV3mqr3a98K9AFDDN9gpgDxHVF69sIopvXMfdr17DKc9Vgcb
                      PeNlHL2I+Li9wWeqPWK8yL2bXcE90+nJPV6EFT1s6tc8lLKevHKbwL2eQF49WgImvb36sb13qZQ9
                      BbqAvU12i71BsKM9q3KbvfoELb3ERNw8LeRkvZfVRr2Yyhs8JTGovQ+CtD3WIJ+9gllzPQB0DbqE
                      3/I8FIKxPG2Ag73j5Xa9rLW1PMyalrw0irs8dITUvMfzsj0CvTY95QyWvRX6y70lO7U9GPn1vFqc
                      fD0xWYA9Yz+Tva+RsT3nzzO9rOutPBq9L72QrW+9iv9KPZIQVz1t67Y90IZtvAi7wby3vT29mEwP
                      vHYjND3ANF48jC3bvIfnnT0Yg6O9s2GpPcin0Lwyxnk9bnRJPb83xr2YZzw8rJiIvLWzg724J5m9
                      +SChPb4POD37B7E9DLbiPDqaMb1MPbw82RGmPWwr1DxYubC9NnuHvYhxuLx4uZC8YGmauw/iv72x
                      Kpg9yZe0PeoDp7354YE9n6iyPVMgvb0Cuse9wH1gu3KQIz0nwa29iPqLvMCpf7thj7s9yczFPWAh
                      pTvSpsK9YB0TvaDgv723eWu9yFvLPC+Eij2MrPS8zLiEvUAbIbsjZx+9PnmLvQeItD1zTkC9Bh5X
                      PVRC+zxgR6w887uUvWpALz3DHas9w7E/va5WWT0gT3G9bHmmPP2aX72NlGa9uAO9vKyX/zyAf1A8
                      e4rLvUpuur2QQsW9SeWgPb1hxj1xnZc9mK0LvHAFnb2wZl29KWibPQntmz1ow5K9MwmrvffaH704
                      Joo8PtMUPV37qz0435I8JRmsvYDZlbzAFLo8QgR+PRjRwb0XPaE98C82vNSFmTxLpbg99rgLvQ4n
                      Ij0mP469CYXCPXE+yj2oOrI8IJzYu4YJAT2yvTw9S4aevdDMIrwA0Bw8j4+yvdK5ib0yAGY9ffhe
                      vQCMjrhcr9E8TEmQPMZmRz1eSkc9bE33vHdrd71558Q9qrQbvchmjDxqw6i9uv4VPXQGhb2gDn+7
                      0GzBu7R1zTy0DoG83H4UvdghGzziZi490L0IPHprYj3SiDs9pQ+BPYBcSjypnbI9Ps4iPT4XND34
                      Yvm8qrJiPTcCNL3Qjg28cweqPSorBb1ZD6M9FOuTvADS9LvNCi+9wBhLvLKlnL1w2kS9uiKFveh/
                      OLxnVa29mN7APAhzmr0UX6o8+rREvSiT9bzqFxE9V85EvSZFeT0qp4m9PYN9vepgGb1DPYg9wGVM
                      PBAjxr1BCKM94EcCvVKbMT3ik5e9Ovosva63p72qLlq9sta3vd2/d73rkaW9a73MvVUVxD1Nt8M9
                      lvINPZZVEr2WplI9R4vJPWUcvL1wBU29oQ+KPco5Mj3ugiI96iRkPWMVJL1vH5Y9jECIvDqyk73s
                      HQ29yq4gPQC/nzs7L5w9PBjZPMh/nL0GZAM9Y2umvWpgnL0cZfw8wIlPO9J8sr10NvA8JgUKvQoe
                      Tb2A34275X2CPYBFULy0puY82P2QvCKcJj1FwJ09wHx7vAABDrzQruG7AHUrOxWZxr3OR3o9OkhL
                      Pdh+cbzVJIQ9IDSZO0Z0gr2Onjg9YqLLvf2erj2KR069hwLEPc3MQL0a/3+9qLi5vephkb1o5q29
                      QikKPfbgNz19Eso9gIZDOqT+6TyAuRm8I4t6vcB2ZTv6iae9r3G5PVFBnD2AIt67eHnHvU6rCD3N
                      mYa9OA2LvI+Tur2eORk9WGK3vRDDfr3dtUi9gEoYvNDqKL2NSbI9jOapPKEkvj12CW095XmTPWHT
                      vz3+o249EA26vcBP4rxiPRg9GUmbPUUwpr2g+qG8YLAGOyJjPD3Qjl68CZS+PQCUcjy0qt48DlJQ
                      PShptzyYGym8iu0WvdS6mTyoZja8ro+Qvc3cn71ANU+9ongGPf9Swj05RaU9wqcIPVTvrTwjr7u9
                      SRyePTKSID0Iqqq8L02uPfixw7wYgGG8EF4fvHrap700VKW87Gy6POHLnj2luIg9gOV9veibUDxA
                      Lgs77IDiPBQPyrxyMUY9OKe7PNjumDztdq698QKGPeghJjzW7Xc9Rd+JvYAMhTrr4YM9FNmDvIBx
                      oztIoKq8rZ0svWaoOT2JmKo94HbMvRD3L73COFk9v0SGPWOfPb1ohfy8OO+8PBh+BDziZWw9ClOx
                      vYeQR70ADSk6URqQPRKwkL22i3I9UEsVvB09t72SOzY9kzStPUB2Ubte1B09YCtLvaB1HTtAzZO6
                      jDHyvAF+rz0weG+9ZX2pPWbrMT2g8TO7Yy2CPZ/omj1RFY49IIqqvL4sgb0i15u9aNGRvOA57jsE
                      Q948/ZCivXMpfb0AUqY5j0GEPZn5jz1TxnO9M+CRPbJ0Wz3pTcY9XmZGPTIePD2QNa69L1WpPVvQ
                      x72CfRI9GLguPIBEbLwYPbM8gJqIPHbRhL3MkPg8V1hMvTQuqbxoTMm90zqpvZ/nvz3I3P+8xa+U
                      PcpGLT246pC8PQ5rvUbHKz2AKRW9AK/bu0dTsj3j0ps9ugepvQClxblNZ5O9lfa1vUwT6byVHLe9
                      OhgJvc0vab2sOpI8Ib2mPdhLFTx2Bxm95ggGvdJDIz1wtzu9mBa+PADAYrfq5Qq9I5d4vRAEZrx9
                      WTy91uwhPUkKrT0GMzg9iKH8vHXrn73qRDK9WFyRvVDctL1g/Du9h5LBvbYyCD2S4Dw9qM1rPBCy
                      B72qwLi9+zHGva1ajr2YUaY86XOFPYhXtjySLS092DaOvMArbbufPZA9jCsGvX0oO70nccG9QUfI
                      Pa7jEj3KG1G9SrJzvW0gir3pMKk9oB9iu3NCnj2jbEm96FqrPMKWTz2LFMW9QIpBPCJlRT2dlp89
                      rkyjvco4YL3XJFK9/qg5PSrSaT2WCEg9eN65vE+Yrr1Y2UG89RCNPQBrzTvAm8y9A7d1vcaJEL1f
                      dpQ9+mJPvXTEAL25vMI9Wst+veSm3TzmPAM90PozvdenvL2UEpq8YGiGvMzo/zxln7C94M6NO5io
                      yr0soKO8RpAWPbiMubxAV1i9zCATvXqslb1Spgs9mB1aPN6Wbj1Adrm9FUKPvQDKGrlhH5M9vZDI
                      PdoIdD2XQk29oF1dvVG7kz195p+9A81KvXrNBr2w5t67Ew5UvaiBMDxEUQm9A15JvQjAw7zT+E69
                      2ETCvaDL/rwAEtw711zIvT5ulL16w4u9JtQRPcD3w72775U9gll5PRASI7yE2IO9mja+vehA7LxA
                      Cfi80GwlvV7yZT248Jq8e3Olvbp3ir06wBq9guUcPRFttj3eS6K9wkIcPYrmDD2hYck9SIO3vTES
                      lD1N8Jq9RC8Xven2nD0uxH89w5mAPWBsGb2CBUw9b7W3PYEQhj2qIrW9MhF0Pe7WbT1UM4q9vt0i
                      PVsVxr0pgaE9MH6mvd06cL23S509+GSdPLiwmbzFksi9gGKUPAOhS73etqm9HjNcPTAKfTwSW5e9
                      qjlJvZdqUb178pA9toQjPeIhbz3BwL09bblUvT5rYD2qhWo9wHp5PDgPx7wmcic97nxVPfJ3iL2y
                      Hl09AIuvu4Sfgr2qDyW99FTuvN3+ZL2eBmw9SCirvSc9rj2cOAq9wFmvPLa1Nz1iIiE9Bm82Paqq
                      Bj3AkKy8CtNvvYVgkD2a2W09AIoNuSgVHryIPKS96NJqPAD7p7sU37w85j9tPV1DQr2vvK49qK16
                      vHRq7jwIc5Y84BG8vGAEU7uke+o8htgCvfcuO72vj609Dj5NPVYYkb399SK9VcGJvaAoTTu0g4i8
                      6NdkPC2yer3mrEw9QBYgvAJlWj2ZxcE98AI8vLQgi71QcRc8aSqLPZsDmL0KCHg99J7MPMyA67we
                      13Q9dPGGveajaD0Jpak9CKuJvBBOPL1Abni9MtwhPbqQeL2SbhA9AN6COw+uyL0w/mu8egA9PY2H
                      oD0A4KW3zmFSPUzPlzwoKDM8OCLWvDClobtIvLI8aFurPOAU3ryYrLG8p7NhvYhTmLxzuSi9uv0S
                      vdDhfLygEB+9Q4pbvTBR+TsLGYY9WNlvPEfuuj2TuMM9kQGyPdhJWDybd8c93NaFvVhLQDzdy3u9
                      gJ8lvRWVlT1ABmU78AIIvAI2aD3iQRI9spcCPbA+mTtIX6O8rAbJPMqYTT0Ar/+7DhaYvXbMFT20
                      H4a9+Be4vSKYir3ckOs8WIWLPLocUr3xdsk92scqvQImZT0a38K9wLUCu0CjTTzahJW9EBRNvO3C
                      tL0t7Lc922qxvZAspr2QhHc8MmkvPRYqID2bcIU9zUN7vQA4aL2dZak9jLLsvHAqS70AoK04Wj2e
                      vbPLV73GD0Y9PbOwvXQAxbwCEHA9lzoxvf4bp70tmp4958MZvd0eoj2KTom9oyR/vUIocz0ghUS9
                      VBqsvEi4yb2qSTE9kNytvT7Oaj3O/zg96JiyvEEBrD2AAAy9qlmGvR95oz1AEvm8LvwSPdOBwD1Y
                      3N+84Cb8O0SQ0DypfaM9+D6GvSLfob1E9to8dEbMPADVzTkAFIq48LxgvEDqVLz9k1C9jTCTPdBZ
                      vrvgwbW96o96PXzZF73iR3o9kUGvPUVFr70wXee7hCXkPMDkhL3iegc9oKsLO7CQuLuXoEe9HWcj
                      vetEzL1A22A77FXavEnphz3JMJA9ALyXO/dAHr1jfF+9AAkSugA2rToa7w09199NvUKdNj0RrZw9
                      z/HCPVIuAj25/KM9DlpXPU9olz0wuwa9SyW8vXcygz1Vh429gHYMvUnMyT2Xr789X1mxvSded71N
                      QKm9myLAvUfBTr1qPTo9YPsvO/jWoTys6A+9EJcWvQ26H71evCI9h0unPeHerT1Ao9A6pC/zPDrl
                      DD30ZdI804SxPQDTk7yoN5c83XjAPRNelL3J9oI9BpQ3PYS43zwCLzE9I7CrPZgFyzwgDJE85FYR
                      vSIAST3QRoQ7gF/LOljIDrxGpU099MnKvLjf7LyobLy8iZOKPQCjBTsfzb69zyivvSS44zxMAo28
                      t1eKPVNutT1/c709qvYxvXQoq7wi6g89quByvQD8HbwJP509mDedvR77mL1zI1+9lsZnPfCxI73d
                      vrs9tR+gvQIUBD1AdFY7AIMFvcZBSz2w48S7INu1u+pJlL3Muau89dmXPdt8nL2CUAY9t4+BPUDe
                      jr0CM3I9vnZ5PY5rZj0kjwy9uvgMPfU2uD0X9sC9qoihvRb/k70BJKE9YD39O8YBaj0UbNa8A84i
                      vetIs70iDHk90N4hvJidSDy2b3Q97IWMPGqPLz3AAqG8lJ+rPOMsvT3X/aI9w9q6Pai3XrxQPFq8
                      8JZpvNCn0zsQ4WO9YFCJu3taob3dolq9AGshvJEsyD14b4I8OrsYvXkXyj2hNok9hxhZvWicAbzK
                      IQQ9C/K2vSSS/TxS0xM9AOcnu7LoPT3U1Ok8OP+bvCyOgDyIP8q9tCLKPIxK6zxosJ+8zHTVPGAZ
                      LDswMb29xGaLvYi9jbz6dTA9cjmAvZaslb0UgIW94GktvTLBub0mY4W9HZPHvQlzkj1gT3W7Eh4d
                      PVL5lr12nnM9cf/BPVK4Vj0ACM64w15CvRQqqTzwWU48IIeQvZDCKTxihpm9uGegvHDYCL3w7bu9
                      TMsBvbNPrD1ARjg8IfSkPYGeuj1uyTs9jWxgveBtmLvgQrK7wiBEPdXYuL04XsA8AIbLuUDhKLt3
                      /iS9cyHLvUVHs72wFjs8GrdYvXgElL1Ag3A8zRS0vWpysL27t6M9IGVtvV0uw71eKYG9QOGhvPTJ
                      jL2yVyg9dRKpPfuBt72bi6o9QK91vVwR0TxC+S89RpABPU2fxz3qviu9yGPbvABOFrt2yF49sPKL
                      vZIKg71AXnY7TPjkvEcIkD1A+6E8QtRFPSi2mDxJXIM92FgWvDJou71AviS8sPZIPJIQYD2xApQ9
                      oN+MPADOOjwYKNS8mJBRPPlikD1DQE692ZCRPdKkcz2YMAm8vaCFPStHhT2m/569cdS8PS2TS72u
                      SZu9SgSivSLyND3QKVO9rVa0vefzU727ubY9aVCYPRjhVbwVuZ69Dk0bPfJ5PT0QNDG8lDfRPC34
                      XL3QIqI7zMv4vNdLMb0AtuO8kbinPRimNjzVqKC9QMZOPABAcjo75LE9IoV5PYftrT2RNoM9nXm7
                      PUDVc73VDbW9LchavYp9Er2CaXU9K76fvU2lqj0s5/68dRe1PbvzkL3iRYW9+Ta5PbVMxL1or5S9
                      W0eVPWKsJD0g4by8S9G1vcp6fb0KYxY9qCMlPKBB/rxjOaA9QIKbvP8msj0FVqU9GWS7PT7QED2Y
                      i5c8ePeJvcouCD1EC9Q8OrlIPSXcrD1qMxI9ie+7PewbBL12B4W9pNL2PBY7jr0DCKa9wnNWPaxn
                      1jxU/RO9cEUTvaFsgD1AwxW8ANfou6l2mD3oFmK8oJGFvFFnlD3pzZ09Xlh4PeCTl7053JY9Z9G3
                      PYuuuD2AAoO9De1LvVGIoj0UWNk8PiQ6PZigrr2HQD299mIsPTSI5rw2r3o9u+O0PbYZfz1290k9
                      3ZFUveZhaz1xX5g9dsItPY9ot73M/hK9/c2HvWpkur02uqu91TG5vbDc2bvonMq90LoGPAUqrj3W
                      /wk9jOL9vHjsrzzzz4692NIKPBpdUz1HcWy9OqZUPUIWFT1g+4A7EWelPVi6UTwPfJA9IA2+vMLR
                      cD2AS547/9q0vcjrpzyxQqU9MwM8vRMAUL2QHnY8H1O0PXqlJL2s/8Q8toMJPYKivb2aS3M9Mr9h
                      PV0XpT2KM7S9cwqhvRm0vz1AYUQ8LECIvLAMj70AvQG8YCcnu4DVZ73tJ7q9bYSBvXBCfTyVBrC9
                      qpwyPSBL9LywSXu8BfzJPWWQob1A7WI7IJCxvSRW1jzqQcy9sI7ou2JHBz1Xvky9A1Q1vafZRb3A
                      Jxc7EiePvUA76DrQIBu8yp1vvbCNNr1S43w9DvwnPbDk6bswDza8WFEePOBW47wnVx+9wMcZvKDD
                      or3gSLO9UlWmvSEwoj262iE98NFvvTVblT16W0Q9APkQOpN6sD2Pf4U9HtlTPUAtUb3GsYu9AiyF
                      vaCnjLseAhg9GOmLvWQa8zz0jRC9VOLHvCDw4zvOSW894PyAvbadir2jn7290vKfvYBn47rDnDy9
                      UHMhvFjWQLwuVJu9SLyUPAu9xj02pGo9IOSDPFpuKz3XDsy95+x6vWKIMD2jrVS9QBrBvIAPWzzQ
                      R7K9Vem/PXDJaL0eVVA9kHw2veKpMj3lSJe9c99QvZfyiz2pM7Q94yi4PZrQWb3hGao9B2kpvVS6
                      0Ly32r89MAZJPPuPvr2gbHq7MeqxPXo7mb3APBe9uG+RvQT//jwWnoG9wCg5O6LKbT1vXJ89ZhE4
                      PUAwMzvQuC087QxTvfj7gLyNRaw9APsOOtBrIbxSQmc9AL1AulIVXj39RnS9zoIBPVsloL0yTnI9
                      wINuOzZmLT0wCTq8VgNAPeJBKT1Gd349IF43vQNIvL2KtIi9y0e4Pbr7vr0qdRo9QEOuOiwCvzzj
                      bU+9xrhMPTNFjT3LTIU9YMSdOwDKFjupGr89urSyvbwu5Dx+IoO9MHcbvDCQDrzQ59c7DKTwPEYd
                      bz1PGp89NXa6Pbotsr3UbeC8Uu9lPT0yu71jfIA9e1WNPVAEZL0gWI47FuZNPfrZCD1g8Jq9yPCh
                      PIiGyzwjbJ+9IQ2EPUlDhT3arQW98vs4PSwD9rwgodc7dCCHvIoVeL2AmI87UJymO0hXkbwTrqA9
                      YNSUPDK0XD3+V4G94NvHvYa5Dr3Nd029iuR2vQAaUztTC5c94Hsxvc1Car1kLu087e66PWoFUr0w
                      /Lk7tMmLvQYIBT3S32s9pl03PaNbIL0iaRQ9ksqbvUC/gLrxeq09su4FPbDcor1Qirq7q3OtPW3H
                      gD1Mc9u8ZPuAvawIDb2I0ca9Cf6uPZiHu7xw3DC85oCGvahOtr2OQJ+9gCTPOvTo4zwOiWI94PLm
                      O7hV8LwArM24GDzfvOlOhz0POsG96O+dvcsUmT0eSB09NIfrPOAPab3U0+I8YJJBO/IJdD2AAiS8
                      ao1MvZBUBb16ugI9yIehPLhkvbytb7a96vcrvXbkBD1Qt5q7N55kvaxkC73LiJK9c0YcvboOXb0Z
                      Upg956eIPRisujzsg6i8uFW7vQBlg726/y49Decyvc6Tob0kou48d+XDvdFUxD10UsC8C/y/PdAP
                      8TvWiwq9guZ5ParURD2oO6q80y1QvTiNwryoSuW8GVCEPdT0lzyq1xG98GgXvTPsij3m1Iu9NHCk
                      vGJ7iL35AK89gFPxOiRz4DxAvzM8gk4iPQy1pjwhLY09QPEbPIoOK726TQs9cPUJPDY/fz3i3mE9
                      2FlBPDAL47vnIL09O4ixPSBomL24BqG8AJzpO7KMdz0zCiO9CADlvLJNMz2U1o68ADmoPFg4jbyV
                      osM9dJXuvMAINbsqali97LaHvEqXOT1mZDE9cR6HPVQe5bx3SBq9cvcdPdQeqbzshZY8rI3PvGpa
                      OL2Nmxm9bz6QPZLgh72w41m8GsRNPT5XST1jEZ49AOChuhImej0g0P071FeuPANNXL2tCcK9YJfi
                      O9JFRT1zWT29gKsyPPWDyL2g2Ju8NBqmvFhCTLwbGqA9/RayPZsvtL2ngbM9p3THPZ4XYz1Q7g29
                      Kqd7vYBfFLyzr5a9uuRqPXVHsT1/3rS90+k5vYtDyj2U/+K8Uh6RvVeKtj1A5YW6SL+RPDauRT3u
                      F3Q9Ds84PXU7l70rj7U9sJpaPEqJib1Mw/I8wJKLvWXWpb2mLY+9t/2IPTK4Az1yQjw9mDfMvPD9
                      Cr2Y85Q8uK/zvPrQbL1QEYW7Aj5XPdCdnTuiQjw9+yW4PYPul73lOIS9YFK+vaVTk71KY3I9DvkF
                      PbeEv73Io548v7a4vfjwtLxqx0s9EAsPPJoSAL3k2v88vo1DPd28ob2EzuY8Xfo8vXGYvT3ZqLI9
                      PocZPezF0ryeQ1o9cqoLPbS9jzyN5me9XOnoPKB6Ybv2fR09ApY5PT/dsL2PDYw91/mBPSXBlD2t
                      5Bm9qHaVvY3wUr2A8A+8HtcDPRjlGLzTLUe92Aufvc/Csb197pU9jWs4vZOqQ72TfbU9YCMeu8Ld
                      aj08Gfs8o4GUPdgZDLzA8Yw8YttkPceKJ70DACG9Oh8nPfQBtrwAvoA51xSQPeinN7zrBIE9MuZX
                      PXrwsr2DSzq9ELB3vGsVo73WxAS9V7d9vZ7JZj1jCiG9y5XHPatqyj2gSL680MoMvNogBj3ClUw9
                      z8etPUXuhb0CF189gWGvPaTB3zyAhGW8EuI8PefSXb0o6QE8ffGyvapcOD0YkJ28FHnxvGhFLbxS
                      ozk9NETHvLVLlL0WXqa9qgmpvc6YMj0utpa9Y/W7vVD9kLsK0zw9+JiTvGI6ND3Y7LM81cLMPYAk
                      qDqghsM7ssdiPXRWzbyPSbs9gjg1PdSJrrwDSlm9FMnfPNg2/ryflYE9kFElvFy+1jyYKNW8rukz
                      PVT7Dr3D1yW9zdKJve2ivj3Uvaq8dgxdPSE0qj1KCRu9XU+kvTNEKr1QX0+9HHwBvVQqmzzg6Qu9
                      qcifPegEiTxRx509KJwiPAAYVrghCpo9wG04PDTm7bzyEH09SuwIvdPMqr1DGx+9QF00O1PgQ70S
                      uYe9YnIVPe38rb1p9Yw9cFtbvLQCsDxO0Bc9zpijvd46ZT3ABgC9IIatvPHjjT0Yfw68w1uQvU5t
                      jb1aCiE9DlonPT4BXT21Nq49eh0UvQBCUjuthC29wBJ6vLuiiT09B8Q9HP7tPFj9Arx13JW9NjSn
                      vY9Snz3Ah8u8WM5APEerYb1k9OI8riuPvRrZSb2wQbO9MOm0vYgvgLyyBnA9fCQHvdd2VL0QN0y9
                      wB6iujIPjL2Pg4c9oAGPvP6CTz0wiWm8lHsQvaBREztYbaU8hlsgPaPjb7302LA8Fn52PWMowT0F
                      fou9VUzAPYC0tzuAf5M7QKwAPLqwNz16jjA9Rj4sPdgTOjxwnBA8DRZYvSs0mb3nS8i9wKtLPIws
                      1zz0Z9280LaNO7pVM72rhow9aL6zPGht37z9cj69HWRbvaNQyL3IQ769BFT/PANFqT2QPjy8gLpm
                      vQAKqL0oEWC86BS1vVhqmr0YpRg8qJq7vNOswT0u1mQ9cQy6PfI+fz2YmKI8aw6qPWCN4LubUcA9
                      VmMmPdo/E71AtVC9oBGlvHGcpD0exIq9rZ9mvRo3Cz0Jl5Q9UHfmOzewvD0WYmk9WAmHPPLxdz1n
                      YMG9pqcXPSwb3rwgN7G7ApdgPRPfK70sgZG8oN01vUX6nL0+XHo9xBvYPNKao73SMjA9VP+IPCBc
                      rTwwjRO8Aam9PUD2Hb1tK6I99CnLvCBlyTyyQXc9LpGRvU8qmz2AL9a8Zr+BvcBJWLxIGK48sEZP
                      PNiFx7yiVoS9Ei2gvVIzUj2ARuO6AJrTuxBNK7zHV1G9+AaNvSLjKD1Sose9PNvUPMyy8zyAlGW8
                      VrlRPTgm6rwYfWo8wxU5vYMfnb02wgM9MuVJPWNvrj3HzIw9A9huvVjzxDySPwU99zatPfBXb7wg
                      jY88a3GbvVZtAz23hqQ95YaPvaERiz2HdFW9AMu0vai0kDxwImm8wiqrvT24V72HPRu9jqE6PeDu
                      gbsgJJm9+WS0PW3uLr3Ha1C9AGskPNgcVzyyv209WDqYvfp+Pz0tr0S9g+lHvWvVuD3m1Rw9Cpkc
                      PThE6LxduZW9Jxq4PX1EL73iu0o9M54kvZc+qD1jNJ69qOdDvKJPu72Qf3+8Df+FPR0HLb3X1XC9
                      YhoWPVg3AzwwOXO8LjdNPRSfn7zAEnm9QsMxPcBUdDu9vW29IWaJPdIJpb0giwe98Ms2vN3yp70q
                      wz296OiCPIDJqTvgAbm8MM4/vMKSej1f0bS9WCIxvEqoZL1MIoK8yg6YvcYrpb37b4s90AJuvWxl
                      8zw56pI9oMu3vFlilz0ZPIo9qEIxPPjauzxAOHi7ojOTvS6fOz2zI0y935GvPW0HXr0Hp8Y9s/ys
                      vSyg0rwREYU9slFjPcVkwT0sXMM8d9WSPV2sNL0QE7a9yJKPPG5pJz3MncC8IiyivTgGzDxorVO8
                      HoFtPVZ0kr2X1cE9AA3XuZilbbwzc6o9k393vTTUFb3zL6c9Da54vd0/ur1T4lS9QxtTvQDgTruU
                      xem8Nnx9PR6haT0fm4s9KPSFPKoZZj0eVhc9WAg/PKHphT2gjQu9lx+tPQDWYrtEv4y9KGuJvDzl
                      gb1NgiW95s1qPdJPnr1xyYM9A5eYPVr+Er1PoLm9NU6/vai9Obzjc1m9Fa2pPZSnrTwM1uC8AHFr
                      vDLaQz1mwZW9UNMJvOKWTT0yuwI9IIqNPCrZZr1Wq529sN36O0BTb7sUppQ8gsoqPbrtqr2Leps9
                      Oj/HvXDcAb3p7rk9q3+xPTAxwL02wkY9YhV2Pejgd7zgL9e7gFbhu3C1dzxgsiS9w/qCPdllhj2Y
                      JKK8ksagvYPIjj0ii6e9xpV0Pcb0FT00CIc8Hd4xvf2fw71C9zg94gtnPYDfhDx9JqC9LQK2vQbJ
                      hb1IU7K8LSGSvUq9fD028KW9P4/JPUo+ET2lZ4u9pFb4PKy8gzxt3Hi9aBZSvFLyNj3w7228TEcN
                      vU3pyb0h1Lw9gP5PPCeDxj0BV4M9YjIVPWIAcD2MyIK9uukbPeC62jvSWxg9YCx5O3LmRz0N2YY9
                      ITWNPdEehT0D3bo9k/NbvQJmbT3iFsK9C1PFvdqscL0CC7W9CstLPZiunr3M4Jy8ovitvcuxnb37
                      rcC9YInGu86mLT3QsV69GiUgvUp8Aj2oKJ4883e1PeIjtr2spYi8Da+BPZKgBz3ykIW9+4KWvbgM
                      pjzW5Ze9mwervZ6dQT2nRqU9W2GOPYDsp7uTF3m9NwNYvarPI72ghqK9sGBPvN7BRz1Y9d+8U15y
                      vcDghbzZKrA9K4bJPZaeEL3sj4s8o3eGPUFgzD1nQke9zDOnvIJTDj2AYtk7aNPEveaBMj13FyC9
                      DnsdPdK4ET1oCWs8rsYzPewGF71OGQY9Y8RnvWvJvL0lz7Y9o8CevZS48zxT64E90BwpvJozZD3j
                      obe9IiiQvZvZrr1N+o29NrsjPYBIUr3AREy73cnLPfaIIT1dDMG9sia+vbSzsTyQITQ89XiSPViW
                      y7xO0Dw9AF7nuuosLj0ZFKA99CG3vBqcHj34tqO8IooJPQpvxL3JxJ89xCL9PJNcnL1piKY9lH7U
                      vMOCqT0wgDC8gEWOu5GWgD1ANmA7UPkUvSFOxD2cRQC9phVJPTLuNj3ZBps9ai2+vXdHe705Io89
                      I5K0PbCqCb39UMw9oEZFuwAPODvtM0+9e9zBPVOdmL1Y8rg8NYmMPbq3SD1d4jm9ncF3vSh1hDy9
                      Sb89KL2cPFf7dr14er+8wIE5PJsmyT2GEyo9ZvyNvYoZxb30oNa8wMr7usOeIL00GNI8R8tEvSrw
                      Sr3GzW09IrfHvWiqRrxb8aw9wgm9vb5zLz0DPiS9fQN1vQDRfb1guWI7YN4TO2YYgr31ZbQ95gYM
                      vXoulL2rabo9uUSzPUAR3brOfVM94JqWuzkxkj2mpiU9YBcpvd3Zfb1tjWS9sKScu6ricr2jLre9
                      N0SPPShxe7xG5BQ9xeupPf5acj2ogII8qhgfvWJqXT2+d4y9gmKDvWDjQ73BbsY94HryO8dFS724
                      +K+8Go0FPc2mrz2R0ZE9aKOYvVNZmT3olL29GdqvPWC7qLtx4cU9OpJLPUhvnDzHXMC9SuUtPU7o
                      jL3ohmQ8ioGQvdOxpr3TErs9VmsQPYI+mr2Ay9w6NZGKvXYvZj3KRFq94KYCvXFYuD1QrSY8gP6+
                      vK30fr2A+OC6WHGXvMiTzDz6Qo29RTuPvUA+SzwPfpc9GLFxPIiO37xGR4W9bbCOPenopD0g4L48
                      8A1WvC4WND0uun89dDWaPHC7JrzCxQM9FmgAPe6iFD3DUFO9KCtEvDXBkL0F0Mc9FQuUvf9Uwj3R
                      PJE90lYGPZzj5TzyZ2k9woNyPYLou70MoKs8AaSlPTBkhr37EcG9N4LLPVh0wbzp9pY9sA63OwDm
                      CDs5MMg9AGogO82zvD1oAwc8qE9QPPTqxLzh1Kw9UKb/u/Nogj0g4JW9AChKuDLSLz1typ49AK3V
                      udppLT3em6e9AEhqumAQsjx4ENW815+/PQKwAT20NI68nUihPeqZOL2WXou93XCpPZ4ASD299le9
                      uILBvWpuTz3tgJM9vrIZPc3lqz3Av2I7JjMWPaC4f73on5S8c0UrvZIFTD2a61c95+NMvYAxvzrQ
                      UJg7D1GbPXg3tzyWREY9ZM/bPHj1/7wAdwo68uMcPfYEGD26RD697tk/PRTeljyOc4m9kNYnPFpc
                      IT3I2Me8WIG/vOE+sD3AICq9TVM9vbcNrz1hXZs9mIjwvAdON71A3K29OssLPTL2yr0XWZE958tP
                      vVLaoL0YRkg8EfSdPSXBmL04aca8v2OvPamvxj10icq8KVS6Pcg25Lwunay98oQ6PTAZaDxUZYg8
                      qh88vQoVwL27qI29AKqAvaiF7bybkMM9Wlm3vTB5T7wBMIs9gqUKPYSNDL0C3IK9CD3SvGTyzDxN
                      /J49gGX0OyAkkzxBe8c90Cu4O2xSvbygYLe9sCv7uyejuL0Y9oC9VLWWvDDcmjt+UAo9+g7BvV5w
                      RT2nEJI90buyPcxQ6ryRsqg9AA90u+IGBT3wMBW8Ook+vfk3uz3UZe88796iPaxRmryAoJU7ADjz
                      uDyZh71/2qM9gBRKPGjj/7xI2fu8oQi6Pe5pKD0D6Li96C3wvKb6Aj3jyiq9xb2/vZLUIz2+3ae9
                      EqBPPeo8YL0qUAq9uvEfPWi2abz4ubk81+OvvaYrk70XZKk9vu4xPUCCgb2316U9IM2uPM12zD2I
                      hKu9JWu3vSggNbz5BoQ9jYi9PZSK/Ty4mZ29tiGivQAnhbwLfbG9gLzSO0Aeob3QrVc8J65mve1t
                      WL1YtiE8gvV7PVjlhTwoMgo88QOWPSP5O70F7IQ9VUqXPRjUZLwAAwS8PjFRPdBpPL2iVjA95z2r
                      PcBBGjzTrLC954gavV3CeL2Rpqk9FPHpPAajJD2rHsY9CnQvvWgzEDzMStM88FIWPID4Gb050589
                      mxmUvWfTQr1aMQW9IGCrPLI2g71Q0t27UH79uz1bPr13Y0K91AyovBDGY72vHo89dRCYPZ6oZz2g
                      C5Y8hgQbPQCMWzwtZyW9qggBvakBsz3K0Wy9mQCdPYWduD3gRsq9wppIPSWTqL1Wums90tcVPWF4
                      iT1WlhE9MFbbO7RIojwbSIk90MAuPOP5uT1L5Ku9WJw7vF75qb2ogdW8LYYzvYIKbj30Bw69or1c
                      PReNmT3TVbq9oSKKPeXWxz1gPdW84DmpPN3wvT1Vapo9OTWFPUNNtj0YSFq80I9evE5gbj3KRFg9
                      IrFHPThhyLyXKpY9s6VKvajSMTzb/5O9nH3fPOo6ej1iEnk9kzGbPWDtYjsHgrO9vbS0vYyTi72x
                      LsU9QDqcvLggqr2CaWw9VgGWvSLrdz0Nx0C9wvUdPTEnlj0D1aG9td7BvdA5L7zgA7Q80C8rvQoS
                      eD12rp29bSNIvfD/BL16XBK9p0nGvfiKub0PprY98AtfPHabpL1U+cq8oIrBu4B/wLyv4rI9ZQ7D
                      vWD+xb1A9mS9qZKzPVDAcLzj5kK9ZdqEvSZ+UT04qps84RTLPeTCjL0iez09GrzFvVHPtT09yVK9
                      YF1Tu2egbr2Abne8hkcUvdgd47xVZcc9ncTGvT0UPr13TmO9bsk1PUxp0zx2yyo9wErWusocYb0q
                      bDu9HwOkPfbEmr3+Ywc9k99uvcArvb3d6bq9J1GXPYiClzxeW0A9oUiLPSJnKz2AXa86pJ4AvbQD
                      1bwzCqu9fV2IvWDarjxtjMA9YlcpPZsmob2QBWc8ENA8vS59eT1Uqbq8EVWSPZAaDrzNcyS99glH
                      PQrZor1JrYM9opoPPXA1Zr3yz1w9BlgOPSrFMj10TIm8RuErPWiemDzgyI88IHnHO54lGD0A2q66
                      KD+8PPzP9TwKhWW9EKo/vfyd+Tyhkrs9U37HPWUvlz0IO9S8mE+qvO9Dxr1y+UQ9NMn+PNMaur1z
                      L8k9CDbIPDcnWr0kkf48uK26vWXKyj27lKc9rT+7PY9Otz0Afoi7FFroPEDm9Lza3VY9zrU3PQld
                      sT1916w9DaCnvayAEL1HnLM9oRSCPZinBDwgeUm9kFZAvEb0YD1qqpS9yLKFvJPQuz0gBfA7uBim
                      PDknlT0ol7K8aA5WPC1WtT0Ynr08fR9ivYBIQb3AGVI715k6vfNRqb0A4AG9wldwPXvCuL1VgZQ9
                      KH2kvQz837wkY8088zk6vdBlFry2vG89Qx42veiIrb1YOIG8pslVPWonDL2a2aK9cgUwPTSS7jym
                      Kgm9oBejvMrLIT1idhA9ncBwvah/x7xwHH69MN5uvGCkpLuCmIm9JHYRvYA+hrrRc8M9SLaQvQrv
                      TL3D6yO9jCuWvAAARbzhHpU9PRmvvQOjkr2mGXM9ttdcPTbWhL3nbK29QsBIPVjvlLxSqgQ9IzIp
                      vaNKaL2we7i9wB7FumBVor0Vcr69UGuDu8dNXL2YdO68kGUwPMeOb71doUG9ypNuPaCIub16WpC9
                      Gsd7PVezOb0QtRq9WFg8PJUTwz2c/BO9nWWmvTPTsL3YDqg8zJ+xPIrBUr3Uh5G83UrJvcBzxbzW
                      ERw9UlMtPTxWFL0q3Mm9ksnIvc9Orz0rq8Y9reG+PXS337zmOHk9dvExPXBwGrzTRlC9wDlevNrG
                      KD1X+0i9ANiNvGHbiz1AUmK9UydivZlbtD2YKny8AH44u6IZtb1t+kK9KPlwvBsaiD2iFSI9YFsw
                      vamdmz2KB2w9kLI5vACwaDranzY9742yvTT+wjwy4Qo9AE9/ux2CYL1ta8k9x4lsveAmprv2VKi9
                      skZtPZ0fnD2mKX093AwRvRJWnr0r8JK9YFLJvZAkf72ulTE9Ssh7PbXphD1MY/u8DnlIPSpCur3W
                      ShM9aC9VPGAenb2SMS49jQxQvc3CPL2Mh6U8vc+APSxMtzydUZM9WJLSvGLkEj1CgjA9t6ZIvUXi
                      rT1fZKk9GOc+PDY2Jj2SuSE9KzOgPXx8A72HYMa9Os9nPfoLub1yvXw9szWzvaqqUD0UzvM8AL0N
                      vem/xD1jCLK9oBWRvdmBvj2kqIe9zGymPKh7GDxA8hM7QCVfuxBrRTwivVE9wK60vF6DAz3G5lI9
                      2SW9PaIBvL1ukzc9pjRnPfja7bxwLHu81eGWvV5Eg70AoOY50FK/u96tfz2WaQO9UnZsPT3djT3o
                      yjE8jailvT30OL1ne6s9sMdXvIYTgr00Ksw8QHPoOtDvD7xVpZO9ABzzvLKLFj29JK694v/HvfEW
                      pj1xZL890BHHvRCIDrxFOrQ9sIlivO0opD3Y4nE8lK6+PLDZkbs7YKu9Nn4aPaS1ir2U7uw8IOGq
                      vfdffr36Z669rR+iPYAIm7tqm3a9Zp0GPaBvwjvy1a69oOg3O2Bdrr3X1pM97aG3PVYhXT2dc3q9
                      AAKMum/CxL0VzqY9PD7oPK6JEz0cHtI87eaZvSDAgTzuwS090Oy1vfkYxD2URw69WCFrvPKnEz1o
                      YMy9oQmYPfc4vD3Izbg8x4CgPUlTlj3wEqa9VwXBPScdur1Ao7E6lDuAPO+GuT0Q2TS9Dm0rPQdx
                      fL13MI49Qn8mPZROrTwANRe7Ci8UveGOiz2gtRg7UBAbPGgdnbxWm2Y9AD0COg4gXj01qMY94F3j
                      OxPWyT0Yu2A8p5igPdnzpT2Ii5a9Ojk4vSRe4zwq2ly9yxjCPUozjb067gc91+CFPX5Iaz1XbbG9
                      zFXHvPLkZz3UOs+8yh6WvSb+Mj2qZC09t92QPSBggL33cWu9+Yy5PVBDY71p05Y97RhtvYQK9jzH
                      OsS9oDegvVn7lT0frL09Ei+Hva2Dsr0jAZE9GK6ZvNTmkDwlRIi9mNlcvKJ+LT09xmS9aUapPUxW
                      /zzOgkY98goQPWojFz2yPWU9KF2vvQbXgb2YAUc8vhOKvdMryL16ajW9NTmFPZOwYr3mcyk9wESt
                      vYT1hr1MKtM8AJY9O9gVyzy3nUm9ltJKPX+fyT1L2ca9SsZMvekGjj36j1e91ReLPaAb87yQ/yS9
                      KupqvZjRvL0AFSw7UCJfPKh8MbxoWTs83aaJPdKFQj0Vibg9cZ2GPQtesL2hC6c9oCHCvVCnZDyG
                      Z109XUJdvcIcfj2w0Jk78iOUvcRV2TxwJ0G9ACv7u3DgZjw+zXY9zFDpPM3Jkz3g1Zm7WxilPWDY
                      l72FppU9E6lxvSjFfTyJ65E9qLINvIKomr2YEj+8Z5ecPaEejD1CuhI9KvSLvQ6GET0Gkws9MoW0
                      vQjzy7wKJTY9oEVeu0eMR73QtY+7crcQPXRgsLyAYHm9uPOdvKtKmL0ox6w8qHoIPI00Ir0AC3S6
                      miURvQBkVjnQScm7agNhPSzptTzpdK89npsdPctuwL1PYr89xP8Tvbr4v73xVMQ9RKn7PKDizzvu
                      1Wk98WemPVApJL3AFy08tzpgvR48ID1WtA89QS/CPVqbIb1mzQk94mtePTDe+rtXyTm9e6vLPZRj
                      tTyLJp+9oEACu9DbwbvcKg29OeejPfCvtr0p/aw9OngvvTdQwr0ozxY8p6K+PWbDXj2C12U9HY1E
                      vd9ShD22+wk9SPOLvCkSuT1A5S+8hiQhPTKTSD2M/uW8Bgc4PaV6nj1KRJG9ANAFOXJTdz1wgQ+9
                      WDagPNQ71jwWMRe9y9bAvUgt3bx0xAq9zezCvV2tKL2dRVi9TBigPLLkRD2gzn07F2hqvd75SD0y
                      8rW99cStvbbIkL2AW6i9NBatPNAxdzxOS5G96OuqPO2ORL1eTpO9ytk8PcM/M70UAgC97LCjPCr5
                      Sj2EAc88tqNsPQ0JuL20lg+9EHsrvSm2yj2AypU7BzNDvWn6pD1gcGG9h+0/vWgiyb3ILJa9F/Yi
                      vdr3or3ao6a9cNq2vYbpSj1Fk4Q9hV2svX5mVD0JhMg9JRCsvWww1bwQ0gM8JWKAPfXyub0wmPo7
                      g5FBvfZjWT3pzsE9oCO7PJKGSj29ucm9KcGlPXnrwD0jwsq94Ou8u1Lcyr1IdpI8ABFQOymviz2j
                      TUa9/ZBwvVuBvT0i9QA9opNrPaYEFb2Ai9o6kDR0PLqlGj3BapQ9gDIqvfDyPjxQQoq7lwvDPdsP
                      rL3dTm+9KsR7vaNxhz1G+gC9iYqFPRlmpz3wuDa9Q2xXvZq5Cj2D4pU9DH7rPMArx73SOnI9ADUA
                      vQDQIzkFv6I9eeeYPUhsyLxQigA8jFKFvXKLRz3fKI09czalPVgEsL14o8A8QXSwPVdAbb0G3Fc9
                      cqIoPaDEyLsTZX29MKS/OwAM4jqZ8609bR7LPcSk/DzE79c8GGg+vDdYJb17RKy9kJnDvfFokD1B
                      lKk9KAKZvWXRkb1oab28b06cPYBabTqga8a7LvWkvSJjzL0Kzxk9cLe1vW9ztL3N+8U9UcidPZpu
                      rL2j/yq9A1vIvbeZV72jvSi9AOZDPNzs8TwCoS09V7O7vfpRCb01M5q9IKEjvcG/vz1fabA9/DHu
                      PBw2/jwY2Y48aK9svHp0ND23GMG9mmdhPUUYvr0mZl89YAcDO4zurTywCay9FBDkvKwqjTz4pN28
                      ED7GvfcRkT0iUEc9DlxOPaUKqj0wvFa8VKn0vPaiEz22dGQ9mzfFPRFSyj3UQuK8lgNIPfOptL3+
                      nhI91CjDPHo5sL0Aw868ISG1PYqIlb2AQJm8UoQFPXTwhbztDXa9goxHPXPcPr232bo9wNObvWiq
                      NzzVJaS94EqEvVooSb2IBZY8Y7LBvbDmML3pt6U9pQ6lvXDIc7zgiHq9Nx2pPV1+IL1Ak/a8oEGc
                      PKK4jr1eQmo9gF7vuxo/f725HKo9IKaHvKIRRj2CBHs95IWAvf5OCT3+LxE9pzBIvWwylbzqHxe9
                      aAqjvdhDyr3DKVW9bxe+PRYQlL2gNaE861CPvZ+etr0HbLc9+n1XPR6NPj1Xz7C9M6RNvdhW/7yq
                      jyk9HeBvvfagdD2WrVY9pO7xPFiqiTyS2G49iCyvPCjvRDzYqiy8IH7ZO1MKLb2oKsS8Wb2bPdG9
                      wT3BgZQ9pSC4vdT4qDxjjim9cUeNPXeHtz0eYT89NOjUPBR38zzKLmY9qIASPKMGpD06TwW9+Kym
                      vD4EAz3PmZE9EN4pPOAzzjtQWaG7guBvPdFclj1grYu8YBoeu2nlnj3bGI49riiBveS19zxaF8O9
                      2Ou4PJPlOr0A5Ac6V7M0vcCvTTymHEc9NDf9PMAMAbsAqSW9rT9/vUy+5bzXrKY9HSDKveDUqryd
                      wKk9QCpLvQBGfLvg3J27CEi3vYpUKb3wQzQ8o1SpPcAxuL0N3Mu9WFE6vI6ZEz3KeV+9wMf7vOjn
                      mLwDDo+9Oa+ePblqhT1L7Ze9gK4BPMXvtz1MEAi92DbtvHTf0bygxvk7ACz1uCOMT73g38e7Ew3F
                      PbjIwbzeG3o9Vip+PYr5u704o548/iwPPQwuEL3wUxA8gkU4PUCHib2jur+9eGTFvYS/7zwqB6m9
                      cFFlvZczub3sBg29DIUBvbC3MTwqSnu9JY2svUSrjL1dUYM9VC/XPFnJuj3ZUp496FKAvNP6pj2b
                      dpq9gKeDu2pmRL14GMk8DamnvVjIeTzReIg9v+e2vUeWKr09No89+jq/vU7gaz1gwJa9UTTGPeRe
                      Er2is0I9G4GOPaZzGz0ht5Y9Av2xvWkIpD0v0rI9zE3avJqpUb2At0a97xLLvYtdmD1oHAq8GLpj
                      POUSwT0eVns9V7gkvfRAqjys9su8ZMv6PO1xjb0qHi696IsvPKCZjLt0mdu8FPP7vMAE2LwqIwC9
                      rv6RvceIxz1XfLy9JAXzPMnvsD22KxS92DabvVD7/Du6lE691a2avT7pJj0nLsS9pdjEvUBbjbwg
                      jru7YtOevSw5x7x0xbk8GCGUvFUglL26KYe9+jo8PUN/uj24WMm8pcKrvZwE/TzuIFw96iYUvQSc
                      8Dxq3Hq9+AXFPLCQhbvd6x69ZhV3PQp5Mz3BF6A9XHHrPHLpjb2iHkU9NDGivLTEybyY3uO8m4C/
                      vUAXgTxAC5A6yyG1PSzd/byuDjg97PKLvBqLRD2NlW298ARdvIZqA71gWbK7E6KSPXkJvj3Cp1c9
                      SvZEvXrZIL29G5G9Z/1EvcD+Kbtw9rC9koRLPUwhnzzjd8O9ij8TvVb2pL1Ik+m8Toeevd2yx72O
                      rFM9jvV4PfJaCz0tMJ+9Y69GvcCJajxGbV49Pye4vYDUhzqAXJ08LMvQPEAtA73gEa28FzA8vTlm
                      zD1otZi8XfuMPUungT1o7Vw8vsl7PQCMNLlxcr89m5G2vXqUFz2dqFK9q4LJPT1jdr0nro09jdMt
                      vZq4r73Qyra7KodWPcH1hT0Ar/G7YDu7vSje77xeU0A9bVIzvVGthD09eCS9VMyZvGCOz7tC2C09
                      oGugOw1WZL3ZTbY9QHJ1vfdTQb3HzLC9vmh9Pd+txD2I87i9ABpCu4Ejmz29+ma9sKaiu3uDyT0H
                      V5s93TtKvQzPqbxAsp68pRTFvTK3aj1a93q9vUh4vQNuIb0AKNw5TU7DvYHNvz1qkj49NzpBvQJf
                      Qj0aiZ+9AMRWuq5aND09wz29sq01PeCFr7vFz4g98RyiPVBTbLzoG5C9ALLPulKnqL0ir669H5G+
                      vRV1mD0Uur48oitmPbAQIzygsnO79uFtPXDpB72SAA09QAn9vBRVjjwAZhA7WslLPYhUwL1jPC+9
                      IN3yvKzDhzxqUZO9TXiPvc8EnD1CwmY9fTOLPbZmCT3yshM9QriXvbKlDD1K0D09cBxzvLh98bz6
                      SxO9UAbeO1EMyD1CYQQ9AbGcPQvigT1a+x89rF6LvVjmmrwgF6M7F7Rlvdf8hD3jOn694hJXPShg
                      wLzQ8eA7d51ZvQBmg728Yfc8gAWvvUxAgzzg8bg8h1NCvYqapb2p+KQ9SdWtPUyGnbygyBm9/gQb
                      PTRRmzwARXC6ct0KPWeFrj3wZjq8Wnm6vYVgxL0Fq8Y9wFVKvXlcyT1K0Uy9IMvdO2ZRYz2QD1c8
                      foqjvRLYBz3CbIq9i6OtPdFqnD2ooUg8Ov+vvWm/jT3qx5e92hs1Pc2yM72JQsg9IGrWOybJaj2A
                      msA6KOabvZCAD70QTBq8vSeSPYqjh72va7s9eOyUPO6VSz0Ub5o8ajlgvaNHdL20Yoa8HRogvWBC
                      kb1AxVA8TdlwvQLnir3gvVK9WAzJvcZ2FL2dt5I9yHXsvKGsvT1iiRI94tkrPYH5oT2dWmO9gCq3
                      vERb3jz+k1w9QEw+u7Azc7xwUzu8VvKWvZYCnr2SilY98PhIvAD/8ztNLpi9BHbkPMUfob3NXy29
                      0C3Lu8+klT2KIba9C4fFPVi4YbyYZri87qE3PcxygDwAIIW9t5B4vXVXvT16IYO9wHiMupogs71X
                      oK69UDPiO9ClKr1158A9NpOKvakkqz2R1IU9e+GyPdaZdz2nfC29QPJ0vXYcFj390lS9YWKcPdAA
                      uL2a4B89CNzGvMBxXL30jLK8Z9qVPTAFjL3w2Bc8EAShve+jgz3IXfq8eYy0PS1Ijz0TRKu9mFM+
                      PCAWqztrKpi9f2fBPVoqmb2bL8g9cZyKPRK6Zj2VjLE9BEcBvfnohz3i8a+9IFievGeBKr0C96K9
                      uv6XvVfmoz3Ysmo86gJePeoqxr1YL6c8xa6gPVKtfD3Cr6m9urwHPVb9gL3Nm2i9KiwBvRKkYD2Q
                      X7e928bJvf3sXL0NAlK97qQOPTSioTyserY8ovJ6PYDFor1YLg08J3kvvfC0MryQ8jI8UCuuvW4p
                      bz0Rf6o9tSOBvUT+3jzYg4C9PrsEPZTFgbw0owu9JGrfPADX3ryRkLk9GE0vvJS/jrww3T+8Q66X
                      vQ39sT3iDcG9wPlsvG2Kcb1lnKa9lt+Ivdewmz10l8I8YHP3OyO9yz19qY09mloLvWDGvzvdRsi9
                      wDVAvEitobwC7zo9IPK8vAC6ODuB34g9bNvSvBBvWr0408m89VGfPUeGxT2gzHK7jJ/gvDwa6jxJ
                      5IM9kl0MPWd0gz1uc3E9YNy0vF4vZj2XWHG9zTy+PSAKXb3/6489MDAavSCs5zsY0EM830upPUqI
                      bz1zEDW9lATwvKBu+rxFi6A9KDaTvZ8suz2DM7C94EFdvTGGrD1PkII94FxfvQkwtz1qOAK9reDK
                      vWqCYb3gb7+9gnuEvaeXM73CSwg9Yc6wParEBz3I6Ya8eupVPcA/XrtY4Tg8HyPDPXf/Vr3NRi+9
                      Iv5mPYVKuL1vLbE9OoRFPdn6jT3YWUY8ygJNPa+Jiz0yI3k9YC3Au0blED2XWym9e5SMPe6Jm73W
                      9Ho9abayPSeLP70vjIE9t6k0vUiLyjwLS5a9aOHAPN1+oz2qlo29A8dMvW1QvT3ahDI9MEgmPOdL
                      uj0D0sc9zzDEvRDDIzw/cZg92BTEvOlErj2QkjK8d8mLPeWGxz24aaw8BVbIvSMZzL0/msI9qyyn
                      PTFpyz3NfjW9gJRyPBhmTTzjWoA9V32+vbApyLt41KW81bmdvVPVkr2UHtC8i3eAPRQioTygD7y7
                      Sn5EvSXgrr1UFdI8R5JevQSr+jyHo0C928CGPWnemD3Ayjy7yiJUPbpjTz2e5HI9ajWyvWTo1jy2
                      VkU9nheHvZrJlL0XCb89QESuPKInXz3S6WI9aDOIvFL9qL39gaa9XXWyPSAd+Lw2Oqe9APYXvWU/
                      xL2DYcm9KCAgPCDmobtoc5K8yALLPDL8XT1NgZk9Sjufvcryhb0RPq49Ao88PXRk7jz2Q2o9fdyG
                      vcL6mL3OPAA9hP74POhcgjyIaJS8JSKxvSrKSL2YO6q8QJNZPAE8xz0yHYW9VeyXPYCpR71CuC89
                      fSfCvXgw/rzPGZM9IOhdvfym8DwQUmc89xiLPZlQpz3YMAi89wpsvbQ7kDwFw5q9hwN7vRI+Uz1M
                      jok8zWNcvWCGWTvomma8PRTAvckvoD2wcrI7dFv3PDYKCT1CWiE9G5qQPfptFr0mhCM9YFKOvUck
                      vD2g7nG7QM/XOlAkUL0QJSW8/gsHPbZSVj3AZme8nnaEvY/8uD3IXLK8WOx+PMWlrz24FvO85bu8
                      vRRUszyge9G72tyPvfOwqL3iWVM9VBKGPACaXDyAs8m6Au93PbB7k70Ac8Y5NLP4PHt1mb29jFa9
                      g4/BvQ8sjj33dLa9AsOtvahJ3LwqL3k9jZSLvXgV77wwhS+8MUfHPZgitryrb4Y9Ih1DPWBBQDuA
                      CdW8hLz1PBirmzxYB608HRZKvelDoj3ASr66wF9CvCjbRrxGVRs9qXbGPdD5FLw0MZE8CPjDPM2T
                      Pr1CyXA9sPiZOxIIPz3INcU8AIfgvDoYIb0AYDY7JSqCPYgtoDxMPcM8SdmBPYCHCjwyfAU9gsFq
                      PboCVT3AKBw8gdmWPWjISTxWK569XdWEPYM0I73qHWs9P0yqPdCYu7sio2k9yHC9ve+hxb0R7rA9
                      ZRiLvVAA8TvNy369o2ocvfBAJb13A4I9qUmAPeLYiL3W/Ho9aeCFPRA5u71+HF89KyK3vcisgL3g
                      mYq79SzHPUhr77x6wKK9ShNqvXPoyL2A3nu9QOAyvcxs+DwAhw67BvsjPZR9vbwg2f27AS6lPWRO
                      5zz/sYI9SCnrvOtNwT2oB+68gB7YOtBnQ7wAbpA8Vy6UPbyE/Txgbnm7APOxOTLBBz0QEyg88MJq
                      PIBudzpAgXy7gARIPOaxej1iT1Q9R+aYPWYtgb2YTaG802ekvQy32Txm9o+9QUuFPQCAnbvI4668
                      V/s1vUh7nb0ll5k9qbadPQv/tj0tIKY9TabAvfEAwD2vuK29gJuVu1BKtr1Api69/RFAvZBeDbyg
                      k529arQ2vVibf7xgF9g7itNLvQVNu73qYg299gd1PToNYr3N7Z69J3ivPSwys7wYI4m8AC7VuQBY
                      HDtA8TY8pruUvVR27bxAkUo7/YEqvX2tcb06n3i9dKyrPAB/rjsDsLI9onAkPUU1y73tBGG9Ov9o
                      PZOSy720k8c8kirEvehKyjwlh8W9EfOXPdPyPL3yBK+9KJuuvcC4W7sA+zC6bNINvVKTfj1FzIm9
                      AKy3POSjDr2o9Jw8xJLqPLMuvz0k5Ie9KP0TPIstn7092229SC6IPK9LiD0Y8aq8KjMzPZpEZL1F
                      36U9EJqavYY3lb0Rw8c9IoOCvaBu7jt737M9lbfEveD0nb1XZ0i9QOJJPE5mVz38DOY8rQtcvfyn
                      9jxQ2vc7n+zHPbDIhr3Ffoc9B3OvPYMes70YzzY8eno8vRnKpD2gjnS9U6iRPdGWtj1NpKe9KNSi
                      PI1quz3zZka9QHW3vSxYuTzFC6O90X+BPW0zdb2++Tk9msEgvVP0Wb3ggvu8WOPWvIJkLz0+mn89
                      ygklvWcOs71gfDY7I6KRvYo4n73dG2i9ADxWvKIagr3YrBy8R4CwPYCDO7zKYaC9TACivET66jxg
                      yv67WKRQPLHXlT14R7G8SMKVvZDdBzyC5mA9B9krvbfNxj0DJJM9GGmYvDDJj7vGyxM9htNlPYD7
                      xrwKpE+9aWKcPZD9R706wK+9YJLGPJTTgbwQ4we9QP5Gu37EKT0XXy69LiiDvWYAET0bqYM9dc62
                      PTrGNL2Wpqu9CkxuvQNnrL1lfaU9i3iavQzMqryAtZW9+qy3vQ2/f73kuts8fVyJvYrPRr3gmIi8
                      4ypAvZY6nL1KZHG94HlRvaeXZL3IB5A8Z02pPWYJQD3dMTO9gD1hvVruKz3ilLC98hszPbpYbD1Y
                      zgS8fE/mPNTRlDwAEx08VQi+PcrsIb3Cj2w90LrlO2dpsb3Qv4K7fs9WPTN0WL2I9KU8CdWZPRqT
                      Ez1gY4q7hwmFPZJTNz02qom9oKNSvTkbkz0EytI8vssDPb10Kr3AfKe9wPm1vMbVjL3bU8A9jGqF
                      PKgfQbyNmMS9Rtk0PU9Zuj0YLGw8e4OjvbQIhL0rZKI9s9ApvYZwQz10jKu8P7XCPXeVxL2u5T49
                      k6iOPY0/wb3APHK8jlx2PaIoPD1DRKg9CiRtPaTBjL0YkYY8kJ0YvX+yqz3+7B89416uvX8Igj3g
                      /Le9aPECvMVntz3o8UU8jDXtvEuGq70ulxY94ttLPZHhuD01FpO9Cjm4vd3Akr3YkLK8wHyzOmZ4
                      fz3xHKc9NI/UPB4rHj1fC5Q95vZ+PbV4mr1Qmr27MBXDu9IbUz2oml+86KUgPODDLb2yTxE93ZWX
                      PaZakL39dYC9gPUBPCwiCL0wwXi9ILC3PH3KPL1yMQ49po86PTD7EDwqTjO9U/C5PQoHtr0AC+m8
                      czNKvXdOvj2qpBU94EmCvCCmzLz5S8A9YK2JOwAAHrp6dcC9IKlQvWU9zL14xNK8tey0PV3Lsr0E
                      f4W9hK8Uvbo2Bb2AwUa8qLCoPBDiir2lEL89qIxJPNBKWjzgB7e7IyZVvYipvb2XCx29jhgIPai1
                      vL2yRwU9MgA+PYaHnL2W6Au9UAuuu8FcmT0RUbI92HYdvFVRrz3WnAO9aqY8vajsFbx8ItU8k+CM
                      PUb1Er26xg89jC/WPMjMlLyT7Js96xnGPWAjMLtIqZo85UqCvYNjqr1kEtk8N2SjPY1ZmT0WYRI9
                      njmhvRorIz3+8Rg9BfOsPajO+bwJMYk9RgALvYcef70g5P871IDuvEOEyz012J09nQ1YvS6ZRz16
                      IiO9esIkPenVjj3kRv88BRrJveggWDySJzE95V3HvfSwmzzHNJ49Lp8VPdcxhD1uX0w9VkhhPSFe
                      kj1ac4O9UIE6vdK3sb19OGG9CiJavYABhbuXcsk9rnRVPSxa+TwlepY9ycuNPShL8LxwgBi8oI6z
                      uxIlIz2tFlq9pS+8vYyy67zQz1C9eTKgPbrzQr3EUu08SeW8PZVFjD0SZJW9MQKHPSgTvzwpQ5o9
                      KzHHPRAdGb3WmGA9YBUgvQC64zr+K2w92h+3vWzp/ryD9qU9UssNPVqDsr1C+k49DtNePUVomT2B
                      uog9thslPRBXQzwYEcO91NSwvIJ3KT1rHYQ9kFZ7vWp1pb3M4hO9QA+GOtD8/7syuSc9enhevX3D
                      hr1Ue9Q89JSPvABwuzyT9aS9fiBlPYuXkT2WWKu9pe25PUC0T71zMpA9Uhx8PSuVoD3jF649iHfI
                      vUPtnb0zYFu9jZ6rvTD0tjspZMQ9cgA/PRDFEjytIpk9vsSPvX44Gj0yiUg9eKbQvFIsn73NKpA9
                      qiGRvcqXaL31PZs9Q6ShvSjgmTzjBlq9asNPPSneuj0jWJi9oBu6vC3Vpz2UNLK8clyCvWQ2hb3Q
                      Qo47JGLnPAAQ9TqPgoY9oFNfvYq3AL0ArZ87NM6RPCnwyD1ueS09kPsWvYJxdD3ysoK9yALuvMwU
                      ujxM5Pe8KgAsvVbgSz3yfRM9iMGnvO4nXD1paaI9BUmlvYJTfT3wPUa926KtvQBJMzqWu3k9WlMZ
                      PWtQmr1A8Em7EpM9PWajKT24h529hK3RPMCQGLywTDq8lIwXvfwJ1zz4cbq9d1FvvYBrvLr0x6k8
                      QJUCvAjFgb0CL0Y9881hvaPJGb2AJU+6DSzCPWfwt73XO4k9cASVvaehUb10nt08lCP+PNDzHb0N
                      cpW9xDfhPMosJD0D/li96jwTPRPspz2tkVC9QGdvO4Btar371rS9pIXgPODtJL3675G9u3u8vVXZ
                      wT2kAwG9MAWXO93fU716WCa9S4eBPaB12Lwa/UM9nmmNvaArIjtdDzi97lFdPeaoDL2Xf8I9AKmL
                      vHayDz1Uso48cwmaPUmczD3/ybm9FzTMvQCUlLqAeU88+LXxvE0KPL16um+9QN5qOz3gwL0ndke9
                      Wv8aveUSt704PK68TBmyvLWum72o2Ze8NE3/PDxP4zwWeSo9pPoIvcoZOj2+OYe9+euePQiAvb1C
                      eiI9d0ElvWWjpb3zqqg9ukENvUd8wj3qbzM9wGoGPIEWoz2CZVA9YBG3O+VRjr1g2ni9aMh5PPql
                      ab0KrwY9Khi1vdEojT3gK0W9UrtHPbqXm70Dt3y9SrsPveD8Br3JQKE9UkhkPcxnq7wtiVy9ACjg
                      OKC7f70XwrC9UwdXvWDYpDs302G9dF2wvFTjwDwqKV69JhIUPSN+pL2lXpI9aCYaPIXlor2KEj29
                      kOduvI7anr1fg689YBQ9uxdzVb1QVKi7dAm0vOgdg72wkpa90I5RPNunmb3qDBk9q3+3vTL6yr16
                      Hny9Ik9vPUCGEr0l1JE9JEfXPOAX2TtYc1I8oC4fO1cJYL0zmcK9omgTPdWVvr0UWb88ck9HPcpp
                      X73bw5q9ACR6vdHTpT1qWTI9FJH5vJgZc7wAlyC6ziCmvbo+Xj2lm4G9EaaxPbUQhD3+xUg9soXH
                      vRhbojyAyCi9uAb0vNQu37zBQYE9Z9uqPRFhuj20S6i8AB5FO9rlIb3LEY098Eiava3Jq704yMW9
                      sFXSu5rnYj2EwAW9jWOOPeollb3IpdK8ShOJvS39V706wbe9KGAcPCUpwz3IMI69Z/29vXoFFr2j
                      IaS9c+yaPfrFVL0ZQcE9zTPIve5VGD10iM48iD+yPPALa71/MrM9KpoxvRFdrD2oyHk88za1vWKS
                      eT2Utgy954CdPWn8vz307Ow8OklpPZYmJT1CQLK90/kjveIQVz1nrKY9mRXLPULIZj3l27c9wGLC
                      vPg0sb12mam9VEjsvBMbuj2Nlzq9mLGzvLDSrjuiMXU91NiBvMbJA707h7E96UiOPdanID1A0La9
                      Y6SwvXmsnT1afns9frFhPdYvq705k5c9b9KHPbYqYj0zpK69usuivSrtnb38Etg8PksFPdjHjzyZ
                      Xqk9wGX7vO0OHr1SFCY9V7h/vaDNmbuaNmw9kFIxvAC7Kr0SZQI9dALHvA+5vj1GQXw9iEKQvS3I
                      mj0aI2E9KHxIvPrAgr0wRH48wIL3vEsejD1AkwA7Too0PSt9rL2duWK9WJyTPKxv+zwqvUi9iKup
                      vF09sb0wUCQ8IBelPIPCwb2y/E09cY2UPSCz5LxIftS8yX6VPXFVrj01zrG9yM3DPKcIlT3PSL09
                      wKTVulvkwj1AXlq8kw1/vQBsL7mtnJA9ALoSu6C10LyvMcY9WOzUvG0OlL0KWju9rAaTvKriyb3i
                      PaW9XT27PbUviD0HNS+9l1iZPQAcWTmNPJ29QjYDPVdfyj1gm768h9ZZvaj2CTyY3Uq8rIgTvUjb
                      xr2aN269+6igPVBaoztKUG89oAHsvPCBFTyY24c8OpNvPRjQibwwECy8zAKSPOTAhr37Gcc9ACyT
                      uvq9Bj3glZq9kGI8vGRP4zw4dKW9QHU1u1gzVbyiB1A9rnhbPf20nr06gLe9ntU4PYoFtr3dkJM9
                      V9cvvfwhhL0Ai2m9cuyavY9twr0wQXQ8t4hCveR81DxpnIc9uHCOvWA8/rvTJ3K9xqQjPYMHG73n
                      FSK9UM4CvYWqoL0iZmc9GkBEPeyp7ry1Xoe9YeCgPerYAb3COWQ9zN7pPPqXNb2NvS69AAhHvLTl
                      mLy7Dre9QKZIvBAPKLyjfsq9CZONPSjXHrxWrWE9iTqaPX50gL3Sz0M9enlrPZ3Uir0nOxu9cRbE
                      PUBihrwRo8w94GjMvGSf0jx0xZy8mDnpvKgRir1OBXs9p0mwPZiZqzwqYTw90BYHPFrLWr2AvWY6
                      0lMJPVo1Iz1Izre8Ul5NPZpWFL1AlBY76J8kPKFTwj21Opk96Cg2PFLNrL1nojK9rTxsvQB9/Lua
                      62O9oKs5O0GqiD1KmlO91Mm9vE2ruz3pYL49ALjbOpp5Lj3roJw9I6aJPT6bFz11W7a9IACAO1q6
                      VT2i7m89gPFCvfI9cT0g5/A7a7fJveClgDxiTci9+pc/PRU4sj1Ufvy8IgAHPaoHNT0fraY9YFx7
                      uwCWy7xEP8086C9+vIZ5HT1ifQk9A4GCPQKehb2AbXy6RxUhvbzxgL2mgjc9APOgu0dRML2APue8
                      sNUOvUCp6TqQUh08R2U9vdTqzbwo6uS8K3ycvQpCAb3oFVE8R/IlvSiRlTxz46+9q63GPQBXRzpx
                      RLU9eQ+wPb7TPz1gtpU7ldKmvXPNeb345pg8GCH/vBjx/7x3AT+9lmN+PdCz1DtQsHy8i/rHPey8
                      yTzawca9MHyYuy99gT32tg69gBCiu+MHTL3z5WC9Yi0lPUDhfrsAkPM5St5lvVAwarzYpoE89fqI
                      vZRm8zzaKBa9IDjXvMhij7wYVWO83umpvWhSQLwHfq490E9jPOhevDxjt4Y9irqzvWwCkrwQK0m9
                      unYjPXNYpL1hNpU9B/yDPRJPdD2gI3S7SKGNvHxmhL2CoEk9GKfjvN4BFj3wUxM8BHXvPHMpp72A
                      S7c6zb1fvWIrTz0izyA9JI/OPNghp73gVsg84TmqPcWZgb0w6/s7lcOUvdr4gr32TX49goOgvem5
                      xT1g4RS78yAovUo4sL24kN688M84ve8YxL0HLCy9wOtqvIYloL1BqKI988tqvbNOrr0YXgS8UHD1
                      OzBYeTyaaGW9+o6avRA4x71u1Wg9oPe0u2AGnb1mkw49MUrEPU6Ygb28dgW9JZ2dvdgSrTySsW09
                      mhtiPfDzIL1QrUS9Qfi7PYUlxT31xbu9yjc/PUCsCrxy2kw9qwPJPXCKYLzvFqA9skw3PYKOHz0Q
                      phe8gEGxPG7PdD1wehW922qRPetBnr0g36I79iN2PWbAqb1Hycg9uUCEPYDqTL0DqCK9mD9vPAn4
                      ij2ekqG9snxvPab+or0k6to8UAz/u2avTz2gnr+9QjMTPaBT8LsHyac9ItNvPdFigT01hoe9vh+C
                      vZSyoTyzwWO9QPlQOxotjb3iSaW9x55/vQBgSDprrq+9sPLmO5To6LyBHpk9QGmIvVNuab3a/VE9
                      MMRSvEuQvr2GHlo9TQZovda0Rz1YfOe8wEWzvXdLpD3QF3C9MHdZvdiWBryS7ko9tMXovM6ISj1i
                      dyQ9/RGgPVDpjztUGdQ8J1QxvXDnLL0MreS87v0VPexo+7wdpUi9SKycvUtcwL0YAAe8bFOrvCFu
                      mz3YAZa8lzQuvQe9vr30WN88C/G4vUAXVLuKiD09JS3GPaM1oL1oE5+8WDwAPEdjT71ylDw9YEP3
                      O4lpvD0wWYO9oC/OO9d5db1omJc8fc+LvYBe7TuYOIe8iAb7vGQR+zyoYok8VpwGPawqqzx6KWE9
                      8JSRvfBOxb11O5K95cysvZHkpz2AEZ695gqVvWH4yD3OkRU9LaR+vfKQbj0QcyW9XBgSvftvmT0i
                      s6+9rZxWvcXdoL3fOZk93fuXPTVblT3BPLc9cHUCvOC1j73Iooo8S9izPczRhjzj3IA947M3vUNF
                      xz2wyfg7w6dTvWBia702IAq97fGFvSm9rj12zwC9sipnPVVIn73n4nu9wIXCPMn8rD2QxEo8zGcY
                      vQA0Qb2otK294XuUPVe0Mr3QcHO9q2iaPVIGLz2NZsO9RkFUPXqBIr13KzC9KN7svOhZvjxK2gs9
                      9FbWvHgXtr2qnsq9GRy8PYZHMz3Uuu88WEkOPLC9VDxQeFO91ICwPHt1rT2LIrM9nu6nvYN5kj2d
                      RzK9RWqvvfKWNj0CMFM9UAxuvOVJqb1E5us8cKYgPFAGJb1GbYC9iO7XvJRj4rxII4w8dKwNvUKD
                      Hz1HQme9tgVqPQosVD0v6Lg9guc5PX8/rr0FB4O9U/aJPWo1Yr0Y88e92P/GvQBjAzxKkZO9zocl
                      PVGBqz2q1RM90HB+PMDrCbvjr8k90QrKPQgxurxgsTS74FnCvaBZcLvdazu98JNHvSbEpL2tXKw9
                      MlYaPar5JT2JYIY96BLZvAbOYj2MkZi86K17PIDCmzu1qIq9ficmPbH5gz1g6SK9rEjzPHiLnL1m
                      Ogk9zD7uPNFmlT1AchS7IKr3O1E6kj1GpmQ9s92FPTQyrTyom708vnV5PcASUDvAaQW9602JPSrv
                      i72NUYi9/r+cvdN7Rr3UBce8MDNivFS4vjxAg4C6UMc0vEOKvD3kGNo8mDLPvDhhgbzavsC9AG2H
                      u+64nb0Adz87MB9YPOS6Fr3SNCk98GFtvJghpzwdOWu98AEHvfS9hzzUHta82caRPQDOybtAF1K8
                      4iJoPeozo73kzxS9IPnbu4A8gbyoTMe8uM++vNTMkjyd7Zo92JZ2vKgRaTzis2o9+A7CvVS1i7wT
                      gUa9A8xFvf8Fs7274a899x5xvRNqfb2h3Zg9th2TvShzEDxYR+q8sNUuvWDcNzvniI49dgdEPQAu
                      6DkZPZ89MEiMO0C/J73G7ko9MyUnvX4kqb10m4u8RsesvXDHub0AHt+7iBr+vIB87Tp1E7i9hNT9
                      PO1SK73t0UW9iFmQvQhSkbwAZ4I8ACLRutBzlL3NGbO9ReO9vbBRr7tYnNK82LtBPOZQfT1qcia9
                      cEDIvRDTpr1NXW+9ylppPYUSuL1KaCg9Q7wovUY2ED3J95U94hGVvT65XT16m3I94tlHPTh8qb0o
                      fCC8h4NKvZAlUzxLGoQ9+iymvWBfPbu2MAy9QM+JPAuwq704Moo8fcaqPWZHBL3Ltb+9N5FJvTQH
                      v7zGvqm9uTbEPc15jr2gbjy9OmybvU/wjj2AZ2G9AsCivYCWGjqQZlI8zVFYvZhiGLy3dyi9nC/+
                      PHJ+ez0OpXY9kKVhvYiFujx9+JM9sNelO1Dd9Lt08hG9g40gvRftWb2tNne9ImgpPURC/Dx+GCY9
                      kmpsPV8Vqj0tCb69Cq4WPdjOLzyexgM9rP7ZPDP2RL39aVi96gwovdC/VDwgSIO7qsWcvVcSbb3M
                      q4y9QDkBOzDZcrzm5om9WoBNPVDza7w9Cps9VrxHPTX2uD1munA9vJrkPAA/vr0GkiQ9i3ycPWAD
                      87vgZze9kYfBPQMMJL1VWbi9/cbIPWQlzjzANmQ8YoSYvUnUhT1Xb0O9tt+aveCfI726Dis9KEDE
                      PFKvYz1xKZ89uZ+XPd9alT3H8qQ9uKPUvMA8F7vzMWy9CjdjvarjYb0F8K69dMaevEmkiz2COk49
                      wMrsOuxlwjxA0LG9KoVzPeayez26GAK9vpWmvUDbQr3Mj6W82ii7vdPfs71lUZy9oCX6u8Mlqz1A
                      0Ce8qks9PfP+tz17X7k9rwzLvVDEAL0DkRy9+wbFPTCsAjzwRkA8aGKwvMLGIz1SME49LsMfPXG0
                      mD0ACD07bNnSvBpdnL0Hmm29YqZEPe22pT3kEes8uttgPYpADb2xPcc9gA//u/C1ATx6qXY9xSC/
                      vXkpvD1gRAg7lPHovD1Xhr2uhFI9mwyNvXK1Cj2dGjm9OOvDPJDFXL35K7k9oF7avDV7jL36ZTU9
                      kP+/vY/pqT3ucoO9MJzRu3onD72sWIq8QFsKO/C3OrzPPcy9MJgpvW9EvD2Qo5G93Gv4PDL2Az1H
                      +sC9qiJkvaAryrzq4zS90Kyyuz50o73V1749RoRYPUpVbz2g7IU7AOEWPJVXwj3qNkA9UttPPcJ4
                      qL0A9BQ60IIYvZirNrx59Jk9WvgCPZpuOb1zNag9WB0pPK3glT0AG4287tAGPYiIvb1n27W9IDSu
                      vTIIVT3QrD48APAjuZKoSz0STz492IkfPOLtSz3OsAQ9oVeUPWOVub17kaC9TmKFvcgRurw2HH89
                      oIWFO9PUl71mTkk9t3l6vSwqyjxdlqG95LjSPNQnoTxItNm8OvYmvcxChr0Zl5M9LxOxvR4mdz13
                      X2W9DEWgPAR0/jzIfqY8CvtTveigOrx9yCa96cmVPWI+l71vwog913NfvWOLNL3SGzM9cmE0PaMT
                      w73n1Jc9o9w4vffwI70AM627RIDqPFs+mD1QxuY72+eTvbjEr7ywDLa7rZqmvebUET3Auoq80DZn
                      PFDeqDuRHKs98lBZPYh+5ryAXnW658CEPUVisj2oV6+9/rdpPaDBJzsAJfS8cJFdvEAj9bwI6sE8
                      gNlXvZDTKzz98409+6SMPZPWHr2UFKa8F0OAPavoqj3I9Ia9hjAEvWtawr1IW6a9ExODPQiiuzyY
                      QJG9sLuwvbAvib0tUcQ99xC9PZ2lNL0PnLs9mJYOPGCvfLuRNJo9SYOTPfWrpz2Jvso9liwLPaen
                      Nb0m5Bi9387HvQAw97fCIXU9mN5cPADquzvgdgG9l9OOPfnjvz1npDO9Vwd/vSAI5LzmEZy9GD5X
                      vH/QqT3jmsC9Q3uhvX0bRr0QI2Q8PwzJvaA13DttlJM90aCuPQT2Fb14Ysm9TfLAvQBE/LvWvQE9
                      0GjYu5St1zxUorI8ZzItvUDnQzyK20890HJSvSA9+jtgmBW9M9zBvZ0pkL3gD4S7w3NovTCHtzuw
                      tji9O8TKvWg/m7xwSEe8ICUqvbU+lb3I8a68XTduvXoXGr389P08UW+7PRGWmD3XmYs9Tsw/PUAO
                      VTst8E69O+iyPT4xaz2Ime680GJuvETZ0TwgvFm9ni98PRBpyL2M8ao8jbZovWUElz2GRxM90Gsd
                      vIW7jz3lB4M9AgCfvdK7u73wPIi9lkRRPT39yD1FJrc9vUuBPWZvE72HVl69jFIZvfLGfj1CMBU9
                      IAh6vVIiYD1Ip5S8YNKNuxnxrT16QmY9PITPPEAh4jrl2cu9uA/wvH1OPb1COqC99ImivDCrbLzv
                      e8Q9TAC0vBfGbr23wWO9DjchPXPjtj3pYL89KNWtvZgBDzwUM9Q84vE5PY8LyL2sJ4a89FTqvJGy
                      lD3e0jA9Pgk1PdQ1kTwUWJy8+1arPTxEA70n2aU9sOLZO/qPjL0tRaS9NNvYPCelsD1YIA08enAU
                      PYJ4cT0VWcY9Gz6gvVZIoL3rIo29tg4wPX3orb0BKLs9RF6EvarSQb2rN6S9yizBvcsEwL3YAMa8
                      sKhLvOuNoj32Hxm9YAOHPHWVjL1qF2C9qDzKPKBDlL1/0Y89k+2+PeCssLs03MA8U/djvQHYhD36
                      AVO98GaWvcvelr0I85a9p/GlPZMsUb15Cpw91uEEvUfzSL2KhB49FDa6PKy+Ar1Sbzw9GByhPJ1z
                      kb2B6pY9gw2aPRUgsb1YuGi8aLDjvACFfL1w18m9QS+FPYiyujzgr4O8SCmZvPJgej05ULg9OcuT
                      Pbztgr2i90Y9gGbBPIpRGj2qWwq9aBkzPEVXhz1jk6Q9aDbsvEjErbzg2by9etMHPen2mD1Sdn49
                      4NDJPADo5Luo3E68bHSEPGieery3rbY9oNGYvMoSgb1BDrA9OXOdPftQtL3g3Lo8QlhXPZrcB700
                      AYM86mp8PUPlIL2GBUM9FzfIPcCpXjwtNzm9ijpSPaArp7ujlcw9MP8vvDfKcb3XnCm9wHy3vVYp
                      JD3AogC9xwJJvVBOhL03Xa89jXGlveh2RjwdlcC9uIHdvIHktj2D3529Bx7DPYBgezybw8C9UAIW
                      vfkzoT0A2Lq4iLLCvPHWpz1yJh49EFRnvZggVrxS+xU9eJGGPOOFVb3H1EC9gJa8u5gKKjzD9Bm9
                      YDLyu8ofaz3CyjY9VLSVvKreDr2w2V48kTecPQsxrr2MEJA8U8i4vY4eqb33aKc9UDesvQosJ72s
                      lLW8821jvfo5QL2ohhg81oN+PS7RZT2sgfe8qh0IvYTB/zwY7v28I4uZvTA0JjzHXmm9+C+qvDCn
                      Irz6+rW9s8euPVL4Vz19Dii9ZLbhPNB+v70oa/S8hBXjPA4XQD0dn0a9QJvhuiKlTT1exS49qgl/
                      PbTa9jxQBne97HPZvDDZGjzM/ZM8Tv9OPVpmPr30Qde8AJxgueiUk70M38g81j6qvYAasb24fuu8
                      YLlivUvitD3N2x69/R+bvYgioDy9T0S9payHvVJ0WT2qhS892u9YPQPvn71wY4q9Eo5mPQN2S72A
                      ini9ai4UPaD84bxys7m9hW6lPVeJZ73ZMJQ9o7W4vWAwiLwHz0C9o2+ZvaHtrD3YNAo8/SVFvQ9G
                      xD0iSXM9tbCOvdY5Kz3DejS9APsbPNvRrT1RzoI9kjeKveCczDu/Zqw9sEQ4vXcYcL3vn8a9bDuj
                      vJI2ub1smqW8atxHvRJLJD3Aoos6s8aMPdhDIjyYmKC9rObUvG0xiL2papQ9AkBPPbbxhL1wm1+9
                      Kr4DvWALNr30jo88kJc+PBYwXD0yl569b4eEPclOiD0ASlG7ODeNvFgSvrwknfY8nJ+FvePLQb16
                      sG49bUR0vQiknr0olZc8QG8wvIcGwD3qrwM9rhwzPUzEkTzTy2m9QAmrOnJTVD2Xtj6973+zveMh
                      Gr2ymIW9507LPUC3ErvwK2M8Bv8JPYoAvb0ln8c9CLHGPPVkvj0mihc96rALPQj+8rywxtA7KKZp
                      vL19Lr2AUTg8in0BvQR/B71nYsY9sPgQvXvKjz3w2RU8wFWiPO8nzD2qxpq9/WIxvYACCL3X4F29
                      8eLCPQCCzDniRCU98gNiPeDXi7tKnrW9N+VFvei8AjzeqnQ9qNPZvGB14rsAAXa6agLJvQWFkz2w
                      YpQ7INyWOwB0sTr08Ba9xNyHvSx49DzMUf28j4WxvQB7t7lR/pc97La/vP7fh70Awhs7QGlwu3Mv
                      y71KiJO9oUDDPctgmT2Gr6W9wGrCvUeJrz0akzS9xOLMPP8ovz3WbIq9/uVOPcp7Cz122J+9eixx
                      Pb5tWD0oSaK9UmB/PRcrpT0yxgs9lTmGPbBd+Dvqnsm9XV1SvQ7+Pj063mQ9aMlHPIe1uj3K1Iq9
                      /sQxPUiforycs4K9iaWUPTHswj2iNsq9wFKYvDeeMb3mVTg9ADBXvSoKQL2ll8q9eMuUvZCGfb3q
                      Oii94EunPLM5sD0BfKo9YF6ZvfD4Pb1tnyy9Nc60vdN1hD1YKX685e2lPchd4bzk/908J9mQPVwt
                      3Dw18p89ByeZPVHEoD3nmCu9fk1EPVhEOzyq3lo9cNUIPAgZoDxM5oy84z2wPfItBT0NHIq9mlNq
                      vVgFW7zAw1m8Uzc6vdC5oL0Qnhu9gSqBPV3Jij3omCy8QsIWPVZior1JWsU9qKAkPCAOn7y5Mow9
                      AsgCPTblBL1Uz5U8LXVjvdaUOT01W7q9vRGqvYO3c73ESf8832DCvdIyCz2H4rK9L1nGvVarAb1V
                      LJU9QnEhPRkNnD3A85C9jUdEvQSYzjwAOze8am51PbIGNj2oQpm95DTsPP5VST3aXmw9lAALvQDV
                      /bzQd469kMIkPLYCJj30fRa9FJ6UPIP7Xb0m7qO98BpqvSOJyj0fSba9wJfEPK3Vlz3gmPO7wiYj
                      Pexh6LwO8Im9YLXIvAMUOb3iljI92NAovPj3s7zRmLw9K3ycvaqmez0NsYO9eWm4PQCF57ySBUQ9
                      fQUbvZIFSD2bVaK9qFXMvWZMgr1KF729c5PFPccnNb2Nv2i9w38mvTr1cb0omGW8IPzMvElxsj1Q
                      HlO96PjlvLGFwz1gCLi8KVuHPc2Hhb2owAE8QNsJOzOmUb3NebQ9fnlvPaj6YrzAN1G9st7EvXqw
                      Bz0ArHE5jkMsPXPmQr1B/Ig9fPv3PKaGCr0AFIU6k0FAvSAKhrt4cLc8NiUZPfDKBbz4dde8NMaN
                      vHGCkT26IiO9jV7JPflmhj3AZu46aCWuPHegzL1OpJ691KzavJg9DLxO92A9Q0C3PVx34Ty9ari9
                      YKadO2g0tDzCJE09QM+hOrIocj3eUnY9p++pPTqeWb36NnC9elIjPSZWWD1J1IE9rNemvEmhmT1X
                      7GW9CMX1vNHasT1NWC+9pSi8vV1KIr3k09A8QDdEPGhCPLyzbUS90AKjvRxf2TxYSma8WMWPvIwV
                      tDyeBZ694MDAvBNMer1QwGO9gL6oOm7bPD1C0kU92sgSPTLUZT3/iro9GU2TPQAeVTxonMW8epeS
                      vaDhkjsgS8272j1lvRcLZb30tQu919psvbSIxjwln6y9PiVCPaATmLy9ZL49o2M0vVMZkz3Q2Sy8
                      8n99PV+2tL3tG669mGmivKD1Zr0nKDK9cGYZvYYHLD3fd509M65bvYRM8zy4iqC93beIvRexQr1x
                      p5g9BOD/PJEGyT3kkhO9iJ7ivEJnXD0vIIA9uMDHPEDmoDygh+m74uk/PaBLMbu+YwE9GlNLvSFC
                      xT1mUVA93++KPZCSrL3UGZS8odmSPSCugTtImf+8sKZZvbzu3TwyhSE9TMnOPPhamTzidri90FkC
                      vBkdrD1455e9MWe7PdC/mDvdyki9GEe4PHa2ND1A63q7mNt3PMy6/DzB35w91wudPaBQaL0WF5a9
                      A1AxvdoKl73QmFC8jMjSPNT+07wneZM9mjgRPapRJT08f/k89FOLvKpoFD20BNW88ZumPY4zrL1A
                      R+u630+wPS4tQD3vYIA9ObOYPX84gz0gDL07FOWMvH2Der3YbEw8JYWHPbcRlj1jPyS9OsKQvajX
                      vrwpKKw9ZkgUPRxi5zxTqIk9V+pyvYJdYj2Azyu9ICLouyXglL298nC9eJPkvHrVmL3QDdY7sjhR
                      PQAmurtnsZQ9pFwEvSbXGj3o6C88QWPLPXCno73AWjm8FrBtPeOjr72dUb+9Cc3BPWPnVr2wf0E8
                      0xA+vXIeAz1QrLu9GwfLvT4yCD3IcoG9b7SNPaqOQ72y/i496MaMPEYvCj10tg692WuOPcBTAbuY
                      USY8GLAzvMJtn71j2ku9cH4YvNkuvT3n21S9bLzAvBjwrjyWGEA9SSmFPdC1e73K6Tq9XdBnvYJ0
                      bz2on7u8bt+HvW3kmr06W8K9gtY3PVYUMz1cJQq9c9mmPYnVwz2/wro90PB1vVAx2bvwTFe9h32/
                      ve11sr1qrLq9XlIwPRMZvz2AFos60HYFvPWBmz1hZb093jh7PU47VD0K3za9x/sqveCV9Du+kzM9
                      uUK0PXZjFL0S/hQ9QINWvCodcz0zMn29EI0bvcGAyz2SMGo99+yuvQUHlj2wBv47LW9mvfCYETyN
                      8Mm9LKTNvJA4kL3a9ka9gOCGvSjsB7w9nYs9bGS+vMCy/Do7pKS9wGYjO0uslb1ZYbs9rKK9PAjE
                      qrwsBfy8jjYqPVt4sb2Jb6o9Fe6BvXnHjD1AKaO83shlPeyhqDyg6nG702FEvX0pbr3DqZO9EJJf
                      vYACFjoFbYI9s5p3vV2hTL1IuIW9sPnKu0CRJbw1Y7E9HW2DPdkiwD22mHI9ursXvcMJnr2Xvbk9
                      9moMPUAVKDtsQe08MgScvYC8ojzA+wk7oP1+veDS7byE0PE85ip+PRL5Mz2n2H69qGx0vALPir2w
                      LDY8V4OZPXAKYTzfMK49hj6svfzB7DzAAHe8FowsPcyas7y8F4W9QPoeu9EHwz0QRC48ID/uu+CS
                      sb2oRfK87qOTvfoRUT3gHqE7ZaurPRxP4Dywnnc8CswgvaCwPr27+cM94M3ku81KqD3LT5y97ZRY
                      vcp+XL39v7a90NyCO6LiiL1j4Lw9Uoh4PXalmb0U07u8krxFPQBYAjuiLjs95QeCPSY5gb13tne9
                      iqrBvZZriL1wyUy8Akq5vbONmT3Ye8i9VGLhvCCOcb1dmJs9xoQfPUpavr14Zr48VrQ7PYhm9Lxg
                      fcM8HFzyPHSG7byxZMs91N63POBJJr3CrVg92BafPFC4jzthh6s98MJrvQbOLj2Mb5A8PqUhPWBT
                      Fb3BAI09/lZKPTL9r73LEp69CLvBvXSlBL0vZ6s9QGV6PMwUvLxQYjI8GfGMPdCHTbzpEb49Cget
                      vaKocj0wznK8rCnJPNKdaT3Hv2y9QrgtPeX6rz0qVGC90zthvey997x3A2W9ejoJvaymxDwm8h09
                      Z9lCvagGwTztC4s9+U2JPXqeHj3ImfC8wIFJOyhcgDwA6uW80HDJu4D8p7yTc8y991qmPaY7hb2F
                      lcE94DRyvfUMlb3QUPE7DjZdPajDX7zUiKA8YUSxPQodo71YMga8g0XAvRBHVL0u+i498pUbPS6D
                      Lz01hIm9LBi3PCwqoDzgY9E7dJqPPNvixT1fYpc9GB2GPEH0rT3Vg7k9tpgZvfMYYL3Q1NI7pH3g
                      PIDFwLulq6s9jAzkvJn2oT0YCf+8tWCHPQh5zbzAv4K8MjohPdCNA7z4F668NbuwvdIigL0d+1C9
                      I0invQB4pLldiqs9WQuOPeoqPj386/88xFHhPGPhgz1KhRM9EEgrPFceyL2AH0W9HxzHvTK9Aj2w
                      5ze9gKx7vdNRjz2AiRs8s4LDvWyBgTxIKbi8kMpBvKi/qbyg44I7SM+BPBAHbzxO1SY9TuZuPXIB
                      gL0d94w93dMuveNacr3ekYi9AfGVPdJpp73e9oO9QEdCvGjCjzznREq9ELA0vBePwz1TZUG9LDOL
                      vRqFJr2dIb09aO4DvH9slD26nTy94s5vPUwO0rxOA1Y9MoFMPWX3tr3CC2s9gQ2KPYKQGT0Hole9
                      m5C6PYJyMz0T5TK9yXOqPU6qKz1y0A09NaSNPWV7kL1QTWm9nFr0POi8hDxL9bK9FyhjvRgdEzxJ
                      oI89+RWsPQ1oS73ecqy91o5XPWKrDD1CKhM9FlqBvSf5Tr1gvam9vUqXvRcNQb2bHri9L8rDPWmd
                      nz38yoS9NaGwPeCB9bwALvW7qHp/vFDDU7ywIK07L03IPaxllDx69UU9Iae8Pc7Nmb0yDsm9mvM3
                      vYQX9jx9Rcw9+jZNvVhe5rxwe7u99GCKvd1YvL1YFo+9XduGPXAWm706ZDE9tT2svY7FrL3jMMY9
                      bWgavZRa3rw0/bg8bGOyPECVdTxMmbm8wNgHu1hzujxirBA96GnWvABlyL0Fq6s97GLtPBCVTr2a
                      OHA9YtwKPWKmYT0f0Zk90ni9vbQsojwBAJQ9cJYPPLvNyL3j7r+9YDudvJDcRjxBzZI9fRvGPYOZ
                      X71tslG9hkMMPYBsvTrZwYE9F4UqvdTOijwSqCc9AMKfuqdHJ72qlG+9k9N0vYAxF726+MW9WuV2
                      PVJRJj36lxo9yDemPAB48Tj4PpW9/WofvWhlPrwwk9A7GZywPYyfozwDY8a90FPIO5TcEr0QkTy9
                      U1ewverQEr2r9rA9UBP4O1BEXb1DYbO9iI7uvEc7Sr2doRq9gEOTvBOxhT0wvy69LO4QvdpHmb15
                      pZ09cpwsPXvruT3kyAS9yAGJvEDJSjwwg0+8xfq/PeCl2jugOIG9lzFGvcQmDb1I1aC9g6eoPSLK
                      FD2AwT28XBkMvVaChL0NDsa98igbPcByK7tg4Fc7ALirOhUKpD20r7y8MF4ivQrjnb3HNEq9ew+e
                      vffAyz15mZU9CRuFPR2qkT2Aq2I87IK4vFBluLumYDw9uk54PUBdzbpoZue88GcOvGoQMD3FTqa9
                      XjA0PXqBn73+HH495VquvULwAj0rZ6w9VB/kPF0dJr1lha69q7O3vRJjQD3SNmU9kYq7PR+hhD0D
                      53G91DTsPPM0nD0yMAY9q/+lPctmwD1bi7i9k+NKvRSIw7xmrAc9d0pdvTT6A70ZJ4s9YU+NPWmd
                      qj3HgLc9AAoYubIXfj1Ap6A8F54bvfVPy73GeAE9LZOWvT3xyz3Vs8o9Q3OqvardJL06aR49xrNr
                      Pcq4HT224kw9eBarvOC2mzwApks8NcfIvcCLkr3S7by99+WjPaa8Pz1Y6q68UGipO3ESsT0rzp89
                      nmAEPUDsIb2AOC68IbiJPWXTpz3pG6w9QOuLPD0nij2yHlc9lwo3vd34Vb3QXUu9N0iXPbDGmjte
                      LkI9QOntvHlMoD241Me93guAvaYFAT3lYo69obeLPVqsE73qL1G9Nx9tvYUEy73A6VO87ZmBvfu7
                      tT3XqR69MGlOvdyIiL3StAA96DBgvDa2BD3SAJ+9trmivVd9OL35pMU9GhEYvSamgb2QiTa87b4g
                      vVitqjx9B1W9gPMavZ55Aj3n10e9+mxhPThFmzy9ncq9qOkTvFTKCb0XYKc9its3PfCYZ7zr+Z+9
                      Cv1SvfinkjxHObq9ikcGvZcuxj127EY9EAkMvaR+7DwodYU8AAcevCSpEL0wSo+7bqVCPdjcK7yb
                      vro95YKGPVZZAD1qjS29TmEKPaA3AzsXLGO9+uM7vUDmdr06SCA9OjQ+PbTb2jxocUy8QFo/vR8A
                      vL2AKrY60uGNvfr1OT0AbAG72+uhvZhujjwC2x490N9WvSiGx7xgIF67Gj1KvdcZy70+Hio9+5Os
                      PSBfrbtStQA90CUQvXlLjz05N7o9QrqJvfW5gr0vBJI9Z829PWk4tT2Yu0282jOZvUuLsT180O88
                      9gZXPcYOBb2eWjM9QmlBPeyupTzmo6y9Vo6HvWB4rjsyUcO9p8bDvbtUrT1a8yc9yUmsPakQiz00
                      X4K8AFs+urAYBL0uXoW9gDvMOtpaYD0nFyW9QAvUOvQQ+LxmuzM9tG//PHYQDr02UaC9CkQPvYIy
                      ZD1KMCK95JQWveiYS7xC2VY97dS4PaP1tL1A+/u6AfCUPao3Rj1VGIQ9K7mNvQye37xkRO484Ka9
                      O4K4VT0boKo92vjEvbCpT70AMKG81LDdPAJZSj3Fjq+9bnp7PXkLtj3RWow9ZA+CvY09qD04LOS8
                      fFXiPFi1jbwgiri7o6G5PQCmTzvGvzo9vAf1POietL1FeqW9Ao0HPdsMkL0IJau9huk1PbirwrxU
                      ces8a/6hPXKsfz1dU4E9EOJgvDoFlb2Arri95GTdPK/4y72j9Ku91VyaPWHQiT0S9j4980q+PUB6
                      IDvmMJK9WB01PKAGiTyAGLc72GNRvHJcIj3yBzI9FhYYvT4jAj0w3LG9YJkZO927dr1Eh4e9klNL
                      PYwDhLxgq/k7crU4PbBner0SIQ09o39JvbuZuT0w8Gy8AMn+u8BsCjsZMpY9XTQfvWXgrb0QKE08
                      6OSxvOqAO705zpA98nnFvS2WPb1Q3ce9sH07vGg8dTxI5Me9aAYIPP11Ub3amL69M9BQvSDOu7ys
                      bda8pmEGvbo7Uz21ZrU9mAY6PHDLUr0Avay5O9usPS6WAT2a3n69AMTfvArUB71bAMI9yEGBvJzp
                      gr2QzVC8AxWjvUIbLz3ay729EE+TvRg2rbyQla699FOFPKCJjbymkDc9iyu+PbIjAT2oRD48WqbJ
                      vYvSwT0fXrS9P1ySPcNQiT1rk7c9UOxGPMjwwjynfK+9X/3LvdNFmb1La669c+95vRAwRLz5SIU9
                      5jw/PVm+pT0ioEU9F1Y/veoQUT2wr2q90KDpO/owOj0A+t+6uvpcveAg4js0+ea8QwW/vcA1BbzQ
                      RWY8zGeyPMA3e7w6xlW9GI4MPKLRi71j0X69G8OxvXXHwb2H8by9hH3vPJktsz0gGpg7r3yqPfDM
                      OrxN1529v8S+vZ5Mkr2QWyy8F/9xvdh72bzxrcQ9LBH+PCzupLxBUL49ScyzPXD4GL0I2d68KIDe
                      vBR857wY7Za9zNITvQD5kruwT0i80CK0OwAYuLsGehg9ArxAPU9gjj1gPO6862+rvTqxZD1otm08
                      cwCIPezJ7Dyy8hw9GNBUPIB7zLvSHgA9gCvWu4DJCToAe4M7kBEIPCpji71ao0a9LlhsPRP+y71A
                      MEu71oOTvQc/eb1OzSA9TXqcvTPmeL2oN5S9GpvDvTDTPbxQ10I8jFbwPHBcDbx80gu95dy2PZNw
                      Xb1oT9S8bNGbvCWrhL169Km9gC8evfpNTT0aaEs9yfGRPYCLUjwC03w92N50PHKjx73WT469HLGL
                      vaAmsb3sYwO9oFzyu2DHOztAkGq7UxasPRqiQD03kbG9QMnBuni8iryPnsU9o2uTPWTKFL0duV29
                      sjguPTplCj1KqES9UMhfPEwTAb0Q1la8gEo+umjraTwlI5M9AEsEvYDIvTxsvZW8QJwWuwBfsr1p
                      XLI9M4W6veyYkbzjo0y9NGW8vHpqHj3Jt789Jr2dvd1Snb1+MWk9I5ucvWCEFTtJtYw9HJ0AvcCo
                      pr2oFGM8AKEaPJjeQTyQbhK8gETYOi4yfj1lhMS9uKKXvVpIBj0gp7+9SgECvc1Guz3SFpi9AHrI
                      uTdfu71lyqo9qjJzvRJ7ET3NsiC9OWK1PT3Qwj2+Mpy9YwdKvUArnL3R+4A98WWHPaDhur3Nc649
                      IOCXPPAwNbwnpD+9PuqIva0Tnj1gOZy9AFqPOxAzK7wrEsQ9Ta6mvRp1gb3tWJ892rU7vSyIFL2U
                      HfE8cKEHvHdkjD30s+A8EWm7PWbHGL2UF/68IcuJPVgDiL0aEGO9KeKQPUGDkD1+5xk9REPcPFJo
                      ez0jKkK9czerPbOZwT2w/8I7snQGPWoLUT1+DWw9vUOCPdMhkL0Ao+m5/jI8PW6vp70Aobi8gXiI
                      PT4IED1wKGy90olOPSp0Fb3q2pq9A2qVPRMxkT2wv6+9UALDu3diJr2ATHa9TceCvRLcET1HV7e9
                      ALEYuuCfhjxG/149sBY6PM2cv70oC+e8hVSQPWI4PD22cm89pPb2PMzt1Lylm7i92tnJvYCGZDwU
                      PgO9reZFvRS5obwLqLy9KOELvGBiu7vD5aa96wzAPUPzur1Qi6G7UsQWPSAOmrxABKm9NFHKvOR5
                      9jwNrnK9FK7/PMaqdj14pdu8vsaDvY3irT0qoXs9UDRLvXjMmL3Yoh68dIT5PCyU6jy5G6U9wFNv
                      vdAl8DvNr3G97DsVvRU3qz0IlPW8fbgfvTEdhD0ofA88iFeYPONVUL3TAq69CHLBvaLlXz23IUC9
                      Gjy8veAir7x0age9tHTjvKdKvL20jbE80CUpvCthtz2UnYq9VWeuvb4lqb1A5mu9Ysx/PQzs5zwt
                      QqO9hQ2cPVB53DsUVBi9zKDBPJsZrL3i0jE9YIwKveMvgT19psK9QOP3ukh7qjwgrZg7vioLPfgS
                      wr0KTlO9+hofvc2gLr1B8bc9oJOfvT2wW72l+YO94oapvYlBqz0ekXY9HZBevTQt07xk7fg8ADjf
                      us+fjT1iCTw9e8agvdDLizslVp497F2+PJJRVj1+V1w9gIbCO5jh/7xLmqg9GHy+POJHcz3xPYE9
                      7NqzvMBkDLybdZq9CQWvPTRwz7wlPrA9wHOAPP1IUb0zXVG97ATGPLQ3yLzUneW8AGRauddBNL3s
                      fOm8FW2tPaBkzLs/BMi95DP7PPCsML1tp7A9YK+1vX4/nL0AmAO4wJ4rvbbWjL3rO5S909aivRZ8
                      Ej361VG9cB9fvbPfe710IZU8+p8XvRYZRD0wDxY8p5suvdb4Bz2N+409zUGsvfu1sT3C6Aw98wTC
                      vaYZBr320ys9t329vQCMRzrDsZS9SiuJvQkrnj2dR3C9gIzAu0CMhb09W2C9GqyJvSw5nDxAuI29
                      NO/jPAwd7Lz8DBC9I8mdvVZALj305sI8zNX8vPkXsT3jn7g9cntSPai5ITyCaWI9uF6DvfaFHz1g
                      cQe72ktSPbIUfT16Mra9cpdWPX37P73dj8e9eRKfPdg+RTxAlUa8/wrKvS0Yd734tMU8QLkDPEyN
                      jjzAG5u8AHgtO4C+27rYCB88qL5yPMnOrD0Zcpo9fTTHPf2Huz1Y/YK9p/q9PQD5qbwF6LK9cX+b
                      PYPqwz1zYEm9GH1uvAb5Oz0CeQM9y56qvTQW/rx0ZbG85OLkPMd7r73X2TS9dcmJPYBanDsQ4XS8
                      2iIHPQgzibzCiIW9YGiyvIzt6rwAgqK80kUaPQKvrr2g9ZU7ol8RPZPArj2n5MO9lYK/vXgk7rzI
                      Zcs8ZqRJPajE7LxWEZK9oZC0Pcp+BD3KPZS93T84vfu4pT0qbg89OjshPburuD0Mx8O8HxyePRSW
                      7rzCIno9ULx5vMC2Bjt6frC9RhEBvUgEmDyATrW7vWVuvaKjfj0msA29ekI5vaj7/7yslaA89RWp
                      PcCXJDyC+Tk9mCu0vAomEb0dRHe9kLYbvYM/br0AYxo6j2PMvbAu4zuIhcS9GmF+PegEr7wa0Dg9
                      cSq2Pf7ulL3sis48uGvFvTY3Dr2W5Au9+Bu6PCkLsT1XhUe9SQqbPXZQFb1ukmo9YSGQPbIaET2g
                      gdW7mrcdPdY7Kz0q10M9iPi9vCkymD0gIJ07BvqFvbB1ezwAesk5kLSBvUOSwr2DHpc9VF2evHRt
                      4rxkKA29mJTLPHitxzwwmb872PacvIAGSb3UY/A8+D6HvXHtqT060lq9OdWhPSrmcT2a+R49jHH6
                      vEUFtr2s3No8yU67PVQd/DzAB1W8sldHPav2wT1rvqu940anPaj6jL3n4sS91UmvvTofDr1AHmS7
                      ogBKPSm+jD2A73m9+LWtvUgkwTxT3pu9ixDEPaIhYz1MJbm8ep5lvf1JcL27Lo89d7sbvS+vw70b
                      8789cCWeva8dzL2YLo48Kq+2vXeyI70Byrw9yEGSPChEz7xuqBk9TY2vvaJldj3ONUI9POQDvb9l
                      xT2L2K093gmDvUH2xT0agXw9WvNDPV1ffL0l0Ig9sDb7O7ZFXT1XDLu9AEpBO2Gvtz29zMQ9gxpM
                      vXtGqb3zxcE9Vm1gPXDlUzxgAHM7Q7iAPdotb71sx4e8ENhCvQxQojy62wg9YGDBvF2pSb0CDh89
                      kFBNvb1RoT0A0F47QFOLuoCtkTw/YYQ9nXylPa2Gpr0weTW9baFmvS5EgL3Qmds7IRSrPQBMnrty
                      hxs9sLu1uz15ar3FXq69fmGAvUfogT1ACiI82M6EPKoqHz0MFfU82GiXPBiS0bx28wS9fEjVPPQJ
                      B72uhCA9gb+oPRg2hbzA5lO9j06+PcDQLzsARxY6w8m+PQA6CjtqGgq96NNFPEc9UL1GmnU9AE7t
                      uyfjd71oAZO9OenIPfoLFr1SFgc9oUmlPRPMU70Aq1E7nObMPPVYjr0YSLI8nt9uPfC9x71IR5u9
                      E+tjvZHLrj1mUVk9IxRTvSxv+7x0WgG9hOnbPGJXHz2ACOy74C6cvKAhwDtyQW49jZRgvcBea7wb
                      RIg9n2C7PX0Rsz3jv8k9sKiRvQBuML0obNq8cIViPIpZGT30JtM8tVrHPTbqnb0o7R88Eg1HPWkf
                      vz0onyk81mxBPQImAj0AJdG7ttOYvT/YlD2w+Iq7FhkZvWMlur3LP5I9sDjou8CuNbxKthg9ilJa
                      PdBTFDzHd6c9G56vPTgEtLwjwcS9AKs5veh0YzwFlIk9sK+Nvd1clr2wRjC8LInDPDWkqL3U5w69
                      Ffmmvai1sb0QVDc8EmY1PaDVYTuAX7o7Y/RAvW8QlT2zaTC9/ohtPfk/yD2wLmk8et+Tvcvrwj0Y
                      XC08LZilvQC05zvOvYC9M02JPTCNsbvUKvA8NMCJPN2vMr1DfsU97Q5cvdRG0TyyCFs9nRumPakQ
                      ij1C5bC9FUXJPTpqw720Z628b67IPZ/DhD1OKqC9MLMxPD92uL2qMGm9bPrlvB8yvD1VUam9pCWJ
                      vccKkT2Da5U9CcWzPSLhDj2qnpO95ggPPag4rb03QBy9V6LEParRWr1lU6A9/fEbvULqTj3wJzS8
                      OLyTvUN9xz0PHqs9LFSXvEvZkD0wLXq84wCvvVjUjTyYMby9AGT6vOHIuD33/Wi9VEXUPDnmvT1O
                      vDs9ZQCPvR3FuD0noYE9gOOfOjrbHz2dJ449OYWdPbDYxb2kntM8+eXFPUD7xjq6D289IEbwu0Bn
                      1TpQCVg8Xq0EPbL9Nj1IP8C94PPEvYwpFb1ACRW9QN40O4zaxzzpg7I9SktuvZROqbxBIZk9qDqK
                      vCg5drzus4O9HQq2vW0+iD1Aw3c8a1iUvY06jz0AC0k8rZeevQTrFb12Vwq90HQbvYBlojrpw4k9
                      mB5APPRbkDxobLu9Yfa/PXCtTLy2gQ29DtRrPZCKhL2gycM83HLmPJH2iz10FNs8jGCOvFTs87w0
                      Bfy8Zs1tPQ3InT20aau8UhRbPTjcozyC/cC9cMMNvcI2ib0wwMg7VCSxvMww8bzgi6c7yCazvcoV
                      Mb1tc369jm1vPc1ler13ZnK9PTBhvUW3yz2Ariy9d3dhvYRF5DxYixg8mgVSPawR9bwAZsI5IwFU
                      vaDcmr3Qa4Q7z7CyPbiLsbwG6Ku9QMNHu/Spgr2jiLI9kBpzvd3lHb26raC98O4UPEAqZDwjYja9
                      9+lYvYdqhj0A1A088t5cPQABqDw2aQe941ujvUmtsj2NIVe9sEFuvWoqUb0qVQ89wO1BvXoJJT2j
                      WEK9TA+NPCDPz7yTMC69TBWQvDf1t73sjhK9VNsTvWS/zzw1wY29KgeyvVdHsT0AKnw7lPzZPI0z
                      KL0zwpw9WOm5vKp3Sj2YFx28NxbGvbt2lj0fVq49zKSTvCNhG70E+c48RlhjPUyBq7zK4z29ur9A
                      Pa8BtD0gq6y7I4LCPTzx8zx6oay9kKUpvA7Uhb3A74w8DxqIPYsopj0wGEK9dM6hPLrXSr1r5qw9
                      QDQ1u436tj0g9sM8r8XJPRZtdT1UrJG8PduYPZmqij2NKlW9TQAnvR5bKT2iOae9aOPpvJCHKjyg
                      lJq9GmpaPUC5Xr39n7C9cmAKPSCgobwZvqU9cIPIvSwPDr2DUjK9sweRPWC5/bxGKRw9Wi97PR5r
                      IT1WdBY9pjMRvZ9Cyz286O88GB9SPLvoq72dgKS9ckeQvU7pHz0Uo6u8RdSbPegslrwov8C9lrty
                      PUihw7318oo9AJFwvOhLjLxSKTo95m5rPZMRwL04xcC9ndSmPRm4wj3AF2k7KK/fvODnmrtY0YI8
                      TRjEPZ6DCz1Ik8c8ypovvV0ToD0omGk8cBmQvRK1aj0aSTA9JNuIvca0cD3wZSK9PfuivfWlvj3d
                      zz6949kqvZAulr3tfcQ9jAOBPHIqmL0x9b49vaOmPVB8fbwaD1Y9uSqPPfZHnr1TBGq94M7juxIV
                      hL0dQEa90Dh/vEovNj0dtcc9lKGjvIwgsjx0ZIu8gLb/OrAaBb1QaJg754pgva02H724x+C8d5tb
                      vXosXb2y/zo94+xavdbaWD0g1fE7jgxoPRsun701+Ys96uREPZTf4bxPhKg9B5ZavbvohD3mfYi9
                      wFRIO76/Ez1zQo49iEWRvTOsTr0YTYu9dEyUPJrxBz217LK92ko5Pa9rwz0mwG49qBlRvBCpCzyC
                      FDk98P/HveLhNj1ggoW9kpZRPShtSDyJtpw9Aj5gPUPtyD3Y8sa8DmqovYMVT73wTk084UvAPTf7
                      dL2Uc5s8YOmQPBA1FTwDl5i92JyovTmFkz3YttC8K3qsvbkGxj3MCLu8xDjkPCB9kjtw8Rk8YNNy
                      vS0JzD3H8TO90PMPPJv1kj0CxDA9oAL8u7LTkL2VhJa9qh06vXLJLT1I75q9EpvEvYBdUTzXZmS9
                      qyiWvQZaqr1QMaO93DQIvRDIJb17cqs9bjcFPRMrxz2+iZi9AxI1vbeSWr0uuBs9qt+4vc0ogz1J
                      BY89wPC0vW28p73AXuQ6GhGgvRKQDj0KCUW9MC4FvaYWUT1tCsg9QNEnuxYsOz0GDxA9w8mfvZ4P
                      hL0Ako+94POLPJDrTr0xBZE9YK9UO5pUWz2AdR+8M0dGvQVyvT1yb1I9dqQWPStdrT2gwiQ76h7G
                      vZj6YjzQxsO7rOfwvIVczL3E3Nc8azqiPRSN/TxEytU8mO0YPKdbur1YWLa88KhGvGBTjLxVbZ09
                      ZWCKvaA3tbxd1Y69vbA/vU4nbT3zbqg9m2i8PcbuLT2R37Y98mBZPXDxarwYj22819hBvQCZEL0g
                      z8K8G8mPvQD9YrtKfYm9egFuPaDr8LvIvcM8jjIOPRPfxz15Wpo9/cCQvRLeUz34xrU8FnuqvZj3
                      r73ob368A1V+vWaGpr2Amu27BqcAvUoHdb1yywc96ArJvBY9ib2QzKW9en3KvQjJmDwINeG8gy07
                      vVAZX7xYCpe82jQxvYqZWr1j5GS9yg9mPdreXT1YoNG8EKcVPBkTkT1DWZ09dLD8vDF4vz26J1e9
                      6BORvOxP8jzU0re8QFUdvOCkeL3fy6M9dxakPcJ8Yj2MGeg88gOevVbvkb3mtjc9Y/iyPeDazLxc
                      0tU8lcfKPXO7tj3Qn5u9bbQfvQdlkz0WP149YhqjvWh/ITwRpaY9owdyvWaxo71xa4I9mNlJvJvh
                      sL1QVxM81/a1PUvnkL2GKVw9ssSNvevOqb05c4U9Xq9rPeHhiz0AIOE7be0ivXgRjjwKC7q93SOI
                      PYUCu73AbRe9wGMxvHZMQT32ZpW945qcPQBxCrrQsRE8VlqOvUAYILuyUB090gABPTDxeLxQltq7
                      GLP8vLmowT2miw69K368vfgkrrwoZxk8rATOvEDvA7sfx4E9ispcva2GUb0xsIM9EqRfPfGbmj3z
                      IiO9oEfsuz7PCj3UW/M8j0CKPYD6hboAsyC7oxnIPb65TD2T7Wa9voMlPcAQ/Lq9aKW9b7auvSyZ
                      y7yG22w9yGn3vNmmpz2Au2Q8USOgPZAPXb3cgNw8+oAhvfpCZ71UW6k8NeSKvX0RcL0nS7u9mCar
                      vcvSmr2YRbU84+SpPSBzhzsGdi09UPtBvWkDqT1XD7K9ZtAUvX/skD2g9LW8F2O9PaT14zzeFy49
                      c1zFPRi9LTxg8ou7NJ6vvHBDVr2D0bw9gKCbOpAzoL1jF8Y942yVPYCT27xNz4M9AJcrvBq1Jb05
                      DbE90qN6PcfhHL2MfBm9tEmFPEsTor3j3jO9/rc8PXZTkb2XDY898Y+cPb1mjz0ExPY8rX6qvewx
                      xDxjW5i94H7yO2HUmj0ePSo9bAeGPFJZKD01Zbk9zA6avOVLhr2sN4A8lgV2PXpMA72iPFM9ArVZ
                      PQDyar1gJ4G8g5Qgvb6kjr3XibK9IxJovZA9pr13SEu9raCEPal3vT2wfT688Mg/PBGxlD3AkE28
                      wrGqvY33Ib0oOmg88CsdvYBqsjponrY86gtyPZC8RDyoMRs8QcDCPeAf3bwlU8A9VGimvDgVlzz5
                      lcs9gDnluh01oT0NPp49piGOvaU7kz1Ppbs94BXoO6qKCj1gbaS789JBvQ9gwr0Mi8k86O1avI2z
                      lr2GUqq9EBVXvenejz299Mc9tLehvBF8mT0Q1AG9TI+HPMPpfb18pfs8WFjOvIkxjT2ADD+9+yOm
                      vcJ1Sj1A7368l7hyvTbEnb3SfCE9TH2OPIx4mDwOyTA9CNe5vNuQnT3XpII9e8muPVQlhb2d4I29
                      xwCPPVN9t719u8A9qChRPArQB71DFIE9cd68PfRSkjzC5BI9ItaKvQ6qWj3oCLu8zdO+vaAtFjsz
                      gMU9AEzZuJ3eP72gXjm7uCjwvCwvBL2TbbY967KOPYp8YT0AxoG7dHm/vILeCz3oRuW8QOiuPBhQ
                      4bxmK4S9YeiMPeaNRj1dI6u91JcKvVzZ1DwkANM8mpcePdOvyz2AIoI8oillPa54Hz3L1b09nSRL
                      vaFvoT2rZr690NAOvQAvBLzwqoe97AuBvIzIorxstru84+95vX+pxb0YKaW9JlqFvSkGyz146Y29
                      XbmYPfj9lr1qBCY94LE4vRe+Ob3SzX49Fy26PZppB73FY6y9LZmovScQvj1oB4K9ne4avUTJBb3Y
                      iIG94G+JPJoZPL0WG6S9A99FvbJ9GT0DLF693XmcPaLGJj3eciw9FSHBvSAEnrsZTKY97JDbvOze
                      orzobaO9oJ+JvJtcwz2AhbQ6WlIsvVMMmT2s+/m8NjAzPXYCRT2g3EC9Z4eLPY4pXT1gSie97ktN
                      PeAq0DvTcMw9Pk0GPW7mLz0wGO87dvoOvToiHj1SU0g955S5vYgWszwXVDe9Gq9HvQ2Ty72B1pg9
                      RUqIPYLYcT2uB0s9gBx7PEDxjzoncoM9qiE3vQBXxzz6z4a9cNGJvS70ib3r0cq9FanEvXBkmL3y
                      NKy9LN7JPAnngT3otLK8IELjvAP4nT3CL0M9nwqsPShPOryen1g9fFvPPGqQZD1QVhc8UdHFPalN
                      pT2AEKA8LtoePYpcbr3G5Yy9MT6lPROgxj1TXIU9j8KkPancjj0Y9r882qqZvRWUor34U4o8eED3
                      vIBWLTyYbse8hY+gvSh4IjyfT8Q9sA9rPLukiD0A/CC7wF5kPKNWuz01McS9AGMmvIBCOzwAksu7
                      XKMIvbZrgL3KR1+95guTvVSx/7wazh29rm1hPUc8Gr0oaji8twNmvd25Ub3utyg9tFnyvEaoUz2c
                      JgG9iNTHvF1IKL259r89dw8mvWLDPz1M6dO8x39nvRhhy70AQ5Y7NDq6vPWkxD3uMzw9KLNMvMlz
                      rj1YTKM8lKzPPGOHhT0EBNw8WfKCPdBHOb1g9Sy7/puFvf6VDD1gyeG80CZqvCHzlT1pcLc9ToUX
                      PSi0gb3GkDA9lSCfvcD9J7taPoq9Cf6QPeSv5zyfero9QrSgvSAftzu21hQ9u3mwPVXatb3A+0s7
                      fTdLvWhVvL3kROA8UAgjvbedfb1Aksm8EHIyPDpnGD3y50Q9qVrGPah5nbwj4i+92IfcvGB2Qjte
                      YJm9GhYxPQ3oIL0wGYY7JpSqvWi4RTwYP7C9UL4evHXnuT3eOm09gGUfvR4cRj0w5Xk8l3HMPSE+
                      vz09aaw9KPBlPLMipL20hdS80yefvT9uv73Misc8ordNPatTu71mcBw9dBnlPADEQzzxFco9Ye6s
                      PfgIyrxw3zg8rMihvCqUWj3t9469wLKZOiDa8LwGFC09MiMlPc0SlT34Y5W9EIFpvDBzjzv22Tw9
                      AAFNPDqyKD0ASaI8MppePVAkaLwQPls8QOJMvMB3wTzcTvE8RfO0vTFExj1wkVY8nUugPSMxNr3Q
                      X8K7Ty/AvVW2mL3PHbc9dUaTPWCAkjuMl4e8iN+3vI8QhD2QCq69AHS4OK8nyz2K2F89p6M0vblq
                      oT3bvK293gUAPcqNN73YzUO8NGsMvYt9x71+xYq9oIMTvTC1h70D2XK9a7/CvSNwvL1jgla9iJiS
                      PKFbvz3wlSk8QIYpPC4cND0zUss97DC6vNBKbbxAQQI8wPqQuuW9pL2Gnzs9AoR0PQTi2TxackW9
                      Wgx9PaAgsL0RJK094uQlPZXErz3jBKa9ZlABPQKeFj1AD5Q6osOPvRlpjT3gvSq9F8LBvSBIhzvT
                      5sY9aSWtPfKWqL0bNsU9aj0CvbKgIT0zAqi9JOzfPNRY5DxY40i8gN+Ku6oIoL3nOmu9or9lPfgE
                      27z69hO9QsdIPYwNk7xRgZk90ySvPUnquz2HY5Q9B+JrvXwu9DzCX2Y9N7NmvSK5sr0UVcA8gaWA
                      PRDUw73Fn5i90Inqu8Y2Wj3Clx091lpHPRGqnD0P0MK9MUm1PeUatL2epUk9nMwPvcwb4TwAhIo6
                      h+0/vRhvmr1GW0g9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI5NzM0NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MDI5NzM0NHEBYS5kAAAAAAAAAB5PGT0j2ZI9BqqsvVgNMjxgD4+843mHPQKFTT3KOZu9
                      E8Y1vShPNTwFH7g9THWvvN3irT0AZBe86JADvGjIBjxtEGu9rKyOPFVewT2AQ6S9Qs9mPfDQWL0M
                      JZK8IrlpPa1Sjz3yvkA9Rt6cvdinwrynT1e9aQuWPWg0NjwQlim8G5u8vUuAvL2vLZE9eo1+PVBc
                      DzwdxYs9NI6xPMiRtL1UG+68CFOuvYIdeD2i3wI9VvIDPQZaqb0qmUu9Jr1TPUxHh7zqb4O9Y/qo
                      vfCLCjxPacm9go2pveh3vL2od4q8TOH2PCrlDb23DiS9Qsd6PTuBkr1svrc8xCiDve9DuT22rS89
                      jUo3vdfkR70AI9+50tZjPbqDN73gVPa7A/ipPaQADb1SvWI9bMGEvBdExD0J6ZQ96pGMvaqbOj3d
                      Mx69A2+ZvSRj+DwRe8c9DTuKvWDvuzxC/Gw9QJ0BPEglrrxUM4m9b1WKPcrYBD1TioA9Eu5EPWjv
                      HbwQEiW8rRlgvWCk/rxAs3K9k+dyvRKdqL0=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI5NzU4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MDI5NzU4NHEBYS5kAAAAAAAAAKxn8byNjrC9hbWovbNGpT1O2y49bwfCPSE+jD00TJW8
                      KFNqvPQbkrzU8ug8rtxfPaqPJD0La469qnAgvVe0rT11pbe9x923PcmBwD27kcy9fVOfvb2/Rr0A
                      /yA7sPtRvLTkEb04epq8mS2bPdEjrD0qlHa94BRMvbJTEz0OfWQ9oNDzO4CG2rql4Ie9UWK9PZNy
                      vL0hOqw9zuZFPeZzWz1pZps9cNFTvcK9Hj2MB5e8AAtTukKyJT0cyoe9oBQru2a0iL0D8h69RpeJ
                      vUJSez2wuMe9GDtfvDUJqj2AOru9QHJ+PK7kkL1j2a+9wPaLOoXNmz12wUw9nh9mPTQhvLxVpZG9
                      lUDGPSGEzD3AmAs8QBwnO+o5dT195Vm9igdTvaC4kr2AWqQ7sOtJvOygrLwYXyK8mnS4vaCOvrth
                      kZ49Ol41PaNoXL2HH5M9O6yePbJ1mL1CcwY9+otTvTu+q71gXJa9GZm/PU4Xkb2L7bk9bRZcvehU
                      PTyCqWM9QjlfPbimor3okpq9AECjPCCc4js=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE3MDI5NzQyNHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE3MDI5NzQyNHEBYS4BAAAAAAAAAC2Ybb0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        Ez8TPNMSTTyJlYI8iZWCPChgITzmllg8AYFuPAGBbjydPDg86HmSPFjNazxYzWs8nTw4POh5kjxY
        zWs8WM1rPPvMnTsHz+s7LbHJOy2xyTsGvv47ZkMXPHfzJzx38yc8kyQnPLEfcDzwlUw88JVMPJMk
        JzyxH3A88JVMPPCVTDx2weU7HSyIPOZmIDzmZiA8fBPNO2PMPjxQatA7UGrQO/cz6ztbloM8r80K
        PK/NCjz3M+s7W5aDPK/NCjyvzQo8dsHlOx0siDzmZiA85mYgPHwTzTtjzD48UGrQO1Bq0Dv3M+s7
        W5aDPK/NCjyvzQo89zPrO1uWgzyvzQo8r80KPG2BqTt5anM7ViI/O1YiPzseqpo7QnlmOwpMUTsK
        TFE7DXmHO5dlKjv1sVM79bFTOw15hzuXZSo79bFTO/WxUzsaKx48cbDTOzN/9zszf/c7n/TDOxUB
        pTv6m5Q7+puUO+1TlTuY4k87Ev9zOxL/czvtU5U7mOJPOxL/czsS/3M7KETZO1lKNzt1mps7dZqb
        O7Jp8ztc0II7UYPvO1GD7zsCPNQ7TK09O+bQszvm0LM7AjzUO0ytPTvm0LM75tCzOyhE2TtZSjc7
        dZqbO3WamzuyafM7XNCCO1GD7ztRg+87AjzUO0ytPTvm0LM75tCzOwI81DtMrT075tCzO+bQszs=
