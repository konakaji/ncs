N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg4NDgxNnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTI4ODQ4MTZxAWEuhAMAAAAAAACo7lu+4l94Pr6qNL48tf69eKhcPRbNCb52As+92L1Q
                      vrA/qr42B4G+YtN2PmVgnD6QMsi9fg0mvkJClL4spYS+ACE6vnjOeT0U8aa+JjtuvoCX/b2cV5K+
                      xjKLvqKBXj6M68w9UGzLPGIJEj7E7t89oxSjvsBm07uAgXs8UOgZvgAwSz2tFpU+mrtuPvBYDr5S
                      nXM+MIgQPsCEkTwIjX09DEjGvWiKZj0bABi+5zimvvqkbD56SWY+pPKKvY4rND5hDZo+WBAZPYmG
                      iz4wRfq9ChBLPgKwNT4zkly+tndqPjYFx71SDQ0+DvcJPnMsHb5AkdK7XJX4vdo6WT5yync+4HLZ
                      PTgxNL7xt5Q+ALc0vAjnJL0+oiK+zDb4PVA9wLzm43S+E2EovlF4gz4mrCA+Xp+HvoB0VL7YTJm+
                      OUylPiA5Xj3GQ1g+g/WnvroiGD6cJY29UOGUvADRxrr6ZjU+IUShPupzeD4Q6p+8opJ3Pvy9oT1f
                      g5M+EMgQPuxHgz0wfLM8emAiPjF5nz49yJ0+g6c3vpb6BD7YeGs9MulDPnYR4b11/4Y+14aZvljF
                      Vb40M509eNhePTi4qL5AE7O71lJ8vhZ4KT5M3c29wBDUO4LBmr66Poy+/D2tPUDhnLxi4Jm+VisB
                      PuwN6b3Yx5e+YI5gvTiyJD6sOMI9AFmtvQAgMDoIDHq+iplGPhXDmD4AaPw7QCvTPQaSWD5gp1S9
                      24UpvvCcgbz4VxC+kD2VPbbAir7geDK9SCeAvln6ij7rYZA+lEeBvgyO0b3Wmhg+4BFjvbTUoD24
                      Zqa+kIznPXNeWL7AHKS9WIqDvmD9qb32fsi9Du1EvgJOXT6DYqi+wE/CO2B1ELyQjIc8WGEMvuL2
                      JD62uiW+QH/aPP5cUr5AZ4k8aLk3vtwo0b3giYm9Xi+DvpEsjz4UMYO9QKvVvI71NT6YYQy9RBW+
                      PdAG6r3BNqM+GC8mPeBPUz0DWJ4+fvFNvvicEr1gWEk9KCmpvsscFb4aQ1w+DjQwPsJaQz78up++
                      7leFvr6yL75LGT2+4PtyvhouFT5SN18+oDdyPJ/job7uBDa+C8SgPhJVZz4S/30+Y01hvvM4M76A
                      C2W92gs5PpY+Wj74kHo9yJ5OPdPfTb6goQ08gPBjPeAcET2ubqC+3J37PQEDkz6kjoC+jUWUPmCW
                      Gj42DE6+oYWpPnYkUb5o5je+zlh5vlolPz5IVBe+8DvPvYBdm74ANQG8WFmUvl9ClT5/AI6+PViG
                      PpYeyb3PL5U+xI2iPQpiQz5GTka+/O7MPeyKzz1wD3i+kHCmvLBKjDxycSU+biYxvmDyPzwQhgI+
                      LbOoPnFqiT6xdp0+WjhRPsAe3z3rSTe+8wCTvo5CFj7ocg8+RktHPsqnpr6b1mi+9NLfPcLMlb6w
                      8/W8wLdvvvZ1CD4Adgw8dtzyvTKej75Yz0C+hj5SPjIajr6SzWc+FsCivuVXnj4QDGW+oMFcvfXN
                      kz7kXN89Vt8ZPoA0R7yu54+++HwvPWA9Rb6rJos+8kBQPv58fr5s0KC+UMUgvgBT7j0s0sM9axoO
                      vgC/Fj7Q++g8vnx+PvsKpz4WSEY+fsAQvqLFbz7juo++7Z+fPuLCLj7srqi9gFsJPOVqmD6MNfy9
                      JNv6PV5ifr6+NlA+gLhGPQC4njrOA3Y+yvlGPu3qgT56iz8+OEWivqd7jr5izXU+jI3SPXzOvj09
                      aZg+A5uSvqKlgL44ZXG96AptPfb0IL4ptY8+IDpFPHije72sJak9efeHPngbeL2aPqO+AVqAPnDW
                      2r1MXKg9gAuHPBoAfz74jFS9GHVVvRhdKb1c4Yi9S5EVvjBf+TwlVps+VhoSPpj2bj1Q2xW+AAZ3
                      PGjMPb2QbZY90Az+vRgOV716I1k+8r+YvusEhj7qLxg+CAJYPRI+Zz4w+pm9QJFBPblSqj7iEoa+
                      eIkpPbDMij2mhE8+IJiQvfh+O77pYYs++LdJPbZfsb34QV69cNO0vJ5ITj5mFgC+mFBvvgqIQT56
                      VSw+3L+RvqTB8z1X9KU+GhUKPkblgr5IfDm9gBoTPAq7Nz6rspe+ePEUPQgaej1AaKA9AJy4O4Br
                      G72uUS0+0J3QPAD2cTviRg8+S16aPjgxaL2g4yY+BrevvSdRjT7a0Xw+Mm0yPjFGnD5jPh2+MmR3
                      Pkshgb7ShnI+cuk9PkB6pTyGk3w+WHgcPjBpnj1aVG8+WOARPnKhaT7LWDW+wEMiPnvNjb6mOCq+
                      ysZmPo2xkz4AeCa8Ox2bPkrEjr4mhl8+5r18Puwetb0AF9k6AC6lPEDFGb6wU4a8NsQUvqM+qD48
                      o8q91QuAPqb2BT7utVM+B82PvoACez0Dm5G+QGvQvcc7hj5Aqdy98eKiPlW0qT4yqQU+7mEhvrqP
                      ND7xWao+vuhuvjL3oL7gUAs+MHMVPloNDz77+oa+EMOzvc4zhL72RUk+gOxiO0/kmD6ga+w9ciho
                      PsuVnb7wYdo9akyqvvh5ZL4ijS8+hC2avk2vmD7AFgG9Q/2Avi5cOT5AexK+8NTlPQDu4TtSHz4+
                      gPNuPICPVrz9ioM+2nt+PgBqPT2CJRI+1fCEPrQ3iL7A/Uy+6ElXvQERhz4AiHS9fIH8vQYz0r2w
                      8tU8hD6hvaAW1L0Cm2M+ewKZPpYQKT5219m9Xtl2vsoUHz6vnpc+AB1vvP5jgb6LE4G+KrZ7PsPz
                      aL7IOgm+2zGiPlrTbj7qmSk+AKjevGDf9L3wPfm9tmYrvohSWj3s/sG9CjU+PoL2n77gOlm9j0KF
                      Po6knb6o3hC+9fOlPuolLT6UlfU9ImhXPlkAoz6G3QY+tYCnPlz5hT3U39Q9jQWjPswMkr0RlaQ+
                      dsxnvvhdSr4MWt49hHmBvUSKxj1UT889YKmavXxv873yHnc+eySlvuiSJL7Wc/m97GLyPba/Gz6g
                      ul294Hn6vYhneD0QObA9qkWXvmaXO77wD9W88wyIvgsimL6QfMo9QJ3Ju+CJPTxYOVa+/gVxPjId
                      cT73c5W+h7epvmRFjL048Xm+gAkMPAA8OTtVoYI+LiVyvogeXL4Wilu+cFyGPLTRob02GSc+ptDW
                      vUAFLT1Qs/69CHdmPSCNMD1jTQu+8M/EPazVgT0eaoe+o8M/vi89kz54lHi9bKHcvc7pWr7qOwo+
                      QAzKvWVQqT6c7Nc9lCnnPf5aB76S7V4+wEUVPjj1fr7GSEo+69UTvlDgFD5UEPs9Ky89vtQBkr5T
                      gzm+zthvvt5/Jz4A0Nw9LNqMvbk8jj7j62W+OidwPvWakj6wJle+/TukPk77Mj4odAM+DCrZvf4g
                      QL7LFYk+0CvJPWSEkr0AiPq6MGNSvkBe6ztSkDs+CPAoPSHvgD52X5W+GbWcPgCASDnZJaY+QPcG
                      PrB0Nr6g4EK9zOfWvQBHCrz4phG++KVdvvrUNj4fwqU+6MdKvUOZBL4T7aO+Whd2PmKEbj4gONC9
                      mId6vgXTlz681bU9po1KPthWHT3gNwQ+OPaBvgDwWz10HKw90BQfvj7CNb4Adp2786dMvrtvpr4A
                      eBO71qVFvjuUlL4BYaU+NvJ0vjvhRb7G5em9QL2HPE+rgr4Aq+m644ZQvjnLmz56pJm+q4qSvoBD
                      fz1p1qU+gKg8PMujRr7pY6U+UAWovto8Tz7uNqS+AM+0OusZf75mPmk+gBP0vTbePb6l16k+UmQv
                      PuyEnD2prYU+zK2zPVh9nb6O5yU+yMIHPnDInT2aQQ4+lX+jPso8OD6gZAS9IFt/vrBb47xhuJI+
                      JuIfPly2/z1mYH6+ZpoDPrykq716gDM+Wt5cPoBqzz2ijjo+wmEQPpblUb7GPkU+xht+PlUwiz7M
                      ydI93Lu3PSwynb7nFZw+mHUBvh7eWr4xl4A+uYugPkoYhr7Bp5M+hpuXviPDkD6K+UY+8/wBvrgy
                      Gb1uUhe+oS2nPuwBvz0GVnI+qPkkvUlJiD7+UJa+HuYIvmEfhz6gNRc9Vh1Lvqr9Lz6KnnY+bAaJ
                      vjg1AT1vP4e+wNcvvrjTQj3HYJW+UHO4vAVKgD6gIVA8uAA6PezZoz06wBI+L7OXvr4HYD6+/hW+
                      XkWZvj5hn76MZbC9wn44PqhVMT1wAIM8rM2IvQDEYb3Ybje+6L9vPQC1Gz4iMkw+0UWDPgZl0r0w
                      48+8lpxJPqt+cr5AWLq8LphwPmN8e75gGRo9GltePtyuzD3qaW0+VvM3vsJokL4ACG06ZuBZPhhr
                      dr59Y6A+aFlvvdmEqD4Qu7c8AgCCvvg0Rr1+bFG+uqY1PshvE71iJlM++gZ5PjBx4Dy4lYq+ynBW
                      PpDJwb061hA+YO6iPcjIZb4y23o+QjNXPpxRob3bmY8+qHQJvQDlzb112I4+SqNrPjsVE746eW4+
                      YLEWvKb0BD4wya49PxGIPrV7gj4YVHO+oFE0PaaMFj6Ae8i8KERYvbAyx72shr69+DU/vYhbAD62
                      rVG+YNw4viiNPr6A+uI8AApOvCY5uL2oOz+9uvN8PnbsuL0AlHi+wVGKPig4Vr4mTwq+4DtSvkjv
                      az2A0GK8zgyXvpFokD4A4Ms6LtlHPuL9Yj4QP8y8MhOSvmBu9j2e0XG+uJ06vWzxm76TZ0q+AJDl
                      Oexx5D1xJIo+irYnPhDz4jyAlC+8CBZAPVQm4D0UOZS9ppgXvqTpxz0rg1++fIX3PQ7NWr7yFWI+
                      IDsRvvj6Eb5SK6O++DVcPX4Tgb78XfW927iRvgiuTb7QO5M9Y2SDvhi7WL12whA+SAYivmbcGz7D
                      i4U+gfenPhw87T1VyI4+69yCPvqEOD5MArk9XG2/PaZgLz4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg5MjQxNnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1Mjg5MjQxNnEBYS5kAAAAAAAAAHXdhD5Xpqg+IBsVvmzKnT1whr2964ZGvsATwTvOagE+
                      JVKiPrrqZz69GpU+XNSyvQUOgT68w589qCgNPeCDTr5gW3s8w/FdvkCyyDuspOk9sgkyPtu+Fr4o
                      /3g9HOudvRuwir7gTVm9gOnBPQCTqjxnTYq+DMehPanemD5omgC+MFSzPVo1cj5UZYE94KANPZPy
                      TL4omHe91BDzPRaUUr5yajI+vM2LvVsbqr6YKUQ9hWWZPmZQJD4e+j8+5i8CPvTYmD1wEhI+kA17
                      vvuhf779d5M+2tJsPnCUDr7KRj8+UYyDPs0Iiz7sHPE9/v4TPtBZGr5VTJc+piVCvvUYgz6mSBW+
                      EBO/PDJ4Wj6YGRw9E3mpPn+Wob6Kmz8++uQuPur4cD5Skno+uCmRviAQfD24WUs9s+FfvsOkR77S
                      DGs+UGeCvh41Dz7N3JE+PnBJPv46b76CEjs+W6KGvqzAs72VRaA+2+9qvnDlnryahp++rB70PQBE
                      wbn0dqA9mnQ2PpzDtj3DBHS+mLUdPQ7oLj4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg5MjQ5NnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxNTI4OTI0OTZxAWEuECcAAAAAAAAXfHu9UKRRvQJmEz22v6q9e9OLPctvyj2OQ1I98qAH
                      PbEXxT1mIFA99cKoPYRU8DwwHW28UDL3u6vEjT2ACXE8KAy1vG4hhr0m5G49ov5BPehEWzxwc228
                      YOWiO/IITD0KI289qjgQPdhzhry0r9M83j6dvQBWNDnUvAW95l4WvWGTkD1sh7C8wJkDvAIbET3M
                      hvE8aPe8PDOst72ppb49cBYFPGObnD039oU9eIufPDQzDL2bn6M94A+HvZRb8jwNpKe9G4C3vTfV
                      wb3Efew8p70bvYFUkj1U/e885+dTvTshv72N3Yq9VYynvW3yuz3O+ZC9qCCjPJh1Bbz0p7y8BgF4
                      PepDcb0EbeM8eEnVvPR/5rz3QmS90FsOPOwdxTw3hbE9ALY7u8DfHjwQPAy9jmMKPc2/LL1giyG9
                      KeSmPTP8Wr1g3qy89xUxvU2NT73QvHO9GeqYPWpHbT0RAqo90E+4O6DXcb172Ji9gOtOPGnMjD1f
                      KsE9mPcBPNp8kL1u+109V8twvUlMkz3TbKO9GAmuveCwC72izys9GROFPYKDgb1aqVa9oGX6uwbL
                      Ez1DIDe9N/q+PTtDnr3BqLU9DRG7PQClHTygo2G7zdvKvWA9HTtdQrG9QMA2O1B+lL16F1e9wyCw
                      veAK67wHT0S9A96dvZo1TD1X70S9BHT4PC5cmL2aAj69iYXLPQGAmz2xWp89puCUvYzZ3zxaYsG9
                      +AyGPOhEfjwA7YM5yg0iPascwL0Y6RM8LLufPE4PMz3gEto7oXenPZ1TM738z988oASruxZuaj0u
                      BZ29wDJPO9iBq71th5+9MKYHvdGotj2feZM92Co7vDSvjTxdbLc9gCO7OpDqKLzgFq68CiABvdaD
                      RT1HYk29nE8Nvcgew7wwmie8ALwIOXPabb1iQXQ9yYGjPSIAwr1U4Z686n+zvRlrjz2A2JW9ODOC
                      PBSp67wApgM8c1q2PYpiLT1dc6g9NmFjPdC8B710Dwq9YVi0PdBfor2q9IG9KGANPNZ/RT18geM8
                      oCMMO5BmVLyaLBE9fdTFPRIhh73O35K9ntZqPReRJL2tlbu93Ve3vRf8Kr3YR3M8mKgMPBqWt70/
                      XsG984JyvdB80rsQt1Q8OHC2vIDcn7wNuJy9fhGrvcjpxjxTKDO9YLv0u65NpL0VNI495zW6PcBu
                      oLynKHu9VolyPSCbDL061j09uV2JPQOCmj3Vo8K9eEqpvJgkbLyoCpi9QVaJPbC5d7wgB4a8ZlZf
                      PdrxDL0crew8LXWLvSXEi72bDK69ZikBvWnvlz2w31q8gBpLusygx7zE9tg8uEaNvXPRbL1a5UE9
                      wLteveUiyD3xCqI9MFe6O6O+T70bv7g9b4ChPfJYw72xpKc9m0/CvS8Ov73QVPe7DDzbPJ/hxr0T
                      d7g9Xjt7Pdacbj3ybBk90KdEPNI0NT0cPPA8aoVwPUItDj0XMiq9cCoqPCvhoz0l+aC9appmPdaE
                      IT2wTqO9sXKWPbcakT20RAO9NjKdveaaOz360li97B6RPMJKMD0eiyo99+k8vRm8nz37CJe9NfaC
                      PZ+gs72ySCw94vTBvZT0A72tmFi9Ch0Ovfr3SL2WsQw9wxMmvYmVrz2DtG29c5VUvYMMnD2nOKE9
                      LDPJvOlVuz1wAVe8R1u3vexn5TxA78U6XcM0vUxfgLx2L6m9r1C0vdLQID16I5e9kVWrPdirq7zi
                      8ik9wxSnvejEw7yReYo9CUykPeNyar3wqXK9n4m0PRhXirzvJrQ9+bGRPSrEcb00RuQ8wFdvvLzK
                      Fr11Usm9MAEovcQO5jy9xJo9+u9CvUcduL2qFVG9jh6AvfEzuj2KRC49xdOzPUAZUTt4cJu8EtkE
                      PYb0Pj3Me+e84oUcPSgAmDyQ6gi8YNq2PNscrb0LiMO92CAePOMTsD3xQYY9g+/APY5EPz3z1LC9
                      LJnpPFkfjj3A5K262m9sPcBZUL0AEaM8gG22u472OD2IWIK84jEcPQ7eXD0yCTA9mDe4vGMOXr2g
                      uss7U+RWvVmBkj2Ysa68lB+KvEDdQjs/gYg9aCFoPDc1nT2iJbm9g/imPXr4OT0wBFC99mF5PdMq
                      sb1NB6W9aF8cvEydGL1wmmA8KHOOvVMHtr0hz4I9WjEPvQW3hD0wR7M7DituPY6wOD0g7oS7yvMl
                      vaDSfrv6Go69h++uPbJRRj0a8XC9/RiMPd2lpj1VYam9iL6RvAJZx72AUlS6klwQPcTO7TzsS768
                      IXy0Pekypj0LL649GvmwvQCqt7vShzU9gAJ7ugAArTnCul09asFFvQDJZLrh/bQ9GaeUPQDmrbpQ
                      Tai7P+qLPY5alr2s6rY87K3APGpQr71uOou990OpPTSGnTzhU5E9162xPUOUKL2GeGA91jafvYsE
                      w72iqg09Nhs2PTTmzrzYelO8wBUVPKBBorw+D109SQWoPWLZWj0aVLi9IzHFvTCvUzxsH4q96Hua
                      vRJjZz0mRR494Eb2O3DIKr0APTQ7aZ+7PVrbWj3QHha8bZemvUiFvzzOjkI9GV2JPdOZeb1BKLI9
                      GHKHvX4qST0jl6k9O9GgvdKqTz1Q1TK85NLqPNTg3Lwc8fY8kLMYvR+qpz1zWXS90GcDvCBtyDyC
                      ym09eeGYPdRg/rwbBri9qMhuvF2EP71A+xO88OFvvbcCT73KrRo92vFQvXPJur2gG3+7c42yvaL7
                      ir1AtRy7xsiXvei0f7xP1se95+rJPWwTuzw64h69SL+6PDoVdb2RsZY9vdJUvb09HL3xh789AOxP
                      PFxfDb3MMok8P5HCPYB+9ztUga48IlZZPXtKwb0PSa8970nLPbiap7wo/Em84o2Xvbg6srxUYPa8
                      fZk3vXgWn72LM529EGRwPDogGr0rYJc90yGjPQArtDwLMsm9oUWUPa0ivD1klOg84LQ9vfSX7jxJ
                      rrw9kDOPvUyxmbzQN/A72F7MPNRVjbzFG4y94L9lvRmHsz2jQaU92JhfPCGywT1/ZqM9Xb6dPahv
                      QjyYtsO8opW4vfYmBb04G7W9EB80vcDJIjwoEBc8zCy+PMQoir0yDEo9e4aTPSYnBj2mYQ89oN6m
                      PCBAhztoMry8U5dsvdD9Ab3q+1e9ExM2vU3CzD3AWfe8UoBKPSL5WD0j/KI9PM3+PFidcrxpIck9
                      OZqsPZjOczwoupw8kp4XPZxMAb3WHSo92xqhvd5Vhb3gxyW9YMaaO3CSG73AdpO9DHC4PIBRh717
                      rpA94bKdPRZpg72dIMa9+/aFPXjSob0gN7q8Ma6GPWLNVz0YV6G8kLrLvTRFgryMfIy90yTCPdis
                      zrwAHts6bCGbPMzgsTxKEsO9gNVbPMcfUb2+lT09YEGzvZSbFb2QPHe9MDjPu9gItDw+zVQ9p6q6
                      vW1/nz1fBcU92JTUvLT9gDyqy0Y9MJyRu9qAj70QUUc8zJ6TPCxtEr2/J669utgnvXo/pb09vyO9
                      12ErvVpoNz38QAu93b+HPfHNwj2WTWg9AzS7vftvxr1465S8qAukvJgqijzfdLo9klO3vaAxib22
                      Dng94vMFPZgwo70AOgS9pduQvZJheD0SPAo9kHFbvfl1xj0rM6I90ko7PQtnrj294bc9GO23vcya
                      9Lwfmss9vZSzPf7pEz1MTYO8Tbq2vaKwhL23VGS93emmPXewuT2xmIM9vmt3PVl/oj0wZJq7rsBk
                      PaBYwjsqdjA9SDTwvJHFjT2gVs686FoXPLhbvDxYinI85DMIvZTg2jwkyvQ81xdJvUhOg7z4qYM8
                      x9c+veQP5zxSUIm9YUTJPeOXx73FSMm9Yti9vQl+mD3Q79S7DD7ZPGGmyj2g0pC8AJSmOi8KkT1Q
                      eUG9VIjcPJodOL2Ms6S8YGHaO1MXG70+VFM96tCsvefkwz1qh069MN/JuzYTg716bZ69IHeKO/0T
                      jr2qfnQ9gCaRvF6PCD0YIoW8wn6RvWjmir0VlaQ9isZzPYexPb1Y/728p6xcvbO+eb1oxVY82T7E
                      PeC3b73gv987ICpHvcq/JD3nOmG9MEh+vJSIorxNoxq9yzaTPc8cuj2YITw8kze4PZgFojwtsow9
                      c3JnvSkAhD1W4AK9g0eVvZhLaLzLCoI9IP6FvFRysTx3CpQ9fWmPvcD0ezxN/4I9kpUsPdgHSTzG
                      Qo29uiBYPRMVpz1uSXY9AoQ5PTobOj1q9lY9wNqrvML6Xz3iZEo9TQ5+vdpRNr0qpWm9yt5TvS5M
                      eD1rUJi9Op5KvQuKmT2kDto8YEmVu1LEWj3wpBA8Td5avcyqgL0iIgM9F1KjPfZsRT0TJKY9tGPJ
                      PFjik71ACRe8kwS8vRye+zzQakM8eppCvSeGqD2Ba4Q9gFv5OqYwbT3Q6GO9wP6sOgBWvbtNmGW9
                      cE05vLouEL3msR49jjITPSHlnT0o82w88utYPSQ52TzuhiA92omivV8Cx71yCgg92KZsPKDqqDyu
                      Wys9oPAgOyxMo7zx4IY9hySVPcvnxT2iE5S96oIxvYk5hz10tAu9Kn59vVUQlb2mlBE9jDKzPCDw
                      0ry7xqc9YA+RO6AY6btguaq9cA4LvL/Rgj37h7w9MLIFvYKOBD2gaBs7fr04PWJpPz0Ngrk9IF/D
                      vWIEu70hwsk9WJS5vTAxe72l7cg9uxajvS0BWr3N2WS90fWAPZUHpb34isc8gDbwvAa+bz2yIB89
                      hlQKvb/qur1gM6Y80F8ovagmFzxoSHm8FjKZvQiG7byENwi9KJlfPBqnQj1QGSg8TQqUPWjaLzyL
                      ArW9PU/EPUANT70icQk9gxuePTEfuT2ickE9JttPPcp0a73dc8i9WJO7vAx6BL1K41g9yOGZvaDz
                      rrsAwEu64F/MO2BOIL0guby8l5nIPS0kPL3AbbA8/c+VvZiVxjzOpxc9ymm0vcltrj3ysRE9dpZe
                      PfQvib2O3n49K/2TvVT0xzxoeJ29gF0xOpAQBr3sU+g83DHuPOiSZ7wMQRe9r2m0vTCUZL1wZ008
                      2D0MvKswyb3YSDM8rZ+APXBgNr2WHkQ9LZe3vT4TbT1L57U9eIKUvbrAaz2XVSy9P76XPb1gyj2y
                      NLq9P9izPaAoOb3W94y9/qkZPd9YvL2Pqog9sPWLvZEqrz0+bws9kuqVvRgNbrw5D649slJFPVfb
                      wD1uYik9F1WtPShU+LyM1MA8GgPLvc02wj1UGRC94W2CPdUvgj0oc9K8XwGBPaDQprwDQii94HKF
                      PNIMOD06m2u9FSGUPVVCmL053II9qlRIPfIZYT0APxI8RZrJPcx2lTz9tiu9+o9BPetbkr3zgFS9
                      BA/lPCjmbLwA4Au5rU6UPbZ3dz1QrYe7dzmtPY3Pij2qF8y9m1q8PWPSRb2ucRQ995yDPfKClr0A
                      bKI8Xf22PZjoqLyZb6g9QjYiPTigg7wQkxA89HWdPBdJpT1CsjU9WXnGPXN5gz0qW8y96Df3vGCq
                      v7uuJ4i9wCdKO1JEXj0AJmC7ZQCJPQFlhD3mHDI99u5CPQDbrDwwfAU8SKK7PIfVlD3S20M9CPLG
                      vfg1nrzVPZO96GBXvIUwjj02zAa9AJfSOxunkb2YL529CAaDvOB8v7y2+Fg9mHgOPK1TKL3Hf6A9
                      GhkWPeb6aD0zCcg9AODbOcpBBL3CdLa9x267PXB7O7xHcsA9MxQmvRb+kL14Tr484dy/PY/Ouz3d
                      Tmu9Nfe9vW56Uj3iMCc9IeGnPYyN8jwylom9uFDtvLNQgj2UR8E8aH6Wve34lD1tbbq901tnvSAI
                      kruxtYI9HFSCvdook71gfi+9yuMVvQYZGT2nhmy9vdSPPVOruz1AOrM8GBD4vP3HaL0Axtc7H06L
                      Pfucyb3CSL29TOLTvJS4krzoDDE807+yPd0Xpb0ANqk7QUSzPYwVxDysp4K9wEACPIBlnboRDMM9
                      4pAiPekOjj2vhYQ9zgQJPf04uL1gCSK9mrcoPXjx07xASJg8J2y4vXBAZDxg9Qu7/T5ZvdMBk72s
                      mLG86IwSvECyAb19E6M9AFhEuyg7vb0AiPA6AE2cvIUeor2AwdS7UJxivCHzlT2sudY8sA2eu/ul
                      vL0fSK29rk5TPbgZ3bxSXZ69AIggOgCly7nX7KA9GN5ivENle70l+LM9bETLPID78bq75be9LpKV
                      vQgbtLzA9rU6dQerPVA/KTyWl0Q9EjgdPfrJGD2UqAu9wiIhPUPxO72aCho9YLYMuyACzrsqWbW9
                      gFraO8Apzbx1Fpm96BXZvGjoiTxsXJ48QJWUvT2Qpr2JQsI9vbKGPRmhhz1GpIq99VOnPUypsLyL
                      ZpW9/U04vcGxtD2GexE9qJiPvciDgbyCVGg9AwGTPT6Rg73GnQ49Ka6HPcza57zAMAU8K/ydvZBJ
                      Hb1ABXO9BYbEvclatj26l6G9tm1bPQAi2bp8dAW9s2oqvVNnjT3weQ69Y+hOvVqgDL0vz8k9sbWP
                      Paxcijw4Ebi9vu1GPe6zbD2UcqW8mQiQPXLdCD3N5cW9KTiePZGZkj1sS4e9G1eLPRpSLL0gQOC7
                      uOeqPOgUBrzoRdC8mK9jPL4IaT39gYu9A9+yvTfywr2QwcS9zEaOPAUzr71gPzk7K42UvRoHWz2g
                      C2A7IxVwvWA2tr2EttE8XY0zvcDduzzVdZY9DVtkvdCt8bvhEKE9Q2sgvVT9rzz2rFQ97ZifPSCl
                      0LtaGzc9QCJBvE9swb2rE6i9UtOLvTTVgrw22HU9z5uFPQ7NED1oarm8Mhapvb+inz3EsuE83nwx
                      PQvhoL3uw3Q9sQyqPTrqdz2r8Ic9Pf5DvX4zmL1Fzro9gwO8vXiZkTxsZfe8f6zCPRh7LLy60kA9
                      oiesvcrkRD3oa8k8kznBvZwCCL1CVDc9G+6dvWBxKr2GEgY92JlwvJQYoTwAmRk8AhvFvWjwaTxG
                      UwA9WM4TPGM9d70sSLO8IGPeuwDqCTw2YXs9HcGuvRPay73Xqp49oFZkvdIrTT19i029anIAPche
                      vr1YROi8wHlqvXCSU7xPFL69ls2NvVDvur0tWJe91F+tvIDevzvvXrk9wn+SvQ7Iej3jq1+9g0PF
                      PYDJrL3zL569KLClvDjFgzxY8QG8kOvHvax2/LxguYu8OOmkvPppo70pH8k9C3OevaPnsr18Bug8
                      mtOxvVIBaD0sIY88MmdPPY4PDT0mGpa9w4RBvWWZw73Qzks8Vv4JPdpxfr2oG2W8Nfq6vehsDDy8
                      AOY8jySwPTgrobwgTZQ7AMWnObKJBz0yViM9veduvbZXg72xroM9tR/KvXDadL1+HYa9rPDnPBiu
                      ELxfI7C9wFVzvPMmnz1ai3098qhDPTgWjL1MnvQ8JOHfPFBx0Tsx+rQ9UNl7PFs6jz3Q6zy8M2fA
                      PWaJbT01Iaa9yPKIvbB03ruL6qQ9WLBvvLPykT08agu9ZZ6NPRhdZbybpMs98sAYPQgtpL25aIs9
                      zeJ1veg2ujyzDyG9G8efvVnAwj0z47w90C3IO5JdMD0lI4G90JD4uyA+Wr39yp49SdCnPSPqlz3B
                      h8I97MLFPGrvXT2h7Mo9whuAvcNfyL2ZTo49+v6XvWo6fD0L1r29wC15vUNJmL1CMGY9uFaUPM6J
                      XT2WPjA9qPuCvUCLIrzYMgY8SzHJvVCIRzx6MCi95t5pPRi0mjymu6S9AMQ5vWxKyjyu/zE9sHRb
                      vM5YCT0AB5q8aBcrvIqlWr36Yk69qHWxvYfGUb0iCDw9nsisvdAyLr2N1mG94schPaP7u72DT129
                      Hbu/ve3MM701wKW9IHTnO94KNT3w9Sy8qOOuPCJSXz2y8ms92xiPvdLPCT3qhik9ULJtvGLfJD3A
                      1vg6D4GWPR3JIb30gJW8ULhWvB1NOb20ucq8iJbDvTvNkD29bIO98AqmvXKIVT2yF1Y92BA4PDqV
                      er0AFsk5k2BtvQuVwj0XUXe9AGwAuwAAu7ssUsM8qOoHvEQE8jy4Bpo8p4kfvc5FDD21/rQ9lPrI
                      PJIBFj2cdA29KsZ5PbrhGD0/gp09RKrOPDacSj0HdYQ9dhh4PXjEvrxN5Y+9gJnJPMB1Drt737S9
                      WDB1POMLgj1o7a+8Fb6wPUz7/rwrca29vwKHPWE3oT2QZEu9oCpZvfl7xz1A5Ue8Kci1PaBCHb1w
                      7L69gPGVOnKnIT3KaB89urfLveVvlb2gmF67cs8mPR1kwz0oy3s8WCcgPCHmvT14isU8IOSOPPiY
                      rr0If9u8HWy/vcH6ij1VFrA9jJLyPNcpfr3nMMI98WWEPRqWfz2Scno9E1B8vXMob71RYp89jPSy
                      PHOATb2LmMq96CUQvC6uIj3jEGG9KBc/vEZBBb0osmq8a/uUPaWbsL0DqB290geTvRgMvDx7XYc9
                      HUMaveje+bxmtQg9U9lJvRfxvb3JAqs9kUnCPfucjj1x/JU9QjpkPcotnb2oTFM8gROSPbKdcT39
                      BRu9QHcdO8D9Q7tDvH+9AP4hvAcnSb2wg+I7nniXvVrnSL2I3aK8jNPQvACJiDzDkiq9WBQRvENZ
                      Mb1tIKc9oP+dvKJFrL3nfke9R1WrPQCS8TsuwSU9f7jMPWAhlbscb+w8BF7oPD0Mhr0CZG09YmUa
                      PYMgeb2EhYe9YFhFu1ZkbD3C7SE9WLwBPLcjYr0AzuI5IeWUPUx3yzzZCaM9zZmuPYBn/7xw23M8
                      2ziQvXGMkz35O7A9CtgkPZdTsb3wAwW8iiJlvUBRaLsVzo8982yOvY3MgT0odNK8oK/+vDNKqD3g
                      TRO9EcOJPTjWjbw0qLK8zVetvQk6mD0VEIg9GncqPXlTgD3RPbI9ATmAPapaHr2t36K9TEXOPMI4
                      g72A0YQ8nEX8PMiyvLyqVh894K29O4uouj0w0bo7TCu3PCbVFr2Ee/081/9RvU17sj3H748998Mx
                      vZIGFT0QtDE8xw+BPfqbB70EsuQ8QEJhvf1ISL0QDGi9AC21vCEpjD18Ruk8rNOdPDdFxb1M++u8
                      7ekavWB+2DuZwII97llqPeIkeT3GyG496OPEvaSX9TyYbtW8UzDBPckzsj1g5Aq9wuY1PWDAjjss
                      H7i8UZ60PQCMRzmtMZU94xptvSKCvr3Yd1G8iffCPZDYEL3XcEG9oMhXu7RvE71z2X+9QIVKPC1L
                      aL2d/bi9shkZPW5Xn71eLkc9cu4zPU8vyT3yUYq97PH5PBo0Iz18swq9+cKkPcBcLrt9tJM9tfWF
                      PYqlxL1AEfi8QHP1OuKWOT02dVU9TxCpPcQx3zxakpa9SD3+vOemK72Lxpy94O2Ivbdplj0oLmU8
                      YBUSu8rmRL3QIFW9leOOvarEyr2edIy9xrYqPfcsfL0j0DC9JBQFvZk/iD2EiPM83yeoPbKEET2f
                      SoA9k4xPvWGGjD1oSJE8FDGcvH7ldT2wbUI8oJCtuzrjHT3tAJa9QCEOvbImNT3OCwU9OliBvWI3
                      ob1+fDQ9jkUSPat6qD0QZZq9XU9KvaFLxT341cu8NFKwvLxbCL27k5A9c8ySPeoOj73wGgg8UM8q
                      vECeerwXmCe9AsJlPafyNb0AQ/87lYLKvRhHkzzFTKW9apBKvSYLaD1K+UQ92Oh+PCjqkr191n29
                      BGXuPBaTRj2KfTG9UORHvBBrZTwW/3A9Fo1dPaqBj70pI4s98uCkvSiln72lW6M9EP93vU5dp72C
                      oHY9VgaavYNPr73aEQY9l8dSvTqEK72I76e87aCDvUDErDx00bM8k/fFvdN3hT1T0sQ9H4eyvQBQ
                      BTzqArG9uG7MvZcwoD3+hoy90DEsPPvjkr14F5E8bAWDvJI7DD0nnD29xCDoPGdqe71A0uW8ANyy
                      u27KRT1A4Te8xfHLvfbDIT16oVu9AYONPbDZA7zytiw92u9vPe/fvL11HK09jHiLvaDGKLvTfL89
                      HJ/cPPFZrz0xlL89iaaNPWhTGDy5BYo9dYmfPQdBy70AJMA8Jwt1vYkgkj3pNok9c7CYvR34pL2v
                      yK+9AN+VPDhg/LwZErc9HTyPvY1tjL3iAkA9JW3GPXQHkjyDvqe9+ksovf33l711ZK49Ud+kPfXZ
                      o72yQWc9Po5EPZCuADw0dMK8wvtVPZByCjx95LS9dezDPbWhy72l4Zk9wGgGPJi2pb1i5jI9kSOW
                      Pah/VTyVebE94J70vOrLFT0k5fE8KarEParkfr3avGq9ADq0PBkdyD1b5qY9QQXKPQMHNb1A5Cq9
                      2EjEvLSDhLx+4Gw9qgNVPaW4rL2gzoO9MZbHPdAaLr20wc08YN6cPJjVj71Q4cG7G3mwvcDrKLyp
                      s7A9I4W0vfI2Uj1Jao49GgsTPfbddT0apyC9gFGAOwjLxjwsS/C8wPUHu1JFpL0YLFc8gJ0FPIgN
                      sDwavD69MHspPCiQib3BroQ9+n9mvb3UK72j/Yk9CHugPHUXwb32l4C9QDw4u4Dyn71EFYS93y2q
                      PVTc27zpmK49DEMAvW11sL1QJM873AAFvUPNR72z37C9E//AvY6zPj0M26889aKcPXRF7TwQUrG9
                      iZGKPfDOFzwfXqQ9YHuCvZ44pr2hDI89bCrEPNKDfD3p3so9KotTvQqaIb3AIVu7wJNBvOnKvj2g
                      ymG9eBSBPAX2y71Ngze9Qz61PYKbMT3YwAo8squevSI7bj0AUJi5If6ePSOxx72op2C8QUC0Paax
                      mr3gVpO70FjYO+XguT3Xt3a9iKDXvDB8jLswQ4O7RDUIvaDcAbvLAcE9k4S9vYWBlb2w/MS7alY9
                      vcCY4LyH0VC93bKFPUgijL3QgVS8KMIDPIDdADzCkAg9x0MovdS95ryemw89ho0oPUAYULvG4Qo9
                      UA9WvKDG7TvI8YG8EiElPSLwSD2sTru80KHCOwlvoD2zxnS9jDyRvEKAWj0th3O9FcyVPdGatT0L
                      lrq9/Z85vWwxhzxUxoo8Cg43vfItFz1gBRU7RzONPdB37bsGan49jbqWvc+mpz2ocgM8BFoMvci/
                      r71DU7S9HEqIvU1OZr3L3r+9fMbNPG2riz3TNSq9gglLPb72bj0AIYA7gPmiOivsrD0pipM9x0i8
                      Pc/igT0S5lg9KwfGvW+Kqj1qdnI9G5a8PWwIlry96r89EIxtPDHPmz2oXcs8BoajveLyfj1TCa69
                      aIU0vE1ZQb3tuHi96jenvWYYF70AC7Y5zK+3vA6fYz2Q/TI8KqcqvaBBvjub2Mu94jUpPaOEsL3P
                      zLu9t0VwvY3lI70Us+K8uFfEPFehvr2YSda8NLTAPCx02ryZbcw9XbqlPRIgfz0t01W9Fmt1PYxD
                      jLyo2fG898mBPWSR7TxAl4g8AElrPPqHTr212aO9QI61vXJByr3BTrc9wI7juvaAZz3HL5A9wEXQ
                      vNYcEL2Qw028xA2GvR0pxD36DWs9evYTPVDu/zvg5M47dOefvP8Suz3rNbM9f0G2PRYJXD0oMyS8
                      MBCEO6zssLxzgbc9haGEPW8nqj0zs0O9T7uDPck2vz344YS8BdSFvT+nzD26ZiW9WP9evAGynT0k
                      OvU8reuwPfeATr2Pu8Y9c2LLvXSzmbwFcrc9FHnovITJ5jwrm4+96sh4vZDnw72ypLu926WCPYOA
                      jD0QF1e9st+pvYLgfD1P58G914mGPVCKMzxXTT2914atvVAHmjvC6ba9KE5ovKdUeb0Vqci9uVKb
                      PcD8rTxj/J89BfKGPb0fMr3CVIm9hzEmvfXcqr074LK9WlpKPVDvtrvjKCm9YlhdPeOAU73Itpw8
                      st9BPTNUmL1wFmW8oE7DPEAgU72S0VI9YHGFvCaaPD1loJu9OC2KPBdmv70YO3888f2oPSCTnLyg
                      tOM7EC4qvIzjwLzZ8bA9UOSPvfm2jD1OOSE960W6vVH4sD0RjII9xDntPGHmjT2sUIE8mF4tvJAO
                      Kr2Uu7s8ZpBTPTXKmr2g5Zg8YjxcPfD5STzNpL29Hd40vaDLT7tYWJy9EL9qvDOluj1Y+Fq84upL
                      PXTs27zYM7Q8gF0KOppYXb0dwVe9wKepvfYqez23uR+9YkFFPX0oIr2TGoU9jk6gvfZrWT2B9qk9
                      MJwwvT8fsz3AQka7qi10vTQ+vrzT42m9wC2oPHA+KTwAvJW6VxTLPamNrT2W5HM9JKcRvZ1YcL24
                      8au8KvC0vSBwKL0yrUE9F88uvTXjyj1gVp48ziZ4PXaaKD0qsHs9aV+RPQacUT1Sura9qFs+PBD4
                      J71Kubq9cnaMvfDJLLw2DhQ9QNBcvPMCpr0wnme8YsF2PQDPoTttjli9khUhPdhyoLwAoo07NbaX
                      vSBKqb3qZCq9hRGMPbxEiL1+YGs9VCn4PEkLpz0dlji9gAaoOtD1S7z6bjc9oaOiPZ5iHz04GpY8
                      GPO9PMAcGLyAAKO7lO3JPNRz17walRG9xhVbPc+DyD163Cm9+q49vURk7zzjkn+9oHbivG62ET3W
                      zIq9d5o7vTdnO707JKe9ILDluzFpxj3t+sI9KPIYvKq3Mb2BAY09pda7vQBMMzywGlE8oB2zu+lm
                      pD2Amfy8VsynvaydC7062k492cnDPdRLgr1VYMC96dDHPW0WT71AxgA7Wr5JPcPEtD36/AQ9zQJs
                      vfP5vr2HzK69P3K3PVcDqT1/npI9IOiDvIv0qD2Al9s7NsSavYrubT0SgLe9ciB6PfF9rT3wgCW9
                      FMOOPGjUxr04ccG8PCDwPHL6Mz3RKss9ACA5OeRX/DwUIoa8B3q3PQBpebzweB28UHw+PCr7ZT3A
                      YLm6MJLPu0KgET0StUo9bFDjvOxI/Ly1KI098Z/GPaanHT0zTUq9apUoPcyo4LxQJEm8urchPVIt
                      lb1oEjG8bA+3vCwphTyccRi9uqaUvQM9H73qj1G9TMXlvKCw9ryq6hY9ErkAPVhLb7yCP4K9xPbw
                      PDrZr72aGWK9p1Nfvbvvoz3e0J29liYAPQatCr3INLO8YLRRO4aocT3dxn69S+yHPWO3hz3dLzi9
                      1cOcPUDElTzYqp082vhePcDYZDzwgRw8kCV0PDgIsr3gkRi9Cog5vZJPBD1QwIa7mJQhPLIQKT27
                      Spu9NJMNvcbGPj13dcI96EwaPM1TJL02kRw9QOhcPHnIkz0ghbo85yEhvcwxhbywWBK8qRucPam6
                      uj1JwIM9MLPlu+o8r717U709qZKVPUChwL2AiPq6GEswvDWIkr1geEU7in9bvVJgSz1CDEk9A0Re
                      vX3sT700UbM8CnArve9hvT2aiZy9oE4RvQ2XP73hI7Y9k7COPewH+TzjqYw9IzzGvddfuT0Yv608
                      v1qbPaplu70Buck9ilkqvcfrsb2aw3G9fV+3PbY8jr2xt5g9YV6dPeUXo70OnA89GtMBPagnbzyd
                      rEG9DBTHPB8ynj0km9I8fdjBPejUXrwgsxS9cnlYPRj9EbxhJ7U9SUmOPbTZiL35/ss905FcvSdg
                      bL2O6lo9io5HPeCZvDvQ3qy7r2OCPWNzlT1TAXW9sCtevOZmlr321E09KuksPVw59jwz6B69ajlW
                      vZuWl72r7MI9t7CgPUJEVz0mGaa9xKvdPJHXtj3qx3O9JhcKPWzQobxqmJa9QPfEvP4kTz3lYZM9
                      M68vvS2ktr3o0Xm8sBo2vIBqwTzo56U8aZawPeBy07uqcQw9xhWKvYWLlz0nxEi9Xey6vX0rrT23
                      pJk94KHTuwBmgLvA+i67kuN0PQS15DwRFb09SEGvPHLNVT0na7U9Gx6ZvfQo/jwAVWu82XPIPdrD
                      p71snty8qEt9PBoYeD04dei8zbazPRMvUb3pv6w9+x3GPcA7PTxYBcC8vZE1vTCs3Dtis4W9XQB6
                      vcn6nj1MhO08YLsnO2CZOb2aTjK9MLPOuyoPeT1O9mQ9ICGQvC+asD3IYN+880d6vec/ML0gdMq7
                      gBElva61YT3+5YW9X52dPSConrwSJMy9p5OnPYKqaj0pOY49G7GcPcx2u7zySRQ90SiiPVHBmD1x
                      46k94kNqPeZaEz1gmtw7I/GzvV9Juj0GiYe9sEezu/NCyD3aDnI9lTO9vZapDL24Lp88ck6ovcyD
                      Cr2IxJK82D1KPM6JKz3vysg9YueTvcyjnbw0YOk8ApBqPYB+QL1QOQO9373FPcw06TwQW1w8s2F4
                      vSgd87zUn8e8OudmvXM2fr1QQgM84ETsu9ENjT2yByg9sQWnPaAnGrtvcLk93pWdvVW6kr0YSDc8
                      BdGXPfAUxL3Gcm09yJaevbD4qju4BJy9w0U4vTwchL3AnJG8yA67vZikDTx7BbO90JohvAJ7Uz1Y
                      LrC8iM6Ovce1KL0Cpoa9iFyhvYXVyj18DIa9uwGsPbqlED2sMJk8SCC7vdpQYD1W4G09ai9BPYLF
                      Cz31x5o9y8qDPQhpsbzZv789kHMKvIIhVj1oQMe9GWSNPaCg5juwOye9AJvKuzeKsj3sS8E8rsdJ
                      PaDevzw/2Ma9yIyGvC9Kw70oXg08SvdNPYKrFj1e8AQ9160fvcHewj0GZik9gOlKvJOBrT0zHLS9
                      bEO/PKAiD7tDS7Q985qpPXFgtj3HsD69yLP8vOJzr73UUte8VC2LvKCxKzsuk2I9RzasPbrKHT3g
                      KLA82dSXPQUVlT1gpAK9DEj3PAg5j731cbY9CsmfveBED73mQo29i7KdvVpGGL3SfEo99z0xvaO4
                      IL2HrCO9sDA4PINWNL1uB0Y9hRnKPUm8kT3qXD29IqQhPWBUn7zE/N88zm4XPTAnFjxCeBI9aaaq
                      Pf2mlr2wa8U7FOvrPCi9kL0i3GY9YFKVuxOZVb0AU029wVW/PVBFT72qLQW9aCFLvPrPGj2QfS69
                      cOtpPMABbrvNfmy9LdYzvbe/uT0kmIS9zMSGvUJagb3qiie91pmCvUdrlT3PEcu9oFcKvZryTj2T
                      h6A9+D+ZvTkjwT3qhEg90rVQPcxPsrwg2IC8tt08PWp+Gj2AqjS9ii81PVm3rj3/sq49bnaFvQBG
                      HDmYBKe9XCKHvd/doT29G4+9sSvJPSxygbyYX4w8yz3JvVp0Nj1EY9M8AF5suzCayr0SjpS9W+6W
                      vVSDojw3iH+9uACgPGhrlDxF5sk9bzGWPTLsID15O7I9HBvbPDDUsTsbPbw9wQfIPYD+obrDB409
                      rbR6vbLGbT2M2pA8KAdqvBADHLwiNIu9Tv51PdC3RLwyYUc9mEtWPKoxHb2M4808eE6qveaEgL2w
                      Y/I7cERbPGBXiLtoQ3i8mkEVPY6AHT2tKI89zq9pPRqjWz34sJ48WkZbPUzZj7x36sI9gnVjPUC5
                      NjxTFmO9Kg9xPWUhtr1hH4U9sC91vOKJTT2YAdy8QqeUvUTk1zyiygw9hh5JPXZyB71c3Ba9vWJf
                      vf1+ij3OqB49eDCJPKx0gjwNyF+92DGSvT0jmD2AKOS6mJk1PKpKVz2ABMa62Ip0vPcKcL0bl8m9
                      4O2NO09Ovr3B74Y9in8gPRIVJT2gb287YceLPbpoID0wVr29bHXDvOgDCbxcMwK9AR6oPbC9XbyD
                      Dro9bFiuvHtogj1M+/Q82H6Uvcwswjy+dqm92n5rvexnl7xUddc8yIXCvJD8FLyNX8o9wNRgOyd2
                      P71UABG9spaXvYIQqb3KxyQ9ZyGoPesQtb3DYIg9FPgBvbDshr1gdIm9Uf/KPe3/r73YPi882hII
                      PQ9qpj1Grgo9UwtXvWh8W7xomw48AlMKPQF0mD0w0Ho8QHx7PH2XOr1q2Qi9sAbuu8LeGz2XoyW9
                      4rR0PY+vnj3Q/N670fWMPTfyNr2Mwe48DKuVPOYOdT3t57g9+W7DPXOfJr3kbdU8tYalPb/Yuz2w
                      l129UjY+PXoOP71g5bq9rVy8vfBUU7yleZU9Vc+vPYBZoDq/y6o9hMPiPFrZG72ww7K9wAyIOlQz
                      6rw4X8E8kwDMvT+Bxj0LxIc9aHNAvA9WpT3NzFy9tDHXvHjeqrzg2429MCRTvKAkdb0D9cM9MDcU
                      vZS3srwtQ6S9eT2DPf1MbL2z7Cy9SeDFPbn8lj1cYRm92I/MvN48lL0MOqO808odvYAHgzqqEBy9
                      C6SxPeGzyT06VEG9MoauvaogOr26oDe9neO1PQfsH70JroU9fd6lvWycmzySejM9AXLFPcNSMr2q
                      XjI9CbaiPRQFwzxSN4G9+tZhvYDK27qH+Lw9d2y4PfNGVb16/769q1G0PSBgqrzRX7k97MO/PDcc
                      qj0wj1y9ZKEXvYUcub3ggKg8topwPepMAj0PBpI9oWeHPSaqGz3gs4m7BfqGvbF2hz2YvtK84H6u
                      u8c2O71hy4k9RwS4PQDy+bs0qbe8MMQ0vEDRyTyq5qO9BcaHvYCaQjrCjSo91+U8vahSkDzbFYc9
                      AN8JvIkJgz23xYI948W/PWxppryn1Io9v7WBPVBeIbzqSwU9cAQ2vQBVRzsADhI8gHAzvBYHfT06
                      2SK9mt3HvXLgGT1jFYo92Ap2PO3Wrz1FXba9UzlbvejLGLxANDS9l1Bxvd1WqD2ooBe8AKS3uwgV
                      5LzSb2g9Or2CvWkroj0SCCo9IKWYvaJ0ZT2Kv2E9kq1CPbBId71H6V+9IshDPdPNLL24A9i8VH6J
                      vSl/jD1ho5A9ZA3hPBUhxT2LI6e92HGFvbtZiT2o3DW8iOaEvAc6qj0AsEy6WwK4vYpgjL1otL28
                      OPORvShuvLyglMk800/FPZjpk7xguIY8gIjdujQ+rzyY8fi8lts2ParlJT0N95i9ZcTMPfpDdj3C
                      uJK90sJUPZP2mj0JH5M9cMJYvD3GPb0oPx48HZGKvVp8dz0AeRe8KQDCPcDJcTvq9Gw9/lhtPT3f
                      U72RS8w9aBbTvHA8I707OaU9dGnbPDevZb2okI29Td1MvWmVgT0IgZm8MGDUu7yLDL3IP8S9qIZy
                      PLA9G7zHDG+9wN8+vGE6mD2gzvk7M2d8vbTg87xBraY9uQW/PUK+Aj2nEnS9uJGevAGAsj2Cb5K9
                      97YlvXsrvD0hhrU9sqZFPVMgWb10nBa9VsYXPaOutj3xs549aPJxPDLtQj0M4ty8hqotPQ2Yr720
                      nqU8kscgPV2Hu73A3N28iNehvcBjdTtQniQ82DM+PBThlDzF9Le98EQZvCAU6TsmuXQ9rYK5Pd4V
                      RT336Uq942iAPfLZAz1Smm89APaXO3Edmj3oF1+88ogJPdhbczyLs4+9ziNZPfo4dL1Y0UY8QMZ9
                      vbrRTj0Ld5490NZrvbPBVL0o+Qq8EHsHvTouOT2hGpU9bhhxPaKiUz2grho7BFDuPD5qPT2Ysxq8
                      lXXAve+Xnj0tJl29RukWvX5xRj2AsXg8SW3EPR5fWD2OeiQ94jd2PWE7rz26zD09aoxdPZLdlr1n
                      WDq9feOxve1Ppj1SXpy9Mc+DPYF4qD1QNdG7Ej8yPcCUW70m2A69NrRZPS5SYj0i8BY9bEOnPGrk
                      fr20JIY8aEWzPKrnUz05WY89quAUPaCBvL19rI+9M6i7PRcFx73Eu4C9oBqAuzBBg70C7i898feK
                      PS59pr096oa9AC5CPABSBDxgs7w7ViEjPbnQjz1HjLA9+RS0PQzczrwKhyM9yqonvS3nnL3YZke8
                      rB7/vDqAcb3Xq1e94J+HuzDmN7y31ps9cFgLvVK9Wz1ASB+9wIEHvLBqC7wjGGS9B6ehPWhB/bxr
                      c7+9UfOFPVoKJb2Cpqa9d4BwvbLNND3QeLo7qsNlvYLjpL0z+La9/Z88vZRf2DwiKVs9ir+uvZUp
                      x71QMgQ8MkJHPWhEHrz0E/E8LCPMPCzw1Dws9Og8cAN5vItGkr2XcES9rY8+vWgNwbxb67A9xN/t
                      PA8pyr2KAZe9vU23Pa1zcr0HCCS9eKfxvFAcWLyqbnS9JwtKvUJxPD2IUbg8XSx5vQDMHL2FaJa9
                      HfO8PRDpPrxdRE69jSh2vTivwjxPX4I9n4GbPZCkELywZGM8e/uTvYDPsrtgzBK9jHfuPGI3fj2d
                      Xz69xg6NvWi6n70APsO6QORZvVhNsDzAhLi8xS24PeAuCb2AacS80GiAuw3jnT3cNdc8qLXuvOj1
                      fTywbvE7KCKrvco2sL3ssYk8wK62OqXTqL2Y1y48Ay5CveD1P73gMHy9ANZzPINUrD1A+Hg8gFXY
                      O6GImD30p5I8c1iiPbD8qrtnPJM9cxssvR7ulb0GSwq9ZDrsPGC2rTu4FcE8EJ0CvKgknL1aFSw9
                      TfbBPZhUzLxqQyu9NMu3PLDN+bsSmy099lwXvcxY1DzjIzy9aKr4vHNoWr1Tt6691Lz9POQogL3k
                      Pd888CkNPL3ZSb0Ub4E8cNZpvDB6hL3AXEm8DCr7vCB5Kr19Dzm9pKvkPIfFLr0VQrI9Nv4VPfQt
                      ir0wjUU867CLPXxj/DxguiM7ONCqvFA9pbt4KZ29hqRxPUM9mL0yeqK9mumhvScknT14pMO9gG9m
                      vWgKi73or7g83XgnvTNiyT2qgoK9lUe3vQAeWzztQ8I9wOIgOwB8oLthlZQ9uRmvPeKJbj1A5iS7
                      KrJLPU+NuL2A5tS8yrWivTBJvjvj4Ky9INcovd6Zpb3gl728UJFsvUcQtb3nwVW9LT+xvdwU7jxm
                      vgA9zjIxPe2Ohb2HvMc9eNaEPNMjub3I99S8YIfJvKDhpL1AbU487GacvF6Pj70lGZS9L9fLPQCL
                      CroA+2w86PSSvAQf8DzjujS91F+qPMFbkD2e5T09uEHOvED9u7y0lM88GDyxvbZVfT04nuG8yBW8
                      PHAjWbygsCg7aYmgPZhYkb1+A529VgodPRhVdTzRUrY9+hiEvWj3D7yzosc9JFTyPBCedzwKXHI9
                      QqF8PQBSUjz4hJA8Pf2zPYQpGL3DFXO9+h1pvSppUL1Mepq8ABb3ucZNDj0Y6GY8FNDgPMqROr0R
                      e4Y9Xf7DPQCirTmGtSY9bIOIPEC2FbvdSmO9hDbTPABjj71Uid08mJquvSqtNj1iF8a903s7vSgd
                      HjyyO4e9DNjZPNSX5jza5Bu9iEyVvSJvbT0AouI7eP7LPAPCJr0NGka92LlivFLxJD23sne92RnI
                      Pb1nhL2QkHe8wgGFvWghlTztDJq9Fp9zPQQsA72SV3M9UhNqPRgY6rzqSSi9gOF4OgJNED238r69
                      Nydkvej0lb1Oikw9U7xsvaN0fb3AtZ88wiEUPXxR7DwFLIw9DmpzPagHZzxGQG09+mQ2PQXMzL3g
                      nYq8sDIrvf6Xir3g6MW9ATKkPeoiIz3YP6y9U2XKvaYXBj1KrbK9ENYMvYqNv72ATDm87fw+vR4b
                      q71wnAs80cy5Pcs7pD2KHAq9oKGbPAU0lL3gzY+97JKbPM2qN73bS8K9w8fGPcuSyT2x4ZQ9kI0k
                      vKtcvT09w7i9zhsxPQBZBjt9PYu9J4RXvScNaL3jFL+97YBevV2gZr0WeUo9U5lVvTPAlD2MVOq8
                      0i9DPQKbyb0N4Me9AP4HvbVInL3KiWw9gPeRO9N/UL0o6BO8sIB6POXUrj1BfMM9tRuXPQIaYD0W
                      Yhw9gbuZPVDTF73YRz688CECvADLIzyYE1K8kMNNvTtXsj2ai2q9TRGWvd+Frb3i30s9J6M9vcCB
                      c7sgBry8FPb4PKBQVTuYrLc8JQqsvfFbyj2yqyg9QIUeO9Rf1bxT/4699E6iPKSlFb0b3rY9LUJY
                      vZjEKzwz6Tu9PfekvXBRob2jh4M956u4PViZgTxYgRU8akRSPZDrWL3BFKc9Q2hlvfK1XT1SMqO9
                      wLNqu5iasb39Jmm9wEhHuwVDhb2nCKw98AJjvMfuuD1Aa8O81OaKvHIqED0A1IE701Y1vf2yYb1W
                      a2A9oA7xOwXrsL0yIoG9qHxUvGEZiT3tM6894Lw5vX3Muj07ZrS9UkxGPcOgrj3Ts6q9TfqjPXdv
                      VL3C/F49gMaTvTdkkj1in109GQ2MPYJ+h73d6Ji9Ug5xPUKNOj1+cl090dWMPRQBs7wAD5+853o2
                      vWt7wr0LOLq9cQvJPXGylT261L29ODWRPI9Ur71+wAA94My9u5p4K7099ae9vTg/vQBgWrqZcq49
                      Vrh+PWclWr2TC4o9M1+IPbSPqbxATsq8uBeHvKOQP73LkKq9vyq+PSH8vT3AqsA6AlOuvZ3ES72U
                      JAK9k9KkvaEQvj1SLzA9iNmVvKZOqL2Q2w+91vFmPdAQpDt/pr49OmUOvTCwvruE4Ns8wGqMumgg
                      A7yydRc97OWAPOhFjjwZm5k9UEUIvQhqg71YuuW8+brJPdVfpb3ODqW9SwCpPSf0vT0+z1o9HFD7
                      PDX+yb126kM9SLC+vD5Kg72AAym9GIh6vAN7yT0jA5G9lkxePaoRjb0DSn69axegPbAyZ7wAQs26
                      Dnc+PRL9GT0tQck9TpiMvU9qw73wFDS9PpxHPdieCryIM+S8QBJYvRedyj3jfLy9HZ7CvQChU7um
                      yVc9I3djvYM0oj33f4E90B3AO/DJH73YPMI8mEcsPJj4WDzMcLU8RRiOvfRImTxxRIk9sIjFvZic
                      T7yM7qU8iRO5PbdwK71tg0q94GS8uwNDtL3hKZc9NPe9PArbVD2gvfS7QM9hvPOLJr1wgH08QJDK
                      POI8x73oUCm8Qxw9vUXwr73hNZE9txVZvRP/mz2Jtac9avdjPaiTSTzRC649p/lxvaDdarvRS6Y9
                      d381vZbSm73ubDY9T9GDPciDnb334649MrIOPbA6pzsAnBu6SxiFPcqqYj0iEKS9lIn3PPEMpj0p
                      vZE9YpVZPbwZzTzwiry95rJpPaMShz0Ptow9w04ovdjQW7zqscK91Ov/vMAY6bxYik68IPOhvW7n
                      ZT0yqiM9HTmPPSHmjz1dhp894MClO7ByLjz7NLC9c8U5vQAGhLwgdc47MzW5vRKHWD2/Esm9417D
                      vYBj8rsSKwg9EPk/vJBSBLy0d9Q8rLuFvayYiL1ne8O9wdG+PdYvMj3ZRqw9RUeRvRT41rwAI3c6
                      sMs2PABNqjlAwyW9M3EcvVQv5TxLuZs9wCC3Oj5hhb1AB4m9czQnvd7Pej11hLM9N9PIPQLkRT0X
                      0Lg92qg7vR3/vj2rwqA9MkdsPROUuL2o+w+8wE0KvECbnzx/xL89XmiovfiL4bxQPfy7IicvPTNC
                      kD0NJzq9WEJXvE1SOL1xVq09fwexvW0wu70Q0nQ8IFWyO6zxibyM6Mu8Hh6KveJFMz0LBbM9sMim
                      u7K/JD2DRl69oee8PXWLvT3ElPQ8UsFJPSpwor3uMSI9klCcvejZDjzTm8U9EmsEPVTH57wMzJi8
                      dumDvYJrBz0wpJy7gGqlu4D4JLxrB8S9IqIPPQU0hz005Zy83QpzvcwjCb3fwsW9L9CYPdBwdL2T
                      /TW9wOEJO+AuSr3giEy9QJ9EvHQB7Lzdvqa9oG74vK2UyT12ugq95/A7vcp5Eb2m9om9QOAaPIfP
                      Or2X47g9/OL+PMr8F72zYm29j066PaA39jvGvJ29iRGRPfgDxLyKUDE99ViIPUTcDr1/Saw9oJbL
                      u2Bemzs2LKq9MopMPaodxL03SbU9dF25PAzl2zwAvGg7pt2gveW4tj2qf2A9GbWSPRWrwz2KhbW9
                      gUuUPdKeOz1QlD68T0qyPRnanj3nKZY9AJpoO77Nbz2wugO86YyRPUjUur1xdao9UIKMu8CNtLzy
                      Vxs9QOQTvCvcrz0t+Hi9Ml1zPbehXL32B3c9JzC4veX1rb1zXGy9V0eCPejUibyjnnG9CN2wvLpG
                      XD1DBpm9qUiDPaxogL1Ir569AK2vuesRs72zSro9wANDO6Ccs7xiiFY9g7PDPUDzojqUUMw8HDLe
                      PAD4HbroivC8zDHNvEzVjrxgc3G9hVmBvRcelD044qm8sZSSPQMfyb02C5y9XrxSPR+Wu70GhXs9
                      NRanPfq0Xj1PYcE9sItsvIPAPb2jeKM9IVu4Pex/hzxI7ea8wHg5u4pzCT3WSxO9nyTIvXNNnj0A
                      NwK9J5qoPY+zwD3XvLg9j3bGvVKVCj1l8se9IDGxu8c1v71ydH49dX+uPRo6Y70Tuos9HWh7va0F
                      q73sYbO8p8e/PacdhD0NMqK9cot6PUaMaj1snsu8bA2rvOK/Oj1AohC7bdufPfzaiL1gvPw7r5Og
                      PTCj7rufIcs9A3KpPVr0gb0iIXM9w2mXvWa7ob2AImA6zblBvQDs7Djd8sC9JDHQPIS82zwaY6+9
                      sCR6vO7DAz3ugKK987JNvaA32bt3xk+9HV+tPfBCLzyQL1O8RNAOvRGEmj3YY6C9DXc9vaORyj2k
                      p+k81hyEvaINbz2jy029QiU6PQaOQz0pJa89eGWpPJZhmb0bdpc9kwvHvaTX8DwAEpY52N8bPMp5
                      xb0g3Gu91tM8PQB4irvyq2c98MxtvfAFY73wJsa9AKLyOYKGNj2HeMm98BaLvcX2nb1QGH28F44h
                      vWLyfT0a6rS984+QvQjR97wgLG69GM6nvID7bb3VcK69AAU1O/CtPLw0wJI85p6fvYCFGbqQYCm9
                      wM1Mvci5mzzK1Cu9J76xPX3jWr3ouqa9WiyRvaVWvr0ANHy5b73APbEbjD1chdU8cGlBvBA1bLzz
                      BTu9LXSqvYVbmD25FMs9RlIWvbLUVD3AIlI7myvHPTJqvL2AR546bEP/vGh3kb2rc6i9Kj1OPVPq
                      jz3Cnou9l3mcPerMDD234Mk9Aqc2PWjPobzwH2c8BD7yPACQRLjj1xq9qpNdPSARjbyORpK9UGbJ
                      u92nwL2wt2a89qarvTHHnj1SARk9KOkqvOOSkT0wvxY8p9KgPUEzqD2yJKW9SB6+PODXxDxHK6E9
                      QKfzOqChEDvQZ9S7NnBYPczh8rwFVIS96tFpvXDFNL1ozuG8482TPeMfjj0IKcG9TOCCve2ksT2A
                      +/S60C/qu+lvvD1QiSy8urG1vXu4tD1IKrC9c7GovTPbvz3wyA29GWSDPWD7rLzrOKE9+s9Dvag9
                      pL2gG3u7sB9GvO1iW70Y2S28WFjFvd0vhz3JDpI9MLQdvUpkPj30SLm8XuIYPXLOHT0SBCc9tAz9
                      vDrvEL3t1VW9472ZPf0phD3HD7A9L2StPUsWoT0iYVw92MzovMBg4bw4yMK9EmzCvYtqnT2ynqC9
                      QkOHvUBTgbrM6Yi9FISUPOvuw71H+Zc9g+GWPewahb14/ce9AAzUvI9uhT2VGpo9ReqWPdqFMD2T
                      TbI9P7O3vbEzqD3hP5Q9YD0MO8BGKTw9+3a9tXjFPUD8Qr3Pica9Fn4CPQAxUb2myQo9eUKWPUs1
                      rT1nBWS94Er1u3qeLL1eOzk9zrNaPZ9UjT0IXaC9orYdPXNNpz0B4Jo9igmtvTEpiT344q08Wiqw
                      veLBlL1iIsC98rRUPY5sCj07Qqe92o4svWkrtz1lBrk9Di1/PTWzpr3A4AK9E2vBPQZ6cT0SKEA9
                      ath0vWXDuz0oqoM89hQQvc7Qkb3ApkO8AAF3u3prF71wmiI8cgtMPSgT1LwAPBc74mcTPR6Iqb0T
                      amO900yxPfC4A70Qjhi8jYecPc+iqj1gwCW9xUOjvaakIj2hl4o9pjktPUwCgL1xO4Y90ESOuwAA
                      o7rQXDS8QNm+vLDnXbwwFWS8XFKDvYAlxzqB38Q9I1FJvbpyRz16Nlk9gTq3PaNVsj2qN1M9tjuD
                      vfAmcbz1hq69mLOavRlatD1ocou86DojvKtYhT0Q7ky9t+QlvX3pV71M5IO9sIHsu1Z6Zz12Jxw9
                      gHqCvNZYAr1Mje48ALqqu5zb3zz5JbU9SwWMPegXhLywQAM8mCiuvB9ZmT29tVe9KLfSvD98tT0e
                      KZK95mulvUChiDzquhS9tMr5PMeGXL2gr9q7aKAcPLtDmL3r7qi9WI2MvNjt/Lwi3YK9dM/YvOqx
                      Br1M6I68KB27vS8hhD0oAyI86d+cPeLks719AZa9c0nIvY5mhL1EX+k8pODzPGntyT0QIhQ8EoUJ
                      PaKZdT0A+q08AOl/O1EvhD1IW608AHYTu83Zlj3FHq892uI1PcKoPD0XZDO9kLHEvUj8kTwazzm9
                      yEyUPPtoq73tPp89QfOtPco6XT3CW5K9YSuZPV+UqD2gUtK7j53MPXqmeT3iQKW9zJ7mPOcyoj3Y
                      ahq8QLPBvHjmtDwGwoC97NirvNMqgz2W0Z69U52nPTirxr3qfTs9GDFWvGgTmDzIRJ88gIbFO7gG
                      lrzGhYa9zToqvWJ1DD2tXnu9PR7KvXCSXL3iYio9iNWzvACg4bqVqK09jr4sPci8nL2wl0o8L9nG
                      PRt4yD3IuqA8VCfuPOALD70eIy89e1eDPepJLT3i6Fk9AGSfOxetGb0zMUO97l4tPSjiPbzaEDy9
                      aONhPADK0zpg8VA7oYedPbfCf72A5p88JBHePMAUZrtngMu9wGNxu50KIb0gTMq8kEJSPIGhwT03
                      QMQ99aCVvUX8gb20DaY8DBOpvHCDWTy9MyC9ngVFPcASULsibC89As0jPWw37DwQl5m9gqZXPcOL
                      rD2HoqA9QEQHPGVdqz3AHAq9QDIWPMvLrz0pW7U9It4wPdJtLD3h0pw9YDy8PJD7ZL0Iy9W8zfCa
                      PeyUjTzU2uC8drsLPZasCj2zT129APZ5O0CAzLxk49g8IilCPbAuGr2hFp89fSBFvWg6vDygGJE7
                      LRi1vcPZYr2GToK9kMM1PNind7xAwBM8o12rPY7QJz2AN9M7YKBivTCtCbyA3oG7oPH1u2DPxryg
                      wbe9oArvvFKTDD2lIpU96DBIvKpRCT11+Y69jgJLPQtMxr3aFbu9PBsAvZjxTbyNoqQ9/t51PTQ1
                      27y6vTY9aDx2vFAQWDxYl/y8yw+0vUDRQL1ERNE8oCkQvcA4ITsABRW9Qve/vUJlpL1KhG09SBSi
                      vc7si73yWHM9oCEFvRAxtb02+yw9CD20vDSe5rwAbLA4gzXDvUMOxL0BUqM9yI3lvNIbfj3JUoY9
                      4pGhvWj1nTwFGKQ9x9OfPeL5Lj1C8SQ9aOFwvM2HLL34lZA8ADinOjqrTz1gxNU7oGrMO1T1q7wb
                      S5o9mge7vbeFHr038K09UOrEO590sj2QX1w8yiQ3vdDQWb0XL2K9ZC4SvX55XD2Xz6I9tNP6PAOt
                      yD1L+so9ZL8IvQCsqLhg8r28q4WFPVuQtL2UENW8AK6Iudehsz1MlJm8ascuveA2Ar3pa6A9trSn
                      vb2djz1gk/C8AC8SOqFyjj0AoG87NBbwPOSNBb0NH0O9eOKivNMIT73ulZi9pLP2PGBd37vQAlU8
                      Oi8zvWMAgD1d7329IMecvTkhwT1AxgE8Xj4sPTsFsT0ANKi6Ap6BvVbyID2goRg7gRyqPWFVsD3A
                      PR479fi5vecWWL3CCMq9Yv0vPY0GiD3CYHg9LGcXvcc8xD3KN5y9fWp8vR0cxT0A3Va60IOOvSqP
                      J72NhKE90bSGPTkEjT0NokC9fiJlPWDQ47ydOIS9AB7SuZMhMb0sF4m8FuSVvbn3pj1dsWq9haSA
                      vUMclD2a53A9uuM7PfOKer3Dkx+9/zyiPehhgb0CYW89+hcMPa9MwT2uSC49cBN9PKj3PrzYtGu8
                      QGWlOiLKm72wzv07KjQQvUgI4rzZMbo9Z2bMPaoGeT3hDJw9+2W1vRTggbz+Op69JpcAPeJRFT29
                      WE+9WAqFvIafob0AAHI4J1mIPXZGUj0ogr69gJdyvOPVl72zqby9PTrFPfkOkT16eYK9LUOzvZpc
                      ez2wdn08UOdlvUP2UL3QpCq9oJe+vGkprj1Y/2I84rRbPeaxFL27dp89uSnLPdC5Tzyj2cM9GBWH
                      PPJ2pr0YiTg8IgEcPZrsUD0B9LA9FF6cvAC4WLtAwEe8QC5bPHngwT0SvRQ9sWibPaWDoT1ggXC9
                      kVeMPT9Etz2E3+s8EPiGvc9cnj0/qcc9oPqSvarbZ720Ote8hWiSPdDmurv0z/i8/UmTvXfbL73E
                      LtA8tT+RPaistLwUibm8z3iQPZ6gTD04vpu9pfS5PQBPOzs4Zbi95hRwPbtjsD3RVrs94DMFvVt9
                      rj2IxN68RmcnPQY1fz39tqM9SFCDvVPLqD32+jA9ayynvdgzib0ApBm7sA7Eu0v5gj3nc749gKJr
                      PAD4RjvxC5A9mvBNPZOnwL10cpk8FqFQPWjmhbyJspM93W6qPfQdi723Er89tvVHPdzkh72Rppg9
                      52Q+vSZ8kb2iIBc9RSbMvSKrZD1mwwE9jPrbPCEEsT0ew2M9+mFsPSCyk71MubS8WK32vIvlsb1A
                      6pO8MCXMOxb/kb1dy5+9ppsPPbhXnr37WqM9o650vbQ9hb3SEzA9eGiNvEjC8bydAK49mXybPWJu
                      MD3Ja749ABckusAcBbxYc5y9AVakPRqgY70NFjC9mGHJPJzyEr2tKo+9ezvKva4JfT1S+wA9T9W7
                      PQD5P7sqPBo9COf0vEgwn72QKU298CRWvB76aD00r9G8KIHBvZeZyT3gk5o7s4fHvSETvD1RvbQ9
                      AzSTPZfGyb3wLki8MLGDvQeayr1OYHk9W4ygvdy20jx7ysE9vWWAPYCDfzwqBwI96oUgPbBruL3K
                      9wM9jyeHPfoSar1A0Ms8qP0evFghlL0AoIg4sLlvvVNfb72KxYK9s8OivVCpwjvRPKg9gWm1PW3y
                      gz0Y5mQ8NWTHvY0UqD2ZUcw9c2wfvdb2Fb3dPoy9QdSIPRRS7Dyt2sK98MrMvZngyz29n2S9tIiL
                      vNpXqr2w+yK8AHxDuZcmyT0P2oY9r9WAPbiByLwL66y9bvaRvVdpr70h3YI9oMUUvUBVo7qoPaa8
                      RcSJPbAp4juhlZ89sBlyvYciwz0o3Lk8YSGaPd2AsL1EpQq9cMwIvP7KBT1Y74y96GOJvXWwlz3S
                      LwY9yllZvQDM/jgAWoA8sJUQPHK6Uz0yZR891ZKuPSDqbL2CIzw9sCe2Oz9uwr1NArY9zU6CPWhw
                      kLxHSX+9uBPGPMD4ZLzQ1ka8XnEoPRSErDy6UrG9AGIjPM05mr2ly8E9mQiZPSwZozzQ1ny8AkOK
                      vVUmhD1AhQm8RpcAveEcgz1wuR294ALFvS2Umr2J+7g92oMiPR55Xj1WPks9arIIvYu0kT1y9R09
                      MpszPVgSObzaXCY9E3J5vcOfmL2Vkp29p4g9vZTY5zzgl5C8aFz2vJmvzD21sKE9VL64vK5+VD0q
                      E1S9gFffuwkjlD0xL4Y9AE2ZuWTA2TyV2JA9irLAva3wtb1Qlg29EimBvdADVDyxFLI9IvmsvWgo
                      sL1dg4g9SZ2WPbLpFT1AUZ08qookvZiBiDwxI5U9Ir9FPbCqOry00aa8y868vRYYXz1SSHw95DDZ
                      PLBkXjxp7ZU9fTVlvflghz0eTW89+I6KvIw8/ryALu07EPB3PDGqtT2785K9JxfMPRBuLzxxMZQ9
                      QxVrvfMmLb1+fjQ9eiQmPQB/3rtGjRU9XT1cvZRNjbxIOom93WarPRhCGjxSJYS90ZC8PYsOnb0W
                      sxa9uSmmPZBLeTygXVK9tAP0PEz1gLyIvIw8YD76u3CHVbxA+AM8zIrXvPRh/jywJtg7N4KwPdPM
                      ab2963G9gGtsvSMXxb28qfc8oJqDuxoRB71t30u9wPZhu2jwyLy2zhI9GiwivUqfFb3QUXa90Mx9
                      vb25uT1GvpG9NKnQvDgQtL0yPC09NLehPIWytD1GYwI9tPWcvMpSRT0mthS9JGHdPODpv7zCF6q9
                      HUlBvbA4P72HCck92NeovO6DZT10Nv+8ojNCPW0Cn7109AG9MzipvfIAaT2NdqY9yGPhvACA1Dfu
                      Kpe9vUikPQ0ILL1si4K8ECk1PGgOLzy55JM9LftDvTCwXLwvUcA9AOwsvOADxzsRkbU98HtcPK6p
                      pr08J4y9pdzHvTL1tb0r6pc9lNXVvEikgLwEs+w8Mr0lPZIVAj1AxBS8OgUnPTiNi72ZlMQ9PXIo
                      vSI5tb1dqa09DqeXvcBQOzxiu8a98sUPPRMJyD2wOI47QIzKPOuAoD0oEqg8FL3xvCItND322oi9
                      tgRLPeAYCb1waBK8g82svU/ghD3058q8DT95veCJi7wBl7s9WAgZPKibtLxOjzA9t/c3vbFQxT0y
                      1WQ9oIdTO0eWjT0StDc9isFzPaKYbT2Laro9tf3FPZhr6by7IMM9nlRzPUL8DD0VNZu9yn4jvSgs
                      KzxykVA9KcGKPSh/AbxYOtq8mmMnvaf3T73AY8w8AHg8Og60ST1zULM9LJOKPJrCRz06fG89WUi3
                      PXUtv72qFCo9cCyovWO0sb1QbLO7k4i7PVLyQT1aNCu973qMPYwowDzKaTO9Z2fDPeTR5jzoAFW8
                      P+XEPTA+xLuVDL09GU2QPcb/SD2Ae8c8SmpfvXVpnD3WR1M9QIEfO+J4Fz3s47g84nJ0PQCcE7kt
                      r5U943GlvaLqXD218Ms9kGxkPPIwxL2SSbC9BYKRvWeyS70iFXQ9/SifPbAzc71ISpw8TTeNPajf
                      BLzBfsQ9pBbOPGGfyz2mE3k9J8PKvVecsr0MpPQ8cM95PKdcZ720EYq8wrUEPXZ/lb14Spg81YWW
                      vTaAMz3xE6Q910eRPUBTQb1rdbI9WFfjvBowdj3hRrY9wuEdPVBrXryALUm6Dh0ZPehQyr3Aysi6
                      QA8UvOjsUTxZd4g9MERKvW6go73+fqS9CPr/vEEHuz3iaXM9cyq8vQdCLr0r8JE9gB5NurNpUL0x
                      SLU9OHWTvKhQgDyZwJE9qHzDvPePsL1s/bK8ALijvaCY6rvG6ZW9wksLPVLvZT29qIE9dLHyvN3E
                      db2dhcu9UvlyPe+ssb08gtQ8AdazPbiUnr0McKA8reimPdvrhT3ao8m9gqmmvcB+Xb0Acum7W33E
                      PWqzJT3eIFw9Q9u4vexurzy3FsM950jIPc2Smb16dsW9wfWBPf3kJL1Rz6Q9glZ0PbAV4bsjDpy9
                      sNrTO6AE+rsgyYa8fRuQPYBrwjsXm3K9zZM6vbCZxL3L3qG9wgiOve6kMT3Yjie89dGaPS8wqT1T
                      /6q9BcyQvWKhXD2Khh09XaWBPbjUuzww8rE704zGPeiRSTxHVny9wgMIPaz3CL01i5e9agGKvfAT
                      rb2E2Qi98tQFPZTj6bzKSwu9sLp8vDBDnrvC3B09gcS7PWCwkzwzFSi96oVUvYssv724Zei8Hl9g
                      PZAhBrxw+qK9RoQUveHqtz1w6DK8gKuEPLUjpj3QxtE7Aaa6PQ1WlT3pgcg92i2YvW0kSL2ISYy9
                      +GeKPKh2l73U/eo8tuUzPaZ5i70eLmo9w7NxvZsxwj3B9pw9sNkSvH5Cn71XZkS9znVFPVADjLtg
                      lzk7UHYwvfvJmT1bqbM9qQyXPQ1Yr730Xr28AOMsvGQ+Br3weS888P5XPOqRCD2UAAq9MVrBPQFy
                      pD1lEJM9e4qQPZp4er0rQIo9FOPovCy2vryd5UO9YNj2O0DEi70+lhQ9Mei1PZLuMT1Vr8u9Raq8
                      vaDhzjvdYV29lSDLPfpiHT1KaoK9EySaPRU0tD3ZcoI9AFyQOoARfTqiOGU9cpu6vdo1KT2aYXo9
                      wOsfvCh/6bygWvC8AK1OvfrQFb1o6aa8u52OPaA38Lva/ZC9VfzFvcAABTzQ+7k7AGkzOxTX5bxo
                      DAY8OGbCPLw40DyU6/w8M460Pcxy7bxAQy67YLsZO+0mk70siYo8wJITPIjq6LyaF2Q9QCWXvON+
                      tb1nXrs9oOmovfR6rDzQVY870FK4u0gwyjyonG28CS+/PaCntDwz+Um9OlpgvXDbMb31a6i9qPV3
                      PNTp2rxaxEc9MZHCPVOYdr1f+bq912pTvSDtpLybUZu98CqGvQ65az1tLi+9sQ6hPUvBnD3R3L49
                      PIOJvfYSej0tyb49YAioPKLAHz2G3WY9Kf7LPdhJK7yknxO9tMCyvFqxnr0wAMg75lBWPZwvgL1c
                      kIS9Mw+jvfDjT71UZ/i8Q1a3PTCTqrsZBLA9QHJRPBMRtD0x75U9YmE2PYmcrT0OWRY9ItiyvTsy
                      sj0k+8w8qPFGPN5QAT02RgA9sNFdvfBEWDwdM2694LM3veVerD0DEZk9SjxvvQhqhzwygCE9oAsc
                      vY3HYL1hGIA9gPAMvFURmD06PCk9Ks5sPShm9Lw67AQ9KOQ4vFtFpb3MJhK9Bf2ePTafaD3QSEQ8
                      Q7ihPSZ5k70M4OA8Zf2BPTrSYz3ExIq9au5PPdsCkr1NenG9sF7SO0DqSTwmQxQ9grc0PZ//pT0I
                      Eo+8/xSyvSJPdz13gRy9MrJgPYixnr0dkYe9/I+IvS1Jtz0SXmk9o9CPvcKTYD0Uiao8wGB8u6St
                      FL3Cgno9kCu0vYr7aj2poZU9QMudPMBd9bwDVEu9IOY/vcAdlDz4fpy9nH0TvRJYPj3M6qA8hkGo
                      vTuWyT3A5hG8yvq3vesKvb0onTe87AL8PNNGMb1gSbC9qsZuvSI5XT2QYpm9hl9pPcDKGbwColE9
                      AH6/vCZNNz0qTaW9Z/Zmva3dkL2bA7k9jYqfPQAKr71NXlG92Gy1PGiyk7znXb29nexVvU1ekL1S
                      rKC9AGh+uN3FKr0AQFM4SImWvAAMnjjEj+88ol0MPbvjrj0aE0494Gr9u4BaSLpqHoa9DEjnvCAQ
                      5DvJt6Y9gJ1JvG3Zb70VS4m9FnwyPau+jj1J06Q9jkgcPaZoYj3Yea68IhVJPUAGdb2djDC9K43K
                      vcJ6Mj09Opm9LvQRPeJ4Nz1otSk8sGhnvKQ96TyAn229YpvFvVNmbr3wOAm8aWmePfv7sr1X76Y9
                      c/uavcA6WjtYWqc8QrOsvYDkW7wy0zA9wmKIvYfWjT1/76y9qnIzvbfPZL0YMpc8EztGvVcLwr1H
                      Fxu9NNj/vId0Pb0AxBa7sOwlvHPOSr0UQNC8qiVqvWCKNrvgCL+74Ha4PNhwX7ySI2U9m6aHPYLG
                      Aj310Ie9xbC+vcOPxD1NrSS9LCqcPABPNL3HRLm9IFyZPBtzm70XMsA9Aml4PYAvbL0/8pk9NKOq
                      PPjclDxWUFg9ECZSvaAb+ruipgI9AC97OtQi9jwC9Xo9YLgzu1ikGjzNUH+9GEP/vKEKwz1YuWq8
                      Or4HvcA+ibr5A6s9NkBsPbRLE700s968t992vTYlTT0gbbg7wDDWurbHbj2Uxd+8ZauGPWCbmjvq
                      rDE9WJ65vU8ZgT1cNfA8tCX8PKwgqLzoio29FQDAPZFVmj3+cgc9AIFTvcauir0d9q+91h8bPZCm
                      E7wJYsk9JVmSPW2okz0QCRq9CGWNvD9Vjj01SIM9I/uxvbvcmr2Xk4k9Lg07PaNVOb0Az4C9qZqM
                      PczL9TwFS6o9s6MavRbzoL0A0Vs8wQ6gPcfkiz0bnaS9VJq1vIKtcj1SC3s9tA34PGwkqrxQue07
                      sg58PfHYnT1Zu7Y96LcjPKirI7ymYj896w3MPWiV5rzN1bI9YY+tPeoRXL2QXle9QNYxva73ND39
                      15E9J+N/vSfMRL3BGqI9C92ZPSg9mjwl4Ze9fuhgPWAGCL1V6Y89ckU9PfZzib1gm8q9yLn9vKdo
                      vz0AZFK6BswXPRpSJz1N/2W9Bo5sPaBbizvHJzy9UBm0Oxgm4bzBvMs9WLyLPHCcA7x3k7c9aL9c
                      PJrSx73db7I9/IQRvZ0ox71q9iO9mtQsPQAAYzkqyqG9saiLPTrMRD2g28G96APhvNBRY70nvqw9
                      SeiPPeDqT71N2cI9EdrCPZ0GmD0/6b091avFPUQu4zzz4im9r0fBPdSghL1OA6y9ilIJPS4Ypb1N
                      KDu9OFSKvCKniL3QJNO7pZC5vQCup7u6PXW9WophPXLbDj2bObg9deWGvQDzjjtNyZO9eOmavZEZ
                      yj3S+WM9y2StPUDeojxQQy+8OZCYPYaQPT2A0ou9jbC+vawysLw1+rY9SKWmvU0aK71fAMk9HtBD
                      Pa0MrT0ABxI7YFXwO9hFNbyn7X29ZUXDvYopub2wNDo8nybHPUpgo71Kp5i9glMjPUqBdz33jMi9
                      9I6bPCDwGL2+Ppy9H+O4vdD5lrt9WsY914JDvShwn7yt34I9Ov8GvXAlczyMXA+9DK6yPFlZtD3K
                      4oi9MoWcvbf+v72q1oS9AJYlO3j1qrxSOBo9u4itvXlEgz2buLa9gl5FPeYBjr3AP0E8QKl7vMw8
                      Ab2diLI9jr4uPfJHFj1MXbg8kuGKvVixhL23rMI9fx2wPXAbCb2YxLO8toYJvYqgob2zC3O9gHqY
                      OjDbYzy4WaM8wJJau0ZHID3KLG89tf2ZPZJCbj0yjXI9QLh5vLKMJz0wPWC9ogOgvdnOrj12RZS9
                      uCz3vL0vrT0rYZs94CTEvUctXL2nQoM98V27PQBW2bw6xqa9QOgYu2U4gD3Yi/O8YJdbva0Xcr2q
                      zrO9I1uZPUauFD0YpsS9s3tRvUBPwroLAZc9KFc5PKMoG73n9Gu9KlIlvfqEPb3sOP88uIeePNPx
                      yj2QahG81GWZPJLTNz1/3LO9LdObPS2olr2vEcq9pPQPvbkalD3T7x29YBJGu5gnhzzw7029/XA2
                      vYCxqL2wDrO9QHUTu4yKgTw6OB49dsZ8PVCQJLwC9H89IGLJveVPzD1Y8Lw8InEXPconUT2gK1a7
                      RaKEvdCbbbw6jgW9YEW+u3dspT3NA269ANXSOaI5az1BT509YG5lO66zVD1a8ki9gU2sPU15tr0Z
                      MJA9aocDvUrIND2T3zS9VKCxPDSvkbzAAAK9PcclvWAatjuY9Qe8SSSEPWUajz3SAFc9Pz2zPVD9
                      D7ykNxW9u4ikvTjzz7x79cg9n+eQPehEfjxAw6g8mru+vRVMlb3sSZe8zFKXvLLwdT2Q3p+9iNuJ
                      vbFCqz3ooGw89SGQPdFhzD07QKq9jWFNvbhigzzY8oM8KCAhvFWNor3Gi0893iydvR9Rmz0tM4+9
                      yihQPSg4Wbx+d3c9AHJcu92RnT1Nu1i9p21EvZhJFbyOx4O9cPghvcyhnzwCSDY9ATuNPbDNIb2N
                      GIS9anQPvUIgNj3YdUe82GfPvKgDxr1dB8K9clCQvUrmnr2gUrs8ADGtPF+lgj1dXpm9sBBBPGDa
                      C73CKyU9Fz4gvcyl7byfkKc9HmmDvV5VSD2eLQ49tNCePABkbTsM64O8ZdO1PaEYoT1dX7Y9rPHe
                      PG9xuT3sMvW86qqqvTQ7jTyMhbU82q2FvSPxYr2hFbE9gzLGvRzl5zxQAry9KJeqvP3Ymz1R/sA9
                      HVHJPSkXoz03KJU9Nj4YPe3LL72M2Ki859h/vVgdTLzblsi9/hEaPYnKqz15Yq893X12vUBp1joe
                      Oo29u16PPYCVILxoEFy8swV2vUMisT3G5F894MbjOzCTSzwwhiG8dzBuvRR7zjzhraA9k0yVPZ3y
                      K70VtJQ9QGlNvaDPpbxqthS9bOjOvABuUL1InJe8RqMqPQAWJDmd/ck9Gr5aPWmbrD1hSKg9IntB
                      PX3Ye73A3Hy8LrQFPQIunb16bym9wjp6PSBnM704MIK89LGFvXQXlzxFO8G9N+iePeqhdr3ALku7
                      iL7OvCb9Vj2IV+C8iS69PbF+pD0Y5Ls8NAbIvBjIjL0GYQ69bGG+vGeNIL26rr+9IIWMu7DUvL1Q
                      Ahu8fITiPBfGyb3wPlK9dF7IPFTZnDzB64o9dnKjvc8Wsz1U6IE8khZTPep4c70KrIK9bG+pPEPK
                      d70DlLc9tvBIPdOyLr2w1MU7MOd+vXhG7LwTkVm93ZekvUiyk7w0pt68bBj9PDJBPj0wKgG8sEE6
                      vGDiYTsekj491r5BPeo8j73w/6S9SeXFPYQ/6jz3OS29jC+4vB8TsT3+URQ9wHROu9i/bLwAcDo4
                      OYmuPYRb0DxuMkg9ACTHvBRtFL0AX9C7QM9EO9v3mr32lCo92am9PaBvUL0Wnw49JHj3PNoonb0w
                      /Mw7UNukO8w6CL10kbC8Ddo8vaB+yL1gCps7/ZmHvUDrQrvppMs9tixePYlPkz0CHB49xUigvQMq
                      Gr2uwjs9eFqAPCpAHb2risu9OoclvSAqt7yYHby8rAvjPMlQqD3Jwo89GokvPTB0kbvNeiW9PYZt
                      vUMumr0jTYI96MdQvLxK2TzDgEW9jm1hPZ6Ug70DTCO959nEPZgBzL1ApDy9x5e8PVpEB71KFVW9
                      2UPIPU9iiz2W3l89J2OtPQuIrr3zGH69CUXGPfLyXj3uGpa9cMoXvOUSgb2wgSc8YAqcOxcBGr3+
                      KhI9gF6lOtIOBz3tJXq9YFn7u0Ry0zxUkK28NFOhPBC2or2Icua8lCXyvOIOvr208pa8loYAPWat
                      AL2ejaK9UUm4PUW4or04p7K8VjGsvdWZlj3c2dg8XSbFvZrjHr0eJE49/nl2PZSYl7wdI1a9h+uH
                      PXY0Lj3wXqm9VGyDvBIiPT1HUnq9lFWcvKlJnT2B4MU9gE1oOmBHj7zaJRQ9jKMEvbWbjj2w1XW8
                      XfyPPUqRXL0s4/q80kCYvVgAYrw677G9MZ2oPScIvj3ynAc9eXaCPYRn7Ty7OsQ9iGXqvOQf8jwk
                      cPg8vAoKvYo6c731kbW95SGPPbDzmTvT/LQ9RtJsPR9OzL1y4Qg9akAZPeJgSD1UE8g8oPkavXiv
                      h7zoC4m9KJSPvcBc6zpN1Vu98B9/vYPsnT0X+oU9yD+oPIwHpjxoXsS9hR+xvbCGkTttt4I9tiJB
                      PejQqjyz7rw9wh9aPQu+sj0yTg090spUPQNeXb3AYly7U9Uyvaa0SD2JWqA9EweYvbKRaD3iecW9
                      cNVVPCgKlrxWw0o9EnQnPV5xBD3NQyG9VrupvZhdCbyMOKA8cAsUPF1DS70ATCC6WCiOPPrutL2r
                      78K9Qop4PeDFrjtOq0g9YJG8vLCmEb3g6w+9nfzFPVKcBj2Smjc92rsQvQCvtDxxdoM9CMSCvBCw
                      YjwPmJY9qkQKPTpdNr1jToI9k+1qvdixlTweDx89a7KgvYDsdrxa0BS9G/advUBTTzuMDJK87FoQ
                      vdDl8Tuw6UK8wIlRvOM+f72gI8G8EI81vXoQAb0eRwM9Mx08vcMqWL2E6Am92Zi0PSxwzTxYync8
                      WcSZPZwo5Dx4QMa8WmIfvQZNQD3PS7a9zn1wPQE1iD2AXbA66r9rvUBKeL1Qw7U70vG+vUZ1i73j
                      maw9ZPb1PPDjwr1j6Y69JZS5vTlyvj1o27M8ADJju57nVD0z4Je99aKyvQJUu70x+I49EPIUPIDz
                      mrrg5ay8jQ9UvWhPq7xkzfA87BLPvGhvx71DnTK9TLyaPMVAo72DVZe9iEq5vD+xiD3PIa090JLJ
                      u7iwq7xA4968gNKXPGpEIT1Tyne9boafveVQkb0F14y93QxBvcJRkb19foO9LNmZPHHnyj0sZtw8
                      AV6DPVKJQT2nXUC9AEsDvYUBxj3IkJu9Sva9vTISg734aqI8YAiBvXhrvTxXHLc9AQa0PUT79zwi
                      GMu9szFtvZfvPL141bC9XDcNvfvroT06Fo+9tgYbPfjNsr0PsaQ9Yt4ZPYqcxb3wbUi9urbBvSZW
                      Oj3AjHG9+FmGvJpWyr233cI9ANLdvEQ78zzAfPW6vb9LvQA4iLwIRIC88GZrvYhUjTwB2sY9DQSr
                      vVmZmT0kC+w8mx7CvTb1Yz2A33u8qT6KPd+dsL11t5O9Lcc3vQD7NroALf65mPRjPA+rgj1rzoY9
                      fhcMPY2mab1NepC9xeiyvVacRD1D8DK9lQi7PdjalTwIVfi8+q4AvcrtRb0u1xU9IMPyvECNpzw9
                      4cG9tLa+POyd/rzN9qG9Eyo3vYoFVT3q7iS9acDAPTUnlj1QelE8hryQvXpLHj3zCLS9IPOMO8w4
                      DL0IOIu8GE5iPGAB1buYQ1A8gCPQO+iCZbznYIw9BOITvRBWJ7xua4C9kLecvQcsdb1Wqpi9AIcM
                      O+Mmhz3adC29ivKqvcXPnL1yf1Q9aphbPaXDmL0cc+c80DKxOweflT0UQuC8kJFXPNvdjz0beKm9
                      MAhGvFCycDyEURC9+KfWvBCUKDyY3VC8urNCvazQ4DwdW3S9N3euvVcDPb1BoME9EwbFPYg66bxF
                      5Zw9RoJgPfB2Xzyq/Gy9kgKpvYwNlbwSDyQ9YF4tu1iqxTxARIO8iXOSPQAf3ryg3Qy9gJa3OrCa
                      D7wgvOG8o786vfBuab1hHa89AzGjPaDZlTsIrsq85TScvVTohry6aLC9UwPLPcBdybxA/Ui9Sbmf
                      PRyQ7TwWois9d+0avUGMuD1AkZe6a3esPdIPLT0jb2a9ZyjLvflTxz0mdFA9WJghvKCjdbvSk2s9
                      4s9IPR0Zyb3YiPO8wqA2PXZrqb0asi49UqJlPdhHwzw0i948qZ3HPbizj7ynUa49/vOAvUPAkb3M
                      uM08SSHFPeVrlz2k7N886mUfvbTpjjz6yxe9+RCoPSxxz7x0EYS8a9+zPYNMor35aLQ9gKHMO7xj
                      hb1A5/K89wOnPcAoZDvBPaY9QD6AvACy4bnXbk+999TBPXJdSj0w1sy7XGb6PFfINL1gaQM7it4C
                      PWCLXb2Lj5A9uDeQvGIOCD00CIi8ZT+KPWpDrL2qj269NuKKvQiDx7yD0IM9SZ2WPVQa9rxgbsG8
                      EKVlveAaxL0FPrY9NSacPb2MG71S3QE9SkACPYC/rDzAAiy8fUOvvaEKiD0RncI9gXGCPcq6J72o
                      zjs8eHmvvRpMor24S+y84CuevLdlXL34z/K8K4StvbLmDT1Tx7q9k0phvYO9qz18IBe9U9m5PSNT
                      Qb0Bx8s9GJkFvOgRXzxUfr28jY5vvQerZb2MR7Y80PPBvchx6LzVFMQ9oxTKvZ62Cz1wFCu9tzIr
                      vYj+i70EAe08FHf0PKNRG70k8/A8OoC1vbrekL2ALxC8ckJHPXk6vj0U2Yg8yP2FPEx2Cr3Aybs8
                      MGy5O6JmBD2wgzY8Ip92PUiUqTyC9o29gCbKujK7n72snpE88U3EPXG4tT07w4A9QMFxuxJCeT3S
                      jls9dBuLvBeZmD2AXPO8ESG1PSLXDD1NdzK9wIhOPBqdvb3mogs9BSioPWcrar3Qm4C9CZSPPWes
                      ML2MQMc8jZ5lvX0SXb0EPfw8/ugwPUT75jxgx3S9xUihvVbvQz0xy8c90IuVu23XWL2Rdck9VsUM
                      PcFlmz0KUSM974qHPWheRrwQBIi93V6QPY3qkz0MCJu8N5a+PSYiNj2Ss349OA+JPBecsj2buYE9
                      WGbevBIhLT29vHW9vf1WvS7FHD39BYo9aiUBPSPSSb1Iy7s8Zi8RPYeZe72dsHm9J68evXVygb2D
                      wao9YgdEPflYoT1SLTg9/mwePTSd/bzCQkc9MCk2vbRpiL3k6Nc8CWyGPQdRt73Vksi961y6PY34
                      kz06kha9wAFAvNWdlT0n1pU9IxCZveZGh73mgBi9TBG/vM9Xoz3AQFS7Zst1PQDJVbvn+KY9J5Ao
                      vbj5u7x1+8i9cu0IPXJ4Wj0Ie5+85S+tvQDjvTw9Icc9dIWMvMBXGDuOX5y9QN6JvQ+WuT2m6iI9
                      Qi4fPWJlbj01X8Q9eAykvEgiy7wAlMw6qvUwvR4JWj3Ms/I8otUzPdQ30zyFf8c9ZjEMPa87pT3Q
                      7tw7XUksvTIDXT31aJY9jeZvvR70Uj0Qhl08a3OBPUxJozy6OJW9U9+lvVqtWb2YEm48MiBOPeQg
                      4Dyiqig9uGmRvbgQlrw+NBs9bpclPSeoxz0s4oQ8jYSEPRS66rw6rkS9wMl6O3m5hD0zf3a9OAnf
                      vLphn72DmpE9J6RFvXONRr0iKsW9BoUWvUzQlTxqWi49+YzEPYF/uD0sQ/M8DR+hvUP6rr1nyVW9
                      UdXIPcegzD3amrW9sHTcOz2fx71q8AI9l2DHPcPmIL0gF4691xjGPSqFrb3Ps789Jql6PTMYr701
                      log9Zq0XvSf7f72OCRU9lEvwPH7fir0oW7a9y3ebPYxo+Ty4Ero8AF2lvdO4N71LXaO9vfVvvU62
                      Mj2nL7M9gqk0PbkljD0MTvO8IBfru0DisryAiKM8M6CXPUymsTzXEX29O0KXvegWor3cxv48YmVT
                      PV2bu70KbFG9uy6pPY5PPj22Xic9BNHkPI+Ooj0jn5e9khLMvSxY4LwvlbE9jDrqvEGEqT3n8ss9
                      TKWgPLPMnT38Puw8KPN8PIqrMb1gyYy7APg+u1q8C70gNyW9Msg6PZoKcz2NnI49O2HEPVJOfj2Q
                      VSe8EI0kvIaLSj2itAw9l+W+vdVUlL2U74u9X6jDva0rpL06VVM9g3eBPZAjbDwAPg+8eMbMvRge
                      p73f4Yw9DU14vSgon7xp/4E964rLvYJCSj1QqVI8QNtuvFkPkz1jmXG9gG+vvHC0UDyQzTu9l7mG
                      PajpXrx+NgM9sK6PO2vymL1UQNS8r4eFPR6QTD1NlSS94pEUPT0Agz23Eq29rJamPMDcLLsIT7w8
                      EIQWvVIhNz0yioq9Fws1vfiJ+LxGcVw9fuNrPcpqcD2SMlg9/BcYvaAOfbum9TQ9oem8PRWEnL16
                      GGo9W3S/PT1fx72I3rK9EK8nPO3Egb2XVLe94IldvbAyRLxImbO88gksPXJ1OD3lXre9zBb3vKjJ
                      MzzQDEa9vgZDPdK1ej0gC4a9OeGMPUBwHzy2oh49UkpkPT3bJ71S9oe9WF9GPKvhtD2oZoc8hObs
                      PGzXCr2iFw49gWyaPUbZaz0ypFQ9iS+GPY21vT1WkgU91aWWPbiiv70hFrw9P/GbPWgDSTx+GyU9
                      nRGova33nj1roso9VUK3vRqJKb1Q7fg7TQlTvdiprb1vYZU9Z3mvvWKyPz1Wvw0902ouvRC7NDxK
                      jci9YlWhve1Kpj3BFKo9QDBHu44wUj1ie1w9wlJ0PSCDvTuAkdM6akurvYaBPD1nu369EnU4PU78
                      UD1XCCu9GbSGPWCEbbswxbg7+DGKPLO8zL1sr9q8gCC0PBsGoD3zDaS9I11vvSxR27xACYE6935A
                      vQ6/YT1w4Bs8sKjgu7l2jT3T66K9Tn8pPZlvnT1GaEA9RDj5PEpGcb3nkDm9ALALOah2sL33UcM9
                      nCzYPC0Qh71IMZ28otwAPTo5n70yVC497FmQvL1ioj0T8JY9eSq6PX6YRD2i1109nns6PdLpQT3w
                      NXK9xWDCva5ioL2qDh69JpAbPT21ub3ZN7I98L2VvQD5L7rQ4VM8X2fCPcCjr73W9DA9Avd9PVos
                      sb2OuGs9Iml/PcDuKTuaNZO9bTubvWBrkzvUf7K8rSlBvTJqTj3aYbO9JDbTPBi8qLxjpbW9p0q6
                      PSBN6rvKw6a97Om6PMz01bwmY38988ydPcSeA72y3I+9w+6xPdp9Mz3n3Ic9DbMhvVZaqr2et2I9
                      uDOXvJA0Pb3YT9W8H72DPcgAoTwAVWw6+o47vWJPXz26+1m94Bq8u3N5kj0HcIg9AB4WvfN/pL2b
                      eJA9klI1PUEUhj1wvDS8wjZtPR2rWL3DsE29yUulPdbuLT1ScJy9AOFEukhh17wyoyU90AXTOyAH
                      mLuAMw080GOvvXA3nL0mMH49Gp8GPQ1zhL39yUu9Yy+9vUgZkb1amXg9MEglvXQFvbxgvpW7YCyM
                      verTYD2qIgy9DYisPWCzC7uvG7o9k1+ePX/0sL2UdOo8A0WdPdDNtzshs709MqQ2PUaRnL0MoMy8
                      VUKtPVLwUD1nVoI9ZaXBvUwHyzyqjgI9kNc3vICFobrwEn+9dzFzvcDUAbtAUme91vxvPQ6oWD1E
                      DgG9GlltPTG2rj3KdXa9gey/PQD5vTxTmG29JfS2PV3rtz0E7NA8mr8sPW3aiL1Dbmm9iDzuvD5+
                      o73ssqQ8e5GlveuhgD3CAp29YyVDvWqKCL1A8ze8B8yaPaTTh72weHO8lP+4vODHyrsAe4Q5Onix
                      vUAi4LynqII9jdBnvSr6sr2KCVQ9QIZSvRLYJj31b8i91mlHPWFsmz3ouaS8Y6V/vXL6Pj0IXsu8
                      CJOwPAZgkb1wQRy8ebKsPbpOw71Dj409wjdUPaX3wb2D2oI9bOr8vJh/g73AphS8wkRSPR1OgL3g
                      Xqa9oLKju4DeSDzIFsu8sCT9u5aQTD3A1QW8wBAPu/TgkjwAoJa64CuDPOrnCD3SiFo9uB6AvDsI
                      lr39hzu9N3IxvSrZKL2QgzS8HXK4PRr5Cb0T26492GeZvNCa5LtKIhw9ADNlvNSCwrx/4Yc9bTmd
                      vWHouD2C/wI9lG7jvHGDlT0K9E89WYSwPYoPID3Dxqu9p7ZRvTwghL2swf48UFc9vT2/aL0BN4s9
                      /6HAPTNHmr0hxa89AbGbPRMrxr0q/Lm906aSPVBz0jtVE8g9RNzpPOpNFT3ki4K9vhlWPW3kLr0u
                      RKi90TbGPbYZKj2QpSk84zE3vSMzNr0wJG28U5SKPcbJmb20rMW8g2MyvQE2xT2mapq9UHnpu1zM
                      8jwaFz+941RQvQDBbbxHREm9imwSvUMOwL0MiNm8980jvZA9IL2A4QO9E2pOvcQg/DyuNwY9Dix7
                      PQRv2jzfgMs9aPs1vEJ8gb1gUfa7dkUJvV5DiL2a2bS9Y7DEPd79ir1nU7g9ah8Dvbf0Ib0t9WS9
                      4ALtvBRjyrytRUu9sC6WO/g/rbyKoTK9TGGdPAv/xD0wLrc7x8+HPQ9pvL28Ldw8WPFaPC3qXr3w
                      WG29ju+Rvfcqmz19D6Y9EcWNPYCXiDwAj3u9YQaAPT1CHr3ooTa8EHh4vID1ybtY2pk8+hIIvSge
                      hjwQ2AW8VauzPU5oYD2AIKA63p54PaIbAT005c08qE/APGj4gryv8769kp+4vWAAoTvIjoC9cspB
                      PVchb72KuRe9xhkWvWVsrb2M8bm8kIJXPAYrJj3XnGO9Ui1hPaKSQD33BsA9nf/JPc+omT0YalK8
                      zIvovNqwVD3kb9I80zGqPQAlZrxMK8Q8Vdqave05RL0AnYg5RaPFvf4pHj3HWiG9QyI6vfmssD0U
                      +5C8sy2XveOyuz2YkFm8QtkBPa4FTD2lh5+9auNwvZnYjD0BmIM9uKuxPFZcGT3rnIc9ENobPOta
                      lL0qxjg9KIEIvCrFLT38C+E8AJ+nO7DHjTt7rJu9N3QfvUBLt7zwYkC92Ho1PKzaCb1EWPc8zyjC
                      PQO7Ub2OQ2A9R6OsPWu6zL2UYL68XeaXPY5Zgr1MGuK8AlAtPSD02Dsjjb89IrOcvTR0ir2oodS8
                      bid+PfIeXz3KhGW9dI2dPNMjqz3ofYE8rTqIPbi2qr0D8z+9ovy2vaCn9jsdNLQ9ULylvYjoljyA
                      J8e7H7bLPcmPhj3Q52u8AHM1OxHKlD0qEaa9QVu+PfcOXb0wFci9QHAFvdpKAb1naSq9jEKdPKkw
                      jD3Ugp684FWNPCBZI70Wr3A91TuLPSYLbz1zbrG94PKUu/Vklb05J7w9I0GqPUL1Oj3aA7O934ay
                      PTZiTT0Ivb08yuqIvQ0Rib0HYbQ9u7OIPbr0T73icBc92svAvXWmuL0YYoC8mwKKPfI1Uz3kUAG9
                      rIe2vOGXgD0jn1S9ItGlvZRVi72eXQo9QoymvQjflbwP1ci9KmkDPWhsozxTsLK9fbiwvbb8dj0w
                      4Ua8AHcAurYibj1djEO9Grl+vdFOsz0+Ul89UE/pO1uOjz0nCJg9Yf6lPUGBoz1iDF89SrNgPTDc
                      /LsAUEM59/STPcCQ5LxnfyC9vQ0svaD8Ibv4kvC8YAJ+vZoiMz0VZ4i9AIR4On+hhj3oYQu84N24
                      O6dtJL2Ae8w67A2DvQJiAD2LCpG9cIszPHaDdz2frbq9yxzGPUh07rzoyRQ8duBuPaCjf7sunE89
                      CHm/PJocNb0p+qk94KFnveqVnr3U884881+1PQq9jr3f+Mm9HrCAvVhVZLys16W853xLvSc9xT0K
                      2Wq9YD/qOwBGj7pPZsc9+TnAPf0iZb3NKKo9g7ZkvSwS4Dw2uEE9Kye/PcAC37qSiQs9U9pyvZXl
                      u70Rz6Y9gClsupONkz3YwDY8a9SEPdGfpD2nyjq9kwMfvYPlxL0XpUO9Fw/MPS2Goz2gNje9/akk
                      vbJfRz0dQ5W9UZGCPfQHizyMieg8ZxKhPTFKmj1A7l+7U7a+vc1QRb3amig9/dCXvdwq3DxSmXc9
                      cL1yvVprED3sK9o8bPrtvMjGyb1oTMG9hnUuPRCsGLxM0rQ8AOCFPFAuor0M+Oq88PJ1PMjX5bw9
                      ELm9CL6GPEfNiD3iP4C98tcDPZStpLxCinY9/vCDvWGumD2Mv+o8ECBWvG7TSD2p3J09kpsUPQZf
                      bz2HCow92uqMva3qtr1gwS47qkoavRVblz1lMMU9zTqrvTgVtLxz16Y9QAmtPPKZAj3x56k9Grt7
                      Pf49mL0zn269vTnEPfgSlr0w0xK9juGMveeHwz0UDZY8iBe5vNSt8zzoTli8h9UxvcnCwz2w2EM8
                      jQGmvdMLvr2kheg8iOWFvHilxL3A8yA8KSfHPZ8dvz3wono8N+FdvRqUaD29Vo29bmaYvUrpVz33
                      Kla9UDZLvDDeVzzQ9XC8SpWpvXTWAL1gIOg79S+rvXU8v719Tco9UGoXvGEIpD3eUl09B6C5PUi5
                      6ry0Dfq8GkESvajbGzyHGcu9ZqQ8PRmNwT3ndrO9KD0/PPj4qbygFbo8KLqEPCA7ursAKSC73HDN
                      PB87rr2AH3e8dBv1vM+WiT3MlPo80sUiPd7Wcj2oVDi8aDaUvMKeCj2Dni29mjizvbsinz0OAnE9
                      fgoRPVBemL1MN528B2muvY8FyL1gKla9oRaNPcH8wT2aFq69CfmTPTfmf725MYw9x1zKvQdAYr3L
                      0Io9xj5aPYAxwbzho6o9oeOIPfhAu72ITqe9ih3BvagNx7ztGKq9wMD5OmePdb0CYwM9QRq9PSYr
                      CT1K5nc941Z1vaJPYT0HYas95aW/vWjHHryOnHU9vZG9PQuJpD0EYBS9xIPvPIALlr0YM6A81aCm
                      PQ4rVD3gap27AOodOTgsqDz7YsK9GK/hvJ+imT2ALpi9DUq6vdleoj0RKrM9ZiAnPX4YCT04Wrk8
                      Lc+3PQlkqz01WoC9qEOVvZJxDD0IVJw8PayOPTgwwL2hEbE9msBvvajtKTyAhFW8qL9zPGisvDxX
                      tJw9WK06vFO5a71F2oc9MwV4vVApbDz4q+K8s5y9PTBZH7y4EYi8yrC5vYoxSD3Q7L87cpxGPR6a
                      Vz1AVxm7dQqSvcDaxLwgZ1K9LbTLPa8yhj2SoGc9KEOOvBTcgTzXD0i9esxxPZ45q70JTZs9ra4l
                      vWIDHz0q/hU9+LG/veVUrT0zwJ69HEOKvWzw47wvXLO94FSQPICevLoedpa9bKP+PMAAHzzaX0k9
                      NIPhPPtwjj3CdQ49Z8tQveBbXL1YdHI8AtPAvfCMtL26PQK9gNS4OvDicL09t1q912WtvZZZoL11
                      i6e9iFiLPAN9nr1c+QW99C0QvUsikr0g7907GtYnvXHsnT0DK7I9WKXXvDqrcj3YCMS9JgEKvRg8
                      FLwiU7K98Bt9vYTT7DyoIhO8N5c1vWraIb0lAoI96mklPQO8uT1girO83XSHPVDFw7t96Z+9YWaM
                      PaB9MDsTiCC9KrJ6vQALZ73gP4S7UChBvAC+Pjzzanm9bgcGPerEOD11KIq9lKetPAAiFTvSOXY9
                      UGb5O0pgxL3DqKc9MvWtvTUSvL3KqGw90OP1u0CXBjzDkk290TjLPXCPUbx4+qe8/goJPZ1Inj3A
                      XnC8GDWKvTjIkDwNzMs9uilfvchtojxu3Ym9wG4NO/CgXzxisTM9GdvAPW5gdT2+FIa9jZaYvaPF
                      sL2gtey7IXu7PQBlWDtm00o9ADrSutYFPz04uMI81YPCPfmUtD1VLri9AIzTOm/CsL0YR1M89WyP
                      veLHqL23JMO9Eu5GPWiXprxHN5o9cLe/vdD/bDwtC4i9kN9FPADkhLwbt5E9InFZPS/Ux73SacK9
                      leTHvfLGHz1ipDs9YcmOPYCU5Tq6Loy9YGrmu8c3SL2njye9TlWDvde3ij2qyzu9LNG3PKhAT7wA
                      7208oBauvdJyTj1SCjM9oNq0ux1qyj2Fy6+9GDOsvWZEB71VMbo9QAHHPAC2ortnH8O97T3KPaBA
                      yr2OrRc95iCmvdDvaL3DkiC9Hf2Fvb15nj0G8go9gOpaOrkOsD34o569vBDsPH4/iL1T4ca9En9V
                      PfxMh70eaRY9YsO4vbrpYT1YQXs8tYu1vWNvK72z7bk9/afKvWPCmz1qOnY9MORavNnxtT23yTy9
                      lg8JPZXFob1zTnq94EgBvSLcID2LOLo9MgAKPUpIYD16XR+9udHIPag6qL2Nisy99tOTvSKDAj0r
                      Qoo9wiJyPdJUAD3PN4k9uAKlvIQ//DwUCp68x3vDvfpBR73dlIm9cFUUPGBfrb11xaC9/eSGvWjr
                      pLyufKW9bqk1PcBwoDpM+qu89NiEvWLnTz0beYE9/eM2vYC14rpVpMM9OiitvTQT1DxljIU9evhb
                      vbNXWL3ARj+76PvxvKi8Ebw/yoU9dtdlPbo1Rz1Tfk69sAmrvUzVhDxoby28Yn87Pdd3qT262ES9
                      gUKFPQYRYz01r7I9vS+KveGDnT1KChs9Ro+IvawMtbw3HMy9uuR7PXBNSLxKOTu9fqNAPYewL719
                      DFC9mML+vNNaM73IFpA8Yy9jvUYHcz3YVzu8UJyvu6f9bb1Iqb08KMxvPKLVWD2b1pc9jeWdPRKZ
                      cj2JFJU9wD24vSPTwT2JYbc9FhaOvdrxEj0HrMM9TZgpvQFGxT3E9d88FhcYPWfivL3tuhu9cCtG
                      vZWIoL0omFy8UOzMO8D1sjxgx4a8JMiDvVgSc7xULZy849KNvYjrrTxaeL+96SvFPbCCX726E3C9
                      RymaPdr7Sr0gpNO8uBrEPChYwL048Ze80ISkvSD91TuiKys9UFWvu21XQ72uyqa9DSwaveSSzjyV
                      NLS9srInPUAuMbzLza69SlZQvTYrNj29usM9gIaAvNTHwTx9grE9ghotPdtiyj2qY389k6XLvVbu
                      mb1F6569NZ+UPXEnmD0kFuE8s9CnPbC2ujsq1TI9AEImvJdZiD2CvxM9Wa2RPbluqj0bubM9Yrwb
                      PReJsb2Sxaa9wB++vOBpiDugR9q8jJyYvDc6H70wvAw8ur4WvciDtbxtTh+9iIasPOicdbyMrxS9
                      Jz1fvWGOtT2/N8u949Uhvc5bjL1N+V69unVDPQB2RLlYmQE8ohVtPQC+yrr/ELA9mMmfvaK1LD06
                      +BA99MLYPFNIq719/qc9AEhpvND7l72mMAQ9x9ZmvTLULj3YxW6823OoPQCFQL2KbWS91t2IvfsK
                      rb2yvR09qhkAPcFekD3YOqw8UAZmvZ/ayb1l0a49M/Rrvaxjq7y01q68QdWYPZbHUj1rspE97D3y
                      PKJMgL1H16E9ANuMuakqtD0QOh68WeenPXPdc72gq7W8zvtyPUyRj7wNSMc97UQ5vdCCur0gHF+9
                      WJ/NvOfqyz1CDFI9zJ7ovHOfxj1QcsO78QWCPT3fQL2aGBa9N5zMPYaqOT1k7QS9AJLLumA0mLxz
                      aDO9Re+UvUWjjD3g24E7ej5DPaCxQ7tqi0I9sEAWPBk/sj3Y57U8UUyrPZVvtj0gio88rPnwPC0B
                      br0nTXC9pZ+dvYBp2jvoTC88ymWfvbMfiD2CDQU920WUPaCVWzuwG6S9qAKuPB+hmD1KwUC9oE5S
                      vbi1mbzdomO9oPjQvFNgpD1TOFq9gLZuvCiNk70ivz49MI+iOxAxIzzefXk9pUmMvcLMOT3ZBKU9
                      CH3gvAxkgjxVqsE9yFGQvIK/KD3Wnqy9enAevXbRDb0KQ4u9kKUlvMmtrT1BfZc9bP3RPIBjCb10
                      jaM8oMQMvWtMrr3GE1I9jo9oPd+KvL0MCag8Gp5tPXR4pry0Ouy8DvsHPUv8vr3e/mo92Pz8vDGS
                      pD2Qf7S9MAeqO7pWBD2Aw+e7AqlKPWhRyryAaQu6IqIMPT15eb1667K9VK2MvbfNyz0ocfe8R/Ko
                      Pd4Vnr0AR/S7FPjVPELmvr3gsZy8ALaxufq+Mr2R+aE9IW2fPT2Qd73QaKc7YXqbPcAXcr2xxMQ9
                      eNu3vZr+ez0HRXC93StlvT0zHL0zRUi9gGVovDM+br0sn/q8ucavPVCWeDwevmE9Myh4vSConb0Z
                      zq49Xq2PvRi0Lrz9I789YFxdu5mntD3wTlW8ihq0vRmswj31jo09U6gmvQo+nb34K4a9hFOIveKZ
                      Ez1QB3Q80O2Ku29Us72oGhm89xNivRnutz00opC89VaWPRpSW73YDpq8XitLPToxAL0w6ly8QMsU
                      O2bYYj2SDJq9oHqtPEIiWD3ohr29VrxZPWhM1bxiKgw92I6KPHulyD24lbS8Fy8mvdPQxD3NZoY9
                      YtstPV5qor2rAZ29dNDqPPxQib0U3e08tFysvKC0DTt2IxY9M2c6vebjbT0+EYW9wAgMu6bkmb2a
                      L8O9YHiBvSjMwr2tq169VGLaPPK/nL1l7Zm9i6eOPbgpkzzI0Ne8u1yfvYA4BLyAiye8R283vSwZ
                      sTzfLby9QJHQOtKAYT28Nfw84IO0vYBj3bxawB29zb03vYCYD7yyEm09MMLqu9Wjpz1+Q089vq5i
                      PQAUIjkAbcm52IlTvLSc87yeFVY9sPVavDcxIb2n+bO9hSixvdUIzD0MB/I87RFOvaeWY72qGDo9
                      vb0+vaOAsT3wo7e93To5vc0VoL2YDIu8x0K8PQpHPD10AdQ82DE7PMu5rL2tKo696ohMvV6vgL36
                      +Ji9ESacPVHhjz0HUDC94NorvTbTfT2Aj3o8MK9wvWwy7jzZu6E9txhSvfrvAb3qFDQ9GM7AvOi1
                      6Lxgkyu9GNyqPPD+fL3Rxrc92duyPfQ52TyBWqA9WhuivUrsqb3YLO68aDUUPKDJ5btG+lo97V2b
                      PXlHkT3anz89ALrSusq+db2mFjI9ChlHPWgGLzwRZMo90JHHO5asWT2rIsc9tCj4vHUwob2LJ4o9
                      oDlBO7RG1Dyc/tM8BtRFPSKNvr1w4bC934CzPVB8eDwkid08VAy1vBIUt73RJJk9WmG3vSrGCT39
                      VqU92H7avBGAhz2wuSe9y46yvcq6eT2MLN68A1zDvcoVlb2NhaK9xaiYPb0Wrz0wDW08gh6vvdLL
                      ET00Ldg8APijuyoufj3gEZg7NIDaPI/KlD0AwJs4A1A6vYrKMz0XAzq9aD0mPGKOjr3HGj69A0Rt
                      vW4IpL1l16C9mKpJvI4eqb1A3Rc7BciPvSiQgLyjT5k9NArEvGy4njwiETw9EjFFPZCWGzySGDg9
                      kzyPPecJoD2Uw9o8mktUved6VL1xPLM9oGaVvSc4U72stug8IjwdPT4Cqr1oZaa9ZY+4PTc4Yb2g
                      Vq+98vZAPYBVNbw4E628kGAIvYgIrDwYWky8gtIvPde/Lr2TcR29AgmnvUzr1TxgRfW8kCEDvNCz
                      FjyVi8M9k+FvvWBQRzu3aTy9WMCgvE6GED1Hesu9IDmYuwDyx7xQ60E8yLjZvEEcyD2UE8Y8kVvK
                      PXA0dTykWYu9YiwWPf3jIr3OzBQ98CA2vZeZc72SaWU9JhUxPW0bp73IErm9kE0wvUAbbbwFFsI9
                      c4WZvU2GU739Zjq9Tq4SPbA+YL2Azba6SIOYvIA1ezqogkM8oGqUO8r5nr1DwMY94BHXvATUDb1I
                      I9e8ID6nu921e70eGDg9CFK8vIoWbr321ge9PmIJPUSKAb1YQrE80N6ou7N3uT0AE6c5sEuDO814
                      yb1UlbS8prpbPUIAbD1C5pi9n5muPeO/hj0x/LA9EI7Gvfnngj19iKw9gG8UPMHmjj3cx/A8GUSl
                      PcfFOr0C6bK94MyNO/Tb0LwAJVY6gAE3PIjcqTwRIqw9q+aWvc18nD1YZby8AiEUPSa4DD1awEO9
                      KNxtPGcUrr3QwmA8QOABO0AtnTyWZAg9KAiyvICSo73ApF28xHX0PBBjF734wqq9AM26uwAFLjtc
                      4oi9CG7DPOgzqzzSJTA9+cnJPQDXp7yO0pC91eCLvdUVkT0vQbQ9svcTPfNxHb0wSk48/i6bveQk
                      6zyY1NG89tSOvSL9WT2iqy09bhyFvbN4jz0jWJA9xqdhPSUcuj1iYkw9ybKwPTDazzuOrCQ90Kp2
                      vRfthz1XIss9yHXLvIfpvz34XLO8jLXNPNUZt72gxXI7Pgs0PYCv0juonmA8MIX7O7Q7Ab3Khpu9
                      f6CcPf1Mlr3oqEI8IdiEPcIoKz3FWY89+fWdPXrLbD2gNJU8ayOgvbc5Mr1D4Me9HoZkPej4VrwK
                      ZI+9zaE+vU0kYr1/LqE9reNHvVD9bzz9Pqo9IDeUPBYEET32P3M96vlrPUGpiz3C/B497EuzvECt
                      ob1THsw9RoYKvccXjT3aQko9+RzGPYIQQj2YDAA8/R/IPWwai72A8lQ8iQq+PQMBnj0qXTa9s/ao
                      vYPJeb3dzq89MowLPb5uFz0fA5k9aYOjPcCPNbv55Lk94koAPTN7cr1AQAy8+fOwPdJWir3PCMK9
                      Y3K+PUB4irysY6m84k0PPdQWoTyzDbk9dooVvcDribyRcY89xuUePcUpxD0pHLU968rFvRrMI73j
                      yJQ9IAuTvRnFoT2AyJc8jV9YvSjgu7wKxkA9W2GRPbCkQjyU2JE8/lpYPb8Qs73vVcQ9QIZ/ve7M
                      g72IZo69oBSNPPopAz0PqLc9/tZKPVhIjzz58Jo923HHPU2+IL1FrpO92ZShPaCCBL0JmL09+k8F
                      vftDmz26h8G9oSrCPW23gD0UBLu8+lgSvQmAnj3gHN67QhcCPaI0Sj10AcK8QJIzu8KdFj0oUKC8
                      AGEmOzC0sjuKXGO9eFWuvYnBtj0AqOk5Q2GyPUqLab3AQBQ8zXNEvWfMJL2AFea63w+RPez+grwK
                      BIy99w+QPVCfQTz9Hba9EYGlPewBhjyMPe2898RqvYCT7Lu/gqA95H7NPPTSyjwoVa28JmhwPfZk
                      p734cuW8vvw5PfTi7jzQfJq7GuB2vZDnF71JPYQ9GhF+vWh1v7wK6Dc9IBeHO02nkb3YG9W8TPfM
                      PGgdTDzaHl+9PmWDvZGowj1Qk6a7Qm8ePcCatbzD55M9ORavPeIwMD3276m9qAlZPDlSuT0AI027
                      twRBvTTpg7y6wZC9tIT0vF38Y70S/XQ9TRhrvfKRUD0AmMu5ITi3PQVQhT0Aoq29uneOvSidpr1+
                      kEY9cKwIvTeTnj3Lx509wG5evQMQRL2mIaK9YgIqPRhY+bxu4wc9yaKkPSD0oTysQOa8aI41vNmZ
                      wj2yAca9kQ2dPWIPUz2oI+O8oEKuvHD9ebwq67W9AE1+vRoWgL1i8H89rAWqvHjg4rzNXFO9WoAG
                      vUG9kz1/Pco9gZCfPf1dlD3g7xu9Yvu9vffAJr2AoaG7gH7FOiDUhrsow0y8ZgYIvZ/IlD2AooG6
                      0AQNvHZ6Hz1Kkxm9E+m3vZ3BxL1hZsg9Y0nGPQBk3Lqapaa9AiakvfLyRD2qjwm9ACx5vVJCGD2j
                      nhu9VutzPcJqID3AMsu6gNyYvAaeZD0K00291d+OvQOfVr3Su209EOoJPK65KT1MI5K8YBetO0qH
                      hL3Z2Jc9YLjMO6oQTL2gv1S7UbDGPRmohz0AZJ287N8XvVcgwj2zqHm9cjODvSKbmL20cLo8VrUK
                      vUAqA7z0q8I81sJXPYCBhjsg/MC8YVWxPfI+Ej3wtDK8BBrPPGicmDwTlr89/iZRPSD2OL0UqQ+9
                      bHjRvFqPPL1YFpI84Glcvdntgj3osZa8YGmDu+bzJD0Ace+8lxnAvT0fNL3YFii8cm0OPQBWXbzg
                      7tK7xCniPLr1D722UGg95ukLPcBeJr1HRSC9lMi/vHO5pD06QGm9yc7DPc09yL1UaOA83o2nvfYJ
                      WD0nYx29AM5Ju2BMi70sCsM8MfefPTSvyrxQ7YI7OQnFPZAExL2GKBK9ObSvPdTT6Dy7EbA9mqms
                      vVi0SLwJAYI90Zq2Pef+wb0ALdG50J4IveP3J71+4zA9vYU3vbAEI73yr3c9iR2EPRZTTj1Xj409
                      sCpOvAezkj0/gY89zD2LPI71n72g3gm9vrOgvc6SAj0U/vQ8I92cvTQ5krzklBS9cig/PbtJsr33
                      dCq9PBzgPDO8k718jxS9Kh9hPbKLrb1yaTk9AjwHPcBUJbxGUaq95+k5vZ8wnD3ZEcY9bOutPBvD
                      pT1ASa29ZVyxveJSJT2JzrQ90qCYvfoBeD16YCU9yGb4vL3Er73/uco9FEOcPDmtjT3QSou9cJqI
                      vSsTjD21nYA97bMhvWB9fDvAR4+99LDrvPNgor3oJEg84HGvO1TXwzzUXJK88jBMPWRB4TyO0Cw9
                      gKU9uuZPbT3g6h29JPXuPO9ZqD2gYfu8gKmAO7iEyL0GlUY9IDvbvOBfpjsExug8OFOOvUo8E73A
                      UHy8NjsqPZCIIbxH36I9ACQcPAwn67xgd2K79Qu+vQdQRb098r+9AK0bPPTp7zw6+3O92UnFPdiW
                      y72SPz09lYSHPV2Lnz3AJW+96KugPP5WRD0gK529oMO3vAOMub1qlx49uYSYPUyVobykPRS9AmhD
                      PfKPcT0GAGU9og18PWbBlL0YX4s8aXyaPYoJOT1Se6u9hm0DPYqvQr2YbsC8pBPgPKj+Erww0sS9
                      AOCiuZ9qqT1qYx09AA7vushEibzP2K89AU6QPcDtmjxnR8G9iPisPAIVZz3rULs9mJE4vKJNQD3A
                      +VO9gJ4jPMB6Ur2aFzI9hLz2POowBD1peMU92xPIPSzm1jx0baw8gEOsvei5grzAtRe7wEfEvdxk
                      3zxA4Fm8ZwayPaWMmz0ju3a9DMPTvNiEy73ANpE61sdPPQLGYT3Ma8K8AAy3uspbwb2IXcM8AEry
                      OWbeq73vkb09KEIxPEirrTxAGYE6rvsGPa1jJ73w2m29FOOJPOqJlr2gmYy7XRuDvUArP7vQ5zC8
                      zF+8PFgHur36vwW9YY+XPe9TpT34K8u8W07CvWDLkr0Cdmg9Suu5vZKzAD2AzFs8ylVEPQDEN7ln
                      iLc921vAPcMtn73Xt509E9Wqvc7zHj2cpPo8IFKGvbcexj2+K4y9WqcfPaz3trw+xlk9r9aoPcCo
                      ozwTz7C9V+THvR0goz3Ua5U8dc6SPZbmZT39/li90zVevbSm9rxVGpy9LQOCPdiUATyA7ba89UvI
                      PQAA+rkKBXm9itpsvRrADj3ai049+niIvSGWyT1tpb898LQVvEP8mz2IN6284jdpPfa6AD1ypyM9
                      LZeqvW1gpr0574w9AgRtPcLcw71oNXw8QASZvIrjVr1INcE8/C/4PCBoEr1Vcoa90JIzPJikszw+
                      nQw9UNu8O5plAT1AX3+8Sg2bvbrzWD2DcMY9puUOPQC0L7yYww48ghW/vdX1gb2t8C+9RrtmPRWc
                      xb3DX1y9h/lYvXu3xr2sEOM8QCZpvIbkGL3wBja9pb2uPdizVjxeuU49Oa2tPQXaqT1tamO9VJul
                      PAAxVLuNVsw9bNW0PEo5Yj1vL8a9SQKIPWGchD2qXKW9eHujPHIhdz3Q1Jc78e22PQBBTL1F4IG9
                      apdqvbDJVr0AORu6bcGUvWjzNDwarmo9TalevWgBV7wWnYy9QIwwO24hcD1elZW9xd+CvVi3PbxO
                      Ql893ZaFPSshur3+A1k9ZOD4PLDCq7viJzs9N+tQvWCDKbuArpq61D7fvMT71zzSv7m9Ig+fvd+B
                      uL2gK+u8YKh3u9hRor3s4r+8ceGBPWcFyL2S6aW9DVp8vYG+hj1daoU9PkmPvf7lNz2nprk9XgAi
                      Pc5Em72S4xM9AHjpvADNvLywf8M7LH+UPEclmD3RXKk9KjfBvdAtmb2qW569wEoQvdatCT1Nnqu9
                      Td2yPckjyj0AU/g7/UAuvS7RET1AzSG9tlgLvVTECr28/f08oxGtvZ3HaL2oV6q8TZmhPYVEpj19
                      G6s9eJDRvArDYz1Y8lc8aRK2PSujgj2g2+i8EhurvU1syb2zj2u9Pw+lPRruer2ytlY9AEyxvEZb
                      nr3lX7S9LWGQPVTVsLwioGU9un4svTAB1Ds5F409rCakPHIGST0YBE48AAGgvArGQD1AweQ6Jeiq
                      PWqKC72AOSG9XjQzPaiAybygjpq96tzEvZ82gD398oM9Eh8JPSxXir3yR3s9KwKlPQ9Gv73qvTU9
                      gyWRvSfiub2A8Mc8pxeXPUDhKztKSk69uK/0vMAEkrxAC0e7bGexPDrtLj0NzB29te6CvbfWMb3A
                      r068NyuUPbnNoT1MBIa8Y8uavUVhtr0wWI877lIzPYBXMLzVWq69M+OxvczVlDxDpVK9XO3jPKoX
                      Eb0jtHa98mEbPW63bT3syPm8J3nBPTKqWT1bHK69qtwBvfJTSj2GhYC9m569vXsQpr2ATGa93ZdV
                      vZg0dTySA109Es13PYMSeb1oymy8CdKjPSppGz1QTX29FCOEPFLOyL2Id6y9hSGaPaDkbr24pZe8
                      j3G+vZT+i71gVNS7bwKHPapIcT169au98KIwPENtcb2gohk7RLzWPPc5xz2Y+6A8DF3mPH0rxr1V
                      JKM9lsMAvUKHRj2C3yY97sQbPVDfQDwp5ME9TTeFPXiN+LwahLS9QDy0vcvXkD0Fz8c9lqwUPcCT
                      PTxRooQ9AJR8OXD5vr2BrMs927XCvVpePz2fDoI9aR+OPUBJQzxoK768w4S4PaZiFL3h7Kk9Uw9l
                      vWY3az3Qs7M7NGDTvIHwuD0FQJi9iMTNvFjHazwOJgw9DNW0PPCLwL0BmLQ95DL6PGVXkL3JAMQ9
                      lbu6Pf6rWT1RXMI9MKTKvQB+Ob0g73y94Q2tPX9hoz1rPqG9JbWYPcBk4boZo7k9oGFXOyJKr72Q
                      yUg8YCFIOwgEsDxbT8o9+vVDvaMsjj1qwi09gGQNve2frL2xQ6k9enooPWH0pz2o6qa8eHHQvOFL
                      rD1A6cY67MD1vPfFtj1E6ew8ykkGvS5Dhr0Z45I9xm+TvSiDfbxWeBM980GYPdqqKT1+55C9AH8m
                      POIYdT29Tqo971m+vYRM9zzDPoc9Atyfvb37vL2aHZW9SxCnPaBJX7t0d4O82GQnPBP8qL0sAqO8
                      FDXfvNDQX7zK4AS9LOr3vPPqkb1imiw9WKTlvAn4yj3ZA6k9TboevSIYQT0WEFg9piRHPTdDqz0h
                      X8U9NJbZPF3skr2YVSS8jSWhvYPYor1J7sM9JmQkPV13uj0AW3C8gq97PQDr5ztZ97Q9Q2aZPTaA
                      az2qqSq9zOrPvL4JDD3c0N88wGVbu0o6pL0Q5CO9sIdvvIa4DT2Ahv28dqiOvcCgdrtw0hK8MGWn
                      uw40k73AojC9NSeovYN3xL1mQy89KBKVPKBKuTxAOVO7M5+qvUAWCzyhisc903LGvfmavD2YG7e8
                      4N2QOycjjz2itwI9vQqOvVi+hL2t0ji9egpmvQDRyrv7/Mm93V8hvavluT3J56I9Zb2WPTRNm7wA
                      ng08kjp6PYjvsrwA5pM5lliIvVX+kb0OZqS9rbA9vbNmsL1ESdc8IxqSPc08tL2AMe46LXg9vQDQ
                      Wzj+iIO9Y6devWN9xz2y4jA9VtMsPckbhj2Ab/w7Kf/FPUw20zwleqa9pGzePGZ5Fb1bSZK9PeK7
                      vXBkZrzud3Q9WxqKPf7IMT1Hjas92CKQvQ3vd72CFkI9TzyxvdQpnrzdilu9oCTAO/TQ+byKIym9
                      +uWxvd+Njz0SM3s9
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg5MjU3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1Mjg5MjU3NnEBYS5kAAAAAAAAAEB6ebx6bgq9r0rGvagsVzxgB7+7DR2VvVa5Vj0Amxy9
                      gLRrvLMbVL3dLsy9AE0SvWqCsr0wXqw7giy/vRDdC7y9IcI9QPrBvAY7aT20wfq8IAE9vcBb7LxT
                      1509WOEZvADV5DtoyY68S2i+vZQowrwYF3s8ULGJu4CbKTyKqbi9NSrHvfOLlL3iJmk9PdaXPf5l
                      BT32DhO9ThxjPRc7nT01Cqw9fYS3PbY/Oj2Iw4u9dUyLvUe6W730gtU8fXE4vSzBrryQh4i9YUy7
                      PdSllLxoTsG93o4rPWDDhjtoFrO8bHXrPMpcND2Ada08rA2KvPVlwz2udwk9By1LvbhIkb1mIkk9
                      MKg0veViiz17AZU9s7kzvUJuxL2t9B29VhgLvXMpI724xMG82Ds7vCYEbz14y+W8+v5yvdHaoz1B
                      psg9dFuuvIJGYD1Sup29MT+nPSD7pLywvi+8g26WPfFDxz2MB4i80HmsveZYAD0tCU+9QN3Culdd
                      xr1UhvO8IfyTPQI2Rj0jc4w9w623PdBfeTw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg5MjY1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1Mjg5MjY1NnEBYS5kAAAAAAAAAOBR/7ylu5+90nN+PaCiq7z3h6A9HlkiPbASR73qc7i9
                      0FgTvOLllL3e9G09utXCvedunT0MRrg8sO9nPBKFTD2Y10m8lVmQPadAtj3qPBc9y+W7vQ19eb12
                      cRs9YYu0PfSp0ryrk669v8mPPdjmWzxMNga9lDLhvJBOnL2oUOe80KYyvc8Bjj2kNRG9aFHBvLLQ
                      bD0F2qi9JrZ8PajHgDykBgK91CafPPkgwz2TyJs9k5+lPTTE7bxKqIO9MIDnO+B78bvnjHC9G+G8
                      vZDYOr0Q+gC9yJSvvTS6jzyItvm8gsMTPbzsD72ARZ08LAeAvQ7Qn72jUyC94uKlvcwwrTwcr+w8
                      wINUvQApyDuArnE64AS7PDBvJLzYBE08RHoDvc0lxr3WQKm9khkoPTC6k72AZKG8k78qvY06mb0G
                      bRQ90Kjzu7N6zL1P57Q99SnGPZ2hSr3Uqoy92/G0veyN+TwAWWS7HLv5PK27fL0gun69R2vKPQN2
                      qr0rZbc90LgxvFC70TtUKrw8vhSSvWoAyb0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE1Mjg5MjczNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE1Mjg5MjczNnEBYS4BAAAAAAAAAPg2zLw=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        PgAtPO3GijxiQXk8YkF5PFglDTwobjQ8RABEPEQARDw0Fz08dDlWPHPHNzxzxzc8NBc9PHQ5Vjxz
        xzc8c8c3PKKVyzxPGAI9u78JPbu/CT2aqj88Tgg8PA2qozwNqqM8l59JPGN7Fzx6YoA8emKAPJef
        STxjexc8emKAPHpigDyRBmw8uTN7POXxjTzl8Y08uqItPO7PBjxvJ508byedPBAWLDxBcgs8XMCa
        PFzAmjwQFiw8QXILPFzAmjxcwJo8kQZsPLkzezzl8Y085fGNPLqiLTzuzwY8byedPG8nnTwQFiw8
        QXILPFzAmjxcwJo8EBYsPEFyCzxcwJo8XMCaPBqsVTrdLgU6wE0UOsBNFDqo8oI6yN9MOjeZPDo3
        mTw6rX1DOheOLDoWJEk6FiRJOq19QzoXjiw6FiRJOhYkSTrCkrU5PRKOOVUthjlVLYY5H91AOlGX
        RDqf3OE5n9zhOeBWNzqYBnQ6v/YPOr/2DzrgVjc6mAZ0Or/2Dzq/9g860Z0cOosnEzr0NQI69DUC
        OifkVDqXGYk64jfrOeI36znezlY6OouEOsfe7jnH3u453s5WOjqLhDrH3u45x97uOdGdHDqLJxM6
        9DUCOvQ1Ajon5FQ6lxmJOuI36zniN+s53s5WOjqLhDrH3u45x97uOd7OVjo6i4Q6x97uOcfe7jk=
