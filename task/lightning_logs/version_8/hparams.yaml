N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDkzNDIyNHECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxODA5MzQyMjRxAWEuhAMAAAAAAAC05L09E+psvkAFSL3aUE4+9D2UPchudj0OEGg+YHLO
                      vRYzOb4GnxW+gwUGvlDH5jxezne+FGCrPb4xWz5oCm++ACE0vOu5CL5Abjq+1hLSvRBTo77axi4+
                      8oltPrgVfb0Wbqe+HVSLPsDmljuoPk89wLIsPRaneD6s/oY9PjAOvuYSKb6Qtou9AGzgvYb9Eb5A
                      rZ89onxgPsCimbvej1y+suRwPqZPPL7Zi4o+g/wzvrY8JD52V4i+nETyvZYZQr4U7Z89KB0LvW7m
                      g75wyve9OhsrPnK8nb4mrk6+YJ0zvlq8KD7QW9U9NG/hPRPvqb5zEHe+EuRqPhZmab6xW4s+4VKI
                      PsDIvrzaiFQ+QF3DvVSOmb0x9o8+QFsbPSZc2r3IoGG9/khSPvg6UL2INjm+7zenvvLYbj5ZNqk+
                      2xKhvnRQn77CU1M+cFKbvFPZlb4pPJQ+zEyYvUimJj6YpYS+UNU/viZvAL46A20+mU+fPl2DlT7Y
                      2Q09cN/TvLiuAD2ejB++cH8ovoAWKbsY0KC+gLlhO9CM6zyLJXO+7I3XvRhSg77xCZ8+EPSaPZzr
                      1j2ivjk+EGQzvlpBQz5AYQk9sBW1vCbxHT6uNhI+BDmKPSjobb7PkZs+5GTUPW61ir5/epa+KmZL
                      PjDRV75bKDq+tSqlPv7El76AKyc8k+Qsvt8/gj7L1Au+lXyKPlRrjb7+CFs+nPmoviW4jj4Ahgq7
                      CEt2vpAY+T3wOf69irgmPkg1Cj6rOmu+Or4sPrAWv7xgoVo8JmthPuaLQj7sYau9L9GWvnOQSb4V
                      3Zo+S8hDvggqcr3wCYC+EMqcvfcggr52G4q+bC6svXDTorzcx5O92mh8PtakSb4g05M9hs5VPlpZ
                      Ez54yIC+lNegvoBTSruA9VY7SHZHvqu2oD4LJBy+0A91vmXDpD4fEYO+xhEsPip1Xz7yegU+/JP/
                      vSS2qz0C8Wg+WhldPgA0wrrasFQ+ll7WvYAcezwM1aK96LIGvib8Qr42tnO+3ohzvuF0gj7w+ZU9
                      CBJYvsj9Iz1gzFQ8pslKvixPq71qb3A+IceHPjE2iT7wqqC9qAwzvQDgtTqQT8G9EAvQPfC0qjy1
                      aKM+RQuhPskPlD5AoRU9t9OlPvqaaD7+DaG+EzpXvsjrHL2oAHS+A+sWvlNCH76uChG+RoHGvYJJ
                      BD5jkaC+qP4QPsg0JD6QwR6+PnSnvvryVD7oong9khSIvqBrJz5tbYg+JoUePgLwLz5DC5g+AJSv
                      PaTR3T0i0qm+7DvJvUCwkbzG7mc+0JAivh6/Db7g56e9vAf4vaywpj0fnoA+BsRHvqFvpT5w08e8
                      UBv8PDB4ozwYYiG9QJFzPdTEsz3mpF8+svN1Pv6/FD66xlc+wBGgO/7VWL47Ex++ASanPuD8ib3m
                      eQO+6h0nPqSfnr0QWZW8oP4/vkCkYb0ogXG+jspDvjaJer6KKy4+nEqrvXTxsD1VeKY+pl0Pvt+O
                      mb5Q34u9AFYyvmpVez41Uoc+gi1EPjnfoz6bPEa+6rpFPtTupD06goq+NQ6qPv7zW76A3R47aKEy
                      PVgJUD04DE2+AR6CPi3ojT4ZmIk+9lY4vlB1g73+Inw+QKY+PWjiGz5MLeg92osoPuS5mj3i8jk+
                      2P8XvmAkh74HUak+Gn95PpDSmz3sxcu9qLZUvgDb1DwA1Js5lEemvuYSBT7o2iI92AdzvkUlhT7B
                      /J8+IId/PTC1vbzabT8+EFe0vRZQyr3e6l6+ad+mPiCPib7JzpQ+9W2QPrA7DL4o6hE+jf2kPpra
                      OD5Y13g9I+IYvkhGdb0A8+K6sn6DvjHplT5grAG93hxmPtYeUL64uwo+ykdVPswUvb3eCqm+HGaD
                      vZgOXD1Mdfa9gPhPPQC/nzu+2E6+AGJ5vOMdeL4Qf4S8PYmkPjWWhz7mADK+6GpIPdihKr3i8GQ+
                      PpinvvOvXb5/8Yi+gphvPgCRBDwgvyy9sBoPPojPRL7mA++9AwAuvmAda71wz8G8wPfZPehpP76+
                      HHA+gFkXvXCwkr4wv668GKsSPVavez7AE++7CHZCPWDnuL1ISie+JDqUvmAUJL0AXtq8mB8Vviaq
                      k772ASc+rsQvPq75SL7CJJO+DM2uPUxup714F3q+CG16vlyEiz0APUC9j/2aPqgTcr12PUa+s2te
                      vh7CGz6Q/oi++G5XvXapGj4zFI2+FkQVPjIdMj6Z/5g+UFHkvQmkkz5KY2o+olg+PoBcyTwAMZk6
                      8KI4vlgOE71r0ym+vmkCPvCukLwUxqM9zNKkPSsZiT7wp6+8K80Uvsr0XD5tQ6E+PkIBPljXCz1L
                      sx2+24QwvkDN0zyGyqq9HDqmvYArej0h5I4+sdOdPuDzL738cag9His2voBEfryMkKY9ApCqvhF6
                      qT7O8Xi+8J2FvjDvA74a1m4+4D8cPSHChj7AmjO+iwMkvpgBLr6bxZG+PBj8vcR0l76A9wc8WR6A
                      PmKlQT6ze6c+c+JDvni+H75sm9i9I6IdvkOQmr5nPYm+yj+MvjlbgT4AUWS+q5puvldohT6wHSo+
                      AzsXvgrCcz5KM0Q+Zp+cvt4pZL6AFku7myZxvnBzvjw6EXA+VnEEPhNiir7U84A9lFTpPcCfvLzI
                      jhQ9yNsYvcPzXr6GB6e+IHMePZOulz6gCiY96JZDvqA+Hb5A2O697x6pvqocXD6cu8g9huNtvmoC
                      Ij7IWRq9wHKbPL1clD4iTY2+dpbUvTXjlj77eXO+33WmvmmMgD5IPG497llUvqBdGT7YgSI+0Csw
                      vupeTz6IEBc+fLWpvlRJib3wTrE8BAfgPRAX+T0fhoi+oEMNPABavbvqgZe+vs9qvuioCj3wVcU9
                      Wpt4PtL/Vj6X5KU+OjhvPjjPJz7WGFs+mEI3vWsjIL61s5w+4LxHvVTl3T1ActQ77HOzvV8nn777
                      LZK+fJaFPWOAij7j3gy+u+J/vn78XD7AeMa8crdQPiZFEr6dd4o+Yo8UPprbgr5Aiq28+CJpPYBy
                      DDwUL6e+XJPXPTjvWb5ly54+ULyOPKpMCT5Y/mi+k+42vo36oz7AI9i84HzNvcDAYr1+rlA+sJPZ
                      vIBfb71oby++49eEvioUdT6Sh1k+EFGHvYAJDz6AOEI8oOtOPK5uO7728m6+TIS8vUZnaD47l3q+
                      zcGiPu6UHb7gkQe8UpUSPupYXT5Uj4A9U3KLvrs5nj7vH46+nu1mvsX3nz4M4ua9BrJyPq3Hnj7Q
                      Jxs+6JwxvYMKKb5AYHQ9AFFEPfdlgz4Evec9HHjOPaPXF764ISU+9LrtPU+9ib5AyV++q5JzvjOO
                      E75YiG09NAyVvctvh74EfuM9gDWsvVyp7z1BB4I+Jkwtvtya/j0O9nI+IO4FPXriTT7O6gE+iMab
                      vk4sAD6QLLw8Hjekvl6lYb4Yf3O+ePAzPQ/TqL5iUSQ+prw8PoiCIz1wI748o6p7voD8uzwms7e9
                      nGDXPeArLb7Ub8I9FI+NvYDR8TyIoBW+AJ+RvlbvQD4hFIA+az+mPvJCTz5XSaA+NjHPvcBRPb5A
                      ncm9QNQ+PUhdEr3iI30+zuedvmvLSL7j8Hm+zgcovispeb4bEH2+LAS8vbsjoT4QHYu8SZOIPl7y
                      J76cWoi9oAJCPXxwjj35y5w+fJKZPVChgD2Qhzm+5ViePrOCZr5g+fQ9AGBHuAC5Qrw2ope+VlsR
                      vtJwMT6wBp68cCqVvASwhr7sE7k99osVvkN/Cb4qd5u+Ug+EvtBRpbyY/Wq+cgAlPn4sJj74MQW+
                      CV6ZPuAMlr5wYuy8QxABvqFslj64AAI+RjpHvgiHFr1Ilzo94DYfvFTc0j1p7ZY+nLLbvTDUR756
                      2RI+WHdtPQ5JJb5gAh89gGCAvuAXRDxw1We+wDqFvOgdIz16/jw+3eaCPrDO9r0WFJK+gFi0veqX
                      ib7g8kM84/ipvpBk9ryevBC+U8WFPugzJD4WIqG+sArTPDiYH77gDRo8iO5HPQC1ujs2sLO9pqZN
                      PsZc8708HN69AP7MvbDy7b3whMQ8ZAjSPawn2T0Kly8+cIy3PYBNlz3gAJ6+sNarvFGulD7j/AS+
                      X7ukPuLfaz4wPJe8HOrLPQCPxT0KnjI+0hEJPvjYL76A8qY9J5GNvkRQ6D0gFwe+hBWMvsAhab2P
                      z4i+fm5oPnCY/jz8s769KNk1vaebhb5guRE9cILovSwdlD12Hx4+oLRgPCPQlD7weVS+QCD1PLL1
                      ST7Tiji+aK6RvvrILT6ArI69GphgPt5ePj44tH2+FCmSvnDSvr28rrS9cm87PtB3njws8oy+dpl4
                      vljpJT5epUm+oFFzvTi+YL7+8Jq+MtguPk/Dir5AHhM9K62GPhNxdL7wr+c9gPwSO2OlVL5o8iI9
                      zNSTPdI7SD4IWxi9uPYWPmeCoz6GnTE+0Pk8vn/JqT4E74i+pgo/vvA27LwU7pe+YFA5PF1Ogz6f
                      3po+loBDPgYa8r38wvW90IGAvOD0HT2pVpc+mwOkPurPDj5q6Bg+aJNgvdKybD7Mkoo9ACJWPLYr
                      q72WITy+Zv2QvrTPvD2U56G9NE/VPfacF76BvZg+ehVZPr0pjD4QWJG9AHswPVZcSj6wfay9aL8n
                      vpBjjTxZm4k+P4iUPqR8ir2AVYU8iFMRPb7OiL47Bp2+GExqvjBbzryEpJU9cATEPSA+VD3z9Cy+
                      oEepvfzCgD2AxgA9UA0YPusHUb4XA6c+KG4MPbzSkj2QAuS9GM9nPWqJWD7d9KE+ADBFOpjdAb42
                      rU8+VrVcPtxinb0+vC4+Kyw8vlAx4Tw4y2i9gB8xO7rCRj4=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDk0NTQyNHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MDk0NTQyNHEBYS5kAAAAAAAAAEsABr7nnYu+a6qAPtQspb45T4Q+t8GXPgRm+T1i8n0+
                      AB63PPo/qL4zM2a+QFvdvBZaTb4HDaE+C4ukPsXYkD6ARSA+6jNuPoNler7pWZo+/noDvvhbWr4g
                      YmO+d0SKPlEHiT7mmSI+jldgPt4xLz5Qq8o8ZJ6hvXg1Hr6g3wu+2o9xPqAIKb6bIQm+Vng2vqPZ
                      Hb6JnYM+dkgZvvAunD2B9KM+mHIvvQANXb74EwQ9m9GkvixLlL1ztYw+lpW7vaWljj4YS3K+9zmI
                      PqzSx704twq+DnsWvlaWN77AKP48sDipvQDddz2mey4+OT2XPvOjXL6wdqm8uNcBPcbjkL7UIdU9
                      oMl6PFk4pT4AnWw8NlwovtDVr7y1jZs+BJWnveZJEr64fgQ9dsSdvgBgWjvGi5K+ElVkPnMbqb7Q
                      Gqg8igGZvma8zr0JMpo+K8ofvsBODT6LaDW+0DLUvNPyib6IFU6+SIk2vrwHtL2w87m8RvoKPgD1
                      Jz3wkC++APztur65Vb4Unek9dHCpvQpODD4=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDk0NTUwNHECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMxODA5NDU1MDRxAWEuECcAAAAAAADpALU9APs1PJ2lWr1goBy9bxu8PYBFnjp2Ooq9MKcN
                      PFXDmr2Weou9LnVFPcLccz0QDBm8nBbSPIADWb15YIE9AA9rO0Dm8LwAyWw8uq0GvUAKuL09Nle9
                      hD7bPDWIgz03E7I99KyZvN4egb0jAqS9QGqevI4PKj2P8709sKUNvPRr+7xFm7S936eDPRL9LD1j
                      r7u94KmOPJ4mWD1pnJA9dkc8PQdXs735PJo9f26mPVKfGT0gwpa9opdDPRT0sjz3pFK9i7+BPbGT
                      tj2YwgM8luR6Pae0tD0QcrO9wHnXvKS7gr1o/zi8QMLKvUvTu72Gqqy9W1WvPYhvoTw9TMi9WN4d
                      vJ3UW71igRw9E52zvajAJzxdDS+9scrGPVpIs70w5Ei9/ZerPTD0tbsOQHg9QM5tPNQOxTwGRA69
                      EnkWPeDtpTzJXrM9SxnHPYl0hz3NyLe9/rctPVAPOzxV9Lc9yqEWPb02rD39eYc9NeSOPQxFnzwY
                      Qya8sNK/vZSDmjzmWyA9gyabPUowPT0WnRk9zEDIvMAcprzA5KK9V1CfPcJaID2EYg292NU7PGLj
                      XD3aJBs9N4FLvaKefD3bB8G94DcMvcr3fb1UwfI8mNdLPAJoSD2wAiW9cNYNvTzo8TwboJc9EMda
                      PKj5xTzw2m+9b5KGPaK9AT1ioQo9DVWwvcm2sT3OJWg97lekvQeUfb0gTj696IBHvAE7hj0wG6m9
                      Idy5PVbYk705Oog98D84PLIeSj1hBK09JyTJPdBUljvy30g9vuBpPZjZvL0wI527i/KWPbeAcr2i
                      Gp+9RDLjPHrEKz2oDLC8TMCqPACeyzqYG569YA6nOyBykL250oQ9KDKnvACwKLglbYi9gMfuO0lt
                      lj3gPzG92buaPXDxArxZoro9pzLFvbA1VLwglfe7AEoUu2Alj70g5wO9sol7Pb/ZoD1KlnU9yMyP
                      PAL2KT0ZPKg9cF18PAXpsz0izce9CL2LvbFJoz03yrA9mpxTvfl1kz3a1Lq9AnhiPelgqT2B7b49
                      19UivfFAqD0sd/u8mHiTveQhAb0DCjG90P0NPKLVHT220mQ9gW+oPZOir71mJ1c910hSvZ0+WL1a
                      RmQ9AAXduRmqmj1AXX67ABYRPCx6xTxsp4W8FnNsPdVvx71gq2i7sGFTvVdDjT2GiXE9PW67ve98
                      jj0A6OI6QnuYvXq8Hr1AAIM8fn1qPWphQD3gfIO7ujFqPT0nkj0QK0A8b82uvf8avD19KYw900FQ
                      vagEybzHgoA9+HGHvPN8xb1op6+8V22iPZ0umD0NwUy9LVFtvSlGlz2tB1u9aPmkPHsanT0YNh88
                      dvkpPaCZTL2zSiG9mrliva6ZaT1qwmI9jMgBvfGOyz0gNOE7MGWsvRoaMb0wqto730CHPc/Dwr0G
                      k5O9ER7IPQBdxrnNG269SrKWvZiCyTwieC49tgdYPcTA+TyY9UW8GU68PfS89Dw/8769ShVqPT0q
                      nb1T+R690qhJPcpejr2AzrM7Gx2YvVi6kLwQQzy9+jU4vQCtIjumtFo9avl6vbC22zvpLYs9PTCQ
                      PWPdiz1FGp69ih53PRBjFzyL3Y89E15SvcA8KruCh309AEJ5vUzt7rxVOoY9hjFEPYezcr1dMjW9
                      ACOJOaA2Xb3ay2W9EItJPIOwhD3+H4+9VBbxvLb/nL2DNHW9gOCtPGhwCrz0VIo8lp9XPUVlkD0K
                      gse90bmvPW9Zsr3O4Fg9QIPHuklAwD3ltsy9Z+mnPXQY2zxUL5s8lXqqPXIqfD1Jq6I9UESCOw/p
                      uz3o7Z88+aTJPUCVaTuUb408rOKwPELTcj3d0DS98iEJPbBTgL20Od88NDyQPCjLLTwGaSE92nmL
                      vWT8ib3KvrG90p49PS4iIj31LaQ9Oaq4PYAJ3Tvo0S68AkhxPcNStr2kiAi9zZtlvWVJp70YtT48
                      kD9lPPsBqT340L+86lyOvbTcrjyiSXM9YIuePMA9f7uyT0I9wkQ1Pb77qb2Gw0w9tYuUPSz0rDyi
                      R669GJ3FPODZ0juq8IO9GY+OPaJQAT09iMC9gMQhPK3ImL3jEYc9OQSaPaw+rLxMlhm90iIYPcp4
                      N723mz292NruvA/mwL0MzNs82pEWPZ13lD0S3HA9URzDPZgKXbwyLGY9RtcGPXRQ7DymWpG9KNGJ
                      vZq7dL1opSU8YsJlPYD7w7yA7Eq9slQUPYJ7oL05Uaw9UJb+O7n0tz2YVm+8sOUIvEn3iD0srA69
                      gOitO1Dlc7we5jQ9ICHdO+zTlrxaLcC9JdCGPZk/jz2xyKo9Av2fvSj8vzzaPkc90In9O7G7qT2Q
                      bj29bc+evQ4pgL17NMS9CuqTvQrPdz3e9Q89yCfTvExWkDykLgO9hAndPOgTrLyVGbq9o8G8Pdoj
                      Wb3Y5Lq8sqwJPcieoTxnO4E96OWGvLNRpT0MRJ+8mxCCPSyOjjwg6wS9Sw2TPSbKDL24gaI8nXJM
                      vTANMLyi5wI9jSWCvcD4oLyw3E08rJ2jPPKmRz1nG7m9slADPcVmj70STSU9UHiau9qFer0yTQ49
                      yvlHPYmmpD0nXUS9+vFePaCJvzz4iLa8O8yePc8Jyb0u15S9p0WRPehJA7yzYx+9jJPQPNaKIT0S
                      mXA9GNm2vTAzlL21vpw9+La0PDrfcz0g6Kq8KrBEvZibmL1gI2E7GPyUvW8ejT2KAyq9gqoRPeLQ
                      Uz2fRLk9cEYVPOhKXDwSBL297Ev2vKEByz0mXhW9EMAiPPAaazyAdGW8cq9IPVh/CDwhQoc9Yt9N
                      PafLrb2Gvgi9GTqAPfjoob2Gl2s9YFIVvTrsVT1snJy8zcWQPVcVlj1YLaM8009mvUpgRD1MNOY8
                      FaDHvagqSzyDbru9FcaXvQYvID2q9oe9VPKnvAriV72Zy7w9j+icPRI8Uz1YsW48e9KpvaBRebso
                      qi08N7bMvYyX3rxwxmW8ClYSPScJrz0qSSQ92AyRvSDGkjygvjo7PDfSPGNyH71iSLu98CIUvV7o
                      jb3IKcy8mcOVPYNBIr2jJla9MPfLu0Zjlb2g0a672V2VPcc1kT0oGNu8psd+PRorvb3RB7s9tFeW
                      vNqTTr0tyaI9sqhrPTC8V7ygCJO83W81veeSxL00P+C8gOSYPBhyQjx62SM9yBeXvJacMD2aQSk9
                      qtaBvUpjkb1Mexi9aEcWPO78fz2sIMG897S/vdDhxjv2Az89A7SxPYLphb0Hx3q9d7jJPYiGx73T
                      6Hu92Pg+vAPDlT1YD529RqMwPcLTNj3mrRW98CAbvAkUpj3yx249gg9QPTb8Tj2A8VS9Jl8bPc2J
                      Qb2HZWK9HgtoPSgj2byShDA9oDUivdSUq7zAtAI7YI7GvNZndD17/KO9aoogPfXZgb3fD5Q9Opx8
                      vdqzbj11Lo29E7R6vSrKYb3Ap2A7EGVuPOqTSD0ZmYo9yh8DPTKTQj1AjKw84qVAPaepVb35hKU9
                      do8/PQrAhL1q40a9XeqbvQZXUz1U18o8KWvIPcCTor2lXZq9UBm2uxRW1jwqSHK9XGqCvYCBd7yg
                      sb08bLEQveipqzyyRFU9gMQZvLU8t73TslW9ULwAvYN2PL0ahK+9Zl8SvZpiir0inUs98GYlvFDH
                      Z7wAsiw84seAvdFxxj1UeLS83iGsvQBmIr2qsl89D63LvVLmLz1thES9LEGyvNoYSD2q1bu9bGkS
                      vfU0o72Hmso9Bu+EvWh2QjwHUkq96rE0PQquf73gTCe9mtw+PYFdwD0S23Q9H8uJPeZndD3SyFg9
                      nQo3vTqBkr1gSra7we/BPaA2jDygVMg7mSqkPTDaBzwRP5Q9PFn7PHRPyDyA+HA8E62WPcOEu70t
                      3bO9A2WEPagtTbxnrH69gBBqvf1hcL3MUxi9APswvEAD/7xq+qq9YkB/PeR87zz1zr09UE1VPFgm
                      DDw35R290KZSvQFboz16iiy9ENhYvEjKrjwCxMu9KpYCvfLhZj0wJ6G7wfWwPRiwprwdr5K9WFUJ
                      vH4ORz39ciy9osZ5PbIXZj1WXXA9RG32PKj0rTyAnn48/o+HvX09I71AP9m6APtZuvRl1zwSCFw9
                      lgOivQBomzwyz8q9gWyXPf5xAT3dQ8W9C+qDPQa1k73afRs94nVMPRgix72o5iw8iFzAvEJMaT3N
                      nLu95XTMPcQ+2TxDA6s9x1okvUEMnj3Bc6M9ema/vWvprT1xBrA9RmUJveCH4DsmC5m9uO+7vIh2
                      oDx9hye9KmB5PUAXTb2N1pA9kDSnvY2Ko71qK3e98B84vPh4t70ACCK9dNiWvIqlUz0whK47YtkR
                      PfiBpTwh7p89Jwy7PfIbAD3nKmu9gPZ1OoACODqJvYs9E9PCva3Xoz2gNPc7GDZXvFina7zyJCI9
                      Yh+gvYuDgT2184S9K4GGPfitpjxurgQ9JihCPYnpjD0gNI88gMExPPqffD3T0Za9t948vV1Xp73A
                      EBy9gI6DOsCxwzzyj2g9TQSPPYxEEb3G/zI9QC5SO8BWcjy9ga89LM/AvCCnHL2Rwow9rAWuvEjF
                      pr0wgbu9CaPLPYoGt71zco29Cz+bvQBYVDho7JG92ZKkPVeTcr0GQJi9ynUnvT4aFj0TYK09xzRK
                      vdhFBjwynDk9RaGJPQAweTsDKL49gguevcNguT1mtoe9AJdKupGDpz2x6qo99ptYPXJTwL0j5Ua9
                      eqI3vYY2gr0z8cC9qvlmvaoiDj19BVm9ybuGPTcZlT0xpLw9Ft0WvdNrlb3KfVM9AYG3PZxO8jx2
                      zJO99xa6vfBtbrzA8rk6aLCWvdQwg70g6/Q7gMFFulSElrzu7Cw9+mmNvTgBpjyTyma92PHGvSCn
                      qryZcrE9JeqXPWRT0jyLLpQ9TFHFPGRs9jxAVCG9kKxWvLjq37xiEUQ93g2BvRUgpj1AHIc8QBeE
                      PCv/nL2A56298XyyPWC/3bv1z6K9mDUhvMM4mr0HpSC97dp+vQLWHD2FRcI9SaaRPQipvL2HA4o9
                      KLGTvTIycz04OIW8ULENPLQW/7xwS1S80Ep5PMAN17z6WW697FUJvTO/HL0tBny9wdSmPcgv/ryt
                      VFe9CFuMPKI6Pz1XV3G9qponPUDBSLuCm3Q94wy+vRvspD3AARe9x823PVFurj1IAq68wJ+8PAAQ
                      y7m63Em9IKyhvMrHdL03xYQ9fiJLPfuBuz2ktvs8WMGkPICPNL1Vdpe98JQkvFiSLLwrKr09AP1w
                      PL1MV72Dorc9aIM/PNPocL2CAa+9QCZCPIW3nb0wWpC7YfG1PUKIk70AqJy42JjBPBWWoj1pd8k9
                      6gt0vdU3hz2C9TU9bKS7PJqeJj3s9wC94soxPWY1Zz2WXpW9R0wuvbj4kLzBkso9mOPDPC0dlL07
                      Do098Y+GPQx/xjzNJHG9AB/OvDAsB717prc9OMCevOXhhz1VvMi99/22vVADD70dSTm9P3mQPag3
                      q7yTViK9s+c3vR0fMr0hXKI9cLM4vaVnrL0w8si9Px+7vVhsZLylk4w9AWe3PeaqLT2SekQ9ezqq
                      vUAARLvsCM+8UM4EPC/Oxr2g1xe96nZBveyKqjxoRkO8JxOiPcqjUD33u2m9F0aVPcZhnb00Nqe8
                      EAMQvdSK3Txz7ZY94O+jvSInYj1QE108oPxwvX2pfL01mLU9k9x1ve+eoD2uCig9aKZqPGDMhr1M
                      hcW8u7a/Pa3FrD2OJ5y94PG/PODbxjvA0f+85AvTPIDbzbpQWuC76MUPPDj2izyAVv47U/7KPag5
                      Lbw405G9oCAlvQEYqz1GRWo9DnaRvSAzoLtNeHa98Ho5PFPgj73PiLi9+xCPvZv2qb1MWcs869qk
                      PdIsLT1oxH88chktPTMdnr3r0Io9mrxYPWp3x73jlJ29jC8YvShjg7ywBCA898PMvQAgzrqpYog9
                      nUK4vcbfSD2TVx69+Eq+vOeQpz0AUTe7/lGbveNTZL0ndsY9IDvIPGrMI7040pW9SMuyvIa9Cr1t
                      /y29y8O7vfOJxz1QkEG8LjUtPUAZRb0y1Wc9oR2APQAyqbqgpSI7AALfOnoHSD1ge7I8Mc6nPdQo
                      3jyCBn49PW+WvSXVxT1j0JC9f9bAvajG3LzoDOm8bMuBPJ/Ypz0DPWa9jUqxPc8KzD0JB6o9MD8x
                      vUCwUry265W92Pw3vOrWDr0SQ2o9guZbPc1Ud709f2C9dIzlvCgUxr2VAMW9bal9vWtmvz0/uYs9
                      4sNtPWWZhj20hRK97EGaPDQMmrwuoWY9AumVvfJTHz2OVDA9i2yZvTBOLL26YTU9wNPZvDheuzx0
                      6RW9kMEnPFdtyj3TSV69MnOovcKsj72AEaO8jMeyPP0EOr0Muf+8Ib2yPcpxFb1SVQM9YHU4ve20
                      hb0QhWM8M2ezvYadED3LtpA9UPbOuzdxwb3wVGK91rkIPbI7DT0MZM889cS+vVjQSTwQGAm85xBB
                      vWiZxbwic1E9rEXPPMB8E71iXV49WjBoPWZjTT26hlq9xAzxPGjdPDya37y9qBh1PFUMhT3Ax648
                      bNOUPGBTDDsAfma9k4NSvdiKGLyg+WC7yV+EPcCa2Lpa2Ya96MkoPJ6AOj0zZpY9KVaLPVBe0DvN
                      ucM9ACw9O9hktb2DNkW94w8pvRFLhT07msO9vv2HvS9Wiz2BCYo9Q5I8vQYdAr0RBcc96HpxvCdP
                      e71xkJs9jWqcvUD0YzwaOTS9QRi8PTSK5jw3Fy+9DUOJPVYoNz3gM069KoaQvUE2uj0Upcu8IwQy
                      va3tqz3oYHe8GOSMPNpmHD1HzFa9lqgYPerWar0W2KS9ghI/PQUdyj1eGlA9Tc++vcMwwL0YWS68
                      QPTJvaBMQb2hCoc9GqspPdm/kz3gVWW9kqogPcLRRz0grL87P1XGPRhwOjy5l4E9Ju03PXMclr1S
                      BBo9XaIfvVSQkDxF6ZU9LbujPQvynz0Ap0U8zvOevfIvGj0nvcS9j7/CvYtQpb2AuUC6XchhvQzI
                      7rzwHwK8gwiqvTqdMD3PVbw9daOAPda1VT0YkbC9bQyovcg3qL1VvLA99HSFPKLDMD0oiMA8YFdS
                      O3n+pD0U8e88VmkoPSJ+Wz3COGo9zFLzPB3vQ71LC4w9AV6BPQOAI72xypM9XvNjPatqs72N+KC9
                      Q1eBPWpoR73kQu88WK73vIP0br0dKp89YWW6PYBzpbpqa5K9mAfQvGsdtT1XlyG9qN3jvFSVCL2Y
                      9lk8UtVsPeh5sbyAcn46NUygPUWpq71bC8W9qD7rvKChKbsTQ6S9zXaUPWgVADxqhC2989W/PfMy
                      yT07E7+9QpzHvW1BGr2jsLY9RioIvbpEDD3YKq69+a+kPROeNr2Ns8Y92mdVvXDdmr2ac4m9TfJt
                      vRlyqT3U56G88lBBPSfbtT0kPtU8bIP7vCSA2zyh15o9XdCzvWaCWj1KVT094OPfu2pvGL0JWJw9
                      OI2uvYbUgL0UvtE8/xaFPZ0FWb3JLMc97zG2vU7GCD0iS3w9ovN9PTBek7uYMYE8XWSCvScjbr2Y
                      f6e9V/prvbHzlj2A7Ji8y3q9PSaGSD3c6hG9JGffPL1BjT3+5aS92famPQBgubvkFwC9QTzDPUh1
                      lzzhmcY9mOf7vBqOl73Hlky9J3m+PbpqDb1ipMm9g5+dvfxV+TzJI6I9d5OoPYBL9TpE8d48s3PF
                      vSykqbyzxUW9YGilvBgEdjxA/H+7ckW5vShOe7zi60M9m6+0PVC3QLytMKO9V76RPdjEODxWOZO9
                      MbCyPW8/uD2o3KY83fdLvTTaqTxIXoU82Lm1PMpjOD3QS827TZOTPdiMqr1QYj48oGYcvUwog70H
                      57W9WOxSPFN/R71SdWY9pyksvTpdLL1tbYm9fZ4rvQnChz2pQp89JgWXvbQEoLzgYeq70hcyPSHL
                      qz2Lj8I9IjaXvRJsKj3iqgg9YxB4vcY0Br0G/Do9aj5lPTaASD1AbKS8lMEUvRy2/DyiJXI9e+2u
                      vdA2U7yC5re9fLv/PPH4kT0A5w87E7XIPXLkfD30VBa945nFPUPvvT2dHTm9c3M+vbo8R72CVWk9
                      2EtUvP4xHT1lJsG9yO6KPNxBhL2dEJW9wG3JvSvYvb0G3Ro9rX+CPfR66Ty/Msy9ib+LPbitmb22
                      2ww9oy61PbBRw72ggdO7APLBuzhfwb0CvJa9Q6i1vei9Nrz6Kpy99wM5vekFrT3dDsM9qgIOvZqp
                      Hj0DW3C9SKOfPFrOWr0K6MC96PlWvGeDiz3RkYY9urIavSOozD347Mk805BHvR1Tfr36FkS91Aef
                      PO0Qnb3vE7q9C0K1PSwPqryZn789biCLvTCZUTxYtxC8VXSMPQqqiL0wjwA8w7dnvWBJnDz6S6S9
                      4I+KPAV5y71KEzI94CRXvTV0hL0iVxE94lxLPXNjoD0M0ay8U1VOvf1Rpz0Ctkc9QCK9PN3gXb2L
                      jLC9IGOnu+WYvr2K7AO9lUKiPX6Fm7266gY9GwmqvSsGyr2mUBM9ROTZPOwjhb2F8sq9yz3HPSXz
                      ur2ztKs9bTSVvY19Yb1CTgA9VFTXPGm2kz3KxRy9oI8lu3nejz2teI89F93HPYpjRj0AHVK9DSJO
                      vU2vgL0twKS9uj0XPTTLqjxyWZa9QO0kvNFesT1lI5w9PbJSvYAvXr0wJPI71n+Pvds8tz1m5xU9
                      1nUYvQGvqj3HKLI9mwSavdBLgDsX/mq950dUvZmKhD20tvu8vSqIPb6FOD3rOsK90Jy7u7jCozzt
                      8Ta97ZjJPcQO0TzgFsK9ikKyvVqBQj3ARQI74tqFvf5mfD1b/L29qP/GPIF6ij0JOpI9AvcvPVJL
                      jb1szNS8wFKwOr0GUb2SVx494o2VvV6yPz0fAb49SCy3vJRTFL3QLas7Oo9HPQhPgTxG1Qq9NP7p
                      PC5tnb1a6oe9eK+zvVe6tT3g6PK71ZeCPR0DRL2Iz7O9aKYdPABfdTsmaZq97X6oPVB+9zu84tE8
                      WLnxvBRgjzwAPEw8hAjiPG0Wuz3ofCm8bMy5vMdnOL16z5O9qm5AvR77Nj2m8Ze9VyK7vd3oar1h
                      p6U9rTaePb0zMb01DoG9gB/PutJiQz2Cd5q9SsYKPXKGdz10h6E8+LGQvWZ9dD2Al5A6sF6Qu4iO
                      mb3Pzb094EnFvGAZAzu+z3s9abnCPaMCxb3HqsG9ny2mPaqlEr2UUpm8uo5kPZgwKDxJ9LM96JWG
                      PFzV+TwhkJY9XCTOPG4Vgr2setO8Nz+hPa33s70AKT467ZVWve33Ub0944s9Ow+uvQBDjby9V5A9
                      wt0WPWuSn71P2Z89aUaZPeixLjzWzkc9upcUPWhBvb3JMYQ9bQWzPdUsqb3UW888bHrePABvn7xo
                      uI28qii3vf61KT0y7h89eFOevZlBoj0dSrk9sKhWPMq+Jr1g+qo7CGirPO/Dtj2IzrG9iQyGPaef
                      Jr1q1ou90I59vfKzaD2t/4m90Oi3O3PWGb0YvLu80IlKvWo4NL3sv4a9GrG7vbhAljyRIYA9i0qG
                      Pd6mRz2tvG69CLudvJJ8lb1F/MG9dgQPvbChPTxGKzs9msijvb27w72t/aM9hlI0PQDIhjoWrB49
                      dQu1vUFcgT3gPRe9msMLvdlXoT0Y3kc8o4e4vVSV5DxoWzY87GChvABKJzxZa609MUSQPaoku714
                      2cO8AxqRPajyurzt7069F7VYvcriRz1ARZY6SDavvbCvcTzUggq9O2ugPeKzdD1Cny491g1YPbDU
                      oDuW4iU9+uRvPZegML3Z3MA9luMdPejtlbx1BJM9TuE7PUWim73QUNq7xoAPPQAfbjv9dmW9nV17
                      vW6QSD1tXLO9WkoqvQygzDxsR9O8sPhBvIClOzqogEu8AKXTvCOVyz20yw+9sFj4OxhtFjwpm4Y9
                      AAMuO5TkpzzQ1hy9J6eTPeBmrbvR8Mg9elFoPS+EhT2sm5q87YiUPfOIur0jY3S96J0svB4Mj71g
                      oVM7ULpRvcDgz7poDdK8nVG3PZIyaD0JAaU9KDyhvdi5Bbxa1le9Rw0nvRskgj14pvm8eTakPRJ7
                      aj1TpR69YOiKuy2tdb06diq92OFmvKi2mLyYZws8njYoPbosOz1BRZI9guxIPWliwD1onwW8MQzJ
                      PVgZGDyuq3A9ptUDPRsbmj1StG89CrJovQBGsLqi/Vg9ArhYPVnstD3x5Yg9UQCbPXITUD2QlH69
                      +eWGPYXZp73DFZA95o9SPVtEkb2UAoY8a36evegws7wzeCi9oAc3Ox/+oz3uxAc9Q+tLvWJYJj2a
                      Dko9sWLGPcAeYzzvXMA9ALrWOwouRT1gWgS99T3MvcYxGL1zir+9D8OXPUT6h71cX+48oLe5Ow01
                      uL2A3WQ86iTHvUzF1byUIqK8+Bi4vOJIMD3AVcq8Z381vS6hKj3+iI29DKeTPCq1Sb0ueY+9YvIc
                      PZbkE71dUUS9VJ66vG+FqD0yU4+971K0vbAL5bssC/28Zf6BPZN8xr0KTWu97IbyPCpwAD0IyYM8
                      AdWQPQd/Mr3YQwA84Jq9O1HUvT1N4bE9C+W5vShvyDzd90a9GFqRvPg8x7xAlF27QIejvBRumryh
                      nbU9kowpPQPxrj1zX129+qUyPcO2ab2wBZ47q0iQPWBpKTsUAZy8sKAZvUIasr2MPIi9dGwKvecp
                      yb0o+UG8btYoPSwBnjwsNrE8iLSUvcHWjD0QRnO98A5GvP/AvT1YmaE8rHqkPO3BsL2qdZ69YAyp
                      vAABL7ouA1E9gB+/u4kRuT1Ts6U9YE7HvOsZyT2Eauo8fYOcPYfNlj0s48Y86fiIPVjFaDxAEmm9
                      MHq7uzqGN7228WE9OBXcvHW+hD0MbRC9avepvRjcbLxZh7Q99lWQvfkpgj3zroE9ZhVmPVz6zDxx
                      yrA9gEb8uhDQAr14BZw8zglNPRLLaz1jRT29oaGCPd7LTT1TLD+9D1LLPS4QQj0oWCM8atSnveB2
                      3Lw0fqc8AtynvX3xs70wDEo8ajwqvYfsGb25+Kk96Au8vJfFkD1ANVY85U26vf+Ntb3uDqq9jJD9
                      PMLYLz0++4C9IHzxuyg2ur2qgho9CJfDvILeNz2CCZK9mEPLvKCzhjxC1Hw9pDUMvcAdtjzB27E9
                      YLTPO0iT1rzOtKS9zUR/vWRO4jwA0/68MKLpu9PKeb0JhLA9memcPQ43az0mbHw9kmJVPXh+5Lwd
                      YTq9NZ7GPW64ob0HdX69jzfHPQcUxL3e9iw9gFqkujbIDT2OKpi9IJDUuzCN/DvCnrW9quIkvfVV
                      r70mRWM9V8aqPbdocL0agpm9UPoSvXvEoT1Xci+9S9SHPRroNT0dvsQ9ZpgrPYqaMb3QlZq76Wqt
                      PenAgz2CksK98UOEPQGtpj17grU9iPTMvG7yRj3YMT28oG9tOyUkoD1AJSK9zM4RvQt2o70JWL49
                      oqkjPQ5kCz3QFCi8drpdPVaURz1jUZo96M46vIcESL0AB1G8EqeGvdBLezwrn709AKq8u1ombb3A
                      HGM7qh+EvUsRwL2aUXm9Xqd4PVT7ib2QmG687gFZPce7tT1gXMo8l0e7PQpIG71BBJA9M87BPTps
                      Rr3UZ8I8Ek2vvUCVObxKaCe9dmJ+PSjLaDxCz8S9m8GYPR2rrT1AVn0890l6vV3tk700Z5o8qV6n
                      PUdJyr1Kqxm9BLbXPG0Mqr2ejFY9YlZhPYDGZLrrF429aKIevAh9+7xw5mW9WlRvvWBr4ju4JfS8
                      NxiGPThnxrytQIE9bkoxPUjLsTyQ+kw8cNwxvCC38LyY0FY8sBwrvQpUTT08DfI8hGWJvZ5FZD0i
                      YGg9QHIVO9TRE72wDIO70isxPXIJBj1CPVw9xfLCPXdrOL3cVNg8dtR9PUM0ab34DpS8PamrPSi3
                      wLxMdKu8m7GwPS8Bgz3k7tg8pLmGvQ2Dhb0QbVQ8YIK6PNhTIrxaD0W9KElMvCdGnT0nKn+94JPq
                      vLdzOb2NL6S96BhzPPACYrwQ2Uw8GL6fvfCQAL3MWq08Yo5FPVBzgr2rKqA9kL6tvUzMszygMye7
                      zMoPvaI3Vj1ykry9Bpl6PZa/gb1Ir8u9vkcbPW1bkT1dSCO9sBtTvDeXyL1is3U9vsc3PVrwfj32
                      XSQ9EiN2PXoeR70AjgG9LyK5vR3ooD0gHOk7aBrAvcBzbLywb4e9Mh4FPV5Ijb28+eo86tRKPapN
                      Fb1YOWy8olu2vTxRzzzgvdm8bYuAvf3XHb31F7G9SIWJPE21Jr2Aei68w+egvfBcUbzga7y8Nh6G
                      vU87lj0NX4m9qDZJvAoNmr2PtZg9MPlEPNTN8bxprrw9hpsWvfY9ir2qcRO9/mEnPSjcxLz3syO9
                      AL2SOekepz2XuaA9EfC2PZQ0r7yQR6u9t3Vfve9apT2N4LI9QEGaPC3VUr22ZC89yI22PNHPkD2/
                      fca9aRaiPV6ZGD3+zo+9ucOZPS4nUz26GTq9DvamvVV6j71X/sG9lDTZvC34yD35XbM98s44PZai
                      ib10Cuw8hTK/PY3yXr2U9s28w+GqvSyH7TzGEl09urQQPTD3IbxhYLQ9q5urPVBCWryPT6c98BES
                      vEAoD7w3rL09sGsqPEsJmD1AQRS9cngKPXVIwj2jGck9IBuCvUWNtr3zsI49aHp7vL0Mq736Kww9
                      t4snvRTb1DxAfZo8dpdMPbCcI70qE1o9QOMXOxLUhb1JO8s9sGGdOxhuvL166C69Pcy4vQWZsb01
                      kYk9/bqtPVdhZL2CMn89PzyaPdKxn73N6KI9UzqVvRjjEryntVa9mKbFvVTc+Lz0GtE8QIUkuwJH
                      Xz1YpPG8Nfq3vSyDtLxiS4y9pwmEPUrEBr1t+Ia9oDSEPC2Cfb1clvA8tA7GPClFuT0msQs989lS
                      vaLkcj3YLyC8kIxAvLOfcr1wTGY86PisvbowP70qtQk97UNpver0wL3cxNI8ii0sveKDHT2S+2I9
                      MFIgPGP5oL1trG+9odSQPQh5o72NJFy9CJjsvACNcDoO3hI9OI7dvKDrtr2YrPG8evq3vfD/Sr2U
                      Xr+8gCKqPLKuNj2giK68rqg5PZTsxDzQPKu9IHhcvUMXhD1gBwS9o667vSGgxz0YNcU8kskaPe41
                      ED24zqu8LKHVPPhpob3Q6gA86rcRvfKNib2h+5Y9qM8pvOgfsb1WpT09cKs0POCK37tzeY69xgAI
                      PdY4Lj1QrP27IW+BPVNcrj0ek2U9dOfLPANBnL2KgmA9ymtkPRheqryWtws9LQY2vYWfhD3MsI68
                      8BoIvVRA6byAdJg6zHwQvdpQLT3qQ0k9csYBPSDb3byyhDk9Mv0bPWJvZT0AqcW9c5QwvcJybD2Q
                      Kgy8SAG7vK/NxL1zEcO9LPKrPN8JtD1t4KW9ABlUO5iTKryKxWY9Ri8Zve3/u70MY7K89Ka1PEUM
                      sz3AV8g8lKeEvUagA7373b49cN92PIZVRz2e3Cg9EGaEvXl2mz3ScmU9iFalPKyEizyYMRg8uwWQ
                      vfqNd73CYHg9gH0tvVxMEb1dpUm99TOtvVx8Eb1xDqU9N3yMPZiZl72tRZW9HXuBPTMIpb308si8
                      wp0TPenwlj1X5F695XaDPakhnz0aXYu9qeaoPcAyWDwQN2i8oB+kO/DFxb2L0409AAzguhYbGD16
                      Niy9jf6cPZ4AbT0s5Ie9Piw8PUyogL0WZ6K9H+TEvbWRtL1yrQ89X3i/vTpQCL3o2/i8V+JKvehB
                      ajyR3rQ9Cv4kPZiJqDxAHW87gpjGvUc+Pb3tOIa9eohOvbCw8zsQ1yC9M5QxvcoGx71OdKC9hye/
                      PeyhEr28Y9I8qu5HPaAgDzsjOaC9FjtsPYdKvj07abg9SGDHPIYOGT2e4mA9jJujPI7cRT0QPiQ8
                      wBAaO2Potr3y2ms9cLMsPD1Qd73L5Lo9G3aWvWlIsD0zGKk9c0WXvXiBnDylxpe9f4ysPbyR7jw9
                      m6s991aRPd0wd729g2a984aovQ3nG73vhLg9ABvHPGwCBb0CtB49xnp0PauhwL32Phi9xa/JvZME
                      w72gTy67z57KPYLJcD1A/QG7GGi2vLoqPb0D6549gPCIvWMBs72GPoq902ucPajiUTxVCKw9IKvX
                      u7hRjjxHcqE924KpPbCiubuA0LM6jhB2PZvlpz1g4yA79rAiPe11ob0wByi8wJQnvJz75zxgMFI7
                      S3q0PcATTTxtpoa9sPyRO/GDmT3ubjA9mHcdvEdqHr0Ly8e97XvEvadqeb3MAKy82rZFPRC5Ojzj
                      hos9XpQ2PZDDDr2RlbE9sXS/PQCpR73obam9ghXFvahYQDygJLi7qOfCvZgyqL2DroA9p4N1vZMS
                      gD3wp4S9uhRfvfp+Wb0oWfO8pzEwvUgom72g/Z69W26sPSCtFr0VN4i9sAFRPGGpiz2gN867OmKO
                      vWiOazxzeZq9QPEcu419ir0GFRI9VsJaPWyL0LwEnAi9njaXvbhskr3AI828pZ+AvcB3L72sFoC8
                      yaKqPQBwsbkY0Fo8uUWEPbxFFr2FXo691+UbvbwSg72AwVw8iK/JvczQgrxPW6A9Gns/vY72KT0S
                      fHg9g5u9vSATML1zppC95itoPeBtt7wo6tq8INE0vWBQmrsAGP+6udO4PdpzfL2KjSu9qv2Ivaz5
                      wzyBn8w9uCSUvRIAKD2ypq69YL5wvRjKK7zAj7i8PbJsvdecPL0M0pq8/BwTvT26P72kivg8inVV
                      vaiyEjwD3o49QrsdPS3hrb0wI1Q8U1O9Pb3Vdr0pTYY9YHK2u+3or72+c389Rqg4PV8llD09MKk9
                      cousvZ1UpL0AYWO9C8rEvV0Ixj14t4q9qFo8vDTcl7zA1/68/RKuvTp9q73uEVk9OuFLPV1Zgz2l
                      VJ89b4i/vcFDmz06Ple9vhRkPcjoy7yYMoI8vqdRPW1Zgr0YCIE886mnveUDrj3G2X89nf00vXQg
                      0jxOzh09GGlZPL3Fkz1AZrk8kJZ9vRRd2LxPs6s94fmXPVRVn7w0cou9AjufvfYkYD0oMoa98VOk
                      Pb0KPb1QDjU8x8C+PTDyDTzvYMc9AOj9uTqrDj3W6RI9Zw9GvfOwwj0gx6G9JLYDvVDGBrwjwVi9
                      4Gf3vCjF1LyFrJk9stGLvd6sh72wy0O8XfqmPeNhVr0QXEM8sxaMPVmVqz0Rrqs9+KelvHCeW723
                      uHS9AHiyO9GnoT2VDK49jg47PagIjbzSRo29EOlePAO8kj1wosq9sAtJvcAZHbygUb47dNgOvaug
                      pL1PGsE9gsgKPYe6rr0HxFi9cH1/PMn4yj3KzkM9UwBIvchykL2+yqm9bqBUPVd6a72/rKA9GCCD
                      vEhZuzwAd1k8L4vHPZK0JD264i09EzodvRIfMD00pri8jvIBPTX2hD0tILA9WPa4PMWKiz2Y0wQ8
                      gJvGPO0Ysz133b29qhckve4DIz1/EIQ9MNItPInjsj0UbZS8s9ibvcu3y72c8dI8uQ7GPcMdLr0q
                      b6q98zOrPQB4GLzgF+s7mjw/PeD6mDwz9rW9wvqivabJhb3ju3e9Z46qPVjmyb0MWMw8VhdBPWcz
                      QL1Z7rs92xqEPbgDwr0AnAK9sRiVPehA47xoSoG8MGJmPLe2yr20reA8F8cqvSt8q725JLY9zXS3
                      vfIPLT15rac9fhwmPe6YIT0QZko8QEcivYb5PT2sJrw8wALWvAB2A7zI87o8g0R3vffkjT1iH3Y9
                      kYOPPerkQr0n9z+9eOWNPEpbfr14p5a9AjtLPQrgdj2TTky9oLCsvTi1mLxCEE89klofPcBmeLwo
                      rpy8oDghu1kBhz1wB4690C5rPNWQir1oWp69mXSqPRWahz2HCca9FN68PHmdlT3CWae9ms1FvWRM
                      4TxCwVI9ugoKPVPCcL2Nyh+94hp5PbDhkb0PJ5o9YyvJPQMXgz1Q30G9NtiUvYB/br1RA4o9mfy+
                      PcCsDb2g+ma7rnuVvdEGpz23ia+9LQRIvagHF7xmKou9y62gPYCVMjpqPxE9sGkAvQDMVb2AJjA8
                      cARevDJ1Wj1Qxma8Hh8QPZoqpb225pO94ssjPfjToLxaHUg9blKavQudxr1rYYs9Xr8zPf3Psz14
                      CLS9dJ+iPNSPirx9oDy99m0XPQpHQb3ggOa8SM2sPMQJ1DyAwiY8bJSAPNQ3wbzWD3Y9eE+LvfjX
                      qr3qWCm9aVOTPZQH17yjAJk9y0GrvZmzxz3nlpM9EMNNPNgUlr0pnb095JbkPF/inT0xZ7c9NAvk
                      vHXPqD2fwMq9sDF/vIA6obqtb1C91Q6tPdDMTDwA4L03GrV3PWfWiz3Qlj+91LGPvJBSRL0XboM9
                      rT82vQ7cDD1dM8u9A5y2PTGWqj0ooYi81/vKPdA7uLvwuHk8WdKPPTHYmD34jq68+KXYvLFrsT0g
                      USy9RsecvSPwXb0AqRs8gKIyvQ6tfz28UPE8ANc5vYowqb2FjKo9ABR8OiWsqT24cZ+8Gbi6PQYX
                      Bb2Gs2A9DJDavLtHt71YWj+8JBDZPMDjtbxzSbs9g3/LPdgorDykw4C9TZegvYCJVLpaK5y9gJTn
                      Oicygj3qf4m9upu/vdz81TwOp2Y96Me6PJAcrL1Ie5C8QGnEvAj8wb06R6m9sFV+vLfQdr3/ysq9
                      Jj8+PSzG4jwBkZY9Z8F8vWBQervtKbs9bx2CPXUgkT1u8ms9spKavd4jrL19wEu9PG+JvV0Qeb0M
                      z/082jZxPanmqz1JKIU9v46yvV9ziT3tJ0K9qVPDPfu+lT1ayIi9/+6VPXo/cj1lSrY9ws4HPUBB
                      lDrGzhY9nd1CvVTlyjwAn3i6E/jAPYqEWr2ns8S9AMB6O8bTkb2nzFO9QFGvvCzVpLwo6mu8+S6N
                      PbCfRDxY85u8Qw/GPV4Jj725FqA90GV8PKaMQj2J8Kk9xkKBvXlLrj2IY5E8QHquvLU9oL3bFaE9
                      IK+xu7hkjzzI6/e8pXCovTo/ED1wAWa8AM5WPPBrWr3EMc48fCzRPH1HTL2aw289W6GsPajhrzwo
                      xTo8I/2pve1wTr2AUXg8JGH9PIA13LvGSDM97MT9PGu4lD1cnvk8IMzmu5J9SD3Pkcg9h3Fovcag
                      fj2Kvi29mKBUvBx+6zyNMTC90QaoPat1kT1AiXO9oIjLPEDnMruABSS9wMjeuuWgwb1pvIU9abih
                      PelFmj0y3U49+tAVPeEhsz0ioUU9jQyDvX1zvz2wzcu9FtUmPZhtxjzCwAM9G/OPvU7olr0ftIo9
                      V33EPdHXrz0TNii9AIZlvO5kkr2gZKa9kvURPYAE7jorWbs9tZTDPVbxAD2gci29c5KWvadbVr20
                      uIq9+j0iPQLbKD1zhMO9ZLrSPAIYvL06ymA9dVqMveA/2LwoO5a9qFF8vKlbtj1kuu48YlqivQpY
                      QL0WEXU9RVyUvQNJwD0G7mc952SzvZOsWL3RvIw9ZlpZPXAeMLyArlE6ijBYvWVxyb1wxiO9E7dx
                      vZm8jz3rOqU9djdSPR01Hb27gqe90K2SuzUvvL3hup49BNzUPAp6Ib1IAMq8Z8uCPdb2Fj3Thxy9
                      kfaCPb6JOj2ska680EscvDgclbwND5U9UXbGPTBtRDywQUa8Y4yDPSunkT1Gc1E9wpsRPaygqTxE
                      Eug87ETLPH/Buz1P9b29LUS4Paezt70KlZK9rc2SvYyxtbx9F7i9UOlfvYKDcz1gIqO7A3eYPWHx
                      gj2YD8c8YinAvTq7q72AlKU7ikKZvdfnkj3AR067CWrKPehFMzx4jsi9nOX4PCFyij0YJMW9ANOF
                      OXGtmD1QrH69slS+vXuAyL1gwxg7GKoKPIATprpKjlW9opF7PcbcVT3GehK9wIaWvQZOnr3HRcA9
                      wsTCvSWyqz1jYy29CxjDPdpGUz3aYKy9M2W+vUCnPDtoIj08KcSkPRfAhj2zw029YvOgvSVsur1m
                      tHc92G7AvGI2Xj2qmBW9+KCKvTu7yb3/wrc9kSCePXDjbbxp0cM9lwRmvfZrTz0TgMi9k2RwvRTW
                      hTyAdoo89929PQA/XTqG+RO9XjuZvUDPOLtqnK29UPP4O2BtaTu0V5o8rfdCveKLnL3aiQk9F5W6
                      vdrWcL2SkDw9YP5fOyChm73P9ao9ML7JO7jen72wd0q8Ar5APZEwvz0JkoI9fVt8vZe1sr1SEl89
                      ohddPSYFHD1idFs98fDBPaH6qj3x75w9TV6avYpqWr3Q/Pe7rjZfPZm/hT1QDDi9cvRRPeTV3DzA
                      kzk7nhkoPadmgz0YDLc8zFPIPOYrZT22wwg9CCO/POfGoj1n6qy9epFVveDikL3AqpI8FJuyPHDn
                      b71zqZW9l1CwPfkWkT3ycF49T+K+vVg8zbyu25W9RV/EvdSNj7w7FsA9t3utvVOEYL3bVKG9RmRw
                      PcCu4bwAea693HzpPJVIiz2wusS9h5WDPaPsmT2dD329WMiVvOhOKryDKbs9N6a/vQb6Wz0QrFQ8
                      AGS7PFTL4jzl6L+9ovVpPdLBDT2KLTy93dnEPbKApL3AwAC7p/ujPZ9/sr2Cils97tEmPYN8nL1j
                      Kpa9PWRPvcKhPT1A8GO8Ie2xPd0Ywb2jFWm9Q+dEvZPxsj2LRcA96rNIPfYjmb2YXqe9pfeUPXVI
                      hz1ZB8Q9q47LvY4+Kj25t7M9O9OEPdAfNbzA/5K8WRahPSCiwztQQN+7MFwlveCVqDvOnEU9Y5mN
                      PRVdhz0A8sW8oESxvQJAQz3ocgy8hyc+vX5xXT3BPbg9om5uPSKofT3n+p89NZmSvWDWp7v6MEy9
                      W4rGvZR8srywoBW8PgBZPfQwvTwlvKO9p1a0vTrot72HJLM9nULJPVIEPz3IUa+9AgoAPYOvLb3Q
                      GoI7C8WWPVDm9LvjvEC9QE0ovDpTrb3rJrK9mVPFPUPnM71Azxi7bhBUPSxug7y+9oS9PbgtvUWP
                      lr0SX2g9mg8IvS3PIL1jEJ49O3umve9juL3iTZ29tC3XPApZl73Hsb89ZuqWvTiZ4rzgifU7kJNv
                      vIIgOD1hP6Q9b6yMPaAhhrvr9p69aAx6vGufgD3jAnO9342yvZyS7DyqHns9YWWzPbtGuz2KlHm9
                      07CsPdqeP73hSqs9Ld6UvSDL9ruAhTg6cGGyvW5xeD1Jn5I96PS8PBd5oj0X8pE9rdWevRM/nr2A
                      rJK9OBmpvCyYj7wzYL+9HWSJPfZTWj0rWKu9ADkZvS1Htr1oyQk8ioW+vdswlT0AXtK80MKqu6MH
                      vT0ghcG9niN9PbhkzDwoQuK8gGY+vb72az1Q88C7ijUXPfyqgL1gPoe82oSwvaCqSjuR5MI9UD15
                      vGkFgz2w2ua7Oro7vV6ADD1SsCM9JUCdvRbVTj20BJM8/BGBvZxN0DzlHrW99rFzPemJiz3lwLM9
                      AAEhvWAUmzva11s97ZTDPVFJuz2N6W+9aHSzPANsuz10ubK8RfeWPWjThTzYe4K9l1jBvbi/uL3E
                      P+Q8AnZ7PbPujj1yzV89QJw4vLbIZj3G6Xw9kI+QvRJbZT2IUsG8quS/vdhHTzzEE/w8ArNpPXRd
                      2LxgZoa79mY3PfITaD0YRXa8CbydPXVfpj29uok9GInIvNTxFb1s1tK8/BuFvYBVkzqAAZq7gFRP
                      vNCjhDtIT569znWpvaLCGz3irns9ENJzPKAEJb1QgkO9FB7kPBOTOL3wnwy9V3iwPehDGbwNAGq9
                      zTLIPdLFHD1wVGw8yLG5PDf+Rr1OmXE9EzJIvdgID7yAery9Ht14PcA7fLugCqy838nIPf5APT2b
                      6o494nSzvUrXk70pX8A9L8mEPcFdiT3T9b29yjo4Paqdn73yAKW9sKELvI1yer1t1B69GL1pvNtc
                      xz2Zz4c9YBwivexQyzwQDMC9cjqJvVcSxD2yMC09fWc7vQD5XTqEmAO9y2unPSspw73nOF29WuFG
                      vYmnuT1S7CU90A82vVr3jb0Qroe94HjZO5lRoz3onOi8oi5APc7eYj3W26a9CcOVPV2vGr0z4ZK9
                      //aYPei1szxT1Z29OAiJvfgX6rx3FzK9flOhvcGbpj2H2p49GGd+vP1wTb0i6AI94J6VO8u/mD1r
                      Rog9wIqavGVStL01Mp69RjcQPTCWRb22AQc92vWOvWERmT3Fdq89mOyMvK++iT0SwDc98GGavUCE
                      djugZZW8qxzKvQ8qrD1PYcw9nq2MvfwzD72YB+G8UOtSPOjQTzy0aM48a0uOvaCOx7uyCo29Gg/H
                      vRuAsr0AAPA26SmvPWuSyL2gP7w7sCNOvcUOrz3xoaE9bmmbvfdAwL0AilM7Bl5LPUC/Hr17N789
                      PBL8PACFGr2peq89tbKjvVi9pDwuZy89VP7YvOG2iD0AMMg3xbCRvayE0Dy9eDW9zm5JPUAHOjva
                      El09o+rLPWjAirwomrk8Np47PVCwlDsAQI694nFPPSOSar23uyO9zMPmPLTb7jxm1Cs9Sp18vcq0
                      UT34OL+9GwqMPakttT0A32q6FktGPYD3Zr2rhqG93YilvbY4WT3wxgG9jeJyvZ75MT13VGi9bVqr
                      PWCdhzwkZf484G+OPCu9mD2vk8a9/CwMvRg6tL0jubs96p1wPcZhQj3cX+w8g32mvUxel7w3AHW9
                      Aa+5PSwwozxg8KO8NLaBvFDOar2ARtU6CCOgPFjoirzolZ+88EscvNM8sT0SpyA9AIScump/b71y
                      yyM9Z82bPV9nyj21Hp49VoKXvatCpb3WsDs9f0GmPVsxkr3jdFK9QOgoPHirvbxCmFQ9QioRPVJK
                      Ij1gRjy9w8ysPZotIb2wBkY8GvvBvXM5kT1Vy4i90BZovPwX8zwp+Jk9IMDVuzP8qT2TkWu9qBy6
                      PG78ZD2oeZE8ZVjLvSuJtr139Cy9AOS1OmWJkz3YS9i8UuxGPdilI7yvNJY98MUvPFgHjDxHbD29
                      SgBFPdB1nDt6DU09ImtaPRUPlL3qFjq9gBx4vVibqDzxJ5Y9csWrvXBnOryQ00C8wFkCPABRrrsq
                      lh+9K8qHPVsgk70B8Jg9Zx7JvQBLPzys27o8ZyOzvYCMebwHwWW9GECtvMIUcT23hWC953QxvdID
                      KT2Auh86UKf+u2J5ez0SGXw9jelOvZiHnb3DWVi9K4m2PRdkuz0s9Oc8UI3Hu1AvEL2S2MG9s7K6
                      vZGGlD10j/88vfaJvUaoA71jRS+90Dc4vTpRr71z9qu9FGHBPAA1sDxwWkw83SzLvcc8HL1u/qG9
                      w/syveWXsr1psZQ97Bj0PODRHb1PWJA9mDx8vKxajTwAKSW6VQrAPRIuND2o4Ei8dAOgvDyq7zya
                      +n+9I58eve46DD2uWaC9o0rFPZCms73IL828u2SbvYaVC70alyM9iGTFvGBYX7tI1Ik89pOnvZAl
                      U72eRRE9mAadvYi8mjwsqeo8QUO1PVeHL724fqO8UthFPSDwvzzOsoe9e4iGPbOWQ73Pobw9En1u
                      PWiZuL1RWsw9P3XKPUD307zW7RY90AHSu6C3Sju+tSE9cCRCvWwkxDy68T09z3vDvZEDgj1zgj69
                      HYwsvUMMzD2GZ2I9SJ+cvKzFujyYt9u8wKW1vbLwYD2g/zy9UOzjuwzPkbxDBao9lXfAPUycA71X
                      lSG9jqQNPW5jGT3o/4U8QHwLvAzE8jxA21O8zEyhPOYlVD0DjoU9HYO2vSitCDzTZEO92OoOvBMM
                      jD2CPX09bUCqPZX4wr2gSpA7NhEZPTeTyr2P0LQ9CWGyPTiS9rwsNZW8QuQBPRACcjxWyFA9Xx27
                      Pfo/UT1cChC98tNkPbYwE73hu7M9zHDkvFuIuT1KlwC90/1OvWp8YD3GN0Y9jBq7PDeVmz2qjFC9
                      4HOXvdR4Bb3QXKS9mJqqvMAmLLtaiGw9FVOgPR0aUL1BBo89StstvUg2hryiVgY9ck+Ivc1OWL00
                      Rty8ftCcvbGryD0opk68CpJyvWjrP7zAX9y8+WizPf07e715Gow9ozKOvcAlQDwXrn+9cvFnPbfo
                      y70KGHu9oHOvvMfQU71oTpC9+I+WvXBqfL3zrlG9Ii+RvRM2pj09may9Kqp0vQo3xb3UX+Q85mYA
                      vYnosz3DKkW9U4+SvRRO1jzjMh29opo0PQCAmzhPuoo9gwelvUTI2zydqrc9KixBPWWpsr2HE1m9
                      IGKdvE1Hlr3mAkw9ja9KvW9ohT2gQA29qEcLPKMRkL3UZ/s8xYyRPaL1l72Fw6s9A+ZJvYDI4LrX
                      f8O9DaZavVK2VD3e0QE9lS7BPWVDkz0q24C91j88PfNaoD3qJwI9BjR8PZ59m70Xu0m9ao0lPehI
                      yDx3/l29SqBEvRIBVT3AJuy84BbyuyFWpj1UpKq8zYLIPbCmCryQAly9K2GyPbGRoT2Vkpc9WghE
                      PSdxLb1gc0i7aLQfvOi7e7wNg8M9zRydPZCSwb0VO589tN34vMxmvDzUtec8EupgPdDnwTt7x6Y9
                      uBDKPK5/eT1qjXA91tkGPVi+ZDyNs409616TveOhW73mGIC9vxPIPTDBebzYmbc8gk1hPdAznLsg
                      jiC9oI2zu+AqnDsCKXk9l2qcPdij3LzqGaW9Cg40vXcSgD2GyYW9YS+kPXYIMT22sQk9IK+yvUpe
                      Cz1ARy888YCePW4xMD0A/SU6AMiHuvbzlL2w5o077uhpPcYrBL00jOq8SAeYvfjAw7zIi4S99muT
                      vRIchb34U7i9UNASvYc/LL2q4AC9eW+TPfLCaz17zJM92P7CPAAccjy3STe9h3pbvecJZL2XLTa9
                      QLpEu0BFH72zgo49gGINOl1fnr1MjBS94GKBvSjaajxuTBU92qpAPaFhrj2Hxpc9DNfEvFwNir1T
                      EZw9AB57PGErsD3osoM8k+AqvXqQBz1SyUs9wP7EOozgEr2S7g89NrAfPQNLXb1Qi9m711aePda9
                      Wz2wOv07GDI3vFdOUL3SJik9rT1LvXQp4rxvg7g9fVwkvbCPvDsAysy9ukuFvbAhvru7gY+9Wk4L
                      vbCs4zsohb69ObCXPXAVl71DXqM9mP7KvcH+uD3vUbE9aO0HPGx9+jxrW7i9VyOsPa12RL2KsEu9
                      MlMnPV1RT72iUTQ9ppEcPfzi+jwvwbQ9YDcruwd8Vb3UBc889+zHvWs0nb37aMW96BLkvDO+tD2r
                      eaQ9IzqxvfoHRz33Tii9EyGFPSgghzxfwa69fVaJvQADsby/27W93LDmPD3Ds72HSTu9t03EvfcK
                      Sr2z2F69y02OPY3LOL16haq9+FuDPK9VlT2jO8k9bTtGvV9/xj2s4Kc8RVe+vbMwsj0ddau9zhp7
                      PazCxryCwJ+9aKPnvNKrvb3//4o9CGGWvEALMzyoBc68UkYZPbRw3rwwf6O7yqVGPeOorj3aEZi9
                      rE/RvC4ZGz12fQE9lM6qvO3bkb3AkZu9bDaUvCFkvj2YsAg8swiUPT79YT0wqzo8AkKJvcxfqjxf
                      jY89MdaBPVANzzuXAIk9AKKqurgm5bwHdKI9bGaFPJc/oD12Ymc99OyMvNfcvz2MeOU8GHe6vbjt
                      tDz0FYI8JlVzPbbqj70Nmku9OSyBPVq9bb3leqw9eX2nPXpkq73x8MA9ANTqO31qrr2wGrC9igwY
                      vUCLkzz8w/c8dvYhPWxM2Lz65F49Cr9LvdEbzD2XLW69YW+HPSPnlj338XO9NEb+vH1Aoj2tcYq9
                      +gnIvVJwdD24FMw82LSsvM2GlD2sGfw88pgiPRD5eDxRSrg9ALNePKNnJL1+QAE9jPTEPAAfiTzr
                      l6c96OM/PPO2jz2h0qQ9q9/LPUJNTD2GRzg9YHCcPGFKvz3xR5s9Exl1vSzisbzjFIE9gIMUvL2j
                      zD1Qyqy9h8vAvc9lhT1j+bQ9Bs1bPYjnsTxXjTu94IqpvS2fXr3NxK+95ePDPaOilb2gbFO9F4PM
                      PQjHt7yiemo9F71rvWDov7vBFJM9j43JvQB+3rrW2ng9FAfYvIz5+zxADBe8CHOzvB+Wkz2XScy9
                      WyCvvYCQ9DsG45e9qLuAvdlNsT1yqzI9Jj8gPa4DFD3POce9PucsPUFdvz0QxEc8NK/yvLRZlDyD
                      Bx69bJezPEAwK7zAiDa7yhwkvXF/oj0CqsK9Jgh5PWnvij2nUbO9sCqqOwCvXzr8Pu48IH6cvVj5
                      ubzvs5Q9AtYcPYRE2Dx0zOs8B1TFPXQn4rx93Mu90ESeO08IjT3zJZs9FUq3Pe7lDT30R4K8eACJ
                      vPLQLD3hK4A9wWGNPVh8nbyzhrW9pgkQPTqEWj10BpG8UNdHPOxZq7xwX4e9GTiZPWKeXD3AYWI7
                      QdiaPSCWOb2dOnG9YZ2yPWDuRDuAAha8GMXfvNJ7Dj2xgaM9qpaUvYCWsjwfocs9uPijPLkGuj2i
                      FSE9WGWcvaxY+jzogPK8+vuSvX0li70n02K9DvhoPXAvPjxxKp09kJcRvT3Xy719Sx+94OmqPIB7
                      rL02ITE9AAKzPFKzHj0OIyg9+6rFPdsklD0gOoq7emTBvZDYazzMU/y8tg4sPTe8fb0g/OG7wEqZ
                      Ov0QNr1amcy9spMUPQCMuLrAKoY81jlCPUUWrT1RD6o9A16kPYMoqT2SbDQ9FDOLvKAYSDtULt48
                      6HZfPN9Iyr3D9ca9V4ZcvahQJ7wAtHy660WOvaExhz1wbnG9Dp46PbB7nzu0UJi8GQKePXaqaj3E
                      ufw8o22hvfVot70wpZG7cjI7PapODz1lra89NHyMvBqyWj3Au0s8FgcNvVPLmr1RO6g9J8O1vT2k
                      dr2XLmy9jCHpvAKYob2Qgzs8DtgdPZEHhT3Ajl88VEDpPHYcAj0Nuna918K5vXWcoT1oY769t95m
                      vfJVYz0Ryq49AO8IusWswz1jShu9DSUyvdAldbxQIcW9gfuYPZ+rsb2qdlk9qra/vQICBz3M+Kc8
                      roc4PeOXTL2HxG29DKrbPMH1iT30tou9wheYvTiPib1kPO88RzS0PVuswD2gSZy9XeqtPRofa716
                      5VA9LzXHPXPbJ71fNbc9PYgjvYcDtL0tQ229ymIlPbp6FT3nwSG9x5xZvUN1tz3KPEC9fhlCPbbt
                      Nj3CJyw98AF5PLokCT22CIe95L73PEuWyr38xPk8mLOLvBAhVDxj6Ic9aLaGva2TQb2rFco9QH4Y
                      POgliTw9G6U9dt+ivcz7rrz0L/M8ICBovei/kTyku+48mvmGvcBA8rz0ywy9NJ3ePHqtt73YtkY8
                      rRltvdCMJDzR5bs9QHm+vDjIub2XHrE962WbPVD9E70p84A9hyVpvbpaLb1KVQU9ziBUPQp1wr3z
                      GJq974KyPVDLTbyW1i89b9S8PfAMCzx6FHm92GeHPDzl+Ty4TY484sJ+PY1LnL0ChFY90WTBPRZh
                      PT0nkru9AEjXOavhgz2U7I08FHPyPJGUwz0Nz5A9leXGvfC+Qjx2VwC9KwuXvc24l73BsIY9mGNt
                      PJuwt71UgpA8gKGsOjJfYj3kMOA8SffLPRiQJrzN2I+9oolrPVLAy703Acy9b7+PPYtMu72zqLI9
                      AAtPO8gx97wUG/m8M6idPeTj9Dxq9i49ixiAPTCcnDuvSL890vAAPVgLl71Yrcy84NjGvCOkab2r
                      brO9JyrCPSDR6rwav3I9uXK1PfjOoL0tT3q95+wZvXB0HLxC7Cc96I1UPPHRlj2A7Ji9jaOPPQBz
                      pDzwXTe8E5C1PUCEXrunnky9sKgpPLiTqLzRqI09CMaUPGEFlj3AYAA7gMF0ulDdOryK+oO9mHs9
                      vD2UXr2wm+u7lNL4PCVljT3UjvG8+hZGvZCIAzwBMKU93+uBPaipIjwxMoc94ESZu3IFNT26EhK9
                      lYOBvQAclL0Ig4K9dUCGvUzW0TxxdMY9Y2K9vZGPuT2Sq1c9jMb0PCNvS72CwIO9LNfFPACLsjyO
                      gJW96iMbPfgC57y+GoG964SpvSKsp71oL2g8SruivfgSvTwgjKO7vSmnPTOKoD33fFe98HxiPJrZ
                      KL1DjU69eVWxPZJTDj0AZke7mlmrvcBQMryQUga8EEUwPIVtkr2KSyS9g3GWvc9Syj1QSLW7IAy1
                      uxcoWL0h0ao9uSHDPQDb3ruKN529qJC3vQAXb7oge7C80FIBvWA0ULt37cY9u2KjPYR+zzwMxaY8
                      MmxRPYpuOj1QPtu7YH1ju8gN/rydyny9vSW7vYcZs73HGG+97qRtPVGhzD0Vx6m95gSlvRv5wL35
                      ipM9IwptvZqner1Ay3w7xwu6vcoSCb0o5fO8kLQaPIBAnTwYk6g8sACKu4Tf7zyH2Sy9VrBYPWEs
                      rj3oDw+8CqC7vesDrT0UY4m8uUKvPYDg5Ts9P7S9PkcJPUzfg70GqZW9kiICPTPujj05GpM9JggN
                      vXfmtj3Nm8u9oHtsve0IWL3i5AM9oPnhvAXGwj3UkpO8buQXPeOXuz06HUe9Lr0zPXSJibznTjK9
                      81+vvUNhkb2YTSG8gBGzOyfDrb0aoJa98r8VPWtzvr1Rtrc92Gm1vaz7wzwo+ca91C0RvS4pqr3a
                      oV+9Slt3PSBczjuWzWg9ru1BPSfXrj0CeKq9tXO6vVtHrT3LJra9xa+JPfJ5Qz0mdJe9utJ2vYUt
                      oL0j3nS9eh48vaDZt7yBK7Y92wiYvbqHqr0A1L68njMcPaBCjjtAdMY8mCAEPCiHmbxOl3M9zfwc
                      vc1Pbr1qQwo9mZeiPdj5kjzhDJQ9YLGMPNaJZT2Na3y9wo91PdLuub0AWUk8OPugvV+Axz3KOGK9
                      WdimPcKri70XNiC9qDYHvJDBbzyUP8i8SvHHvQqqbz1g75U7wskTPY9Js72ol868INGwPI11Xb0A
                      vOu7zGf0vKiHZTy69X+9yjqDvSirJjzjYy+9tQOXPW5wMT1/hro9CrNnPReUbb1p07A9I7s/vQIM
                      bz15+8I9N6GuPWhdLDxI+4887UCTPZyt0zwj7XK9AEF9PLOXyz3mIlc9QLA9uwP5rL2cbM08iwuh
                      vQqcDr3NZsa9yvpdvUp9YT2gzba9Y3/BPfJGIT09/ra9I4B1veWgqb0Q/Eq8K1WxvThmwLzME4W8
                      UPzGO1Noyb3gF3q9QUiIPSiGXLyJmaU9ylSHvWLCgr3tBDW92kpMPeD4H71AuTC96AYfPIcBtj0p
                      T449pR+GPQpdA71Cn189wMNcvG40rL3robs9ujWtvVdNOr13InC9NpUlPQAcrbxCNSk97G+LPF0O
                      ib2qzw69gEWOPMafXz1ieBQ9hxHKPUttgz0vFKg9Vb+bPQncoj2oaZq86z6nvYBdszq2mQi9h4Cw
                      PYzkDL3+kJO9y+C2vY1+O71CYlg9kGsYvXKCxb0X1Xu9APMgO+x/6TzYFbo8E0V/vUNWbr3N8pM9
                      TQpxvUDjBTvCOj09DvotPSo7Xz0ibS494wUpvZsekr1QLm29qpK9veBT1jtDGZq90QyRPV3Vlb0z
                      SzO98A6TvU0jkT2KJnm9Qkl8PQhhg73Wxp29wlcGPeR43Dw7jI298xQ6vWeAtj0Uwac8+OurvUyJ
                      3bxqwCg9NFibvHdlcb1V66e9qjxTvaNbjj1gL5e7lXeQPeKxOD3Vwqc9oHSNO2rZnL3tbT29IAe2
                      PMGVoD0AaK86mJjGvfeUcb0+O5G986eOvaUpqD06cqC9b7ufPTBzNTyvXYo93pSIvQDweTnm3z09
                      6ILgvOCbT73IJM28t5ZXvWDUnL1QPE+8XXRvvTQj6DwifiY9pZ+XPdrSeb2aiS490oaDvR32tz2x
                      /II9OE2ePIgvgzyrKJ29ZVjBPdKGLj2bEME9ww15vTkrsj1Kq4y9PNHOPCxEE73+jzM9cwJnvXlX
                      oj05dMQ9bpp4PeHppj0wrZo7vhObvQqqKD1A5iq9XStMvW0mgT3txKS9ifDFPUyDgLy6NWE9gJ3s
                      OmhsxTwAlis7AHB6u76XoL1bgsG9A+/EvYuCyD3mmJe9yNeOPEoWDr3tPJG9E9+tPQ0dvT3rE6q9
                      AE5yvO7DTj3gapO7IstQPdMAtT168Ym9J5VQvY/NvT36vxg9AIL3O7U3kT0qhle918J9vSBf1zt+
                      ZkU9xtUhPX2oM71jHpE9Iqp1PQZnLz0Afsa8B6/EPQZmMj3qZDA9FqoEPb2ZKb059bo9Qv50Pfgo
                      yjyy5xo9iLazvYdWvr30Xsk8ZzJYvb3th72A/We9PpKcvcboFr0Cxhk9whcYPQBq4LmP0as9HWiq
                      vb6KZj3MYKa8E+JdvYWtrT2Dypw9Oq1zvSP2gD1LmL+9fhVEPeHjhT3AVs281xW3PdTFjL1YeJq9
                      o5SzPXc2vz3KtMm9AI6ovWbfj739zjW94CmpO8D6eTwcnAW9MEdivMm+pD1TCrO9eG2DPNk9gT0d
                      YYS91NemPOLDwr157Ic9cLMIvEBag72oMCw8SK6PvAdzur1dRS29Ld6OPUr9P71kAOg8IJYovSGf
                      pT0z6XC9Iw0pvRgRrjw38cq9Ru0ePSCWFb1geTi7suO8vQD8aTymDgA9s5qUPTk2kz0dBIg91Grb
                      vIoLYb0d/Tq9laSMvTPtoT1AWQM8iKq4PJbSob0aWC696IcAvLSziDzobr68GLmjvX2ejz3QNLO7
                      ABbauk8lmz0luKi9aH5YPNrsbb2gPxQ74PCcPFofNL21+IE9sGrcu9PmPL0YKBW8H+HBvbCdrrvw
                      NyS98hMsPT+hhj3IWMS8xyamPZj3NbwtyKQ9YHpQu7R+2rwaAoK9OnZhvRATV7x/IqY90FY+vOAR
                      tjwYDV68gOWrvO7mFz0MyY28wHwKPAB+nr2ANKS7RiAEPX6ZPz3Yqs68Ak84PRAwHTz9jsI9dsSe
                      vWWRyb06BrO9MF7Pu2IYDT1z3Z89ntF+PYxG6rwX0as9YCYbu6W5rD1oiIO9WFBLvGo1QL0Uh448
                      OniQvY7gmb00xuA8jhMXPaVozL3mFHA9E2GuvZ2kjD1Jkck9JYiovURvFL27nZm9IXagPQGmxj0C
                      uGY9NXWcPdfqqD0Uf548vEoWvZgrEDzsuIW9oHSpPGxijjwoBE08WX/APQ7ORT0wOj298zWZPZIN
                      Tj22tjo9AKSvPENstD0dCso920aqvQznnDyUr5G8iiI7PXwhzzyMCpy8cEauvQQc8Tx+AgE9EC8I
                      vVOfZ70g15g7k+nEPSiHyLxi6jY9IG+QvDY/Hj3VEsS9QLcJPNg3mbwVQpQ9SSKNPSiqDjzpLco9
                      IFiYPN4xMz3riaI9tldsPV5DKT3YCFo8J3PGPQKYSz0n/rE9oMPXu4zTr7ww1ZS7Bz+VPVL4TT0A
                      c8I8GExZPBamMz2tQ0i9mWDGPYF3vD2Pb7+9laDFPdgHh71zs6G9KteXvYgY9rz365c92Re7PWgm
                      PTy1+au9sKU9PG9dur0CBh890M3KO4CyT7pA1Yq8EFYqvUvIpj1E8Nk82Fo4PPucoT1O2EA9JFv8
                      PGCRNLsAx6880UW1Pe6iMT2h/bI9sNWau9WAhz3KeV09wCNzPAsFtr1a+l29I4A+vR1FTr1MR4a9
                      MIxxPEvKij2yFEM9YOTJvQaAHT2xvJk9IZudPcqRQT3ADwk8mLE2PIbLPj1tnni9ycG6PYsBxT04
                      Q4S8QCxsvYMkwj3ki948kBtSPPNkvb27FJq9c5uEPXjC8ryW9E49EAANvFOQSL2Y6b+88FQ0PDEe
                      uz1pLp89GO4zPHNDXr2j1h29QmDGvUymp7wdM6g9gKWbO2euhD2Nmxy99gVnPXP3kD3VSYi99j8G
                      PdqsMT0iLzk9aFLEPHCvdjxC4mo9Z15yvcK6jL2Yzcs8Bu+LvaSWgr1LRI+9HcmPvQPDpj2M8Za8
                      6RHAPdMWX727x669kGxzvArnAT3Alwy95nU0PVPOuL04gpc87FD8PGCfqTvUW7y8AMgVvQZ2rL25
                      YMo9ih5ePeBmmDtSWXw9ZqMHvZjpfjwomxS8kHFYvIy7gTw3kiK9ApsiPUH3rz0K3nm9PZGhPbKf
                      ST1yqEU9sA2dvYq9A70gDrG8MiAAPc3ChL2yqQE9sjcUPZJ3Uz2UUN+88x+tvc99tj0W5389Z49N
                      vYjKmb0U+Am9Mzt/vcMElD1pxcc9aiENPWDxQ7sK30+9YBlrvQVfpj2SBDE9BjdxPTuSmD1so7W8
                      1Z+hvZIBCz3txju9fxyUPWD+krtCNzY9CIaRvPASZrxioUE9jzGuvYK3Pz2nWk29jRGXvSj/j71x
                      S7I9gJtPPHGVkD1Vspg98tGsvUA2ATxiL1s9Osm5vZRNkLzt/pQ9g8B8vbmzuT3cCtA8ES+dPXSW
                      qTw6Tru9ENqvvXRDBr3HG5A96HikPF1Nl73CU7O9dV7DPeQp9DyxZcM9ml4uPWAHVTslqsq99NfB
                      PDCWF7xqtm+9YH2dvNDf/zuuDHY9E161vatHmz07/5W9bcSivVfRy73oXE+8lCfsPMU2vL3QZJK7
                      rIAYvcq2aL0DtYI9I5ufvaZsaz1YPKa8U292vYAB9zoi7T49gPWpOgdVnj3QieK7oEoxvclDnz0a
                      m1A90T63PZGryD0xSrw9w8mJPRBxKbw2Yy89gF5nPG0tmD2Ihqa8ACKNu488sL2AXns8bnQ9PTiO
                      07yusg09u6WkvXLFEz0DYso93docvcVIhL077J49oz7LPafipz1i/Zm9FvN1Pc22s73Y96W8yeui
                      PXe/jz0K4j49qGUdPMJsYT32ywi96O97PIBaLDyZK4o9ERmnPb6cCz0sCdC8QFDuvDNis73akFg9
                      QG9xPAKOED07p4w9h5IfveOiyL1TAK49MBNevPaIIz0RY6w9cNYcvFABbb3SgwM943scvTB4pLus
                      VfY89LHnvCKxpL0oUEg8t2OTPcBABLz3K749zgsfPbC3ur14Q9W8yrItPUfFuL3ItJs8HfOivS2x
                      ib1EVdk8TLHtvJl7gz1CY669KEC7PIPdRL0dpaW9jGsGvTpxOj2jsrw9NKO6PJcUKL0QLQM82Bef
                      vOCj2TsmuBg9YATdvOv5ob3IQZS85bmuvUvxgD1SmFU9I+GivUSK9jxlU4o9nMYEvWugmr2jNIY9
                      NHqvvH27XL3wQIi9na0pvZCjV7zzrpE9uF20vZEonT1zpco9kGUkPBybC73ex3g9mEkWvJX2xL19
                      1sS9ICm/vN04yT0aR4q9NSeuvcUXrT1GUoW9KAYGvBb5AT1gQLo71AbNPMbSFz3nEVO9ItKfvX1O
                      wD0AHCa7DbEsvdZan734kYy8Upl1PTTn2LwaEUC9XsYKPaz12ry+chE9YoNlPWCEu7tOIVE97C/G
                      vCJFnL0wBVS8doEaPZT7qLz+zSM9zc+aPSjcIjzeA5m9QFOjOjp3IT0VrYm9lPsIvZH4pj1aP3+9
                      MGZMvT5bDz1DWFi9gM9mvVIGeT3nvsQ9HWAhvcrKU72NU7S9bS0rvaULpD2lhcS9Im/DvSiURzwA
                      kP+6ulpHvWqmSb2HL0+9pwtpvUxX7DwZLMY9BOzvPO2fIL3bt6C9/F2Kvc3AnD3zi8w9GlBtPcFu
                      lz0gWxu96v9YPdDbKbyySHo9J1q9PYsyiz2yBXU9UIxlPJmsmT2CPVs9nYKvPW1Hyr26R3S9dciM
                      vZhOmjxC8pq9oI2OPLxi1DyClHQ9oL2KvVcKu72Cd0Q9VvJzPQKMDj0yQio9lxJqvR/zu72NWzS9
                      8CIaPAc0rz1dzE69gGa3uj+ptL2Bd8w90LtrvLjcgTxttKu95X2MvQCHSrqsrO68gMSnOwEFxj3E
                      +Yq9IDmWvWYAGb3wFgA8NkqmvbrDzL3iYx09rjFdPdCxkr0CZFs9leubPTqrXb1+HFg9a67HPe35
                      xj39Zba98IMuvXC4Bzxk1ec8KJzUvGwYB71Ysaa8tF+BPMczer1A3a26F9GbPQAYYzyyt1k94MyA
                      O2Q2hL1/aL+90JyUu3YeQD2Awra6gs9SPcVqgz17dMK96Ue1PbfvTL1U4K48AXiZPSkQnD0qSxS9
                      dFT1PJTY87xkS+o8jUuWvVaknb3Ylsm8uV+vPW/YuL1VfaM94I24vaHCgz2wvjW9aNsuvG4TKj3g
                      U3a9NEXDPCCZk7ugR6Q7l751vXubkL04KcS9mrR2vWq4ZT0yh8O9yOXBvKAMZL2AtcM7LLHovNDL
                      +zuCKRw9vWBovS3FYb3Qv1q83iKcvfMKqb3ipFg9mKCOPJDtWjyz96G91YrMPcNFrb08tYy9RQ+6
                      PUj0lrxAC2y7hNDmPFjtBDyYj2K8XGqAvZSMkrzN41u9QzWNPeBOjbuoi+C8DQFWvaW/tb0fdKA9
                      jHeTPAAXajpyxWQ9LL3AvPbEej3lmci9AFuBPMAJL7yQCWu8mCtCvKdSGr12Ais9D4yLPcB127wJ
                      1Io9gK80vek3sT2a5mm9vhiDvXrOEz0dHoO9KvUkPbaDhL1FZYK9fca5PRQ3wDzDnHa9up1dPf1U
                      fr3O/Dc9TXWnPU8vwr1Asm+9B7VMvagMnb1PRqY9bJ6rPEbJBr0aCsy9LfZ3vaWwiD2Ika+8nutM
                      PV2Hsr0oyr69a1O5vQiRqbw2Blk9nsZLPVjnpjyNAT+9QNdIvNPdrz225Y69PtZFPdjicTxo+iq8
                      b0GFPY11jz2TB2i9MGRdvICnKLxVd5w9B0+NPfh3jbwUmsy8tkcDPaP0sb37rru9tFQMvewxqjzV
                      S7U9YIytPLKZGT3T/1y9OJCVvPTf6Dz5nqg9MRCHPQedTL0K9DM9I/XKPVAf1zs9FpS9h/fAPaBj
                      bDsArB65CBCrvdg9NbwCj1A91BXbPPPoM733p3296oywveacZz2TyUK9tcTIPaCCcjsSxTo9bEqW
                      PK1wfr0I24q9WP3QvMCW5ryi+Q49kEsxvNGdpT0Un++8ZK3UPNC/WLyYlzm8ailtvTZCmr2oV0k8
                      VaG5PcPmbb06PA49s7Uvvc6eCT1MZJa8iaCXPWAE+LtMYJs86EFAPInxxT1dkVO9+/y8vQCujjz9
                      mW29bvQDPSK0HT14UY68jGoRvQDCjTzdVWm9gM4NvaBfUrtQFoO9uNmqvb3tk724fZc8c7q9vdEv
                      hj1/L629YhkXPTmVyD36P109fJ+FvSiYBjwdnMG9cosUPQBo17nw3Qa8naSvPU7CET2jhGK9tr5d
                      PXBxTjxu6nU9h5TKvUxblrxADRM7kIh4vIANn70g54S9qauAPfjQur1AiAm952KnPTDQ+TvlsbE9
                      19RavULnDz0CHwo9YCs6vfLzlr3KP4G9EpnHvdi5tr3AQiE8oL2NvDkZmT30Q+y8kod7PWVEib2K
                      FaW9+PDHPNhEh71me1U95qAzPSB6xTwgL7i8LaS3PXpKPj0I5ri8YssmPc7mq71e2U093PiBvXJo
                      UT0M8rs8gOwzvZiS77xAnjq9WLKjvKBQTr2apBU9vWOnPeATwrxOBSs9NowcPed0jj3wSkG8ItwI
                      PY6jLD3+a0c9WAyivACEGTwbQq094BuruxA5Kzx1m7+9+gpzPcKZj70AFZY8f9qRPZyWzjzjMqI9
                      5Vi3Pe72dD0lmr89SpqGvaBDGrvKGhO9R3CRPewlmzxTTqY97FuKPCkvyT1yIFU9mgt2vREcnz2j
                      TqI9stphPVPEa70N34o94wNCvWAsgzvRcpE9eUGEPXB0Qzw6oVs9LMoAvcn6wD1Thp29h7+vveYp
                      hr2G9BO955E1vYgVwjzJzZk9M5GXvexehjzmpmI9VkSbvRpdfr0zWbA9mVnFPZLcOT0td4w9chth
                      PcBLGr2N+IU9YHHivFQGhTzA2aC8FpsHvZLXfD3m8GE93eyGvW6vaD3QJQO9KP9SPCfIHL3zgR69
                      J+aJPUhf47ztt3m9UH6Ivd4Zhb02Z1g9hGn9PNoGqb1DsU29h84gvQOwGr2GXV89jJaGvLCmY7wU
                      G4u9b5uJPdgGvLziwWM92NCZvQXSib3iS5W9Vl8xPYZwMD3yUDI9FMvhPMebpT0oISy8aEW4vehM
                      nDwTTJ29KFwcPMxgqDwbbrk9whhfPfqUWL2gTvi8QihGPej1BzwyawQ96vYBvUNMlD0AKFU8oNaW
                      uxlphz3j4ZQ9E9JWvQEDrz1+ogY9gFFkPD5Yj70znqO9mFnIPIVziL1uf3o9TML3PIxGyrznSSy9
                      fx6ePdO1vb0ikqa94267PS2jvb0Kw8i9zcixvdYeKz0vhrg97RW7PboICj3WFZG9TJGCvXQdmLzA
                      THq8oxy0vcIhUj38oPs80t5FPamflT3ao0i9VfKnvQymBb3uWkw9iYWpPXjswb3CbX49hvBdPS/b
                      nz2wjPS7BWy4vS/Cjj0Ymik8gJeQvL1ew73vycm92HFtPNCAPb0ULYW9JPMQvQRT/jyDJ32913c8
                      vdCwiTv2+hc9cXi6PWCmRLuaNGQ98jQNPawU/zwAIS06ABYjvQYmbz1IiuC8NJuTvF1DmT2AQzI8
                      qv10PUAzTzyYhXM85haOvYgiyTzRcJw9Sxu2PXLUnr0Y2NW8gJ7fOsfgT73Lcsy9WF80vH1GNL0q
                      vk89MEG1u6A2pDyIk8M8OI+YvD2EbL1iLgQ9gC8lvSoVXb1sYYU8vjZRPfZ6Hz3ny6s9IbSVPS1H
                      sz2LzKY9EFRxPJDYA7xAUDG7WHz4vPP2rD3h+o89Eo0yPSKlcT2UJKS8ONPvvBLFKT2S+WE9zUJ9
                      vZQ+wDwqpgE9biRhPVl0hz2mERg9+nJKPQgRgb1okzc8sHwyvDhlqL17Pb494FvAvB87jT0CS1Q9
                      Y+V/vZ3sJ70yg7290IeuO8i/zDy0y7m8gvEsPduCmz2nvrc9FK+NPA1Dpb1tJKg9Ywpnvbb5Ar2n
                      Tym96AjJvMabmL2AGLM6o+ytvauvxz3XOzi9QLijvBp/M70ecns9WtppPc1+lb0jWqk9x+dovZZM
                      RT3zUVW9+rOhvVK0QT3Go6m9ETjLPdOkwb2HD7k9LhmOvQYdJz0zEka9D/m3vcH9oz2YZbY8YIqT
                      vRAfe7zNVHe9eipQvaDw+bx6lqm9rIP5vDX/oz3/aba96DZaPACaXLvY+wC8VsoVvSCwgbs96Fi9
                      NsuQvfoWjr20LtO8zVIxvWZvGL1dyCy9OAewvRppCr1Yi4o8NIWGvLAo17tYdJ28WIRevCVrgj0/
                      aq09V2yPPcySjrxyZkU9lvsOvRoBaj0rzsc9fVmtvfUGuL3FKo09E1QlvZ0Elj3CrW49mg2evZUx
                      yj2A1dE67Ei6vE+Su72WmaO9aLmCvOLTeT1ykSw9aSKCPZq/Q70U3/w8IJyQu7jD7byU8f08+D3Q
                      vEg64rwGC3o9fAkJvRQjybyAldi6hE3cPKSQ5zyC7yA9ALzZOsq5wr2NTnO9qwTDvbVltT0P6sU9
                      sohIPamRtz2mIE89042hvYFMtz1ASBO8U5lFvUHmtD2BzaI9xveBvQpMfz2MesI8N3lbvXjzwDx9
                      OVq9s+KUvaJWET0jFVK9Tt46Pc0+uT2+Hpq9G2idPcRb4TzNvqG9a+uAPdO9xL2gZja9oMVTuw1g
                      hr36EgC938+OPU5mDD1yTpG9pXqavYBJerxG3Ze9QvoQPe1jgr3BCKo94EqVvFOBvD3QbNE7wi1U
                      Pe1zsD24PM68m/PKvegowL03zq49tUeavb5kNj2SBCY9K7TFveKjYj3IdNW85Xe/vczW3rxAYl67
                      fQiZvW6WnL2AlY+7Dj2svQuLm72UVZ+8jIAFvQpVrL0Ux+C8nl0CPXXdob0pTZM9eqFOvZruHb0w
                      Wsy9eQa3PUoktL0EQ4y9Jmc/PdRaD73M4Ym8yggrvWxBCr1JcrI9c5mbvYf9L71tlK09/ZJTvZEa
                      yD0AHtO6w5sbvQ+utL165xe9FPi/PLnUnD3bIcM9oA36vGptID36Uqu9UEpvvMAgH71Y+mG82sN/
                      PWzGw7zClmI9iMmjvY58gb2yu1c9JtsDPWtlxj09Drm9c5mYPZCmdrzdqYa9SjMrvQBjQjzzZJY9
                      qthnvZ/3jD1AODs8AZuEPWLwZD2oYYS9RdCCvQBuybl6Da69c+9ever6eL30vZa8xnFPPY+xkz0J
                      R5k9gIlTvUMgdL1A7Q88QPM4PL2/yr1AAh07dbC/PX5qhb2g47+7UP0MPOi1IrzSe249sZm8PYf8
                      jD0jqII9K5WTvSVwnj1bLZq9WHs8PCrZn71YMgc8GSyiPVDyI71pasA9YAeIPIy66zzjZo69PTSI
                      PbhzhLzM7sQ8gAi1u93SG70Drii9R2u4vZ34or2Vd7A9USSZPUckQL3/sq29ACtTOnDXNLyMX628
                      YLOqvVr1qb3uyU09V2fKPQpOQL3m1HY9kKwPPIQAh72l4II9A86PvViF4Lz0ov08Gn06vc7/AD0J
                      l8g9m4eivT3OpD1gO4C8EhZyPSMsoj3AJFC9AH4MvDIyFD0CFL69CQmfPQoxQL2dBSa9VEXxPBjA
                      xr2DADW9QHOWvJ7dcT16tW69bG6BvLuIw70AFhQ8GeuMPXHghD1I+8g8bZlQvVtBmT1prZs9yBCG
                      vZeHO71Eiv48gMWjvQCK0jlH5zS9t/axPcDUcTvzU1q9YU+VPZixc7woJM+8KLt8vNMkmT1XbpI9
                      AAAxtnvQvj11j529L/q/vcLKhL2FQsA9ME2pvZr/G70e8lU9F3p2vaiwJTwyWWI9AHopuUWEtD1E
                      2Ns8wGMWPAVIhj2H5a09koKwvUr2aj1HaYA91AAXvfAOGb0hNbc9g6lJvcZPmL0NSyy9xjN4PbDn
                      S70l+4+9wrhAPbN/c70jbcM9o3sfvS72VD3Ircm8ra7KvdrNJb3nC069kt8jPSLLVz1S1BU9LDfP
                      vDGbxT2RHsE9zEyAPDrHWj1454a8gIklusC/4byUWMq8Ih8pPaoaYz0gkYU7shUCPUfqsj108YA8
                      guQtPWbvDb067ou9clOBvcrFU73KEhA9AFF0vSbTKj2Ai/s6wMtAPFRfE70gb4Q7w5l+vXAeOb2p
                      U4w9eV6EPcAc9bqdqja9qYGVPYfixj00qf48EG4MPKwk1jyA1YO9I8h1vQiuoDyuuyw9DH7lvHB4
                      db1+bX49+j1xPepYf72YmRg8XQQdvTpPEL1CpWY9kGlBPNqOQ70ASbM70PvcO3idx71be6G92hFk
                      veZjID2Kx4+92MS5vZV2n72HdrC9AFuvvZoSDb3YUCy8GDivvaj+GrzWpzQ9s4IvvXY2Qz2Aaxc8
                      dE33PI3BHb0KBy49YDuiuwiiyjxn0Hm9YEpxuzBsbL027AI9mnEWPUCwFDyev4O9vIPyPCbCAb3A
                      8Qa7WCbbvOl4wj2g6WY7g6FZvQ0Lx73flMk9lzRHvVhpDryGhho9OudJvUIpnb1y0oi9QDUUvUeh
                      XL3LtYA9r6K2Pbo3UL2w/Bo882qpPdDMPb3W3BQ9sq28vXg9oTzatkw9Ti0DPX1Xoz2ZO6A9wIjD
                      ulZ2dz1SdFo92CTavH06XL1gjdA7PRW6PeD8vb2SBxQ9cFdZvaFNjD1G3xc9p8FtvYqLOT1yLyU9
                      zOLavAZsHD0imWU9iQmJPfMBtb2h2p49gVOJPereaL2cwwK9uUOWPQBu2boRl4896xeWPQVhgD1o
                      gVC8d+ovvYCgDL0AqWc6BkAGvSkdoz1MHYG9mBiaPMBAtzrQIdK7EGJxvYkbvD2gSw+9kLMpPGIo
                      Hz0YaaY88msKPSstoz3I1aS9WixJvVj8J7xgliK96OPEPODNKr19Y1e9Mqe7vbhIm7w1gra9QvAT
                      PQEbrD1mnCQ9o2+qvVbWp70Ia7+9+mgaveq8cz0za2O9kvuVvVBZ1jtQaHK8QCprvXy67jwtJjO9
                      +DLHvEigrjzKBj49oh1gPfbdIT2AeUC9HSUnvfjnubygOPk75IfePKJ2Hj1zH3u91GjtvBp0Tr2X
                      sMq9QOArvPd3t71nQ7k9NAOJvGxguzxwUUm8iCqIvR0GMb2B68I9jfe7PegCnr0oAGQ8sEsXvSIt
                      DD3i5UA9/UadvWpfG72NUFi9YmXIveeePL2Dy1m9gtgBPYEtnT3sFYy9EvdGPUplyr0Be8E9aoJD
                      PaH0kz3xY7A9o76DPazQobyN+Ku9uPmCvH0EhL1A4ng8mjijvewJsrwiMDs95mRePXqqXT1MecA8
                      5ADPPLZVJD3mkFY9Y/GePXRlt7yaLYy9SqtSPZYFk713CX+9iN3JPIoudD28z+E8ItpdPbAaajyW
                      HUA9M9pwvQwW3rw6cl29wfvFPQgqhDwIP5Q8NVrDvfUfgD0L/Zw94YCyPUONhT0HPle9richPXsr
                      pT0YXHw8MG7+O+ljgD1uZzw90NxHvIBmY7oI5LC9MiofPYw4yjxDda+984h2vYVvh70w/OA7ALSM
                      POpOdb0nfsU9sNp4vPk/tz0LGLa9qttaPUelW73YM7k88kFqPUrFC730lMQ84NLDO0AxO7s2gnA9
                      etN+PcLVwL1I7Ku89s6dvXLrPT26yyY9t6bEvac6xz3IFIG8oFSrOwDKiLoRio49wLSdOjRfyTxw
                      tT281kRVPZf2Lb0p6649i1u1vSiTiDx54qU9z1GyvZQcvTxAZLw8VPqVPCA99Dv4lLs8pRS/vR1U
                      rz0Dy6C9IvJOPTBHQ715WIo9zePGPdtTpL37qau9cAgkPCgBuDzMKaa8jvePvZBSPTybBqk9Dv9m
                      PVB0x7uIgcE8+6GxvQ8Jwz2wgGu8wItOvMbLnL3MVf48kzNzvWrdOT0YOsS8LcqmPdMswT18hvQ8
                      ANspuhtqnr1+QDo9MfyXPXUonL3Q5Zo7Wz+xPaTVzzxdG5w9gK1zvQ6ZFz3tNos9lEaIPI5KQz1N
                      6bA9I4RVvQr5S71NQ1294I+qu8BlDrzkMt88SOC1PKAVRDvtj8s9f9OzvbhFsL1wzjy8YjIyPT1R
                      UL1WMXM9+V6MPZh/JzzDnDu91mEePXRvAL0eXFQ959lmvUAUDDywn128P0isPYCyJjo0BbC8YNpt
                      O6LCaz220xc9s+G1PRrXlr2AZCC8rTIfvVAdubuAysm8y8ypPbRi0jyO5k89MrsWPUJOMz3qOFC9
                      IzeFPZY1ob0ThUO9neY6vfL6lr041My8Ffu4PTZ9dT2nv2u9doAKvZD8E7wNYG69amTFvZDVnL0U
                      Eg+9KEImvFLhPD0Ftp+9YB0hu+G9mj1oo268ipAjvZnkoT1la4W9ACQUu1bxTz20aqu8uOegvQD3
                      Wrz4R/+8x2QtvSJVEj2MetQ8VqkdPajcejzOuTg9CjVfvYDCCbojZn69IDDBu2U+mL294Lu9gLC6
                      uwAIWztsJdm8BW+jveLoPD0dhoc9WAOovJQG9jzM9JG8wEM3vaNjU71wNC48k3NZvcym8TzBW489
                      gOq8vXqcCL0gDJA8bKiKvCKokL0iO7G9OjU9vaCbNTuALeM7XBoEvRLRFz3wogY8w28qvRvguL0T
                      C1O9VNTZPNKql72AASw8x3MvvcqpaT2gN5K7F/1QvWBkBztAfLa8jt18PRu6o70zfaq9xwaQPYjW
                      rL27FKQ9rAaAvFYnXD1kR+48DUtLvZwazjxgN3c7l+5bvSePxD19fYa9Sh9VvXaIRD0Hkri9zXFX
                      vcg5qLwgsNc7t5/FPeLPiL0Asqo8Y6aXPV0ax73AXfe8lCz0PBb0FL37GqK9IS6WPXI8cD0yGzw9
                      MqxFPU7tUz2YXRC8zlZFPWACfb2pVZQ9AN2QuW+jmj1yw7a9AHhtuqQfh72jw7u9XYqcvXCHDjxy
                      4oy9ukoyvYL/lb3aQZe9VCaSvE2HHr3VzaO9V9awvchzmTwtj6c90Oifveh9z7w05/w8CgB7PVA8
                      xbtQ4mS8rROQvdQni7xtkKO9uKaRPN3ZmD0j7JK9TYadve6tob29csm90D3YO/+auT3F4Za9d0Ew
                      vfl5pj2TCI49AkusvYOCv72ojRG8gL+ruhKgDj0eAns9UBqXvZCYXL1gWhy9fMv8PGqmCj27s7o9
                      +uN7vQALcbxEHNQ8rQMavd8liz0oeYi8ei+RvYPVab0ijCg9dMG9PJBUM7yA5ie6gKwVPJhLFrzq
                      A269EBjJve/Oyj3KS5S9lKm2vAMqrD3gOu+7pJfePOA33jtCBVM9rAHCPCtxnT3T8Jm95uiYvYCB
                      PTyw+vc7QyW7vZeDG73To8e9T1zHvQLBq73XYUa9FqqRvYTj8DwCWEk90ZeBPQDJfTryvmY9mMIv
                      vCk4hz2auJK9IvkhPTGKhD2Y2Vq88KBuPInkgD0FmJY9l3NevddiiT1A5kC8HRtdvehy8rwAvEI6
                      QaCuPWAksb3nW6E95z41vUA4o70QOLa9pHroPPAyx70CiZy9do1sPaNxKb1d9qS9QwmaPWLiQz3Z
                      XsE9Ou9OvZid6LxZLZk9Dck+vcXWpb0JfYo9aiB2PaCz9zudfLs9oD+1u8CbfDwRJ5k9gmkCPdR8
                      p7wt34A97YQjvcLSg71gO027oDO2PKTu5jwwwTa9nZKpPTRr+zw3I1O9oI0cu8GWoD3GHEM9PdNX
                      vepuJL1sO/U8Al8FPU35Ur1pz589AAMVvVIKOz2SoR498IxdPO4YcT3QlYe95V+/PYJnVD3GeSg9
                      RT3MPZAcVzyzn6y9FrKfve0Ca709hrg9emdDPQD04bymyR09+gpQvagtUDxVCcU9sAX9O89ZjD1g
                      /qm9elqxvfcuvj3M1bS8plQXvQl9hz3Qf0e8mKHJPOCPljwn96k9ZeC9vYDutzuYeIi9gJeLOz20
                      Tb2oukO8YqMGPQBy0LrI0KC9oPliu52lYr0AqwI7U2GkPYjK/byghpM8aDNjvAC8JruKR1+9gI4H
                      OgAou7ydB6o9AFxjvCjFiL2j0b69oPilvKrSSz0jpqe9SKWxvROMtz30bKg8j9ScPTJPKD26oxY9
                      zFeJPMjzjL0N0D+9WDefvKiZob0A56y80DxqPKExnD2bH8W9YkQdPX7lTT0+rkk9fG2DvTzA6Txi
                      CoK9N588veKNdz1A5Rq9+RifPd7LYD3yuVI90/i+vf6Phb1Wglk9wFSNuo0Ysr2G9Q695opvPXGM
                      hz31CMm9qZyCPXoKpL1otFI88bKUPebiYT3jO549ymY1vVDwFjxSeDo9AEryvBS467yq7wg9cgAQ
                      PcYXEL163B49bryMvRQGpjwBSaA9BJn9PBdMhD1ggr69tPePPEGvmz0m5oG93TrAPQQD+zy6zic9
                      cDsAPBsjxb2gvQC7OkoGvVj0kjxikgE9w4FRvXLFCz2vWbe9aCg/POPzXr0Uadi8qkUFvUYiaz3h
                      6I49BzW0PRfNrD0dvrA9CbTKPYDj6bvQPu+7Q26gvQCAxbme+QE9nrIMPYfVpj0yboC9MNsZPLOu
                      gj38ehK9C+WZPajOdjwimae9REYHvQ7Hjb2gnJo8WkdQPYiKgL2aHmQ9CsGUvQ4foL1YEYm8sbm3
                      PecSXb2gCp08dTLAPT3Dp71iImg9AFa/OwAUEjlzB7E9zC2cvJ3HhT1A1l67J7N3vUDdnLzaihK9
                      AGavuZg7bzwzpyq9AG6dusTWCL2bSsC9aPllvHFNpT3Bz6c9qIQ4vCdNoj0qKl09E0PJvQgWm7ww
                      psm9taKKvVhJIDzn6ry9UQaSPdAsK7xTwoU9R1OyvcINaT1cVAW9k0KlPQwHorz/trE9ICYevVJq
                      HD1qQXQ9TKv+vH2iWL0zoTi9EyaWPRuloL18lhW9gOgzvKxBwbzafCI9yrZzvWBzor2ooyA8/uGm
                      vZh3QLxx4sQ9OnhJPSgKyL0Bw6s9JuU2PUDv97zAOxm9Z22vPRirETxWeIq9Bi+lvSN8pb3Ad0i9
                      gDbAuz5EIj2UFYy8sIHDO+Kssb1qDks9APq5ucbqEL2sFQK9Ksh1vY0Qr73gEOw7dy1ivQ3de70a
                      FxS9oIeSu862p72dVr69cG9iPPAIaTyh0sM9c83HPbICtb2Dbrg9I7GwPaB0HjuQrlo8jUWBvY56
                      Mz1P77C9dcO+PSdamT05wMw90PwqvD7BJz2LGbW9tVyHvcYop71okCO8erRoveZUNz1vN709rCvj
                      vCFjoT1gLZW9OTLMPQylD72mdyk9PcyivXhjyL2Xk3m9j0iEPQgjn70PZqM98DoHPGzKlrzjSku9
                      e6PBvVhThbwAjAm5DBqrPJQPtrwA2bo8wIauvOC647vspKU8I4ckvbJnND06TzC90EL0O+h267w0
                      sdQ8gUGHPYsgxr2EhNg8kjxJPUA35LzCcXU9oJuxPEB0Ub2nALE9rP6kvE5aQz2W5AC9QBG2vBvw
                      jj2TZh69QAgOPMhmyLyh0ZY9kAt4vNFSpz38l848AKoiOy+hzL1q+Ye9aq2pvV9/u72s74W8lx4u
                      vdG1tT1jfnu9wKpmO6AYEruwBqO7U79ZvcNqLL1Mbve8tMIVvQNUlr2rcpY9poSGvc15JL1vgLw9
                      LEr2PL53Yz11a629v9C6vZChRTzXIYA9SHzAvVCeoL0wkRu8tlCSvZa3m71fmZ09tcjMvbqair2I
                      X5Q8kGJ2vRiLYDwqgS09Gr9nvWhLiTywFkK9+sRHvYSD6jyyAlg9hkkMPVKScT0HH3y9qHygPDPK
                      J73AaOO8jdJBvSCUXL3YIUU8WlIevZ2WsL2gsha7gkKAvTCAGb2iBb29wAVIu00zQL0Il7K9IRnE
                      PaI+OD0Ao+g5PssXPWR7gL3M47s89e3LPSq+E71rzYA9LJ2GPMrMRr3wgEm8Fa64vfCtur0OeWU9
                      ESnJPcP5UL2GM0Q9gYOoPe1uG706XcO9Da1nvaoDBT0JeqE9qZfDPXORLr3dv7Y9ptxlPTOitj2z
                      8m29VX+nPW0JSL0s4+w8xi9XPaASxDygf/c7iweDPXDiaryawE09JT+TvWKCxL3d1a+9GL3EPDL2
                      Lz0Krkq9WPd6vFKnDz1QDbs70JF4vWAgq7x/p8y9Ia63PW8/rT13wpo9ZhEQPYICET2TUUm9QAfM
                      uqB1Kruoqnm8ge2/PWD3fbt0vbk86G9DvNWqxT2ifFw9OEW2vUBX8rwl6oI9YLC/vKBaAL1QLpW7
                      R+CFPfhwx729QZ29SVfDPWM9gD267m09WYzKPXm6yT2CYT89qhAZPSi+gzxk7vE8ALxbujd2ML2g
                      iRa7ED9JvNDk4zswb4+79UmQvX9ymD1svAS9dTqrPbCIcTw0fZU8wMuivO1jo70iv0M96q+/vcZ5
                      YD1lS5O9/V63vSX4iL3dRny9ZPLMPECTzroANRG66nZfvYBJR7oAris8YOCcO4o+NL1SljU96LPW
                      vLo0JL3AtIO9cjtyPRdrZr1KOVo9b1HMvThAgjzm0xW9g39ivbJxCz3Gi1c9jPSMPMw2vLxgyO87
                      t3++PQv9mj1ASUQ8IE/LvQJEir3twcu9o7+CPQDGcLuyPIS9KBWovewwjDzoCJu8rkZYPbvtmj04
                      t+m8EFRovPkNoD1bhpa9VUCxvUD1q70YXb68FLzPPLUMmL10Kf68oGaCu6rhoL20wRW9NMqpPFF6
                      iz10uAu9Xk2XvVC61LvbqMS9utR0vSW/j71KmYK9QOgMPNhmgL2AdRs6sMGcu08OsT2QZAG8WHht
                      vCO+zD205vs8G/ynveIVh73Q8Mm7IPiFvEr3o71/uJM9eQOkPSIYej2jwVe9gNAcvOrhID2DdGe9
                      o4+kvV7bqL0HOXC9OsBpPakPuz1Lb5C9qKyevKV3pj2dWpG997aWPQD5DrwCMca94Lv2uwJayr1a
                      qMm941azPXzair1Qas87zHrIPGJtVj14Fo08WM+MPCjoITyqah49Qjw2PXLNaj1IaI88eDfCvEv8
                      xT1+6l89wiefvXoabb1oVB48wr5mPYg347zb0Ik9VukzPTgV2bwaE3K9ixK7PdgJEbz3p7M9C2Kg
                      PXJ1Tz24bp69U/+VPdQPpbzZHoU9arcGPbeoIL37ncu9ymJvvSFFgD3AgGS8IJuFvUi+k7wdskK9
                      8hp6PW4bAz2iyCY93lcTPb1Oyz23RMC9R1qkPYlkuD2atyK9C8+yvagTx7zgnq68QAgDvFASg71d
                      MaQ9C+KkvVg1kjyDb8w919F/vToDuL1Yi7u90DZNPNCwvr3AFKi9PglPPXQyA73Z28A9/gcJPcY0
                      YD1TTlG90sufvcS06TyIDM+8GTTDPeqsRL17nMq9S/G2vfpveb0HZnW9R4xnvcPPw70ttlC9X0SR
                      PWRvFL3jIJO9Tt5OPcVHnT0GbjM99PCEvRTH5DwQuAi9ZmU9PSp6rL0w4dE77FCKvRebSL3qWGa9
                      qCeMvW64nL3wAZa9yo4YPVC5bTyAWYu8oWy0PaZqDr3XiE69UHUivKoWr71N4329BrIpPZjwZDzQ
                      FWa8eksbvbo7BT3aHxW94L6pO/lPiz3GpSw9FpmfvWi0CbyfGrw9IFZ5vaw7F70uyis9aqo2PaON
                      nj02b1c96USEPdYRSj3qll69NdGBvaIXVj0A5027jKfvPIC+jzrjLDy9Z7RevU2xgL2Dx6M9TmQ7
                      PR3MPr22nJW91T2EvdQbkjxoroa8bQMcvfZGhr2o1Ui8aAgZvFHlwj1aACA9VjsuPTIiUj3KJ429
                      cSS5PRmekj3Cvjw90HgjPG5TRT16oGI9dMGVPPBFT7xmKAq9s5sgvaHxuz2S7Dk9W8bGve5nOD1Z
                      jps9kKtxvAAO7Dt3A329x/ozvU6VWj0w3jU8ZbHAvf3gnL1Q8Fy8GtB2PXp1Yj0DQKa97P+BvWxC
                      rzzviZc9StccPbO+kr3Pdrg9WFWkPCJJeD048K+8fCHlPGthoL0Q2iO9UAM/PGDG0ryg3/e7AOZn
                      O9YBTj0Hzx69BpWlvemolD3s7JW82NWTPGztnzwV9K896HXJPCzf8jyssMM8fQEbveh4ELwrJpk9
                      vsVRPVAba7yqIwo9aI2nvMJrnL3zKZW9QJFwPAlKtz1h6KY9gH3bOmGaqD1nqJI96qx0PVCrp7sj
                      xHW9aGmdPNjefLwyqp69gJo6vUHVvz2A40K91KqsvIy+vLyM0bg8U4UnvZDIUjx++0U9I5WRvSeQ
                      yz2yxB49fuuDvfookL1E8O08DxuNPeCQgztI1pC9VJuSPKCVzDsx9JY9mbOGPUC9XTuy7T89DXrE
                      vU1GT71DWjy9mZ2qPZkOtT36Em+9uMydvTAbHjzHIL89iiEcvZ7STT1P7sO9hUGoPWB7kju6gli9
                      6SCaPSOnvr3XirM94+KRvQKoVT1o9kY8jQU3vWgi57wDG5m9gX/JPX1Bvj3YxIu9DDLnvFPJML3A
                      jF27KIq8PIgLkrzQNCA8gAjWu7QLzTy4pqS81LWmPFCugTvQAmm9caTBPVCAv70JOKA904+3PTgX
                      lDxHVWW9ZP38PKjMcDwUBa68WI1dvP9Jyr3hBII90HiJvTs2rT342ou8mrZbPaCzKTtebTM90wqD
                      PafXkz0wntu7rQcmvebNGD2o9JG8sJzbO8JwAT0dF6Y9wJs+PKA6br3qpkK9uop1PeOmrD1+E009
                      Bd2mvZAWt70mSAC9yIq/vHPmI72MWY48sqGxvWi+aTydbhu9LEXTvMO0J73tEC69qmKKvagBnL1H
                      QIM9Xt2Yvbncvz0qvJK9eNSLPMUfpL29y5K9XnF8PUAMGbtNbEK9DY81vaoORD22iSA9zOaDvDpw
                      fj0OlgM9EK1vvKW1u72g2nk74GWlvbn7qz0AXF27kTqIPVaMkL0YgSW8PSqavQCEArxoZmg8RKDV
                      POh3JbwoLyQ86xSNvYDvkTu2dRG9NG7NvLw33Dwr8oy9ehPMvZnYqz1+QTQ9wPp5vIlxgD1wbKm9
                      4PbpO8ZIJD2tjco9cjUHPfBbL7xrjI89PdGSPWVKrz0XSXu9Hi0RPbBgn7upvZ09tG6JPA55o73S
                      5V89DfSkPRdTy72Ak4w7k0ulvUO0Yr3J+oY9uz6/PZJGLT3dv4e9AN24PJYtj72ivj89wKsXO3D6
                      B73Q2u67Q4DEPYiFqrxqIAk9B+vHPWrnDL3qIis9AnA6PbAMYL0AjY08cv4UPdh4QLyoez+8zJzN
                      vE/+pj2YSno8AAJ3vSzomLwyISE9YMz5OzQY9rygxqG9gKnJPGFErD1Kkjg9LgF8Pfyy2DxKtU89
                      sPCmuzBedzzathS94NmNPCSXzjwAGuE7c/yevSnutT1xfJU9nQxkvbkapj32ZVA9KGx4POrMe71K
                      moa9KVGvPfq8rr0Q7CK9LCLkvELaHT0BWsI95B3PPKdwnz2ADnG6aA64PCL7HD1xR4890SOCPUw3
                      hrzm2XU9WLmePGCAnr3vKsu9zYRhvZ7jFT3mpB497nQVPaAmETv0Sfq8MCJnvCIxBj3aOG094B3J
                      vRzJgb0cGs486cahPc7llL1H+KE9glCUvQoEeD0AD1K7FDKoPIiFj7yghPI7c4luvc9Byr2AlK08
                      KHEnPF6vAT3TnE+9LfYevQCbzjkw+ye9QVKWPdB4ajwMde48TPG8vEgaybyiwbG917hEveBopDwR
                      III9yulovbmfjD3tbq09o89qvfMMab1rfIg9uHmyvEkBiz3R34U9aJIcPKIQVD1fraw925G2PZKk
                      Xz2Aqb28m+eNPfT+6bxQhMm7gDkZvflonz3zl8M98ApDvQl3xT3sM4o8BvAHPVDTCr1MINO8xjN2
                      PcmUpj3MBZc8V5qoPaBQKbt6pkA9/w2SPdiAg7xgm7E88iMWPWCkF7uqhAy97B0WveikFLx1mMq9
                      5o8+PUY3Fr0Xc0K9s1pHvX/LpD36bHM96a7IPb3qMb0D6pM9/NnSPCCknrtoWqk8QkglPRJbtr3n
                      xi29rXi0PXBNir1q5q+9EyohvfKQOD2UqAy9H9HBPSDoNL3qQAm9ZEj/PIvQlb19nK490KpyvNAE
                      I7xixw89NbywvRWxv72gMaQ7rd2xvXc0pj3gYxm9JoKavUoTIL0oL+G8GPHDvVNgQ72b7409ulYX
                      vZC4DL1H9WS9iswNPQg3nzzQiLy7WQrLPS6OZj0eTWE9x6VuvQi3mLzBRIw9mpMovXD7HLyog5y8
                      tNaOPP+6pT2rtIE9WLxzPCxW8zww6WS9xvxrPYDEt7qKvYG9ECF6PBVHmj1AyZS9jtKKvaaTRD1L
                      hbY9s5atvVraKj2Ssj49g07BPU3ldr2NITq9/828vb8qu71gs9s7IQjEPVCh9DuaMQ89HXZtveD7
                      6Lvt1MM9BmJ4PUFQhT1uEIO9vZMwvdYkHz0NmoC98oJkPTIBor0oTH88GMxFvIVDi73AFHu7/kWs
                      vbmXuz1sgOk8jzegPRcptz221aK9AF73O/HypT05YrQ9Ros8PaGHlD0ApoQ54EDlvN8Iqj2TD749
                      m+uEPTZZNz2o/Ym8xWagvQham7xidjk9wD9/O0PtS70yBnA98GwlvRhUaLwAwcS7lAqCPANFNr1S
                      aWc9N3pHvYLjMT1iTTs9pgsYPQAnX7oUMdk8AOjQu5peLz0pZJQ9oIkdO1MuHb17dpe9QppSPe0k
                      Jr26qb29r829PT5VZj0F7oQ9kx2fPbfCxj14BOm8MKtavMn8uz3rYK29o1RlvXTz2DwGbmc9mIuW
                      PCKaZD0YK8W9XRxpvQC8XDpgx6y98Mi/vTI0dj35m7w9gBENuk1zx70Q3Y+9y+fGveEamT25PL89
                      3vgvPaDbu7z4GcC92FqdPLTRvzyyqC09Mwy/PaJ0Bz1SeXM9+7S2vUGitz2piJs90BhFvNASUbzo
                      poW8NG26vHUixT2lx7a9QqFKPbAASr2icR09RrmAveDLCr1HGmC9SV6oPXDQib1dkbM98D2EvcxI
                      rryFS8Q92oNBvUhTyb1gGuS8CMLFvT1guz3iUZi9LgWivXNuq73k6888rio0PQCVCDuHtR+9o19h
                      vYlouD2AHR+9U6MmvQLjTD0Qkke8EmabvTn4uj28lus8BpcRvTKdET3p/oQ90BUDPLovLD2ieK29
                      0/BjvRS2+7yseha9CvOqvRIXcT36Way9ULmovc2UhT0wmse7YLCLPNrcG730vpS86H6cvfguujyK
                      i7e9r/SZPVhYATw6l2s9gwhavWD66rw3h609i92qPaUzpT16b0a979nHvdp3M71AOjK8qAJWvDXD
                      qT0wDCm9AMw8vGXpoT3Qn529ayS5vayk9LybzMM9tOmUPDmyrD1yQRs9YAj6vCTlCL0I7sc8SGqg
                      vB6WJz3EQdU8WBS0POnIij1gz3u7JmdmPRBbFzwq7za9Bc3JvbDjl71Z45g9h6qcPaNPkj2iThc9
                      QPMAu9epLL3pTJE9GlYkvYLJiL109hS9Y4U/vTZEDT0qMrm9AHcIukAUKDsCJhg9kPtevVgjJzy2
                      oZ69wP57vGhttTxoWyk8cEg4vQOjmb0YAEI8MyCqvXedzD22ERg9gN0UOvlfqz20PJW8YfiQPeyP
                      ybwyoGE9FhqHvap9ZD2qWBM92aiwPTGWmj1bdsm9SFiSPIDoJ72786w9owtAvVgElzxY7ak8IGCn
                      vfDqf7y86fs8AAiluqhB57yFgcc9oFGzvRInBD1K1HE9x0vJPatSyr2YXfW8eRSgPa1+pT1QkOA7
                      GBeOvGe5sz1iPTo9Z5pvvVBuD72yCMK9JTe0PbIhtb2ofUy8RaWIPdQAnjysG+G8Lc7JPQBfRruV
                      5J29jGu8vNqPOb2ARo08mOLvvLtqjz1QxyY8fiiHvdGvoz11iYY97vcsPcijqDzA/TQ7yPqiPEBt
                      zL2YP6W9XR42vb2tlb2wVCO8vrBPPbTkujzwKMK9C121PcoxOj1o/lu8PuY0Pajejb08gtc8YceO
                      PQjanDw4gfO8MHDTO4CQyDtlJqs9gFN6vZMNlb1+ZEI9kZCjPUDUAzsjgpy9l+OMPQW8hT0I5Zg8
                      frAzPcBhQjxdyma9aJC/vEP8V73AqqS9kpclPTDUo7u4Hra9w36SPTOmcb2AIbq6NxAwvT6ZGT0a
                      ZjG9digAPYCOL7xjE569q92KPQ3UhL0+4BU9X22gPXrZC70zFsK9gMCuuhr+Rb0Y04+9cu4zPUBZ
                      ozrKQ2y9enQZvawt6TwA3ma9lKWMPCFBtj24wpk8EvIqPb/byD3URe88rOiNvH+zur3yuAM9ygYH
                      vehep727fcq9APtBO0iix7zdPJy9koudvVbydD24nJ29yCPJvcDlb70cS/48g7iQvaBUhDt3B8o9
                      ed6QPcMgvr2Ynuu8ADwkO9paU70jJlq99m6XvTKjAj1wjyi8YCEBveiNmTw6g3I9LLvEvDc5Zb0Q
                      9mI8GttLPQo2nL15bY09EM94vXOZxz2CkH89p7+1vdBT6jt4OI489/enPaWHij02ChE9iOKtvZHg
                      uT1Vy709rMfQPKLJVj38R4y9eBWsvdTU2jzU5pi8yJCbPJObOb1AKKk8yrd8PTp/Sr0XNB29Seic
                      PRDjxb3ogMm9qI8jPLARBTyivFg9aDOLvazgjDyYJpm8YCtjvf1Spz2UC4O9ZVmuvbYSGz28/xa9
                      dp1jPUD5mbyw+8o7NdfKPRhjgjxYt4y8MiJ2PdEDmj3QtUC91iMHvZAbw728/fc8AhigvZAKZb0T
                      AF69AF75uagSeTzDDMY9+EuavEq9gr0M45Q8kvZTPQDvH7oqYQk9qtU6PZoAaj0Qgiw8wAt3O5pW
                      vb2n98I9eXmmPaiDbLxioce9FKuNPDpwOz3Fc7E9jE2RPHf5kj2zBsA9ANU8O4E+yT3Z+og9NXOM
                      vaa2aD3yu5G9PR21vV46KD0Ao725SpMmPfM5Yb3xlos9eUSfPRAPGL2C0jo9WoUyvSNIdr3CXXs9
                      6B8GPHKRcz2ecQo9oHW8O/P+kr1gN7C7Bkw5PY84u70ii3Y9mH0nvBZrcT1QQBu92jgDvd5nSz0r
                      HKY9YxVBvfKlRz22yko9sG1bPNz+5DzyfT89BR6lPaAE/Du47/G8coKdvbMBvL1NV4C9crAXPYFi
                      qD2nXrw9NAervKcePL13ECy9tCyEvGlwyT2D9cK92MLcvDK9Cj0VXcY94hB4PdCtPb3KwQk9MFuL
                      u6jOvTwQ+Ga8mOWsPESeiL3IU6y9IsojPeAkgLxOwhY9KATTvMLlcz3q8X09OnkSPYAgMjwckuI8
                      jiyovV0OJL2oPo296NUvvHqQZz3Kssu9K8WYPRCjU71Q/1m9sJv/uw5rET0Qc7W9wAEOO7qyMj0a
                      Cgo90TSbPQCDUbviRT09HySpPbMzOb3oymA8NAHvvONbtD3k/4G95ROhPfk7kj0fzKg9kPJ5PLAH
                      WrySynI9cMZavYf0jT1bHII9CJ+VPHJZwr2P/6y9Qn6wvbJUBj04K7882UOdPf9rs70wV3w8qrG1
                      vUFYmj1RmZs9rpmSvcaMaD0wVQe9PSAsvYMKM71ojHq8wArYuiDCNr1t3cE9CEOdvdAKf7xQGCO9
                      p6Zkvaa4k72AImu6EcO3PadDtb2Ayaa7ekEHvcyx3byKKxm9ymybvS3Ihz1pAZ09Z/CgPUC8TTv/
                      V8E96qM5PZQPAb0baMU9p4a4vWOwxb3DG8W9TCKgPIjPvDyEIYq9oBMAu+t7vL2yMFI983eRvViZ
                      SbzYP2u86U27PeMXxj0AwIu7eDrmvGp3N704/ei82mJ3vXrTVz2p/ZU9P2aXPTTauzw+0EQ90H0l
                      PAA5uzu8Z9Q8eDWHPL32qb2mUxm92JiBPOcDZr3Oik89RxlTvZT4EL1tjbI9yKeKPMm+gT1K0Hy9
                      MHKevUipx7zIEKa8OW/GPXRG/bzDoHq9ALpluwYDVD2MKxO9aIa6vM1Gwr0WMGE9gHuSvJv+tj1B
                      FYY9pNPPPLil4rw3wzW9Kqt+PZH+sj14yrO9WHMGvPKDYT3Jr4U9FSuDPaxUvLzt+ck9HXOsvUCb
                      iLxAjwY8k3WavfdGuz3MRoi8OOKMvSA2g7saBGk9kiVRPfqJvL0TKo49amAHvZ1GJb0A9Fi8WYCD
                      PZTtrjwyXKe9kVqMPepqPr0VF4u9lHyNPGDQqTtZSoA9ussTvfI+xL0YkV48mROBPdFyxj1nm449
                      ReGnPeCAjjzfKbY9gD4ZuohD97ywv7c7g/u9PSYzl73JKbo9M96qvSAdjL3Qi5K76H4MPOAKv73s
                      zPW8kOJ4vWi1dTyLKJc9tJzDvFghGDzgFes7Sv2gvYcbqD0Da8q9CEmzPGxhgLwl3Ja9ELQZPMSK
                      4jy9Lp+9TqdaPeriJj3g7oe7qO77vDrRiL10Ur88ABpaudk/xj1FZI69fAPTPGgTm7xAwXy8gZ6A
                      PVpLzL2A78+6CikPvRHujT0gfg296+6aPZAeLzxgeNK8iJnyvMW5xr3oKC88tYuJPWNGhj0xUq49
                      iMDMvN1meb1wPhA8tcWUvUAuUjwA4EW9SLbqvE5unL0tXMI9aFTbvH/+yL201tq8FXicPa0gxz0B
                      ZpE9dJyvPNB+IrzHrG29kixePQIRfT1ifY69BSrKPWAJI7ufEYE9qbKVPfhfuTw4cqa92DlBvGkH
                      rj3zSrs9fHLaPLPvHb2qwlc9NduLPWMMcL3d0C69foYxPaBNDjtZxKM9PkJ2PY9Yr72rIqc9U1hu
                      vTjNibysC8U8EDU6vaA7iDwHPIw9kscjPbQnCb2CFrm9NzLBvdr2Fz3ZS7A9sGD2O2bEQj3Cmmk9
                      cIIvPAotJr15Nqc9PsEjPZi9FLx61309Th8bPeKCfj0AqS46rimMvR8Bhj1D2529oAilvUBFRrwK
                      /H+9o3iCPdhHhjyQsaG9x+kova0Pgr0I+eS8jIqnvCUdiD0YGMq8MOIfvW+avz1Hgsq9AMmHvY1f
                      IL2u1Xo9AgVpPXCsbjxMBqa8Sk4kPZFbuD0ORxg964qlPRC5cL37v6E9qnEnvQA8P7q1K8w9ff9P
                      vdPgxj0COWU9/hyXvdUTxb3gQoS9rPGmPKizDjxQffG7X97GveLDrL3QM5y7wq2Gvf1+rz0mb4G9
                      io88PX0qxT2YZBa8bjqHvWxUnLwmEns9AO7IvAgolzwpBao97EP5vABI87sAFK84N1CfPUA8GTtv
                      YbA9ZbKyPRWspr2A8MA87Gj7vHmKgT0XeCi95JrdPBLKHD20n+88go1RPXqSPT1Nda09kBEfPIhX
                      6LxOmJG9NlUBvRJXBj2umoq9QB+nPOwYir1AxS88UyiCPctbub1ApiS8Uyc8vbcviT2YuTg8FXjG
                      PTCydLzP47w9fVBBvSii0rxmUgI9jYLHPQB8rbr1t8O9pRqHvYNcjz29Wai9AOqAPH/8yb24+ua8
                      AL9wvdivfjxrO8S9ANT7uvIGUT0iKhM9/hihvbKHhL3TmZ+9+LmXvLBOtr39nbK9sH/3u80Myj0l
                      OMq9+Kq2vOUDr72W7Am9YsVWPfLsyL3ckoa9iT2MPRDuEzzNWDe9WfG4PSC8tr2wVVS8DPHTPDKi
                      DT3DksQ9WCU9vMhXrbwoXTG8oj5bPVFFmD0+MBQ9s1HJvVnGhT1aY2+94B+zPJYBgr1E5wi9OA+B
                      vU/RkT1gaak85+jKvS17t71tNGu9bf2OvXRCtTxcJ/Y8TGWpPE3WIL24S5s8kA43vGKqGT01D7S9
                      OppEvYEpmD3u1HY9eSmfPfTDjzyA+aE6H4qNPWrosb21Rqg9LJObPH4QBz36AQq9wKJHu3qNrL1Q
                      We67ZZ2iPVcyYL1l6Ya9SEO7vcgfrDygdpC9Qo9yPViezLxAcws7jkwzPdQYkbzY1D28EJg+vPFu
                      jj2A7X08YAmSOxTHibzWaBc9ig1MvXPenb1hBaU9n4CjPSDmtzxjdJi9cB1wvIBbX71fm7O9RhwI
                      PWCIujt7zr09gJOtO1OuWL2wZE+9NUyQvXCAMbxgk429FGemvKl6oz32wXs9bRohvVbETD2SFAc9
                      YlAgPTl9jD22zl4993amPQBGFjwEzOo8sxmavRb/CL2Smsa9vitpPVBvp73ig1Y9mOkpPOHWjj1w
                      0x28NHKJvU1oYb3Yl6u8jOnDvADgYrzZkZU9cAYevM4/XD3EhQC9cHlxvch4p739L4s96rFfPVDu
                      0zsfdcc9ijFdPShAuL3d93G9QAJ9POPjt70sfPg8noyoveIFIz2InZ+8itUAvWxvm7w3p3m9rPfx
                      PJ6daT0ELYO9lCfOvPWfx70irzM9YK9gu+K8aD2FLLU9Yj0nPagXObzLK4c9+MuPvag4kzzAhYm8
                      UIpdvEhFrLzoYZG8GKGkvESF3TzdgYE9pjpqPQG9pz2qjRq9XX8gvY3fgr1tPpY9tJzWPA2iQr1K
                      d149uDm/PEB9MjzZlcE9AIsNOx06L70alAq9b/jGPfINaz1T/bI9UlYzPfisozwwkNw7oEuhu/oL
                      pr3o4UQ8QpEsPX16oT2KEr+9g3d6vVNQc70AUhg7wNQivNDsZjxSrgM9bAnNPLh1qb3K7EO9TcVI
                      vVatp72X6YQ9mDAYPBRp1DwCKVQ9IVHLPc4Zp70BHZg9nZdVvYhYl7xRCJU92MTJvXym7jywVAm8
                      YCUSu9DCRLxCv469Z4ZIveym6DwR75Q9rQ7CvdoCk73O7JG9gG4AOvMRpr0CdWg9ZObfPAEbgD00
                      u4k8qMp5PHWurT2E9dw8iOi8vR1IVb0aqkS9bACKvcKTgL34mbu8QEuQvWU7iT15VqI9zXyJvYdx
                      cb302/8806knvZpIsL2I0rw8IPn9vBuGsL2wsbm7UKgWPLiJs7xytic9lU2IPTPlsj0buKg9WueP
                      vXSW8TwswdW8CNCZvRfzJb2oMGC8cOU0vH5kIz0CuR49I6FfvfUHnL0VmYm9J95NvUVKrz3YW4S8
                      lNWBPI/Pwb1/Sa69
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDk0NTU4NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MDk0NTU4NHEBYS5kAAAAAAAAAB3Gwj12Diw9EhtgPdrNfT1Q/pq7Gdu1Pf8yuz1ytp29
                      1J20vGhocLyAmsK77YqdvTB1eryh1Ys9zWh+vbAzcr2feba9AJgJuzAnZDy4qa48aH4IPBn+pD34
                      IOi8oKqHPArBbr3w5Ea9zFCNvCWpj714saI8zXu7Pez8/jx5EpQ9eNadvYBpFzoMNpK8wLC1vFea
                      w73zuqU9vUWRvW/6xD2xarE99EjMPIzTxLy67ze9UvAZPZDvmb0Q6go8dshWPXYpFr3PI7w9pe6a
                      PYBmT72jg329k5WhPYeZkj2YErY8ZXaNPcjjlDx9F4a94LGLOxRbsbzKs029qCgqPAj0hLwgOFS9
                      QauRPUCEVbvMN9Q8evwUPRAhDr2/M6+9uTbGPXEToj2HB2q9bg4wPeljxD2oAUC8B3govYSY9zzg
                      zcu78q7MvVAJYDzWrws9wdefPZI/PT2A7co6cBozvUd+lD0H+nC9Q5iWPcQAhr24SIG9aFkmvIpY
                      Yb0EueA8kzmRvcBMyzxqpZu9uwerPZBTJbw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDk0NTY2NHECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MDk0NTY2NHEBYS5kAAAAAAAAAOCpzL2GYkI9OITyvGs0sz0CUDk9+FyOvccjIb3fKco9
                      0jbEvZHpnT0/WJ09DOWfvFCU1DvSHXI9r3XAvSww+7wwA927jH3MPPVYrz3MMZQ8wLEUu+9Ipj1n
                      GzK9GCCUPPMOm70GnDo91wcuvU/Ttr2/4q+9MRK+PafKW70Z0rA9lTCsPdjyubzDil+9Z/O6vfUc
                      mb0egDQ9ALFCveMWr71sFfU8fcl8vQr/VD1WQnc9oCM7vTVFvb0wpyK81kifvc5kOj1W0GE9wIQ4
                      PLqoe71i63A9R8aFPSAcuzwKPli9jIPMvKvjnr1qX2M9YD+qPEdFeb0gMae7AI4cvNQxib2KvW09
                      oHL2vAHmlD1CFzM9ih1qvSLRJD1iWEQ9DZ5qvSjnGbyZFo89kCYgPNCQOr2AIoy7lQCzva1thD0A
                      JzK9+PbfvMkPxz1qAUA9Ump8Pc11R7172ag9oMOnvKebrz0XhbO9xb2yPWABgbsUcOy8HUCJPaKJ
                      BD2+Uyk9dLOzvKDHBbtWHzE95kuBvRDIx70=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzE4MDk0NTc0NHECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzE4MDk0NTc0NHEBYS4BAAAAAAAAAKeInD0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        LEUIO3pE0TokNPA6JDTwOh6kGTsqdeE6bOD0Omzg9DrMYBA7213aOjaYszo2mLM6zGAQO9td2jo2
        mLM6NpizOpq1cjt1aR47BD08OwQ9PDs0AFw7F+wmO5zVFDuc1RQ7XMODO/NWVjsJEg07CRINO1zD
        gzvzVlY7CRINOwkSDTulpko7wQEjO6XhKzul4Ss71YxVO2GaRDvtjx477Y8eOwIPjDufqEY7BpkL
        OwaZCzsCD4w7n6hGOwaZCzsGmQs7paZKO8EBIzul4Ss7peErO9WMVTthmkQ77Y8eO+2PHjsCD4w7
        n6hGOwaZCzsGmQs7Ag+MO5+oRjsGmQs7BpkLOx+wcjxpCJ48+K2JPPitiTzTP1c8Oa+SPF8Nhzxf
        DYc8KQ9lPKFylzywJLg8sCS4PCkPZTyhcpc8sCS4PLAkuDwYQgg8SMRQPAWwLzwFsC88pFIWPH8f
        RjxtM148bTNePEb9+jsLSxo8EW5qPBFuajxG/fo7C0saPBFuajwRbmo8UDEjPMThSjweaEA8HmhA
        PBTdGjx2Nig8oZFQPKGRUDyhH+w74HgmPDDnbDww52w8oR/sO+B4Jjww52w8MOdsPFAxIzzE4Uo8
        HmhAPB5oQDwU3Ro8djYoPKGRUDyhkVA8oR/sO+B4Jjww52w8MOdsPKEf7DvgeCY8MOdsPDDnbDw=
