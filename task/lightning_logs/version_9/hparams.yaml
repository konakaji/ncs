N: 8000
beta1: 0.0
estimator: !!python/object:gqe.energy_estimator.ee2.V2EnergyEstimator
  _compiler: !!python/object:qswift.compiler.Compiler
    circuit_encoder: !!python/object:qswift.compiler.QSwiftCircuitExecutor
      _cache: {}
      _initializer: &id001 !!python/object:gqe.energy_estimator.initializer.XInitializer {}
      _nqubit: 3
      _nshot: 0
      _observables:
        0: !!python/object:qwrapper.hamiltonian.HeisenbergModel
          _hs:
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          - 1
          _matrix: null
          _nqubit: 3
          _paulis:
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          - !!python/object:qwrapper.operator.ControllablePauli
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          _qulacs_obs: null
      _operator_pool: &id002 !!python/object:qswift.compiler.DefaultOperatorPool
        paulis:
          0: &id003 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: 1
            matrix: null
            qulacs_obs: null
          1: &id004 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: 1
            matrix: null
            qulacs_obs: null
          2: &id005 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: 1
            matrix: null
            qulacs_obs: null
          3: &id006 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: 1
            matrix: null
            qulacs_obs: null
          4: &id007 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          5: &id008 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          6: &id009 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          7: &id010 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: 1
            matrix: null
            qulacs_obs: null
          8: &id011 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          9: &id012 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          10: &id013 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          11: &id014 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: 1
            matrix: null
            qulacs_obs: null
          12: &id015 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          13: &id016 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          14: &id017 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          15: &id018 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: 1
            matrix: null
            qulacs_obs: null
          16: &id019 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          17: &id020 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          18: &id021 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          19: &id022 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: 1
            matrix: null
            qulacs_obs: null
          20: &id023 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          21: &id024 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          22: &id025 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          23: &id026 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: 1
            matrix: null
            qulacs_obs: null
          24: &id027 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          25: &id028 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          26: &id029 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          27: &id030 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: 1
            matrix: null
            qulacs_obs: null
          28: &id031 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          29: &id032 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          30: &id033 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          31: &id034 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: 1
            matrix: null
            qulacs_obs: null
          32: &id035 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          33: &id036 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          34: &id037 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          35: &id038 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: 1
            matrix: null
            qulacs_obs: null
          36: &id039 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          37: &id040 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          38: &id041 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          39: &id042 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: 1
            matrix: null
            qulacs_obs: null
          40: &id043 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          41: &id044 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          42: &id045 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          43: &id046 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: 1
            matrix: null
            qulacs_obs: null
          44: &id047 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          45: &id048 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          46: &id049 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          47: &id050 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: 1
            matrix: null
            qulacs_obs: null
          48: &id051 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          49: &id052 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          50: &id053 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          51: &id054 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          52: &id055 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          53: &id056 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          54: &id057 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          55: &id058 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          56: &id059 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          57: &id060 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          58: &id061 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          59: &id062 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          60: &id063 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          61: &id064 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          62: &id065 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          63: &id066 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: 1
            matrix: null
            qulacs_obs: null
          64: &id067 !!python/object:qwrapper.obs.PauliObservable
            _p_string: III
            _sign: -1
            matrix: null
            qulacs_obs: null
          65: &id068 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XII
            _sign: -1
            matrix: null
            qulacs_obs: null
          66: &id069 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YII
            _sign: -1
            matrix: null
            qulacs_obs: null
          67: &id070 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZII
            _sign: -1
            matrix: null
            qulacs_obs: null
          68: &id071 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          69: &id072 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          70: &id073 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          71: &id074 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXI
            _sign: -1
            matrix: null
            qulacs_obs: null
          72: &id075 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          73: &id076 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          74: &id077 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          75: &id078 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYI
            _sign: -1
            matrix: null
            qulacs_obs: null
          76: &id079 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          77: &id080 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          78: &id081 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          79: &id082 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZI
            _sign: -1
            matrix: null
            qulacs_obs: null
          80: &id083 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          81: &id084 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          82: &id085 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          83: &id086 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIX
            _sign: -1
            matrix: null
            qulacs_obs: null
          84: &id087 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          85: &id088 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          86: &id089 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          87: &id090 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXX
            _sign: -1
            matrix: null
            qulacs_obs: null
          88: &id091 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          89: &id092 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          90: &id093 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          91: &id094 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYX
            _sign: -1
            matrix: null
            qulacs_obs: null
          92: &id095 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          93: &id096 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          94: &id097 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          95: &id098 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZX
            _sign: -1
            matrix: null
            qulacs_obs: null
          96: &id099 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          97: &id100 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          98: &id101 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          99: &id102 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIY
            _sign: -1
            matrix: null
            qulacs_obs: null
          100: &id103 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          101: &id104 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          102: &id105 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          103: &id106 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXY
            _sign: -1
            matrix: null
            qulacs_obs: null
          104: &id107 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          105: &id108 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          106: &id109 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          107: &id110 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYY
            _sign: -1
            matrix: null
            qulacs_obs: null
          108: &id111 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          109: &id112 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          110: &id113 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          111: &id114 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZY
            _sign: -1
            matrix: null
            qulacs_obs: null
          112: &id115 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          113: &id116 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          114: &id117 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          115: &id118 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZIZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          116: &id119 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          117: &id120 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          118: &id121 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          119: &id122 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZXZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          120: &id123 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          121: &id124 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          122: &id125 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          123: &id126 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZYZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          124: &id127 !!python/object:qwrapper.obs.PauliObservable
            _p_string: IZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          125: &id128 !!python/object:qwrapper.obs.PauliObservable
            _p_string: XZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          126: &id129 !!python/object:qwrapper.obs.PauliObservable
            _p_string: YZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
          127: &id130 !!python/object:qwrapper.obs.PauliObservable
            _p_string: ZZZ
            _sign: -1
            matrix: null
            qulacs_obs: null
      _tau: 0.0015
      _tool: qulacs
    initializer: *id001
    string_encoder: !!python/object:qswift.compiler.QSwiftStringEncoder {}
  _measurement_gen: !!python/object:qswift.measurement.NaiveGenerator
    hs:
    - 1
  _pool: *id002
lr: 0.0001
n_sample: 10
pool: *id002
sampler: !!python/object:gqe.energy_model.model2.NaiveSampler
  all_paulis:
  - *id003
  - *id004
  - *id005
  - *id006
  - *id007
  - *id008
  - *id009
  - *id010
  - *id011
  - *id012
  - *id013
  - *id014
  - *id015
  - *id016
  - *id017
  - *id018
  - *id019
  - *id020
  - *id021
  - *id022
  - *id023
  - *id024
  - *id025
  - *id026
  - *id027
  - *id028
  - *id029
  - *id030
  - *id031
  - *id032
  - *id033
  - *id034
  - *id035
  - *id036
  - *id037
  - *id038
  - *id039
  - *id040
  - *id041
  - *id042
  - *id043
  - *id044
  - *id045
  - *id046
  - *id047
  - *id048
  - *id049
  - *id050
  - *id051
  - *id052
  - *id053
  - *id054
  - *id055
  - *id056
  - *id057
  - *id058
  - *id059
  - *id060
  - *id061
  - *id062
  - *id063
  - *id064
  - *id065
  - *id066
  - *id067
  - *id068
  - *id069
  - *id070
  - *id071
  - *id072
  - *id073
  - *id074
  - *id075
  - *id076
  - *id077
  - *id078
  - *id079
  - *id080
  - *id081
  - *id082
  - *id083
  - *id084
  - *id085
  - *id086
  - *id087
  - *id088
  - *id089
  - *id090
  - *id091
  - *id092
  - *id093
  - *id094
  - *id095
  - *id096
  - *id097
  - *id098
  - *id099
  - *id100
  - *id101
  - *id102
  - *id103
  - *id104
  - *id105
  - *id106
  - *id107
  - *id108
  - *id109
  - *id110
  - *id111
  - *id112
  - *id113
  - *id114
  - *id115
  - *id116
  - *id117
  - *id118
  - *id119
  - *id120
  - *id121
  - *id122
  - *id123
  - *id124
  - *id125
  - *id126
  - *id127
  - *id128
  - *id129
  - *id130
  beta: 10
  nn: !!python/object:gqe.energy_model.network.PauliEnergy
    _backward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _buffers: !!python/object/apply:collections.OrderedDict
    - []
    _forward_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _is_full_backward_hook: null
    _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
    - []
    _modules: !!python/object/apply:collections.OrderedDict
    - - - fc1
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTc5NjE3NnECWAMAAABjcHVxA02EA050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMyNDk3OTYxNzZxAWEuhAMAAAAAAAAMzbU9o4c2vgClqDutD5I+2O19vgAM1DspGp8+aD9P
                      voyBkL0AnJm8qWmoPuWgmT7cmtu9tkvqvSjwA757FYg++KwSveAHML5e4yW+FPXsPajsUr5pNpM+
                      +NlTvhpTZT44FUa9NmFKvkQKgL2GdCI+vg+mvnBfxTw0R569rssnPmyFo77+tic+brpKPi1ziT6N
                      0o8+2KVjPYZWeT6fkpG+hFmHPSBIRD3uZIm+IHEsvaZtmr44Xm6+XEa7vWhPCL2EpMQ9/O7/PfDq
                      4T2w8eQ8WLQPvQD6grzPq6O+MAGdvQYWej6QEcg9HoYkPsO2oL4qOiQ+7UqRPoxS6b3Ghhi+kJJJ
                      viRwqj2AKVc774+HvgDZgLvj8Zc+TIvsPXujgj5mPx8+qP2NvrADPr64VKG+VpH9vQs3N75wM/09
                      2CwzvRQ3jb7TQE++ers0PnaiQj7y3i8+WlNVPuC9CryKthI+kANyvp9KhT6YNGi+LvEevjpkNT5A
                      GNs9naqGPqrSKj7gcxe+uBo4vhZ8Qj6HHqS+3cqdPmKtQz7sxrK9+l04Ps7FFD5kA8Y9wHCBPdi9
                      Pb4yTDU+/0GhvjGmhD6A4cA9UIaqvWAdXL4o61a9+q9zPqjMfb0AMti7m0aUPtHTkz5YqXe+VIGI
                      vkKbez6LvE6+S96Ovpi9fb16/SQ+tgVhPkI4PT5LUla+SBQQPh7wFj7z7UO+9jZ+PsimOb3GpXi+
                      IE3EPTBM9Lw8hZ09GX+jPrVClj69rYE+Vpn2vXyk/b2M1549m9hBvr7TfT7j6ki+rlgPPsSxnr6A
                      at+9uJiTvjYNdT7MHLC9yXSPPrDTqL5mKoq+5rU3PvaVAD49xKM+IEGmPRLQKz77PYm+8r0gPhgV
                      GT5Tbh2+MHuivsHbhz4epic+oBt7vSyOor2AeVe99kbNvQ6WC75U5bc9GE+PviZoXb4As4481Mmm
                      vcS3gb0e602+Q4mkPooMfj6c6oW92ntqPl6cOD6DTYW+LvwDvv4tJL7O63Y+nhAWvpsQi76gtYE9
                      Nnldvize5j0gHGC8iA2TvjZNfb4tTYw+AI2UutC177xtfpk+KgUlPmj6Mb1g4Rm9uOlHvYrEdT7m
                      AZW+8FIXvpJTWj6gBp69PO/GvVTTzD2w25O8nDP2Pb5WED693J4+YRGWPlfaiL5BVJ0+dGTwPeVP
                      lD5mxNC9VsJbPsZRu73QqvS8EFToPQCps7qcS8G9doBtPprbfj6U1bQ9QDIfPpNmnD7WvRq+U0sM
                      vsnxqD72csm9K3qevthJFz4mThU+KMAxvdArib2A5Y68EyVDvggXBL7AECS+TKbRPSQGgb7pGIw+
                      u0elPi0ZjD4jVYg+GL5ZPWXAjD6AQW87mMcRvZBSu7wgRke8wwmCvnpLST4jh5g+BGWovh/npr7q
                      fBA+iFsLPUj1QL60GYG+wN9aPXuaqT6E8cg90+mDvhBD27yOh3g+q7gzvmuShr7dLZk+n9ukPsAF
                      yb2Q8509fHzXvfC4Fb4D4J++oIu0PUAJNL1A/dq9yk+kvm76PD4CYXM+hiLtvQYB/r1Q1PG8NG6R
                      vTiDfL4o/WG9DvtxvlM/F75QKoO9wPUfvepgIT5w5xm+7pNtPuxOo76acDc+LOG8vYAS0D185+U9
                      dKnzPVBVjjxkqaw93InzvXB7/jya3Tk+XmVyvhRH7j1u1BG+wzwmvnamq70AFM26yv1XPktUFr7q
                      ZWQ+OAsIPtKdmL4gYE28oL93vQAmqLtWH1k+pD2fPQImST5wham9PI3avTp4Qz5Q6uY8VilsPoCc
                      SbuWzFc+mAUmPTLfOD4S3HA+86eHvob+bb7Q6iA+qFJlvkZXTb7TRKO+sYiPPhzQpr5AaSq9wO+6
                      PXD2Bb4o22i+BYidPs7Ccz6gQOE9eOhaPb6YOT4YPjY9ECqSvVkGhz4gWhi+vopNPmrWKz6wvOO9
                      9WSaPh71Bj5eZl8+RViAPp65Xj4+ols+wBTrO8AvLT2gWYy+YFifvjvxLr4Wjx++1H+XvmDCCLzs
                      qf29vqgoPtC5gjx+flQ+OmcyPu7HQD44fF89NIWCvbfSkL7SNko+ENjWPTJYj76QG3S+qrB8PoDu
                      BTvm/IC+4ohtPj4zVr7I5129NCTxPeI/m74svok9Zhi9vQa8VL6AgrQ8wDwRPSpLiL78k5m+474I
                      vgh8E70Mm7G9mpt7PlD/ub0AN5M8cZKoPh0fnj6A34U8+wt4vgAsKL7SKB8+KqZbPiQjjL5OVAI+
                      RshvvtT8jj3gmp+9AEXaPaaxdr4An+870LnavNM2OL6wafk9gt5vPiCZGj64i189gBEiPHJpQz6S
                      J0M+IyuDvv4VJ76/lYM+gADRPUh7k76cmr697AHYPeDU4b0QCvM84BTHvfdaoL4SxI6+kIJLvmAo
                      Er3wd8c8TjM2PlYrzb08o7i9NBW4PZhdh74A5OI6kzZ7viDGCz64Wnu9J7OdPvrqjL4c4Nk94FFn
                      va2TgD7G1ra9FWCEPraupr7TIzO+/j8Yvt6xlb5AKc27UHKYvL6ql772MyS+3rR6PoWclz7BbYk+
                      AGfAvIDsG70De16+286Fvvac7L1QWey9NgBtvoCMQDwgxii+cJjSPYKHk74AP4I6OHV8vZDN3b1V
                      348+FsWSvilfij7016a9ZkONvjtEBb4ANfe6QAixPbOGmb7mqT2+lv3DvUI+eT5IrwC9OFoHPoRx
                      9j0CMEA+KNk7vRiWVL17XJ4+EDmGPYyhoD2AVoA8gPkXvtrZAT77MX++EvJqPvLCCD7+iVa+wEK/
                      O36XhL4U4Iy9oRilPmKxYT6QWnK+5bOpPiBGJD7d2qU+q9ozviyGoT1IPzo9kWecPiA3+L0G1GU+
                      yoVYPnOHmj67m3++Yo91Pu6VLj4giIA9PsR2vm3tiD6wXs29oK4YvsAIWr2PwYG+UI2OvXhRDD6w
                      zOw8oDZnvAAh3bxuEmy+dQiNPpNQaL4CnRc+ACSUvR5RfT7dbqo+HMqfvTKrHj6O9Fy+2A1PvfMm
                      Kb4TiY6+gO3GvBBRJT6THxy+M/SaPuupmj70L4y9Eno5PrZOnb7wMWO+8TiMPgh7Mr5upVg+CHgr
                      vWTVir2YFGS+/LS2PaKphL4A16U6AP5DvVYGJz6YaQw+aJEbvbBFIb6ZXZ0+2G0KvUZsLj4WCUK+
                      DKynPaSY4z3t0J4+QF77u0DyFL3wL5E8Zj8gPnmYoD48Zvc9aMyZvpSun70QEgI+iOMPPqD/Pb1m
                      VYe+ldinPs1IhD7inXY+IUeHPo5+Ib7yXn8+CPNdPSMBO75zqHm+om5YPpT0oL3Q2pM9kvuEvjY8
                      NT6wp+u8ePM/PRAbzb1kPJu+gEepPMwjpL0Tip++QLO8u/DDzDxIy1A9rM6PvR75ZT57iGa+OLNN
                      vXBDqDy27A4+o1JBvmBIDL4OVAC+kDf1PVa2Dz44SDa+sQGTPq5pUD4oqwM+cokSPjTClL7U0Jc9
                      xZ+BPgDWizzA/sa92Nd6vnAZkL3GJ1E+bOPuvaKzaz7mDrS9GuIEPkAWEz4KXHw+fp1evvKUNz6A
                      XTC+mQaGPja/272S3Cs+opQ2PvtHOb6zMae+AAgVPWuDDb74D1A91zyavjYDfb6qLAs+GEmCvvjn
                      Ur7w/p89QE5GvmbFKb7Pm5Q+MJmnvTCRIT5SHYC+Kn8/PoYumL6Q1my+AL8jvKTHjT1yoRc+RHOj
                      vnCG27zUu42+y6iTPuoyQz4AE2Y8sGkrviCIkj1ajT8+5pvzvYCxybwAKpI987mNPnw6sL2yTQY+
                      AFCiuVMimr5UAp2+U7k6voAWdL68RYG9IMT1PVLDVT7CBVQ+YBXiPXMba74OqUi+5n0VPno9LD52
                      XIi+kGgWvmBYXr7ABEi+4NF7vIMbo772i3g+VnAovoARfjwZFoE+kts3PgBStbviywI+GJt5vajO
                      Vb7jNoI+/o0wvnD3cL7jr5M+mIh7vd6Ah77Bs6U+UM6SPOyH5b3AiVa+WPsxvi5ATb77xZm+iNko
                      PhTXk76mj5++SkiVvl0Ekz7AFfW8ao9xPhiKd72wNUm+9sUwPhgiAr6ybWQ+WjYCPgt/oL5wnI6+
                      kiIZPikIoz7fE6I+IkpKPuJLVT4dVJQ+mNxJPXvWeb4m9oC+rK7lPY5hlr4gkCo8YrgRPkS/uT1S
                      XiY+8N3yvcYtHb6+EBy+awIDvv6QkL6wfqI8bx+bPqArXD0iAQ0+3IWiPeBqpr7IRiO9iApPvhyy
                      u72gW009iw9OvuCZJDz11qQ+estgPmzH7T1cy9Y9GoAGPpaRcT5wbLm82QiBPgrCYD5Q3cE8uNVE
                      vdzquL2QO4W9aKEVPnBxtj1syIq9iMgWPQv5ob5Antu8jEPivWBatT07A3u+NlZtPgM1Or4WuhO+
                      QowePubAfz7po4k+KgWRvuBaLbwgcXs88PCfvOAYvL38z7A9Xc6SPqMHfL76xTw+YOsKvLuyiz7n
                      ooy+LPCePRKVlL5v+Ig+IMj9vdd3mL4GcFo+iIxMvr7HZT48hZS+aBeKvrYFOz6A6tK9Wgg+PiIr
                      ib7APsy93riBvkClDT5Qn8U91khqPnTNoL0Gavy9kMOEPSALQTwE1pO+651evvimQz34uQ8+sPvv
                      PId8mr4uJxK+OOMEvWXRmz7oVms9a+8QvrOFTb5Gac+9qN5ZvvCCv7yGTQ4+X6epPrPBYr7j1wu+
                      AaKCPsmClT5V/oo+NcyfPmobYz6g1xm9gl4TPmB6wL3I3Um+2I5XPfbThr7MSJ09mVKfPniQB77A
                      CJe9DIrcvRicbL7CYW8+OsRMPpvmhL4A+tW7/AuoPYzCpL0=
                  - 0
                  - !!python/tuple
                    - 100
                    - 9
                  - !!python/tuple
                    - 9
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTgxMDQ5NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzI0OTgxMDQ5NnEBYS5kAAAAAAAAAOsYJr5ekFQ+giBRPrO5aL48IZe9CApfPYMFb77Q58+8
                      mDh9vapnXD6+gXQ+AC1nPJs8kr5bkKU+7AqRvn49Lb6K0GQ+GO8PvaB1Gr3L9BS+F1+Fvljrb74S
                      73A+5pTkvUbHAD5x1pE+oBAbviauTL7A5MY88l5APpBXpDwcrY2+6GNEPYjuJD1gHzs8Bit4vjAd
                      zzzM2aO+8I8kvhC1sLz+9lI+PKCGPbATtjx7yZu+DZ2JPt+jjT6WI2E+ruR6vnPRP77sWdc9rlci
                      vlSKhz1QaMA9MJXaPbAbr70jtn6+uCZkvfBlyr17qly+0I3UvcRF9z2wcuc86+ZXvnopIT6enym+
                      fC2fvhZxBz5y60M+6geJvvh6ID642S49aJRkvWYnOz5MrJE9BrDlvaPacr4jyIC+GrlrPrZWnr7W
                      rW4+RiOxvWaItL3xYZ0+05+ZvtgMpb6AyXI9uwiBvhWPmD4DL1S+APczPAx3mD3Qr728sP2+vFTt
                      nb08PNm9ALuavIRejr20JKW+QPjwPQB1b70=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 9
          out_features: 100
          training: true
      - - fc3
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTgxMDQxNnECWAMAAABjcHVxA00QJ050cQRRLoACXXEAWA8AAAAx
                      MDU1NTMyNDk4MTA0MTZxAWEuECcAAAAAAABb/bK9QMPAvcCj7LwCKZS9yiVcPQ20tj1TPpI9WHvE
                      vSP5nL1oSWG8YFYYu6Aupr17hqA9CZ2XPaHnlz3gGNA7ivO6vQUtrr2EZuI8GKRivNIYWz0VW4W9
                      o9UeveoLvb1DUIs9UNwovTqpRL2diYu93YCHPXAiHL2iuAI9RhWMvdx76DywGnc8AI/FPNhocDw7
                      m7g94VK7PTDHWLzqlk69LktFPUB7zL2wkF08WJZovHJJSD3ygSc9SA28PFpMQj0qCGC9YBu4PN4D
                      az2gmYK9MBvwO2DEnrxAf868GBd9vEcts73hbak9Mjg+PRTu27x7zKw9i3WuvXg4jLxQNly8EAAs
                      vdd1Nr20BAO9STWQPWYKl73kqYq9dqdNPWlukT245bG99kugvYbRRj1H+5A9g0pxvdhepTy9O229
                      167IvWbNAr20vME8+r8svQFJtj2UHpk8koCCvSpha72pDYc95jYzPeLhBj2ossU8EJ2yvejDIryn
                      Vjy9QG5/u3IrnL24ILC93Uq3Peg9a7wy5089k6yXPQDE97pMjIC9kNlvvFYkOj3A9I29gwaFPVNj
                      PL2Al4e8YOvevE38rD0t/ly9M8pPvXp1Yb0Az6U87JbrPChe0bwATKm4aCtsPCpPQL12cj49JIL8
                      PJ5AIj1NO1i9YPv+vAho8bxoCyK8NO74vJaHmr0Qzzy9JuOkvQBKHjwKODI98EUbvWbvGT2gC7E8
                      bdMqvYu5kD1iKzQ9COWYvI1RYL2Q0jA8pVeIPYBJZzrq2mQ9eXa2Pfr9aj3Ma6m8AKzgvKugnb2f
                      Z609gLssvYoxeb0TTpM9bqCSvaMyjD1S5Es9QKA8O75bAT1YtWM8OZa6PcDNVTvhoMA9ZUqqPZ4N
                      hb1l1Yc9bGQPvTC+6ru+kB491wolveydvzw8IPs8I/CPPTYqkL2sLuM8oBCGvICFlTpOCJi9epGs
                      vfRUmTzKD289ZzS1PZhXXbyIlMy9cZGrPe3UqT3tciK9K4GTPeu+oz1g9Oi89yJevXABYLwWa1Q9
                      E7gfve/llz35ZI09AucyPcu+v70UFcs8VYa9vRVMkL1LmsQ9AhQjPQKECT0yiHQ9rfBCvZg3Cjzs
                      J5282nAoPbV4nr1QUzi9VvAFPQPku71eFRI9bIe4vM7FYj1zU6M9eslAvXD+Szyu+SM9A4mGPc6z
                      KD3K5ks9oMiUO3AtfzxY+zw8i9ijPSQL3DwZ7so94wl/vfZLKD20nYe83erGPW1Yc73wowe8yCiR
                      vAAljr35vLo9qF97POzKhTwUjYS8UmEEPYPuV70AJf+7YACKO/w24jxVM4e9IyOUvcXgyr0SbhE9
                      2CqlPMCmvrwGF6G9O87BPXJpwr0BI6I9MSuAPXRmrjwCMns987gkvTVTuj2aqzO90gwCPRqlzL1N
                      D1G9JGMMvWCTiL1UyoM85QaYvSCKgzxzTTu9g/ZzvQDVaTqKXgW9V0WjPS52VD1xC8U9PeZNvaST
                      3DwwSgg8vdV+vW/+jz2sTNI8YdGMPc5EBj1A2ng7h+/GvREPnD0DmzK9B1KhPTRJmjwAYK66Sp1H
                      PVrOUT2QBlc8YGI0OwCsaDl4RoK8iogFPQCYUjjLJ5s9oo8WPVkYpD2BSsc9SlR6PaAEqrw64CS9
                      uSiGPQMWpj1CoAs9BHKDvRuTwL1omIW8Z1O4PedbNL13dR+97YW9vRjJHzyTObi92Mm9vMAw1LwD
                      Ecu9wZ+WPcrDir0mAAE9gHo/vNB56zsgqqg7xVKJPTgqhLw6zA69NYOLPehgiby/GIQ9sRuwPTd3
                      XL1mJ2896VyZPSkKnT1Vc4a988KXPfp3Rr0zQie9RLz7PEIAAT1WGFE9emgjvcAjeLyrtpo9cH9g
                      POq6Sz3MgIi9AIzZu/dBRb0wsri7/co/vSciOL2gWuC7GM1wPJ5qXz1iWLe9B40kvepWr72A4Ru9
                      AdPAPck6nT2XubA9VVDMPaQm0DyKx5G9Z/LGPeBzjDuABAG9YHmCvSBvPb3NEMu9LVAmvVIpr73S
                      Fms9wYygPbPTc73T+129M+6ZPe6PDz0t2lK91auavcrnKL3NMFu9i7iOPYlMnj0dbD29OkBuPdCT
                      bLxQ3sa90GvKvYKQDT2jjUi9IPyzvHBsRr18KP484jtQPUEWmz0ACSc85gcOPewEmryfrps9UHPP
                      u0wb9bxa4lU9DI7iPEq2or3fT7E9jajMPafnQL2JSoc9dZOpPTW0jT2yXTs9mCdjPOD0o700/Pa8
                      vREwvaKBeT3oQMA8oHfUvLi6jjzuTGc9RBXUPFF2tz1Ah388KIVHPMAAyb2ibT09LMy6PCumkT2A
                      +6462NRkPAAKn72Q1Fa9UIAhvUqhYr0DNjS9gHZFOh49ez1EnOQ80C9XvTAGezwoNmG8e2muvSni
                      uD0F6bW9jCyDvd7QcD2mdkI9kKFNvHL6ED1K+Ku9NXqnPcfYG72Md+o8T8vEvQrclr1BGrQ9ZiMQ
                      Pa1hMb1FI8W9IJj3uyPLS73Qub+716yZPQAkgrw4e8K9uOKnvIvuoL04E+G8ePG6vYMZMr14osW8
                      uH+/vaCyObu09eq8zZmxvXqmq72Ml8S8FLjMvMAl0Lwgkg+9+JeKvPyI0Dyvrb09V71qvZMsmT1u
                      IHU9IMLBvW+nnD1sROE86MyOvWhNdjwMvuW8AHyePHdxt70QBhe8gKo7OiMcZr2oTT48bGH/PC/j
                      gj3Sz5O9U+JEva9gmD2ossE8yU+YPeQR6DxVG569wPZwu+Qmi70t66W9a1CwvW1snj3YpE28u1bK
                      PfLHUD2waRe8tkEEPe+Lsr1A3Y86FIuFvJcLwz2IEr68LHaRPIx1xjzMv8y8idWFPealqb3nQzS9
                      AciOPfIePz08ChS96GVYvJYAl71sOM48gDfnvBD4PjxiLCY9gDbouod7rz3pios93ba5PS50Nz2W
                      2hO9hw00vWWnt70oOlQ8DaarvQcowT1ydE49MO9/vLJxqb01d469PQyFvVpZar13AGe9gJWVu3tI
                      n72ddZ29isYbvd07Sr0wdFC9aDR/PEAZqjzh84A9UiB4PQEopj1qxEA9V7anPf2dxT0D1aO9RGfn
                      PCPXHb1vxbA9sI1LvTffpj2wPW48UGITvRo4LL2MzKy8EhdHPeh7qDxP77c9gFZLvc0UX736jlC9
                      IEPHu8YKm71XC6k9/isdPeALqbvA8zg7mCtWvCDm8bwwtIa7IuOTvTNttb2ZArA9rmtsPWA9Tr2Y
                      YZu8mAFbvGCoR7ud8mC9KTaFPX2xpj1gHK+9ACilORiFV7yZUcQ9mAe+vBYAZD16H6y96lqdvUg0
                      lr0AnHY7w5uePaoPi705Z609YAmGvBm+wT3H4iy9YGApO+dYXb2iuyM9ADfEu6gPrjy8vto8YAlO
                      OwBkXDmn9aY9YEdoO5nXuj1qe2Y9We7FPehFOTyZxpI9YFyFvUgMujzJc7M9nsIfPSJFZz0qVFQ9
                      ptSivaeMxL2qOQy99j0Ivd3Jv72ABdy6rSmxPRRAsjwAHYg5eBPYvOEduz2oIOa8QAx1PCNIf72o
                      OXO8krtJPZqOkr2gdYo71Ty1PSCC3bztkqg91+eHPbY8Mj0AMKu8GBFmPBqMLT3643+9PJcBvebg
                      hr1AeJ29AHAEu7IgNj0tJqU9GEBrvHhSpDwqDFY9+3HLvU7TBz1af2W90nwsPRhmFLwARsQ6gXGz
                      PRYtRz2I27u9GenDPQ0FNr0/zKU9WvFrvWDGjDtQJpo77Nf5vBokB73725M9qYqVPYHGmT0+8S49
                      DttAPWpEfT0AdrC7tU2XPTAZGLxgQQG7YKu3OyXgsb3++yw9OYSMPfrSCb0VwpA9fvwGPdE7kz1a
                      dgk9uPb3vEPRlb1yAba9Iv45Pbyo/jxWtlM9oIkIu8N8Rb0zsqW9ALGau0pbaT3wPCu962/MPRJD
                      nL0/Ksi9F2fLPQCsrDjMn5c88AfCvQ6lYT1TgU29oWe1PehyTjwwIG28AkOyvQNOxb2Q2Q084vJY
                      PShsqbxNaYs9JlWrvTc7Mb3I8MA8RoN+PShH+rzo22W89eaYPWowEb1YlfO8VNXSvIgxur0qkh69
                      mOZtvMjfojy965Y9SXagPaCGLL16gyC9jclBvXpCKj0Y47C9sLCDOww/3zweCZu90MPWO8e+Jb0A
                      7LU62BRGPJgNTzxglYe7aiZ1vQBlVLpa/0K9YGjfvB1gxb2UxIi8d6BLvSNajb2qqrC9Z0YfvdNT
                      nb08u/88QJnFuqqPAr21bb49CU+lPVtvoT38SwK9/8ifPdM6HL232R29QyIavdBHYbw5AKA9mIGb
                      POjpfTywNl2986bCPez77DwAwqY7RRqCPaePer19y6y9hgIkPVM7Nr0AFxe6YDeBvVd0vr2iqAo9
                      gLLhvHIxtL2zvVS9MuSDvdiMBryY33I8hZiuPcBKNDtRL709MKZNvTQqwjww15o7YEG1PPs1kL1y
                      bj49QDNRu/YCQT2kqvQ8M6tpvbBFM71pVbM9wD2IvMzAFb0THEq9NsClvbAwTrwAVOw6G0qTPVgq
                      Hrx555c9g8E8vcCiADu1/6I97ksCPRrss71QBGm8hwlEvTrxVb2oy529LcauvRkSpz1nB0u9poF0
                      PZOPW72WRgA9KKmRvIA1PTqUyIs8xmswPdnRnz2DXES9UB6pOynHzD1ExAa9S3WrvXMHw70VPY69
                      NowsPRiQnzxUxgG96YDFPf4DcT2T0JK9548kvRTZzzzCkAY9YN+6uyPbWL1zVMS9nUk/va78ND0k
                      Sfg8asRTPTVwxL22tSg9sLhNvHOQjT0rhco96uRzvQC/e73Tn5M94LWrvSg/tTx6RGs9WPhbPAcF
                      ub0YEuu8CDGBPJ9fxD00QYi863SYvUDKY7u0igC9Ph0LPcw2Db30tgi9GNMyPK4MCD2SbjE9Emuk
                      vWAVjrwrHb69C2CavQ0aPr0gr+W8ACU4vep1W71HanG9ylmQvUU5yz1zxrY9Jy86vQC5+zu6hrK9
                      BHWDvR3+l71iG0U9ewm9Pcldxj2O+F09ozslvSxixbxbUpm9Qa+KPTAyf70VMcq9uzSBPWbBqb0i
                      Fzo98A5evNj3fLzGv6O9YpKRvWzhpjwCgbm94MX+O2ybuDzyvT496z6XPalVjj3b5I49+/bLPUI3
                      Kj2sdwS9ReCgPd0+zD2WaBs92WuDPZKeyL2bz4A9gh1dPQwlxbzXcrk95Hv/PKTsBL1Lrqo9Dr08
                      PSkchz3GwwM9K6K+PekZkD1KDRW9ilqdvVW/iz1sJPi8QBlHOxW+gL3uElg9mue1vQAevL06NFU9
                      PNkKvVZ1Ez2wEUG83i10PWiZb7wAugg8zWVLvWuFk71NqVy9+oNrvdjWSrzHK5o9S4qEPXBNPTwt
                      q609ceumPVKFTj07BKC9zVF8vQC9kztnc1i9biZrPepWn71an069jshlPdtJtT3kPtc8dhqpvTZU
                      QD1Cahk91pNxPWlVpT0qXlw9V6+7vZ3huj3ys2w9OCXCvRBsMr3zwcK9wqFDPT1Xk71z/V+9Dtof
                      PYW8hj2YQSm821yqvcNyW70SUlI95XS0vXjG4ryxhZc9ZG3+PIOqd71aADq9TTQ6vcAEWzsOSXg9
                      SgtTPQA49boAM3c7oCSIu9wkDb3QRhg8RvShvYBiKTyA8Tu865qqPS8awz3Rep09PrR3PQBQVDzQ
                      hi+8IUG/PVpCaj129QS90VOYPbQWDb1ADY66P7TBvZUeor1mmHM9sAGOvQBwV7gIp6i9oBkiu+1H
                      hz1aplC94Ov0vPJ5t73gPro7MuYNPeXAgT2VDr692IXjvH2EgD2K50U97emGPVKXeD3dzpe9w8B6
                      vQ3AsL1Hla09uuI2vdiAwTx2UBi9Z45kvbCPPrza4Ee9WXyXPV4RYD14k+i8FhOrvdUbqz0qnWq9
                      BVybvd/Us73wOTO9WKSovOltvD2q92y9TVJ8vU/8jT2qsWU9WLFkPJjAqbw5+6w9mziYPcuYuj0m
                      JjQ94MDsu6Q+0zwYaAq8WsVZPd4SHD1SEGo9l2hJvcC4VbwJVbg94uRpPVCCg7uBe6U9YJWXPEUp
                      kb0oJhk8kraGvXllmD3sz+k8sBPnu5PGYL0ic0s9ENAGPFQLtLzMBtI82JdqPB4eaT0yaoy959Sx
                      vSgXerzhs749/lISPXTwxzyTSB69BR+OPdRgyTzQj3S9dzi7PXBZaLxX2y29MPx9PKoOUL1g51i9
                      O9SPPZCRH7z48rA8cp9cPZEdxD0wrHq9mx/FPQCebzwSc1k9DHSRvB7Qqb3vwsK90yEdvQcNdr10
                      sea8KeKPPQyB2zxcLQS9YAH1O/8InT34d8I8AIGlO6ZoCL0AcyE875+gPbvIkj1szOc8TJStvKIy
                      BD3GvJW9dgOQvYEuyz37o6092KLevJT5mLyCLJC9ZW+kvWflkT2kL888qmKpvU5lbz2y80M9zmcL
                      PVCXWTwCmj49aDFxPFANjzv0xgm9rYKcPZjhnr0wPRY8ioslvY33R73fHZU9TjpuPTiVhjxAHdy6
                      0plTPUDfO7wX8Vq9MGyGu9WZqb2+AQw9qPV0vBWslb3CyFQ96T+BPS9AiT1WTKy9nYKuvT+7oj1g
                      LQe7opgTPQX8jb3Scl09UsMGPdEHtT2deY09cBbBvdIHFT04VOG8kPwcPOgJ3bwokKa9iDK8verj
                      W70wo4w7+PWnPF4YWT2Y2cG9/joWPckovj0A/547YhCOvaNqgj3iPgs9wJyovWgTs723uZo9ABga
                      O3SikrwHEzq9Kw+4PeqYFD3CO1894LlWvWCDqbtd9qk9qEW3vLXvrL3Y/S884PadPCJLDz28stg8
                      QMPrvLoOrr1EggK9526uvUMCp70Apje5EO0uvZFatT0HI1a9MNbTu7MopT0wGKm7c9Z3vcCxazsS
                      qse9MMi3uyAUpbulh6s90jiEvcf6pT0KPBk9sfKaPcriFz0A3Ig6U7RYvVo0CL0Sezc958d1vZh5
                      pbwASbK8iQSVPVDtPLzZ5YU9KIdjvMDSbrva4wc9aFi0PFiljzwzTV29UnS6vTi5nL0yXJC9Xlue
                      vUFBoj3hnpI9ab6XPZFurT0qSrq9HYWVPSIdfz1WlGk9vA6Kvfk7nD1+8TA9APN4vDr4E73II7S9
                      rUzBvU4tlr1s/AC9PtVWPSx+3TzL2as9MzdyvaBzdrtJsMA96NvAPHm9jz3tNaU95einvWIoUD1M
                      05U8hgcSvcVPvT0KbI+9W8WlPeYPg71TBJo9EhclPZ0gfr2dq2e9sJd8PExQm7xWg2A9AHRzOhTv
                      Fr39/bs9ol0wPQD0DDo3eLK9UJZ0PGidTrz2nXw9vM/rPABLT7w4k6S9dhunvXLSfD2wjsa99PPV
                      vO2qlr3R3YA9+nFsvftmnD13bEa9+baSPX2Gbb0A/Y+7Gt0SvUwkk7z3AqA9/KQNvVSr6bwYjj48
                      SDD2vGBHcjuw3ky8sYHDPeDQuL1YNtK8XT2JvUwopDwX41i9cszMvRyr2jxBLYI9qtIkvRp/az26
                      ckE9gFH/OgkInD2noMI9pxLCvdPfiz2o7hm8i9jBvUfppj2aw6e99GDiPIFLvD2qdT09eUywPUmR
                      uz0ArKo7gAykvcGYgD2KbV89mK87vEyW2Dx8m/s8YtC0vbBaCryGR6i9EColvDDisrv2qKC9T5uE
                      PWhcALx3dMS9zZGovYphj732aXs9jBHmvLBRpL3Izrk8z2OaPYjggzz3Ccq9Ce6RPdefyb2w13M8
                      k+ajvYa5fz3+IAU9iuc2PcT82DwHxnq9TPDZPNBMqDtOIIS9Y9CkvdO2oL2Syl494LuAvIPJc73g
                      44W9L324vXeEwL2aeou9AQ21Pfxkg71turu9MACovaEGhz3oWa690+UyvR9bkD22emc9GCJ2PAnl
                      qT312Zw9NJ6LPAqkc72qSxG9VAeDvLq5Iz0gE8M8OuBVvdWQoL1D1Wy9WtGrvRh3jb3PzLO9ijVC
                      vQDvW7zBPpU91MwNvaYGGD1KjR095PH+POOXsr3wLR28jTGhvV2cM72A1gq6vEmIveCUwryNAzO9
                      G0vMPTZyWD0enk49EMwuPJkdlj056Mc9xgyevTUcur2Io5A8mounvbHIhz2Ao/m6cC8+vIOgRb1q
                      ezC9d7+LPZ2rxL2ZH4Q9ma2/PWe5w71QJCG8wDEsvACLtbuV3r293mETPSmniz0t6Zg9mrc+PUCb
                      kTrhBco9/iKEvTBtJrwGaB49lqNTPZqUXb2jhMk9rrNsPW8Rsb3pGb09Mqp8PZEbpj03OMw9OX2s
                      PSDwhLt6z3893e/FPUifhrxgrcs8Mh4JPUxSoTwokYA8Ux2xvYDFPTqZSog9LAi/PAmTjz1eE009
                      qMovPOAlzDxI3qM8mC41PPM8s72EVxm9Jb6gPXp/Qj2MdbK8sqxUPXTOlDysh9S8NdytPZoNR72w
                      xV29zUtAvXqeY70gbos7QGdvO8qqE73x9b89Nq2Fvfprkr2w4WQ8WFq7PDQOgjyWTTs9MJGivSAx
                      t7ssZIO9Uv6dvYjviLymkXo9wAbMOuCu4LwwXta7RSObPQBhcLrWVi89yY+gPTtUtj1RMbk9EBgS
                      vcpcQr2l0sa9BfPDvcUqtT1Mv5+8POTXPIDGzLwTcmS9ZmpAPeOxML1V/IU9x3hSvcizuLygLNW8
                      IJoXvXEYrz3pFaY9n+rLvWx/jL24rZu89qxyPWrtKb1CVIi9Qik/Pd09ij0Cecu9EjtmPSa7Nj2s
                      jPE8QHlou3I2Aj1A8w29G/mEPeb0iL3zesM9tuQgPZyKF73Gugu9AOZavHTLwjwS7rm98ucwPRQW
                      jbzAAH08AOiVvCHfmT0QKEW8VXGAvUh7gTxI7YO9wM2kvTBCNby7Ua29Yq5ePaosGT0oczY86i11
                      PcBYAztXKku9+mEZvZLhRT0hL8Q9V1yPPYBErDxAiX67Jy+/PS4LDT0x5bQ9YvpjPe1SYL0lTq+9
                      UCa1O6Sk9Tww8yy8F36hPXIVWD0k0wi9E5SvvV52Mj3RpsI98wmlPRZjTj1Myoy9jm2CvTBJ0rsU
                      bNi8wFlsO1vor72QGhW8RGnYPEJXyL2MXcO80vtpPfkKkT0d2nC9xR2NveiRmL2lkaA97cZXvYIK
                      BD34n5k8TvaLvSzLE70GGXk9cGbEvbielrzoiW68wGmvPCABmbyL/r49KmLJvdCzqjvEZt48wzpd
                      vSXLwr2Two69p5qrPTh9y73FE8e9dUWcPUAFsjogCh29IDMsvXv5pL1D0o89jl8PPUJAUD0AykQ8
                      wovJveqfFj1Kuj89uAWdvFNJs70ch/o8XXaLvZYZC70fE7e9Ce+BPaHJtT1jxZC9bp2qvRPAw73e
                      8Ss9GuchvZgLsjxlPIQ9MXimPUDPEDw2JAo9ciUqPYEYhD380PM80zeOPbADfzxDB6s9Y8eFPaXz
                      jr00A6u8AFIevaDVI70q/RC9SECDvFLzk73y3Ze9riIvPejeyzzqxFI9AMtJO5DwTL1uPp+92PAy
                      PACkSLrQLo69KSu6PQDSOL1oRVU8A+GTvRMHLb283wO9xicVPRh4Hrxtl129OJSdvAsSrL0d7Iy9
                      s42TPZoLh70VL769sMz3u1AWbbxN9LU9Z86svbV2xL058bI91WeoPUskgT3qToK9QOZUvHOqiD0C
                      7z496KDEvVkElz1Ilba9TZ48vSWVqD0AheO76u+5vb4yZj0ADVi9Z4E3vTi+uzwx7LY9212HPes/
                      yL1j3F69R2JkvWoEGj22NnI90E75uxBKNzxKhCs9NAEAvbyO+DxqfWY9+OGFvPtliD0ASDc6wp6u
                      vX7xPj0SwFM91EiOPJjiQbya5yK9VyYzvQE4qz1g2Ju9U+muvReHrj3yNTs99rkZPU7qpr3p+rU9
                      5t8BPVoSMj12VxM93R48vSCb0TucCoS9Kl4rPWjagrxARMO8Ot5xPd/wiT3ayEI9+A2zvaFfxT1j
                      hKk9W6/EvZiXQTyyfse9a0u4vU/ikz0gD5i8g7lsvT5rIT2s/Yy8Io29val4lz26phK99SKhvRQs
                      0TwSgSk94J2vPPjNr7zYHY68/BzQPAyarrygXla9YgEYPQBkmjqWj429dGmcPF3MRr23ia09U2XD
                      vaAx4jsyT289aEw6PJKfpb3rop69OPCvvDcCPL3A8lA7R6acPTq1ED3KSBu9HBvzPDYxFb36Ho+9
                      m7ucPRB4g72AH/S8GUGaPdONvT0wEl+8FdujPSoqYj2gE/O8RCv0PCYWLz2efB89ZKUJvXWJuL1B
                      pac945o8vf0aoL1ulwM94HibvFjBRbz6kQm9B2WcPRAxF7zoMcS982FUvT3qH71fua89ac2SPbLm
                      w728oAa9V23FPdDYOb2I/oE8cDdtvD2iq73y92Y9UE4hPL3cMb1DxIE9BVOzPQqyjr2UENK8N0Oq
                      Pc4gkL3wqCE8l8SYPTJDZj3h7rs9kT68PRr6SL3V7o69IDSOvC89nD02Ahs94AS7vSnuxD1SBLe9
                      OHmEPE2dHL3wyD69ZM7xPHS4h7w4W6m9cc3GPQhR/LzJvow9OlVMvZonJ73EYRm9gB/+OqAy7bya
                      0RQ9BE0RvfuvnL2+CQE9zLeQvN11Sb3Ch6O96o55PZK7Nz3Ann48AGhpuglOgD24uOG8M9adPXrD
                      Dz3YXq68xkQsPSoUHr1YbKQ80LKpuwEghz0YrD+8gJHIumws2Dz4hJO9Qxx7vQCWlTrmVBm98ick
                      PbYFZz34p6W8iBfCvAQR3DwEqdw80M7FvaasD73EU+Y8uFjQvNn7uT2ATPY7lv5cPcR98Dw6DbS9
                      Q9oivd5nn71nFSG9jP/lvE7fPD1vy7a9gBKZumBPmzxZwIE93w+KPdOrOr1j0k69cIgsPGJUAT0o
                      zZc8ptcfPVSACL2zhYI9ER2MPbo7Zz1g25I8fqINPe3Zc72e43A9bCe2PJ5DQz2y70k9cBA2vINA
                      sr1eR4S9yb2lPfROnLxA5lq8WBkZvNsHj73U6OU84B7fO+bobD08leA8zv1uPWidKbzbI6W9+nki
                      vS0Vuj0QtQk8aHiSvEIxDT0NT4q9PbZOvYDNFbrhibU9GqPFvSOvUr3IwaC8TASKvA8Zur2BIJ89
                      TOqoPJumyD0qqSI9rPetvDqcMD2akb69xbuDvRKAqL3VL669gIqDvfyOAL3KR7m99HmmPKLoBz0a
                      FEq9toFAPYDpgbooPNO86C5pPPphEz0q6F29YyapPdCTGb3HUnW9iHCRPKRn+DyAOYy6EPunvT15
                      oT2t4GG95q56PfhBnrzmATk9x7aJPTJafj2n6rq93ssMPSIJSz1F87S9oq40PQAYnrsJNoY94LbE
                      O/Mcpj24n5q9EAIivQ3pw71YlMm9UsmIvYnVuD1RpcE9FmaSvWBmPjs6N3y9WBG/vTiz37yTcyi9
                      bI3TvPfAt73dzHC9DOO3vHBCw701fJQ9KL4IvPmnmD1o8ze8QGMQvJUCkb1YKE+8lfCOPShmerx0
                      u/i8+h8LPf3Igz2Iu+C8wpd5PXBqHr3LI7k95UTFvahpQzwyUSQ9HgIbPWENtT31oKq9LlyZvZNg
                      rT04Sa28Wjx/vWTlDr3kK+I8AJIru2wK/rx0cME8IJlHvYxIsTwArSa8OPufvV1vhr0w9ws8UCWa
                      u4D32rsAwqa66ZyEPQXxwD3ZQos9TOzkvDqvdT3a1Rs9wL4iPGyUFr0QPVW9bsQGPQjo9LxQ1eA7
                      JOrfPHv3mb3MWOI8p/JvvZF1wD1Niq69WIG+vAxdrTzxeb898M9WvKBc2Dvymi09oWLGPXN7Nb2U
                      v6M8EMGWvXSbtTzDtK893qBePYDaqDyqjmi9ARy6Pb9miz3gcOS7feRrvWUIvr1q04m9wO00PC9Z
                      mz1A+iO75OLpPEBuHLtTUsE9onFpPZImYj2gNPu8EXKRPaBDejsmeRO93bjHvVmalT0XHb69fcHG
                      PbbYFb2qlTY9iCCgPAoJV73AqMq9hC/WPJStBr053cc9W1u9PeBu5TtmoUQ93+CsPVgNxbxy9Gc9
                      zQeiPe41j739Hy+9RoM9Paxfib3x/5c9Y8JRvdi0YDxxR7E913swvd60FD0I2os8LH3BvNhbgDyM
                      bqC8qnxzvZLkTT3sXvY8QOujOhB3J71T9yK9e9qcPW3fWL3972690z4oveJnJD1goGy9ML83vCc3
                      wT01ho09K2KuPcpkaz2XT1y9NqYNPQ1wyj3nMcu9na4cvbAYsbuNBx29wvUOPaTI2jykOdo8YOys
                      vCO/Xr2YgIC9UCiOvWibhL0bS5096ktrvUk4tj3fJri9qOgMPDmStT3QTbK7GDa4vFWDqj3CizA9
                      SGmcPKBJPTuzSoo9OU2BPZ2ZlD3/a5w949/DvbOCJL0AsVU70HWSu7fVkT3oBWy82bvBPVb9cD1l
                      RYi9mC9ZPFr6Gj0isCQ9Ns8HvTwcFr3O+nA9RvI8PXK7Hj1rX5S9kkgyPYBGwzwCNJq9IuE8PSAv
                      17swPrk7QsNhPYIKRD1yqJK9/+aePe80sr1MGRS9JR+ive7YQj3aGkE9NKWGvBu4jz3MkY088EBT
                      vGLGMz3ABrY801Y/vVoqub1i/RY9aCu7vCV3t71QhNk7OtNNPTAqsDuMOZW8AFoeu9CChL0NEmi9
                      KI7CvIPtmD1BYJw9LG+6PH8uy715Rqk9EiVAPc+XuL3Yzl48JxxpvXMJpL2CnD89g3iUPcX8lT0o
                      4GS88Wa9Peh3brw9Hck9FxZ6vQ1yOb20GJE8YIiWOyDbK71NO4+9sAY5vbM4Ur0z2bA98DsVvTAj
                      fb1ioVw9IH+du+r/BT3p9Mk9gGF6vPjVxrxzx4g9BiaFvXqkYD29Ao+9ArenvZiQFrzSYoi9Mxym
                      PXb+Hj1VoKy9tptfPWptDb0vh7y9HWZjvQBqfjmJW4o94DvKvN2Dvz1YXok8rKLAPHVQwL3Y93g8
                      KMQLPICdQbyahwc9MxG9veAA0zugike7YotEPWlUqT0Jhqg9FyAzvdCJ8jsdxby9AFSSOKjCXzyo
                      Pws8YebGPe3hZL1QFz28/A7oPJippbwNxYg9UZTKPWjuYLzXJLg964XFvdJfXz1mMxY92C4yPHuD
                      qD1lja29Q+A/vawuDr2KoWA9kn+Fvas1rj2QZ6W9xrQFvcGrsz2s25i8ykpsvWeEvr0CRQs9SUG0
                      PYz9srwom5e8Zu9DPZg4GLx8aoC9bdOTvVLXDj0AWNk66NP2vGW6jr0yB1M9OxjFvVGopj0Unpk8
                      sPd2vNVqiz3BqaM9g8CgPePbVb3aLie92GpIPGNcyD3Alwi7nYmyvUDRy7yOZUs9YlcyPaCgKbsa
                      m049A4mRPahIezz/YMg9h4A+vTodMT0A8n67AkZAPfYGZT2I4fi8FOOHveCH/7y+SIi9GInvvD0E
                      wD1auhq9IA+uOyYrBz1HTDC9QHvtumJlfT1XG2G9LEnNPPsdkb1i9Ek9BcaivZFnkz0t4KU9fZIf
                      vazAgrye/1o9qkpKvcXjgD2a2kC90PpsPCbufT0nfD290AAcPLo6Pr2ASpU7q2KoPb3vxj0Sn7u9
                      AFkcu5CJsr0GJUI9lqMwPRTC/LxWoy89YpAaPQmRhj1JC4I9NLXPvDxvB723cCW9KBi/vEoLTj1N
                      FZ29VAzZPNNVJL1AQMo8EhA4PXCaVzzig209KupzPTB/LrxQN4o7qOsFPG7xDz2/i5Q9ij3Kvdl6
                      lT1yfVI9WBUuvEUCu72fsq+9ICgnvdKZWT3Kx0w9F8ywPWljhz1okbU8OFnGvXS7jryDL6u9ABDJ
                      uQ8lnj1A+Uy8XK/3PBLCXj1AjaK6+HS2vLO6mD27fr690BhOPIDacDz7gsK9wD4UuzDgpDvZw5w9
                      CV6mPfd2xT05XpU92t7LvRAIZb1gBdG8QNFDvQBj8rzKZlW9eJe9vRC/qL16jKy9vaucPRr4ZL1T
                      4nW9UzrGvWqhYT1kQNY8n/DEPVDPtDtj5m69guq4vaZFPD3SpUg9s2A2vbCZGDyfxq89bslFPdho
                      STzT1HC9aM/FvPr4jb1gIWK9HQO6vZjdTLwoLQq8YAxVuxy62jyW/z49I88/vfq1Gj1F7o29npZd
                      PazRlbwreL69aNnnvHdQdr0bG6q9YG1KvcGqsz0fep094bSCPVHowz37B7i9IBdMvdV2gD2gTss7
                      Dcq1PZoXSz2SmcC9tMLmvNmZgT0zop69QMCjvZvonL0I7a68EQGmPciDszzlI5E9trZfPfDWCb0W
                      83c9uWuiPdBWAb3AboS8KvdTvdlTqD2gGQ699E/XvE5HXz1QVmK8BVyDvSfKNr2A5EU8VqEjPcBR
                      QTzQn2m8QOPOOirhbb3AxNs6pxs0varrVD1aLnY9B8uBPRWIrz0/87C9ycO3PdfKtr3HOra9gBpc
                      vCLRCD0sRwm9IOX0u0DeCb0XbHi9GN2lvGZCqL1DObe9gES4Opb1pb0CKDs9XYy5PVNOpT3INOi8
                      KbySPVqQbb2u8gU9UJFqPKYdIj0A00C6gPhHvC0uqD3wKDC9faKXvYMdyb3Aj0Q8ymQ8PXAIHb0Q
                      cTW9EMk4vUEpmD3gep870p1WPSC++DsuXmI9BdGxPVVtyL05Pas9woRkPfDkgL3X9Ca98TKsPfEU
                      sD1LY4M9Q8jDvT6Mq73K53w9AqQ0PaBGobvjpUi99RyBPcP0sT3bX6I9vOzNPJxj8DzQBIi7o5+L
                      PYhF0rzQrVu96FnWvCp1Ez3Mnre8cpIVPXcLt733drY9LJyXvPCoGzxDVyy90MENvYGsgz0Pdq+9
                      TOmSvGTS8DyAD1i9QNOovcO/eb2w4Rq91hIePTrfdb0XS4c9Gj5CPVEHjj1gZog7KHGhvAC3KDqn
                      ek29RhscPSSa5zxA1906Q/ZUvaeKZL0LqKe9mkJ3vZqvVD03+bY9AgAFPbiEo73ugy09aAYFvAmF
                      rT0jr0W91vqNvUDDS7wDysW9zlkSPVALrzujqHq9McezPUiPlDxkhv48UymJPWwr6zzA/U291S6w
                      vcVhwD2NGCO9SN+nPJPeZb2g4Gu9+zuVvXo7or2x3Ms9gu6sveYHkb1AVSS9pjkoPWgCZzwwx4S7
                      kIB7PLTckrzjbo09YDoduweAxz0y6o69jBfFPDORab1z6E29Yl2avdEijj2Wp4a9/UI1vVToqLzA
                      N2W7VgUNvex9tLx0JuQ80vsVPSMDyz0Aecs80Faau52oyL0GaAw9vdK/PXzkib3Vso09fyrBPXIx
                      Fz126p69+PKEvFCePjzXzII9F0C2PVoSP70jSrK9YJd8u9Qj9zzeOo+90yyPPRCfezz6LSy9Ei+L
                      vRYYMj3mS6q9QCwiu0LYAD1z9cC92p58PYCnpLwWZkA926O4vV3Ssr0/Sbi9rnRCPeFMlT2UIsI8
                      WJ8MvK6qaD1mpCA9czqlvfR4D72hlIE9vo2gvfqHBD3iLV09lU2rvY1Jyr1g14Y7wb6PPeZNDz1E
                      2uQ8YPvnvCgrXLygjPy7oDC7uwCsT7mshO+8NzbJPawOgzw85eU8kbaGPeqfEz3Te6o9TTzIPQYu
                      Cz3ygTo9E+KVvcWkwb3gGUq9xH/gPBf6cL3xD7k9sGS7u3oyOj2Rxrc9c7a7PRMelz0sU/M81U7H
                      va6YHj0wlbs71Hr9PED3oLz3vaE9Uz+kvdezc70zFcS9CqyPvXSSpLzYOMc8khLIveMoe71ev1Y9
                      zXokvcAy5jqUfQq9XilkPaJ5ND20h5C8SngAPTKzUz0ONGs90L32uy8loz1H86Y9cngQPUB397qH
                      PrW96AX2vLQ9zjwAvUM8sdi7PbHeqT1o3cW8t3NnvW6PTj1krvE8QsQ/PccbHr0L66K9oCQ+u5FA
                      oz1WO0M9Y9yIPRetJL3x2cY9o6tQvYg83rzXZn+97khdPYiHrr1gToa72FvbvHJ+h72yC6m939St
                      vVc3jD2A9zK9CjBVPZJmkb3QNZW9co8aPccZkD2AYbm6kkumvSM3mT1qVQk9oCd5O9A+rLvQXBs8
                      /e2rvdfroD1NYUC9BC/TPHJ0Rz2SVyk9SHq7vLCyZrx43aW8IIS8PBiMPLzQtzS9op+/vdq3G70Q
                      j3E8AsUNPdQpu7xxr509xmunvW4SEj24vZc8TiYNPYWRoT2C+7G98upJPRhODTwVU6m9UImpuyY6
                      hr1S1SI9o7cZvSLccz2L/8Q9QHIAOyH8gD26Fre9AhevvVClUrzWBjQ9cVOpPYhl67wGwl098lyZ
                      vahIBLzIMqg8ADuNu+Sd+zzovwI8fQGDvT3YR70pC5Y9KFDBvCqJNz0HT7M98beBPZeugD2RsYg9
                      UrBdPQcxkj2QJ2w8kAjGvdB/CDwAXOO7t+kkvdhWrL2GRwi9GpcfPYBqPTqLGMs9rNQNveA3gzvZ
                      EaQ94JYVvYPYJb1KcWM9ENhMvU6cAD23OpE9knsZPcCUQjwAXuG8qg2zvSxovbwom729aBUUvEKn
                      s71odoK9dAORvOWegz0AzMk7XPT5PNsOij3jYh29ILqTvIfLZb3xxIQ9IPrwvKmQyT2NXcG9vvic
                      vYPPn73gswa96/m8Pb2LKL3WBCc9E5whvXFPyz1F9bE94m1hPSQ9Ab3Hh7a9ME/IvfCaQrxTgxy9
                      Ha/IvZM0wj2djnW99iIsPQrOx73gJvG8qKSyvPnutD2dj8u9x8sxvY7XfT3sKOg8rXquPSvgoT1o
                      ypM80eePPbFTvz3orjK8uxqPva/egT3kU+08sEg2vKCb4rwwmqs7RSW5PWwVmTzaTFc9QEGTOgQA
                      zzxpdIQ9NnsLvZ4DTD0oCUc8sdDJPades70alr29X+mLPeDwyL2uUUw9w85hvahkzLzvTKc9QD1t
                      PLMKar2NrMI9JZ2PPT3rxT0AKVI6aQKuPYDIGL26v2E9ID6cPIvSoT1V65K9M7e5Pe+0w71jFYU9
                      I2WDPR2wJL1fuZc94EWxPGdTK721DY89gqhuPc0ZtD0jtE69z0CVPQJEJj0p9cE9mGHhvKuMsj1a
                      3iK91aqnPYgT7Lx8fwu97FOcvHpXj73DP329aPbHPL2OoD1Aqxm7fjZWPTVzuT02+Be9v7XBvXOj
                      Z734cq28gDIkvQ27cr2KLBa9NH2cPJoUYr2I1s68QG+VvdjULzwD7xq9o1W9PWutm73MI7k8H02v
                      vTa9bz1qWAq9SCePPOx7oTwN8bs9TfJGvSL8kL3DZne9JE0DvYBnJr06XK+9WMaQvYnfyD11jKe9
                      5sAYvRA4dr1IUok8UK0evGiwILwkJ+E85viUvSl9wz0CKx09kNgEPCaPOT2grKI8BsEnPZKicT2A
                      XX+65hURPWbSYT0A5BE5Z3F3vRmCnT2+9iY9msYKPWKiXz1bGqg9vUNvvThnmrx7OKA92u2tvZxm
                      9jzJp8o9cHh+PCLoVD2r2Iy9PuovPXQcpLxzume9fWWsPZeLxb0g6+47oFXCPIBILjzy2Wg9IhA+
                      PXMiRL2WiBI9WQyXPX7UPT2RIsQ93YqvvV+Sjz0t9K29/YWIPV3tsj3ivUE96My4vHAwOr1zZVW9
                      a6LBvTbcXD3WDgC9AJTaOljhvL0raJI9yo0FvTooh72JbMc9yPukvRr8Dj3GqUw98Su+PSlNpD3d
                      3CO9tf+mvbCgXjyKcSE9YGFtu8eihT0Z9bw94vyxvbA/y72A4ro7uihmvY2lrj1V9Ju9zMKNvNtx
                      sD0TcEe94wy2vWiEuzz+6VI9I+GZPXM9uD25wII90HhYPI6+KD2P5pU9/ZWhvaL4VD0ToX29yspt
                      vfX2iT1gY1279pFbPTvlor1VCKY94QrMPYDycLrt2J49/B/vPBK1Tz2Y34484CqSuwcwdb1wMru9
                      urogPd2XMr35/6I9RnNCPXKUET26Fpu9MCexOyICYj2AaY06mkDCvd8crD3O/Ac9QOY6vRMXSr3e
                      P049uooyvaAUnLshza499o+JvcB03zqccvc8R68uvTKTUz1Me5M8Y3qCPYAdp7qUrsO8AJTIPGDZ
                      izzREsI9GlJXvQfrUL1m5Z29or9lPcMKRL1Qrra9KuovvfOUkj0yww49jSyIPYAZSrr8VRi9wBce
                      O4Ax+boUC5m8zYavPc3mjr1iTjA9aAZsPANaR72F8b89cGJWPAUmnz3gW8k7IPXTO9AonjtFI8M9
                      iza+vQWjrb1aWYC90DgGPFl2uz2kdAa946devepDeT1tiqC9qsUWvUCeoTwxZYU9XNjsPADOmLug
                      iIK7nz7LvRjN77xzyji9ZNIVvd5uHT2AAKU8LfGavTNJtD2y2V09r7bLvdA/P7zqrmI9bE3OvIgJ
                      rb1pjsI9tsJXPSpILr3eGYC9srOsvbBAqLtjM8A9AUWqPUxPgTwAsmy9wayjPeYpFr3oUfW81OWO
                      vCPpw71YyMe8Sc+zPRye9jxIoJs8x9Z5vf1sRb2CXC89IGjAOwA0YLzNL2S99YzCvfDebryTMVm9
                      6KTDPGpYEz2qvny9fUS5PQqnKb0onLC9mj49PeXTyr3ve729gbrHPUBfrrqYT6k8rjCMvQJPYz1y
                      Zmw9Ahi5vcAPEjzCdWE9Px/DvSmXnz0Krxw9VL68vO68Vz3pF5s9Y4OVPUhwpbxBaYg9lP8PvRMx
                      vD0gw9o7cW2ZPeeyHb2c+IW9wrWUvUB2STsdPiS9jSmOPQITib3JVcM9FJ6lPOQkEL0Szpy90Sqg
                      PTqQVL2TC8Y9mMuevVANDzyAiJA8dOelPKrpYj0tKX697CLRvGt+rD2ww8u7N03IvZcmrz0oHJy8
                      PzvFPfDttb2mzGI9KGgtvN00vD2W2qe9bZB8vTgHj7yswvo8QKGHOsCEpzwu7xg92B2dvWzGnTxg
                      F+Y7bHLyPKManz3X9269NWSVPSqjJT26nFK9aACtvYDHnb2Y/gM8QCpCPKGXqz01T7M9QXejPVrc
                      ET16vG69gBiWO4HKpj1m6ZC9AGqfOj9jhj1ZYqU9VNXyPIMEJ71A6Am9gdfJPdGSkj0CnVM9milS
                      vQnlyj17H7e9wJo1PBTJnbxVqMu9HD3gPIWTtr2qUlW9p1bEPWUOgT2debO9pmmnvT0euT0Rpag9
                      Taxkvbgvir0S9F89Dn4WPUr8PT3A0AS887RvvbBSkTvH3bq9AOYBvcAn17xNI6i9E6jFvW/6qz3N
                      zL09zdajvTORkj1X5ZU9UowgPfO5XL11kog9WKEpvLV8yz2k9e48yuxJvRowuL1ES9w87aRLvZxr
                      +jyqZAC9okUqPVUkrr0fTrU95C/TPHqNQL1A0Em73oqAvW66IT0K2TW9RK0DvXp8Oj2LcZy98Vew
                      PZZTFD26tTC9tGD1PPQHpbwpvck9Yz+tvdBJ67uTE7q9TKa1PFIlir1oFne8PZCrvUXyqT1g69u7
                      0x6yPQx61jzDjli9WYyJPfpbYT1w5RA8sjUvPQE2iz2Au767GfeGPeiXyb0AKRs6dwBNvRh0O7yi
                      4zw9DxnGvXoGEz2piI49xuMOPUWNhj1PaqM9nMnpPEzCxDzgmMU8ZHfRPJrLaj3Ex+s8/SEuvWat
                      Ez2Rw8Y9AyRhvZDZGb2Au/C7qMn/vPYQFz04QoE8wBYsOzBupb0Mq9a8LM6IPOjnx72zxhm9FmIn
                      PR0ZtL2gyai7L5XKveiURrzlxaQ9E0CBPee2Sb06gAg9YLFSu6Lrvb2yYA892moovRBAvr1d6hq9
                      2DmyPHDymb2ZtpE98ViWPdsUqz2QYT68LMCLvGe2vT1yGhk9xaKZPVM1WL1G+Ay9sC3Xu3J8VT0A
                      DGc67X1Wvdvdw7165Bw9mBd5PHCFOr1+eiM97cqVPdTgCL1602g9YJn4vHB+Kr2I+5G8QvBdPdeY
                      mD19Xyq9IE/aO2qgVz3q5T09Whw0PZ0JwD3NXKI9IGOgu/rRcz0J1sU9TX02vUiuy7yn17g955Ij
                      vWuDkT19R8y9B9obvTEDxD0SLba92h5CvXGjsT0TSlq9WXeAPVOmN72f4ao98y1AvWt+oL0+Jgw9
                      7XUmvSolIT1K0ly9G+y4PRPkvz3SZQI9VFrHvB/Mlj3M/t08mD/Eva6VXT0JlJw9rDKEvYVlxj23
                      7K09iMTLPJKZLT0Tt6i9vA70POILJz12Vhs9ILGBvD36Nr39+LK9HtoPPRMTcr0duoW9sCW7vXFN
                      rz2gCnC7LKKCvUsizD0tBny9QHfduqDevjtG7SA94l4oPdq9dD3oYh08UJH8u4B8MLyWY089oJUQ
                      O5uMob1TMlm9ZfSGPWqwND34ysG9mEJ7PBjMWLxihr+9AGOFOQOvYL04JMO9sNM8vSbxob2e2GA9
                      AbrBPfKTZT03Tmy9wrtyPUp6ub1iZJS9N58hvaCikbwsGvY8UJRKPKUGoj0USPo8INQrvS8Mwz3X
                      8Lw9iqMSvfR83TzL0569luIYPSPgrL3AWou6qqCjvQs7rj1b47g9VgORvRKOJT0nCmG9ZGj7PPDi
                      VrzSkx892K3uvCbNEr1eFY29fdKLPSyL7LzYbis8JdmCPU1RLb0fSKY9LlqCvYlAhj25xIU9+g+u
                      vVjzVTx4Q6e9iP/EPOp/Ez38q9M8bNHIPHzu6zyztr29VAMIvUwIuDzyjiE9/igdPZF2yD2K9Ve9
                      iuK6vaj8QTzGI1U9ANLTOofZtD0mVXI9lmMZvbE2sT2yYmo9qERZvIp+dr32QIG9TiesvcoLYb2A
                      FtI6jgMMPQBoSrtI9bu9oP/Mu/H2wD2IiZ29/XVBvRKiWj0qVXK9iiDAvWAd9LvShpS9gAKTOue0
                      pz0QCQY8FF/pPADZNr0ovZQ8ycqhPXl5xj0wXN47j0mgPcxp4bzJupY9PFyCvSg0SjyMLqC8iLeI
                      vHC+cTx7JsY9bNqWPKASvLwgpo+7XoocPejubrzBdoc93SxpvaLBUz1JX7s9QI+NvBAcfrz6+WK9
                      KSSuPdJnKz0AhsO7jhUsPWTv3DyMwYa8I1OnPQAU0ropPIc9qoQxPbuFyT2mTJ+9kSOnPaDiFju9
                      GIk90UqcPQzxkrwMGcK8fpwNPS7GVj1bDsY9hh9SPYtYhz1ow6a9+b6sPbPJbL0ncUa94aiXPU32
                      tD0Xv8m91m2ZvRLOcj2hkr49UsFLPax3Eb1Yvu+8T7OEPVoifb2AeQm8dgI7PRjGm7zkL9o86ogI
                      vdDaKLyWCHA9AO5qO5Ezrj3DFr49kHCPvaBjvrwQ8Da8HbqRvbl0yj2NXCu9yn9SvYA/zLtlEpa9
                      gLnFvHiX3ryQykM8132nPTHboj2AtLS6QuGDvUzn/jww6EE8JtFCPeCGhzxKjQU907vGPQcsSb1g
                      qjw7ScPJPWfnnD0EZ908oPUguxmHxz3mGA+9AKGauzCOQTy/T8C9kyt+vbFPiT0K1l890JMxvRI2
                      Cj1W6SQ9PcBovWzo+Dy8Ewu9Th8mPaatCb1sUJW89usjPVKZAz0D/Bu98uEbPfR4sjwY6Iy9ouI5
                      PeK+Rj1gKaU82iINvdMhcr2b7K09QCURvW69lL1CaG09p5iKPWzKqLxUwc48vahdvYhRgDzMbPG8
                      7ESJvNDjgTugGNk7klsIPWihcbxz0Li9+xKRvQqWwL124gQ9AvoAPepmZL2A07+7GEqHvaYOUz19
                      FIk9/fqDPeDSer1K5Gc9ewuCPbKITD0AxJy8c1OaPQQU9zzao4q9gE3pu1ZnMz2Sk3s9JoNsPU3a
                      Hb2vXsM97V15vUInWz3P9MU947xivVh2JjwWPDE9lgZsPeCRrzuNuqS91sguPRhpYzymTio97dO6
                      PWOJnT0oL/u8nskBPQ+nij3oQUG82F0ZvNE4wD2dzVW9bTwovfJHpb2ur5O9WXqdPfSKh7zTCbG9
                      dCURvU4BkL16rKG9vLEHvQAvCbuJDZU91bXLPVkZjz14Oci8C5GUPVYCKD2wW7o7awKmPR/AtT1w
                      D2K9Uee2PfAQaDxEKYG9SvF9PSUKjT3K55q9wKqNvDqfaz0miw69/tCavfuBjT3pWYs9mr9LPQja
                      hTyYPSC8CpMnvYLbor3Q4TG8F/yTPUNTIL2I5qY8QKAJvaSs6zxKVm+9k/qwvcFnqD2Yz7+915SY
                      PRhcrzyzvyC92jGxvVa1kb1s9L48osIDPR09ij3wzAO9y4LAvYAiJTx9tba9Wt4OvVDqILyC5Uw9
                      XVG/vVDjvTv0l5C8HY12vWAVrbySlmw9k35XvZrher1B68o92M1uvMjol7xIfMk87meSveyUAr0J
                      2Iw9HkWSvaKqVz2QEjW8DqSEvUi7nLxmiBG9sUKpPYAQVrzgZ5A8i8OZvYKDPz0Kaoq9qOzuvGMW
                      sb20hZO8LJXmvHFnoj3P0Kk9qJN7vECgdLsfvJs9ABuZvHoRer1AVE27gBw/PAJpIj2vYbu9gPHn
                      ukBsx71AkEa9L9GtvakAtT1fmsK9SSKJPVAy77s+DgA9quscvboNgb1lAq49llQ0PUKwND0356I9
                      l3RXvWIwqL2gCte8X/ugPbI4jr0i5B09g8myvVKILz12bB89oqcSPaAPlbvMvuM8Qca1PT2lSr2m
                      tRo9xpkHPRKfbz3bwpY9ofWyPTMCxr37w7w9nVtKvT3Nnr2WrnE9NolMPaiXXTwaXC+9U9GJPQcC
                      Zr0A6Pu6q9iXPUDedLyrraQ9gAWou+C6P736oFw9Db4mvVXjjr3YL9a8mhN0PZiLDDxALS69l62r
                      PQCF0bvsgrk83QhKvatgqr0wHBG9lVmCPZRuizxNlL29wg8LPQUEwD1GE429ygcDPYpCCb2waFK8
                      vB6BvdDxrjvKwT49/goFPUABm7q4Gbi9386VPSgaZzzCDxw9W0CgPcB3sL0J0Ik9m42tve53Rj0d
                      u069tNKDPDK4Nj2VfZu9VQnCvThTo73u2wc93kAlPZ2Zib2txVq9JhGSvRQ8gjwY4oW8EaWhPTH7
                      tz0OuY+9kpVkPVD8oL3VEqi9iu6vvVAX/jtY/kK8bbMtvUg67bzz11e9l2h2vYUqiz2+Y5O93VF5
                      vUFFlD0Yb4O88jR2PdC49zsM/8M86YmlPeBhsr0Aokg8rC+gPB0SZ73l65u9AP1pvCCqrbvApqU6
                      UI94PDZzMD0DsGO9c6mrvaOcqr06q1U9ZvFqPUBjGjyzDGm9DbVKvUYfJD2YKum8PjM5PWYaoL0A
                      MJY6nbuZvcsFkr3sZfW859exvfiq2rwIaJs8liOqvbBQ0btsMZK8fgqDvUv1ub1MAha9F+6tPa8E
                      qT3AmSe9cCcdvZCAUL2Xm1+9Mj48PRNAtr2nwIw9woQTPa6HWj3MLQO9aIV0PC//kz1YMX+8YNyA
                      vMg6qTwmo0Y9QEk+u9jAbjzzTJA90mA6PRiEr70w1yA8Yq52PS4UdD3mN2w9ku8NPXIQRz2x8bc9
                      mUuePfnhwT3PepQ9U0+evbC5pjtANKy9gOJYvbgEsb1NC1y95yGuvU2bnj2AmvI66owYPTzgAr1I
                      0oO8kOhWvJcnc730J6s8wKhbuxt0wr3ZyoM9MD1SvbAIGDyfmbm9gsBUPX06k70zmJ695y7EPZzi
                      0DwYUPy8AGjyvMwL+bwd66w93YNGvVLMir3wLzM8E343vTqTTz3MBPm8PSWLvapWtb2wz9i7gB5a
                      vSaBaz3M4ve8fgxhPbrtOj2HbDC9gNGbvFpGEz1AvXO88UmSPbz+/TwU94a9soF2PepRCj3ouoE8
                      wrMEPUAUnDzNCb49+np9vZiaUzyix289nlYEPUAls70UWtg8oPUJvU3Ear23i449CY+0PZnprj0U
                      94S8gCLMvaLsHT23eDW9DAC6vGKgKT2wX008e827vbAcgr1DPp09CfaFPUgQoDyKQXU9HvGnvZrN
                      Ab2XNEK9wM+APDgaqbzMu9a8wFqivcgth7xSnXw9YMu6O56Zej1Yir+8AKU/O0AKOLzxysU9f0m1
                      PTKBl71Av5i8Kqy2vYMjvL3Af3S9eBS6vWfEML1KbK297aCMvQZucz2GVRA9XZyzPcC8R7t1XpE9
                      ow6cPcS70jx3vsq91HTnPHlJoT34vLC8mM8LPFDBfTxGSgs9rFHbvNivrTwuxD096PCEvJQVpjz1
                      +IS9wB42vdo/Yr3AxVa9S1fFvUj/kbzYw5i8FU+pPaAtrDxwikA8RP7NPG/smz3ogPm8EyWXPffF
                      sr2RCMI9luA3PZkHvj1gbdG7FTebPT0fjL3dncQ9CsFXvRSy3LzzRme9qoBWvbo0GD2ACga6YHa3
                      PDQ2xbzk6oC9sguwvcBUqLxIm8a9h4NNvRQG4byOHQ89GDmXvQAKkr1WViY9YC1qu416Pr04gpy8
                      iAvnvICZ+jvAEn68XO3MPIBrx7pw5Ts8boKqvUCRrbpAF3Y87TgjvcuhpD0VSrS9wsmcvd+Auz3e
                      2nY9EE1/vazmhrxQB8A7JzIzvQpjTT0HYsK9YtNRPeJhXD1gTYo7iuFEveRz8DwEXYS97SsdvVgv
                      h71g6Jg7pyGoPUqzEj1ocie8oOX+OwAuSjx0Hus8f3OuPfaADj0VUr09WIWWvIAwkTpggAq70EEz
                      vG/Iub3IxI089TfFPTjCqjyd2EK9Mnl6PTMnpT2Qn6e9+A7CPNAktbsAWJ47MmJ9PdoNV71O2Dg9
                      pq5uPZdVWb1N3au9xWmCPTqdvr2S+As9t618vR5wUT2UuMM8SDGHPNQq4LzG4h09ACRrPFMNur1C
                      Q6i9EPh5vLozKz3gSpW8PW6FvWHVuT0Nq5o96IAnPGh8yL3Cr3w9ItE1PYuvsL2dboo9MEcSvTPk
                      Ir3QU9w7g5WbPSh2qrwaYYq9Usi/vZPYm72YtBW8fDzQPL9Bvj3tlj29AkJYPQBl9jnQ4ko8dlkL
                      PRAESb0AqTC6geSDPZjN4Lysp+c88J86vc1+gr32pYm9/eqSPXh4tbzB8rY9bqMWPafiqj0AIpS6
                      NYqwPYIppL0iaU09XQ6YPcf/rj3Dc2i9nSmdvbiCqbwP/8C9zBDRvO6afj2BncI9elWyvaDnnTsW
                      MQS9gMxzveDKSr1qxEg9QJYdvMrJXT2sze48YC1Ku/CJODwHap89mM5HvOA0LL0oG+e8cPUAPGj2
                      2LyVbow9b2G9vcvYiD1x/8c9rEnavBQcxTySPsG9CX+VPV3edL3V+J8910+pPaPQuz1YM3G854aY
                      PTZrST2toa494IE9vZwG1TwGlwI9s5FmvVAdF7xatyi93dqnPXL7OD0puKo9cqWmvSA1ub10X8O8
                      b5OPPW65Gj3GYJa9ejI3veL5YT1MCu68FuGbvageDLx/gJ09KmBDPUD2z7y4o5C8XmtFPTelcb2d
                      78O90MsWvcivs72tTsm9QijGvSoOVD3sTfo8oOB0O03YmL2ofbi9tgqTvSa6Uj0i0UE9CImrPCPu
                      Rb0oKQ+8NFv+vFDeB7xo0ye8grJgPdG2uj1yPrq9dxBJvZqhYD3sRtC8QOt4vVDEYL0Qjo69u2u4
                      veTX9jxZKJQ97EKYvHbiQz2aocm9A+5wvRdPsL0oVsU8FVqpPYrGWj1QDGK8Mi8bPSB447uqmaG9
                      up9MPbV3ib0w0PI7wOrdugByhDxfOLO9GgZZvTO8qT3sPNQ8Ot4iPajgbbzuYZG9wNxruxQ1E71A
                      cFY7NQaJPYA6vjr6pg09QGqFvKr+rr09J4i9FjUGveOUsr0Babg9OHLCvBPMqT0w2AM8jwW6vaQ1
                      6zy4Xfa8HfO/vXddLL1d9ke9lJGlvIpYEj3Ur+M80L8nvOmGpT3CpLe9OpeOvVDIO73IlMq9cfm4
                      PaqiLT3LdrM9QNitvWKWIz0sr+q8MOf4O/HHkD2AuU28thQXvajSnDy4mpa9UZ2oPR7hSD1pncg9
                      7U9rvXgWiTz2OKy9uErgvCWzvT20g4y8YEGNvbqFI720xBa9fzKdPfNXwj095Se9mGFsPC6kCj2g
                      ZgS9ZnMzPVjvZzyffIw9N+CAPZq5Mz035cW9poUWve0ao73BLoo9eDu1PMrbsr3qBxM9AE1HurOw
                      sr3w3ik8SPKnvcxogzzgHK2732miPZjkKbzCWDU9bHawvIYNqL3A42O9aaOYPUw3jL3AdK26hrYH
                      vcW7sT3oEYc8LJHlvABwJL1AfhC81+OnPer1Fj37OJK9sE8Evew1mLySNSo9cYiDPZrnar0KKb29
                      CwuTPdI4xL0wyQ881jJ3PazniLygnsa7GW2sPQBoj7gCcgI9gAFrPCHUyT0uoH094F6evEK5fT1s
                      e/q8LLvcPO/VqT18/ts8G/GKPaWGjb19OC69JCn8PF22ar2o7dO849xIvRPgpb39VLS9e62WPQUO
                      ir23soY9kutpPR9Lhj0Bt7U9QduzPYDDkLpAL4y6RieUvVVAnT0o4mU8CshGvaD1xDuCrQE9YEg9
                      O+jxiDwN5Zq98uOUvXMHq70wT6O70ugmPbyJ1DyCghY93bHJvZK1pb1Kw2K9xwAovQBE67wRf5c9
                      Z2Qzva19wb2MRqm83Ve3PdDHA7wof2Q8rf3HPdtLm70wMrS7J0pRvZIVAD3bbo+94KOhO6hfTzxx
                      GcA9NHTZvIKISj2puZA9/l5VPVL5Az0JMaM9ybWJPcJEST16+mg9QUnDPXDbL7zHqCm9yTWQPU6X
                      qr2+FW49yCWbvdSUsTyTgTi9sSKpPWzn6jxqujw9DlJNPYJ4FD1QP1K80MTyuwAgozfSPiY9mho8
                      vViRVLzg+3K9oI7sO3aVHj3QTPC7jDQJvRxu/jxYi/u8cM8vvWeBN70gR4e8WE2rPO7kkr1x3o49
                      g4MvvcQy5jzSrQQ9ppQePXrEbz2iYjU9XMvlPGp7g71j/bG9aKQmvKfkiD3aSis9WTWiPZDnQbzA
                      2QU8FCTAvDavfz0AWgs7saCwPR+ltj2cWNY887ymPR42OT2I4ou8olIsPZlGrD0YfRO8DS3IPQAE
                      lTtR56s9gG7UOwJBID1gQ1a98KxzvW3zlT25sL89SNTRvJ5rdD3Aj0u7T0iiPTA6Pr3Hmhm9Gh4z
                      vQCRi7sAXoA5EI+evVAQf7wldII9DxKvvWiCkb0i9IS9Y5twvVpbRr2AIl66Pe2PPTBEWzyDWcc9
                      JhRwPUBPEbvTGYY9WvRHvbABJbyg+8+86Hc8vGL+sb2wPp+78j5ZPSg6oDw4bsK9k2WhvSBSTb3r
                      R5Y9ki4LPc8Omz1B5489EhQvPQeJuL09UJg94VqdPbCJwjvA0QU8TjSHvZBZYjwACPm8AOGLvA3R
                      ML0FW7E9gMgMvV0zyT3KsBm9G5ugPYOJvD3o6bA8eXm0PfCeVLzgrvm7OAm6PKDx4bw56K89AOde
                      vOvZwL0iGT499so2PWLOBj2DCpm9WN5XvCI1WD2SH2Y9KtgCPbDxcTzAMP28RJH0PFeAhj2+2T49
                      B4kzvSCNpL1oBhW8NghYPUouq712siE9uuhPvdDRAb0CilY906m9vYg7y7wSTVo9qv3GvTCVujvt
                      dbm9sNfFO7yk4DyY8+2815havUmDsz2MKtY8zGyvvHQ+yjyDO8w9IC+bvGMaML1OyBc9sK1xPNhc
                      rr2W0Ju9t944vdjun70juqC9rYGTveEehT0+GC49FlAOPULOKj0lDsa9wCkdO5YmqL1WEg49k0Oc
                      PSGtrj200O48MDs8vdWnnT2qqUk9VkMVPbDhGzyp/rk9m5uevTDMRb1wpgK8YJ4HOwh2gzzi5WM9
                      y1G+vTBtOLxQmwg8RnSVvdDtCLzAeVK7J09ivYyG97wodqm9AKOXOa5cAT2pe8s96mN0PVafoL1T
                      ZpK9SjpVvbjJpLzIiru8ADyZOxQtsrwZeLI9PoB8PUIXdT1Uss28Nvo5PaMKXr05Y5E9MDaFuwPF
                      TL2iVRg9ACqHOQjAo7zdh8O96tkEPXO7LL2HUZ09u12nPWXqqz390qg977vFvY4SQz2A6ta8Iplo
                      PRoxTz1sqNs8p31BvernIj1w87W9STSEPSvnlb172as95uqNvbDZObwwJ+g77w+kPYBTo7ut2zu9
                      2kEQvRITLD0jLqs9LJG0PANgH71oNo08GKZKPILlPz19TVy9ANoSPBgTcbwxmrY9dEC5vL2bij1A
                      c2K8qHMFPPBjXLy1hbi90HJSvXafCT1Adcq99hAbPYushT1Yxhk8YgsjPV1LUb2QgTS9x/mHPTaD
                      Jz05j8E9ypx9PYgPkDyXZnm9KqIKvUJzQj3D3qe9oDJzu/P8sj338IM9eoRZvYuQk709dL+9S0u6
                      veAqjjzQnGm9s2Z8vb1PqT1d4YA9ei4FPWFmkj3DPxu9auAvvVa3aj0y5G49hOXxPAm+vT1FPa+9
                      MOy7u6q/jb2DeKg9uJqGvUumvb3ox7W9WT+1PUjGwrxxf4k9U3WxPcpakL0lwMO9gMviuuCQ/Ltd
                      4zG9nf1JvWoBD71OzG89+QKRPZS78zyKy0y9BIyLvQIqCT1UGKw8aCm1vAAigb3iU109IFmXu3hc
                      wr2g0uU7QPAUPNJ1XT0ayEi9gIPbO4ojNb3bLJ+9lO6CvBDzYL1WoT49oDOevMkwuj1oDEE8yrYS
                      vWBEHb1k1do8GH9PvExJrrx8o+08In0zPWnyiz2XH7q9Tb6ZPQKpEz2S6Ug9wE09vex4pDxYLLi9
                      +E7FPP5rqr1Q3wu9nxDCPZYPKD1Nz8K9gBSIukDI47wCTEs9uz6PvWRx6Dxzd6Y9hU/BveP7eL2P
                      GZU9mCSWvMOAv72M2YI8SGmNvKahpr1owKa9vopNPUMRlL05NZM9IOi+uzJxSz2QHxi8X1KhPQDG
                      izmkReA8t/JXvSJcfz2fT6g9vbuFvTeKVr1Mgeo8oCGNPLI1Uz1M8O48R3hyvVh1l7zpo8U9cXOG
                      PfqEXr2yHj09fviave8ulz0aKQg9Gn+mvdp3G71Cwmc98J4xPCC+trwgTPW7zTpWveBXpTt48Yu8
                      kv0JPZMAkz1pbI89ClM4vdh9BDxnwHe9oTSDPfpSPr26HWo9LXY6vf5TDz0ERPQ8Z+F2vVCxQL34
                      gqc8KMOovXvutT2SzgU9C8CbvSpLV72oNBA8H/yOPXW3wj2wpCU8L7qqPapTYz2KbF49Sxy1PU2o
                      pD38ltE8mIWfPAvYnD1wdqu97bCjvSkIwD0zuYc9grU2PZAVIDyX/1i9XtdrPb5KWj3AsWO8mgw1
                      vaATurux6pQ9OgIsvWrMgL0obpI89PDHvPybF71fBsc9mzybPZ71Kj3AcGa9WHWLvHJ3iL1xIrw9
                      eOGQPPAAWDxs6Iq9YEZ4u3yn9jwaVAs9tDjzPBAVTry3nqg9/+C1vUKEkb0p+KU9iYnEPdQInbzK
                      sUo9cAJkvEuGuT0oHxQ8T6CwPUEXjz3ydGk9UmQCPeRD+DzfBI09OkC5vZo4UL0OtEU9AAw5uvRe
                      5LySP2A9qnuCvXQtyjywgkc8LIKAvS8aqz0A3KO70mdFPcaMhL1iYGo9ALmau0CwhryQ1CC8+r5a
                      PeR8FL25WpY9dWy2PZ6MCT3oe308QAMjvUDTUTtALFu7EhF8PeWVwz23Kie9UWm6PYYRQT0NTJa9
                      QFdZvBrqNr24quG8wF9MvJYoTD1pe5Y9ikV8PSD8lL1FtMA9+2u0vdpjJT3IUPW84BnKvGnGxz2O
                      uYi91zG1PZi2FDx0lqa8J42jPQDQx7ywWy880qROPX16yL2onXC8ygA+vSWarD21Hbw90OuhOyAS
                      3buATQO9YxaqPR3XoD1mfUc9AsaxvUaQiL1LG6o9s/Y+vW44OT0Guw69CsCtvWm3jD3Pgbo9eQm7
                      PYLNcj3Vi7E95kQXPbByvjt7Eqo9aPklPOCP2ryMvo+8lyePPXXRij1Yxjm8PZiIvaNQuj074Y29
                      FgqKvdpFdT0xnas94qMrPdYplb3W06a9GnAIPUdEtj3qoKC9OdyHPQC/xDtSGHE9HxO+vTyy+jyO
                      tGI9gjAoPao0hr2V2Mu9ooY9PQKZWz0JkJA9qz6SPZZ/EL2PrL89aCJEvIWHqr2hPb89h1G4vf1t
                      gj3wKVS8fsNFPRI3bz3sIK+87qyJvQNnj72sLvQ891Iwvf4qMj13+MG9tQ2OveB4iDyntFu94wNI
                      vdAruTueSjQ9MM2AOz7ZMz33ZEe9jaUtveHTjj3wKA+8jIOSPMJ5ST0wyVo8ADauvRDKJjwYbs+8
                      MNyCvSBR2jsyFms9MoEUPT2MJ71jirk9QyJXvUOatb2SHTE9HZHGvYg5kLx6Vbi9qceDPcYDPT2L
                      aso9bfk/vRR5Ar2SG7S9oPwdO2jJtDxYjne8F0aAPcruXj1hYKQ9ANSbOAAFMzy6AlE94r6uvd4Q
                      KD2bp6q9Q0+0PUzG7rxSTmA9zJbbvGAIoL3jMya9lyFqvfDCUjxieiA9wHQqu8rFGb0Megm93xGh
                      PUovO72ENtE8t3ezPbXTp70K7TO9CCWevGUOkr2Ij4E8ORGgPRtDwT2QtAi9INr7u2iUMTyidUg9
                      YrFbPWKemL3a9CM9YAcgvYmUxT1ieEc9APQAOhK5dz1qKgW9pSSCvaAeeb1piqA9Q/CrvczDwzz5
                      k4Q9fW6avZD7Sbw9QrO9wmwWPTihqDzS/qO9aKlPPOCAvb1ie1A9MfTIPcBvHb3wNBS9wG81OwC6
                      f72j6pI9D1OwvY3iw70k9Ps8Xn0nPZjxTzyuSAw9ykQoPWUIyr2OtAc9uR7APTfsc72gOb27klAF
                      PQi5gb0Y2I08aOK4PEr+Cj0wqzK8A6Vxvfh83by28HI9M6lLve2LhL0H1F694VmLPXjHvr3YXl48
                      +uOgvTgls71HOJo9mxeMPdRYhr0ycTU9pHQCvSGurT1LOL09+8HLPdeiab1YN7u9Dg2NvZuxxz34
                      L6K906GzvSgiNrzxG6c9/wa9vZBmBL0d1ZS9HqxuPWK8ez1KKyq9AEgbvWf1xT0AYP238Dm2verD
                      Zj0Jscc9NZDFvcLdGT3x5689AbKsPb9LkD1bXaC9bE20vAD2JTxYdt+8AjJtPdDHqzuAfYy8RmsA
                      Pb+2ij0cNRm9bnpiPbGsqj3qzbC9IcGXPdUBi71YNDM8htMePRnblj1gwx69xykzvUfFwD0AmKA5
                      0K1MvbIydj2QWnO8XZJdvYlXsT0VLYO9OjAcPQYrBL1voMg9yFWiPMqVOr3+w3s9MeDGPQzb8Lyw
                      jte7zWGBvbBPVb2NMrk9osVUPbJwbz26f1s9gIDCO3dhlz2gLgi94aemPfK5r733BLK9vlINPQCV
                      FjuwGwg8BD7SPFVZob0Qyw48ayfIPXRM2LwGokQ92DAUPOcfH72tjje9ccSLPbdiQL3Ykzm8KOs+
                      vGhGqL364aa9ws9LPSPvwT2XeC299AiDvcWbwD2BhLo94LGRu9XSuD0dXlK9QC5AO1KZLT1IeMy8
                      4N26ve0YUb15Fac9wNiWujAwtL0Idoq9BrUPPVWZkr0H95o9KemyPR8ywb30GZ282AOAvNffnz2S
                      0lU93RozvQxK1zzgb4W8ZcClvZfOeL1wsD+84fi/Pa7lCj0fUsA9plAPvS04Tb3onWS8ILrLu7al
                      ir3sBuc8gIsQvJjAg70Azqu84wTGvfLnWT2+mTI9YCFWOwivsr2Qym+9j4GjPUyejDxR1qc9OmAa
                      PWI8LT23L0699vgXPdDcLbxuUX49EvpaPaXpnz1DzHm9cGnJvQ23kD0on3+8oKckvXu6vz2S/xg9
                      AMB1ub51mr247+688/K9PSh+yTzSzDY9HX+vvWlXkj0AkQQ6YC/UvFulsj1l1bI9AWKxPZopGb1y
                      ZVc9dIy+vFDD2Ts6G0E9cLwGPEByJDwKYwA9GhhsPT3aSb1AG5c63mRkPVUroL2WZwI9DZCBPbc2
                      xz2AUdy8S6+6vbYSMD1swNa8VcqyvXusqj08lxi9lwy9vSDYtDzWnnQ9g1h+vbUTyb0MHOU84hkf
                      Pa6rh73mIQC91K2cPJBvR7ysRo+8aM6PvBNiNb1QAzq8aAKyPA11gj0ohMA84mGhvQlnqD1yR149
                      fjA/PVEOyD0wT3M89c7IvcBEszxK1by9+Fe7vRG2nz2IWvG8kPl4PFJBIj2s8BK9qfzGPUAOLTtw
                      kn28mLnevEB91zqovI08GC2ZvaD8nbthSME9tCfTPIPWqT3I1JW8shs9PfEdxj1oYoO9ntJHPQoC
                      JT1HRGm99SScvWXWgL0o+DM84YCTPUsrjD0tSMS9jTe+vUAnGDwUe+e8olQEPdBdnzsKryK9Hmxz
                      PdTkD72QKSC9DaW/vfNslr0goLO9SzeUPdYUdT06cHo995wlveP7Wb2JMsE9gbqVPVCxhr2tx7k9
                      6G8QvIsxlD1oGAS80lYpPYnmnj2K+yC9jBGnPEBmODxmtaG9IFKlvZjcqb3yPhE9cJN7vZmxtj0R
                      g8s9GOOXPJCPeLz4LL880iNXPcciZb0I88E8qETMvaB+Pr3R5oE94yBJvcbaBj1QhWq9omwjPdjK
                      m7xmQxS9kIZsvUAUgbx36b09CK7FPBM/jT2TbJm9EmVrPYCkhjzPBqg99v4YPdBNe72lgoU96GCj
                      vYC5FjqAju+6iIKwvKBBKTvpcsE9VFK2PAAe4btgtWe7zKPePODEnTyS5Bk9DznFvW5/LT0snLG8
                      iu0HPV+Isj2KvCE9mHrIvYfPGr0wAhy87HnjvKLVNz3KyG697SazPQWzob2oA8O8dyaDPWxx2Dwr
                      IsE9HGuMvRkfoz129xK9DAXBvFAS1ztw8Ku9rFrsvIDwl7rgU3m9jSVcvcDEoL1rqJk9buRaPUto
                      pD0YLAY81fq5vf7TLz0C2TI9RKD1PDSnprxY2Hg8+kI4PSALnr2W2VA9MKodPCoiLb1hNaM9BnqI
                      vQaRlr0gwoa8doWJvUCaGr3+2V49PhKbvdRykjxsRoU8EIe6vWfrrT3iMmE9KBkOvFB2hzsykWE9
                      sKhDvEbCCL2kYuM8p/JPvfUCtz1w3V69dJj5PPcxvj1wwU+8eGytPEBnULvR1b89AEglu9ZBiL3d
                      usq9zMSvPFh1Jrxqw2m9+FvpvPArUr2vFsw9WAiDPN30nT090Ci9iYyqPbP7vb0qlwo9iloVvQFq
                      gD0gl7m7s0gcvfJYvb1QfmA8oA2vvVK9zL2YiN68mCAnvFDZWjyb6qK9Xm2ivcsFsL39EpO9VhJD
                      PVEytz1AZny9hNDRPJhh+rylyJq9y56tvaMhPr1ooys8EaKyPahH87yW1Ec9UQKDPWApTzte7JS9
                      /uIGPSj7m7wiLTE9C1GRPR8jx71YlKa9M5FEvfAjGb2AfVy6TAqsvN53rL0Wyqq9+DCnvQD8SjtY
                      nMk8435FvenCiz0SRmk9X5m8PX9Eyb2yqBQ98jdVPQCO3jtQmUG9Ub7BPeryMr22swm92PRPPJQv
                      3rwwf7c7leiHPa23qr2akyC9gMzYvKhUxLw8Jg29cNaIvRRT5zweeTI9wNmrPCOywj3LQ8y9vvM/
                      PSO5vr34l7G8UjGPvfirub2BJbw9sL8+vchzqb373o49f8K0vcJhCj19zyG9gh9OPTcrrz29naS9
                      47SwveCD97uwKnK96bzKPXYBGb3VL6s9TIiHvYHIhj06rD09U+kyvaadVD25zLk9cKJdPJsxl70F
                      jLe9aRKQPcC8/rxv2KE9qmA4PeJKaz39xLU9BwCcPaCK+Lvenzs98QTMPYCf9roesJK9qFrHvdRp
                      +7wrj8Y9vSycvdDge73g9Kw7KA/QvDONqr1+vQM9l8+UPfh25rygwbU8O/aovTK4sr0TXGm9A1so
                      vVRh6rzYy6A86PMSPLuny72myFA98U2dPcBJyDxZs4Q97rMRPTOwkz0Eptc8oNBWu3jlmL1aunu9
                      ZJgSvTtBrD2YwBG8I7elPXt3mr2E9vo8Qg1lPUshkr2OMAU9xwBPvVhaiDwu33Q9GOG+vSDd5ruy
                      a0Q9VmpNPSZSi71S+RI9ehgOvZa/gb2ADoy9g1x9vVDfVjyCw4K9umoQPVBr9ztNU4i977SWPXed
                      iD3ySms9GQrMPeDlvLvNh4m9M8lDvfKOED3w1aK9SRfFPcN4or32aYa9gNPbu6zknTx0iac812OH
                      PQz5oLyKfDS9ILlfvV/hpT1Q3Je9oEwuu+qJID3y7ns9LNunPKDBkzus96888NGXvZLWAz2o33k8
                      ANKnOvbQDj0efkQ9IOvHvPYcNj1Tt3u9kSO9PYILgb0QfgG88HcsvGCVd73u7oa9d1i/va/duT2A
                      ltO6oBXgO13KrT33MKI9gCHMvB56Oz2Ij728ae6zPYCdB73DEp09mPJDPICLuL1jglK9VeScvSeT
                      dr092yi9jIzEvFU/xr0nHJM97f9TvWkjlD0QV368uA2uvQCg3LpAfpO8YGSAOwkagD1PN729ANW5
                      Ofu3nD06LkY9qa+8PWKsaD2KiSQ9X7O+PVAmjjtwJWK8ySuHPa7BqL1KMLu9EjB1PXQ4tbyK5cm9
                      3RLKPZYBHz1PZsw9feRIvTS93Tx7Vbm9Sns8vVNxd72ISqG9ymA7Pehyy701dIM9oOqavLTw+bxr
                      xac9GMTcvJBZdryiSjY9qvF4PWE8sj3+A1o90FNyPDPqUb1MguI8dgAvPUeMer2MYo68dOTXvCoK
                      GD1Ssbu9hpk+PYBcljvyM1Q9gBT8OhDyWzwAAOA6G4SaPWPXgj3l5qS9sHo7PGATODuoM2A865iP
                      PbJ6wb2wrPa7810+ve0Wa71Teq69M+ioPbWOkD3zkn698wS1PVuvtT0mgDs9QBSDvFEFkj0wCoq9
                      c/+GPeyq9jyIGa484AVtvfO8f726p2E94dCRPSG4tz1Nvim9wOO2vEPyIL0nUn29YtmNvbCSZ7wA
                      Q169//G1PcBiw73JR7o9JrJKPTgay71LxpI989c3verACz0ANw27R6KiPXq3SL0A5jC8anslPWwH
                      1rwALke8sMYAvUC1SzvRRrk9mhR/PcplI72AN488p31OvU2dsj3sxZE82NBuPBrzCj3/+5w9Sb6E
                      PaM0Pb2Jd6w9UAb0O1Cl5DstK569jimRvTjbuDx1Zsu9wMdRO18onz1AMDk8SDD4vKAUqjuYrKW9
                      UPaRO5QVCr2/cLi9AmtLPU85jT14PaC9yHHDPGlytD0OoZy9+Ae/POJ/bj2+z3U9OIvdvNW2vD1y
                      B2s9+nVlvbBAmLuXgS69NqNHPSeloD0z+D69Ygm5vW9Psj2o6DG8p4K6PZv4rz2k+/884GHBPKpg
                      Vj2g6Ks7mF5CvC3Uf71ATcy6a/arved2gD2AyOI7cEEhvUoHND03QCe9IlQDPfJLvr0AEBe8woJh
                      PUzag73sZe68QIFROws5oD2SFk49rXgzvRpywr2ycIG93deGPShKb7zcsg+9YFV7u3MrK70AsJ67
                      FC3qvEgys70jnHC91W3EvdUknr3Fo6A9Hco8vQIxtr13FHS9/noSPT02Vb2b05M9HN7gPAJeYT3W
                      KR09h9FJvaJGVz1iPDE9AiB4Perklb12W6a9dRGdvUBlY7sQ7VU8sFz2O454Wz1NU6e90PALvMqc
                      sL25x7g9rImCvae+gz0wpz+8iCP6vFq2f72Bybk9ymEovXy49jyK7xA9d8VzvQqQSD26Dmc9ipFJ
                      vVkZsT2mFUU9bCGIPPp2DL1gkA+9z7CHPQDcablS+3E9w+i/vfuDiz3A64480n86PSA3Zb0ExRC9
                      qjpQPU7MLT0A1Y05lMzuPE/Nrz140a08Wu51vVl6iT2+JQE9KqKWvcTP3DzzVLO9+AqIPMoIur20
                      YsA8XebGPQpcxL0yQxE9MHzYO/BXQb1QXDA8LsdsPXnjuD2ofgA8/dCqPYzovbyUWoC9WseXvaB6
                      eDvO5I+9A0GmvaBKHLsjj369DsNePauLlb1DJzi9oHgbOzili70jX269ndklvXYVVj0YrRQ8ltVw
                      PQTgFL02jlc9UuoiPaknlT24xaS9YHIBOz2owz3uXB89lDCXvDo2fb0M7cc8kAs7PEIFOD2HKDC9
                      EN02PB4JSz1KChc9G1WQPQGkvj2B5r89hJfjPPMGjr2orZG89D+4PJHOmT2iWwA93SWIvSh5krwa
                      vHi9oO0pu2q1vb0tLES99VCmva1UnL09d7W9V9c0veClg7yMTde8WJqHvFIKSD2LMJa9UiZYPWKm
                      x72gbyG7OJK+vdBMyrtgPIM8bMqcPIABkzv3yb+9T1yrPZ/EpD0nSiK9si5CPRADIbzikG49RuYf
                      PQAYXLhuklc9ncGOPRr6UT31oYy90PQOPKingb2SHhY9whtiPWqao72AfX+9jfObPY/ckz1w3S68
                      xrUOPTZ9Db1agTU9tAMBvShOwL3BCKw9G123vTVijr2w3iq99ZuCPShcsb0A31i7diRXPSpYZ73P
                      Icg9+7GYvTLTdj2wKmM8p6ykPZC6cL0SRL+96MZQPIM3kT1RMcY9ZIeBvcw7n7w0HKm8BUatvcr+
                      w72r05U9ZgmUvW3ctr3wiQE8gL4vvERV2Dy1hJG99kFAPb30hb3Bfq89mlF7vQDPr7sKkZS9WMaF
                      vMABizxOayk9H8quPZCkGL1jvMW9pm6rvZ1jmj05fJA9sHxjvJXduj29VrS9gBFYPPR0+rydwm29
                      1Uu3vWp5QT1zT2a9GMM+PCDu2Lygi+K75KL/PMserD3wFTk8W4m/PUauoL20I5k8wPZ3vApFmr23
                      wS69NRawPW1Qn72nq6+9sH20vcoSMb1n14w9wEsju5NPtz1XrBu9zSljvZB0QrxzFn69CM+6PIa9
                      Hj1Y0Zy8p8NUvSgoEbxKw3Q9nAr1PG67KT1Ndrm90xhGvUpFOz20qxe9gB6UPDHrrD3wUC+9+io6
                      PYCCtLwqQRw94mCcvefjqT1HtGO9yd2rPYLaPD3Y2/G8Y5l/vT5/QT1QAce7HY+yvaShFL3jhzC9
                      B0rCPdOfZr0TjI49cJdcPLsmkz3oZay98DhgPMzYojzCFlM9JduqPc96hj2A7S+62g1Vvc/tvD2F
                      Xa49OcuHPcCisr3/kKI9py1+veK6gb2KFQU9M8OfvQjDhDx6/3m9XRE/vUoOfT0+yRw9efTIPcHf
                      jj1j0o29+MrvvI+mxT3I5rc8udSMPQX0qz2I/d28kNUZPAqGVz2sWtS860+dPbpbUz0H1H+97iEv
                      PZKwob34fp486kQwPY5pTD2xPKo96l0WvVRwq7xa/IW9gH3PO2Ty8TwA5uE7QNcjO5orRL3CzS49
                      eBrJveuapT1AMMQ8NhBQPcr2Uz1qg2i9tFfjPF63Rz0ABWe78eqEPYCDazw9x269et6xvebbq722
                      RS49cN96PPb3ED1UU+W8bdRQvWBFhzwKDUY9LJ4UvYrraL3B1pk9QF9RveBkn7zIP6k8GTbCPXO0
                      cb1jF6e9In8kPfpwlb2zhZy9xP3cPKAIKTtxPYs9nCuAvV3VpL1C86S9GsaXvaZfbT1SjTY9d3Yt
                      vQv5wL0AXos5CidUvfHZkT251ak9El9tPahGsLzaAam9JcqCPfj8kLw6rCk9tzgjvfapZT1aGQK9
                      r6zAPUcNqT2qpQa9THv3PHjwgL2zw729ond8PdAGtLsSSmk9bipVPcC/pzwh7Yc9bUlAvY6Bfz3M
                      YJk8PbPKPSz37ryqlHK9Q4SkvaYjn71lZrK9wD4qPABGg73wVlY8TEAOvcL6Cj0+7X0923qQPYLl
                      cD27w5m9AE4EvdC/ZDxz/x69gYO9PT41FD1pc4w94JGmvWl4kD1RZok9A8mYvYBLEb36iDa9ip9J
                      vcMClr2a9TG9uOWJvP2nV700pa68APeWvTgCj7w6cm69UFiUO+C3zruMwoe8IGolvRwWi72ESc08
                      YGVIvRhIvTwAnfk7dXSkvaAcQrvAw/i8khUjPWIvTT2AhVc8rErkvNEkkD34DIC9EaKvPXyx/TyD
                      +qk9UA8oPKW+gb0gTia9cC6lvawauDw4lIy9NtwPPUM+uT1axVS94NvovKYefD0FucA9KTScPWz5
                      wrxM7bk8tamNvYI0MD1pVMY9cMNevdj7V7ygyNI7d8IvvQLVCj1IPdC8U7yfPdAhRLzlQoS9jblw
                      vUJXvb2mnJS92MHnvNiZdTw157e9pzu3PYBuSr1Nyb29LmBWPU4xXD1Uk/u8AEqqOUAUHb2SuKq9
                      QsmTvQm5nD1dALS9SlVjvQ6XfT0UfIK8DMjkPPFKwD1zFnC94aebPV33wL2IE6k8S7eXPTRbrrzo
                      b168+3nAvUSM2DxEJfc8gO12Oi2agT186gy9iP6KvNI0LD1H6U69wBXNvITF8jz9B7s9oklkPeca
                      dL05coE9ZEr9PLKCZj1v18m9qLt1vAQr9DxzV8M97LcCvcnZyj1+AWQ9eICsvMcpY700orm8NFTo
                      PAoZFL0AYpK8TISHPIBOWTxzOJo96CwkvCbJID07RJs9dVHMvYBS+7omTDc9dNCIvY4NXT2A9be9
                      cWyYPUrCfT1YhbQ8DpcbPY/XrL05ob09AA7Yu/4lCz2A8S+8vZQpvchiyL2SNBg99760PY17tT0C
                      ojk9cM0pvTCJE70ookU80EBpPEnxiD0r45G9GN0yPBinmrxXU0S9gITfOwCOpzrQuV68gG+QvDYO
                      Sz1gVuM7820lvXD+bTwlhMo9bf6xPeAQzLxijnw9Eud5PejITTxXip49QBkHPDCNszu0I/q8tsI5
                      PQ04Q70q2Ae9sBx7vGojer2T38A9hpcUPWsVpD1A4DU8quGHvTGBjj1Ywj48ZXClvfagVj3YZyM8
                      qAn+vEk8mj3rs7s9wBcKPBhjTbwA2bI7QAhSvVCjerxDAWG9vht+PaiIw7w0bYM8ryapPaMPpr3w
                      9jS8+vtUvbhHtr2cU+U8tISrPCCj+ryA4m667GTevG51Pj1d06I93thUPVl+zD1gsrK9hHrQPORu
                      6TzCvHo9NB2BPI1EaL2oMra9luUKPX3bd71Y/HG8VwpgvTiAn73fPMu95ngHvWLVXj0Hyn29i92r
                      PTpAW71AQ4i9BeGSvYho7rzScg49PoKNve0Gf73ofQQ8QCzmvEPHv70NEaO9nWeEPXDtI72gzyq7
                      9O/gPL2Tmz3VQp69yJWcPD5HQz0w7A+95jJTPWkQhD2J3sA9fhh4PUSo+jwQeq698QCfPSOqlr0a
                      Zgm9DZLMvbKnND2p6ac9U5UpveJjDD3JUo49kNbKvU0DuD3sWa288NuivYCU9zu/iKk9m7y7Papl
                      wb04CJG8A9mwvRbSNT2q0BE9mvwLPYztuzzYv7G8zZmePY3ryb3YVkQ8eySmvYBXkLp6+jA97Hyc
                      vHI9ZT1QTpM7IAHOvE7HNj2QU2O9Ax9VvR/klT3igQ89tOC9vHRmy7xSXDg9eBe1vJaLZT1FopC9
                      PhECPWecGr24v9m8QfHHPVqQUj3B9ZY9gNvMu8qhfT0AH2m7aqN5vaoTnL1sHN88aMXvvJjryL3m
                      Cww9mix9PYBf/Tqod6m9etV+vXZQcj3wvze9CgoyvSM7oL0AFKM7gDvIugOEJb1HF8e96sxoPQMH
                      pT1QObk7gHGauoC8IzxZ3sQ9EnaUvQAAxjV6U369QB/9OiijKjy8/gu9qF+fPJeoxD1BF6c9oAUG
                      O1/MxT2DGaW9Ro+qvcWVn71It508euVUvcDNZrxQaeW7KCqfvOTXCr2ZD5E9ji+kvRgfxTx2gnk9
                      AKunPIC8HTyi7Kq9ONT6vMreeL2AQqg6oMCgu/UvsL3Ql7a9r5ScPcpRhr3grbQ7NR62PQXWur0z
                      4F+9fswuPcDQtLwyZB49yBvBPJOnOb2dJ1+9iSGmPUJqTT0YI1Q8HdugPZwz+zw6o2M9aGzEvKAY
                      1rxe/Bc9fybHvToIfb2Ptsg980y6Pff4yD2AEvC8xryTvYBgXjxFl4W9SiNnvdAMoDtYlMO8oLRf
                      OwCAvTxgeeK8xKPxPNO5Tr06rEo9UCvuO0CNOju0SZM8sUGcPdBUGbzqwhI9eRqWPfUsjj2TMby9
                      Tj1NPU2DkT1GNBO9SKWUvVoCC713M7E9rB2aPI2MuT1lsZe9gvpZPfLqHT0Ahv+5ABASuICW67oz
                      PHy9DCKwvMrqIT0U6pS8F9h6vVjMsDxKjsW98srMvRkvgz1SZlE9MC7Cu5MGMr2KpEy9cGw1PDte
                      pb2AcRe99vyNvYfPJ706bwq9AHmbvArTR72xpLw9eVWFPcEBkT2g6Yg8xvl8PR6bfD0srtS8GIUa
                      PODcyDsftbe9HxSGPSAVyTvEm9A8uHr6vL10Xb2E4uQ8ky+yvdh6ArxwwEa8mlJWvSQZBr3r94M9
                      UwSuPfSmk7xe8To9jkyYvTujmL1k+f48kOUsPFoudz3+0go9V1ioPXDTKL03A8i9wDunvfagdT2j
                      FnO96Jd0PDtoyb3t7rm9F9K9PaJJx72qtHA9d/N+vQBqRrwOvnE9AOVTO0LbGT2mAjU94soNPXLB
                      Kj1CRko9g40uvayJtTxAkXS8asaavdAHDzx5XZA9yvWevYqQYj1j9li9Lp+TvYAJML2UEaw8uX+P
                      PYgn3LwLP7G9KuFHveCGrLswJNK7u1S7vT1Djb3SHz49UDJKvSh5/Lyts689BvMEvTqrFL2QKSC9
                      KROAPUwL6TzVyL+9KAfrvHEiiT0Gu3o9esVyPc0FGr2AT1A8BYykvclPyD04ZYS9LbOfvUrqcL0x
                      6IY9/NriPF4+ZT31zYY94FH/vEJvir3CCAQ9GCZfPDH9jT31Cqw9QIOLvFfTL70i7HE9KMjRvHPY
                      Kb1p/YU9Kk5WvYpPcD1CIRQ9tTW2vea/RD2iCpK90FnLvUryHr0iir29qvhVPSkLuT0XMKk9epFY
                      vYzM+Dycsgq9Z+m3PZpQgr3DR2a9kvoJPWz237xYHYO8JdeGvcF6oT0wYnY8ChQIPaBq+DtOBk09
                      FPWRvKZKeD3CpZ+9cJ84vYLWvr2ZX4I9kDY7vYCy0Lqs7N48ih6yvaBp3Lw3Dl29l1uoPbDyD732
                      QEc9cI5tPNYGEz30v6W8R3F7vS3Svb1NAh69cx8wvRPNN70Jcp49AAF+vfBZM7wAqS26rciVvVPi
                      vj0DdT+9kY6/PfAcoL0p+II90FqZvZliyj2DRLU9O0m7veBqB70dm4296+m1PfCBdTwt3YS9U5K+
                      Pct6tT3QiXa99MPhPKu0lT2CoQc9WkeovfLnw71BxLo9H9e4PdhI+7wCAqu9qnFyPStkvj1OKGQ9
                      gHSMPOjjULzkKtg8xmsMvdeZQr14crG8Eye5vThZy7zNEJS9as5CPUigijwWhjs9eD+FvcNNcr2Y
                      F5684mB5PU4uLT0uHkE9GrIWPakIlz0ApMG6cJVmvLCeADwAzBg7uvG2vRGijT3uh3U9+HPNvBhI
                      qDytca89z+afPeK7OT32vmI96ZqyPQL2Rj1gJFs7LMHfvKjfzrwRuao9NZKaPRF1tT3so9c82YST
                      PbKdwb36Sk29wtyVvYO8Rb34IpK86PkRvDARIDx2whQ9LTvDvT5LXj302Iy8vVAlvVhQ1bzKtn69
                      s54nvcmzvT0XdcW9WhpxPS0hc71XEqM9/vUHPYoqe70Xtby90GKMuzCr+jvU+JC8YJITvXIZNz3Y
                      rqO83PAQvRNMqL2V0cI9SvMQvaCaObs6ElG9XW1mvYA/oLpeDx89PQRQvVrKKz2O2wI9rNbZvAPc
                      gj3HAj+9+jNwPTADp7uhXrs9FrVRPQy3u7zdwHC9WBpEvADFcDolOrk9+zKwPSnpiT3+MD09oIGt
                      u1lzgT0w2Yy94KySvZBFSDw2bxi9mPyvvffPZ71UmIK9KpOxvaJ6Kj1axb+9kP4GPPyggL1M7408
                      gU2DPfPcNL29s8s9MEe/O0Momb0IPLg8SqMdPQo/vr0Adpm9iPaQPLd1Ub1bPLk9So+ovegXk73y
                      3089CT2+Pawa+7ygwcc7UzqmvXq3Yb3Q4fo7yzzMPaJag70Ag7a9vQ7DPdVXvz19dli96CMKPA0D
                      cL3zlby9YLiMvAAlBLyYu868gFkBPNIzOD0CPqy9MtaRvbGHqT2wpCi8etEfvYWXs71g9qy9EJYL
                      vXDUQLwdEoe9Kp7JvQBjYTvVfIK9xB+KvYCM2DsQXVq8MEKSO54WRj10Obk8DEH4POrUOL0F05m9
                      MbSJPYXzkb2wE7M7YINnvQBxV7w4R608XaKvvYHpoj2CYbi9n2O4PWoRMz0vzMc9YiEjPVOeOL3q
                      waO9EKoRPAJ2Oz0QP1o8wDkGvTGBuT33Y1u9blZ5PaAyabs9hLk9LBq+vKnitD0h9ao9N6Mhvdvk
                      hT0Xl329QL2OPLoGwr2j7LQ9tDXoPCDGnLtbFMW9ALVMvA5ZfD2H+0+9wF4fO4ohIb2w4Rm9AFEf
                      u+poSD3q7T09QJhiO8hFm7xS1yo92AgmPJhPPTwVm6I9Q2hzvSIGRj0UG6u8fTnLPbQQhbwkAw29
                      ot4ZPWA4oTxX+GO9xSmBPakhmj1gJs+7qKajvNB/ObzzUGy9aQOEPSAe7jvQ7kA8nrYdPaBD+rxL
                      g549bSDLPckenT0PjqQ9wDkpOyiHHjyH5ag9dKzPPCqNRL2KrBG98GKwvfCYdbxAYQ88aipBvaQs
                      Br2038m8ITylPfDWWL022zE997itvQDhnTtAzDm7sKpwvfA8Sb2TEai9MkIuPSfes73hU5U9HsgE
                      Pbcmd73657q92E+nPHgyyjxqDmQ9ttBePWrxK70AjYA7jTo6vfVylj0aFwc9BRHEvSDhnTsrpqo9
                      lCXvPLCAJzx5Cbs9Mys9vaq+Pz0tw509PS5+vTVmhD3Atgw8TTu7vWChgrsAWWa85mEVPbNeV71g
                      0J87suomPfFmyT0goY07gK7dvKn8jD3jh229ALc8vIB6vr0YpFo8d3ezvTbXUT0akT09pPznPF01
                      cr0+F189wD0zPIs7ub2M5IK8sAUTPFDey71kb/Q8FNGNvMzvgLzzFH+9jS2ivcaBmL2oMgG8MJd3
                      PJXagD1IA6m9FEEOvQo1Nz05pZA9ypK+vcseuD2DbX69wIu9vZSYozy2f5G967+VPRiVgrzAati8
                      A86dPVQErrwgC508Ay9EvX6MQz3nzkK9uE3EvdiKYzxQCj68WnpyPVrgRj18EfA8eZejPXECpz0y
                      PsC9FbWSvfrpPT0O51w97TCzPUdFyb3BQoM9YaGiPdYOjb2Nf4U9+xWCPTATXDyrp5i9iucKvWLO
                      OT09zWm9aqB4vTDlRDyn4r69AmoAPcfVpD30M5g8U47BvUjqlb1QgIS7vCT+PODVlLxqFlM9MWWL
                      PYzUoLysEZM81qymvbgmirwOCQw9wNG7PIB2krsWFCs9ICyVPGhXWLzpI8Q9S0WqPYrwS70APqM8
                      6va+vXBwUrygShC7t468vW+7xb0PHZc9LGCBvCjw+bxYcbi8rgthPXelxz13DyC9WfDHPRS/+rzg
                      Uqi9jNurvPWZoT20hLS8YayqPVJPEz3g2Ii89DX6vNNvtD3Aihq723CvPbmCjD3cgv48LI33vNgX
                      +rygT9Q7t6pwvTR/mLwQmh+9qIFIvGKxbj0WX6e9h56SPXAVLLzKNEC9b6+wvcpnGD2sDQ69sG/s
                      O1UEir10gfk8/vIIPSxNl7xUxcQ89zyzPabvID1zwKU9cERWPIBmSrrATO+6/f6bPQD0arrm1Vc9
                      0vpcPU/6ub0OhjE9ozgrvYAFqDuQ1ho84AbuO6h6qLzxjpA94ntLPQPTqr2WBkI9SlgBPbxpg70C
                      nXI9XtAZPYCk47oAs4y8gmU7PQMiJL09LC292ONAPK49eT13dCS9jHiWPGj3CTxkDRm92kg9PVAD
                      EbwRfrE9rq0DPTHRgz1QB1q9mKA5POVIuL1QaHG8Om0EPfIfZj0d+D69pEryPKuTmD34Xpe82vsq
                      PUr5Ir3frK69171LvXfttj0bgKq9AAA+upKnHT0oHZ08Wmg9PXJtOz1x/7k9QfiLPaNuRL3w8QI8
                      GoWtvQBLMzwo6Wk8Jd6FPcb4dD0Mh4y8tSOHPRhTJLw9GbU9kmNSPZfgJL06ZjQ9dBgOvS1APL1Z
                      7bY90RS5PTQv5jzAj0q9ougMPeppGj1D6DS9k/S7Pbp1Cb1g7R47n1m8vXmbwz0tXE29emxGvaWO
                      rT0qBcy9JvKMvU0OzL2UjxO97MmwvDBXKjziggU9QN54vFlIrD1iaQE9gJ2TOr5Bhr33LUq9NRCM
                      vRiijb33bZU9jL+9PDFfsD1XbpU9MpYjPVyJBb1Y4Vu8aKwJvDMKHL18oPI8SdSoPeBmvrw9wUG9
                      AP40u9DDKrxTU7+9Lr2rvU2MnD0XJ7Y9TLSGPHDoHr14FrA8yr0QPSABhDty8Mm9ptIoPcUwyD0L
                      ppI9ukhQPQMzYL2bDaG9om5oPUhfxb028ha9LoBHPQrJST10Kp+8XeWqPWWXvz1Rdp893mQEPVXO
                      qj2kNwm9IEO+vCihuL0AqyY7zBuLvW+4hD1wQDs8TFXBPNiOazyfDaw9KSiAPRjBiDxo0Re8qgGB
                      vVyU2zxa8Ge9ytxoPeCbtrzDwni9J+C5PXl1hj2YZQU8T1a3PeKzlL3TS8K9k58avcbOIj0bd5M9
                      YLIZuwGkkz0jgim9vod7PQRTAb1XtD29P+eHPaVho72r6a69TNu1PKPCP7209N08gHmFPBlswT0A
                      FRy9IUGyPWEmiD2HWcY9i/G/PdqJe71gOBQ7kHaPvXXSpL0qWqK94+/APVjPkr3dHbG9MOb2OzhS
                      47wublA9GK58vDZkcD1QtNg7UjVcPVr1cz0oDJC9Mi9oPWCgPzsphsI9cNykvVOuvT10+Oq8esQ/
                      vQvvuT3NmJI9feacPchopb20hbS8MGuoOztNhT03m7k9JaioPdooC73AtFY88Il4vZIsSj2pOpM9
                      QXCuPaqifL0Kxkw9AjIBPR3vTr0yp349lk1PPVn1iD1AC+a6KC/UvFASA73uo1Q9ZNX5PLJObz2S
                      ygA9MX/LPUlvyD3ICKa8PdfHvbZXST3A4t66qNd1PKFAwD1m0XA9La+NvdZVRz2RqZU98KUHPHLH
                      OT3CfBA9Q8tRvSFZlD3alMC9sILqO8A9KbsW3o29GG29PBALk71gHvC8iKKjPMJkDD0oIGg8+kuT
                      vXLNTz2U4vG8Mn07PfKHaj2QUlI8ThyUvWg0Jrw2OBS9PtkwPUBHDDxWdCI9V+0ZvfT/l7xXgsk9
                      473BPVdTfr16hwq9+XO9PTTymrxYHCw8YyuJPWgpfjxMqc88k32nvWDIPb28ouk8oGx1vUDRg70Y
                      GVM8o99avRbzmb3T17U9UjArPf6Shr1U7/Q8FNCIPNe2wz25wYI9Fn8BvaO4xD2qx5G9SPKivHkt
                      oT165ga940OgPSMOwL1g7ua8wXmbPRx7Br0yom090CfdO/vBo71hqqI9wtFsPS2+H70ZKco9N+LC
                      vW3ZJ7382s88kxvBPbwkGb3gWK87uqV/PeUomb0jnT69gwZevejvN7y/fMg9QH5wu2gYkr2gGmi9
                      OxiWvZBNhb0wa5m7zNiEPIMLHr1oZcA8wGZvvZtBvL0d/Lm96klcPRLVED2Dv729QKUSvBZdFj1B
                      fbI9k+qvvdBblr3goqa9YqYFPZu2mD1v8bq9oPkWu2EmuD0Q00C8R8lQvefmnT1IH5u9gZGaPXhm
                      tLxAZYA6zNeAvUFMsz1U0K08u0DFPWq9x71gX7a9TOuPvHiqpTwB5YE93PrhPH34L73S+Fc9aG+1
                      POgD57yNoog9+scsvaDVMb2CZ0I9ql6KvTiajDzr58S9HTfKPQtlqL3M8t28LN3XvKsGpr1wmGq8
                      DrwAPf24wz3CZQQ9ILtIvSK5az2krhC9ykI5PUVCwb1qiSa9yaKCPcf0cb0rKsC9fpswPXxl8Tz6
                      k4W9XbN+veILcj31vsU9AIWiuxrghr1p2aI9AMi9ugX0jr39dVO9ACSEPDyu5TxA73m7Nh2KvY3w
                      j73gqsM7F9aZPZh9ob0+9Ew9g0WQPbU9lL36EZ+9DWTKPfm2xz3GoQU991BNvbDnyL0nALC9Jp0p
                      PSXGn72mrEo9IomRvUG+hz3q8bG9ErV3PYCZt7thJY89HYcrvYCmL7wKelS9IEbcuz2oPb0AXHG6
                      4LKavbBQx7v0hJk8IKYVvSs7rb2MmOc8E7ucPW+GvL1heJ09AICWNy5qRT1MOOw8RQ2DvQecfb3H
                      z1K9wF1LO3Vgqj1o4zc8R6SoPRSspry23j49iL2Rva/5uT2a1S49BNsDvWIJdT0bjbk91bqFPbJC
                      pL2sAJq8qBapPAv8nL3b4sQ9A/a3vbhPuL1gIaO7JtQiPRCcZb26s3c9BkILvZaOdD1MMtK8pF/T
                      PBITzL3S/QM9aGzHvNCkarxqgn89IKiPvbarpb3aJkq9KpFSPa0vlL0V68s9gl8sPcXyyD0ahmS9
                      MDEbvOaidz1gdsG7UnK/vUAbkbrHR6E9X3iuvcB4MjtgZpc7hA2Mvf0kfb23VYQ9YejCPbOUP737
                      4Jq9diAGPU3zWL3quD29400nvV0vSL2iPmY9pDr1PNRmubxRpsY9jYhsvaj3xr1Di2C9c+ebPQOz
                      bb0Tvzm9fcaYPYnxyT3gXgW9OI3JPCgchL3URba8kcCkPeByVr1DuaA90gQKPUhxs7zYFfy8Q6Ej
                      vYxDvDw9eVi9DS6iPZrJbL0ayMm9OoRVPYD7kbuBnK49cxa/PVTfCr3BH6A9OjkSPYCYPjwH6sm9
                      +tgwvTjfzbzdgcU9E4A/vWkkhj0tR6G90S2+PYaxAz3KNR+9/EICvQIOhr1HKbq9eRXDPcB6DryK
                      GZO9qHArvACsQbujQLG9BqmkvXLxtr3rEYw9UIeavWrvFr366WE92lYCvSC1cr2gu8i98uEtPZ1z
                      nL3UEgO9DW5UvbY2VD1vcsc9UN+wu8gNqb3K2IW9DDCevNj+NTx3zWO9tMHZvLavWT0hgZ09mg+d
                      vbAmFL0vdZc99g+fvek6uD0gEa+7tJ/5vACulbzUt5u8NXaDvYB9gjoADts7hFjiPFeacb2gidu8
                      Yd/FPZAaVbztWB69XZx+vZd/vL04qou8l4c4vTpHRj1AvgE7Pi2ivUi4pb0y7HA9XbCLPYGRmT2T
                      JlS9/0eFPVjBvTxdHoE9GpQ0vZiPFLyAqDW8gElivRs/uL2gQKu9un56PVPvbL2XXB+9wkq0veAU
                      njuz70e9DpB7PYC4ILwoeg08yJnBvBCha7ygooG95xawvdvOgj3nnz29xjFQPXiloTxQCpI7AEQV
                      Oe+srz2BgIM9IoA0PXuxqD1GoAm9ARSwPbPowD2tyqS9FtkLvZhstbzNMIY9Gp4uvb4rWD3o/629
                      wEvLvUMPvL0wb8s7xeaLPb0ZmL0ipV49ecusPfsrlL1SzR49uAiWvOw+jDzAWQE7jvJ0PRhcbjzs
                      F4O89KCrPBp0az3MBLI8FveavWjhSTxgxHS7wEtdO7DQlr3yvww9bzPJvV1Ulb0kRBi9BlUxPVvn
                      yL2p26U9wgkXPQTL9jzz0I29lAbWPPJKJD1LsLK9TwGHPfSJuDwxL8g9+RKKPXiFyDxKjU09gF8Z
                      vBHqpj3S21s9AAieODNer70b/sm9YXG2PQkjxj1kQM48xX6LvbGLrz1IU6692zqkPblhsz3C6gg9
                      zXFUvWjd97yXiiK9LUTIvQLZRD0AuvW5VA+BPHVNh71pW6M9p4AivdCkkb3pUMc9bO3cvLIwy71x
                      06U9KY+8PSWQgb0u0hw98rFAPQ5iGz3d9za9h/hJvYAWlbswap47QgOavXIfxb0wcvk7XaehvRi3
                      eLzQBmI8WvI8PYY5BL2D9Ja9L5HEPbhXnDxGV3k9qCPnvCztz7ytO3O9+hUUvYz41LzQSvo7AhlA
                      PVjo47xMLLI8vZrBvcLSMD0aR369QD5HPMloqz16j3E93YOgPbCJIrwrp8w9WP5MPBcqmz2HPsq9
                      98dTvembyT1oDYu8vt0SPZ1Jer32IWg9CJClPPpIqr2QGZ+9T1y6PUDbM7ufMps90hStvYP7k72N
                      9rA9h1zHPXraHj32GVE9yNWLPNCnVrzAbom8KD1tvFCbaDxHEGq9GkC5vXJNNT1mGEo9AIGTvaWC
                      pL1gEee8aL13vGC2yL2tVbq9LZO2vTDIoTt9d5Y9+N35vLi7kTwrmb+9ShABvfpDEL0iRUc9c/LE
                      PdirZLxU8Iy8wD8rO7F7rT1YeAs8DbcwvSiHYLyQFiM8Q9w9vZSesDzcboK9ACZfuQD+8jvzR409
                      oWaRPRYQaT3GKqi95aTIvTBbu71UW7O8mmAYvad/YL23SbQ9PMvSPG5Mcz0I2MY8AdnLPTcOXr3P
                      38e9gIi9vfcRUL2eUkk93+SoPRMeOb1om3s84SOSPYNRPr26h6C9ruh4PUBr2rwCS8S9FS+8vUWI
                      kj3NvIK9ALpDueC2r7yvYqU9it8qPZaGez1gWeU7MC54vDYjBL0yl2A9XMwAvf22QL11n709U/B1
                      vfF1pT030zu9ugssvQA2qTkR8Jc9wrN5PfLSIT3SV4G9NziTPUjbt71jJMq9p7krveJMdD2NeqM9
                      XKaAvU0sLr0AxsO5qOYovJM5jr1x4Iw9op9jParhAr2w6Iq9NJjIvPDsEDyUSfs85N//PBrsbr2I
                      lZ28wOJfO7nvgj2KMi89TmZwPSbPqL1N43a9R8+qPW43cD0geJK9gbOMPaLcJz0atrK92Z6sPbBK
                      jr2nLjK9PabDPYFYyD05eII9WgWxvdxjDL3OKHM9mFaTvfeDij29dKa9t4d5vcpgRL1pxb89Nxew
                      PQDGdL0whgW91UW5vdAidTxG4XU9oCqGvYDi97zH/pw9COWpPImroT3A5TM83jdoPSjuIbw907A9
                      GRS+PdrgTz0GMxM9cLVQPCkHtj0RY8o9nlZoPcAMVrtMjIG9kZ+oPaBY5LuJmYY9XdJJvUAYTLwG
                      fEE9nInyPF0Ilb20jc28GudXPeXVrL0x9K49wKw6PGaNLj09HEW9L0zKvbDoHr3ANN+8It/CvQBB
                      fjxytwM94HCZveKGfj1UEZU8dGkZvVgRUjyAJLG8jIOHvRBqBb3X08Q9ViVKPZqROr2U0e88pUSC
                      PUAQFzuQtLe9oHGMuwArhr1xgsI9CiVPPcQe7DxdL6a9ZYm1vejZ/rxwllk8HlpGPWYvRz1Vmq89
                      cPCQvdzACL1jVkO9R+Gxvbkfsz37W5Q9u2erPTCv+jtgEbW8mIXSvNgwUTwgyum7/9OuPaBP1LuH
                      EMY9WNFQvFgwmzzgBj29Mg12PVxC3TwstLM8foFUPcmbhz0oOKc83L3oPOgLUbyyVhU9f9ymPVdY
                      nz0cP4S9xDwZvcx7/rye9pW9aHAuPEphJT2+12Y9d64mvcAJQztiuQQ9h79evUitv73YZzk8XePK
                      vbITLj1icqS94h0rPddOcr1H6Zo9dG3fPO5Tcz3KA269aFHGPJ0lxD1iYpO9XdLCPaNCJ71gWpc8
                      UDgvva1Lcr0YN/u84CrGvYtmwr1AEMs8d0tKvUrSn71oEd684sIzPV6TGz1qdi09Q7+cvRDIcDzU
                      Gtw81PyfPIN1vb2AMpO95YG/vWgpZbx4W7a9HXhNvdryQb1SXDI98gmGvWf+yb36yAW9APHEO0AW
                      eTzoxx+8UNShO5oaK70xTKM9inwhvaO9zD07usG9KvJevRIeLD3ZErU9E1I+vTI9j71m5DY9vVNm
                      vXRgoLw0as28ewOsvR52eT1YE5m9QEZZO0rrrb3Ivay9oT/LPZGxrj0UF7i8qFPhvM5plb1UzMe8
                      +iqhvVNOqL1qlD+9ASuwPZXXu72Ywaa8hsx+PeuMpL2YqB68LUtWvaIhQD0QsrK9tQyTPWNIvb1w
                      dC28uGyRPNhCiDxI//C82ghpPW/bwz0Q5Cy8DU2MvYDKZb1onpI8N3Q3vbGiwT1Qocy93YuZvQqf
                      Bj2IMsi8oUWIPag8JjxK7Wa9wj9VPfPcpj2d28k9EAJpvAhNpDzgQHO9XfeJvd9ks73ymcS9Dtg+
                      PQ7QXT0n28C9amIgvZMcLL0WaBG9qoo3Pbp+Oj2J87w9fKP+POoayr20NJC8dx/FPQ7FCz08uIe9
                      2rdyPTRzzLw+ISY9gFCtOz6dQT0CU1M90HAIvC1dvD297ZC9iPfZvCqGn73E5IC901xtvU0CrT3K
                      fm49yQSWPcsAmD2QwQ+8+3WzPRQG/Lw9BX29i3LKPV17oz2AZOK8uWO0PQSL9zzAqGa7XQGVPUSf
                      6jzTcl29AOWiOUCXMDvKazA9BZeavWsDhT3Yx0q80BzZOwfrur0fpoQ9AID9t9jms73noym9JhSa
                      ve3ehT2P3669xrZNPc5fNT1jPz69aPACPEdVtL1zB0a9GcyQPYDWxzrSiLa9Md6tPSjv5Lzeq1o9
                      J7LMPQA5ErqkgfI8pp2ivSGFvj3i6Ug9sHqEvUBYY7wwszS9eDG4vSDYubuD1Ks9TVyYvS+goT27
                      iJI98CtdvUBCNzyw5+c73n8gPYDe2Tq6+Xy90E7AvQa/dj2dll29pSSYvfo4er0ds7Y9iJK9PIAZ
                      VrzC3nY9chNoPRiBALyygsm9rsFzPWcQtj1gite865K2PXAzBzzA5sO81DGaPFu/iT04doG8Kr4A
                      PUvoiT3AD0Q7cIEhPOwizTySMsm98S3HPSx8Fb0CmH89OdG3PVkQkD0BgKM9H5GSPVNlS72tEJc9
                      tdPFPfZEGL05Q6Y9wQOJPcbRDL3wADC9KVeBPWBw8ztdW2q9lQqPvf6sTD0XYT29F8K2vS/lx71y
                      3Dk9IM6vPFeBx70AK0E7TDWqPEA0q73wzwm8VROPvZ6rGT1IjJq9PqNYPZSl6DycLOo8M8c/vSmw
                      vz3Qa9g7ABwKuWBUHbverZe9KOuJvUx98byZv8o9sIyAuxkqyj2gYVA78L0FvS7LVz0NGLA97ROf
                      PYjetb3QIEq9EqmJvRMypL0ABWm7MH9BvDWytD0eqAY9slmnvQDL6rvAW3A8ovJ1PcDyYTxACZS9
                      wgQQPcTn2Tz424488N5RPJDIT714Koq9IJygu1rcLr26SEw9+z+lvXD/m73zJLc9IrZxPShPurzr
                      NJ09cRS0PajuQzx/2Ky96FrSvKNkzD20lcE8CHfCvVHavj0ZZcY9SPy5vMCWRrsQyHm9f6LIPcyL
                      4jyvVYk91+2tvWVtnD0eYVw9UxtjvdC/mL0IApw8YNLBPC4BQT24zLw8HAHTPP52p70pO8g9w6Bj
                      vZh7GzwaYzG9ns8DPeYFOT3SCQM9bN6AvADb5zmikB49sxdwvbIETz1xArg9c7p+vSFfiT3gbpQ8
                      JwN8vZRZuDyvo629lsULPZhftLy6b5+9DXxkvSQN6jzd27I9qHs8vHbMjL2oKoA8qfDEPcBjfDv9
                      mbc9QiwBPZj/s7wgfoM8zsxdPYEDsj3Mp/c8ECIGvQ3ivz0BQqs9tBOWvBdJdL2w9Gs86g9Qvcgq
                      mbyQA0u8+pQFPQrOJL2xLck9AK0YPDgzlb3S7y892p1JvTgfyL3R58s90gEjPfnItT00GOI8pyu/
                      vZPQuj1Cuyg9k6+VPcCVab1aNh+9KOJuvJP4S70Q2B484O+8vVfxd73AGv+8GttcvbC3s7vwoFa8
                      uUSvPW3NuT3QOnk8inW8vY6tkL0OcVU9mEiPvUDbIrxAr8W9UGRpvE1MU70oSDC8oOoDvTTXBL14
                      YNq8oBUNu+LdYz1ASbA8U1s1vVMdsj3h/KU9KHEzvO9rrj0V57i9jJySvDB+y70twLy9AktnPWhO
                      fzzhAps9XfOivQHhxD3kKdA8JdyQvaCAqzviBp+9SESQPJIeKz30XqS8gDbTvKfQU73nAXK9uiJg
                      Pd0PH73AQ3y9D1K+PY2mjT0yTrS9gKcYvDuxjb36a2q9gLEgPNouMD3Q+rW7RL7uPEhLjDxATrC9
                      KwCrPcoBmr3axVQ9OMyrvSC9vrzgWqu8fl5hPai1vL3AoRK9RFXbPIAksTuwq1C94/skvYATnb1v
                      Ba69HeaEvWjrijzYC1k8PR1JvSGHrT3rG6w97hGRvWg9BDy6Qk09BEsOve9Urz3dz4C9of2/Pax/
                      xby34ke9B3trvU4HIz321ys9n5TDPeqBkr3YeEw84SCCPYN2mL3guKo8dwewPd03rT2C/WE9wTnB
                      PfjXxr2x6qc9meKVPdtyq700ypG8ACQsu2BMkrxFYry9S2m1PTtZgT3YUpE8QFUiu6kmxz2hBcQ9
                      WFLmvDit87wC4ZO9GMwDvLBtMLzA3As7RxHMvViezrwpa4c9Kvx4PeSv+jySDhY9AmMbPfjAvL3U
                      d4W9kxSXvQwAs7xGjgI9ELM4PJ8czL2z2Ry9ZQyKveKFZj1g5qI76glavZwJzzxGpxK9WMGyvIDi
                      Ajw42aG9EAtfvJoaLb3AFmq7iCSHvOGgjz3uEk89awOyvQuJwb1QIrm900krvacANr1lvoc9ncC2
                      Pc4WRj2yig49IqI8PYaCm7142aA84WSHPQgplLw6Qig9cZSlPbgM+LxNXKE9rJeNPEcNbb0Vp7e9
                      KAD3vBIZm73XNVW95Z+oPfU8sL1AwGi8dvZaPUUinb3Q+ec7VL+LPEq+wr3GV0c92ldpPWxvxjxW
                      SxC9sOdLvNhj7bwQGUS9q0mLPYs0yj3GkmA9WPdGvPkTwD3kDOU8irWXvciAvjwE2AW9sJoQPECA
                      pbw0nvs8BqYHvVRy3DxYVns8eROePYA5IrwQ2iC9vPLfPIkZwT3Kzwq9w8BYvWJRl70GXiY9inAJ
                      vTrZUT1pp6E9koRRPaE8tj1h24A9Q3KzvXqDXj1XMDi9+swYvRGmqT2aMny9npE0PY1vmr0jfUO9
                      ct9OPWraB72me2A9vlFCPQIiBD1RBpY9C1S4vZHciT0M6eq8+dSiPcdqyL2RDK09yvQtvcxq9by4
                      Jp08Z13IvYD8wboo16280ImSu1cGsb0YVaq9X4+2Pf2NvT1JQZ49mTGbPc0ISL0M0sS80d/EPWWm
                      nT1ZeK894D21O1mwoj2CjZW9I/+JPSJ7vL2AVmy67rajvdlquT0qGBU9AIo+vYp0Wz3wdbi96Pas
                      vP2huL0lPIo9ekRSvRd3jz3sEae8ByHHPT+/wL2Hw629NPiEvL4BKj3KAyu99upBPcAqc7yM4ua8
                      YvWhvUAKXryhDps98Eh4POzrg7yYFbC89J3IvOD3rL3ClCQ9dLucPKo3QL00JaI8rSGWvdkugz3S
                      Hom9UIpivdkmmT2GzD09mPdxPHyN6TxBMIU90BNwvF1tW70U2608KLirvamwtz34RK88mNmWvNcF
                      sj1QPyG9gJZ4OvXlmD3dH509DsMnPYCaerrEnw+9EnRlPZR2mjynTTm9HogNPVEAkT2hiLQ9hL/p
                      PICWQbzvcMg9wAkivHYebj2ExgK9M552vTJrYD2ivbm9XXiDPUf1d70ZAKo9RcWvPa3+pT2dno+9
                      et6BvWD5EbtMiMC8SnSRvfCoEb2gk74869iSPVjrmbxKcGK9EhsVPdAfCL1iljk9aBBNvFKPrb06
                      Jy69QlFBPcBlMDugDR27kBe4vfZIFj0Nnq69HzbEvaC0H7102LO8fUluvfPwxD1wLEq9Kq9BvRoT
                      FT0Y4UM8E2YbvZhmFDzUfva8AHtqvdhxWbyv1JM9MN87vBAoK73cAeE8DPSiPKAZ0TtVbYc969Kw
                      vcCKhb1re7K9vmdyPTBelb21qqo9Wpt0vf0qNr1nBHi9OJS9vGITIT2Lmaq9jl9bPcuesj0DIHW9
                      XCgKvaATtLzDqh69
                  - 0
                  - !!python/tuple
                    - 100
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTgxMDU3NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzI0OTgxMDU3NnEBYS5kAAAAAAAAAKC7HDtR4aY9SsmxvRUGzL0ZlLE9TLToPPRxjLymES09
                      xvsxPdTN+DywG9u7by2yvaCAi70sffk8CrwTPfDMgL3Y/z28p1ecPdjXvTzoObC9IMeivVC29ztA
                      L2G8DkoLPaoGur3eIxo94m89PQBqxLtTnoI9//6LPU2mvj0cbvs8cFBUvSQq3TyPyqw9AFlnOtRV
                      pDzC2i89+uUTvQIoi7067Gg9OpmnvfSclzxDEh298X+VPe0jgz2Anjw8shsKPXIpuL3VVbO9VlIE
                      PVDW9bswgY+9cvdCPUO0ob1NCGO92PwFvL3oab1M/bM8YSGqPTb6OD3KsX09M+CAPYA4hrqF1La9
                      umwBvQDWWzmgNlg7YENTO6aCDr1QVu+7auBbvf0byT1Yz288ssFNPQcriz36mQM9vfOgPbZ5Db0W
                      SZq9QZGePVhr8rxI1Ly8mlsbPUAfhb2R9b89eIqxPAm+gT2gM+k75CLWPBnzhz3UaYm9Oq+BvY3k
                      xj2sY4u89l82PTx+C71B6sM9bURvvRAxIDw=
                  - 0
                  - !!python/tuple
                    - 100
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 100
          training: true
      - - fc2
        - !!python/object:torch.nn.modules.linear.Linear
          _backward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _buffers: !!python/object/apply:collections.OrderedDict
          - []
          _forward_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _is_full_backward_hook: null
          _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
          - []
          _modules: !!python/object/apply:collections.OrderedDict
          - []
          _non_persistent_buffers_set: !!set {}
          _parameters: !!python/object/apply:collections.OrderedDict
          - - - weight
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTgxMDY1NnECWAMAAABjcHVxA0tkTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzI0OTgxMDY1NnEBYS5kAAAAAAAAAABS97nsBIm8DQCWPXDFDjxXm2O9TgqTvbKffT3APro8
                      S86tPQErnz3DurC9I2gfvdpHYr3ww3k88G3Eva30nr3r4K89c/OjvYBqI71g6DS7UrJIPe+XwL1k
                      xYm9GTnIPYDdIjzxma49PpysvQagPz0TU789FsmbveXLtj2yomQ9ouBIPR9BtT34Yo28ALBTPCgH
                      8Lzd57S9eIaDvKJtv73ovhs8AjAxPQBNJrv52aQ9cDZ2vcEJsD3SXYK9a7WavZJDUj0GFEM9YxGS
                      PUZMFz0nlsO9/dk8vYCFlLw93rY9AC75OjGsrj1v/K+9hqFGPcpREz3K7Vg9PeWiPTAcrbvb2Ls9
                      pyV5vai+lLypco89wMqJuoDryL2PHrI9QLd9u5Sl6Lz2MKS9reOePcz9zTwwxaU7P2aCPQBV4zu3
                      xi+98NEvPPuEnb3oMgm8dU6hvfugxb3q73A94ceiPZ36W72g6Zm7MFeuu6Aq87sE+dI8pCLtPH4k
                      YT3AjG47QEI5vcMywD0RkqM9q36QvUdjab0=
                  - 0
                  - !!python/tuple
                    - 1
                    - 100
                  - !!python/tuple
                    - 100
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
            - - bias
              - !!python/object/apply:torch._utils._rebuild_parameter
                - !!python/object/apply:torch._utils._rebuild_tensor_v2
                  - !!python/object/apply:torch.storage._load_from_bytes
                    - !!binary |
                      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
                      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
                      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
                      Z2UKcQFYDwAAADEwNTU1MzI0OTgxMDczNnECWAMAAABjcHVxA0sBTnRxBFEugAJdcQBYDwAAADEw
                      NTU1MzI0OTgxMDczNnEBYS4BAAAAAAAAAPgzoL0=
                  - 0
                  - !!python/tuple
                    - 1
                  - !!python/tuple
                    - 1
                  - false
                  - !!python/object/apply:collections.OrderedDict
                    - []
                - true
                - !!python/object/apply:collections.OrderedDict
                  - []
          _state_dict_hooks: !!python/object/apply:collections.OrderedDict
          - []
          in_features: 100
          out_features: 1
          training: true
    _non_persistent_buffers_set: !!set {}
    _parameters: !!python/object/apply:collections.OrderedDict
    - []
    _state_dict_hooks: !!python/object/apply:collections.OrderedDict
    - []
    encoder: !!python/object:gqe.energy_model.network.SymmetricEncoder {}
    gpu: false
    hidden_dim: 100
    training: true
  sampler: !!python/object:qwrapper.sampler.FasterImportantSampler
    indices:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    - 17
    - 18
    - 19
    - 20
    - 21
    - 22
    - 23
    - 24
    - 25
    - 26
    - 27
    - 28
    - 29
    - 30
    - 31
    - 32
    - 33
    - 34
    - 35
    - 36
    - 37
    - 38
    - 39
    - 40
    - 41
    - 42
    - 43
    - 44
    - 45
    - 46
    - 47
    - 48
    - 49
    - 50
    - 51
    - 52
    - 53
    - 54
    - 55
    - 56
    - 57
    - 58
    - 59
    - 60
    - 61
    - 62
    - 63
    - 64
    - 65
    - 66
    - 67
    - 68
    - 69
    - 70
    - 71
    - 72
    - 73
    - 74
    - 75
    - 76
    - 77
    - 78
    - 79
    - 80
    - 81
    - 82
    - 83
    - 84
    - 85
    - 86
    - 87
    - 88
    - 89
    - 90
    - 91
    - 92
    - 93
    - 94
    - 95
    - 96
    - 97
    - 98
    - 99
    - 100
    - 101
    - 102
    - 103
    - 104
    - 105
    - 106
    - 107
    - 108
    - 109
    - 110
    - 111
    - 112
    - 113
    - 114
    - 115
    - 116
    - 117
    - 118
    - 119
    - 120
    - 121
    - 122
    - 123
    - 124
    - 125
    - 126
    - 127
    p: !!python/object/apply:numpy.core.multiarray._reconstruct
      args:
      - !!python/name:numpy.ndarray ''
      - !!python/tuple
        - 0
      - !!binary |
        Yg==
      state: !!python/tuple
      - 1
      - !!python/tuple
        - 128
      - !!python/object/apply:numpy.dtype
        args:
        - f4
        - false
        - true
        state: !!python/tuple
        - 3
        - <
        - null
        - null
        - null
        - -1
        - -1
        - 0
      - false
      - !!binary |
        vHBrPCeerjy3V5U8t1eVPJhGSzy78388HPugPBz7oDy9rBw8hQSGPMEdTzzBHU88vawcPIUEhjzB
        HU88wR1PPBWcFTzeLk48qK1kPKitZDzaWic8759ePEuKgzxLioM8UHkIPL7HIzxJUSs8SVErPFB5
        CDy+xyM8SVErPElRKzwijzE8cht5PJorRzyaK0c8nmdfPA7OkDy+YZQ8vmGUPAAvMjw0mhs8PyMd
        PD8jHTwALzI8NJobPD8jHTw/Ix08Io8xPHIbeTyaK0c8mitHPJ5nXzwOzpA8vmGUPL5hlDwALzI8
        NJobPD8jHTw/Ix08AC8yPDSaGzw/Ix08PyMdPBZeGjv1ItA6tVzzOrVc8zoWyzI7Jv8NO6DE4Tqg
        xOE6IvlnO2qYBzteei87XnovOyL5ZztqmAc7XnovO156Lzt/7XI7r0UwO6LuHjui7h47VytZO/tA
        IzswJgo7MCYKO6snhTvC6F07ZiVUO2YlVDurJ4U7wuhdO2YlVDtmJVQ7T7BMO/3lETuMejY7jHo2
        Ow+vIjsF/fo6IfD0OiHw9Dqn+Es7apJpOzBKZzswSmc7p/hLO2qSaTswSmc7MEpnO0+wTDv95RE7
        jHo2O4x6NjsPryI7Bf36OiHw9Doh8PQ6p/hLO2qSaTswSmc7MEpnO6f4Sztqkmk7MEpnOzBKZzs=
